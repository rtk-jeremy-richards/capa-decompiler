{
    "00401000": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00401000(void)\n\n{\n    uint var_4h;\n    \n    // [00] -r-x section size 8192 named .text\n    return *(*0x41a404 + -4);\n}\n",
        "token_count": 49
    },
    "004014d0": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.004014d0(void)\n\n{\n    for (*0x41a410 = 0x21; *0x41a410 < 0x1487ce1b; *0x41a410 = *0x41a410 + 5) {\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00401840": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00401840(void)\n\n{\n    *0x41a410 = 0;\n    *(*0x40800c + 0x13) = 0x2d;\n    *(*0x40800c + *0x41a410 + 0x14) = *0x41a410 + 'b';\n    *(*0x40800c + *0x41a410 + 0x15) = *0x41a410 + '8';\n    *(*0x40800c + *0x41a410 + 0x16) = *0x41a410 + '3';\n    *(*0x40800c + *0x41a410 + 0x17) = *0x41a410 + '4';\n    *(*0x40800c + *0x41a410 + 0x18) = *0x41a410 + '-';\n    *(*0x40800c + *0x41a410 + 0x19) = *0x41a410 + '1';\n    *(*0x40800c + *0x41a410 + 0x1a) = *0x41a410 + '1';\n    *(*0x40800c + *0x41a410 + 0x1b) = *0x41a410 + 'd';\n    *(*0x40800c + *0x41a410 + 0x1c) = *0x41a410 + '0';\n    *(*0x40800c + *0x41a410 + 0x1d) = *0x41a410 + '-';\n    *(*0x40800c + *0x41a410 + 0x1e) = *0x41a410 + '9';\n    *(*0x40800c + *0x41a410 + 0x1f) = *0x41a410 + '3';\n    *(*0x40800c + *0x41a410 + 0x20) = *0x41a410 + '2';\n    *(*0x40800c + *0x41a410 + 0x21) = *0x41a410 + 'f';\n    *(*0x40800c + *0x41a410 + 0x22) = *0x41a410 + '-';\n    *(*0x40800c + *0x41a410 + 0x23) = *0x41a410 + '0';\n    *(*0x40800c + *0x41a410 + 0x24) = *0x41a410 + '0';\n    *(*0x40800c + *0x41a410 + 0x25) = *0x41a410 + 'a';\n    *(*0x40800c + *0x41a410 + 0x26) = *0x41a410 + '0';\n    *(*0x40800c + *0x41a410 + 0x27) = *0x41a410 + 'c';\n    *(*0x40800c + *0x41a410 + 0x28) = *0x41a410 + '9';\n    *(*0x40800c + *0x41a410 + 0x29) = *0x41a410 + '0';\n    *(*0x40800c + *0x41a410 + 0x2a) = *0x41a410 + 'd';\n    *(*0x40800c + *0x41a410 + 0x2b) = *0x41a410 + 'c';\n    *(*0x40800c + *0x41a410 + 0x2c) = *0x41a410 + 'a';\n    *(*0x40800c + *0x41a410 + 0x2d) = *0x41a410 + 'a';\n    *(*0x40800c + *0x41a410 + 0x2e) = *0x41a410 + '9';\n    *(*0x40800c + *0x41a410 + 0x2f) = *0x41a410 + '}';\n    *(*0x40800c + *0x41a410 + 0x30) = 0;\n    *(*0x40800c + *0x41a410) = *0x41a410 + 'i';\n    *(*0x40800c + *0x41a410 + 1) = *0x41a410 + 'n';\n    *(*0x40800c + *0x41a410 + 2) = *0x41a410 + 't';\n    *(*0x40800c + *0x41a410 + 3) = *0x41a410 + 'e';\n    *(*0x40800c + *0x41a410 + 4) = *0x41a410 + 'r';\n    *(*0x40800c + *0x41a410 + 5) = *0x41a410 + 'f';\n    *(*0x40800c + *0x41a410 + 6) = *0x41a410 + 'a';\n    *(*0x40800c + *0x41a410 + 7) = *0x41a410 + 'c';\n    *(*0x40800c + *0x41a410 + 8) = *0x41a410 + 'e';\n    *(*0x40800c + *0x41a410 + 9) = *0x41a410 + '\\\\';\n    *(*0x40800c + *0x41a410 + 10) = *0x41a410 + '{';\n    *(*0x40800c + *0x41a410 + 0xb) = *0x41a410 + 'a';\n    *(*0x40800c + *0x41a410 + 0xc) = *0x41a410 + 'a';\n    *(*0x40800c + *0x41a410 + 0xd) = *0x41a410 + '5';\n    *(*0x40800c + *0x41a410 + 0xe) = *0x41a410 + 'b';\n    *(*0x40800c + *0x41a410 + 0xf) = *0x41a410 + '6';\n    *(*0x40800c + *0x41a410 + 0x10) = *0x41a410 + 'a';\n    *(*0x40800c + *0x41a410 + 0x11) = *0x41a410 + '8';\n    *(*0x40800c + *0x41a410 + 0x12) = *0x41a410 + '0';\n    return;\n}\n",
        "token_count": 1499
    },
    "00401de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00401de0(void)\n\n{\n    uint var_4h;\n    \n    *0x41a530 = (**0x41a444)(0x80000000, *0x40800c, 0x41a514);\n    if (*0x41a530 == 0) {\n        return;\n    }\n    do {\n    // WARNING: Do nothing block with infinite loop\n    } while( true );\n}\n",
        "token_count": 94
    },
    "00401040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401040(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    return arg_8h * 0x229;\n}\n",
        "token_count": 42
    },
    "00401190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401190(void)\n\n{\n    for (*0x41a410 = 0x21; *0x41a410 < 0x1fb451b; *0x41a410 = *0x41a410 + 4) {\n    }\n    *0x41a3c4 = fcn.00401000(1);\n    *0x41a434 = _sym.imp.KERNEL32.dll_VirtualAllocEx;\n    *0x41a410 = *0x41a3c4;\n    fcn.004012e0(2);\n    return;\n}\n",
        "token_count": 131
    },
    "00401210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00401210(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_18h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = *0x41a408 + *0x41a3e8;\n    iVar2 = *0x41a404 + *0x41a3ec;\n    for (var_8h = 0; var_8h < *0x41a41c; var_8h = var_8h + 1) {\n        *(iVar1 + var_8h) = *(iVar2 + var_8h);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "004012a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012a0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    **0x41a440 = arg_ch + **0x41a440;\n    return;\n}\n",
        "token_count": 54
    },
    "004012d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004012d0(int32_t arg_8h)\n\n{\n    return arg_8h + 0x13f7;\n}\n",
        "token_count": 37
    },
    "00401370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401370(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004014d0();\n    *0x41a3fc = arg_8h;\n    *0x41a444 = _sym.imp.ADVAPI32.dll_RegOpenKeyA;\n    *0x41a3dc = &stack0xfffffffc;\n    fcn.00401060();\n    *0x41a448 = _sym.imp.ADVAPI32.dll_RegQueryValueExA;\n    *0x41a404 = fcn.00401690();\n    fcn.00401190();\n    *0x41a3e8 = 0;\n    *0x41a3ec = 0;\n    *0x41a3e4 = 2;\n    while (*0x41a41c = fcn.00401d60(*0x408008, *0x41a3c8),  *0x41a3e8 < *0x41a3c4) {\n        fcn.00401210(0x17);\n        *0x41a3cc = *0x41a41c;\n        *0x41a3ec = *0x41a3e4 + *0x408008 + *0x41a3ec;\n        *0x41a3e8 = *0x408008 + *0x41a3e8;\n        *0x41a3c8 = *0x41a3c8 - *0x41a41c;\n    }\n    uVar1 = fcn.00401cc0(4, 0x241);\n    return uVar1;\n}\n",
        "token_count": 382
    },
    "00401690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.00401690(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_1beh;\n    uint var_14ch;\n    uint var_9ah;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 200;\n    var_4h = 1;\n    while (iVar2 = (**0x41a448)(*0x41a514, 0x41a420, 0, &var_4h, 0x41a44c, &var_8h),  iVar2 != 0) {\n        fcn.00401690();\n    }\n    if (*0x41a44f == 't') {\n        *0x41a518 = 0x408088;\n    }\n    *0x41a3f8 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    piVar1 = *0x41a3f8 + 0x3c;\n    *0x408074 = *0x408074 - 0x14d;\n    if ((*0x41a3f8 < *0x408074) && (*0x408074 < *0x41a3f8 + *(*0x41a3f8 + *piVar1 + 0x50) * 4)) {\n        *0x41a3d0 = 0;\n    }\n    else {\n        *0x41a3f8 = *0x41a3fc;\n        *0x41a3d0 = 1;\n    }\n    *0x41a51c = *piVar1;\n    return *0x41a518;\n}\n",
        "token_count": 374
    },
    "004017b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004017b0(void)\n\n{\n    *0x41a52c = **0x41a438;\n    *0x41a524 = *0x41a520 - 2;\n    *0x41a528 = *0x41a52c ^ *0x41a520;\n    **0x41a438 = *0x41a528;\n    return;\n}\n",
        "token_count": 88
    },
    "00401cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401cc0(void)\n\n{\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    for (var_4h = 0; var_4h < *0x41a3c4; var_4h = var_4h + 4) {\n        *0x41a440 = *0x41a408 + var_4h;\n        fcn.004012a0(0x7d, var_4h);\n        *0x41a520 = var_4h + 0xd7;\n        *0x41a438 = *0x41a440;\n        fcn.004011f0();\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "00401d60": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401d60(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h < arg_ch) {\n        arg_ch = arg_8h;\n    }\n    return arg_ch;\n}\n",
        "token_count": 77
    },
    "00401080": {
        "rules": [
            "log keystrokes via polling"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00401080(void)\n\n{\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.GDI32.dll_GetTextAlign)(3, 3, 3, 3, 3, 3, 3, 3, 3, 3);\n    (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    (*_sym.imp.GDI32.dll_GetDCPenColor)(3);\n    (*_sym.imp.USER32.dll_GetClipboardOwner)();\n    (*_sym.imp.USER32.dll_GetThreadDesktop)(3);\n    (*_sym.imp.USER32.dll_GetCaretBlinkTime)();\n    (*_sym.imp.USER32.dll_DestroyWindow)(3);\n    (*_sym.imp.GDI32.dll_CloseMetaFile)(3);\n    (*_sym.imp.USER32.dll_GetKeyState)(3);\n    (*_sym.imp.USER32.dll_IsIconic)(3);\n    (*_sym.imp.GDI32.dll_CreateMetaFileA)(\"cFoCOkLxG \");\n    (*_sym.imp.USER32.dll_GetTopWindow)(3);\n    (*_sym.imp.GDI32.dll_FillPath)(3);\n    (*_sym.imp.USER32.dll_GetSysColor)(3);\n    (*_sym.imp.USER32.dll_GetListBoxInfo)(3);\n    (*_sym.imp.USER32.dll_GetKeyState)(3);\n    (*_sym.imp.GDI32.dll_GetFontLanguageInfo)(3);\n    (*_sym.imp.GDI32.dll_GetSystemPaletteUse)(3);\n    (*_sym.imp.GDI32.dll_GetSystemPaletteUse)(3);\n    (*_sym.imp.GDI32.dll_GetLayout)(3);\n    (*_sym.imp.USER32.dll_IsWindowVisible)(3);\n    return;\n}\n",
        "token_count": 555
    }
}