{
    "null": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00b91287": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t ** __cdecl fcn.00b91287(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t **arg_14h)\n\n{\n    uint32_t arg_18h;\n    uint32_t **ppuVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint32_t **ppuVar4;\n    int32_t iVar5;\n    int16_t iVar6;\n    uint uVar7;\n    \n    iVar3 = fcn.00b92612(arg_8h);\n    ppuVar4 = arg_14h;\n    arg_18h = arg_10h;\n    if ((iVar3 == -1) && (arg_ch != 1)) goto code_r0x00b919f9;\n    if ((*0xc56884 != 0) && ((*0xc567e8 == '\\0' || (*0xc56888 != arg_ch)))) {\n        arg_14h = *0xc5687c;\n        while (ppuVar1 = arg_14h,  arg_14h != NULL) {\n            if (**arg_14h == arg_ch) {\n                arg_14h = NULL;\n                *0xc567e8 = 1;\n                *0xc56888 = arg_ch;\n                iVar5 = fcn.00c013cb(*ppuVar1 + 1, &arg_14h, arg_8h, arg_ch, arg_18h, ppuVar4);\n                *0xc56888 = 0xffffffff;\n                *0xc567e8 = '\\0';\n                if (iVar5 == 1) {\n                    *0xc567e8 = 0;\n                    *0xc56888 = 0xffffffff;\n                    return arg_14h;\n                }\n                iVar5 = fcn.00b92612(arg_8h);\n                if (iVar5 == -1) {\n                    return NULL;\n                }\n                break;\n            }\n            fcn.00be6cea(&arg_10h);\n        }\n    }\n    iVar6 = ppuVar4;\n    iVar2 = ppuVar4 >> 0x10;\n    if (0x115 < arg_ch) {\n        if (arg_ch < 0x203) {\n            if (arg_ch != 0x202) {\n                if (arg_ch < 0x138) {\n                    if (arg_ch == 0x137) {\ncode_r0x00bcbc1e:\n                        ppuVar4 = fcn.00be6bae(arg_8h, arg_18h);\n                        return ppuVar4;\n                    }\n                    if (arg_ch == 0x133) {\n                        uVar7 = 1;\n                    }\n                    else {\n                        if (arg_ch != 0x134) {\n                            if (arg_ch != 0x135) {\n                                if (arg_ch == 0x136) {\n                                    iVar3 = fcn.00b92612(arg_8h);\n                                    iVar3 = **(*0xc56810 + iVar3 * 4);\n                                    uVar7 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n                                    if (*(iVar3 + 0x4c) != -1) {\n                                        uVar7 = *(iVar3 + 0x4c);\n                                    }\n                                    (*_sym.imp.GDI32.dll_SetBkColor)(arg_18h, uVar7);\n                                    ppuVar4 = fcn.00b922d0(uVar7, 0);\n                                    return ppuVar4;\n                                }\n                                goto code_r0x00b919f9;\n                            }\n                            goto code_r0x00bcbc1e;\n                        }\n                        uVar7 = 2;\n                    }\n                }\n                else {\n                    if (arg_ch != 0x138) {\n                        if (arg_ch == 0x200) {\n                            fcn.00c1cc2e(arg_8h, iVar6, iVar2, arg_18h);\n                            return NULL;\n                        }\n                        iVar5 = arg_ch - 0x201;\n                        iVar3 = iVar5;\n                        if (iVar5 != 0) goto code_r0x00b919f9;\n                        goto code_r0x00bcbc3c;\n                    }\n                    uVar7 = 6;\n                }\n                ppuVar4 = fcn.00b916de(arg_8h, arg_18h, ppuVar4, uVar7);\n                return ppuVar4;\n            }\n            uVar7 = 0;\n        }\n        else {\n            iVar5 = arg_ch - 0x204;\n            if (iVar5 == 0) {\n                iVar3 = 1;\ncode_r0x00bcbc3c:\n                fcn.00c1c220(arg_8h, iVar5, iVar6, iVar2, arg_18h, iVar3);\n                return NULL;\n            }\n            if (arg_ch != 0x205) {\n                if (arg_ch == 0x211) {\n                    fcn.00c1cb50(0, iVar3, arg_8h, arg_18h, ppuVar4);\n                    return NULL;\n                }\n                if (arg_ch == 0x212) {\n                    fcn.00c1cb7f(0, iVar3, arg_8h, arg_18h, ppuVar4);\n                    return NULL;\n                }\n                if (arg_ch == 0x232) {\n                    fcn.00c1cbae(0, iVar3, arg_8h, arg_18h, ppuVar4);\n                    return NULL;\n                }\n                if (arg_ch == 0x233) {\n                    fcn.00c1c8ee(arg_8h, arg_18h);\n                    return NULL;\n                }\n                if (arg_ch == 0x31a) {\n                    *0xc562b0 = (*_sym.imp.UxTheme.dll_IsThemeActive)();\n                    (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x31a, arg_18h, ppuVar4);\n                    return NULL;\n                }\n                goto code_r0x00b919f9;\n            }\n            uVar7 = 1;\n        }\n        fcn.00c1c27c(arg_8h, iVar6, iVar2, arg_18h, uVar7);\n        return NULL;\n    }\n    if (arg_ch != 0x115) {\n        if (arg_ch < 0x2c) {\n            if (arg_ch == 0x2b) {\n                fcn.00c1c86d(arg_8h, ppuVar4);\n                return NULL;\n            }\n            if (arg_ch < 7) {\n                if (arg_ch == 6) {\n                    fcn.00b9189b(arg_8h, arg_18h & 0xffff, ppuVar4, arg_18h >> 0x10);\n                    return NULL;\n                }\n                if (arg_ch == 1) {\n                    return NULL;\n                }\n                if (arg_ch == 2) {\n                    fcn.00b916b5(arg_8h);\n                    return NULL;\n                }\n                if (arg_ch == 3) {\n                    fcn.00c1cc88(arg_8h);\n                    return NULL;\n                }\n                if (arg_ch == 5) {\n                    fcn.00c1d74c(arg_8h, arg_18h, iVar6, iVar2);\n                    return NULL;\n                }\n            }\n            else {\n                if (arg_ch == 0xf) {\n                    fcn.00b91765(arg_8h);\n                    return NULL;\n                }\n                if (arg_ch == 7) {\n                    fcn.00b9167d(arg_8h, arg_18h);\n                    return NULL;\n                }\n                if (arg_ch == 0x20) {\n                    ppuVar4 = fcn.00b91290(arg_8h, arg_18h, ppuVar4 & 0xffff, ppuVar4 >> 0x10);\n                    return ppuVar4;\n                }\n            }\n        }\n        else {\n            if (arg_ch == 0x4e) {\n                ppuVar4 = fcn.00c1cdac(arg_8h, arg_18h, ppuVar4);\n                return ppuVar4;\n            }\n            if (arg_ch == 0x53) {\n                fcn.00c1cbf9(0, iVar3, arg_8h, arg_18h, ppuVar4);\n                return NULL;\n            }\n            if (arg_ch == 0x7b) {\n                fcn.00c1c788(arg_8h, arg_18h, ppuVar4 & 0xffff, ppuVar4 >> 0x10);\n                return NULL;\n            }\n            if (arg_ch == 0x84) {\n                ppuVar4 = fcn.00c1cd6c(arg_8h, iVar6, iVar2);\n                return ppuVar4;\n            }\n            if (arg_ch == 0x111) {\n                fcn.00c1c49c(arg_8h, arg_18h & 0xffff, ppuVar4, arg_18h >> 0x10);\n                return NULL;\n            }\n            if (arg_ch == 0x112) {\n                fcn.00c1da9a(arg_8h, arg_18h, iVar6, iVar2);\n                return NULL;\n            }\n            if (arg_ch == 0x114) {\n                uVar7 = 1;\n                goto code_r0x00bcbb90;\n            }\n        }\ncode_r0x00b919f9:\n        ppuVar4 = (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, arg_ch, arg_18h, ppuVar4);\n        return ppuVar4;\n    }\n    uVar7 = 0;\ncode_r0x00bcbb90:\n    fcn.00c1d6c6(arg_8h, ppuVar4, arg_18h & 0xffff, arg_18h >> 0x10, uVar7);\n    return NULL;\n}\n",
        "token_count": 2237
    },
    "00b912f3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b912f3(uint hdc, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint uVar1;\n    uint lplb;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if ((arg_ch != -1) && (((*0xc56874 != arg_ch || (*0xc56870 != arg_18h)) || (*0xc56878 != arg_14h)))) {\n        if (*0xc56864 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(*0xc56864);\n            *0xc56864 = 0;\n        }\n        lplb = 0;\n        var_4h = 0;\n        *0xc56870 = arg_18h;\n        *0xc56874 = arg_ch;\n        *0xc56878 = arg_14h;\n        var_8h = arg_ch;\n        if (arg_18h != 1) {\n            arg_14h = arg_14h | 0x10000;\n        }\n        *0xc56864 = (*_sym.imp.GDI32.dll_ExtCreatePen)(arg_14h, arg_18h, &lplb, 0, 0);\n        *0xc56868 = (*_sym.imp.GDI32.dll_SelectObject)(hdc, *0xc56864);\n        if (*0xc5686c == '\\0') {\n            (*_sym.imp.GDI32.dll_BeginPath)(hdc);\n            *0xc5686c = '\\x01';\n        }\n    }\n    if ((arg_10h != -2) && (arg_10h != -1)) {\n        uVar1 = fcn.00b922d0(arg_10h, 0);\n        (*_sym.imp.GDI32.dll_SelectObject)(hdc, uVar1);\n    }\n    return;\n}\n",
        "token_count": 431
    },
    "00b913b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b913b0(uint hdc, int32_t arg_ch)\n\n{\n    if (*0xc5686c != '\\0') {\n        (*_sym.imp.GDI32.dll_EndPath)(hdc);\n        *0xc5686c = '\\0';\n        if ((arg_ch == -2) || (arg_ch == -1)) {\n            (*str._W_bw._0_4_)(hdc);\n        }\n        else {\n            (*_sym.imp.GDI32.dll_StrokeAndFillPath)(hdc);\n        }\n    }\n    if (*0xc56868 != 0) {\n        (*_sym.imp.GDI32.dll_SelectObject)(hdc, *0xc56868);\n        *0xc56868 = 0;\n        (*_sym.imp.GDI32.dll_DeleteObject)(*0xc56864);\n        *0xc56864 = 0;\n        *0xc56874 = 0xffffffff;\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00b91424": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00b91424(int32_t *nBottomRect, int32_t *eSweepAngle)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint hdc;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint nTopRect;\n    int32_t var_14h;\n    int32_t crColor;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    hdc = nBottomRect;\n    iVar9 = -2;\n    var_1h._0_1_ = 0;\n    crColor = 0;\n    var_8h = -2;\n    var_14h = 1;\n    iVar8 = eSweepAngle;\n    do {\n        if (iVar8 == 0) {\n            uVar5 = fcn.00b913b0(hdc, iVar9);\n            return uVar5 & 0xffffff00 | var_1h;\n        }\n        var_ch = 0;\n        fcn.00b912f3(hdc, crColor, iVar9, 0, var_14h);\n        if (0 < *(iVar8 + 0xc)) {\n            nBottomRect = iVar8 + 0x14;\n            eSweepAngle = iVar8 + 0x10;\n            do {\n                iVar9 = *eSweepAngle;\n                uVar3 = *(iVar8 + 0x810 + var_ch);\n                iVar7 = *nBottomRect;\n                if (uVar3 < 0x11) {\n                    if (uVar3 == 0x10) {\n                        iVar6 = var_14h + 1 + iVar7;\n                        iVar7 = iVar7 - var_14h;\n                        iVar4 = var_14h + 1;\n                        iVar10 = iVar9 - var_14h;\ncode_r0x00bcb9be:\n                        (*_sym.imp.GDI32.dll_Rectangle)(hdc, iVar10, iVar7, iVar4 + iVar9, iVar6);\n                    }\n                    else if (uVar3 == 8) {\n                        if (crColor != -1) {\n                            fcn.00b913b0(hdc, var_8h);\n                        }\n                        if (*eSweepAngle != -1) {\n                            crColor = *eSweepAngle;\n                        }\n                        if (*nBottomRect != -1) {\n                            var_8h = *nBottomRect;\n                        }\n                        fcn.00b912f3(hdc, crColor, var_8h, 0, var_14h);\n                    }\n                    else {\n                        if (uVar3 == 10) {\n                            eSweepAngle = eSweepAngle + 2;\n                            var_ch = var_ch + 1;\n                            nBottomRect = nBottomRect + 2;\n                            iVar6 = var_8h;\n                            fcn.00b913b0(hdc, var_8h);\n                            fcn.00b912f3(hdc, crColor, var_8h, 0, var_14h);\n                            iVar4 = *eSweepAngle;\n                            iVar10 = iVar9;\n                            goto code_r0x00bcb9be;\n                        }\n                        if (uVar3 == 0xc) {\n                            eSweepAngle = eSweepAngle + 2;\n                            var_ch = var_ch + 1;\n                            nBottomRect = nBottomRect + 2;\n                            fcn.00b913b0(hdc, var_8h);\n                            fcn.00b912f3(hdc, crColor, var_8h, 0, var_14h);\n                            (*_sym.imp.GDI32.dll_Ellipse)(hdc, iVar9, iVar7, *eSweepAngle + iVar9, *nBottomRect + iVar7)\n                            ;\n                        }\n                        else if (uVar3 == 0xe) {\n                            (*_sym.imp.GDI32.dll_MoveToEx)(hdc, iVar9, iVar7, 0);\n                            var_ch = var_ch + 2;\n                            piVar1 = nBottomRect + 2;\n                            piVar2 = eSweepAngle + 2;\n                            nBottomRect = nBottomRect + 4;\n                            eSweepAngle = eSweepAngle + 4;\n                            (*_sym.imp.GDI32.dll_AngleArc)(hdc, iVar9, iVar7, *piVar2, *piVar1, *eSweepAngle);\n                            (*_sym.imp.GDI32.dll_LineTo)(hdc, iVar9, iVar7);\n                            (*_sym.imp.GDI32.dll_CloseFigure)(hdc);\n                        }\n                    }\n                }\n                else if (uVar3 == 0x12) {\n                    (*_sym.imp.GDI32.dll_SetPixel)(hdc, iVar9, iVar7, crColor);\n                }\n                else if (uVar3 == 0x14) {\n                    if (iVar9 != 0) {\n                        var_1h._0_1_ = 1;\n                    }\n                }\n                else if (uVar3 == 0x18) {\n                    var_14h = iVar9;\n                }\n                var_ch = var_ch + 1;\n                eSweepAngle = eSweepAngle + 2;\n                nBottomRect = nBottomRect + 2;\n                iVar9 = var_8h;\n            } while (var_ch < *(iVar8 + 0xc));\n        }\n        iVar8 = *(iVar8 + 4);\n    } while( true );\n}\n",
        "token_count": 1275
    },
    "00b9152e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b9152e(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    int32_t var_10h;\n    uint8_t *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = -2;\n    var_10h = 1;\n    (*_sym.imp.GDI32.dll_BeginPath)(arg_8h);\n    *0xc5686c = 1;\n    for (; arg_ch != 0; arg_ch = *(arg_ch + 4)) {\n        puVar5 = NULL;\n        fcn.00b912f3(arg_8h, var_8h, var_4h, 0, var_10h);\n        if (0 < *(arg_ch + 0xc)) {\n            piVar4 = arg_ch + 0x10;\n            iVar3 = -arg_ch;\n            var_ch = arg_ch + 0x810;\n            do {\n                if (7 < *var_ch) {\n                    if (puVar5 != var_ch + iVar3 + -0x810) {\n                        (*_sym.imp.GDI32.dll_PolyDraw)\n                                  (arg_8h, arg_ch + (puVar5 + 2) * 8, puVar5 + arg_ch + 0x810, \n                                   (var_ch + iVar3 + -0x810) - puVar5);\n                    }\n                    uVar1 = *var_ch;\n                    puVar5 = var_ch + iVar3 + -0x80f;\n                    if (uVar1 != 0x14) {\n                        if (uVar1 == 8) {\n                            if (var_8h != -1) {\n                                fcn.00b913b0(arg_8h, var_4h);\n                            }\n                            if (*piVar4 != -1) {\n                                var_8h = *piVar4;\n                            }\n                            if (piVar4[1] != -1) {\n                                var_4h = piVar4[1];\n                            }\n                            fcn.00b912f3(arg_8h, var_8h, var_4h, 0, var_10h);\n                        }\n                        else if (uVar1 == 0x18) {\n                            var_10h = *piVar4;\n                        }\n                    }\n                }\n                piVar4 = piVar4 + 2;\n                puVar2 = var_ch + iVar3 + -0x80f;\n                var_ch = var_ch + 1;\n            } while (puVar2 < *(arg_ch + 0xc));\n        }\n        if (puVar5 != *(arg_ch + 0xc)) {\n            (*_sym.imp.GDI32.dll_PolyDraw)\n                      (arg_8h, arg_ch + (puVar5 + 2) * 8, puVar5 + arg_ch + 0x810, *(arg_ch + 0xc) - puVar5);\n        }\n    }\n    fcn.00b913b0(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 724
    },
    "00b916de": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b916de(uint hDlg, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    arg_8h = fcn.00b92612(hDlg);\n    iVar2 = fcn.00b925db(arg_10h);\n    uVar3 = arg_10h;\n    if (iVar2 == -1) {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(arg_10h);\n        iVar2 = fcn.00b925db(uVar3);\n    }\n    if (arg_14h == 1) {\n        if ((iVar2 == -1) ||\n           (((cVar1 = *(**(*0xc56824 + iVar2 * 4) + 0x90),  cVar1 != '\\x02' && (cVar1 != '\\x03')) && (cVar1 != '\\0'))))\n        {\n            uVar3 = 0x133;\n            goto code_r0x00bcba81;\n        }\n    }\n    else if (arg_14h == 2) {\n        if ((iVar2 == -1) || (*(**(*0xc56824 + iVar2 * 4) + 0x90) != '\\x01')) {\n            uVar3 = 0x134;\n            goto code_r0x00bcba81;\n        }\n    }\n    else if ((arg_14h == 6) &&\n            ((iVar2 == -1 ||\n             ((iVar2 = **(*0xc56824 + iVar2 * 4),  *(iVar2 + 0x90) == '\\x12' && (*(iVar2 + 0x48) == -1)))))) {\n        uVar3 = 0x138;\ncode_r0x00bcba81:\n        (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, uVar3, arg_ch, arg_10h);\n        return;\n    }\n    fcn.00b921a5(arg_8h, arg_ch, uVar3);\n    return;\n}\n",
        "token_count": 482
    },
    "00b91765": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b91765(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint hdc;\n    int32_t iVar3;\n    int32_t arg_ch;\n    uint *puVar4;\n    uint *eSweepAngle;\n    uint uVar5;\n    uint *puVar6;\n    uchar auStack84 [8];\n    uint auStack76 [18];\n    \n    iVar2 = fcn.00b92612(arg_8h);\n    puVar4 = **(*0xc56810 + iVar2 * 4);\n    puVar6 = &stack0xffffffb4;\n    uVar5 = *puVar4;\n    eSweepAngle = puVar4[0x72];\n    hdc = (*_sym.imp.USER32.dll_BeginPaint)(uVar5, puVar6);\n    for (; eSweepAngle != NULL; eSweepAngle = *eSweepAngle) {\n        iVar2 = eSweepAngle[2];\n        if ((((*(iVar2 + 0x92) & 0x10) != 0) && (*(iVar2 + 0x93) == -1)) || (*(iVar2 + 0x93) == puVar4[100])) {\n            *0xc56868 = 0;\n            *0xc56864 = 0;\n            *0xc56874 = 0xffffffff;\n            *0xc56878 = 0xffffffff;\n            *0xc5686c = 0;\n            *0xc56870 = 1;\n            (*_sym.imp.USER32.dll_GetWindowRect)(*eSweepAngle[2], &stack0xffffff9c);\n            (*_sym.imp.USER32.dll_ScreenToClient)(*puVar4, &stack0xffffff8c);\n            (*_sym.imp.GDI32.dll_SetViewportOrgEx)(hdc, uVar5, puVar6, 0);\n            iVar2 = *(eSweepAngle[2] + 0x48);\n            arg_ch = *(eSweepAngle[2] + 0x4c);\n            iVar3 = arg_ch;\n            if (((-1 < iVar2) && (iVar3 = iVar2,  arg_ch != -1)) || ((arg_ch = iVar3,  iVar3 != -1 || (-1 < iVar2)))) {\n                fcn.00b912f3(hdc, arg_ch, iVar2, 0, 1);\n                (*_sym.imp.GDI32.dll_Rectangle)(hdc, 0, 0, *(eSweepAngle[2] + 0x8c), *(eSweepAngle[2] + 0x8e));\n                fcn.00b913b0(hdc, iVar2);\n            }\n            cVar1 = fcn.00b91424(hdc, eSweepAngle);\n            puVar6 = 0xb91860;\n            uVar5 = hdc;\n            puVar4 = eSweepAngle;\n            fcn.00b9152e(hdc, eSweepAngle);\n            if (cVar1 != '\\0') {\n                uVar5 = hdc;\n                puVar6 = eSweepAngle;\n                fcn.00c1c066(hdc, eSweepAngle);\n            }\n        }\n    }\n    (*_sym.imp.USER32.dll_EndPaint)(*puVar4, &stack0xffffffac);\n    return;\n}\n",
        "token_count": 731
    },
    "00b91bcb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00b91bcb(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, int32_t arg_20h\n            , int32_t arg_24h, uint32_t arg_28h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t **ppiVar4;\n    \n    if (arg_24h == -1) {\n        arg_24h = 0x100;\n    }\n    if (arg_1ch == -1) {\n        arg_1ch = 0x96;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x96;\n    }\n    iVar1 = fcn.00b91d35(arg_8h, -(arg_28h != 0xffffffff) & arg_28h, L\"static\", 0xc1f910, arg_24h, arg_14h, arg_18h, \n                         arg_1ch, arg_20h, arg_10h, arg_24h, 1);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        arg_ch[0x13] = -1;\n        *(arg_ch + 0x22) = arg_14h;\n        *(arg_ch + 0x8a) = arg_18h;\n        *(arg_ch + 0x23) = arg_1ch;\n        *(arg_ch + 0x8e) = arg_20h;\n        piVar2 = fcn.00bb0ff6(0x910);\n        piVar2[3] = 0;\n        piVar2[1] = 0;\n        arg_ch[0x20] = piVar2;\n        piVar2[2] = arg_ch;\n        *piVar2 = 0;\n        ppiVar4 = *(arg_8h + 0x1c8);\n        if (ppiVar4 == NULL) {\n            *(arg_8h + 0x1c8) = piVar2;\n        }\n        else {\n            for (; *ppiVar4 != NULL; ppiVar4 = *ppiVar4) {\n            }\n            *ppiVar4 = piVar2;\n        }\n        uVar3 = 1;\n        *(arg_ch + 0x86) = *(arg_ch + 0x86) | 0x300;\n    }\n    return uVar3;\n}\n",
        "token_count": 584
    },
    "00b91cbf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b91cbf(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    \n    for (puVar3 = *(arg_8h + 0x80); puVar3[1] != 0; puVar3 = puVar3[1]) {\n    }\n    puVar2 = puVar3;\n    if (0xff < puVar3[3] + arg_18h) {\n        puVar2 = fcn.00bb0ff6(0x910);\n        puVar2[3] = 0;\n        puVar2[1] = 0;\n        *puVar2 = 0;\n        puVar3[1] = puVar2;\n    }\n    iVar1 = puVar2[3];\n    *(iVar1 + 0x810 + puVar2) = arg_ch;\n    if (arg_ch == 8) {\n        if (arg_10h != -1) {\n            fcn.00b9322f();\n        }\n        if (arg_14h != -1) {\n            fcn.00b9322f();\n        }\n    }\n    puVar2[iVar1 * 2 + 4] = arg_10h;\n    puVar2[iVar1 * 2 + 5] = arg_14h;\n    puVar2[3] = iVar1 + 1;\n    return;\n}\n",
        "token_count": 349
    },
    "00b91fd9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b91fd9(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    if (*0xc567b4 == 1) {\n        if (arg_8h != -1) {\n            *(arg_18h + 0x58) = arg_8h;\n        }\n        if (arg_ch != -1) {\n            *(arg_18h + 0x5c) = arg_ch;\n        }\n    }\n    else {\n        if (*0xc567b4 == 2) {\n            if (arg_8h != -1) {\n                *(arg_18h + 0x58) = *(arg_18h + 0x58) + *(arg_18h + 0x60) + arg_8h;\n            }\n            if (arg_ch == -1) goto code_r0x00b92003;\n            arg_ch = *(arg_18h + 100) + arg_ch;\n        }\n        else {\n            if (arg_8h != -1) {\n                *(arg_18h + 0x58) = *(arg_18h + 0x58) + arg_8h;\n            }\n            if (arg_ch == -1) goto code_r0x00b92003;\n        }\n        *(arg_18h + 0x5c) = *(arg_18h + 0x5c) + arg_ch;\n    }\ncode_r0x00b92003:\n    if (0 < arg_10h) {\n        *(arg_18h + 0x60) = arg_10h;\n    }\n    if (0 < arg_14h) {\n        *(arg_18h + 100) = arg_14h;\n    }\n    return;\n}\n",
        "token_count": 410
    },
    "00b921a5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b921a5(int32_t arg_8h, uint hdc, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t arg_8h_00;\n    uint uVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    uint lpRect;\n    uint nYPos;\n    int32_t var_4h;\n    \n    iVar2 = **(*0xc56810 + arg_8h * 4);\n    var_4h = iVar2;\n    iVar5 = fcn.00b925db(arg_10h);\n    bVar8 = false;\n    arg_8h_00 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n    iVar4 = var_4h;\n    if (*(iVar2 + 0x4c) != -1) {\n        arg_8h_00 = *(iVar2 + 0x4c);\n    }\n    if (iVar5 == -1) goto code_r0x00bcc155;\n    puVar3 = **(*0xc56824 + iVar5 * 4);\n    iVar2 = puVar3[0x12];\n    if ((-1 < iVar2) && (iVar5 = iVar2,  *(puVar3 + 0x24) != '\\x1b')) goto code_r0x00b9221c;\n    iVar5 = arg_8h_00;\n    // switch table (28 cases) at 0xb92289\n    switch(*(puVar3 + 0x24)) {\n    case 0:\n    case 2:\n    case 3:\n        uVar7 = (*_sym.imp.USER32.dll_GetWindowLongW)(*puVar3, 0xfffffff0);\n        uVar7 = uVar7 & 0x8000800;\njoined_r0x00bcc065:\n        if (uVar7 != 0) goto code_r0x00b92274;\n        uVar6 = 0xf;\n        goto code_r0x00bcc06d;\n    case 1:\n    case 0x10:\n    case 0x13:\ncode_r0x00b92274:\n        uVar6 = 5;\ncode_r0x00bcc06d:\n        iVar5 = (*_sym.imp.USER32.dll_GetSysColor)(uVar6);\n        break;\n    default:\n        bVar8 = iVar2 == -2;\n        break;\n    case 6:\n    case 0x1b:\n        bVar8 = true;\n        break;\n    case 7:\n        if (*(puVar3 + 0x93) != -1) {\n            (*_sym.imp.USER32.dll_GetClientRect)(*(var_4h + 0x188), &lpRect);\n            (*_sym.imp.USER32.dll_SendMessageW)(*(iVar4 + 0x188), 0x1328, 0, &lpRect);\n            uVar6 = (*_sym.imp.USER32.dll_GetWindowDC)(*(iVar4 + 0x188));\n            iVar5 = (*_sym.imp.GDI32.dll_GetPixel)(uVar6, lpRect, nYPos);\n            (*_sym.imp.USER32.dll_ReleaseDC)(*(var_4h + 0x188), uVar6);\n            uVar7 = *0xc562b0;\n            if (iVar5 == -1) goto joined_r0x00bcc065;\n            break;\n        }\n        goto code_r0x00b92229;\n    case 8:\n    case 10:\n    case 0xb:\n    case 0x12:\n    case 0x18:\n        break;\n    }\ncode_r0x00b9221c:\n    arg_8h_00 = iVar5;\n    if ((*(puVar3 + 0x93) != -1) && (puVar3[0x12] == -1)) {\n        cVar1 = *(puVar3 + 0x24);\n        if (cVar1 == '\\x17') {\ncode_r0x00bcc14c:\n            bVar8 = true;\n        }\n        else if ((((cVar1 != '\\a') && (cVar1 != '\\x01')) && (cVar1 != '\\x02')) && ((cVar1 != '\\x03' && (cVar1 != '\\0')))\n                ) {\n            uVar6 = (*_sym.imp.USER32.dll_GetWindowDC)(*puVar3);\n            arg_8h_00 = (*_sym.imp.GDI32.dll_GetPixel)(uVar6, 0, 0);\n            if ((arg_8h_00 == -1) &&\n               ((arg_8h_00 = (*_sym.imp.GDI32.dll_GetPixel)(uVar6, *(puVar3 + 0x23) + -1, 0),  arg_8h_00 == -1 &&\n                (arg_8h_00 = (*_sym.imp.GDI32.dll_GetPixel)(uVar6, 0, *(puVar3 + 0x8e) + -1),  arg_8h_00 == -1)))) {\n                arg_8h_00 = (*_sym.imp.GDI32.dll_GetPixel)(uVar6, *(puVar3 + 0x23) + -1, *(puVar3 + 0x8e) + -1);\n            }\n            (*_sym.imp.USER32.dll_ReleaseDC)(*puVar3, uVar6);\n            if (arg_8h_00 == -1) goto code_r0x00bcc14c;\n        }\n    }\ncode_r0x00b92229:\n    if (puVar3[0x13] == -1) {\n        uVar6 = (*_sym.imp.USER32.dll_GetSysColor)(8);\n    }\n    else {\n        uVar6 = puVar3[0x13];\n    }\n    (*_sym.imp.GDI32.dll_SetTextColor)(hdc, uVar6);\n    if (bVar8) {\n        (*_sym.imp.GDI32.dll_SetBkMode)(hdc, 1);\n        (*_sym.imp.GDI32.dll_GetStockObject)(5);\n    }\n    else {\ncode_r0x00bcc155:\n        (*_sym.imp.GDI32.dll_SetBkColor)(hdc, arg_8h_00);\n        fcn.00b922d0(arg_8h_00, 0);\n    }\n    return;\n}\n",
        "token_count": 1427
    },
    "00b92327": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b92327(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint *arg_8h_00;\n    uint uVar2;\n    code *pcVar3;\n    \n    if ((arg_8h != -1) && (arg_ch != -1)) {\n        puVar1 = **(*0xc56810 + arg_8h * 4);\n        arg_8h_00 = **(*0xc56824 + arg_ch * 4);\n        if (puVar1[0x73] != 0) {\n            fcn.00bebf76(arg_8h_00);\n        }\n        if (**(*0xc56824 + arg_ch * 4) == 0) {\n            puVar1[7] = 0xffffffff;\n        }\n        else {\n            uVar2 = *arg_8h_00;\n            puVar1[7] = arg_ch;\n            pcVar3 = _sym.imp.USER32.dll_PostMessageW;\n            (*_sym.imp.USER32.dll_PostMessageW)(*puVar1, 0x28, uVar2, 1);\n            if (*(arg_8h_00 + 0x24) == '\\x02') {\n                (*pcVar3)(uVar2, 0xb1, puVar1[0x6f], puVar1[0x70]);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "00b92402": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00b92402(int32_t arg_8h, int32_t **arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    \n    if (arg_8h < 0) {\n        in_EAX = *(in_ECX + 0x98);\n        if ((in_EAX == 0xffffffff) || (*(in_ECX + 0x94) == -1)) goto code_r0x00b92469;\n        *arg_10h = *(in_ECX + 0x94);\n    }\n    else {\n        if (((arg_8h < 3) || (*(in_ECX + 0x84) < arg_8h)) ||\n           (in_EAX = **(*(in_ECX + 0x74) + arg_8h * 4),  in_EAX == NULL)) goto code_r0x00b92469;\n        in_EAX = in_EAX[1];\n        *arg_10h = arg_8h;\n    }\n    *arg_ch = in_EAX;\n    in_EAX = *(*(in_ECX + 0x60) + in_EAX * 4);\n    if (((*in_EAX != 0) && (iVar1 = *arg_10h,  2 < iVar1)) &&\n       ((iVar1 <= *(in_ECX + 0x84) && (in_EAX = *(*(in_ECX + 0x74) + iVar1 * 4),  *in_EAX != 0)))) {\n        return CONCAT31(in_EAX >> 8, 1);\n    }\ncode_r0x00b92469:\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 394
    },
    "00b927d9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00b927d9(uint lpWindowName, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t dwExStyle, \n            uint32_t arg_20h, int32_t hWnd)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint var_28h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lpRect;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    iVar1 = fcn.00bb0ff6(0x1d0);\n    if (iVar1 == 0) {\n        var_4h = NULL;\n    }\n    else {\n        var_4h = fcn.00b9112a();\n    }\n    iVar1 = *0xc56814;\n    var_8h = *0xc56814;\n    if (*0xc567d0 == *0xc56814) {\n        fcn.00b934c2(&var_4h);\n        iVar5 = iVar1;\n    }\n    else {\n        iVar5 = 0;\n        if (0 < *0xc56814) {\n            do {\n                if (**(*0xc56810 + iVar5 * 4) == 0) break;\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < *0xc56814);\n        }\n    }\n    arg_8h = var_4h;\n    **(*0xc56810 + iVar5 * 4) = var_4h;\n    *(**(*0xc56810 + iVar5 * 4) + 4) = iVar5;\n    if (dwExStyle == 0xffffffff) {\n        dwExStyle = 0x80ca0000;\n    }\n    uVar4 = dwExStyle | 0x4000000;\n    if ((dwExStyle & 0x10000) != 0) {\n        uVar4 = dwExStyle | 0x4080000;\n    }\n    if ((uVar4 & 0x40000) != 0) {\n        uVar4 = uVar4 | 0x80000;\n    }\n    dwExStyle = -(arg_20h != 0xffffffff) & arg_20h;\n    if ((dwExStyle & 0x40) == 0) {\n        arg_20h = arg_10h;\n    }\n    else {\n        if (hWnd == 0) goto code_r0x00bcc340;\n        dwExStyle = dwExStyle ^ 0x40;\n        var_4h[3] = 0x40;\n        iVar1 = fcn.00b92612(hWnd);\n        if (-1 < iVar1) {\n            *(**(*0xc56810 + iVar1 * 4) + 0xc) = 0x80000000;\n        }\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n        (*_sym.imp.USER32.dll_GetClientRect)(hWnd, &var_28h);\n        iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(7);\n        arg_ch = arg_ch + ((var_10h - var_20h) - iVar1);\n        iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(8);\n        arg_20h = arg_10h + ((var_ch - var_1ch) - iVar1);\n        if ((uVar4 & 0xc00000) == 0xc00000) {\n            iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(4);\n            arg_20h = arg_20h + iVar1;\n        }\n    }\n    if (arg_14h == -1) {\n        arg_14h = 400;\n    }\n    if (arg_18h == -1) {\n        arg_18h = 400;\n    }\n    if (arg_ch == -1) {\n        (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &lpRect, 0);\n        iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(7);\n        arg_ch = (((lpRect - arg_14h) + var_10h) - iVar1) / 2;\n    }\n    if (arg_20h == -1) {\n        (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &lpRect, 0);\n        iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(8);\n        arg_20h = (((var_14h - arg_18h) + var_ch) - iVar1) / 2;\n        if ((uVar4 & 0x400000) != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(4);\n            arg_20h = arg_20h + iVar1 / -2;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetRect)(&lpRect, 0, 0, arg_14h, arg_18h);\n    (*_sym.imp.USER32.dll_AdjustWindowRectEx)(&lpRect, uVar4, 0, dwExStyle);\n    iVar2 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                      (dwExStyle, 0xc1fac4, lpWindowName, uVar4, arg_ch, arg_20h, var_10h - lpRect, var_ch - var_14h, \n                       hWnd, 0, *0xc56804, 0);\n    *arg_8h = iVar2;\n    iVar1 = var_8h;\n    if (iVar2 != 0) {\n        (*_sym.imp.USER32.dll_SetWindowLongW)(iVar2, 0xffffffeb, iVar5);\n        arg_8h[2] = hWnd;\n        arg_8h[0xf] = arg_ch;\n        arg_8h[0x10] = arg_20h;\n        (*_sym.imp.USER32.dll_GetClientRect)(*arg_8h, &lpRect);\n        arg_8h[0x11] = var_10h - lpRect;\n        arg_8h[0x12] = var_ch - var_14h;\n        uVar3 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11, 0);\n        (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0x30, uVar3);\n        fcn.00b92344(arg_8h, 0xffffffff);\n        if (*0xc567d4 == 0) {\n            *0xc567d4 = (*_sym.imp.USER32.dll_SetTimer)(0, 0, 0x28, 0xb91256);\n        }\n        *0xc567d0 = *0xc567d0 + 1;\n        *0xc5681c = iVar5;\n        fcn.00b92f66(0);\n        if ((uVar4 & 0x10000000) != 0) {\n            if ((arg_14h == 0) || (arg_18h == 0)) {\n                fcn.00c1b00f(*arg_8h);\n                return 0;\n            }\n            fcn.00b92a5b(4, 0);\n        }\n        return *arg_8h;\n    }\ncode_r0x00bcc340:\n    if (iVar5 == iVar1) {\n        fcn.00b93532();\n    }\n    else {\n        **(*0xc56810 + iVar5 * 4) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 1747
    },
    "00b92a5b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b92a5b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *arg_8h_00;\n    uint arg_8h_01;\n    uint uVar1;\n    \n    if (arg_ch != 0) {\n        *0xc5681c = fcn.00b92612(arg_ch);\n    }\n    if (*0xc5681c == -1) {\n        return 0;\n    }\n    arg_8h_00 = **(*0xc56810 + *0xc5681c * 4);\n    arg_8h_01 = *arg_8h_00;\n    if (((*(arg_8h_00 + 0x3a) != '\\0') && (*(arg_8h_00 + 0x3a) = 0,  -1 < arg_8h_00[99])) &&\n       (*(arg_8h_00 + 0x66) != '\\0')) {\n        fcn.00c1b958(arg_8h_00, arg_8h_00[0x65]);\n        *(arg_8h_00 + 0x66) = 0;\n    }\n    if (8 < arg_8h) {\n        if (arg_8h != 9) {\n            if (arg_8h == 0x40) {\n                uVar1 = 1;\n            }\n            else {\n                if (arg_8h != 0x41) {\n                    if (arg_8h == 0x42) {\n                        *(arg_8h_00 + 0x39) = 1;\n                        (*_sym.imp.USER32.dll_LockWindowUpdate)(arg_8h_01);\n                        return 1;\n                    }\n                    if (arg_8h != 0x43) {\n                        return 1;\n                    }\n                    *(arg_8h_00 + 0x39) = 0;\n                    (*_sym.imp.USER32.dll_LockWindowUpdate)(0);\n                    (*_sym.imp.USER32.dll_InvalidateRect)(*arg_8h_00, 0, 1);\n                    return 1;\n                }\n                uVar1 = 0;\n            }\n            (*_sym.imp.USER32.dll_EnableWindow)(arg_8h_01, uVar1);\n            return 1;\n        }\ncode_r0x00bcc4ca:\n        if (*(arg_8h_00 + 0xe) != '\\0') {\n            (*_sym.imp.USER32.dll_ShowWindow)(arg_8h_01, arg_8h);\n            fcn.00b94a35(arg_8h_01);\n            return 1;\n        }\n        return 0;\n    }\n    if (arg_8h != 8) {\n        if (arg_8h == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(arg_8h_01, 0);\n            *(arg_8h_00 + 0xe) = 0;\n            return 1;\n        }\n        if (arg_8h != 1) {\n            if (arg_8h == 2) {\n                *(arg_8h_00 + 0xe) = 1;\n            }\n            else {\n                if (arg_8h == 3) {\n                    *(arg_8h_00 + 0xe) = 1;\n                    goto code_r0x00bcc4ca;\n                }\n                if (arg_8h < 4) {\n                    return 1;\n                }\n                if (arg_8h < 6) goto code_r0x00b92ac7;\n                if (arg_8h != 6) {\n                    return 1;\n                }\n            }\n            if (*(arg_8h_00 + 0xe) != '\\0') {\n                (*_sym.imp.USER32.dll_ShowWindow)(arg_8h_01, 6);\n                return 1;\n            }\n            return 0;\n        }\n    }\ncode_r0x00b92ac7:\n    if (*(arg_8h_00 + 0xe) == '\\0') {\n        (*_sym.imp.USER32.dll_ShowWindow)(arg_8h_01, arg_8h);\n        if ((arg_8h != 8) && (arg_8h != 4)) {\n            fcn.00b94a35(arg_8h_01);\n        }\n        *(arg_8h_00 + 0xe) = 1;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 991
    },
    "00b92b27": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b92b27(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if (arg_10h != 0) {\n        *0xc5681c = fcn.00b92612(arg_10h);\n    }\n    if ((*0xc5681c == -1) || (0xd < arg_8h + 0xdU)) {\n        uVar1 = 0;\n    }\n    else {\n        fcn.00b981a7(arg_ch);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 144
    },
    "00b92b72": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint8_t __cdecl\nfcn.00b92b72(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint8_t uVar5;\n    uint hWnd;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    if (arg_18h != 0) {\n        *0xc5681c = fcn.00b92612(arg_18h);\n    }\n    if (*0xc5681c == -1) {\n        uVar5 = 0;\n    }\n    else {\n        if (arg_8h != 0) {\n            fcn.00b97d2c(arg_8h);\n        }\n        puVar1 = **(*0xc56810 + *0xc5681c * 4);\n        uVar2 = *puVar1;\n        uVar5 = 1;\n        if (arg_10h != 0) {\n            arg_18h = (*_sym.imp.USER32.dll_LoadImageW)(0, arg_10h, 1, 0x10, 0x10, 0x10);\n            if (arg_18h == 0) {\n                uVar4 = fcn.00bf4be8();\n                (*_sym.imp.SHELL32.dll_ExtractIconExW)(arg_10h, uVar4, 0, &arg_18h, 1);\n            }\n            var_4h = (*_sym.imp.USER32.dll_LoadImageW)(0, arg_10h, 1, 0, 0, 0x50);\n            if (var_4h == 0) {\n                uVar4 = fcn.00bf4be8(&var_4h, 0, 1);\n                (*_sym.imp.SHELL32.dll_ExtractIconExW)(arg_10h, uVar4);\n            }\n            pcVar3 = _sym.imp.USER32.dll_DestroyIcon;\n            if (arg_18h != 0) {\n                (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x80, 0, arg_18h);\n                if (puVar1[8] != 0) {\n                    (*pcVar3)(puVar1[8]);\n                }\n                puVar1[8] = arg_18h;\n            }\n            if (var_4h != 0) {\n                (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x80, 1, var_4h);\n                if (puVar1[9] != 0) {\n                    (*pcVar3)(puVar1[9]);\n                }\n                puVar1[9] = var_4h;\n            }\n            uVar5 = 1;\n            if (arg_18h == 0) {\n                uVar5 = -(var_4h != 0) & 1;\n            }\n        }\n        if (arg_ch != -1) {\n            fcn.00b9322f();\n            if (-1 < puVar1[0x13]) {\n                fcn.00c1a71e(puVar1[0x13]);\n            }\n            puVar1[0x13] = arg_ch;\n            fcn.00b922d0(arg_ch, 1);\n        }\n        if (arg_1ch != -1) {\n            puVar1[0x14] = arg_1ch;\n        }\n        if (arg_20h != -1) {\n            puVar1[0x15] = arg_20h;\n        }\n        if (*(puVar1 + 0xe) != '\\0') {\n            (*_sym.imp.USER32.dll_InvalidateRect)(uVar2, 0, 1);\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 899
    },
    "00b92d1a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00b92d1a(uint32_t arg_8h, int16_t *arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h, uint arg_24h, uint32_t arg_28h, uint arg_2ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uchar uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint noname_9;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *arg_ch_00;\n    uint *arg_8h_00;\n    uint32_t var_28h;\n    int32_t *hWnd;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t bRepaint;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar7 = *0xc5681c;\n    if (((arg_8h == 0xc) || ((0xd < arg_8h && (((arg_8h < 0x10 || (arg_8h == 0x11)) || (arg_8h == 0x14)))))) &&\n       ((arg_10h != -1 && (cVar2 = fcn.00b92402(arg_10h, &var_20h, &var_28h),  cVar2 != '\\0')))) {\n        iVar7 = var_20h;\n    }\n    if (iVar7 != -1) {\n        iVar7 = **(*0xc56810 + iVar7 * 4);\n        var_1ch = iVar7;\n        var_20h = fcn.00b92519(iVar7);\n        if (var_20h != -1) {\n            arg_ch_00 = **(*0xc56824 + var_20h * 4);\n            if (((arg_8h == 0xe) || (arg_8h == 0xf)) || (arg_8h == 0xc)) {\n                *(arg_ch_00 + 0x92) = 0;\n            }\n            else {\n                *(arg_ch_00 + 0x92) = 0x50;\n                *(arg_ch_00 + 0x86) = *0xc567b8;\n            }\n            var_4h = arg_1ch;\n            var_28h = arg_28h & 2;\n            var_14h = arg_10h;\n            var_10h = arg_14h;\n            var_8h = arg_18h;\n            hWnd = arg_ch_00;\n            if (var_28h == 0) {\n                fcn.00b91fd9(arg_10h, arg_14h, arg_18h, arg_1ch, iVar7);\n                var_8h = *(iVar7 + 0x60);\n                var_4h = *(iVar7 + 100);\n                var_14h = *(iVar7 + 0x58);\n                var_10h = *(iVar7 + 0x5c);\n            }\n            else {\n                *(arg_ch_00 + 0x86) = 0;\n            }\n            iVar6 = var_20h;\n            if (arg_8h < 0x1e) {\n                bRepaint = 1;\n    // switch table (30 cases) at 0xb92eee\n                switch(*(arg_8h * 4 + 0xb92eee)) {\n                case 0xb92e26:\n                    bRepaint._0_1_ =\n                         fcn.00b91bcb(iVar7, arg_ch_00, var_20h, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n                    break;\n                case 0xb92ec7:\n                    bRepaint._0_1_ = '\\x01';\n                    break;\n                case 0xbccbfa:\n                    bRepaint._0_1_ =\n                         fcn.00c16943(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0xbccc18:\n                    bRepaint._0_1_ =\n                         fcn.00c16f1f(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0xbccc36:\n                    bRepaint._0_1_ =\n                         fcn.00c16b8f(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0xbccc54:\n                    bRepaint._0_1_ =\n                         fcn.00c16ddf(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0xbccc72:\n                    bRepaint._0_1_ =\n                         fcn.00c16c3e(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0xbccc90:\n                    bRepaint._0_1_ =\n                         fcn.00c16ad4(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0xbcccae:\n                    bRepaint._0_1_ =\n                         fcn.00c17648(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0xbccccc:\n                    bRepaint._0_1_ =\n                         fcn.00c1772a(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0xbcccea:\n                    arg_8h_00 = &arg_2ch;\n                    fcn.00b99ac0(arg_8h_00);\n                    bRepaint._0_1_ =\n                         fcn.00c16cd2(iVar7, arg_ch_00, iVar6, arg_ch, var_14h, var_10h, arg_18h, arg_1ch, arg_20h, \n                                      arg_24h, arg_8h_00);\n                    break;\n                case 0xbccd1e:\n                    bRepaint._0_1_ =\n                         fcn.00c1783c(iVar7, arg_ch_00, var_20h, var_10h, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0xbccd3a:\n                    bRepaint._0_1_ =\n                         fcn.00c1797d(iVar7, arg_ch_00, var_20h, var_10h, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0xbccd56:\n                    uVar4 = fcn.00b99c9c();\n                    bRepaint._0_1_ =\n                         fcn.00c16656(iVar7, arg_ch_00, iVar6, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      noname_9, uVar4);\n                    break;\n                case 0xbccd7f:\n                    bRepaint._0_1_ = fcn.00c17e02(iVar7, arg_ch_00, var_20h, arg_ch, arg_10h);\n                    break;\n                case 0xbccd92:\n                    bRepaint._0_1_ =\n                         fcn.00c17a1f(iVar7, arg_ch_00, var_20h, var_10h, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0xbccdae:\n                    bRepaint._0_1_ = fcn.00c17afb(iVar7, arg_ch_00, var_20h, arg_ch);\n                    break;\n                case 0xbccdbe:\n                    bRepaint._0_1_ = fcn.00c173c1(iVar7, arg_ch_00, var_20h, arg_10h, arg_ch, arg_14h);\n                    break;\n                case 0xbccdd4:\n                    bRepaint._0_1_ = fcn.00c169fa(iVar7, arg_ch_00, var_10h, arg_10h);\n                    break;\n                case 0xbccde4:\n                    bRepaint._0_1_ = fcn.00c17500(iVar7, arg_ch_00, var_20h, arg_10h, arg_ch, arg_14h, arg_18h);\n                    break;\n                case 0xbccdfd:\n                    bRepaint._0_1_ =\n                         fcn.00c17bb5(iVar7, arg_ch_00, var_20h, var_10h, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0xbcce19:\n                    bRepaint._0_1_ = fcn.00c17ce0(var_10h, arg_ch_00, var_20h, arg_ch, arg_10h);\n                    break;\n                case 0xbcce2c:\n                    bRepaint._0_1_ =\n                         fcn.00c16e76(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0xbcce4a:\n                    bRepaint._0_1_ =\n                         fcn.00c16825(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0xbcce68:\n                    bRepaint._0_1_ =\n                         fcn.00c168bf(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0xbcce86:\n                    bRepaint._0_1_ =\n                         fcn.00c178ef(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0xbccea4:\n                    bRepaint._0_1_ =\n                         fcn.00c16fef(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0xbccec2:\n                    bRepaint._0_1_ = fcn.00c17192(var_10h, arg_ch_00, var_20h, arg_ch, arg_10h);\n                    break;\n                case 0xbcced5:\n                    bRepaint._0_1_ =\n                         fcn.00c1671c(iVar7, arg_ch_00, var_10h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0xbcd07b:\n                    goto code_r0x00bcd07b;\n                }\n                if (bRepaint == '\\0') {\n                    fcn.00b9246d(iVar6);\n                    if ((arg_8h != 0xb) || (iVar6 = bRepaint,  *arg_ch != 0)) {\n                        iVar6 = 0;\n                    }\n                }\n                else {\n                    *(arg_ch_00 + 0x24) = arg_8h;\n                    *(arg_ch_00 + 0x91) = arg_28h;\n                    *0xc56848 = *0xc5681c;\n                    *0xc56844 = iVar6;\n                    if (((arg_28h & 1) == 0) &&\n                       ((((*(iVar7 + 0x70) != 0 || (*(iVar7 + 0x7c) != 0x55)) || (*(iVar7 + 0x80) != 400)) ||\n                        ((*(iVar7 + 0x84) != 0 || (*(iVar7 + 0x88) != 2)))))) {\n                        fcn.00c16442(iVar7, arg_ch_00, iVar7 + 0x6c, *(iVar7 + 0x7c), *(iVar7 + 0x80), *(iVar7 + 0x84), \n                                     *(iVar7 + 0x88), 0);\n                    }\n                    if (((arg_28h & 4) == 0) && ((arg_18h == -1 || (arg_1ch == -1)))) {\n                        uVar4 = (*_sym.imp.USER32.dll_GetDC)(*arg_ch_00);\n                        uVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch_00, 0x31, 0, 0);\n                        pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n                        uVar5 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, uVar5);\n                        fcn.00bf4a71(&var_18h);\n                        (*pcVar1)(uVar4, uVar5);\n                        arg_ch_00 = hWnd;\n                        (*_sym.imp.USER32.dll_ReleaseDC)(*hWnd, uVar4);\n                        iVar7 = var_1ch;\n                        iVar6 = var_14h;\n                        if (arg_8h != 0x17) {\n                            if (arg_8h == 0x18) {\n                                iVar6 = var_14h + 4;\n                            }\n                            else if (arg_8h == 0x19) {\n                                var_18h = var_18h + 0xc;\n                            }\n                            else if (arg_8h == 0x1a) {\n                                var_18h = var_18h + 8;\n                            }\n                            else {\n                                var_18h = 0;\n                                iVar6 = var_18h;\n                            }\n                        }\n                        if ((arg_1ch == -1) && ((*(var_1ch + 100) == -1 || (*0xc567b4 != 2)))) {\n                            *(var_1ch + 100) = iVar6 + 8;\n                        }\n                        if ((arg_18h == -1) && ((*(var_1ch + 0x60) == -1 || (*0xc567b4 != 2)))) {\n                            *(var_1ch + 0x60) = var_18h + 8;\n                        }\n                        (*_sym.imp.USER32.dll_MoveWindow)\n                                  (*arg_ch_00, *(var_1ch + 0x58), *(var_1ch + 0x5c), *(var_1ch + 0x60), *(var_1ch + 100)\n                                   , bRepaint);\n                        iVar6 = var_20h;\n                    }\n                    if (var_28h == 0) {\n                        fcn.00b91db3(iVar7, arg_ch_00, 0);\n                    }\n                    if (*(iVar7 + 0x198) != '\\0') {\n                        if (*(iVar7 + 400) == -1) {\n                            uVar3 = *(iVar7 + 0x18c);\n                        }\n                        else {\n                            uVar3 = *(iVar7 + 400);\n                        }\n                        *(arg_ch_00 + 0x93) = uVar3;\n                    }\n                    if (*(iVar7 + 0x50) != -1) {\n                        fcn.00c18ac0(iVar6, *(iVar7 + 0x50));\n                    }\n                    if (*(iVar7 + 0x54) != -1) {\n                        fcn.00c188b4(iVar6, *(iVar7 + 0x54));\n                    }\n                    if (*arg_ch_00 != 0) {\n                        (*_sym.imp.USER32.dll_SetWindowLongW)(*arg_ch_00, 0xffffffeb, iVar6);\n                    }\n                }\n            }\n            else {\ncode_r0x00bcd07b:\n                fcn.00b9246d(var_20h);\n                bRepaint = -1;\n                iVar6 = bRepaint;\n            }\n            goto code_r0x00b92eb4;\n        }\n    }\n    bRepaint = 0;\n    iVar6 = bRepaint;\ncode_r0x00b92eb4:\n    fcn.00b99a20();\n    return iVar6;\n}\n",
        "token_count": 4144
    },
    "00b948fe": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b948fe(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *0xc56278;\n    if (arg_10h == -1) {\n        iVar2 = 0;\n    }\n    else {\n        *0xc57510 = 0;\n        *0xc5750c = 0x10;\n        *0xc57508 = 0x10;\n        *0xc57504 = arg_10h;\n        (*_sym.imp.KERNEL32.dll_EnumResourceNamesW)(0, 0xe, fcn.00bf4189, 99);\n        iVar2 = *0xc57510;\n        if (*0xc57510 != 0) {\n            return;\n        }\n    }\n    (*_sym.imp.USER32.dll_LoadImageW)(uVar1, 99, 1, 0x10, 0x10, iVar2);\n    return;\n}\n",
        "token_count": 228
    },
    "00b94afe": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.00b94afe(int32_t *param_1)\n\n{\n    char cVar1;\n    uint32_t arg_ch;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint16_t uVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    uint lpVersionInformation;\n    int32_t var_150h;\n    int32_t var_14ch;\n    int32_t var_148h;\n    uint var_140h;\n    uint var_3ch;\n    uint lpSystemInfo;\n    uint var_34h;\n    uint32_t var_14h;\n    int32_t hLibModule;\n    code *var_8h;\n    int32_t var_4h;\n    \n    fcn.00b977c7();\n    *(param_1 + 0xe) = 0;\n    lpVersionInformation = 0x11c;\n    (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n    *param_1 = var_150h;\n    param_1[1] = var_14ch;\n    param_1[2] = var_148h;\n    fcn.00b97d2c(&var_140h);\n    arg_ch = 0;\n    if (param_1[4] != 0) {\n        puVar5 = param_1[3];\n        do {\n            var_14h = *puVar5;\n            iVar8 = 0;\n            iVar4 = 0;\n            uVar6 = 0x20;\n            do {\n                if (*puVar5 == uVar6) {\n                    iVar4 = iVar4 + 1;\n                }\n                uVar6 = *(iVar8 * 2 + 0xc1faee);\n                iVar8 = iVar8 + 1;\n            } while (uVar6 != 0);\n            if (iVar4 == 0) goto code_r0x00b94b67;\n            arg_ch = arg_ch + 1;\n            puVar5 = puVar5 + 1;\n        } while (arg_ch < param_1[4]);\n    }\n    arg_ch = 0xffffffff;\ncode_r0x00b94b67:\n    fcn.00b97e8c(0, arg_ch);\n    fcn.00b97886(0xc1faec);\n    iVar4 = *param_1;\n    *(param_1 + 0x33) = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    param_1[10] = 0;\n    param_1[0xb] = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x32) = 0;\n    if (iVar4 != 5) {\n        if (iVar4 == 6) {\n            iVar4 = param_1[1];\n            *(param_1 + 0x1d) = 1;\n            *(param_1 + 0x1f) = 1;\n            if (iVar4 == 0) {\n                *(param_1 + 0x21) = 1;\n                if (var_3ch._2_1_ == '\\x01') {\n                    *(param_1 + 8) = 1;\n                }\n                else {\n                    *(param_1 + 0x23) = 1;\n                    *(param_1 + 0x22) = 1;\n                }\n            }\n            else if (iVar4 == 1) {\n                *(param_1 + 0x21) = 1;\n                *(param_1 + 0x23) = 1;\n                *(param_1 + 0x25) = 1;\n                if (var_3ch._2_1_ == '\\x01') {\n                    *(param_1 + 9) = 1;\n                }\n                else {\n                    *(param_1 + 0x27) = 1;\n                    *(param_1 + 0x26) = 1;\n                }\n            }\n            else if (iVar4 == 2) {\n                *(param_1 + 0x27) = 1;\n                *(param_1 + 0x25) = 1;\n                *(param_1 + 0x21) = 1;\n                *(param_1 + 0x29) = 1;\n                if (var_3ch._2_1_ == '\\x01') {\n                    *(param_1 + 10) = 1;\n                }\n                else {\n                    *(param_1 + 0x2b) = 1;\n                    *(param_1 + 0x2a) = 1;\n                }\n            }\n            else if (iVar4 == 3) {\n                *(param_1 + 0x2b) = 1;\n                *(param_1 + 0x29) = 1;\n                *(param_1 + 0x27) = 1;\n                *(param_1 + 0x25) = 1;\n                *(param_1 + 0x21) = 1;\n                *(param_1 + 0x2d) = 1;\n                if (var_3ch._2_1_ == '\\x01') {\n                    *(param_1 + 0xb) = 1;\n                }\n                else {\n                    *(param_1 + 0x2f) = 1;\n                    *(param_1 + 0x2e) = 1;\n                }\n            }\n        }\n        else if (iVar4 == 10) {\n            *(param_1 + 0x1d) = 1;\n            *(param_1 + 0x1f) = 1;\n            *(param_1 + 0x2b) = 1;\n            *(param_1 + 0x29) = 1;\n            *(param_1 + 0x27) = 1;\n            *(param_1 + 0x25) = 1;\n            *(param_1 + 0x21) = 1;\n            *(param_1 + 0x2d) = 1;\n            *(param_1 + 0x2f) = 1;\n            if (param_1[1] == 0) {\n                *(param_1 + 0x31) = 1;\n                if (var_3ch._2_1_ == '\\x01') {\n                    *(param_1 + 0xc) = 1;\n                }\n                else {\n                    *(param_1 + 0x33) = 1;\n                    *(param_1 + 0x32) = 1;\n                }\n            }\n        }\n        goto code_r0x00b94bf1;\n    }\n    if (param_1[1] == 1) {\n        *(param_1 + 0x1d) = 1;\ncode_r0x00bcdc95:\n        *(param_1 + 7) = 1;\n    }\n    else if (param_1[1] == 2) {\n        *(param_1 + 0x1d) = 1;\n        *(param_1 + 0x1f) = 1;\n        if (var_3ch._2_1_ == '\\x01') goto code_r0x00bcdc95;\n        *(param_1 + 0x1e) = 1;\n    }\n    *(param_1 + 0xe) = var_3ch >> 6 & 1;\ncode_r0x00b94bf1:\n    var_4h = 0;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(&var_4h);\n    (*_sym.imp.KERNEL32.dll_IsWow64Process)(uVar2);\n    if (var_4h == 1) {\n        *(param_1 + 0xd) = 1;\n    }\n    lpSystemInfo = 0;\n    puVar7 = &var_34h;\n    for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    if (*(param_1 + 0xd) == '\\0') {\n        (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n    }\n    else {\n        hLibModule = 0;\n        var_8h = NULL;\n        cVar1 = fcn.00b94c95();\n        if (cVar1 == '\\0') {\n            (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n        }\n        else {\n            cVar1 = fcn.00b94c95();\n            pcVar3 = var_8h;\n            if (cVar1 == '\\0') {\n                pcVar3 = 0xbcb752;\n            }\n            (*pcVar3)(&lpSystemInfo);\n        }\n        if (hLibModule != 0) {\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n        }\n    }\n    *(param_1 + 0x36) = lpSystemInfo;\n    return param_1;\n}\n",
        "token_count": 2063
    },
    "00b95ac4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b95ac4(int32_t arg_8h, uint noname_1, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (((arg_10h == 0) || (arg_10h == -1)) || (arg_8h == 0)) {\n        fcn.00bf3408();\n    }\n    else {\n        iVar1 = *in_ECX[3];\n        if (iVar1 < 2) {\n            fcn.00b95a87(arg_10h);\n        }\n        else {\n            *in_ECX[3] = iVar1 + -1;\n            fcn.00be6443();\n            iVar1 = fcn.00b95a4b(arg_10h + 1);\n            in_ECX[2] = iVar1;\n            iVar1 = fcn.00bb0ff6(iVar1);\n            *in_ECX = iVar1;\n        }\n        in_ECX[1] = arg_10h;\n        fcn.00bb1080(*in_ECX, arg_8h, arg_10h);\n        *(arg_10h + *in_ECX) = 0;\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "00b95dcf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b95dcf(int32_t *param_1)\n\n{\n    if ((*param_1 != 0) && (*param_1 != -1)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*param_1);\n        *param_1 = 0;\n    }\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    return;\n}\n",
        "token_count": 116
    },
    "00b95df9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00b95df9(uint *lpFileName, uint32_t arg_ch)\n\n{\n    uint32_t in_EAX;\n    uint32_t *in_ECX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar1 = 0;\n    *in_ECX = 0xffffffff;\n    if ((arg_ch & 0x8000) == 0) {\n        if ((arg_ch & 1) == 0) {\n            if ((arg_ch & 2) == 0) goto code_r0x00b95e37;\n            uVar3 = 2;\n            uVar2 = 0xc0000000;\n            goto code_r0x00b95e22;\n        }\n        in_EAX = (*_sym.imp.KERNEL32.dll_CreateFileW)(*lpFileName, 0xc0000000, 7, 0, 4, 0x80, 0);\n        *in_ECX = in_EAX;\n        if (in_EAX == 0xffffffff) goto code_r0x00b95e37;\n        in_EAX = fcn.00b95c4e(0, 0, 2);\n    }\n    else {\n        uVar3 = 3;\n        uVar2 = 0x80000000;\ncode_r0x00b95e22:\n        in_EAX = (*_sym.imp.KERNEL32.dll_CreateFileW)(*lpFileName, uVar2, 7, 0, uVar3, 0x80, 0);\n        *in_ECX = in_EAX;\n    }\n    if (*in_ECX != 0xffffffff) {\n        uVar1 = 1;\n    }\ncode_r0x00b95e37:\n    return in_EAX & 0xffffff00 | uVar1;\n}\n",
        "token_count": 407
    },
    "00b963a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: cchLength\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: lpsz\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00b963a0(uint *arg_8h, int16_t *arg_ch, uint *arg_10h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int16_t *arg_8h_00;\n    char cVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint *puVar7;\n    bool bVar8;\n    uint uVar9;\n    uint *arg_8h_01;\n    uint *lpsz;\n    int16_t *cchLength;\n    uint32_t var_20h;\n    int32_t *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint *var_8h;\n    \n    arg_8h_00 = arg_ch;\n    var_10h._0_2_ = -1;\n    puVar7 = NULL;\n    var_8h = NULL;\n    arg_8h_01 = 0x64;\n    var_10h._2_2_ = 0;\n    fcn.00b97b76(100);\n    fcn.00b975e0();\n    iVar1 = *arg_ch;\n    while (iVar1 != 0) {\n        for (; (arg_8h_00[puVar7] == 0x20 || (arg_8h_00[puVar7] == 9)); puVar7 = puVar7 + 1) {\n        }\n        uVar2 = arg_8h_00[puVar7];\n        var_8h = puVar7;\n        if (uVar2 == 0) break;\n        var_10h._2_2_ = SUB42(puVar7, 0);\n        if (((0x2f < uVar2) && (uVar2 < 0x3a)) || (uVar2 == 0x2e)) {\n            arg_ch = 0x40;\n            var_ch = arg_10h[2];\n            if (var_ch != 0) {\n                arg_ch = *(*(arg_10h[1] + -4 + var_ch * 4) + 8);\n            }\n            cchLength = arg_8h_00;\n            cVar3 = fcn.00b960cc(arg_8h_00, &fcn.00b963a0::var_8h, &fcn.00b963a0::var_18h, &fcn.00b963a0::lpsz, arg_ch);\n            if (cVar3 == '\\x01') {\n                if ((arg_ch == 0x4a) && (var_10h == 5)) {\n                    bVar8 = var_18h != 0;\n                    var_18h = -var_18h;\n                    var_14h = -(var_14h + bVar8);\n                    *(*(arg_10h[1] + -4 + var_ch * 4) + 8) = 0x49;\n                }\n                arg_8h_01 = &fcn.00b963a0::var_18h;\n                fcn.00b9766f(arg_8h_01);\n                puVar7 = var_8h;\n                goto code_r0x00b965bf;\n            }\n            if (uVar2 != 0x2e) goto code_r0x00b96416;\n            puVar7 = var_8h + 1;\n            var_8h = puVar7;\n            fcn.00b97eec();\n            while( true ) {\n                uVar2 = arg_8h_00[puVar7];\n                if ((((0x5a < uVar2) || (uVar2 < 0x41)) && ((uVar2 < 0x61 || (0x7a < uVar2)))) &&\n                   ((((uVar2 < 0x30 || (0x39 < uVar2)) && (uVar2 != 0x5f)) && (uVar2 < 0x80)))) break;\n                lpsz = 0xb968b8;\n                var_20h = uVar2;\n                fcn.00b97a84(uVar2);\n                puVar7 = puVar7 + 1;\n            }\n            if (cchLength == NULL) {\ncode_r0x00b968f9:\n                cchLength = puVar7 + -1;\n                var_8h = puVar7;\n                goto code_r0x00bce445;\n            }\n            cchLength = 0x35;\n            lpsz = 0xb968e8;\n            var_8h = puVar7;\n            fcn.00b95f12(0x35);\ncode_r0x00b965a7:\n            lpsz = &fcn.00b963a0::lpsz;\n            fcn.00b95ea1(lpsz);\n            goto code_r0x00b965b3;\n        }\ncode_r0x00b96416:\n        puVar5 = var_8h;\n        if (((0x40 < uVar2) && (uVar2 < 0x5b)) || (((0x60 < uVar2 && (uVar2 < 0x7b)) || (uVar2 == 0x5f)))) {\n            lpsz = &fcn.00b963a0::lpsz;\n            fcn.00b95fd2(arg_8h_00, &fcn.00b963a0::var_8h, &fcn.00b963a0::var_18h, lpsz);\n            if (var_18h != -1) {\n                arg_8h_01 = &fcn.00b963a0::var_18h;\n                fcn.00b9766f(arg_8h_01);\n                puVar7 = var_8h;\n                goto code_r0x00b965bf;\n            }\n            uVar9 = 0x138c;\n            arg_8h_01 = var_8h;\ncode_r0x00bce44a:\n            fcn.00befdba(arg_8h, uVar9, arg_8h_01);\ncode_r0x00bce452:\n            uVar6 = 0xffffffff;\n            goto code_r0x00b965e6;\n        }\n        if (uVar2 == 0x24) {\ncode_r0x00b964f3:\n            lpsz = arg_10h;\n            iVar4 = fcn.00b95fa0(arg_10h);\n            if (-1 < iVar4) {\n                if (uVar2 == 0x24) {\n                    uVar9 = 0x33;\n                }\n                else {\n                    uVar9 = 0x32;\n                }\n                fcn.00b95f12(uVar9);\n                puVar7 = puVar5 + 1;\n                var_8h = puVar7;\n                fcn.00b97eec();\n                for (; (((uVar2 = arg_8h_00[puVar7],  uVar2 < 0x5b && (0x40 < uVar2)) ||\n                        ((0x60 < uVar2 && (uVar2 < 0x7b)))) || (((0x2f < uVar2 && (uVar2 < 0x3a)) || (uVar2 == 0x5f))));\n                    puVar7 = puVar7 + 1) {\n                    if (*var_1ch < 2) {\n                        cchLength = cchLength + 1;\n                        lpsz = 0xb96557;\n                        fcn.00b97cb3(cchLength);\n                    }\n                    else {\n                        *var_1ch = *var_1ch + -1;\n                        cchLength = 0xbce3c6;\n                        fcn.00b98189();\n                        cchLength = cchLength + 2;\n                        lpsz = 0xbce3d2;\n                        var_20h = fcn.00b98170(cchLength);\n                        lpsz = -(var_20h * 2 >> 0x20 != 0) | var_20h * 2;\n                        puVar5 = fcn.00bb0ff6(lpsz);\n                        lpsz = cchLength * 2 + 2;\n                        fcn.00bb1080(puVar5, lpsz);\n                        lpsz = puVar5;\n                    }\n                    *(lpsz + cchLength * 2) = uVar2;\n                    cchLength = cchLength + 1;\n                    *(lpsz + cchLength * 2) = 0;\n                }\n                if (cchLength == NULL) goto code_r0x00b968f9;\n                cchLength = 0xb9659b;\n                var_8h = puVar7;\n                fcn.00b97faf();\n                (*_sym.imp.USER32.dll_CharUpperBuffW)();\n                goto code_r0x00b965a7;\n            }\ncode_r0x00bce445:\n            uVar9 = 0x138b;\n            goto code_r0x00bce44a;\n        }\n    // switch table (69 cases) at 0xb96908\n        switch(uVar2) {\n        case 0x1a:\n            if (((var_8h != NULL) || (arg_8h_00[1] != 0)) || (arg_8h < *0xc572a0)) goto code_r0x00bce41f;\n            puVar7 = 0x1;\n            var_8h = 0x1;\n            break;\n        case 0x1b:\n        case 0x1c:\n        case 0x1d:\n        case 0x1e:\n        case 0x1f:\n        case 0x20:\n        case 0x21:\n        case 0x23:\n        case 0x24:\n        case 0x25:\n        case 0x2e:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3b:\n        case 0x3d:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5c:\ncode_r0x00bce41f:\n            lpsz = var_8h;\n            fcn.00befdba(arg_8h, 5000, var_8h);\ncode_r0x00bce430:\n            fcn.00b95f12(0x7f);\n            arg_8h = &fcn.00b963a0::var_18h;\n            uVar9 = 0xbce443;\n            fcn.00b9766f(arg_8h);\n            goto code_r0x00bce452;\n        case 0x22:\n        case 0x27:\n            lpsz = &fcn.00b963a0::lpsz;\n            iVar4 = fcn.00b9631f(arg_8h, arg_8h_00, &fcn.00b963a0::var_8h, lpsz);\n            if (iVar4 < 0) goto code_r0x00bce430;\n            arg_8h_01 = 0x36;\n            fcn.00b95f12(0x36);\n            fcn.00b95ea1(&fcn.00b963a0::lpsz);\n            fcn.00b9766f(&fcn.00b963a0::var_18h);\n            puVar7 = var_8h;\n            break;\n        case 0x26:\n            lpsz = 0x4d;\n            fcn.00b95f12(0x4d);\n            puVar7 = puVar5 + 1;\n            var_8h = puVar7;\n            if (arg_8h_00[puVar7] == 0x3d) {\n                puVar7 = puVar5 + 2;\n                var_8h = puVar7;\n                fcn.00b95f12(0x56);\n            }\n            goto code_r0x00b965b3;\n        case 0x28:\n            lpsz = 0x47;\n            fcn.00b95f12(0x47);\n            fcn.00b9766f(&fcn.00b963a0::var_18h);\n            var_8h = puVar5 + 1;\n            puVar7 = var_8h;\n            break;\n        case 0x29:\n            lpsz = 0x48;\n            fcn.00b95f12(0x48);\n            fcn.00b9766f(&fcn.00b963a0::var_18h);\n            var_8h = puVar5 + 1;\n            puVar7 = var_8h;\n            break;\n        case 0x2a:\n            lpsz = 0x4c;\n            fcn.00b95f12(0x4c);\n            puVar7 = puVar5 + 1;\n            var_8h = puVar7;\n            if (arg_8h_00[puVar7] == 0x3d) {\n                puVar7 = puVar5 + 2;\n                var_8h = puVar7;\n                fcn.00b95f12(0x55);\n            }\n            goto code_r0x00b965b3;\n        case 0x2b:\n            lpsz = 0x49;\n            fcn.00b95f12(0x49);\n            puVar7 = puVar5 + 1;\n            var_8h = puVar7;\n            if (arg_8h_00[puVar7] == 0x3d) {\n                puVar7 = puVar5 + 2;\n                var_8h = puVar7;\n                fcn.00b95f12(0x52);\n            }\n            goto code_r0x00b965b3;\n        case 0x2c:\n            lpsz = 0x40;\n            fcn.00b95f12(0x40);\n            fcn.00b9766f(&fcn.00b963a0::var_18h);\n            var_8h = puVar5 + 1;\n            puVar7 = var_8h;\n            break;\n        case 0x2d:\n            lpsz = 0x4a;\n            fcn.00b95f12(0x4a);\n            puVar7 = puVar5 + 1;\n            var_8h = puVar7;\n            if (arg_8h_00[puVar7] == 0x3d) {\n                puVar7 = puVar5 + 2;\n                var_8h = puVar7;\n                fcn.00b95f12(0x53);\n            }\n            goto code_r0x00b965b3;\n        case 0x2f:\n            lpsz = 0x4b;\n            fcn.00b95f12(0x4b);\n            puVar7 = puVar5 + 1;\n            var_8h = puVar7;\n            if (arg_8h_00[puVar7] == 0x3d) {\n                puVar7 = puVar5 + 2;\n                var_8h = puVar7;\n                fcn.00b95f12(0x54);\n            }\n            goto code_r0x00b965b3;\n        case 0x3a:\n            lpsz = 0x58;\n            fcn.00b95f12(0x58);\n            fcn.00b9766f(&fcn.00b963a0::var_18h);\n            var_8h = puVar5 + 1;\n            puVar7 = var_8h;\n            break;\n        case 0x3c:\n            puVar7 = var_8h + 1;\n            if (arg_8h_00[var_8h + 1] == 0x3d) {\n                lpsz = 0x46;\n            }\n            else {\n                if (arg_8h_00[var_8h + 1] != 0x3e) {\n                    lpsz = 0x43;\n                    var_8h = puVar7;\n                    fcn.00b95f12(0x43);\n                    goto code_r0x00b965b3;\n                }\n                lpsz = 0x44;\n            }\n            var_8h = puVar7;\n            fcn.00b95f12(lpsz);\n            puVar7 = puVar5 + 2;\n            var_8h = puVar7;\n            goto code_r0x00b965b3;\n        case 0x3e:\n            puVar7 = var_8h + 1;\n            var_8h = puVar7;\n            if (arg_8h_00[puVar7] == 0x3d) {\n                lpsz = 0x45;\n                fcn.00b95f12(0x45);\n                puVar7 = puVar5 + 2;\n                var_8h = puVar7;\n            }\n            else {\n                lpsz = 0x42;\n                fcn.00b95f12(0x42);\n            }\n            goto code_r0x00b965b3;\n        case 0x3f:\n            lpsz = 0x57;\n            fcn.00b95f12(0x57);\n            fcn.00b9766f(&fcn.00b963a0::var_18h);\n            var_8h = puVar5 + 1;\n            puVar7 = var_8h;\n            break;\n        case 0x40:\n            goto code_r0x00b964f3;\n        case 0x5b:\n            lpsz = 0x4e;\n            fcn.00b95f12(0x4e);\n            fcn.00b9766f(&fcn.00b963a0::var_18h);\n            var_8h = puVar5 + 1;\n            puVar7 = var_8h;\n            break;\n        case 0x5d:\n            lpsz = 0x4f;\n            fcn.00b95f12(0x4f);\n            fcn.00b9766f(&fcn.00b963a0::var_18h);\n            var_8h = puVar5 + 1;\n            puVar7 = var_8h;\n            break;\n        case 0x5e:\n            lpsz = 0x51;\n            fcn.00b95f12(0x51);\n            fcn.00b9766f(&fcn.00b963a0::var_18h);\n            var_8h = puVar5 + 1;\n            puVar7 = var_8h;\n            break;\n        default:\n            puVar7 = var_8h + 1;\n            var_8h = puVar7;\n            if (arg_8h_00[puVar7] == 0x3d) {\n                lpsz = 0x50;\n                fcn.00b95f12(0x50);\n                puVar7 = puVar5 + 2;\n                var_8h = puVar7;\n            }\n            else {\n                lpsz = 0x41;\n                fcn.00b95f12(0x41);\n            }\ncode_r0x00b965b3:\n            fcn.00b9766f(&fcn.00b963a0::var_18h);\n        }\ncode_r0x00b965bf:\n        iVar1 = arg_8h_00[puVar7];\n    }\n    uVar9 = 0x7f;\n    fcn.00b95f12(0x7f);\n    arg_8h = &fcn.00b963a0::var_18h;\n    var_10h._2_2_ = SUB42(puVar7, 0);\n    fcn.00b9766f(arg_8h);\n    uVar6 = 0;\ncode_r0x00b965e6:\n    fcn.00b95a64(arg_8h, uVar9);\n    fcn.00b95efb();\n    return uVar6;\n}\n",
        "token_count": 4858
    },
    "00b97886": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b97886(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00b9780d(arg_8h);\n    if (iVar1 == -1) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = iVar1 + 1;\n    }\n    fcn.00b97e8c(iVar1, 0xffffffff);\n    return;\n}\n",
        "token_count": 99
    },
    "00b978ad": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b978ad(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    if (((arg_10h == 0) || (arg_10h == -1)) || (arg_8h == 0)) {\n        fcn.00b97e8c(0, 0xffffffff);\n    }\n    else {\n        iVar2 = *in_ECX[3];\n        if (iVar2 < 2) {\n            fcn.00b98087(arg_10h);\n        }\n        else {\n            *in_ECX[3] = iVar2 + -1;\n            fcn.00b98189();\n            uVar1 = fcn.00b98170(arg_10h + 1);\n            in_ECX[2] = uVar1;\n            iVar2 = fcn.00bb0ff6(-(uVar1 * 2 >> 0x20 != 0) | uVar1 * 2);\n            *in_ECX = iVar2;\n        }\n        in_ECX[1] = arg_10h;\n        fcn.00bb1080(*in_ECX, arg_8h + arg_ch * 2, arg_10h * 2);\n        *(arg_10h * 2 + *in_ECX) = 0;\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "00b979ab": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b979ab(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    if ((arg_10h != 0) && (arg_ch < arg_8h[1])) {\n        if ((arg_10h == -1) || (arg_8h[1] <= arg_ch + arg_10h && arg_ch + arg_10h != arg_8h[1])) {\n            arg_10h = arg_8h[1] - arg_ch;\n        }\n        iVar2 = *in_ECX[3];\n        if (iVar2 < 2) {\n            fcn.00b98087(arg_10h);\n        }\n        else {\n            *in_ECX[3] = iVar2 + -1;\n            fcn.00b98189();\n            uVar1 = fcn.00b98170(arg_10h + 1);\n            in_ECX[2] = uVar1;\n            iVar2 = fcn.00bb0ff6(-(uVar1 * 2 >> 0x20 != 0) | uVar1 * 2);\n            *in_ECX = iVar2;\n        }\n        in_ECX[1] = arg_10h;\n        fcn.00bb1080(*in_ECX, *arg_8h + arg_ch * 2, arg_10h * 2);\n        *(arg_10h * 2 + *in_ECX) = 0;\n        return;\n    }\n    fcn.00b97e8c(0, 0xffffffff);\n    return;\n}\n",
        "token_count": 381
    },
    "00b97bb1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b97bb1(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    \n    if ((arg_10h != 0) && (arg_ch < arg_8h[1])) {\n        if ((arg_10h == -1) || (arg_8h[1] <= arg_ch + arg_10h && arg_ch + arg_10h != arg_8h[1])) {\n            arg_10h = arg_8h[1] - arg_ch;\n        }\n        iVar2 = *in_ECX[3];\n        if (iVar2 < 2) {\n            fcn.00b97cb3(in_ECX[1] + arg_10h);\n        }\n        else {\n            *in_ECX[3] = iVar2 + -1;\n            puVar1 = fcn.00bb0ff6(4);\n            if (puVar1 == NULL) {\n                puVar1 = NULL;\n            }\n            else {\n                *puVar1 = 1;\n            }\n            in_ECX[3] = puVar1;\n            iVar2 = in_ECX[1] + 1 + arg_10h;\n            in_ECX[2] = iVar2;\n            if (iVar2 == 0) {\n                uVar3 = 8;\n            }\n            else {\n                uVar3 = iVar2 + 7U & 0xfffffff8;\n            }\n            in_ECX[2] = uVar3;\n            iVar2 = fcn.00bb0ff6(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n            fcn.00bb1080(iVar2, *in_ECX, in_ECX[1] * 2 + 2);\n            *in_ECX = iVar2;\n        }\n        fcn.00bb1080(*in_ECX + in_ECX[1] * 2, *arg_8h + arg_ch * 2, arg_10h * 2);\n        in_ECX[1] = in_ECX[1] + arg_10h;\n        *(*in_ECX + in_ECX[1] * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 530
    },
    "00b97e8c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b97e8c(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    \n    if ((arg_ch != 0) && (arg_8h < in_ECX[1])) {\n        if ((arg_ch == -1) || (in_ECX[1] <= arg_8h + arg_ch && arg_8h + arg_ch != in_ECX[1])) {\n            arg_ch = in_ECX[1] - arg_8h;\n        }\n        fcn.00b97faf();\n        fcn.00bb1080(*in_ECX + arg_8h * 2, *in_ECX + (arg_8h + arg_ch) * 2, ((in_ECX[1] - arg_8h) - arg_ch) * 2 + 2);\n        in_ECX[1] = in_ECX[1] - arg_ch;\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "00b99505": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b99505(uint32_t *param_1)\n\n{\n    int16_t iVar1;\n    int16_t **ppiVar2;\n    bool bVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    bool bVar6;\n    uint64_t uVar7;\n    uint var_4h;\n    \n    if (param_1[3] == 1) {\n        return;\n    }\n    if (param_1[3] == 2) {\n        return;\n    }\n    uVar7 = fcn.00b99d46();\n    uVar4 = uVar7;\n    bVar3 = false;\n    if (param_1[3] == 4) {\n        ppiVar2 = param_1[2];\n        if ((**ppiVar2 != 0x30) || (((iVar1 = (*ppiVar2)[1],  iVar1 != 0x78 && (iVar1 != 0x58)) || (0x12 < ppiVar2[1])))\n           ) goto code_r0x00b99539;\n        bVar5 = ppiVar2[1] < 0xa;\n        bVar6 = ppiVar2[1] == 0xa;\ncode_r0x00b99554:\n        if (bVar5 || bVar6) goto code_r0x00b99556;\n    }\n    else {\ncode_r0x00b99539:\n        if ((-0x100000001 < uVar7) && ((uVar7 < 0x8000000000000000 || (0x7fffffff < uVar4)))) {\n            if (uVar7 < 0) goto code_r0x00b99556;\n            if (uVar7 < 0x100000000) {\n                bVar5 = uVar4 < 0x7fffffff;\n                bVar6 = uVar4 == 0x7fffffff;\n                goto code_r0x00b99554;\n            }\n        }\n    }\n    bVar3 = true;\ncode_r0x00b99556:\n    fcn.00b99a20();\n    *param_1 = uVar4;\n    if (bVar3) {\n        param_1[1] = uVar7 >> 0x20;\n        param_1[3] = 2;\n    }\n    else {\n        param_1[3] = 1;\n    }\n    return;\n}\n",
        "token_count": 535
    },
    "00b9f8cf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00b9f8cf(void)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    uint extraout_ECX;\n    uint var_3ch;\n    uint var_1ch;\n    uint var_4h;\n    \n    *0xc56310 = 0xc225e4;\n    fcn.00baff4c();\n    fcn.00bb0143(extraout_ECX);\n    *(*(*0xc56310 + 4) + 0xc56310) = 0xc21d34;\n    *(*(*0xc56310 + 4) + 0xc5630c) = *(*0xc56310 + 4) + -0x48c;\n    *0xc563ac = 0;\n    *0xc563b0 = 0;\n    *0xc563b4 = 0;\n    fcn.00bb03a2();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    *0xc5642c = 0;\n    *0xc56430 = 0;\n    *0xc56434 = 0;\n    *0xc56438 = 0;\n    *0xc5643c = 0;\n    *0xc56440 = 0;\n    *0xc56444 = 0;\n    *0xc56448 = 0;\n    *0xc5644c = 0;\n    *0xc56450 = 0;\n    fcn.00b977c7();\n    *0xc56484 = 0xc1f918;\n    *0xc5646c = 0;\n    *0xc56470 = 0;\n    *0xc56474 = 0;\n    *0xc56478 = 0;\n    *0xc5647c = 0;\n    *0xc56480 = 0;\n    *0xc56488 = 0;\n    *0xc5648c = 0;\n    *0xc56490 = 0;\n    *0xc56494 = 0;\n    *0xc56498 = 0;\n    *0xc5649c = 0;\n    *0xc564a0 = 0xc21d24;\n    *0xc564a4 = 0;\n    *0xc564a8 = 0;\n    *0xc564ac = 0;\n    *0xc564b0 = 0xc21d24;\n    *0xc564b4 = 0;\n    *0xc564b8 = 0;\n    *0xc564bc = 0;\n    *0xc564c0 = 0xc21d24;\n    *0xc564c4 = 0;\n    *0xc564c8 = 0;\n    *0xc564cc = 0;\n    *0xc564d0 = 0xc21cec;\n    *0xc564d4 = 0;\n    *0xc564d8 = 0;\n    *0xc564dc = 0;\n    *0xc564e0 = 0;\n    *0xc564e8 = 0;\n    *0xc564ec = 1;\n    fcn.00b977c7();\n    fcn.00ba60e7();\n    *0xc565f0 = 0xc1fb88;\n    *0xc565f4 = 0;\n    *0xc565f8 = 0;\n    *0xc565fc = 0;\n    fcn.00ba6259();\n    fcn.00b977c7();\n    *0xc5675c = 0;\n    *0xc56760 = 0;\n    *0xc56764 = 0;\n    *0xc5676c = 0;\n    *0xc56770 = 0;\n    *0xc56774 = 0;\n    fcn.00ba9090(0);\n    arg_8h = fcn.00bb007f();\n    fcn.00baffde(arg_8h);\n    fcn.00b99a20();\n    fcn.00b99a20();\n    *0xc5640c = 0;\n    *0xc56408 = 0;\n    *0xc563fc = 0;\n    *0xc56400 = 0;\n    *0xc563f8 = 0;\n    *0xc56404 = 0;\n    *0xc56458 = 0;\n    *0xc56768 = 0;\n    *0xc56794 = 0;\n    *0xc56455 = 0;\n    *0xc56758 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff6);\n    if ((iVar1 == 0) || (iVar1 == -1)) {\n        *0xc56778 = 0;\n    }\n    else {\n        *0xc56778 = fcn.00bf6dda();\n        fcn.00bf74a9();\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    *0xc56410 = 1;\n    *0xc56414 = 1;\n    *0xc56418 = 1;\n    *0xc5640d = 0;\n    *0xc5640f = 0;\n    *0xc56428 = 0;\n    *0xc5677c = 100;\n    *0xc565ec = 0;\n    *0xc565e4 = 1;\n    *0xc565e8 = 1;\n    *0xc56604 = 0xfa;\n    *0xc5641c = 10;\n    *0xc56420 = 10;\n    *0xc56424 = 0xfa;\n    (*_sym.imp.ole32.dll_OleInitialize)(0);\n    return 0xc56310;\n}\n",
        "token_count": 1284
    },
    "00ba0b30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba0b30(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    char cVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    uint uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint *in_ECX;\n    uint *extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t iVar12;\n    int32_t extraout_ECX_01;\n    uint *puVar13;\n    uint *puVar14;\n    int32_t iVar15;\n    int32_t *unaff_ESI;\n    code *pcVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    int64_t iVar20;\n    ulong uVar21;\n    uint *in_stack_fffffe98;\n    int32_t **ppiVar22;\n    char16_t *in_stack_fffffeac;\n    uint *in_stack_fffffec0;\n    uint *in_stack_fffffec4;\n    uint *puStack312;\n    uint *puStack308;\n    uint *puStack304;\n    uint *puStack300;\n    uint *puStack296;\n    uint *puStack292;\n    uint uStack288;\n    int32_t iStack284;\n    uint uStack276;\n    int32_t iStack272;\n    uint *puStack268;\n    int32_t iStack260;\n    uint uStack252;\n    uint32_t uStack244;\n    uint uStack240;\n    int32_t iStack236;\n    int32_t iStack232;\n    uint32_t uStack228;\n    uint uStack224;\n    uchar auStack220 [4];\n    uint uStack216;\n    uint32_t uStack212;\n    ushort *puStack208;\n    uint uStack204;\n    int32_t iStack200;\n    uint *puStack196;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    ushort *puStack172;\n    uint uStack168;\n    int32_t iStack164;\n    int32_t iStack160;\n    int32_t *piStack152;\n    uint *puStack148;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uchar auStack112 [4];\n    uint uStack108;\n    uint uStack100;\n    uint uStack96;\n    int32_t iStack92;\n    uchar auStack88 [8];\n    int32_t *piStack80;\n    uchar auStack72 [4];\n    uchar auStack68 [4];\n    uchar auStack64 [4];\n    char16_t acStack60 [8];\n    uchar auStack44 [20];\n    uchar auStack24 [20];\n    \n    if (in_ECX[0x3b] < 0xed8) {\n        iVar7 = in_ECX[0x3b] + 1;\n        in_ECX[0x3b] = iVar7;\n        puStack300 = in_ECX;\n        if (iVar7 == 1) {\n            puVar13 = in_ECX[0x47];\n            puStack304 = puVar13;\n            while (puVar13 != NULL) {\n                iVar7 = fcn.00b99fbd(*puVar13);\n                puVar13 = in_stack_fffffec0;\n                if (iVar7 != 0) {\n                    fcn.00be68bf(*(iVar7 + 0x10) + 1, 1);\n                    puVar13 = in_stack_fffffec0;\n                }\n                fcn.00be6cea(&stack0xfffffecc);\n                in_stack_fffffec0 = puVar13;\n            }\n        }\n        *(in_ECX + 0x51) = 0;\n        pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n        if (*(in_ECX + 0x3f) == '\\0') {\ncode_r0x00ba0b7f:\n            if (*(in_ECX + 0x51) == '\\0') {\n                if (((*0xc56281 == '\\0') || (*(in_ECX + 0x145) != '\\0')) && ((*0xc567e8 == '\\0' || (in_ECX[0x3e] != 0)))\n                   ) {\n                    iVar7 = (*pcVar16)(&stack0xffffff24, 0);\n                    while (iVar7 != 0) {\n                        if (puStack208 == 0x12) {\n                            *(in_ECX + 0x3f) = 1;\n                            in_ECX[0x3e] = 1;\n                            break;\n                        }\n                        if (*0xc567d8 == -1) {\ncode_r0x00ba0f8d:\n                            unaff_ESI = &stack0xffffff2c;\n                            iVar7 = fcn.00b931ce(unaff_ESI);\n                            if (iVar7 == 0) {\n                                (*_sym.imp.USER32.dll_TranslateMessage)();\n                                (*_sym.imp.USER32.dll_DispatchMessageW)();\n                            }\n                        }\n                        else {\n                            if (((*0xc56814 <= *0xc567d8) || (iVar7 = **(*0xc56810 + *0xc567d8 * 4),  iVar7 == 0)) ||\n                               (*(iVar7 + 0x18) == 0)) {\n                                *0xc567d8 = -1;\n                                goto code_r0x00ba0f8d;\n                            }\n                            unaff_ESI = &stack0xffffff2c;\n                            iVar7 = (*_sym.imp.USER32.dll_TranslateAcceleratorW)();\n                            if (iVar7 == 0) goto code_r0x00ba0f8d;\n                        }\n                        iVar7 = (*pcVar16)(&stack0xffffff28);\n                    }\n                    if (*0xc56282 == '\\x01') {\n                        *0xc56287 = '\\0';\n                        *0xc56282 = '\\0';\n                        in_ECX[0x3e] = 1;\n                    }\n                    if (in_ECX[0x3e] == 1) {\n                        uStack288 = 0;\n                        fcn.00baff13(&stack0xfffffee0);\n                        goto code_r0x00ba0e44;\n                    }\n                }\n                if (*0xc574a8 != 0) {\n                    iVar7 = **0xc574ac;\n                    piVar8 = (*0xc574ac)[1];\n                    unaff_ESI = *0xc574ac;\n                    fcn.00bb106c();\n                    *0xc574a8 = *0xc574a8 + -1;\n                    uVar11 = 0;\n                    *0xc574b0 = *0xc574b0 & -(piVar8 != NULL);\n                    uVar3 = in_ECX[0x72];\n                    uVar10 = 0;\n                    if (uVar3 != 0) {\n                        piVar1 = in_ECX + 0x71;\n                        do {\n                            piVar4 = **(*piVar1 + uVar11 * 4);\n                            in_ECX = puStack292;\n                            if ((piVar4 != NULL) && (uVar10 = uVar11,  *piVar4 == iVar7)) break;\n                            uVar11 = uVar11 + 1;\n                            uVar10 = uVar11;\n                        } while (uVar11 < uVar3);\n                    }\n                    pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n                    *0xc574ac = piVar8;\n                    if (uVar10 == uVar3) goto code_r0x00ba0bf1;\n                    unaff_ESI = **(in_ECX[0x71] + uVar10 * 4) + 8;\n                    iVar7 = fcn.00b99fbd(unaff_ESI);\n                    fcn.00b981a7(**(in_ECX[0x71] + in_stack_fffffeac * 4) + 0x18);\n                    fcn.00b9b89c(*(iVar7 + 0x10) + 1, 1, 0);\n                    pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n                    goto code_r0x00ba0e37;\n                }\ncode_r0x00ba0bf1:\n                if ((*0xc56287 == '\\x01') && (*0xc56281 == '\\0')) {\n                    unaff_ESI = 0xa;\n                    (*_sym.imp.KERNEL32.dll_Sleep)();\n                    goto code_r0x00ba0e37;\n                }\n                if ((in_ECX[0x115] != 0) && (*0xc5741c == '\\0')) {\n                    piVar8 = in_ECX[0x113];\n                    ppiVar22 = in_ECX + 0x113;\n                    *0xc5741c = 1;\n                    in_stack_fffffeac = NULL;\n                    do {\n                        if (piVar8 == NULL) {\n                            do {\n                                piVar8 = *ppiVar22;\n                                while( true ) {\n                                    if (piVar8 == NULL) {\n                                        *0xc5741c = '\\0';\n                                        pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n                                        in_ECX = puStack312;\n                                        if (0 < in_stack_fffffe98) goto code_r0x00ba0e37;\n                                        goto code_r0x00ba0c64;\n                                    }\n                                    if (*(*piVar8 + 0x11) != '\\0') break;\n                                    piVar8 = piVar8[1];\n                                }\n                                fcn.00bfa3f3(&stack0xfffffe9c);\n                            } while( true );\n                        }\n                        if (*(*piVar8 + 0x11) == '\\0') {\n                            uVar3 = *(*piVar8 + 0x14);\n                            unaff_ESI = 0xba0e7c;\n                            uVar10 = (*_sym.imp.WINMM.dll_timeGetTime)();\n                            iVar7 = 0;\n                            uVar11 = uVar10 - uVar3;\n                            if (uVar3 < 0x80000000) {\n                                if (uVar10 < 0x80000000) {\ncode_r0x00ba0e96:\n                                    iVar7 = uVar11 >> 0x1f;\n                                }\n                            }\n                            else if (0x7fffffff < uVar10) goto code_r0x00ba0e96;\n                            iVar17 = *piVar8;\n                            if ((-1 < iVar7) && ((0 < iVar7 || (*(iVar17 + 0x18) <= uVar11)))) {\n                                in_stack_fffffeac = in_stack_fffffeac + 1;\n                                uVar9 = (*_sym.imp.WINMM.dll_timeGetTime)();\n                                *(iVar17 + 0x14) = uVar9;\n                                iVar7 = fcn.00b99fbd(*piVar8);\n                                ppiVar22 = NULL;\n                                *(*piVar8 + 0x10) = 1;\n                                in_stack_fffffe98 = *(iVar7 + 0x10) + 1;\n                                unaff_ESI = 0xba10de;\n                                fcn.00b9b89c(in_stack_fffffe98, 1, 0);\n                                *(*piVar8 + 0x10) = 0;\n                            }\n                        }\n                        piVar8 = piVar8[1];\n                    } while( true );\n                }\ncode_r0x00ba0c64:\n                if (((*0xc567bc != '\\0') && (*(in_ECX + 0x116) != '\\x01')) && (*0xc567e8 != '\\x01')) {\n                    uStack204 = 0;\n                    iStack200 = 8;\n                    puStack208 = fcn.00bb0ff6(0x10);\n                    *puStack208 = 0;\n                    unaff_ESI = 0x4;\n                    puStack196 = fcn.00bb0ff6(4);\n                    if (puStack196 == NULL) {\n                        puStack196 = NULL;\n                    }\n                    else {\n                        *puStack196 = 1;\n                    }\n                    do {\n                        if (*0xc567dc == 0) {\n                            if (*0xc567bc == '\\0') {\n                                if ((*0xc5691c == 0) && (*0xc57420 < 100)) {\n                                    *0xc57420 = *0xc57420 + 1;\n                                }\n                                (*_sym.imp.KERNEL32.dll_Sleep)();\n                            }\n                            *piStack152 = *piStack152 + -1;\n                            if (*piStack152 == 0) {\n                                fcn.00bb106c();\n                                fcn.00bb106c();\n                            }\n                            goto code_r0x00ba0d2d;\n                        }\n                        puVar13 = **0xc567e0;\n                        in_stack_fffffec4 = puVar13;\n                        fcn.00c1629f(puVar13);\n                        fcn.00b9467d();\n                        if (puVar13 != NULL) {\n                            in_stack_fffffec4 = extraout_ECX;\n                            fcn.00b94665();\n                        }\n                        *0xc57420 = 0;\n                    } while ((iStack160 == 0) || (iVar7 = fcn.00b99fbd(&stack0xffffff5c),  iVar7 == 0));\n                    puStack208 = NULL;\n                    iStack200 = 0;\n                    puStack196 = 0x1;\n                    fcn.00b99a20();\n                    puStack196 = 0x1;\n                    puStack208 = puStack172;\n                    fcn.00b97f41(L\"@GUI_CTRLID\");\n                    fcn.00b98b13(&stack0xffffffe8, &stack0xffffff2c, 1);\n                    fcn.00b95a64();\n                    fcn.00b99a20();\n                    in_stack_fffffeac = L\"@GUI_WINHANDLE\";\n                    uStack212 = 7;\n                    uStack224 = uStack168;\n                    fcn.00b97f41(L\"@GUI_WINHANDLE\");\n                    fcn.00b98b13(&stack0xffffffa8, &stack0xffffff1c, 1);\n                    fcn.00b95a64();\n                    fcn.00b99a20();\n                    uStack228 = 7;\n                    uStack240 = uStack180;\n                    fcn.00b97f41(L\"@GUI_CTRLHANDLE\");\n                    in_stack_fffffe98 = 0x1;\n                    unaff_ESI = &stack0xffffff0c;\n                    fcn.00b98b13(&stack0xffffffb8, unaff_ESI, 1);\n                    fcn.00b95a64();\n                    *(in_ECX + 0x116) = 1;\n                    fcn.00b9b89c(*(iVar7 + 0x10) + 1, 1, 0);\n                    *(in_ECX + 0x116) = 0;\n                    fcn.00b99a20();\n                    fcn.00b95a64();\n                    pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n                    goto code_r0x00ba0e37;\n                }\ncode_r0x00ba0d2d:\n                if ((in_ECX[0x61] == 0) || (*(in_ECX + 0x121) == '\\x01')) goto code_r0x00ba0d3a;\n                *(in_ECX + 0x121) = 1;\n                iVar7 = in_ECX[0x62];\n                uStack216 = 0;\n                uStack132 = 0xc1fb84;\n                puStack296 = NULL;\n                uStack128 = 0;\n                uStack124 = 0;\n                uStack120 = 0;\n                fcn.00bf9c9f(iVar7);\n                fcn.00bed9e3();\n                piVar8 = piStack80;\n                uStack184 = 0;\n                iVar17 = *piStack80;\n                fcn.00b99ac0(iVar17);\n                iVar18 = piVar8[1];\n                fcn.00b99997();\n                puStack296 = fcn.00b99fbd(*(iVar18 + 8));\n                uVar21 = fcn.00b971c8(puStack296[4]);\n                iStack272 = uVar21;\n                in_ECX[0x3d] = extraout_ECX_00;\n                iVar18 = 3;\n                puVar13 = in_stack_fffffec4;\n                if (0 < *((uVar21 >> 0x20) + 0x14)) {\n                    puVar14 = iStack92 + 8;\n                    iVar19 = iStack272;\n                    puStack296 = puVar14;\n                    do {\n                        puStack308 = *(iVar19 + 4);\n                        if (*(puStack308[iVar18] + 8) == 0) {\n                            iVar19 = *(iStack272 + 4);\n                            do {\n                                piVar8 = *(iVar19 + 4 + iVar18 * 4);\n                                if (((*(piVar8 + 2) != 0x33) && (**(iVar19 + iVar18 * 4) == *piVar8)) ||\n                                   ((iVar15 = **(iVar19 + iVar18 * 4),  iVar15 != 0x24 && (iVar15 != 0x1e)))) {\n                                    fcn.00bfa0b5(0x91, *(*(*(iStack272 + 4) + 4 + iVar18 * 4) + 10));\n                                    goto code_r0x00bd5683;\n                                }\n                                iVar15 = iVar18 + 1;\n                                iVar18 = iVar18 + 1;\n                                puVar14 = puStack296;\n                            } while (*(puStack308[iVar15] + 8) == 0);\n                        }\n                        iVar19 = iVar18 + 1;\n                        if (*(puStack308[iVar18 + 1] + 8) == 0x41) {\n                            iVar19 = iVar18 + 2;\n                            iVar18 = 0;\n                            do {\n                                iVar2 = *(puStack308[iVar19] + 8);\n                                if (iVar2 == 0x47) {\n                                    iVar18 = iVar18 + 1;\n                                }\n                                else if (iVar2 == 0x48) {\n                                    iVar18 = iVar18 + -1;\n                                    puVar14 = puStack296;\n                                    if (iVar18 < 0) break;\n                                }\n                                else if ((iVar2 == 0x40) && (puVar14 = puStack296,  iVar18 == 0)) break;\n                                iVar19 = iVar19 + 1;\n                            } while( true );\n                        }\n                        in_stack_fffffeac = 0xbd560d;\n                        fcn.00be6665(*puVar14);\n                        uVar21 = CONCAT44(puStack304, iStack272);\n                        iVar18 = iVar19 + 1;\n                        iStack236 = iStack236 + 1;\n                        puVar14 = puStack300 + 1;\n                        iVar19 = uStack276;\n                        puVar13 = puStack148;\n                        puStack300 = puVar14;\n                    } while (iStack236 < puStack304[5]);\n                }\n                iStack272 = uVar21;\n                fcn.00b98561(*((uVar21 >> 0x20) + 0x10));\n                iStack260 = 3;\n                puStack312 = 0x1;\n                if (0 < puStack304[5]) {\ncode_r0x00bd56e9:\n                    in_ECX = puStack268;\n                    uStack228 = 0;\n                    iVar18 = *(uStack276 + 4);\n                    iVar2 = *(*(iVar18 + iStack260 * 4) + 8);\n                    iVar19 = iStack260;\n                    while (iVar2 == 0) {\n                        iVar15 = **(iVar18 + iVar19 * 4);\n                        if (iVar15 == 0x24) {\ncode_r0x00bd5717:\n                            iVar19 = iVar19 + 1;\n                        }\n                        else if (iVar15 == 0x1e) {\n                            uStack228 = 0x100;\n                            goto code_r0x00bd5717;\n                        }\n                        iVar2 = *(*(iVar18 + iVar19 * 4) + 8);\n                    }\n                    iVar15 = iVar19 * 4;\n                    iVar12 = 0;\n                    puStack300 = 0x1;\n                    do {\n                        iVar15 = iVar15 + 4;\n                        iVar2 = *(*(iVar15 + iVar18) + 8);\n                        if (iVar2 == 0x47) {\n                            iVar12 = iVar12 + 1;\n                        }\n                        else if (iVar2 == 0x48) {\n                            iVar12 = iVar12 + -1;\n                            if (iVar12 < 0) goto code_r0x00bd5767;\n                        }\n                        else if ((iVar2 == 0x40) && (iVar12 == 0)) goto code_r0x00bd5767;\n                        puStack300 = puStack300 + 1;\n                    } while( true );\n                }\ncode_r0x00bd591a:\n                in_stack_fffffeac = 0xc49a3c;\n                fcn.00b97f41(0xc49a3c);\n                uVar3 = uStack212;\n                fcn.00b98620(&stack0xffffffe8, (iStack200 != 6) - 1 & uStack212, 0, 1);\n                fcn.00b95a64();\n                in_stack_fffffe98 = NULL;\n                unaff_ESI = NULL;\n                fcn.00b9b89c(*(iVar17 + 0x10) + 1, 0, 0);\n                fcn.00b9843f();\n                if (iStack232 != 0) {\n                    fcn.00b97b3d();\n                    iStack236 = 0;\n                }\n                if (iStack232 < 5) goto code_r0x00bd5af2;\n    // switch table (11 cases) at 0xbd60e5\n                switch(iStack232) {\n                case 5:\n                    if (uVar3 != 0) {\n                        fcn.00b98e34();\n                    }\n                    break;\n                case 8:\n                    if (uVar3 != 0) {\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n                        goto code_r0x00bd5ae9;\n                    }\n                    break;\n                case 10:\n                    goto joined_r0x00bd5ae0;\n                case 0xb:\n                    fcn.00bb106c();\n                    goto code_r0x00bd5ae9;\n                case 0xc:\n                    if (uVar3 != 0) {\n                        fcn.00be73f0();\n                    }\n                    break;\n                case 0xd:\n                case 0xe:\njoined_r0x00bd5ae0:\n                    if (uVar3 != 0) {\n                        fcn.00b95a64();\ncode_r0x00bd5ae9:\n                        fcn.00bb106c();\n                    }\n                    break;\n                case 0xf:\n                    if (uVar3 != 0) {\n                        fcn.00be7405();\n                    }\n                }\ncode_r0x00bd5af2:\n                uStack240 = 1;\n                uStack252 = 0;\n                fcn.00be66f4();\n                fcn.00be66f4();\n                *(in_ECX + 0x121) = 0;\n                pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n                in_stack_fffffec4 = puVar13;\n                goto code_r0x00ba0e37;\n            }\n        }\ncode_r0x00ba0e44:\n        *(in_ECX + 0x51) = 0;\n        if (in_ECX[0x3b] == 1) {\n            fcn.00ba11d0();\n            if (*(in_ECX + 0x3f) != '\\x01') {\n                fcn.00ba11f3();\n                (*_sym.imp.USER32.dll_LockWindowUpdate)();\n                (*_sym.imp.USER32.dll_DestroyWindow)();\n                pcVar16 = _sym.imp.USER32.dll_GetMessageW;\n                iVar7 = (*_sym.imp.USER32.dll_GetMessageW)(&stack0xffffffd4, 0, 0);\n                while (0 < iVar7) {\n                    (*_sym.imp.USER32.dll_TranslateMessage)(&stack0xffffffc4);\n                    (*_sym.imp.USER32.dll_DispatchMessageW)(&stack0xffffffc0);\n                    iVar7 = (*pcVar16)(&stack0xffffffbc, 0, 0, 0);\n                }\n            }\n        }\n        else {\n            in_ECX[0x3b] = in_ECX[0x3b] + -1;\n        }\n        uVar9 = 0;\n    }\n    else {\n        *0xc56280 = 0;\n        fcn.00bfa0b5(0x9a, 0xffffffff);\n        uVar9 = 0xffffffff;\n    }\n    return uVar9;\ncode_r0x00bd5767:\n    iStack260 = iVar19;\n    if (puStack312 <= iStack236) {\n        fcn.00b98620(**(iVar18 + iVar19 * 4), *puVar13, uStack228 | 0x200, 1);\n        goto code_r0x00bd58f4;\n    }\n    puStack296 = NULL;\n    in_stack_fffffeac = puStack300 + iVar19;\n    uStack288 = 0;\n    iStack284 = 1;\n    iVar18 = fcn.00b9a000(uStack276, &stack0xfffffeb8, &stack0xfffffed8, in_stack_fffffeac);\n    if (-1 < iVar18) {\n        unaff_ESI = &stack0xfffffec8;\n        fcn.00b98620(**(puStack292[1] + iVar19 * 4), unaff_ESI, uStack244 | 0x200, 1);\n        if (iVar7 != 0) {\n            fcn.00b97b3d();\n            iVar17 = 0;\n        }\n        if (iStack284 < 5) goto code_r0x00bd58c5;\n    // switch table (11 cases) at 0xbd60b9\n        switch(iStack284) {\n        case 5:\n            if (puStack296 != NULL) {\n                fcn.00b98e34();\n            }\n            break;\n        case 8:\n            if (puStack296 != NULL) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n                goto code_r0x00bd58bd;\n            }\n            break;\n        case 10:\n            goto joined_r0x00bd58b0;\n        case 0xb:\n            fcn.00bb106c();\n            goto code_r0x00bd58bd;\n        case 0xc:\n            if (puStack296 != NULL) {\n                fcn.00be73f0();\n            }\n            break;\n        case 0xd:\n        case 0xe:\njoined_r0x00bd58b0:\n            if (puStack296 != NULL) {\n                fcn.00b95a64();\ncode_r0x00bd58bd:\n                fcn.00bb106c();\n            }\n            break;\n        case 0xf:\n            if (puStack296 != NULL) {\n                fcn.00be7405();\n            }\n        }\ncode_r0x00bd58c5:\n        iStack284 = 1;\n        puStack296 = NULL;\ncode_r0x00bd58f4:\n        puVar13 = puVar13 + 1;\n        iStack260 = puStack300 + iVar19 + 1;\n        puStack312 = puStack312 + 1;\n        if (puStack304[5] < puStack312) goto code_r0x00bd591a;\n        goto code_r0x00bd56e9;\n    }\n    if (puStack304 != NULL) {\n        fcn.00b97b3d();\n        puStack308 = NULL;\n    }\n    if (puStack304 < 5) goto code_r0x00bd5673;\n    // switch table (11 cases) at 0xbd6111\n    switch(puStack304) {\n    case 0x5:\n        if (puVar13 != NULL) {\n            unaff_ESI = 0xbd5a35;\n            fcn.00b98e34();\n        }\n        break;\n    case 0x8:\n        if (puVar13 != NULL) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n            goto code_r0x00bd566b;\n        }\n        break;\n    case 0xa:\n        goto joined_r0x00bd5a86;\n    case 0xb:\n        fcn.00bb106c();\n        goto code_r0x00bd566b;\n    case 0xc:\n        if (puVar13 != NULL) {\n            unaff_ESI = 0xbd5a64;\n            fcn.00be73f0();\n        }\n        break;\n    case 0xd:\n    case 0xe:\njoined_r0x00bd5a86:\n        if (puVar13 != NULL) {\n            fcn.00b95a64();\ncode_r0x00bd566b:\n            unaff_ESI = 0xbd5670;\n            fcn.00bb106c();\n        }\n        break;\n    case 0xf:\n        if (puVar13 != NULL) {\n            unaff_ESI = 0xbd5a7b;\n            fcn.00be7405();\n        }\n    }\ncode_r0x00bd5673:\n    puStack304 = 0x1;\n    in_stack_fffffec4 = NULL;\ncode_r0x00bd5683:\n    fcn.00b99df0();\n    fcn.00be66f4();\n    in_stack_fffffe98 = 0xbd56a7;\n    fcn.00be66f4();\n    *(in_ECX + 0x121) = 0;\ncode_r0x00ba0d3a:\n    if ((*0xc56930 != '\\0') && (*(in_ECX + 0x459) != '\\x01')) {\n        fcn.00b977c7();\n        do {\n            do {\n                in_stack_fffffec4 = &stack0xffffff58;\n                cVar6 = fcn.00bf28f7(in_stack_fffffec4);\n                if (cVar6 == '\\0') {\n                    fcn.00b95a64();\n                    goto code_r0x00ba0d47;\n                }\n            } while (iStack164 == 0);\n            in_stack_fffffec4 = &stack0xffffff58;\n            iVar7 = fcn.00b99fbd(in_stack_fffffec4);\n        } while (iVar7 == 0);\n        uStack108 = 0;\n        uStack100 = 0;\n        uStack96 = 1;\n        fcn.00b99a20();\n        uStack96 = 1;\n        uStack108 = uStack176;\n        fcn.00b97f41(L\"@TRAY_ID\");\n        in_stack_fffffeac = &stack0xffffffc4;\n        fcn.00b98b13(in_stack_fffffeac, &stack0xffffff90, 1);\n        fcn.00b95a64();\n        *(in_ECX + 0x459) = 1;\n        fcn.00b9b89c(*(iVar7 + 0x10) + 1, 1, 0);\n        *(in_ECX + 0x459) = 0;\n        fcn.00b99a20();\n        fcn.00b95a64();\n        pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n        goto code_r0x00ba0e37;\n    }\ncode_r0x00ba0d47:\n    iVar7 = in_ECX[0x3e];\n    if (iVar7 == 7) {\n        puStack308 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(in_ECX[0x111], 10);\n        pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n        if (puStack308 == 0x102) goto code_r0x00ba0e37;\n        (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(in_ECX[0x111], &stack0xfffffecc);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(in_ECX[0x111]);\ncode_r0x00bd5ca6:\n        fcn.00baff13(&stack0xfffffe8c);\ncode_r0x00ba1098:\n        *(in_ECX + 0x51) = 1;\n        in_ECX[0x3e] = 0;\n        pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n        goto code_r0x00ba0e37;\n    }\n    if (iVar7 != 2) {\n        if ((iVar7 == 8) || (iVar7 == 9)) {\n            (*_sym.imp.KERNEL32.dll_Sleep)(10);\n            if (in_ECX[0x10f] != 0) {\n                iVar20 = fcn.00bb0719();\n                if ((-1 < iVar20) && ((0xffffffff < iVar20 || (in_ECX[0x10f] <= iVar20)))) {\n                    if (in_ECX[0x112] != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(in_ECX[0x112]);\n                        in_ECX[0x112] = 0;\n                    }\n                    goto code_r0x00bd5ca6;\n                }\n            }\n            cVar6 = '\\0';\n            if (in_ECX[0x3e] == 8) {\n                fcn.00bf3e91(&stack0xfffffea3);\n                pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n                if (cVar6 != '\\x01') goto code_r0x00ba0e37;\n            }\n            else {\n                pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n                if (in_ECX[0x3e] != 9) goto code_r0x00ba0e37;\n            }\n            iVar7 = in_ECX[0x112];\n            in_stack_fffffec4 = 0xcccccccc;\n            if (iVar7 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(iVar7, &stack0xfffffec4);\n                if ((in_stack_fffffec4 == 0x103) &&\n                   (iVar7 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(in_ECX[0x112], 0), \n                   pcVar16 = _sym.imp.USER32.dll_PeekMessageW,  iVar7 != 0)) goto code_r0x00ba0e37;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(in_ECX[0x112]);\n                in_ECX[0x112] = 0;\n                iVar7 = extraout_ECX_01;\n            }\n            puVar13 = in_stack_fffffec4;\n            if (in_ECX[0x3e] == 8) {\n                puVar14 = &stack0xfffffe8c;\n                fcn.00c0cc41(puVar14);\n                in_stack_fffffec4 = puVar14;\n            }\n            else {\n                iVar7 = 0;\n                fcn.00baff61(in_stack_fffffec4, 0);\n            }\n            *(in_ECX + 0x51) = 1;\n            in_ECX[0x3e] = 0;\n            (*_sym.imp.KERNEL32.dll_Sleep)(in_ECX[0xbd], in_stack_fffffec4, iVar7);\n            pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n            in_stack_fffffec4 = puVar13;\n            goto code_r0x00ba0e37;\n        }\n        if ((((iVar7 == 3) || (iVar7 == 4)) || (iVar7 == 5)) || (iVar7 == 6)) goto code_r0x00ba0fdd;\n        iVar7 = arg_8h + 1;\n        in_ECX[0x3d] = arg_8h;\n        if (((*0xc572a0 < arg_8h) || (arg_8h < 1)) || (iVar17 = arg_8h * 0x10 + *0xc572dc,  iVar17 == 0)) {\n            in_ECX[0x3e] = 1;\n            pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n            arg_8h = iVar7;\n            goto code_r0x00ba0e37;\n        }\n        puVar13 = NULL;\n        puStack300 = NULL;\n        puStack292 = NULL;\n        uStack288 = 1;\n        iVar18 = **(iVar17 + 4);\n        in_stack_fffffe98 = NULL;\n        if (*(iVar18 + 8) == 0) {\n            arg_8h = iVar7;\n            fcn.00b9e580(iVar17, &fcn.00ba0b30::arg_8h);\n            puVar13 = in_stack_fffffec4;\n        }\n        else {\n            puVar14 = 0x1;\n            arg_8h = iVar7;\n    // switch table (127 cases) at 0xba1110\n            switch(*(iVar18 + 8)) {\n            case 1:\n                iVar7 = fcn.00b9f5c0(0, iVar17, &stack0xfffffea4, &stack0xfffffed4);\n                break;\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xb:\n            case 0xc:\n            case 0xd:\n            case 0xe:\n            case 0xf:\n            case 0x10:\n            case 0x11:\n            case 0x12:\n            case 0x13:\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n            case 0x1c:\n            case 0x1d:\n            case 0x1e:\n            case 0x1f:\n            case 0x20:\n            case 0x21:\n            case 0x22:\n            case 0x23:\n            case 0x24:\n            case 0x25:\n            case 0x26:\n            case 0x27:\n            case 0x28:\n            case 0x29:\n            case 0x2a:\n            case 0x2b:\n            case 0x2c:\n            case 0x2d:\n            case 0x2e:\n            case 0x2f:\n            case 0x30:\n            case 0x31:\n            case 0x32:\n            case 0x33:\n            case 0x36:\n            case 0x37:\n            case 0x38:\n            case 0x39:\n            case 0x3a:\n            case 0x3b:\n            case 0x3c:\n            case 0x3d:\n            case 0x3e:\n            case 0x3f:\n            case 0x40:\n            case 0x41:\n            case 0x42:\n            case 0x43:\n            case 0x44:\n            case 0x45:\n            case 0x46:\n            case 0x47:\n            case 0x48:\n            case 0x49:\n            case 0x4a:\n            case 0x4b:\n            case 0x4c:\n            case 0x4d:\n            case 0x4e:\n            case 0x4f:\n            case 0x50:\n            case 0x51:\n            case 0x52:\n            case 0x53:\n            case 0x54:\n            case 0x55:\n            case 0x56:\n            case 0x57:\n            case 0x58:\n            case 0x59:\n            case 0x5a:\n            case 0x5b:\n            case 0x5c:\n            case 0x5d:\n            case 0x5e:\n            case 0x5f:\n            case 0x60:\n            case 0x61:\n            case 0x62:\n            case 99:\n            case 100:\n            case 0x65:\n            case 0x66:\n            case 0x67:\n            case 0x68:\n            case 0x69:\n            case 0x6a:\n            case 0x6b:\n            case 0x6c:\n            case 0x6d:\n            case 0x6e:\n            case 0x6f:\n            case 0x70:\n            case 0x71:\n            case 0x72:\n            case 0x73:\n            case 0x74:\n            case 0x75:\n            case 0x76:\n            case 0x77:\n            case 0x78:\n            case 0x79:\n            case 0x7a:\n            case 0x7b:\n            case 0x7c:\n            case 0x7d:\n            case 0x7e:\n                iVar7 = fcn.00b9a000(iVar17, &stack0xfffffea4, &stack0xfffffed4, 0xffffffff);\n                break;\n            case 0x34:\n                iVar7 = fcn.00b9fe40(0, iVar17, &stack0xfffffea4, &stack0xfffffed4, &stack0xfffffeef);\n                break;\n            case 0x35:\n                fcn.00c0c2f7();\n                cVar6 = fcn.00be6543();\n                if (cVar6 == '\\0') {\n                    fcn.00bfa0b5(0xa7, *(iVar18 + 10));\n                    fcn.00b99df0();\n                    pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n                    goto code_r0x00ba0e37;\n                }\n                uVar9 = fcn.00c0c2f7();\n                iVar7 = fcn.00c0b851(iVar17, &stack0xfffffea4, uVar9);\n                break;\n            case 0x7f:\n                goto code_r0x00ba0e18;\n            default:\n                fcn.00b9e800(iVar17);\n                puVar13 = in_stack_fffffec4;\n                goto code_r0x00ba0e00;\n            }\n            puVar13 = in_stack_fffffec4;\n            if ((-1 < iVar7) && (iVar7 = *(*(iVar17 + 4) + unaff_ESI * 4),  *(iVar7 + 8) != 0x7f)) {\n                fcn.00bfa0b5(0x72, *(iVar7 + 10));\n                fcn.00b99df0();\n                pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n                goto code_r0x00ba0e37;\n            }\n        }\ncode_r0x00ba0e00:\n        puVar5 = puStack308;\n        puVar14 = puStack304;\n        in_stack_fffffec4 = puVar13;\n        if (puStack308 != NULL) {\n            *puStack308[3] = *puStack308[3] + -1;\n            if (*puStack308[3] == 0) {\n                fcn.00bb106c(*puStack308);\n                fcn.00bb106c(puVar5[3]);\n            }\n            fcn.00bb106c(puVar5);\n            puStack308 = NULL;\n            puVar14 = puStack304;\n            in_stack_fffffec4 = puVar13;\n        }\ncode_r0x00ba0e18:\n        if (puVar14 < 5) goto code_r0x00ba0e21;\n        iVar7 = puVar14 + -5;\n    // switch table (11 cases) at 0xba11a4\n        switch(iVar7) {\n        case 0:\n            if (puVar13 != NULL) {\n                fcn.00b98e34(iVar7);\n            }\n            break;\n        case 3:\n            if (puVar13 != NULL) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar13);\n                puVar13 = puStack300;\n                goto code_r0x00bd5de8;\n            }\n            break;\n        case 5:\n            goto joined_r0x00bd5dd7;\n        case 6:\n            fcn.00bb106c(puVar13[1]);\n            puVar13 = puStack300;\n            goto code_r0x00bd5de8;\n        case 7:\n            if (puVar13 != NULL) {\n                fcn.00be73f0(iVar7);\n            }\n            break;\n        case 8:\n        case 9:\njoined_r0x00bd5dd7:\n            if (puVar13 != NULL) {\n                fcn.00b95a64();\n                puVar13 = in_stack_fffffe98;\ncode_r0x00bd5de8:\n                fcn.00bb106c(puVar13);\n            }\n            break;\n        case 10:\n            if (puVar13 != NULL) {\n                fcn.00be7405(iVar7);\n            }\n        }\ncode_r0x00ba0e21:\n        uStack288 = 1;\n        puStack300 = NULL;\n        pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n        goto code_r0x00ba0e37;\n    }\ncode_r0x00ba0fdd:\n    (*_sym.imp.KERNEL32.dll_Sleep)(10);\n    if (in_ECX[0xbc] != 0) {\n        iVar20 = fcn.00bb0719();\n        if ((-1 < iVar20) && ((0xffffffff < iVar20 || (in_ECX[0xbc] <= iVar20)))) {\n            if (in_ECX[0x3e] != 2) goto code_r0x00bd5ca6;\n            goto code_r0x00ba1098;\n        }\n    }\n    pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n    if (in_ECX[0x3e] < 3) goto code_r0x00ba0e37;\n    // switch table (4 cases) at 0xbd613d\n    switch(in_ECX[0x3e]) {\n    case 3:\n        iVar7 = fcn.00b9b93d(1);\n        break;\n    case 4:\n        iVar7 = fcn.00b9b93d(1);\n        goto code_r0x00bd5e32;\n    case 5:\n        iVar7 = fcn.00c161ac();\n        break;\n    case 6:\n        iVar7 = fcn.00c161ac();\ncode_r0x00bd5e32:\n        if (iVar7 < 0) goto code_r0x00bd5e4f;\n        pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n        if (0 < iVar7) goto code_r0x00ba0e37;\n        goto code_r0x00bd5e88;\n    default:\n        goto code_r0x00ba0e37;\n    }\n    if (iVar7 < 0) {\ncode_r0x00bd5e4f:\n        fcn.00be6aa3(-iVar7, 0);\n        fcn.00baff13(&stack0xfffffe84);\n    }\n    pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n    if (iVar7 != 0) {\n        if (0 < iVar7) {\ncode_r0x00bd5e88:\n            if ((in_ECX[0x3e] == 5) || (in_ECX[0x3e] == 3)) {\n                uStack180 = 0;\n                puStack172 = NULL;\n                uStack168 = 1;\n                uVar9 = *in_ECX[0x7c];\n                fcn.00b99a20();\n                uStack168 = 7;\n                uStack180 = uVar9;\n                fcn.00be6a50(&stack0xffffff4c, 0);\n                fcn.00b99a20();\n            }\n        }\n        *(in_ECX + 0x51) = 1;\n        in_ECX[0x3e] = 0;\n        fcn.00bf54e6();\n        pcVar16 = _sym.imp.USER32.dll_PeekMessageW;\n    }\ncode_r0x00ba0e37:\n    if (*(in_ECX + 0x3f) != '\\0') goto code_r0x00ba0e44;\n    goto code_r0x00ba0b7f;\n}\n",
        "token_count": 11055
    },
    "00ba222e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba222e(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t unaff_ESI;\n    uint uVar5;\n    uchar *arg_8h_00;\n    int32_t iVar6;\n    uint uStack32;\n    \n    iVar6 = 0xc1f910;\n    uStack32 = 0;\n    fcn.00b99bf8(0xc1f910);\n    if (((*(arg_8h + 8) == 2) && (iVar4 = fcn.00b99c9c(),  iVar4 != -1)) && (iVar4 < 1)) {\ncode_r0x00bd6aa2:\n        fcn.00be6aa3(1, 0);\n        return 0;\n    }\n    if (*(**(arg_8h + 4) + 0xc) == 4) {\n        iVar4 = fcn.00bb0ff6(0x38);\n        if (iVar4 == 0) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = fcn.00b95906();\n        }\n        iVar1 = **(arg_8h + 4);\n        fcn.00b99997();\n        arg_8h_00 = 0xba22c0;\n        cVar2 = fcn.00b95956(*(iVar1 + 8), 0x8000);\n        if (cVar2 == '\\0') {\n            if (iVar4 != 0) {\n                fcn.00b95a1a(extraout_ECX);\n            }\n            goto code_r0x00bd6aa2;\n        }\n    }\n    else {\n        arg_8h_00 = &stack0xffffffe0;\n        cVar2 = fcn.00bff7df(arg_8h_00, **(arg_8h + 4), 0);\n        if (cVar2 == '\\0') goto code_r0x00bd6aa2;\n        iVar4 = *(**(*(in_ECX + 0x194) + unaff_ESI * 4) + 4);\n    }\n    uVar5 = 0;\n    fcn.00b97b76(0x400);\n    if (iVar6 == 0) {\n        cVar2 = fcn.00b955ec(&stack0xffffffd4);\n        if (cVar2 == '\\0') {\n            fcn.00be6aa3(0xffffffff, 0);\n            cVar2 = '\\x01';\n            goto code_r0x00ba231d;\n        }\n    }\n    else {\n        fcn.00b953db();\n        if (0 < iVar6) {\n            do {\n                cVar3 = fcn.00b955ec(&stack0xffffffcc);\n                cVar2 = uVar5 >> 0x18;\n                if (cVar3 == '\\0') {\n                    if (iVar6 == 0x7fffffff) break;\n                    fcn.00be6aa3(0xffffffff, 0);\n                }\n                cVar2 = uVar5 >> 0x18;\n                arg_8h_00 = arg_8h_00 + 1;\n            } while (arg_8h_00 < iVar6);\ncode_r0x00ba231d:\n            if (cVar2 != '\\0') goto code_r0x00ba232e;\n        }\n    }\n    fcn.00b99b9c(&stack0xffffffc8);\ncode_r0x00ba232e:\n    if ((*(**(arg_8h + 4) + 0xc) == 4) && (fcn.00b95dcf(),  iVar4 != 0)) {\n        fcn.00b95a1a(extraout_ECX_00);\n    }\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 903
    },
    "00ba270e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00ba270e(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    int32_t arg_ch_00;\n    float10 fVar4;\n    double dVar5;\n    ulong uVar6;\n    uint uVar7;\n    uint var_68h;\n    uint var_20h;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    _var_10h = CONCAT44(in_ECX, var_10h);\n    iVar3 = **(arg_8h + 4);\n    if (*(iVar3 + 0xc) == 0xb) {\n        var_18h = 0;\n        fcn.00b99ac0(iVar3);\n        fcn.00b99997();\n        uVar6 = fcn.00bf89e2();\n        iVar3 = uVar6 >> 0x20;\n        if (uVar6 != 0) {\n            iVar3 = iVar3 + 4;\n        }\n        fcn.00b99bf8(iVar3);\n        fcn.00b99a20();\n        return 0;\n    }\n    uVar7 = 8;\n    var_1h._0_1_ = '\\x01';\n    if (1 < *(arg_8h + 8)) {\n        var_8h = (*(arg_8h + 4))[1];\n        if (*(var_8h + 0xc) == 10) {\n            uVar7 = 0x29;\n            cVar2 = fcn.00b99dae(0x29);\n            if (cVar2 != '\\0') goto code_r0x00ba2768;\n        }\n        var_1h._0_1_ = '\\0';\n        fcn.00b99c9c(uVar7);\n    }\ncode_r0x00ba2768:\n    if (*(**(arg_8h + 4) + 0xc) == 7) {\n        iVar3 = fcn.00bf89bb();\n        arg_ch_00 = iVar3 >> 0x1f;\n        goto code_r0x00ba27e3;\n    }\n    if (1 < *(arg_8h + 8)) {\n        puVar1 = (*(arg_8h + 4))[1];\n        fcn.00b99a20();\n        puVar1[3] = 1;\n        *puVar1 = 0;\n    }\n    var_20h = 0;\n    var_18h = 0;\n    var_14h = 1;\n    fcn.00ba2cc2(arg_8h, &var_20h);\n    if (var_14h == 3) {\n        fVar4 = fcn.00b99cf8();\n        _var_10h = fVar4;\n        dVar5 = _var_10h;\n        if (var_1h != '\\0') goto code_r0x00bd6cbc;\n    }\n    else {\n        dVar5 = fcn.00b99d46();\n        if ((var_1h != '\\0') && (*(**(arg_8h + 4) + 0xc) == 2)) {\ncode_r0x00bd6cbc:\n            var_1h._0_1_ = '\\0';\n        }\n    }\n    arg_ch_00 = dVar5 >> 0x20;\n    var_8h = SUB84(dVar5, 0);\n    fcn.00b99a20();\n    iVar3 = var_8h;\ncode_r0x00ba27e3:\n    fcn.00bafd71(iVar3, arg_ch_00);\n    fcn.00b99bf8(&var_68h);\n    return 0;\n}\n",
        "token_count": 907
    },
    "00ba2817": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba2817(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    int32_t **ppiVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    char cVar10;\n    bool bVar11;\n    uint *arg_8h_00;\n    uchar *arg_ch_00;\n    uint uStack72;\n    uchar auStack64 [4];\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t *piStack48;\n    uchar auStack28 [24];\n    \n    uStack60 = 0;\n    uVar8 = *(arg_8h + 8);\n    uStack72 = 0;\n    cVar10 = uVar8 == 1;\n    fcn.00b977c7();\n    if (1 < uVar8) {\n        cVar2 = '*';\n        iVar3 = *(*(arg_8h + 4) + 4);\n        cVar10 = fcn.00b99dae(0x2a);\n        if (cVar10 == '\\0') {\n            bVar11 = *(iVar3 + 0xc) == 0xe;\n            cVar10 = cVar2;\n            if (bVar11) {\n                puVar5 = fcn.00bf7ba4(auStack28);\n            }\n            else {\n                fcn.00b99997();\n                puVar5 = *(iVar3 + 8);\n                uStack60 = *puVar5;\n                uStack56 = puVar5[1];\n                uStack52 = puVar5[2];\n                piStack48 = puVar5[3];\n                *piStack48 = *piStack48 + 1;\n                puVar5 = &uStack60;\n            }\n            fcn.00b981a7(puVar5);\n            if (bVar11) {\n                fcn.00b95a64();\n            }\n            else {\n                fcn.00b95a64();\n            }\n            iVar3 = fcn.00b99fbd(&uStack52);\n            if (iVar3 == 0) {\n                fcn.00b99a20();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n                fcn.00be6aa3(1, 0);\n                goto code_r0x00ba2a5b;\n            }\n        }\n    }\n    iVar3 = **(arg_8h + 4);\n    fcn.00b99997();\n    fcn.00b97f41(**(iVar3 + 8));\n    iVar3 = &uStack72 + 3;\n    uVar8 = &uStack72 + 2;\n    puVar5 = &uStack72;\n    arg_ch_00 = auStack64;\n    arg_8h_00 = &uStack52;\n    cVar2 = fcn.00bb023b(arg_8h_00, arg_ch_00, &uStack72 + 1, puVar5, uVar8, iVar3);\n    fcn.00b95a64();\n    if (cVar2 == '\\0') {\n        if (iVar3 == -1) {\n            fcn.00be6aa3(1, 0);\n        }\ncode_r0x00bd6d56:\n        fcn.00b99a20();\n        *arg_ch = 0;\n    }\n    else {\n        if ((iVar3 == 0x13) && (puVar5 != '\\0')) {\n            iVar3 = 3;\n        }\n        if (puVar5 >> 8 != '\\0') {\n            uVar8 = 4;\n        }\n        if (puVar5 != '\\0') {\n            uVar8 = uVar8 | 2;\n        }\n        if (puVar5 >> 0x10 != '\\0') {\n            uVar8 = uVar8 | 1;\n        }\n        if (puVar5 >> 0x18 != '\\0') {\n            uVar8 = uVar8 | 8;\n        }\n        uVar1 = *(in_ECX + 0x1c8);\n        uVar9 = 0;\n        if (uVar1 != 0) {\n            do {\n                iVar4 = **(*(in_ECX + 0x1c4) + uVar9 * 4);\n                if ((iVar4 != 0) && (*(iVar4 + 4) == (iVar3 << 0x10 | uVar8))) {\n                    if (cVar10 == '\\0') {\n                        fcn.00b981a7(&uStack60);\n                    }\n                    else {\n                        uVar6 = *0xc562ac;\n                        (*_sym.imp.USER32.dll_UnregisterHotKey)(*0xc562ac, ***(*(in_ECX + 0x1c4) + uVar9 * 4));\n                        iVar3 = **(*(in_ECX + 0x1c4) + uVar9 * 4);\n                        if (iVar3 != 0) {\n                            fcn.00bb0de1(uVar6, iVar3);\n                        }\n                        **(*(in_ECX + 0x1c4) + uVar9 * 4) = 0;\n                    }\n                    goto code_r0x00ba2a5b;\n                }\n                uVar9 = uVar9 + 1;\n            } while (uVar9 < uVar1);\n        }\n        if (cVar10 != '\\0') goto code_r0x00bd6d56;\n        uVar8 = 0;\n        if (uVar1 != 0) {\n            ppiVar7 = *(in_ECX + 0x1c4);\n            do {\n                if (**ppiVar7 == 0) break;\n                uVar8 = uVar8 + 1;\n                ppiVar7 = ppiVar7 + 1;\n            } while (uVar8 < uVar1);\n        }\n        if (uVar8 == uVar1) {\n            iVar4 = fcn.00bb0ff6(0x28);\n            if (iVar4 != 0) {\n                fcn.00bb0e01();\n            }\n            fcn.00b934c2(&stack0xffffffa8);\n        }\n        else {\n            iVar4 = fcn.00bb0ff6(0x28);\n            if (iVar4 == 0) {\n                uVar6 = 0;\n            }\n            else {\n                uVar6 = fcn.00bb0e01();\n            }\n            **(*(in_ECX + 0x1c4) + uVar8 * 4) = uVar6;\n        }\n        ***(*(in_ECX + 0x1c4) + uVar8 * 4) = uVar8;\n        *(**(*(in_ECX + 0x1c4) + uVar8 * 4) + 4) = iVar3;\n        fcn.00b981a7(auStack64);\n        iVar3 = **(arg_8h + 4);\n        fcn.00b99997();\n        fcn.00b981a7(*(iVar3 + 8));\n        iVar3 = (*_sym.imp.USER32.dll_RegisterHotKey)(*0xc562ac, ***(*(in_ECX + 0x1c4) + uVar8 * 4), arg_ch_00, puVar5);\n        if (iVar3 != 0) goto code_r0x00ba2a5b;\n        iVar3 = **(*(in_ECX + 0x1c4) + uVar8 * 4);\n        if (iVar3 != 0) {\n            fcn.00bb0de1(iVar3);\n        }\n        **(*(in_ECX + 0x1c4) + uVar8 * 4) = 0;\n        uVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n        fcn.00baff61(uVar6, arg_8h_00);\n        fcn.00b99a20();\n        *arg_ch = 0;\n    }\n    arg_ch[3] = 1;\ncode_r0x00ba2a5b:\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1862
    },
    "00ba3190": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba3190(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint uVar6;\n    uint32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar7;\n    int32_t arg_8h_00;\n    uint32_t uVar8;\n    int32_t unaff_EDI;\n    int32_t *piVar9;\n    uint32_t uVar10;\n    uint32_t uStack188;\n    int32_t *piStack172;\n    uint32_t uStack168;\n    uint32_t uStack164;\n    uint32_t uStack160;\n    int32_t *piStack156;\n    int32_t *piStack152;\n    int32_t *piStack148;\n    uint32_t uStack144;\n    int32_t *piStack140;\n    int32_t *piStack136;\n    int32_t iStack132;\n    int32_t iStack128;\n    uchar auStack124 [8];\n    uint uStack116;\n    uint uStack108;\n    int32_t *piStack104;\n    char cStack88;\n    int32_t iStack84;\n    int32_t iStack76;\n    int32_t *piStack72;\n    uint uStack68;\n    int32_t *piStack64;\n    uint32_t uStack60;\n    uint32_t uStack52;\n    int32_t *piStack48;\n    int32_t iStack44;\n    uchar auStack40 [4];\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    uStack188 = 0xba31ac;\n    fcn.00ba5bfd();\n    iVar7 = **(arg_8h + 4);\n    uStack188 = 0xba31bb;\n    fcn.00b99997();\n    uVar8 = *(iVar7 + 8);\n    iVar7 = *(*(arg_8h + 4) + 4);\n    uStack188 = 0xba31cb;\n    fcn.00b99997();\n    uStack164 = *(iVar7 + 8);\n    iVar7 = 0;\n    uStack168 = 1;\n    if (2 < *(arg_8h + 8)) {\n        uStack188 = 0xba31ee;\n        iVar7 = fcn.00b99c9c();\n        if ((iVar7 < 0) || (4 < iVar7)) {\n            iVar7 = 0;\n        }\n    }\n    if (3 < *(arg_8h + 8)) {\n        uStack188 = 0xbd7047;\n        uStack168 = fcn.00b99c9c();\n    }\n    if (uStack168 < 1) {\n        uStack168 = 1;\n    }\n    uStack168 = uStack168 - 1;\n    uVar10 = uStack164;\n    uStack188 = uStack164;\n    uVar1 = fcn.00ba5c72(uStack164);\n    if (uVar1 != 0) {\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        fcn.00be6aa3(2, 0);\n        fcn.00baff61(uVar1 + 1, 0);\n        goto code_r0x00ba35ad;\n    }\n    fcn.00ba5d24(uVar8);\n    if (iVar7 == 0) {\n        iVar7 = fcn.00ba5604(&stack0xffffff4c, 0);\n        if (iVar7 == 0) {\n            fcn.00b99a20();\n            arg_ch[3] = 1;\n            *arg_ch = 0;\n        }\n        else {\n            fcn.00b99a20();\n            arg_ch[3] = 1;\n            *arg_ch = 1;\n        }\n        goto code_r0x00ba35ad;\n    }\n    fcn.00b977c7();\n    if (iVar7 == 1) {\n        uVar8 = fcn.00ba5604(&stack0xffffff4c, 0);\n        if (uVar8 != 0) {\n            if (uVar8 < 2) {\n                uVar6 = fcn.00b9942e();\n            }\n            else {\n                uVar6 = fcn.00b9942e();\n            }\n            fcn.00b991b0(uVar6, 1);\n            for (uVar10 = uVar8 >= 2; uVar10 < uVar8; uVar10 = uVar10 + 1) {\n                fcn.00be6731(uVar10, &stack0xffffff6c);\n                fcn.00b993ea(&stack0xffffff64);\n                fcn.00b99040(uVar6, &stack0xffffff84, 1);\n                fcn.00b99a20();\n            }\n            goto code_r0x00bd7213;\n        }\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\ncode_r0x00bd7106:\n        fcn.00be6aa3(1, 0);\n    }\n    else if (iVar7 == 2) {\n        iVar7 = fcn.00ba5604(&stack0xffffff4c, 0);\n        if (iVar7 == 0) goto code_r0x00bd7106;\n        uVar6 = fcn.00b9942e();\n        fcn.00b991b0(uVar6, 1);\n        arg_8h_00 = 0;\n        if (0 < iVar7) {\n            do {\n                fcn.00be6731(arg_8h_00, &stack0xffffff60);\n                fcn.00b993ea(&stack0xffffff58);\n                fcn.00b99040(uVar6, &stack0xffffff78, 1);\n                fcn.00b99a20();\n                arg_8h_00 = arg_8h_00 + 1;\n            } while (arg_8h_00 < iVar7);\n        }\ncode_r0x00bd7213:\n        fcn.00baff61(uStack188 + 1, 0);\n    }\n    else {\n        if (iVar7 == 3) {\n            uStack168 = 0xc1f968;\n            uStack160 = 0;\n            piStack136 = NULL;\n            piStack156 = NULL;\n            uVar4 = uStack188;\n            iVar7 = iStack76;\n            uStack164 = uVar1;\n            piVar3 = piStack140;\n            while ((((iStack84 != 0 && (cStack88 != '\\0')) && (uVar4 != 0xffffffff)) && (uVar4 <= iVar7))) {\n                piVar2 = fcn.00ba4140(piStack104, iVar7, uVar4, uStack60 | uStack52, piStack72, uStack68);\n                piStack64 = piVar2;\n                if (piVar2 < 1) {\n                    if ((uStack60 == 0) || (piVar2 != 0xffffffff)) break;\n                    uStack188 = uStack188 + 1;\n                    uStack60 = 0;\n                    uVar4 = uVar8;\n                    piStack136 = fcn.00ba5604(&stack0xffffff44, 1);\n                    piVar2 = piStack72;\n                    iVar7 = iStack84;\n                    uVar8 = uVar4;\n                }\n                else {\n                    uVar4 = piStack72[1];\n                    uStack60 = 0;\n                    piStack136 = piVar2;\n                    iVar7 = iStack76;\n                    uStack188 = uVar4;\n                    if (*piStack72 == piStack72[1]) {\n                        if (*piStack72 == iStack76) {\n                            uVar4 = iStack76 + 1;\n                            uStack188 = uVar4;\n                        }\n                        else {\n                            uStack60 = 0x10000010;\n                        }\n                    }\n                }\n                if (piStack136 == NULL) break;\n                piVar9 = 1 < piStack136;\n                if (piVar9 < piStack136) {\n                    iStack128 = piVar9 * 8;\n                    do {\n                        uVar1 = uStack168;\n                        if (piVar9 < piVar2) {\n                            piStack140 = piStack104;\n                            if (piVar9 < 0) {\n                                piVar2 = 0xfffffff9;\n                                uVar1 = unaff_EBX;\ncode_r0x00ba33fe:\n                                if (unaff_EDI == 0) goto code_r0x00bd72b9;\n                                if (*piVar3 < 2) {\n                                    fcn.00b98087(piVar2);\n                                    uVar4 = uStack164;\n                                    piVar3 = piStack152;\n                                }\n                                else {\n                                    *piVar3 = *piVar3 + -1;\n                                    piVar3 = fcn.00bb0ff6(4);\n                                    if (piVar3 == NULL) {\n                                        piVar3 = NULL;\n                                    }\n                                    else {\n                                        *piVar3 = 1;\n                                    }\n                                    if (piVar2 == 0xffffffff) {\n                                        piStack152 = 0x8;\n                                    }\n                                    else {\n                                        piStack152 = piVar2 + 2 & 0xfffffff8;\n                                    }\n                                    piStack148 = piVar3;\n                                    uStack160 = fcn.00bb0ff6(-(ZEXT48(piStack152) * 2 >> 0x20 != 0) |\n                                                             ZEXT48(piStack152) * 2);\n                                    uVar4 = uStack160;\n                                }\n                                piStack156 = piVar2;\n                                fcn.00bb1080(uVar4, unaff_EDI, piVar2 * 2);\n                                *(piVar2 * 2 + uStack160) = 0;\n                            }\n                            else {\n                                piStack48 = piStack72 + iStack128;\n                                piVar2 = piStack48[1] - *piStack48;\n                                if (*0xc3574c == fcn.00ba6495) {\n                                    iStack132 = fcn.00bb594c(piVar2 * 2 + 2);\n                                    uVar1 = unaff_EBX;\n                                }\n                                else {\n                                    iStack132 = (**0xc3574c)();\n                                    uVar1 = unaff_EBX;\n                                }\n                                if (iStack132 == 0) {\n                                    piVar2 = 0xfffffffa;\n                                    goto code_r0x00ba33fe;\n                                }\n                                fcn.00bb1080(iStack132, piStack140 + *piStack48 * 2, piVar2 * 2);\n                                *(iStack132 + piVar2 * 2) = 0;\n                                unaff_EDI = iStack132;\n                                if ((piVar2 != NULL) && (piVar2 != 0xffffffff)) goto code_r0x00ba33fe;\ncode_r0x00bd72b9:\n                                fcn.00b97e8c(0, 0xffffffff);\n                                piVar3 = piStack156;\n                            }\n                            if (*0xc35748 == 0xba614f) {\n                                fcn.00bb2f95(uVar10);\n                                unaff_EBX = uVar1;\n                            }\n                            else {\n                                (**0xc35748)();\n                                unaff_EBX = uVar1;\n                            }\n                        }\n                        else {\n                            fcn.00b97e8c(0, 0xffffffff);\n                            piVar3 = piStack156;\n                        }\n                        piVar2 = piStack172;\n                        if (uVar1 == uStack144) {\n                            uStack144 = uStack144 * 2;\n                            if (uStack144 < 8) {\n                                uStack144 = 8;\n                            }\n                            uStack164 = uStack144;\n                            piStack140 = fcn.00bb0ff6(-(uStack144 * 4 >> 0x20 != 0) | uStack144 * 4);\n                            piVar2 = piStack140;\n                            if ((piStack172 != NULL) && (uVar1 != 0)) {\n                                fcn.00bb1080(piStack140, piStack172, uVar1 * 4);\n                                fcn.00bb106c(piStack172);\n                                piVar2 = piStack140;\n                            }\n                        }\n                        piStack172 = piVar2;\n                        puVar5 = fcn.00bb0ff6(0x10);\n                        if (puVar5 == NULL) {\n                            puVar5 = NULL;\n                        }\n                        else {\n                            *puVar5 = uStack160;\n                            puVar5[1] = piStack156;\n                            puVar5[2] = piStack152;\n                            puVar5[3] = piVar3;\n                            *piVar3 = *piVar3 + 1;\n                        }\n                        piVar9 = piVar9 + 1;\n                        piStack172[uVar1] = puVar5;\n                        uStack168 = uVar1 + 1;\n                        iStack128 = iStack128 + 8;\n                        piVar2 = piStack64;\n                        uVar4 = uStack188;\n                        iVar7 = iStack76;\n                    } while (piVar9 < piStack136);\n                }\n            }\n            if (uStack168 == 0) {\n                fcn.00be6aa3(1, 0);\n            }\n            else {\n                fcn.00b99890(0xba359b);\n            }\n        }\n        else {\n            if (iVar7 != 4) goto code_r0x00ba35a4;\n            uStack36 = 0xc1f968;\n            uStack32 = 0;\n            uStack28 = 0;\n            uStack24 = 0;\n            uStack168 = 0xc1fb84;\n            uStack164 = 0;\n            uStack160 = 0;\n            piStack156 = NULL;\n            uStack116 = 0;\n            uStack108 = 0;\n            piStack104 = 0x1;\n            while (iVar7 = fcn.00bef841(&stack0xffffff48, &stack0xffffffd8, 1),  iVar7 != 0) {\n                if (iStack44 != 0) {\n                    fcn.00b99890(&stack0xffffffcc);\n                    fcn.00be6665(&stack0xffffff78);\n                }\n            }\n            if (unaff_EBX == 0) {\n                fcn.00be6aa3(1, 0);\n            }\n            else {\n                uVar6 = fcn.00b9942e();\n                fcn.00b991b0(uVar6, 1);\n                uVar8 = 0;\n                if (unaff_EBX != 0) {\n                    do {\n                        fcn.00b99040(uVar6, *(unaff_ESI + uVar8 * 4), 1);\n                        uVar8 = uVar8 + 1;\n                    } while (uVar8 < unaff_EBX);\n                }\n            }\n            fcn.00b99a20();\n            fcn.00be66f4();\n        }\n        fcn.00b94024();\n    }\ncode_r0x00ba35a4:\n    fcn.00b95a64();\ncode_r0x00ba35ad:\n    fcn.00ba5c2e();\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 3472
    },
    "00ba3dea": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00ba3dea(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, int32_t *arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint arg_8h_00;\n    int32_t iVar8;\n    uint var_64h;\n    int32_t var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    fcn.00b977c7();\n    var_30h = 0xc1f968;\n    var_18h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_ch = 0;\n    var_10h = -1;\n    var_20h = *arg_14h + -1;\n    fcn.00b977c7();\n    iVar8 = *(arg_8h + 4);\n    var_1ch = 0x7f;\n    iVar4 = *(*(iVar8 + *arg_ch * 4) + 8);\n    iVar5 = -1;\n    if (iVar4 != 0x48) {\n        var_14h = 0x40;\n        do {\n            var_5h._0_1_ = '\\0';\n            while (iVar4 == 0) {\n                iVar6 = *arg_ch;\n                iVar5 = **(iVar8 + iVar6 * 4);\n                if (iVar5 == 0x24) {\n                    var_5h._0_1_ = '\\x01';\n                }\n                else if (iVar5 != 0x1e) goto code_r0x00bd7852;\n                *arg_ch = iVar6 + 1;\n                iVar4 = *(*(iVar8 + (iVar6 + 1) * 4) + 8);\n            }\n            piVar1 = *(iVar8 + *arg_ch * 4);\n            if (*(piVar1 + 2) != 0x33) {\n                iVar6 = *arg_ch;\ncode_r0x00bd7863:\n                iVar8 = *(*(*(arg_8h + 4) + iVar6 * 4) + 10);\n                arg_8h_00 = 0x91;\n                goto code_r0x00bd788d;\n            }\n            iVar8 = *piVar1;\n            fcn.00b981a7(iVar8);\n            uVar2 = var_28h;\n            uVar7 = 0;\n            if (var_28h != 0) {\n                do {\n                    cVar3 = fcn.00ba5ee9();\n                    if (cVar3 != '\\0') break;\n                    uVar7 = uVar7 + 1;\n                } while (uVar7 < uVar2);\n            }\n            if (uVar7 != var_28h) {\n                arg_8h_00 = 0xab;\n                goto code_r0x00bd788d;\n            }\n            fcn.00b93f84(&var_40h);\n            *arg_ch = *arg_ch + 1;\n            iVar5 = *arg_ch;\n            iVar8 = *(arg_8h + 4);\n            if ((*(*(iVar8 + iVar5 * 4) + 8) != 0x41) || (var_5h != '\\0')) {\n                if (var_10h == -1) goto code_r0x00ba3f24;\ncode_r0x00ba403a:\n                iVar8 = -1;\ncode_r0x00bd785d:\n                arg_8h_00 = 0x69;\n                goto code_r0x00bd788d;\n            }\n            iVar6 = 0;\n            do {\n                while( true ) {\n                    while( true ) {\n                        iVar5 = iVar5 + 1;\n                        *arg_ch = iVar5;\n                        iVar4 = *(*(iVar8 + iVar5 * 4) + 8);\n                        if (iVar4 != 0x47) break;\n                        iVar6 = iVar6 + 1;\n                    }\n                    if (iVar4 == 0x48) break;\n                    if (iVar4 == var_14h) {\n                        if (iVar6 == 0) goto code_r0x00ba3ff5;\n                    }\n                    else if (iVar4 == var_1ch) goto code_r0x00ba403a;\n                }\n                iVar6 = iVar6 + -1;\n            } while (-1 < iVar6);\ncode_r0x00ba3ff5:\n            if (var_10h == -1) {\n                var_10h = var_ch;\n            }\ncode_r0x00ba3f24:\n            iVar6 = *arg_ch;\n            var_ch = var_ch + 1;\n            iVar4 = *(*(iVar8 + iVar6 * 4) + 8);\n            if (iVar4 == var_14h) {\ncode_r0x00ba3f3b:\n                iVar6 = iVar6 + 1;\n                *arg_ch = iVar6;\n                if (*(*(iVar8 + iVar6 * 4) + 8) == 0x48) goto code_r0x00bd7863;\n            }\n            else {\n                if (iVar4 != 0x48) {\ncode_r0x00bd7852:\n                    iVar8 = *(*(*(arg_8h + 4) + iVar6 * 4) + 10);\n                    goto code_r0x00bd785d;\n                }\n                if (var_14h == 0x48) goto code_r0x00ba3f3b;\n            }\n            iVar4 = *(*(iVar8 + *arg_ch * 4) + 8);\n            iVar5 = var_10h;\n        } while (iVar4 != 0x48);\n    }\n    *arg_ch = *arg_ch + 1;\n    if (*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) == 0x7f) {\n        iVar8 = fcn.00ba3da4(arg_14h);\n        if (-1 < iVar8) {\n            fcn.00b981a7(arg_10h);\n            var_54h = var_20h;\n            var_48h = *arg_14h + -1;\n            var_50h = var_ch;\n            var_4ch = iVar5;\n            if (iVar5 == -1) {\n                var_4ch = var_ch;\n            }\n            var_44h._0_1_ = arg_18h;\n            fcn.00b983a8(&var_64h);\n            goto code_r0x00ba3fc9;\n        }\n    }\n    else {\n        iVar8 = -1;\n        arg_8h_00 = 0x72;\ncode_r0x00bd788d:\n        fcn.00bfa0b5(arg_8h_00, iVar8);\n    }\n    var_18h = 0xffffffff;\ncode_r0x00ba3fc9:\n    fcn.00b95a64();\n    fcn.00b94024();\n    fcn.00b95a64();\n    return var_18h;\n}\n",
        "token_count": 1752
    },
    "00ba5604": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba5604(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    \n    while( true ) {\n        if ((((in_ECX[5] == 0) || (*(in_ECX + 4) == '\\0')) || (*arg_8h == -1)) ||\n           (iVar2 = in_ECX[7],  *arg_8h != iVar2 && iVar2 <= *arg_8h)) {\n            return 0;\n        }\n        iVar2 = fcn.00ba4140(*in_ECX, iVar2, *arg_8h, in_ECX[0xd] | in_ECX[0xb], in_ECX[8], in_ECX[9]);\n        in_ECX[10] = iVar2;\n        if (0 < iVar2) {\n            piVar1 = in_ECX[8];\n            iVar2 = piVar1[1];\n            in_ECX[0xb] = 0;\n            if ((arg_ch != '\\0') && (*piVar1 == piVar1[1])) {\n                if (*piVar1 == in_ECX[7]) {\n                    iVar2 = in_ECX[7] + 1;\n                }\n                else {\n                    in_ECX[0xb] = 0x10000010;\n                }\n            }\n            *arg_8h = iVar2;\n            return in_ECX[10];\n        }\n        if (iVar2 != -1) break;\n        if (in_ECX[0xb] == 0) {\n            return 0;\n        }\n        in_ECX[0xb] = 0;\n        *arg_8h = *arg_8h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 399
    },
    "00ba5680": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00ba5680(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    double dVar1;\n    double dVar2;\n    double dVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    uint16_t *puVar7;\n    ushort *puVar8;\n    uint arg_8h_00;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint var_48h;\n    ushort *var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t *var_2ch;\n    ushort *var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint32_t var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    uint32_t var_8h;\n    ushort *var_4h;\n    \n    var_24h = 0;\n    var_20h = 8;\n    var_28h = fcn.00bb0ff6(0x10);\n    *var_28h = 0;\n    var_14h = fcn.00bb0ff6(4);\n    if (var_14h == NULL) {\n        var_14h = NULL;\n        _var_18h = var_18h;\n    }\n    else {\n        *var_14h = 1;\n    }\n    uVar9 = 0;\n    var_4h = NULL;\n    var_10h = 0;\n    iVar5 = *arg_ch[3];\n    var_1ch = var_14h;\n    if (1 < iVar5) {\n        *arg_ch[3] = iVar5 + -1;\n        fcn.00b98189();\n        arg_ch[2] = 8;\n        iVar5 = fcn.00bb0fa5(0x10);\n        *arg_ch = iVar5;\n    }\n    arg_ch[1] = 0;\n    **arg_ch = 0;\n    uVar4 = arg_8h[1];\n    uVar10 = uVar9;\n    dVar1 = *0xc46f10;\n    dVar2 = *0xc46f08;\n    dVar3 = *0xc46f00;\n    if (0 < uVar4) {\n        do {\n            iVar5 = *arg_8h;\n            uVar10 = uVar4;\n            if (uVar9 < uVar4) {\n                uVar10 = uVar9;\n            }\n            if (*(iVar5 + uVar10 * 2) == 0x5c) {\n                uVar10 = uVar9 + 1;\n                var_4h = uVar10;\n                if (uVar10 != uVar4) {\n                    piVar6 = fcn.00b97b20(uVar10);\n                    if ((*piVar6 == 0x5c) || (piVar6 = fcn.00b97b20(uVar10),  *piVar6 == 0x24)) goto code_r0x00be05ce;\n                    puVar7 = fcn.00b97b20(uVar10);\n                    iVar5 = fcn.00bb3e9f(*puVar7);\n                    dVar1 = *0xc46f10;\n                    dVar2 = *0xc46f08;\n                    dVar3 = *0xc46f00;\n                    if (iVar5 != 0) {\n                        var_4h = uVar9;\n                        iVar5 = fcn.00befa04(arg_8h, &fcn.00ba5680::var_4h, 0);\n                        goto code_r0x00be0580;\n                    }\n                }\n            }\n            else {\n                uVar10 = uVar4;\n                if (uVar9 < uVar4) {\n                    uVar10 = uVar9;\n                }\n                if (*(iVar5 + uVar10 * 2) == 0x24) {\n                    iVar5 = fcn.00befa04(arg_8h, &fcn.00ba5680::var_4h, 1);\n                    uVar10 = var_4h;\n                    if (iVar5 < 0) {\ncode_r0x00be05ce:\n                        var_4h = uVar10 + 1;\n                        fcn.00b97b20(uVar10);\n                        fcn.00b97a84(0xbe05e5);\n                        uVar10 = uVar10 + 1;\n                        dVar1 = *0xc46f10;\n                        dVar2 = *0xc46f08;\n                        dVar3 = *0xc46f00;\n                    }\n                    else {\ncode_r0x00be0580:\n                        fcn.00be6731(iVar5, &fcn.00ba5680::var_28h);\n                        fcn.00b97c8e(&fcn.00ba5680::var_28h);\n                        var_10h = var_10h + 1;\n                        uVar10 = var_4h;\n                        dVar1 = *0xc46f10;\n                        dVar2 = *0xc46f08;\n                        dVar3 = *0xc46f00;\n                    }\n                }\n                else {\n                    uVar10 = uVar9 + 1;\n                    if (uVar9 < uVar4) {\n                        uVar4 = uVar9;\n                    }\n                    var_8h = *(iVar5 + uVar4 * 2);\n                    iVar5 = *arg_ch[3];\n                    var_4h = uVar10;\n                    if (iVar5 < 2) {\n                        var_18h = arg_ch[1] + 2;\n                        if (arg_ch[2] < var_18h) {\n                            if (var_18h < 0x41c2) {\n                                var_18h = var_18h * 2;\n                            }\n                            else if (var_18h < 0x2000000) {\n                                dVar2 = var_18h;\n                                if (var_18h < 0) {\n                                    dVar2 = dVar2 + *0xc4bac8;\n                                }\n                                _var_18h = ROUND(dVar1 * dVar2);\n                            }\n                            else if (var_18h < 0x8000000) {\n                                dVar1 = var_18h;\n                                if (var_18h < 0) {\n                                    dVar1 = dVar1 + *0xc4bac8;\n                                }\n                                _var_18h = ROUND(dVar2 * dVar1);\n                            }\n                            else {\n                                dVar1 = var_18h;\n                                if (var_18h < 0) {\n                                    dVar1 = dVar1 + *0xc4bac8;\n                                }\n                                _var_18h = ROUND(dVar3 * dVar1);\n                            }\n                            arg_ch[2] = var_18h;\n                            uVar9 = fcn.00b98170(var_18h);\n                            arg_ch[2] = uVar9;\n                            iVar5 = fcn.00bb0fa5(-(uVar9 * 2 >> 0x20 != 0) | uVar9 * 2);\n                            if (*arg_ch != 0) {\n                                fcn.00bb1080(iVar5, *arg_ch, arg_ch[1] * 2 + 2);\n                                fcn.00bb30b0(*arg_ch);\n                            }\n                            *arg_ch = iVar5;\n                            dVar1 = *0xc46f10;\n                            dVar2 = *0xc46f08;\n                            dVar3 = *0xc46f00;\n                        }\n                    }\n                    else {\n                        *arg_ch[3] = iVar5 + -1;\n                        fcn.00b98189();\n                        uVar9 = fcn.00b98170(arg_ch[1] + 2);\n                        arg_ch[2] = uVar9;\n                        iVar5 = fcn.00bb0ff6(-(uVar9 * 2 >> 0x20 != 0) | uVar9 * 2);\n                        fcn.00bb1080(iVar5, *arg_ch, arg_ch[1] * 2 + 2);\n                        *arg_ch = iVar5;\n                        dVar1 = *0xc46f10;\n                        dVar2 = *0xc46f08;\n                        dVar3 = *0xc46f00;\n                    }\n                    *(*arg_ch + arg_ch[1] * 2) = var_8h;\n                    arg_ch[1] = arg_ch[1] + 1;\n                    *(*arg_ch + arg_ch[1] * 2) = 0;\n                }\n            }\n            uVar4 = arg_8h[1];\n            uVar9 = uVar10;\n        } while (uVar10 < uVar4);\n        _var_18h = _var_18h & 0xffffffff | ZEXT48(var_1ch) << 0x20;\n        var_14h = var_1ch;\n    }\n    var_30h = 8;\n    var_8h = 0;\n    var_34h = 0;\n    var_38h = fcn.00bb0ff6(0x10);\n    *var_38h = 0;\n    var_4h = var_38h;\n    var_ch = fcn.00bb0ff6(4);\n    if (var_ch == NULL) {\n        var_ch = NULL;\n    }\n    else {\n        *var_ch = 1;\n    }\n    uVar9 = arg_8h[1];\n    if (uVar9 < uVar10) {\n        uVar10 = uVar9;\n    }\n    iVar5 = uVar9 - uVar10;\n    puVar8 = var_4h;\n    if ((iVar5 != 0) && (uVar10 < uVar9)) {\n        var_2ch = var_ch;\n        if (*var_ch < 2) {\n            fcn.00b98087(iVar5);\n            puVar8 = var_38h;\n        }\n        else {\n            *var_ch = *var_ch + -1;\n            fcn.00b98189();\n            uVar9 = fcn.00b98170(iVar5 + 1);\n            puVar8 = fcn.00bb0ff6(-(uVar9 * 2 >> 0x20 != 0) | uVar9 * 2);\n        }\n        var_8h = iVar5;\n        var_4h = puVar8;\n        fcn.00bb1080(puVar8, *arg_8h + uVar10 * 2, iVar5 * 2);\n        var_ch = var_2ch;\n        puVar8[iVar5] = 0;\n    }\n    var_2ch = var_ch;\n    if (arg_ch == &fcn.00ba5680::var_38h) {\n        arg_8h_00 = fcn.00be8123(&fcn.00ba5680::var_48h, arg_ch);\n        fcn.00b981a7(arg_8h_00);\n        fcn.00b95a64();\n    }\n    else if (var_8h != 0) {\n        iVar5 = *arg_ch[3];\n        if (iVar5 < 2) {\n            fcn.00b97cb3(arg_ch[1] + var_8h);\n        }\n        else {\n            *arg_ch[3] = iVar5 + -1;\n            fcn.00b98189();\n            uVar9 = fcn.00b98170(arg_ch[1] + var_8h + 1);\n            arg_ch[2] = uVar9;\n            iVar5 = fcn.00bb0ff6(-(uVar9 * 2 >> 0x20 != 0) | uVar9 * 2);\n            fcn.00bb1080(iVar5, *arg_ch, arg_ch[1] * 2 + 2);\n            *arg_ch = iVar5;\n        }\n        fcn.00bb1080(*arg_ch + arg_ch[1] * 2, puVar8, var_8h * 2);\n        arg_ch[1] = arg_ch[1] + var_8h;\n        *(*arg_ch + arg_ch[1] * 2) = 0;\n    }\n    *var_ch = *var_ch + -1;\n    if (*var_ch == 0) {\n        fcn.00bb106c(puVar8);\n        fcn.00bb106c(var_ch);\n    }\n    iVar5 = var_10h;\n    if (var_10h == 0) {\n        iVar5 = 1;\n    }\n    *var_14h = *var_14h + -1;\n    if (*var_14h == 0) {\n        fcn.00bb106c(var_28h);\n        fcn.00bb106c(var_14h);\n    }\n    return iVar5;\n}\n",
        "token_count": 2933
    },
    "00ba58c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00ba58c0(uint arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    double dVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    int32_t *in_ECX;\n    uint16_t in_FPUControlWord;\n    uint var_64h;\n    uint var_54h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t *var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_5h;\n    \n    if ((in_ECX[5] == 0) || (in_ECX[1] == 0)) {\n        var_18h = 0;\n    }\n    else {\n        var_5h._0_1_ = '\\0';\n        var_18h = 0;\n        var_14h = in_ECX;\n        fcn.00b97e8c(0, 0xffffffff);\n        if (arg_ch == 0) {\n            var_5h._0_1_ = '\\x01';\n        }\n        fcn.00b977c7();\n        fcn.00b977c7();\n        var_ch = 0;\n        while (((((uVar7 = var_ch,  var_10h = var_ch,  var_5h != '\\0' || (arg_ch != 0)) && (in_ECX[5] != 0)) &&\n                ((*(in_ECX + 4) != '\\0' && (var_ch != 0xffffffff)))) && (var_ch <= in_ECX[7]))) {\n            iVar4 = fcn.00ba4140(*in_ECX, in_ECX[7], var_ch, in_ECX[0xd] | in_ECX[0xb], in_ECX[8], in_ECX[9]);\n            in_ECX[10] = iVar4;\n            if (iVar4 < 1) {\n                if ((iVar4 != -1) || (in_ECX[0xb] == 0)) break;\n                var_10h = var_10h + 1;\n                in_ECX[0xb] = 0;\n                iVar4 = fcn.00ba5604(&var_10h, 1);\n            }\n            else {\n                puVar1 = in_ECX[8];\n                var_10h = puVar1[1];\n                in_ECX[0xb] = 0;\n                uVar2 = *puVar1;\n                _var_24h = _var_24h & 0xffffffff | uVar2 << 0x20;\n                if (uVar2 == puVar1[1]) {\n                    if (uVar2 == in_ECX[7]) {\n                        var_10h = in_ECX[7] + 1;\n                    }\n                    else {\n                        in_ECX[0xb] = 0x10000010;\n                    }\n                }\n            }\n            if (iVar4 == 0) break;\n            iVar4 = *in_ECX[8] - var_ch;\n            if ((iVar4 == 0) || (uVar7 = in_ECX[1],  uVar7 <= var_ch)) {\n                fcn.00b97e8c(0, 0xffffffff);\n                iVar4 = var_30h;\n            }\n            else {\n                if ((iVar4 == -1) || (uVar7 < var_ch + iVar4)) {\n                    iVar4 = uVar7 - var_ch;\n                }\n                if (*var_28h < 2) {\n                    if (var_2ch < iVar4 + 1U) {\n                        var_2ch = fcn.00b98170(iVar4 + 1U);\n                        if (var_34h != 0) {\n                            fcn.00bb106c(var_34h);\n                        }\n                        var_34h = fcn.00bb0ff6(-(var_2ch * 2 >> 0x20 != 0) | var_2ch * 2);\n                        *(var_34h + iVar4 * 2) = 0;\n                    }\n                }\n                else {\n                    *var_28h = *var_28h + -1;\n                    fcn.00b98189();\n                    var_2ch = fcn.00b98170(iVar4 + 1);\n                    var_34h = fcn.00bb0ff6(-(var_2ch * 2 >> 0x20 != 0) | var_2ch * 2);\n                }\n                var_30h = iVar4;\n                fcn.00bb1080(var_34h, *var_14h + var_ch * 2, iVar4 * 2);\n                *(iVar4 * 2 + var_34h) = 0;\n                in_ECX = var_14h;\n            }\n            if (arg_10h == &var_34h) {\n                uVar6 = fcn.00be8123(&var_54h, arg_10h);\n                fcn.00b981a7(uVar6);\n                fcn.00b95a64();\n            }\n            else if (iVar4 != 0) {\n                iVar5 = *arg_10h[3];\n                if (iVar5 < 2) {\n                    var_24h = arg_10h[1] + 1 + iVar4;\n                    if (arg_10h[2] < var_24h) {\n                        if (var_24h < 0x41c2) {\n                            var_24h = var_24h * 2;\n                        }\n                        else {\n                            iVar4 = var_30h;\n                            if (var_24h < 0x2000000) {\n                                dVar3 = var_24h;\n                                if (var_24h < 0) {\n                                    dVar3 = dVar3 + *0xc4bac8;\n                                }\n                                var_ch = var_ch & 0xffff | in_FPUControlWord << 0x10;\n                                _var_24h = ROUND(dVar3 * *0xc46f10);\n                            }\n                            else if (var_24h < 0x8000000) {\n                                dVar3 = var_24h;\n                                if (var_24h < 0) {\n                                    dVar3 = dVar3 + *0xc4bac8;\n                                }\n                                var_ch = var_ch & 0xffff | in_FPUControlWord << 0x10;\n                                _var_24h = ROUND(dVar3 * *0xc46f08);\n                            }\n                            else {\n                                dVar3 = var_24h;\n                                if (var_24h < 0) {\n                                    dVar3 = dVar3 + *0xc4bac8;\n                                }\n                                var_ch = var_ch & 0xffff | in_FPUControlWord << 0x10;\n                                _var_24h = ROUND(dVar3 * *0xc46f00);\n                            }\n                        }\n                        arg_10h[2] = var_24h;\n                        uVar7 = fcn.00b98170(var_24h);\n                        arg_10h[2] = uVar7;\n                        var_20h = fcn.00bb0fa5(-(uVar7 * 2 >> 0x20 != 0) | uVar7 * 2);\n                        _var_24h = _var_24h & 0xffffffff | var_20h << 0x20;\n                        if (*arg_10h != 0) {\n                            fcn.00bb1080(var_20h, *arg_10h, arg_10h[1] * 2 + 2);\n                            fcn.00bb30b0(*arg_10h);\n                        }\n                        *arg_10h = var_20h;\n                    }\n                }\n                else {\n                    *arg_10h[3] = iVar5 + -1;\n                    fcn.00b98189();\n                    uVar7 = fcn.00b98170(arg_10h[1] + 1 + iVar4);\n                    arg_10h[2] = uVar7;\n                    uVar7 = fcn.00bb0ff6(-(uVar7 * 2 >> 0x20 != 0) | uVar7 * 2);\n                    fcn.00bb1080(uVar7, *arg_10h, arg_10h[1] * 2 + 2);\n                    *arg_10h = uVar7;\n                    in_ECX = var_14h;\n                }\n                fcn.00bb1080(*arg_10h + arg_10h[1] * 2, var_34h, iVar4 * 2);\n                arg_10h[1] = arg_10h[1] + iVar4;\n                *(*arg_10h + arg_10h[1] * 2) = 0;\n            }\n            iVar5 = fcn.00ba5680(arg_8h, &var_44h);\n            iVar4 = var_40h;\n            var_18h = var_18h + iVar5;\n            if (arg_10h == &var_44h) {\n                uVar6 = fcn.00be8123(&var_64h, arg_10h);\n                fcn.00b981a7(uVar6);\n                fcn.00b95a64();\n            }\n            else if (var_40h != 0) {\n                iVar5 = *arg_10h[3];\n                if (iVar5 < 2) {\n                    var_24h = arg_10h[1] + 1 + var_40h;\n                    if (arg_10h[2] < var_24h) {\n                        if (var_24h < 0x41c2) {\n                            var_24h = var_24h * 2;\n                        }\n                        else if (var_24h < 0x2000000) {\n                            dVar3 = var_24h;\n                            if (var_24h < 0) {\n                                dVar3 = dVar3 + *0xc4bac8;\n                            }\n                            var_ch = var_ch & 0xffff | in_FPUControlWord << 0x10;\n                            _var_24h = ROUND(dVar3 * *0xc46f10);\n                        }\n                        else if (var_24h < 0x8000000) {\n                            dVar3 = var_24h;\n                            if (var_24h < 0) {\n                                dVar3 = dVar3 + *0xc4bac8;\n                            }\n                            var_ch = var_ch & 0xffff | in_FPUControlWord << 0x10;\n                            _var_24h = ROUND(dVar3 * *0xc46f08);\n                        }\n                        else {\n                            dVar3 = var_24h;\n                            if (var_24h < 0) {\n                                dVar3 = dVar3 + *0xc4bac8;\n                            }\n                            var_ch = var_ch & 0xffff | in_FPUControlWord << 0x10;\n                            _var_24h = ROUND(dVar3 * *0xc46f00);\n                        }\n                        arg_10h[2] = var_24h;\n                        uVar7 = fcn.00b98170(var_24h);\n                        arg_10h[2] = uVar7;\n                        var_20h = fcn.00bb0fa5(-(uVar7 * 2 >> 0x20 != 0) | uVar7 * 2);\n                        _var_24h = _var_24h & 0xffffffff | var_20h << 0x20;\n                        if (*arg_10h != 0) {\n                            fcn.00bb1080(var_20h, *arg_10h, arg_10h[1] * 2 + 2);\n                            fcn.00bb30b0(*arg_10h);\n                        }\n                        *arg_10h = var_20h;\n                    }\n                }\n                else {\n                    *arg_10h[3] = iVar5 + -1;\n                    fcn.00b98189();\n                    uVar7 = fcn.00b98170(arg_10h[1] + 1 + iVar4);\n                    arg_10h[2] = uVar7;\n                    uVar7 = fcn.00bb0ff6(-(uVar7 * 2 >> 0x20 != 0) | uVar7 * 2);\n                    fcn.00bb1080(uVar7, *arg_10h, arg_10h[1] * 2 + 2);\n                    *arg_10h = uVar7;\n                    in_ECX = var_14h;\n                }\n                fcn.00bb1080(*arg_10h + arg_10h[1] * 2, var_44h, iVar4 * 2);\n                arg_10h[1] = arg_10h[1] + iVar4;\n                *(*arg_10h + arg_10h[1] * 2) = 0;\n            }\n            arg_ch = arg_ch + -1;\n            var_ch = var_10h;\n        }\n        fcn.00b979ab(in_ECX, uVar7, in_ECX[7] - uVar7);\n        fcn.00b97c8e(&var_34h);\n        fcn.00b95a64();\n        fcn.00b95a64();\n    }\n    return var_18h;\n}\n",
        "token_count": 3093
    },
    "00ba710e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl\nfcn.00ba710e(int16_t **arg_8h, int32_t *arg_ch, int16_t **arg_10h, uint32_t *arg_14h, int16_t **arg_18h, \n            uint32_t *arg_1ch, uint arg_20h, int32_t arg_24h, int32_t arg_28h, int32_t *arg_2ch)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int16_t iVar5;\n    uint16_t uVar6;\n    uint16_t uVar7;\n    int16_t iVar8;\n    uint *puVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int16_t **in_ECX;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint *puVar15;\n    uint32_t *puVar16;\n    uint8_t *puVar17;\n    int16_t **in_EDX;\n    int16_t *piVar18;\n    int16_t *piVar19;\n    int16_t iVar20;\n    uint *puVar21;\n    int16_t **ppiVar22;\n    uint16_t *puVar23;\n    uint *puVar24;\n    char16_t *pcVar25;\n    int16_t iVar26;\n    uint *puVar27;\n    bool bVar28;\n    char32_t *pcVar29;\n    uint var_184h;\n    uint var_178h;\n    uint var_16dh;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    int16_t **var_140h;\n    uint var_13ch;\n    uint32_t var_138h;\n    uint var_134h;\n    uint32_t var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    int16_t **var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint32_t var_f8h;\n    uint *var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint *var_dch;\n    uint *var_d8h;\n    uint var_d4h;\n    uint var_b4h;\n    uint *var_b0h;\n    uint *var_ach;\n    uint *var_a8h;\n    uint32_t var_a4h;\n    uint32_t var_a0h;\n    uint *var_9ch;\n    uint *var_98h;\n    uint *var_94h;\n    uint var_90h;\n    uint32_t var_8ch;\n    uint *var_88h;\n    int32_t var_84h;\n    uint *var_80h;\n    uint *var_7ch;\n    uint *var_78h;\n    uint *var_74h;\n    uint *var_70h;\n    uint32_t var_6ch;\n    uint *var_68h;\n    uint *var_64h;\n    uint *var_60h;\n    uint *var_5ch;\n    uint *var_58h;\n    uint32_t var_54h;\n    uint *var_50h;\n    uint *var_4ch;\n    uint *var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_34h = *in_ECX;\n    puVar27 = *in_EDX;\n    var_ch = 0x1;\n    var_3ch = var_34h >> 0xb & 1;\n    var_dch = var_34h >> 9 & 1;\n    var_e8h = var_dch ^ 1;\n    var_4h = *arg_8h;\n    puVar21 = NULL;\n    var_58h = 0xfffffffe;\n    var_6ch = 0xfffffffe;\n    var_54h = 0xfffffffe;\n    var_2ch = 0xfffffffe;\n    var_50h = NULL;\n    var_40h = NULL;\n    var_9ch = NULL;\n    var_84h = 0;\n    var_8h = puVar27;\n    var_a8h = puVar27;\n    var_b0h = puVar27;\n    var_30h = NULL;\n    var_98h = NULL;\n    var_60h = NULL;\n    var_10h = NULL;\n    var_78h = NULL;\n    var_88h = NULL;\n    var_28h = NULL;\n    var_7ch = NULL;\n    var_5ch = NULL;\n    var_64h = NULL;\n    var_8ch = var_34h & 1;\n    var_b4h = 0xff;\n    var_12ch = 0xfc00;\n    var_148h = 0xdc00;\n    var_158h = 0x2b;\n    var_128h = 0x7b;\n    var_e4h = 0x30;\n    var_118h = 0x29;\n    var_90h = 0x39;\n    var_110h = 0x3c;\n    var_144h = 0x52;\n    var_e0h = 0x27;\n    var_154h = 0x2d;\n    var_100h = 0x10;\n    var_114h = 0x17;\n    var_14ch = 0x20;\n    var_104h = 0x1d;\n    var_134h = 0x1e;\n    var_10ch = 0x1f;\n    var_13ch = 0x6e;\n    var_11ch = 0x6f;\n    var_150h = 0x70;\n    var_124h = 0x71;\n    var_fch = 0x73;\n    var_108h = 0xf;\n    var_140h = in_EDX;\n    var_120h = in_ECX;\ncode_r0x00ba72b4:\n    puVar24 = var_60h;\n    var_18h = *var_4h;\n    if ((*var_4h == NULL) && (var_60h != NULL)) {\n        var_4h = var_60h;\n        var_60h = NULL;\n        var_18h = *puVar24;\n    }\n    puVar24 = var_18h;\n    puVar9 = *(arg_28h + 0x10) + *(arg_28h + 0x3c) * 2 + -200;\n    if (arg_2ch != NULL) {\n        if (puVar9 < puVar27) goto code_r0x00be46a9;\n        if (puVar27 < var_a8h) {\n            var_8h = var_a8h;\n            puVar27 = var_a8h;\n        }\n        iVar13 = puVar27 - var_a8h >> 1;\n        puVar9 = var_4h;\n        if (iVar13 <= 0x7fffffeb - *arg_2ch) {\n            *arg_2ch = *arg_2ch + iVar13;\n            if (puVar21 == NULL) {\n                var_8h = var_b0h;\n            }\n            else if (var_b0h < puVar21) {\n                fcn.00bb8020(var_b0h, puVar21, var_8h - puVar21 & 0xfffffffe);\n                var_8h = var_8h + (puVar21 - var_b0h >> 1) * -2;\n                var_10h = var_b0h;\n                puVar21 = var_b0h;\n            }\n            var_a8h = var_8h;\n            puVar27 = var_8h;\n            goto code_r0x00ba7348;\n        }\ncode_r0x00be4601:\n        *arg_ch = 0x14;\n        var_4h = puVar9;\n        goto code_r0x00be46b2;\n    }\n    if (puVar9 <= *(arg_28h + 0x20) && *(arg_28h + 0x20) != puVar9) {\ncode_r0x00be46a9:\n        *arg_ch = 0x34;\n        goto code_r0x00be46b2;\n    }\ncode_r0x00ba7348:\n    if ((var_30h != NULL) && (puVar24 != NULL)) {\n        if ((puVar24 == 0x5c) && (*(var_4h + 2) == 0x45)) {\n            var_30h = NULL;\n            var_4h = var_4h + 2;\n            goto code_r0x00ba751e;\n        }\n        if (var_78h != NULL) {\n            if (arg_2ch == NULL) {\n                *(var_78h + 6) = (var_4h - *(arg_28h + 0x18) >> 1) - *(var_78h + 1);\n            }\n            var_78h = NULL;\n        }\n        puVar21 = var_4h;\n        if ((var_34h & 0x4000) != 0) {\n            *puVar27 = 0x76;\n            var_78h = puVar27;\n            *(puVar27 + 2) = 0xff;\n            *(puVar27 + 1) = var_4h - *(arg_28h + 0x18) >> 1;\n            *(puVar27 + 6) = 0;\n            var_8h = puVar27 + 2;\n        }\ncode_r0x00ba73fb:\n        var_f8h._0_2_ = puVar24;\n        puVar9 = var_ch;\n        if ((var_3ch != 0) && ((puVar24 & 0xfc00) == 0xd800)) {\n            puVar21 = puVar21 + 2;\n            if ((*puVar21 & 0xfc00) == 0xdc00) {\n                var_4h = puVar21;\n                stack0xffffff06 = stack0xffffff06 & 0xffff0000 | *puVar21;\n                puVar9 = 0x2;\n            }\n        }\ncode_r0x00ba7424:\n        var_10h = var_8h;\n        puVar21 = var_10h;\n        if ((var_3ch != 0) && ((var_ch & var_34h) != 0)) {\n            uVar14 = puVar24 & 0xffff;\n            if ((puVar24 & 0xfc00) == 0xd800) {\n                uVar14 = ((puVar24 & 0x3ff) << 10 | stack0xffffff06 & 0x3ff) + 0x10000;\n            }\n            uVar1 = *(*((*(uVar14 / 0x80 + 0xc43b40) * 0x80 + uVar14 % 0x80) * 2 + 0xc35840) * 8 + 0xc32f53);\n            if (uVar1 != 0) {\n                *var_8h = 0x10;\n                *(var_8h + 2) = 9;\n                *(var_8h + 1) = uVar1;\n                var_8h = var_8h + 6;\n                puVar27 = var_8h;\n                if (var_2ch == 0xfffffffe) {\n                    var_6ch = 0xffffffff;\n                    var_2ch = 0xffffffff;\n                }\n                goto code_r0x00ba751e;\n            }\n        }\n        *var_8h = ((var_ch & var_34h) != 0) + 0x1d;\n        var_8h = var_8h + 2;\n        if (puVar9 != NULL) {\n            puVar27 = &var_f8h;\n            puVar24 = var_8h;\n            for (uVar14 = puVar9 >> 1; uVar14 != 0; uVar14 = uVar14 - 1) {\n                *puVar24 = *puVar27;\n                puVar27 = puVar27 + 1;\n                puVar24 = puVar24 + 1;\n            }\n            for (uVar14 = (puVar9 & 1) != 0; uVar14 != 0; uVar14 = uVar14 - 1) {\n                *puVar24 = *puVar27;\n                puVar27 = puVar27 + 2;\n                puVar24 = puVar24 + 2;\n            }\n            var_8h = var_8h + puVar9 * 2;\n        }\n        if ((var_18h == 0xd) || (var_18h == 10)) {\n            *(arg_28h + 100) = *(arg_28h + 100) | 0x800;\n        }\n        puVar27 = var_8h;\n        if (var_2ch == 0xfffffffe) {\n            var_6ch = 0xffffffff;\n            var_28h = var_5ch;\n            var_58h = var_54h;\n            if ((puVar9 == var_ch) || (var_8ch == 0)) {\n                var_64h = var_18h & 0xffff;\n                var_2ch = var_8ch;\n                if (puVar9 != var_ch) {\n                    var_5ch = *(var_8h + -2);\n                    var_54h = *(arg_28h + 0x68);\n                }\n            }\n            else {\n                var_54h = 0xffffffff;\n                var_2ch = 0xffffffff;\n            }\n        }\n        else {\n            var_7ch = var_64h;\n            var_28h = var_5ch;\n            var_6ch = var_2ch;\n            var_58h = var_54h;\n            if ((puVar9 == var_ch) || (var_8ch == 0)) {\n                var_5ch = *(var_8h + -2);\n                var_54h = *(arg_28h + 0x68) | var_8ch;\n            }\n        }\n        goto code_r0x00ba751e;\n    }\n    var_68h = var_34h & 8;\n    if ((var_34h & 8) != NULL) {\ncode_r0x00be1ca5:\n        if (puVar24 < 0x100) {\n            do {\n                var_18h = puVar24;\n                if ((*(*(arg_28h + 0xc) + puVar24) & 1) == 0) break;\n                var_4h = var_4h + 2;\n                puVar24 = *var_4h;\n                var_18h = puVar24;\n            } while (puVar24 < 0x100);\n        }\n        if (puVar24 == 0x23) {\n            do {\n                var_4h = var_4h + 2;\n                do {\n                    puVar27 = var_4h;\n                    if (*var_4h == 0) {\ncode_r0x00be1d10:\n                        puVar24 = *var_4h;\n                        goto code_r0x00be1ca5;\n                    }\n                    if (*(arg_28h + 0x80) == 0) {\n                        if (((var_4h <= *(arg_28h + 0x1c) + *(arg_28h + 0x84) * -2) && (*var_4h == *(arg_28h + 0x88)))\n                           && ((*(arg_28h + 0x84) == var_ch || (*(var_4h + 2) == *(arg_28h + 0x8a)))))\n                        goto code_r0x00be1d04;\n                    }\n                    else if ((var_4h < *(arg_28h + 0x1c)) &&\n                            (iVar13 = fcn.00ba5e9f(*(arg_28h + 0x1c), arg_28h + 0x84, var_3ch),  iVar13 != 0)) {\ncode_r0x00be1d04:\n                        var_4h = puVar27 + *(arg_28h + 0x84) * 2;\n                        goto code_r0x00be1d10;\n                    }\n                    var_4h = puVar27 + 2;\n                } while ((var_3ch == 0) || ((*var_4h & 0xfc00) != 0xdc00));\n            } while( true );\n        }\n        var_18h = puVar24;\n    }\n    puVar21 = var_4h;\n    puVar27 = var_68h;\n    puVar9 = var_ch;\n    if ((((((puVar24 != 0x2a) && (puVar24 != 0x2b)) && (puVar24 != 0x3f)) &&\n         ((puVar24 != 0x7b || (iVar13 = fcn.00c1e65f(),  puVar9 = var_ch,  iVar13 == 0)))) &&\n        (puVar15 = var_9ch,  puVar9 = NULL,  var_78h != NULL)) &&\n       ((var_60h == NULL && (var_9ch = var_9ch + -1,  puVar15 < 1)))) {\n        if (arg_2ch == NULL) {\n            *(var_78h + 6) = (puVar21 - *(arg_28h + 0x18) >> 1) - *(var_78h + 1);\n            puVar21 = var_4h;\n        }\n        var_78h = NULL;\n    }\n    if ((((var_34h & 0x4000) != 0) && (puVar9 == NULL)) && (var_60h == NULL)) {\n        var_78h = var_8h;\n        *var_8h = 0x76;\n        *(var_8h + 2) = 0xff;\n        iVar13 = *(arg_28h + 0x18);\n        *(var_8h + 6) = 0;\n        *(var_8h + 1) = puVar21 - iVar13 >> 1;\n        var_8h = var_8h + 2;\n        puVar21 = var_4h;\n    }\n    if (puVar24 < 0x40) {\n        if (puVar24 == 0x3f) {\n            puVar9 = NULL;\n            var_40h = var_ch;\ncode_r0x00ba7b04:\n            var_50h = puVar9;\ncode_r0x00ba7b0d:\n            if (var_10h == NULL) {\n                iVar13 = 9;\n                puVar24 = puVar21;\n                goto code_r0x00be4681;\n            }\n            if (var_50h == NULL) {\n                var_64h = var_7ch;\n                var_2ch = var_6ch;\n                var_5ch = var_28h;\n                var_54h = var_58h;\n            }\n            var_44h = var_10h;\n            var_74h = -(var_50h != var_40h) & 2;\n            var_20h = NULL;\n            if (puVar27 != NULL) {\n                puVar23 = puVar21 + 2;\ncode_r0x00be2933:\n                uVar7 = *puVar23;\n                if (uVar7 < 0x100) {\n                    do {\n                        if ((*(uVar7 + *(arg_28h + 0xc)) & 1) == 0) break;\n                        puVar23 = puVar23 + 1;\n                        uVar7 = *puVar23;\n                    } while (uVar7 < 0x100);\n                }\n                if (*puVar23 == 0x23) {\n                    do {\n                        puVar23 = puVar23 + 1;\n                        do {\n                            if (*puVar23 == 0) goto code_r0x00be2933;\n                            if (*(arg_28h + 0x80) == 0) {\n                                if (((puVar23 <= *(arg_28h + 0x1c) + *(arg_28h + 0x84) * -2) &&\n                                    (*puVar23 == *(arg_28h + 0x88))) &&\n                                   ((*(arg_28h + 0x84) == var_ch || (puVar23[1] == *(arg_28h + 0x8a)))))\n                                goto code_r0x00be29a0;\n                            }\n                            else if ((puVar23 < *(arg_28h + 0x1c)) &&\n                                    (iVar13 = fcn.00ba5e9f(*(arg_28h + 0x1c), arg_28h + 0x84, var_3ch),  iVar13 != 0)) {\ncode_r0x00be29a0:\n                                puVar23 = puVar23 + *(arg_28h + 0x84);\n                                goto code_r0x00be2933;\n                            }\n                            puVar23 = puVar23 + 1;\n                        } while ((var_3ch == 0) || ((*puVar23 & 0xfc00) != 0xdc00));\n                    } while( true );\n                }\n                puVar21 = puVar23 + -1;\n                var_4h = puVar21;\n            }\n            puVar24 = var_10h;\n            puVar27 = var_50h;\n            puVar9 = puVar21 + 2;\n            if (*puVar9 == 0x2b) {\n                var_1ch = NULL;\n                var_20h = var_ch;\n                var_4h = puVar9;\n            }\n            else {\n                var_1ch = var_e8h;\n                puVar15 = puVar9;\n                if (*puVar9 != 0x3f) {\n                    var_1ch = var_dch;\n                    puVar9 = puVar21;\n                    puVar15 = var_4h;\n                }\n                var_4h = puVar15;\n            }\n            puVar21 = var_1ch;\n            if (*var_10h == 0x75) {\n                fcn.00bb8020(var_10h + 1, var_10h, 4);\n                var_8h = var_8h + 2;\n                *puVar24 = 0x81;\n                *(puVar24 + 2) = 4;\n                *(puVar24 + 2) = 0x78;\n                *(puVar24 + 10) = 4;\n                var_84h = 6;\n                puVar9 = var_4h;\n                if (((arg_2ch == NULL) && (uVar14 = *(arg_28h + 0x20),  *(arg_28h + 0x10) + 2U <= uVar14)) &&\n                   (*(uVar14 - 2) == puVar24 + (2 - *(arg_28h + 0x14)) >> 1)) {\n                    *(uVar14 - 2) = *(uVar14 - 2) + 2;\n                }\n            }\n            puVar24 = var_10h;\n            uVar7 = *var_10h;\n            puVar15 = uVar7;\n            if (((uVar7 == var_104h) || (uVar7 == var_134h)) || ((uVar7 == var_10ch || (uVar7 == var_14ch)))) {\n                if (puVar15 == 0x1e) {\n                    iVar13 = 0xd;\n                }\n                else if (puVar15 == 0x1f) {\n                    iVar13 = 0x1a;\n                }\n                else if (puVar15 == 0x20) {\n                    iVar13 = 0x27;\n                }\n                else {\n                    iVar13 = 0;\n                }\n                if (var_3ch != 0) {\n                    puVar27 = var_8h + -2;\n                    if ((*puVar27 & var_12ch) == var_148h) {\n                        if ((*puVar27 & 0xfc00) == 0xdc00) {\n                            puVar27 = var_8h + -1;\n                        }\n                        uVar14 = var_8h - puVar27 >> 1;\n                        fcn.00bb1080(&var_184h, puVar27, uVar14 * 2);\n                        puVar15 = uVar14 | 0x10000000;\n                        puVar9 = var_4h;\n                        goto code_r0x00ba8115;\n                    }\n                }\n                puVar15 = *(var_8h + -2);\n                if ((uVar7 < 0x1f) && (var_ch < var_50h)) {\n                    var_5ch = puVar15;\n                    var_54h = *(arg_28h + 0x68) | var_8ch;\n                }\ncode_r0x00ba8115:\n                puVar27 = var_8h;\n                if ((*var_10h == 0x10) || (*var_10h == 0xf)) {\n                    var_24h = *(var_10h + 2);\n                    var_14h = *(var_10h + 1);\n                }\n                else {\n                    var_14h = 0xffffffff;\n                    var_24h = 0xffffffff;\n                }\n                var_8h = var_10h;\n                if (var_40h != NULL) {\n                    var_1ch = var_1ch + iVar13;\n                    iVar20 = puVar15;\n                    iVar26 = var_14h;\n                    iVar5 = var_1ch;\n                    iVar8 = var_40h;\n                    if (var_50h == NULL) {\n                        if (var_40h == 0xffffffff) {\n                            iVar5 = iVar5 + 0x21;\ncode_r0x00ba816d:\n                            *var_10h = iVar5;\n                            puVar27 = var_10h + 2;\n                            goto code_r0x00ba817c;\n                        }\n                        puVar27 = var_10h + 2;\n                        if (var_40h == var_ch) {\n                            *var_10h = iVar5 + 0x25;\n                            goto code_r0x00ba817c;\n                        }\n                        *var_10h = iVar5 + 0x27;\ncode_r0x00be31f4:\n                        *puVar27 = iVar8;\ncode_r0x00be3208:\n                        puVar27 = puVar27 + 2;\n                    }\n                    else if (var_50h == 0x1) {\n                        if (var_40h == 0xffffffff) {\n                            iVar5 = iVar5 + 0x23;\n                            goto code_r0x00ba816d;\n                        }\n                        var_8h = puVar27;\n                        if (var_40h == 0x1) goto code_r0x00ba7c12;\n                        *puVar27 = iVar5 + 0x27;\n                        *(puVar27 + 2) = iVar8 + -1;\n                        puVar27 = puVar27 + 1;\n                    }\n                    else {\n                        iVar11 = 2;\n                        *var_10h = iVar13 + 0x29;\n                        *(var_10h + 2) = var_50h;\n                        puVar27 = var_10h + 1;\n                        if (var_40h < 0) {\n                            if ((var_3ch == 0) || ((puVar15 & 0x10000000) == 0)) {\n                                *puVar27 = iVar20;\n                                puVar27 = var_10h + 6;\n                                if (var_24h < 0) goto code_r0x00be315a;\n                                *puVar27 = var_24h;\n                                *(var_10h + 2) = iVar26;\n                                puVar27 = var_10h + 10;\n                            }\n                            else {\n                                fcn.00bb1080(puVar27, &var_184h, (puVar15 & 7) * 2);\n                                puVar27 = puVar27 + (puVar15 & 7) * 2;\ncode_r0x00be315a:\n                                iVar26 = var_14h;\n                            }\n                            *puVar27 = var_1ch + 0x21;\n                            goto code_r0x00be3208;\n                        }\n                        if (var_40h != var_50h) {\n                            if ((var_3ch == 0) || ((puVar15 & 0x10000000) == 0)) {\n                                *puVar27 = iVar20;\n                            }\n                            else {\n                                fcn.00bb1080(puVar27, &var_184h, (puVar15 & 7) * 2);\n                                iVar11 = (puVar15 & 7) * 2;\n                            }\n                            puVar27 = puVar27 + iVar11;\n                            iVar26 = var_14h;\n                            if (-1 < var_24h) {\n                                *puVar27 = var_24h;\n                                *(puVar27 + 2) = iVar26;\n                                puVar27 = puVar27 + 1;\n                            }\n                            var_40h = var_40h - var_50h;\n                            if (var_40h == var_ch) {\n                                iVar8 = var_1ch + 0x25;\n                                goto code_r0x00be31f4;\n                            }\n                            *puVar27 = var_1ch + 0x27;\n                            puVar27 = puVar27 + 2;\n                            *puVar27 = var_40h;\n                            goto code_r0x00be3208;\n                        }\n                    }\ncode_r0x00ba817c:\n                    iVar13 = 2;\n                    if ((var_3ch == 0) || ((puVar15 & 0x10000000) == 0)) {\n                        *puVar27 = iVar20;\n                    }\n                    else {\n                        fcn.00bb1080(puVar27, &var_184h, (puVar15 & 7) * 2);\n                        iVar13 = (puVar15 & 7) * 2;\n                    }\n                    var_8h = puVar27 + iVar13;\n                    puVar9 = var_4h;\n                    if (-1 < var_24h) {\n                        *var_8h = var_24h;\n                        var_8h = var_8h + 2;\n                        *var_8h = iVar26;\ncode_r0x00be2fd1:\n                        var_8h = var_8h + 2;\n                        puVar9 = var_4h;\n                    }\ncode_r0x00ba7c08:\n                    puVar27 = var_8h;\n                    if (var_20h != NULL) {\n                        uVar14 = *var_44h;\n                        if (uVar14 < 0x51) {\n                            if ((uVar14 == 0x50) ||\n                               ((0x1c < uVar14 &&\n                                ((((uVar14 < 0x21 || (uVar14 == 0x29)) || (uVar14 == 0x36)) || (uVar14 == 0x43)))))) {\n                                var_44h = var_44h + *(uVar14 + 0xc35750) * 2;\n                                if ((var_3ch != 0) && ((*(var_44h + -2) & 0xfc00) == 0xd800)) {\n                                    var_44h = var_44h + 2;\n                                }\n                            }\n                        }\n                        else if (uVar14 == 0x5d) {\n                            if ((*(var_44h + 1) == var_100h) || (iVar13 = 0,  *(var_44h + 1) == var_108h)) {\n                                iVar13 = 2;\n                            }\n                            var_44h = var_44h + (*0xc357ad + iVar13) * 2;\n                        }\n                        else if (0x6d < uVar14) {\n                            if (uVar14 < 0x70) {\n                                var_44h = var_44h + 0x22;\n                            }\n                            else if (uVar14 == 0x70) {\n                                var_44h = var_44h + *(var_44h + 2) * 2;\n                            }\n                        }\n                        iVar13 = var_8h - var_44h >> 1;\n                        if (0 < iVar13) {\n                            if ((*var_44h < 0x76) && (uVar1 = *(*var_44h + 0xc48920),  uVar1 != 0)) {\n                                uVar7 = uVar1;\n                                puVar27 = var_44h;\n                                goto code_r0x00be2f68;\n                            }\n                            *var_8h = 0;\n                            fcn.00ba86a1(var_3ch, arg_28h, var_88h);\n                            fcn.00bb8020(var_44h + 1, var_44h, iVar13 * 2);\n                            iVar26 = iVar13 + 2;\n                            *var_44h = 0x81;\n                            *(puVar27 + 1) = 0x78;\n                            *(puVar27 + 6) = iVar26;\n                            var_8h = puVar27 + 2;\n                            *(var_44h + 2) = iVar26;\n                            puVar9 = var_4h;\n                        }\n                    }\n                }\n            }\n            else {\n                if (uVar7 < var_114h) {\n                    iVar13 = 0x34;\n                    goto code_r0x00ba8115;\n                }\n                if (((((uVar7 == var_13ch) || (uVar7 == var_11ch)) || (uVar7 == var_150h)) ||\n                    ((uVar7 == var_124h || (puVar15 == 0x72)))) || ((uVar7 == var_fch || (puVar15 == 0x74)))) {\n                    if (var_40h == NULL) {\n                        var_8h = var_10h;\n                        goto code_r0x00ba7c12;\n                    }\n                    iVar26 = puVar21;\n                    if (puVar27 != NULL) {\n                        if ((puVar27 == var_ch) && (var_40h == 0xffffffff)) {\n                            iVar26 = iVar26 + 100;\n                            goto code_r0x00ba7bf5;\n                        }\ncode_r0x00be2f9e:\n                        *var_8h = iVar26 + 0x68;\n                        *(var_8h + 2) = puVar27;\n                        var_8h = var_8h + 1;\n                        var_40h = -(var_40h != 0xffffffff) & var_40h;\n                        *var_8h = var_40h;\n                        goto code_r0x00be2fd1;\n                    }\n                    if (var_40h == 0xffffffff) {\n                        iVar26 = iVar26 + 0x62;\n                    }\n                    else {\n                        if (var_40h != var_ch) goto code_r0x00be2f9e;\n                        iVar26 = iVar26 + 0x66;\n                    }\ncode_r0x00ba7bf5:\n                    *var_8h = iVar26;\n                    var_8h = var_8h + 2;\n                    puVar9 = var_4h;\n                    goto code_r0x00ba7c08;\n                }\n                if ((uVar7 < 0x7d) || (0x87 < uVar7)) {\n                    if (uVar7 == 0x9d) goto code_r0x00ba7c12;\n                    *arg_ch = 0xb;\n                    var_4h = puVar9;\n                    goto code_r0x00be46b2;\n                }\n                var_14h = var_88h;\n                puVar27 = var_8h - var_10h >> 1;\n                var_24h = NULL;\n                var_4ch = NULL;\n                if ((uVar7 == 0x87) && (*(var_10h + 1) == 0x91)) goto code_r0x00ba7c12;\n                if (uVar7 < 0x81) {\n                    if (0 < var_50h) goto code_r0x00ba7c12;\n                    if ((var_40h < 0) || (var_ch < var_40h)) {\n                        var_40h = var_ch;\n                    }\n                }\n                var_18h = puVar27;\n                if (var_50h == NULL) {\n                    iVar26 = var_1ch;\n                    if (var_ch < var_40h) {\n                        *var_8h = 0;\n                        fcn.00ba86a1(var_3ch, arg_28h, var_88h);\n                        fcn.00bb8020(puVar24 + 6, puVar24, puVar27 * 2);\n                        var_8h = var_8h + 6;\n                        *puVar24 = iVar26 + 0x92;\n                        *(puVar24 + 2) = 0x83;\n                        var_24h = puVar24 + 1;\n                        *(puVar24 + 1) = 0;\n                        puVar24 = puVar24 + 6;\n                    }\n                    else {\n                        *var_8h = 0;\n                        fcn.00ba86a1(var_3ch, arg_28h, var_88h);\n                        puVar24 = var_10h + 2;\n                        fcn.00bb8020(puVar24, var_10h, puVar27 * 2);\n                        var_8h = var_8h + 2;\n                        if (var_40h == NULL) {\n                            *var_10h = 0xa1;\n                            puVar9 = var_4h;\n                            goto code_r0x00ba7c12;\n                        }\n                        var_4ch = var_10h;\n                        *var_10h = iVar26 + 0x92;\n                    }\n                    var_40h = var_40h + -1;\n                    puVar9 = var_4h;\n                    var_10h = puVar24;\ncode_r0x00ba7e7e:\n                }\n                else {\n                    if (var_ch < var_50h) {\n                        if (arg_2ch == NULL) {\n                            if ((var_98h != NULL) && (var_54h < 0)) {\n                                var_5ch = var_64h;\n                                var_54h = var_2ch;\n                            }\n                            var_38h = var_ch;\n                            if (var_ch < var_50h) {\n                                var_80h = puVar27 * 2;\n                                puVar27 = var_ch;\n                                puVar21 = var_88h;\n                                do {\n                                    puVar24 = *(arg_28h + 0x20) - *(arg_28h + 0x10) >> 1;\n                                    var_68h = puVar24;\n                                    var_38h = puVar27;\n                                    var_14h = puVar21;\n                                    fcn.00bb1080(var_8h, var_10h, var_80h);\n                                    while (uVar14 = (*(arg_28h + 0x10) + (puVar21 + (*(arg_28h + 0x3c) - puVar24)) * 2)\n                                                    - 200,  uVar14 <= *(arg_28h + 0x20) && *(arg_28h + 0x20) != uVar14)\n                                    {\n                                        iVar13 = fcn.00c1e0e7();\n                                        *arg_ch = iVar13;\n                                        if (iVar13 != 0) goto code_r0x00be46b2;\n                                    }\n                                    piVar18 = *(arg_28h + 0x10) + puVar21 * 2;\n                                    puVar21 = puVar24;\n                                    if (piVar18 < *(arg_28h + 0x10) + puVar24 * 2) {\n                                        do {\n                                            **(arg_28h + 0x20) = *piVar18 + var_18h;\n                                            *(arg_28h + 0x20) = *(arg_28h + 0x20) + 2;\n                                            piVar18 = piVar18 + 1;\n                                            puVar27 = var_38h;\n                                            puVar21 = var_68h;\n                                        } while (piVar18 < *(arg_28h + 0x10) + puVar24 * 2);\n                                    }\n                                    puVar27 = puVar27 + 1;\n                                    var_14h = puVar21;\n                                    var_38h = puVar27;\n                                    var_8h = var_8h + var_18h * 2;\n                                    puVar9 = var_4h;\n                                } while (puVar27 < var_50h);\n                            }\n                        }\n                        else {\n                            iVar2 = (var_50h + -1) * var_84h;\n                            iVar13 = (var_50h + -1) * var_84h;\n                            if ((0 < iVar2 >> 0x20) ||\n                               (((-1 < iVar2 && (0x7fffffff < iVar2)) || (0x7fffffeb - *arg_2ch < iVar13))))\n                            goto code_r0x00be4601;\n                            *arg_2ch = *arg_2ch + iVar13;\n                        }\n                    }\n                    puVar27 = var_18h;\n                    if (0 < var_40h) {\n                        var_40h = var_40h - var_50h;\n                        goto code_r0x00ba7e7e;\n                    }\n                }\n                if (-1 < var_40h) {\n                    if ((arg_2ch == NULL) || (var_40h < 1)) {\n                        iVar13 = var_40h + -1;\n                        if (-1 < iVar13) {\n                            var_38h = puVar27 * 2;\n                            var_80h = var_1ch + 0x92;\n                            puVar27 = var_14h;\n                            do {\n                                iVar11 = *(arg_28h + 0x20);\n                                iVar10 = *(arg_28h + 0x10);\n                                *var_8h = var_80h;\n                                puVar21 = iVar11 - iVar10 >> 1;\n                                piVar18 = var_8h + 2;\n                                if (iVar13 != 0) {\n                                    *piVar18 = 0x83;\n                                    puVar24 = var_8h + 1;\n                                    if (var_24h == NULL) {\n                                        iVar26 = 0;\n                                    }\n                                    else {\n                                        iVar26 = puVar24 - var_24h >> 1;\n                                    }\n                                    *puVar24 = iVar26;\n                                    piVar18 = var_8h + 6;\n                                    var_24h = puVar24;\n                                }\n                                var_68h = puVar21;\n                                var_8h = piVar18;\n                                fcn.00bb1080(piVar18, var_10h, var_38h);\n                                while (uVar14 = (*(arg_28h + 0x10) + (puVar27 + (*(arg_28h + 0x3c) - puVar21)) * 2) -\n                                                200,  uVar14 <= *(arg_28h + 0x20) && *(arg_28h + 0x20) != uVar14) {\n                                    iVar11 = fcn.00c1e0e7();\n                                    *arg_ch = iVar11;\n                                    if (iVar11 != 0) goto code_r0x00be46b2;\n                                }\n                                piVar18 = *(arg_28h + 0x10) + puVar27 * 2;\n                                puVar27 = puVar21;\n                                if (piVar18 < *(arg_28h + 0x10) + puVar21 * 2) {\n                                    do {\n                                        **(arg_28h + 0x20) = *piVar18 + var_18h + (iVar13 != 0) * 2 + 1;\n                                        *(arg_28h + 0x20) = *(arg_28h + 0x20) + 2;\n                                        piVar18 = piVar18 + 1;\n                                        puVar27 = var_68h;\n                                    } while (piVar18 < *(arg_28h + 0x10) + puVar21 * 2);\n                                }\n                                iVar13 = iVar13 + -1;\n                                var_8h = var_8h + var_18h * 2;\n                                puVar9 = var_4h;\n                            } while (-1 < iVar13);\n                        }\n                    }\n                    else {\n                        iVar2 = (var_84h + 5) * var_40h;\n                        iVar13 = (var_84h + 5) * var_40h + -4;\n                        if (((0 < iVar2 >> 0x20) || ((-1 < iVar2 && (0x7fffffff < iVar2)))) ||\n                           (0x7fffffeb - *arg_2ch < iVar13)) goto code_r0x00be4601;\n                        *arg_2ch = *arg_2ch + iVar13;\n                    }\n                    puVar27 = var_24h;\n                    while (puVar27 != NULL) {\n                        iVar13 = (var_8h - puVar27 >> 1) + 1;\n                        uVar14 = *(var_8h + iVar13 * -2 + 2);\n                        puVar21 = NULL;\n                        if (uVar14 != 0) {\n                            puVar21 = puVar27 + uVar14 * -2;\n                        }\n                        *var_8h = 0x78;\n                        *(var_8h + 2) = iVar13;\n                        *(var_8h + iVar13 * -2 + 2) = iVar13;\n                        var_8h = var_8h + 1;\n                        puVar9 = var_4h;\n                        puVar27 = puVar21;\n                    }\n                    goto code_r0x00ba7c08;\n                }\n                var_24h = var_8h + -1;\n                piVar18 = var_24h + *(var_8h + -2) * -2;\n                if (((*piVar18 == 0x81) || (*piVar18 == 0x82)) && (var_20h != NULL)) {\n                    *piVar18 = 0x83;\n                }\n                iVar26 = *piVar18;\n                if ((iVar26 == 0x81) || (iVar26 == 0x82)) {\n                    *var_24h = var_1ch + 0x79;\n                    puVar9 = var_4h;\n                    goto code_r0x00ba7c08;\n                }\n                piVar19 = piVar18;\n                if (arg_2ch == NULL) {\n                    do {\n                        iVar13 = fcn.00ba8481(var_3ch, arg_28h, 0);\n                        if (iVar13 != 0) {\n                            *piVar18 = iVar26 + 5;\n                            break;\n                        }\n                        piVar19 = piVar19 + piVar19[1];\n                    } while (*piVar19 == 0x77);\n                }\n                puVar27 = var_8h;\n                if (var_20h != NULL) {\n                    iVar26 = *piVar18;\n                    if ((iVar26 == 0x87) || (iVar26 == 0x8c)) {\n                        *var_8h = 0;\n                        iVar13 = var_8h - piVar18 >> 1;\n                        fcn.00ba86a1(var_3ch, arg_28h, var_88h);\n                        fcn.00bb8020(piVar18 + 2, piVar18, iVar13 * 2);\n                        *piVar18 = 0x84;\n                        iVar26 = iVar13 + 2;\n                        *(puVar27 + 1) = 0x7b;\n                        *(puVar27 + 6) = iVar26;\n                        var_8h = puVar27 + 2;\n                        piVar18[1] = iVar26;\n                    }\n                    else {\n                        *piVar18 = iVar26 + 1;\n                        *var_24h = 0x7b;\n                    }\n                    if (var_4ch != NULL) {\n                        *var_4ch = 0x94;\n                    }\n                    puVar9 = var_4h;\n                    if (var_50h < 2) {\n                        var_20h = NULL;\n                    }\n                    goto code_r0x00ba7c08;\n                }\n                uVar7 = var_1ch + 0x79;\n                puVar27 = var_24h;\ncode_r0x00be2f68:\n                *puVar27 = uVar7;\n                puVar9 = var_4h;\n            }\ncode_r0x00ba7c12:\n            var_10h = NULL;\n            *(arg_28h + 0x68) = *(arg_28h + 0x68) | var_74h;\n            puVar27 = var_8h;\n            puVar21 = var_10h;\n            var_4h = puVar9;\n        }\n        else {\n            if (puVar24 == NULL) {\ncode_r0x00ba755b:\n                *arg_10h = var_64h;\n                *arg_14h = var_2ch;\n                *arg_18h = var_5ch;\n                *arg_1ch = var_54h;\n                *var_140h = var_8h;\n                *arg_8h = puVar21;\n                if (arg_2ch == NULL) {\n                    return var_ch;\n                }\n                iVar13 = var_8h - var_a8h >> 1;\n                puVar9 = puVar21;\n                if (iVar13 <= 0x7fffffeb - *arg_2ch) {\n                    *arg_2ch = *arg_2ch + iVar13;\n                    return var_ch;\n                }\n                goto code_r0x00be4601;\n            }\n            if (puVar24 == 0x24) {\n                var_10h = NULL;\n                iVar26 = ((var_34h & 2) != 0) + 0x19;\ncode_r0x00ba8021:\ncode_r0x00ba8024:\n                *var_8h = iVar26;\n                var_8h = var_8h + 2;\n                puVar27 = var_8h;\n                puVar21 = var_10h;\n                goto code_r0x00ba751e;\n            }\n            if (puVar24 != 0x28) {\n                if (puVar24 != 0x29) {\n                    if (puVar24 == 0x2a) {\n                        puVar9 = NULL;\n                    }\n                    else {\n                        puVar9 = var_ch;\n                        if (puVar24 != 0x2b) {\n                            if (puVar24 != 0x2e) goto code_r0x00ba73fb;\n                            if (var_2ch == 0xfffffffe) {\n                                var_2ch = 0xffffffff;\n                            }\n                            var_7ch = var_64h;\n                            var_58h = var_54h;\n                            var_6ch = var_2ch;\n                            var_28h = var_5ch;\n                            iVar26 = (var_34h & 4U | 0x30) >> 2;\n                            var_10h = var_8h;\n                            goto code_r0x00ba8021;\n                        }\n                    }\n                    var_40h = 0xffffffff;\n                    goto code_r0x00ba7b04;\n                }\n                goto code_r0x00ba755b;\n            }\n            puVar24 = puVar21 + 2;\n            iVar26 = *puVar24;\n            if ((iVar26 == 0x3f) && (*(puVar21 + 1) == 0x23)) {\n                var_4h = puVar21 + 6;\n                iVar26 = *var_4h;\n                if (iVar26 != 0) {\n                    do {\n                        if (iVar26 == 0x29) break;\n                        var_4h = var_4h + 2;\n                        iVar26 = *var_4h;\n                    } while (iVar26 != 0);\n                    puVar27 = var_8h;\n                    puVar21 = var_10h;\n                    if (*var_4h != 0) goto code_r0x00ba751e;\n                }\n                *arg_ch = 0x12;\n                goto code_r0x00be46b2;\n            }\n            if (iVar26 == 0x2a) {\n                var_68h = puVar21 + 1;\n                uVar7 = *var_68h;\n                if ((uVar7 == 0x3a) || ((uVar7 < 0x100 && ((*(uVar7 + *(arg_28h + 0xc)) & 2) != 0)))) {\n                    var_14h = NULL;\n                    var_1ch = NULL;\n                    var_24h = 0xc47800;\n                    uVar7 = *var_68h;\n                    var_10h = NULL;\n                    var_4h = var_68h;\n                    if (uVar7 < 0x100) {\n                        do {\n                            if ((*(uVar7 + *(arg_28h + 0xc)) & 2) == 0) break;\n                            var_4h = var_4h + 2;\n                            uVar7 = *var_4h;\n                        } while (uVar7 < 0x100);\n                    }\n                    puVar27 = var_4h - var_68h >> 1;\n                    var_38h = puVar27;\n                    if (*var_4h == 0x3a) {\n                        var_1ch = var_4h + 2;\n                        iVar26 = *var_1ch;\n                        var_4h = var_1ch;\n                        while ((iVar26 != 0 && (iVar26 != 0x29))) {\n                            var_4h = var_4h + 2;\n                            iVar26 = *var_4h;\n                        }\n                        var_14h = var_4h - var_1ch >> 1;\n                        if (0xffff < var_14h) {\n                            *arg_ch = 0x4b;\n                            goto code_r0x00be46b2;\n                        }\n                    }\n                    puVar24 = var_4h;\n                    if (*var_4h == 0x29) {\n                        ppiVar22 = 0xc47730;\n                        var_18h = NULL;\ncode_r0x00be1f63:\n                        puVar21 = *ppiVar22;\n                        if ((puVar27 != puVar21) ||\n                           (iVar13 = fcn.00ba8395(puVar27),  puVar9 = var_14h,  puVar27 = var_38h,  iVar13 != 0))\n                        goto code_r0x00be1f80;\n                        iVar13 = var_18h * 0xc;\n                        uVar14 = *(iVar13 + 0xc47734);\n                        if (uVar14 != 0x9e) {\n                            if (var_14h == NULL) {\n                                if (-1 < uVar14) {\n                                    uVar14 = uVar14 & 0xffff;\n                                    *var_8h = uVar14;\n                                    var_8h = var_8h + 2;\n                                    goto code_r0x00be207a;\n                                }\n                                *arg_ch = 0x42;\n                                var_4h = puVar24;\n                                goto code_r0x00be46b2;\n                            }\n                            if (-1 < *(iVar13 + 0xc47738)) {\n                                uVar14 = *(iVar13 + 0xc47738);\n                                *var_8h = *(iVar13 + 0xc47738);\n                                *(var_8h + 2) = var_14h;\n                                puVar27 = var_8h + 1;\n                                fcn.00bb1080(puVar27, var_1ch, var_14h * 2);\n                                piVar18 = puVar27 + puVar9 * 2;\n                                *piVar18 = 0;\n                                var_8h = piVar18 + 1;\n                                goto code_r0x00be207a;\n                            }\ncode_r0x00be4567:\n                            *arg_ch = 0x3b;\n                            var_4h = puVar24;\n                            goto code_r0x00be46b2;\n                        }\n                        if (var_14h != NULL) goto code_r0x00be4567;\n                        puVar27 = *(arg_28h + 0x24);\n                        *(arg_28h + 0x6c) = var_ch;\n                        for (; puVar27 != NULL; puVar27 = *puVar27) {\n                            *var_8h = 0xa0;\n                            *(var_8h + 2) = *(puVar27 + 1);\n                            var_8h = var_8h + 1;\n                        }\n                        uVar7 = (0 < *(arg_28h + 0x5c)) + 0x9e;\n                        *var_8h = uVar7;\n                        uVar14 = uVar7;\n                        var_8h = var_8h + 2;\n                        if (var_2ch == 0xfffffffe) {\n                            var_2ch = 0xffffffff;\n                        }\ncode_r0x00be207a:\n                        puVar24 = var_4h;\n                        if (0x95 < uVar14) {\n                            if (uVar14 < 0x9a) {\n                                *(arg_28h + 0x70) = var_ch;\n                            }\n                            else if (uVar14 < 0x9c) {\n                                *(arg_28h + 100) = *(arg_28h + 100) | 0x1000;\n                            }\n                        }\ncode_r0x00be20a4:\n                        puVar27 = var_8h;\n                        puVar21 = var_10h;\n                        var_4h = puVar24;\n                        if (8 < var_18h) goto code_r0x00be20b0;\n                        goto code_r0x00ba751e;\n                    }\ncode_r0x00be20b0:\n                    iVar13 = 0x3c;\ncode_r0x00be4681:\n                    *arg_ch = iVar13;\n                    var_4h = puVar24;\ncode_r0x00be46b2:\n                    *arg_8h = var_4h;\n                    return NULL;\n                }\n            }\n            var_20h = NULL;\n            var_88h = *(arg_28h + 0x20) - *(arg_28h + 0x10) >> 1;\n            iVar13 = 0;\n            var_4ch = var_34h;\n            var_1ch = 0x85;\n            var_38h = NULL;\n            if (iVar26 != 0x3f) {\n                var_4h = puVar24;\n                if ((var_34h & 0x1000) == 0) {\ncode_r0x00ba794b:\n                    *(arg_28h + 0x40) = *(arg_28h + 0x40) + 1;\n                    *(var_8h + 1) = *(arg_28h + 0x40);\n                    var_20h = var_ch;\n                    puVar27 = var_1ch;\n                    puVar24 = var_4h;\n                }\n                else {\n                    puVar27 = 0x83;\n                }\n                goto code_r0x00ba7968;\n            }\n            puVar24 = puVar21 + 1;\n            uVar7 = *puVar24;\n            puVar27 = uVar7;\n            var_4h = puVar24;\n            if (puVar27 < 0x3b) {\n                if (puVar27 == 0x3a) {\ncode_r0x00be2616:\n                    puVar27 = 0x83;\ncode_r0x00be2622:\n                    puVar24 = puVar21 + 6;\n                    goto code_r0x00be2636;\n                }\n                if (0x28 < puVar27) {\n                    if (((puVar27 == 0x2b) || (puVar27 == 0x2d)) || ((0x2f < puVar27 && (puVar27 < 0x3a)))) {\ncode_r0x00be2603:\n                        var_4ch = 0x29;\n                        goto code_r0x00be350b;\n                    }\ncode_r0x00ba7cc4:\n                    var_20h = NULL;\n                    var_38h = NULL;\n                    puVar16 = &var_4ch;\n                    var_24h = NULL;\n                    var_4ch = NULL;\n                    uVar14 = 0;\n                    puVar21 = var_4h;\n                    puVar24 = var_4h;\n                    if (puVar27 != var_118h) {\n                        do {\n                            uVar14 = var_4ch;\n                            puVar24 = puVar21;\n                            if (puVar27 == 0x3a) break;\n                            puVar24 = puVar21 + 2;\n                            var_4h = puVar24;\n                            if (puVar27 < 0x6a) {\n                                puVar9 = var_ch;\n                                if (puVar27 == 0x69) {\ncode_r0x00ba7cff:\n                                    *puVar16 = *puVar16 | puVar9;\n                                }\n                                else if (puVar27 == 0x2d) {\n                                    puVar16 = &var_24h;\n                                }\n                                else if (puVar27 == 0x4a) {\n                                    *puVar16 = *puVar16 | 0x80000;\n                                    *(arg_28h + 100) = *(arg_28h + 100) | 0x400;\n                                }\n                                else if (puVar27 == 0x55) {\n                                    *puVar16 = *puVar16 | 0x200;\n                                }\n                                else {\n                                    if (puVar27 != 0x58) goto code_r0x00be460f;\n                                    *puVar16 = *puVar16 | 0x40;\n                                }\n                            }\n                            else if (puVar27 == 0x6d) {\n                                *puVar16 = *puVar16 | 2;\n                            }\n                            else {\n                                if (puVar27 == 0x73) {\n                                    puVar9 = 0x4;\n                                    goto code_r0x00ba7cff;\n                                }\n                                if (puVar27 != 0x78) {\ncode_r0x00be460f:\n                                    *arg_ch = 0xc;\n                                    var_4h = puVar21;\n                                    goto code_r0x00be46b2;\n                                }\n                                *puVar16 = *puVar16 | 8;\n                            }\n                            puVar27 = *puVar24;\n                            uVar14 = var_4ch;\n                            puVar21 = puVar24;\n                        } while (*puVar24 != 0x29);\n                    }\n                    var_4ch = (uVar14 | var_34h) & ~var_24h;\n                    if (*puVar24 == 0x29) {\n                        if ((var_8h == *(arg_28h + 0x14) + 4) && ((arg_2ch == NULL || (*arg_2ch == 4)))) {\n                            *(arg_28h + 0x60) = var_4ch;\n                        }\n                        else {\n                            var_dch = var_4ch >> 9 & var_ch;\n                            var_e8h = var_dch ^ var_ch;\n                            var_8ch = var_4ch & var_ch;\n                        }\n                        var_34h = var_4ch;\n                        *var_120h = var_4ch;\n                        var_10h = NULL;\n                        puVar27 = var_8h;\n                        puVar21 = var_10h;\n                        var_4h = puVar24;\n                        goto code_r0x00ba751e;\n                    }\n                    puVar27 = 0x83;\n                    goto code_r0x00be2631;\n                }\n                if (puVar27 == 0x28) {\n                    puVar27 = 0x87;\n                    var_1ch = 0x87;\n                    var_70h = puVar24;\n                    if ((*(puVar21 + 6) == 0x3f) && (*(puVar21 + 2) == 0x43)) {\n                        iVar13 = 3;\n                        uVar7 = *(puVar21 + 10);\n                        while ((0x2f < uVar7 && (uVar7 <= var_90h))) {\n                            iVar13 = iVar13 + 1;\n                            uVar7 = *(puVar24 + iVar13 * 2);\n                        }\n                        if (*(puVar24 + iVar13 * 2) == 0x29) {\n                            var_70h = puVar24 + (iVar13 + 1) * 2;\n                        }\n                    }\n                    if ((*(var_70h + 2) == 0x3f) &&\n                       (((iVar26 = *(var_70h + 1),  iVar26 == 0x3d || (iVar26 == 0x21)) ||\n                        ((iVar26 == 0x3c && ((*(var_70h + 6) == 0x3d || (*(var_70h + 6) == 0x21)))))))) {\n                        *(arg_28h + 0x7c) = var_ch;\n                    }\n                    else {\n                        var_18h = 0xffffffff;\n                        iVar13 = 0;\n                        *(var_8h + 1) = 0x8d;\n                        var_24h = puVar21 + 6;\n                        var_20h = 0x2;\n                        var_14h = NULL;\n                        uVar7 = *var_24h;\n                        uVar14 = uVar7;\n                        if ((uVar7 == var_144h) && (*(puVar21 + 2) == 0x26)) {\n                            var_24h = puVar21 + 10;\n                            var_10h = 0xffffffff;\n                            *(var_8h + 1) = 0x8f;\ncode_r0x00be228a:\n                            uVar7 = *var_24h;\n                            iVar11 = var_10h;\n                            if ((0x2f < uVar7) && (uVar7 < 0x3a)) goto code_r0x00be4583;\ncode_r0x00be22a1:\n                            var_10h = iVar11;\n                            if ((0xff < uVar7) || ((*(uVar7 + *(arg_28h + 0xc)) & 0x10) == 0)) {\n                                *arg_ch = 0x1c;\n                                var_4h = var_24h;\n                                goto code_r0x00be46b2;\n                            }\n                            puVar24 = var_24h + 2;\n                            uVar7 = *puVar24;\n                            if (uVar7 < 0x100) {\n                                do {\n                                    if ((*(uVar7 + *(arg_28h + 0xc)) & 0x10) == 0) break;\n                                    puVar24 = puVar24 + 2;\n                                    uVar7 = *puVar24;\n                                } while (uVar7 <= var_b4h);\n                            }\n                            var_18h = puVar24 - var_24h >> 1;\n                            if (arg_2ch != NULL) {\n                                *arg_2ch = *arg_2ch + 1;\n                            }\n                            uVar14 = 0xffffffff;\n                            var_14h = var_24h;\n                            if ((var_10h < 1) || (iVar26 = *puVar24,  puVar24 = puVar24 + 2,  iVar26 == var_10h))\n                            goto code_r0x00be232e;\ncode_r0x00be459f:\n                            *arg_ch = 0x1a;\n                            var_4h = puVar24 + -2;\n                            goto code_r0x00be46b2;\n                        }\n                        if (uVar7 == var_110h) {\n                            var_10h = 0x3e;\ncode_r0x00be2394:\n                            var_24h = puVar21 + 2;\n                            goto code_r0x00be228a;\n                        }\n                        if (uVar7 == var_e0h) {\n                            var_10h = 0x27;\n                            goto code_r0x00be2394;\n                        }\n                        var_10h = NULL;\n                        if ((uVar7 != var_154h) && (uVar7 != var_158h)) {\n                            iVar11 = 0;\n                            if (var_e4h <= uVar7) {\n                                if (var_90h < uVar7) goto code_r0x00be228a;\n                                uVar14 = 0;\n                                goto code_r0x00be23f7;\n                            }\n                            goto code_r0x00be22a1;\n                        }\n                        var_24h = puVar21 + 2;\ncode_r0x00be23f7:\n                        uVar7 = *var_24h;\n                        puVar24 = var_24h;\n                        while ((var_10h = 0,  0x2f < uVar7 && (var_10h = 0,  uVar7 < 0x3a))) {\n                            puVar24 = puVar24 + 2;\n                            iVar13 = (uVar7 - 0x30) + iVar13 * 10;\n                            uVar7 = *puVar24;\n                        }\ncode_r0x00be232e:\n                        puVar27 = var_18h;\n                        iVar26 = *puVar24;\n                        puVar24 = puVar24 + 2;\n                        if (iVar26 != 0x29) goto code_r0x00be459f;\n                        var_4h = puVar24;\n                        var_24h = puVar24;\n                        if (arg_2ch == NULL) {\n                            if (-1 < uVar14) {\n                                if (0 < iVar13) {\n                                    if (uVar14 != 0) {\n                                        if (uVar14 == 0x2d) {\n                                            iVar13 = (*(arg_28h + 0x40) - iVar13) + 1;\n                                        }\n                                        else {\n                                            iVar13 = iVar13 + *(arg_28h + 0x40);\n                                        }\n                                    }\n                                    if ((iVar13 < 1) || (*(arg_28h + 0x44) < iVar13)) goto code_r0x00be35cd;\n                                    *(var_8h + 6) = iVar13;\n                                    puVar27 = var_1ch;\n                                    if (*(arg_28h + 0x4c) < iVar13) {\n                                        *(arg_28h + 0x4c) = iVar13;\n                                    }\n                                    goto code_r0x00ba7968;\n                                }\n                                *arg_ch = 0x23;\n                                goto code_r0x00be46b2;\n                            }\n                            puVar21 = NULL;\n                            iVar13 = *(arg_28h + 0x30);\n                            var_48h = *(arg_28h + 0x2c);\n                            if (0 < iVar13) {\n                                do {\n                                    iVar11 = fcn.00c1e9f8(puVar27);\n                                    if (iVar11 == 0) break;\n                                    puVar21 = puVar21 + 1;\n                                    var_48h = var_48h + *(arg_28h + 0x34) * 2;\n                                } while (puVar21 < iVar13);\n                            }\n                            puVar24 = var_24h;\n                            if (iVar13 <= puVar21) {\n                                if (var_10h == NULL) {\n                                    if (*var_14h == 0x52) {\n                                        iVar13 = 0;\n                                        puVar27 = var_ch;\n                                        if (var_18h < 2) {\ncode_r0x00be2589:\n                                            iVar13 = 0xffff;\n                                        }\n                                        else {\n                                            do {\n                                                uVar7 = *(var_14h + puVar27 * 2);\n                                                if ((uVar7 < 0x30) || (var_90h < uVar7)) goto code_r0x00be35cd;\n                                                iVar13 = iVar13 * 10 + (uVar7 - 0x30);\n                                                puVar27 = puVar27 + 1;\n                                            } while (puVar27 < var_18h);\n                                            if (iVar13 == 0) goto code_r0x00be2589;\n                                        }\n                                        *(var_8h + 1) = 0x8f;\n                                        *(var_8h + 6) = iVar13;\n                                        puVar27 = var_1ch;\n                                        puVar24 = var_4h;\n                                        goto code_r0x00ba7968;\n                                    }\n                                    if ((var_18h == 0x6) && (iVar13 = fcn.00ba8395(6),  iVar13 == 0)) {\n                                        *(var_8h + 1) = 0x91;\n                                        var_20h = var_ch;\n                                        puVar27 = var_1ch;\n                                        puVar24 = var_4h;\n                                        goto code_r0x00ba7968;\n                                    }\n                                }\ncode_r0x00be35cd:\n                                iVar13 = 0xf;\n                                goto code_r0x00be4681;\n                            }\n                            uVar7 = *var_48h;\n                            var_80h = uVar7;\n                            iVar13 = puVar21 + 1;\n                            if (*(arg_28h + 0x4c) < var_80h) {\n                                *(arg_28h + 0x4c) = var_80h;\n                            }\n                            var_68h = puVar21;\n                            if (iVar13 < *(arg_28h + 0x30)) {\n                                iVar11 = *(arg_28h + 0x34);\n                                puVar27 = var_ch;\n                                do {\n                                    var_48h = var_48h + iVar11 * 2;\n                                    iVar10 = fcn.00c1e9f8(var_18h);\n                                    if ((iVar10 != 0) || (*(var_48h + var_18h * 2 + 2) != 0)) break;\n                                    puVar27 = puVar27 + 1;\n                                    iVar13 = iVar13 + 1;\n                                } while (iVar13 < *(arg_28h + 0x30));\n                                if (var_ch < puVar27) {\n                                    var_20h = 0x3;\n                                    *(var_8h + 1) = *(var_8h + 1) + 1;\n                                    *(var_8h + 6) = var_68h;\n                                    *(var_8h + 2) = puVar27;\n                                    puVar27 = var_1ch;\n                                    puVar24 = var_4h;\n                                    goto code_r0x00ba7968;\n                                }\n                                uVar7 = var_80h;\n                            }\n                            *(var_8h + 6) = uVar7;\n                            puVar27 = var_1ch;\n                            puVar24 = var_4h;\n                        }\n                        else {\n                            puVar27 = 0x87;\n                        }\n                    }\n                }\n                else {\n                    if (puVar27 != 0x21) {\n                        if (puVar27 == 0x26) {\n                            var_18h = var_ch;\n                            goto code_r0x00be20fe;\n                        }\n                        if (puVar27 == 0x27) goto code_r0x00be2720;\n                        goto code_r0x00ba7cc4;\n                    }\n                    puVar24 = puVar21 + 6;\n                    var_4h = puVar24;\n                    if ((((*puVar24 == 0x29) && (iVar26 = *(puVar21 + 2),  iVar26 != 0x2a)) && (iVar26 != 0x2b)) &&\n                       ((iVar26 != 0x3f && ((iVar26 != 0x7b || (iVar13 = fcn.00c1e65f(),  iVar13 == 0)))))) {\n                        *var_8h = 0x9d;\n                        puVar27 = var_8h + 2;\n                        goto code_r0x00be217c;\n                    }\n                    puVar27 = 0x7e;\n                    *(arg_28h + 0x5c) = *(arg_28h + 0x5c) + 1;\n                }\n            }\n            else {\n                if (puVar27 == 0x3c) {\n                    uVar14 = *(puVar21 + 6);\n                    if (uVar14 == 0x21) {\n                        puVar27 = 0x80;\n                    }\n                    else {\n                        if (uVar14 != 0x3d) {\n                            if ((var_b4h < *(puVar21 + 6)) || ((*(uVar14 + *(arg_28h + 0xc)) & 0x10) == 0)) {\n                                *arg_ch = 0x18;\n                                var_4h = puVar21 + 6;\n                            }\n                            else {\ncode_r0x00be2720:\n                                var_24h = puVar24 + 2;\n                                uVar6 = *var_24h;\n                                if ((uVar6 < 0x30) || (0x39 < uVar6)) {\n                                    var_4h = var_24h;\n                                    if (uVar6 < 0x100) {\n                                        do {\n                                            if ((*(uVar6 + *(arg_28h + 0xc)) & 0x10) == 0) break;\n                                            var_4h = var_4h + 2;\n                                            uVar6 = *var_4h;\n                                        } while (uVar6 <= var_b4h);\n                                    }\n                                    puVar24 = var_4h;\n                                    var_14h = var_4h - var_24h >> 1;\n                                    if (arg_2ch != NULL) {\n                                        var_18h = *(arg_28h + 0x40) + 1;\n                                        if (*var_4h != ((uVar7 != 0x3c) - 1 & 0x17) + 0x27) {\n                                            iVar13 = 0x2a;\n                                            goto code_r0x00be4681;\n                                        }\n                                        if (9999 < *(arg_28h + 0x30)) {\n                                            *arg_ch = 0x31;\n                                            var_4h = puVar24;\n                                            goto code_r0x00be46b2;\n                                        }\n                                        if ((*(arg_28h + 0x34) < var_14h + 2) &&\n                                           (*(arg_28h + 0x34) = var_14h + 2,  0x20 < var_14h)) {\n                                            iVar13 = 0x30;\n                                            goto code_r0x00be4681;\n                                        }\n                                        iVar13 = *(arg_28h + 0x28);\n                                        iVar11 = 0;\n                                        if (0 < *(arg_28h + 0x30)) {\n                                            do {\n                                                if ((var_14h == *(iVar13 + 4)) &&\n                                                   (iVar10 = fcn.00c1e9f8(var_14h),  iVar10 == 0)) {\n                                                    if (*(iVar13 + 8) == var_18h) break;\n                                                    if ((var_34h & 0x80000) == 0) {\n                                                        iVar13 = 0x2b;\n                                                        goto code_r0x00be4681;\n                                                    }\n                                                    *(arg_28h + 0x78) = var_ch;\n                                                }\n                                                else if (*(iVar13 + 8) == var_18h) {\n                                                    *arg_ch = 0x41;\n                                                    var_4h = puVar24;\n                                                    goto code_r0x00be46b2;\n                                                }\n                                                iVar11 = iVar11 + 1;\n                                                iVar13 = iVar13 + 0xc;\n                                            } while (iVar11 < *(arg_28h + 0x30));\n                                        }\n                                        if (*(arg_28h + 0x30) <= iVar11) {\n                                            iVar13 = *(arg_28h + 0x38);\n                                            if (iVar13 <= *(arg_28h + 0x30)) {\n                                                iVar11 = (**0xc3574c)(iVar13 * 0x18);\n                                                if (iVar11 == 0) {\n                                                    *arg_ch = 0x15;\n                                                    goto code_r0x00be46b2;\n                                                }\n                                                fcn.00bb1080(iVar11, *(arg_28h + 0x28), *(arg_28h + 0x38) * 0xc);\n                                                if (0x14 < *(arg_28h + 0x38)) {\n                                                    (**0xc35748)(*(arg_28h + 0x28));\n                                                }\n                                                *(arg_28h + 0x28) = iVar11;\n                                                *(arg_28h + 0x38) = iVar13 * 2;\n                                            }\n                                            *(*(arg_28h + 0x30) * 0xc + *(arg_28h + 0x28)) = var_24h;\n                                            *(*(arg_28h + 0x30) * 0xc + 4 + *(arg_28h + 0x28)) = var_14h;\n                                            *(*(arg_28h + 0x30) * 0xc + 8 + *(arg_28h + 0x28)) = var_18h;\n                                            *(arg_28h + 0x30) = *(arg_28h + 0x30) + 1;\n                                            puVar24 = var_4h;\n                                        }\n                                    }\n                                    var_4h = puVar24 + 2;\n                                    goto code_r0x00ba794b;\n                                }\ncode_r0x00be4583:\n                                *arg_ch = 0x54;\n                                var_4h = var_24h;\n                            }\n                            goto code_r0x00be46b2;\n                        }\n                        puVar27 = 0x7f;\n                    }\n                    iVar13 = 4;\n                    *(arg_28h + 0x5c) = *(arg_28h + 0x5c) + 1;\n                }\n                else {\n                    if (puVar27 != 0x3d) {\n                        if (puVar27 == 0x3e) {\n                            puVar27 = 0x81;\n                            goto code_r0x00be2622;\n                        }\n                        if (puVar27 == 0x43) {\n                            var_9ch = var_ch;\n                            *var_8h = 0x76;\n                            var_4h = puVar21 + 6;\n                            var_78h = var_8h;\n                            uVar7 = *var_4h;\n                            while ((0x2f < uVar7 && (uVar7 <= var_90h))) {\n                                var_4h = var_4h + 2;\n                                iVar13 = iVar13 * 10 + (uVar7 - 0x30);\n                                uVar7 = *var_4h;\n                            }\n                            puVar24 = var_4h;\n                            if (*var_4h == 0x29) {\n                                if (iVar13 < 0x100) {\n                                    *(var_8h + 2) = iVar13;\n                                    *(var_8h + 1) = (var_4h - *(arg_28h + 0x18) >> 1) + 1;\n                                    *(var_8h + 6) = 0;\n                                    puVar27 = var_8h + 2;\ncode_r0x00be217c:\n                                    var_10h = NULL;\n                                    goto code_r0x00ba80f5;\n                                }\n                                iVar13 = 0x26;\n                            }\n                            else {\n                                iVar13 = 0x27;\n                            }\n                            goto code_r0x00be4681;\n                        }\n                        if (puVar27 != 0x50) {\n                            if (puVar27 == 0x52) {\n                                var_4h = puVar21 + 6;\n                                goto code_r0x00be2603;\n                            }\n                            if (puVar27 != 0x7c) goto code_r0x00ba7cc4;\n                            var_38h = var_ch;\n                            goto code_r0x00be2616;\n                        }\n                        puVar24 = puVar21 + 6;\n                        uVar7 = *puVar24;\n                        if (uVar7 == 0x3d) {\n                            var_18h = NULL;\n                        }\n                        else {\n                            if (uVar7 != 0x3e) {\n                                if (uVar7 == 0x3c) goto code_r0x00be2720;\n                                iVar13 = 0x29;\n                                goto code_r0x00be4681;\n                            }\n                            var_18h = var_ch;\n                        }\ncode_r0x00be20fe:\n                        puVar9 = 0x29;\n                        goto code_r0x00be37bd;\n                    }\n                    puVar27 = 0x7d;\n                    *(arg_28h + 0x5c) = *(arg_28h + 0x5c) + 1;\ncode_r0x00be2631:\n                    iVar13 = 2;\n                }\n                puVar24 = puVar24 + iVar13;\ncode_r0x00be2636:\n                var_20h = NULL;\n                var_4h = puVar24;\n            }\ncode_r0x00ba7968:\n            *(arg_28h + 0x58) = *(arg_28h + 0x58) + 1;\n            if (0xfa < *(arg_28h + 0x58)) {\n                *arg_ch = 0x52;\n                var_4h = puVar24;\n                goto code_r0x00be46b2;\n            }\n            var_10h = var_8h;\n            if ((puVar27 - 0x7dU < 4) && (*(arg_28h + 0x7c) != 0)) {\n                var_10h = NULL;\n                *(arg_28h + 0x7c) = 0;\n            }\n            *var_8h = puVar27;\n            puVar24 = *(arg_28h + 0x68);\n            uVar14 = *(arg_28h + 0x40);\n            var_84h = 0;\n            if (puVar27 == 0x87) {\n                puVar21 = NULL;\n                puVar9 = var_ch;\n            }\n            else {\n                puVar9 = NULL;\n                if ((puVar27 == 0x7f) || (puVar21 = NULL,  puVar27 == 0x80)) {\n                    puVar21 = var_ch;\n                }\n            }\n            var_74h = puVar24;\n            var_44h = var_8h;\n            iVar13 = fcn.00ba6db8(&var_4h, arg_ch, puVar21, var_38h, var_20h, arg_24h + puVar9, &var_d8h, &var_a4h, \n                                  &var_ach, &var_a0h, arg_20h, arg_28h, -(arg_2ch != NULL) & &var_84h);\n            if (iVar13 == 0) goto code_r0x00be46b2;\n            *(arg_28h + 0x58) = *(arg_28h + 0x58) + -1;\n            puVar9 = puVar27;\n            if (puVar27 == 0x81) {\n                if (*(arg_28h + 0x40) < uVar14 || *(arg_28h + 0x40) == uVar14) {\n                    *var_8h = 0x82;\n                    goto code_r0x00ba7a3c;\n                }\n            }\n            else {\ncode_r0x00ba7a3c:\n                if ((0x7c < puVar27) && (puVar27 < 0x81)) {\n                    *(arg_28h + 0x5c) = *(arg_28h + 0x5c) + -1;\n                }\n                if ((puVar27 == 0x87) && (arg_2ch == NULL)) {\n                    puVar15 = NULL;\n                    puVar21 = var_8h;\n                    do {\n                        puVar15 = puVar15 + 1;\n                        puVar21 = puVar21 + *(puVar21 + 2) * 2;\n                    } while (*puVar21 != 0x78);\n                    puVar9 = 0x91;\n                    puVar24 = var_74h;\n                    if (*(var_8h + 1) == 0x91) {\n                        if (var_ch < puVar15) {\n                            *arg_ch = 0x36;\n                            goto code_r0x00be46b2;\n                        }\n                    }\n                    else {\n                        if (2 < puVar15) {\n                            *arg_ch = 0x1b;\n                            goto code_r0x00be46b2;\n                        }\n                        puVar9 = puVar27;\n                        if (puVar15 == var_ch) {\n                            var_a0h = 0xffffffff;\n                            var_a4h = 0xffffffff;\n                        }\n                    }\n                }\n            }\n            if (*var_4h != 0x29) {\n                *arg_ch = 0xe;\n                goto code_r0x00be46b2;\n            }\n            if (arg_2ch != NULL) {\n                puVar9 = var_4h;\n                if (0x7fffffeb - *arg_2ch < var_84h + -4) goto code_r0x00be4601;\n                *arg_2ch = var_84h + -4 + *arg_2ch;\n                *(var_8h + 2) = 2;\n                *(var_8h + 1) = 0x78;\n                piVar18 = var_8h + 6;\n                *piVar18 = 2;\ncode_r0x00ba7fe2:\n                var_8h = piVar18 + 1;\n                goto code_r0x00ba782c;\n            }\n            var_8h = var_44h;\n            puVar27 = var_8h;\n            puVar21 = var_10h;\n            if (puVar9 != 0x91) {\n                var_28h = var_5ch;\n                var_58h = var_54h;\n                var_7ch = var_64h;\n                var_6ch = var_2ch;\n                var_98h = NULL;\n                if (puVar9 < 0x81) {\n                    if (puVar9 == 0x7d) goto code_r0x00ba7ad2;\n                }\n                else {\n                    if (var_2ch == 0xfffffffe) {\n                        if (var_a4h < 0) {\n                            var_2ch = 0xffffffff;\n                        }\n                        else {\n                            var_2ch = var_a4h;\n                            var_64h = var_d8h;\n                            var_98h = var_ch;\n                        }\n                        var_6ch = 0xffffffff;\ncode_r0x00ba7ad2:\n                        if (var_a0h < 0) goto code_r0x00ba751e;\n                    }\n                    else {\n                        if (var_a4h < 0) goto code_r0x00ba7ad2;\n                        if (var_a0h < 0) {\n                            var_ach = var_d8h;\n                            var_a0h = var_a4h | puVar24;\n                            goto code_r0x00ba7ad2;\n                        }\n                    }\n                    var_5ch = var_ach;\n                    var_54h = var_a0h;\n                }\n            }\n        }\n    }\n    else if (puVar24 == 0x5b) {\n        iVar13 = fcn.00ba8395(6);\n        if (iVar13 == 0) {\n            var_60h = puVar21 + 0xe;\n            pcVar25 = L\"\\\\b(?=\\\\w)\";\n        }\n        else {\n            iVar13 = fcn.00ba8395(6);\n            if (iVar13 != 0) {\n                var_10h = var_8h;\n                iVar26 = *(puVar21 + 2);\n                if ((((iVar26 == 0x3a) || (iVar26 == 0x2e)) || (iVar26 == 0x3d)) &&\n                   (iVar13 = fcn.00c1e02e(),  iVar13 != 0)) {\n                    *arg_ch = ((*(puVar21 + 2) != 0x3a) - 1 & 0xffffffee) + 0x1f;\n                    var_4h = puVar21;\n                }\n                else {\n                    var_24h = NULL;\n                    puVar27 = var_24h;\n                    while( true ) {\n                        while( true ) {\n                            puVar24 = puVar21;\n                            var_4h = puVar24 + 2;\n                            puVar9 = *var_4h;\n                            var_18h = puVar9;\n                            if (puVar9 != 0x5c) break;\n                            puVar21 = puVar24 + 1;\n                            if (*(puVar24 + 1) != 0x45) {\n                                iVar13 = fcn.00ba8395(3);\n                                if (iVar13 != 0) goto code_r0x00ba7685;\n                                puVar27 = var_24h;\n                                puVar21 = puVar24 + 2;\n                            }\n                        }\n                        if ((puVar27 != NULL) || (puVar9 != 0x5e)) break;\n                        var_24h = var_ch;\n                        puVar27 = var_ch;\n                        puVar21 = var_4h;\n                    }\n                    if ((puVar9 == 0x5d) && ((*(arg_28h + 0x60) & 0x2000000) != 0)) {\n                        *var_8h = (-(puVar27 != NULL) & 0xff70) + 0x9d;\n                        var_8h = var_8h + 2;\n                        if (var_2ch == 0xfffffffe) {\n                            var_2ch = 0xffffffff;\n                        }\n                        var_7ch = var_64h;\n                        var_6ch = var_2ch;\n                        puVar27 = var_8h;\n                        puVar21 = var_10h;\n                        goto code_r0x00ba751e;\n                    }\ncode_r0x00ba7685:\n                    puVar27 = var_8h + 6;\n                    var_28h = NULL;\n                    var_68h = NULL;\n                    var_20h = NULL;\n                    var_58h = NULL;\n                    var_38h = NULL;\n                    var_80h = puVar27;\n                    var_1ch = puVar27;\n                    var_14h = puVar27;\n                    fcn.00bb3020(&var_d4h, 0, 0x20);\n                    if (puVar9 != NULL) {\ncode_r0x00ba76c4:\n                        if (((var_3ch != 0) && ((puVar9 & 0xfc00) == 0xd800)) &&\n                           (puVar9 = *var_4h,  var_18h = puVar9,  (puVar9 & 0xfc00) == 0xd800)) {\n                            var_4h = var_4h + 2;\n                            puVar9 = ((puVar9 & 0x3ff) << 10 | *var_4h & 0x3ff) + 0x10000;\n                            var_18h = puVar9;\n                        }\n                        puVar24 = var_4h;\n                        if ((arg_2ch != NULL) && (var_80h < puVar27)) {\n                            *arg_2ch = *arg_2ch + (puVar27 - var_80h >> 1);\n                            var_68h = var_ch;\n                            var_1ch = var_80h;\n                            var_14h = var_80h;\n                            puVar27 = var_80h;\n                        }\n                        puVar21 = var_18h;\n                        if (var_30h != NULL) {\n                            if ((puVar9 == 0x5c) && (*(var_4h + 2) == 0x45)) {\n                                var_4h = var_4h + 2;\n                                var_30h = NULL;\n                                goto code_r0x00ba7795;\n                            }\n                            goto code_r0x00ba7715;\n                        }\n                        if (puVar9 == 0x5b) {\n                            iVar26 = *(var_4h + 2);\n                            if ((((iVar26 != 0x3a) && (iVar26 != 0x2e)) && (iVar26 != 0x3d)) ||\n                               (iVar13 = fcn.00c1e02e(),  puVar21 = var_18h,  iVar13 == 0)) goto code_r0x00ba7715;\n                            var_18h = NULL;\n                            iVar13 = *(arg_28h + 8);\n                            if (iVar26 != 0x3a) {\n                                iVar13 = 0x1f;\n                                goto code_r0x00be4681;\n                            }\n                            puVar27 = puVar24 + 1;\n                            if (*puVar27 == 0x5e) {\n                                var_28h = var_ch;\n                                puVar27 = puVar24 + 6;\n                                var_18h = var_ch;\n                            }\n                            puVar21 = var_18h;\n                            var_4h = puVar27;\n                            iVar11 = fcn.00c1dfe1();\n                            if (iVar11 < 0) {\n                                iVar13 = 0x1e;\n                                puVar24 = puVar27;\n                                goto code_r0x00be4681;\n                            }\n                            if (((var_ch & var_34h) != 0) && (iVar11 < 3)) {\n                                iVar11 = 0;\n                            }\n                            if ((var_34h & 0x20000000) == 0) {\ncode_r0x00be3e76:\n                                fcn.00bb1080(&var_178h, *(iVar11 * 0xc + 0xc487f0) + iVar13, 0x20);\n                                iVar10 = *(iVar11 * 0xc + 0xc487f4);\n                                puVar27 = *(iVar11 * 0xc + 0xc487f8);\n                                if (-1 < iVar10) {\n                                    uVar14 = 0;\n                                    iVar10 = iVar10 + iVar13;\n                                    if (puVar27 < 0) {\n                                        do {\n                                            *(&var_178h + uVar14) = *(&var_178h + uVar14) & ~*(iVar10 + uVar14);\n                                            uVar14 = uVar14 + 1;\n                                            puVar21 = var_18h;\n                                        } while (uVar14 < 0x20);\n                                    }\n                                    else {\n                                        do {\n                                            *(&var_178h + uVar14) = *(&var_178h + uVar14) | *(iVar10 + uVar14);\n                                            uVar14 = uVar14 + 1;\n                                            puVar21 = var_18h;\n                                        } while (uVar14 < 0x20);\n                                    }\n                                }\n                                var_20h = var_ch;\n                                if (puVar27 < 0) {\n                                    puVar27 = -puVar27;\n                                }\n                                if (puVar27 == var_ch) {\n                                    var_178h._1_1_ = var_178h._1_1_ & 0xc3;\n                                }\n                                else if (puVar27 == 0x2) {\n                                    var_16dh._0_1_ = var_16dh & 0x7f;\n                                }\n                                uVar14 = 0;\n                                if (puVar21 == NULL) {\n                                    do {\n                                        *(&var_d4h + uVar14) = *(&var_d4h + uVar14) | *(&var_178h + uVar14);\n                                        uVar14 = uVar14 + 1;\n                                    } while (uVar14 < 0x20);\n                                }\n                                else {\n                                    do {\n                                        *(&var_d4h + uVar14) = *(&var_d4h + uVar14) | ~*(&var_178h + uVar14);\n                                        uVar14 = uVar14 + 1;\n                                    } while (uVar14 < 0x20);\n                                }\n                                var_58h = 0x2;\n                                var_4h = var_70h + 2;\n                                puVar27 = var_1ch;\n                                goto code_r0x00ba7795;\n                            }\n                            iVar10 = *(((-(puVar21 != NULL) & 0xe) + iVar11) * 4 + 0xc488a0);\n                            if (iVar10 != 0) {\n                                var_4h = iVar10 + -2;\n                                var_60h = var_70h + 2;\n                                puVar27 = var_1ch;\n                                goto code_r0x00ba7795;\n                            }\n                            if (iVar11 == 8) {\n                                iVar26 = 0xb;\n                            }\n                            else if (iVar11 == 9) {\n                                iVar26 = 0xc;\n                            }\n                            else {\n                                if (iVar11 != 10) goto code_r0x00be3e76;\n                                iVar26 = 0xd;\n                            }\n                            *var_1ch = (puVar21 != NULL) + 3;\n                            *(var_1ch + 2) = iVar26;\n                            *(var_1ch + 1) = 0;\n                            var_4h = var_70h + 2;\n                            var_14h = var_1ch + 6;\n                            var_38h = var_ch;\ncode_r0x00ba778f:\n                            var_1ch = var_14h;\n                            puVar27 = var_14h;\n                        }\n                        else {\n                            if (puVar9 != 0x5c) {\ncode_r0x00ba7715:\n                                var_18h = puVar21;\n                                iVar26 = *(puVar24 + 2);\n                                while ((iVar26 == 0x5c && (puVar9 = var_18h,  *(puVar24 + 1) == 0x45))) {\n                                    var_30h = NULL;\n                                    iVar26 = *(puVar24 + 6);\n                                    puVar24 = puVar24 + 1;\n                                    var_4h = puVar24;\n                                }\n                                if ((puVar9 == 0xd) || (puVar9 == 0xa)) {\n                                    *(arg_28h + 100) = *(arg_28h + 100) | 0x800;\n                                }\n                                puVar27 = var_4h;\n                                if ((var_30h == NULL) && (*(puVar24 + 2) == 0x2d)) {\n                                    var_4h = puVar24 + 1;\n                                    if (*var_4h == 0x5c) {\n                                        do {\n                                            if (*(var_4h + 2) != 0x45) break;\n                                            var_4h = var_4h + 1;\n                                        } while (*var_4h == 0x5c);\n                                        iVar26 = *var_4h;\n                                        puVar27 = var_4h;\n                                        while( true ) {\n                                            puVar9 = var_18h;\n                                            var_4h = puVar27;\n                                            if ((iVar26 != 0x5c) || (*(puVar27 + 2) != 0x51)) goto code_r0x00ba7ee4;\n                                            var_4h = puVar27 + 1;\n                                            if ((*var_4h != 0x5c) || (*(puVar27 + 6) != 0x45)) break;\n                                            puVar27 = puVar27 + 2;\n                                            iVar26 = *puVar27;\n                                        }\n                                        var_30h = var_ch;\n                                    }\ncode_r0x00ba7ee4:\n                                    uVar7 = *var_4h;\n                                    puVar21 = uVar7;\n                                    puVar27 = puVar24;\n                                    if ((uVar7 == 0) || ((var_30h == NULL && (uVar7 == 0x5d)))) goto code_r0x00ba774e;\n                                    var_18h = puVar21;\n                                    if ((var_3ch != 0) && ((puVar21 & 0xfc00) == 0xd800)) {\n                                        var_4h = var_4h + 2;\n                                        var_18h = ((puVar21 & 0x3ff) << 10 | *var_4h & 0x3ff) + 0x10000;\n                                    }\n                                    puVar24 = var_4h;\n                                    puVar21 = var_18h;\n                                    if (var_30h == NULL) {\n                                        if (var_18h == 0x5c) {\n                                            iVar13 = fcn.00ba83c4(arg_ch, *(arg_28h + 0x40), var_34h, var_ch);\n                                            if (*arg_ch != 0) goto code_r0x00be46b2;\n                                            puVar24 = var_4h;\n                                            puVar21 = var_18h;\n                                            if (iVar13 != 0) {\n                                                if (iVar13 != 5) {\n                                                    *arg_ch = 0x53;\n                                                    goto code_r0x00be46b2;\n                                                }\n                                                puVar21 = 0x8;\n                                            }\n                                        }\n                                        else if (((var_18h == 0x5b) &&\n                                                 (((iVar26 = *(var_4h + 2),  iVar26 == 0x3a || (iVar26 == 0x2e)) ||\n                                                  (iVar26 == 0x3d)))) && (iVar13 = fcn.00c1e02e(),  iVar13 != 0)) {\n                                            *arg_ch = 0x53;\n                                            var_4h = puVar24;\n                                            goto code_r0x00be46b2;\n                                        }\n                                    }\n                                    if (puVar21 < puVar9) {\n                                        *arg_ch = 8;\n                                        var_4h = puVar24;\n                                        goto code_r0x00be46b2;\n                                    }\n                                    puVar27 = var_4h;\n                                    if (puVar21 == puVar9) goto code_r0x00ba774e;\n                                    var_58h = 0x2;\n                                    if ((puVar21 == 0xd) || (puVar21 == 0xa)) {\n                                        *(arg_28h + 100) = *(arg_28h + 100) | 0x800;\n                                    }\n                                }\n                                else {\ncode_r0x00ba774e:\n                                    var_4h = puVar27;\n                                    if (var_58h < 2) {\n                                        var_58h = var_58h + 1;\n                                    }\n                                    puVar21 = puVar9;\n                                    if (((var_30h == NULL) && (var_58h == var_ch)) && (*(puVar24 + 2) == 0x5d)) {\n                                        var_4h = puVar24 + 2;\n                                        var_28h = var_5ch;\n                                        var_58h = var_54h;\n                                        if (var_24h == NULL) {\n                                            if ((var_3ch != 0) && (puVar15 = var_5ch,  0xffff < puVar9))\n                                            goto code_r0x00be3419;\n                                            puVar24 = var_5ch & 0xffff0000 | puVar9 & 0xffff;\n                                            goto code_r0x00ba78da;\n                                        }\n                                        if (var_2ch == 0xfffffffe) {\n                                            var_2ch = 0xffffffff;\n                                        }\n                                        var_6ch = var_2ch;\n                                        var_7ch = var_64h;\n                                        if (var_3ch == 0) {\ncode_r0x00be43c7:\n                                            bVar28 = (var_ch & var_34h) == 0;\n                                        }\n                                        else {\n                                            bVar28 = (var_ch & var_34h) == 0;\n                                            if (!bVar28) {\n                                                uVar1 = *(*((*(puVar9 / 0x80 + 0xc43b40) * 0x80 + puVar9 % 0x80) * 2 +\n                                                           0xc35840) * 8 + 0xc32f53);\n                                                if (uVar1 == 0) goto code_r0x00be43c7;\n                                                *var_8h = 0xf;\n                                                *(var_8h + 2) = 9;\n                                                *(var_8h + 1) = uVar1;\n                                                var_8h = var_8h + 6;\n                                                puVar27 = var_8h;\n                                                puVar21 = var_10h;\n                                                goto code_r0x00ba751e;\n                                            }\n                                        }\n                                        *var_8h = !bVar28 + 0x1f;\n                                        piVar18 = var_8h + 2;\n                                        if ((var_3ch != 0) && (0xffff < puVar9)) {\n                                            iVar13 = fcn.00c1ef2a();\n                                            var_8h = piVar18 + iVar13;\n                                            goto code_r0x00ba782c;\n                                        }\n                                        *piVar18 = puVar9;\n                                        goto code_r0x00ba7fe2;\n                                    }\n                                }\n                                iVar13 = fcn.00ba8305(var_34h, arg_28h, puVar9, puVar21);\n                                var_20h = var_20h + iVar13;\n                                goto code_r0x00ba778f;\n                            }\n                            iVar13 = fcn.00ba83c4(arg_ch, *(arg_28h + 0x40), var_34h, var_ch);\n                            puVar3 = var_20h;\n                            puVar15 = var_58h;\n                            if (*arg_ch != 0) goto code_r0x00be46b2;\n                            puVar9 = var_94h;\n                            puVar24 = var_4h;\n                            var_58h = puVar15;\n                            puVar21 = var_94h;\n                            if (iVar13 == 0) goto code_r0x00ba7715;\n                            if (iVar13 == 5) {\n                                puVar9 = 0x8;\n                                puVar21 = 0x8;\n                                goto code_r0x00ba7715;\n                            }\n                            if (iVar13 == 0xc) {\n                                *arg_ch = 0x47;\n                                goto code_r0x00be46b2;\n                            }\n                            if (iVar13 == 0x1a) {\n                                if ((*(var_4h + 2) == 0x5c) && (*(var_4h + 1) == 0x45)) {\n                                    var_4h = var_4h + 1;\n                                }\n                                else {\n                                    var_30h = var_ch;\n                                }\n                            }\n                            else if (iVar13 != 0x19) {\n                                iVar11 = *(arg_28h + 8);\n                                var_20h = var_20h + 1;\n                                var_58h = var_58h + 2;\n                                if (0x10 < iVar13) {\n                                    if (iVar13 == 0x12) {\n                                        pcVar29 = 0xc48f30;\ncode_r0x00be4189:\n                                        fcn.00c1dd9a(var_34h, arg_28h, pcVar29);\n                                        goto code_r0x00ba778f;\n                                    }\n                                    if (iVar13 == 0x13) {\n                                        pcVar29 = 0xc48f30;\n                                    }\n                                    else {\n                                        if (iVar13 == 0x14) {\n                                            pcVar29 = str._n_v_f_r;\n                                            goto code_r0x00be4189;\n                                        }\n                                        if (iVar13 != 0x15) {\n                                            if (iVar13 - 0x1dU < 6) {\n                                                var_60h = var_4h;\n                                                var_4h = *((iVar13 - 0x1dU) * 4 + 0xc48640) + -2;\n                                                var_20h = puVar3;\n                                                puVar27 = var_1ch;\n                                                goto code_r0x00ba7795;\n                                            }\ncode_r0x00be412f:\n                                            if ((var_34h & 0x40) == 0) {\n                                                puVar9 = *var_4h;\n                                                var_20h = puVar3;\n                                                var_58h = puVar15;\n                                                puVar21 = puVar9;\n                                                goto code_r0x00ba7715;\n                                            }\n                                            *arg_ch = 7;\n                                            goto code_r0x00be46b2;\n                                        }\n                                        pcVar29 = str._n_v_f_r;\n                                    }\n                                    fcn.00c1dc98(var_34h, arg_28h, pcVar29, 0xffffffff);\n                                    goto code_r0x00ba778f;\n                                }\n                                if (0xe < iVar13) {\n                                    var_4ch = NULL;\n                                    var_38h = NULL;\n                                    iVar11 = fcn.00c1e541(&var_4ch, &var_38h, arg_ch);\n                                    if (iVar11 != 0) {\n                                        *var_1ch = ((iVar13 == 0x10) == var_138h) + 3;\n                                        *(var_1ch + 2) = var_4ch;\n                                        *(var_1ch + 1) = var_38h;\n                                        var_20h = var_20h + -1;\n                                        var_14h = var_1ch + 6;\n                                        var_38h = var_ch;\n                                        goto code_r0x00ba778f;\n                                    }\n                                    goto code_r0x00be46b2;\n                                }\n                                if (iVar13 == 6) {\n                                    var_28h = var_ch;\n                                    uVar14 = 0;\n                                    do {\n                                        *(&var_d4h + uVar14) = *(&var_d4h + uVar14) | ~*(iVar11 + 0x40 + uVar14);\n                                        uVar14 = uVar14 + 1;\n                                        puVar27 = var_1ch;\n                                    } while (uVar14 < 0x20);\n                                }\n                                else if (iVar13 == 7) {\n                                    uVar14 = 0;\n                                    do {\n                                        *(&var_d4h + uVar14) = *(&var_d4h + uVar14) | *(iVar11 + 0x40 + uVar14);\n                                        uVar14 = uVar14 + 1;\n                                        puVar27 = var_1ch;\n                                    } while (uVar14 < 0x20);\n                                }\n                                else if (iVar13 == 8) {\n                                    var_28h = var_ch;\n                                    uVar14 = 0;\n                                    do {\n                                        puVar17 = &var_d4h + uVar14;\n                                        *puVar17 = *puVar17 | ~puVar17[iVar11 - &var_d4h];\n                                        uVar14 = uVar14 + 1;\n                                        puVar27 = var_1ch;\n                                    } while (uVar14 < 0x20);\n                                }\n                                else if (iVar13 == 9) {\n                                    uVar14 = 0;\n                                    do {\n                                        puVar17 = &var_d4h + uVar14;\n                                        *puVar17 = *puVar17 | puVar17[iVar11 - &var_d4h];\n                                        uVar14 = uVar14 + 1;\n                                        puVar27 = var_1ch;\n                                    } while (uVar14 < 0x20);\n                                }\n                                else if (iVar13 == 10) {\n                                    var_28h = var_ch;\n                                    uVar14 = 0;\n                                    do {\n                                        *(&var_d4h + uVar14) = *(&var_d4h + uVar14) | ~*(iVar11 + 0xa0 + uVar14);\n                                        uVar14 = uVar14 + 1;\n                                        puVar27 = var_1ch;\n                                    } while (uVar14 < 0x20);\n                                }\n                                else {\n                                    if (iVar13 != 0xb) goto code_r0x00be412f;\n                                    uVar14 = 0;\n                                    do {\n                                        *(&var_d4h + uVar14) = *(&var_d4h + uVar14) | *(iVar11 + 0xa0 + uVar14);\n                                        uVar14 = uVar14 + 1;\n                                        puVar27 = var_1ch;\n                                    } while (uVar14 < 0x20);\n                                }\n                            }\n                        }\ncode_r0x00ba7795:\n                        puVar4 = var_8h;\n                        puVar3 = var_24h;\n                        puVar15 = var_28h;\n                        puVar24 = var_38h;\n                        puVar21 = var_60h;\n                        var_4h = var_4h + 2;\n                        puVar9 = *var_4h;\n                        var_18h = puVar9;\n                        if (puVar9 == NULL) {\n                            if (var_60h == NULL) goto code_r0x00be4329;\n                            var_60h = NULL;\n                            var_4h = puVar21 + 2;\n                            puVar9 = *var_4h;\n                            var_18h = puVar9;\n                            if (puVar9 == NULL) goto code_r0x00be4329;\n                        }\n                        var_18h = puVar9;\n                        if ((puVar9 != 0x5d) || (var_30h != NULL)) goto code_r0x00ba76c4;\n                        puVar21 = var_ch;\n                        if (puVar27 <= var_80h) {\n                            puVar21 = var_68h;\n                        }\n                        if (var_2ch == 0xfffffffe) {\n                            var_2ch = 0xffffffff;\n                        }\n                        var_6ch = var_2ch;\n                        var_28h = var_5ch;\n                        var_7ch = var_64h;\n                        var_58h = var_54h;\n                        if ((puVar21 != NULL) && ((puVar15 == NULL || ((var_34h & 0x20000000) != 0)))) {\n                            *puVar27 = 0;\n                            puVar9 = puVar27 + 2;\n                            *var_8h = 0x70;\n                            puVar21 = var_8h + 1;\n                            *puVar21 = var_24h != NULL;\n                            if (var_38h != NULL) {\n                                *puVar21 = var_24h != NULL | 4;\n                            }\n                            if (0 < var_20h) {\n                                *puVar21 = *puVar21 | 2;\n                                piVar19 = var_8h + 6;\n                                piVar18 = var_8h + 0x26;\n                                var_8h = piVar19;\n                                fcn.00bb8020(piVar18, piVar19, puVar9 - piVar19 & 0xfffffffe);\n                                if ((puVar3 != NULL) && (puVar24 == NULL)) {\n                                    uVar14 = 0;\n                                    do {\n                                        *(&var_d4h + uVar14) = ~*(&var_d4h + uVar14);\n                                        uVar14 = uVar14 + 1;\n                                    } while (uVar14 < 0x20);\n                                }\n                                fcn.00bb1080(var_8h, &var_d4h, 0x20);\n                                puVar9 = puVar27 + 0x22;\n                            }\n                            var_8h = puVar9;\n                            *(var_10h + 2) = puVar9 - var_10h >> 1;\n                            puVar27 = var_8h;\n                            puVar21 = var_10h;\n                            goto code_r0x00ba751e;\n                        }\n                        if (arg_2ch != NULL) {\n                            *arg_2ch = *arg_2ch + (puVar27 - var_80h >> 1);\n                        }\n                        *var_8h = (var_24h != puVar15) + 0x6e;\n                        piVar18 = var_8h + 2;\n                        if (arg_2ch == NULL) {\n                            if (var_24h != NULL) {\n                                uVar14 = 0;\n                                do {\n                                    *(&var_d4h + uVar14) = ~*(&var_d4h + uVar14);\n                                    uVar14 = uVar14 + 1;\n                                } while (uVar14 < 0x20);\n                            }\n                            fcn.00bb1080(piVar18, &var_d4h, 0x20);\n                        }\n                        var_8h = puVar4 + 0x22;\ncode_r0x00ba782c:\n                        puVar27 = var_8h;\n                        puVar21 = var_10h;\n                        goto code_r0x00ba751e;\n                    }\ncode_r0x00be4329:\n                    *arg_ch = 6;\n                }\n                goto code_r0x00be46b2;\n            }\n            var_60h = puVar21 + 0xe;\n            pcVar25 = L\"\\\\b(?<=\\\\w)\";\n        }\ncode_r0x00be1e72:\n        puVar27 = var_8h;\n        puVar21 = var_10h;\n        var_4h = pcVar25 + -1;\n    }\n    else {\n        if (puVar24 != 0x5c) {\n            if (puVar24 == 0x5d) {\n                if ((*(arg_28h + 0x60) & 0x2000000) != 0) {\n                    *arg_ch = 0x40;\n                    var_4h = puVar21;\n                    goto code_r0x00be46b2;\n                }\n            }\n            else {\n                if (puVar24 == 0x5e) {\n                    var_10h = NULL;\n                    if ((var_34h & 2) == 0) {\n                        iVar26 = 0x1b;\n                    }\n                    else {\n                        if (var_2ch == 0xfffffffe) {\n                            var_2ch = 0xffffffff;\n                            var_6ch = 0xffffffff;\n                        }\n                        iVar26 = 0x1c;\n                    }\n                    goto code_r0x00ba8024;\n                }\n                if (puVar24 != 0x7b) {\n                    if (puVar24 == 0x7c) goto code_r0x00ba755b;\n                    goto code_r0x00ba73fb;\n                }\n                if (puVar9 != NULL) {\n                    puVar21 = fcn.00c1e6d1(&var_40h, arg_ch);\n                    var_4h = puVar21;\n                    if (*arg_ch == 0) goto code_r0x00ba7b0d;\n                    goto code_r0x00be46b2;\n                }\n            }\n            goto code_r0x00ba73fb;\n        }\n        var_70h = puVar21;\n        puVar15 = fcn.00ba83c4(arg_ch, *(arg_28h + 0x40), var_34h, 0);\n        if (*arg_ch != 0) goto code_r0x00be46b2;\n        if (puVar15 == NULL) {\n            if ((var_94h < 0x10000) || (var_3ch == 0)) {\n                puVar24 = var_94h & 0xffff;\ncode_r0x00ba78da:\n                var_f8h._0_2_ = puVar24;\n                var_18h = puVar24;\n                puVar9 = var_ch;\n            }\n            else {\ncode_r0x00be3419:\n                puVar9 = fcn.00c1ef2a();\n                puVar24 = puVar15 & 0xffff0000 | var_f8h;\n                var_18h = puVar24;\n            }\n            goto code_r0x00ba7424;\n        }\n        puVar21 = var_10h;\n        puVar27 = var_8h;\n        if (puVar15 == 0x1a) {\n            if ((*(var_4h + 2) == 0x5c) && (*(var_4h + 1) == 0x45)) {\n                var_4h = var_4h + 1;\n            }\n            else {\n                var_30h = var_ch;\n            }\n        }\n        else if (puVar15 != 0x19) {\n            if ((var_2ch == 0xfffffffe) && (puVar15 + -6 < 0x11)) {\n                var_2ch = 0xffffffff;\n            }\n            var_7ch = var_64h;\n            var_28h = var_5ch;\n            var_58h = var_54h;\n            var_6ch = var_2ch;\n            if (puVar15 == 0x1b) {\n                var_88h = *(arg_28h + 0x20) - *(arg_28h + 0x10) >> 1;\n                puVar24 = var_4h + 2;\n                var_74h = var_4h + 1;\n                puVar9 = ((*puVar24 != 0x3c) - 1 & 0x17) + 0x27;\n                var_20h = NULL;\n                var_38h = NULL;\n                uVar7 = *var_74h;\n                var_4ch = puVar9;\n                if (((uVar7 != 0x2b) && (uVar7 != 0x2d)) && ((uVar7 < 0x30 || (0x39 < uVar7)))) {\n                    var_18h = var_ch;\ncode_r0x00be37bd:\n                    var_38h = puVar24 + 2;\n                    var_24h = var_38h;\n                    uVar7 = *var_38h;\n                    var_4h = var_38h;\n                    if ((uVar7 < 0x30) || (0x39 < uVar7)) {\n                        if (uVar7 < 0x100) {\n                            do {\n                                if ((*(uVar7 + *(arg_28h + 0xc)) & 0x10) == 0) break;\n                                var_4h = var_4h + 2;\n                                uVar7 = *var_4h;\n                            } while (uVar7 < 0x100);\n                            var_24h = var_4h;\n                        }\n                        iVar13 = var_4h - var_38h >> 1;\n                        var_24h = var_4h;\n                        if (arg_2ch == NULL) {\n                            iVar11 = *(arg_28h + 0x30);\n                            var_48h = *(arg_28h + 0x2c);\n                            var_14h = NULL;\n                            if (0 < iVar11) {\n                                do {\n                                    iVar10 = fcn.00c1e9f8(iVar13);\n                                    if ((iVar10 == 0) && (*(var_48h + iVar13 * 2 + 2) == 0)) break;\n                                    var_14h = var_14h + 1;\n                                    var_48h = var_48h + *(arg_28h + 0x34) * 2;\n                                } while (var_14h < iVar11);\n                            }\n                            puVar24 = var_24h;\n                            if (var_14h < iVar11) {\n                                puVar15 = *var_48h;\n                                var_38h = puVar15;\ncode_r0x00be3907:\n                                var_38h = puVar15;\n                                if (var_18h == NULL) {\n                                    if ((arg_2ch == NULL) && (*(arg_28h + 0x78) != 0)) {\n                                        var_74h = var_14h;\n                                        puVar24 = var_14h + 1;\n                                        var_14h = puVar24;\n                                        var_24h = var_48h + *(arg_28h + 0x34) * 2;\n                                        puVar27 = var_ch;\n                                        if (puVar24 < *(arg_28h + 0x30)) {\n                                            do {\n                                                iVar13 = fcn.00c1e9c8();\n                                                puVar21 = var_8h;\n                                                if (iVar13 != 0) break;\n                                                puVar27 = puVar27 + 1;\n                                                puVar24 = puVar24 + 1;\n                                                var_24h = var_24h + *(arg_28h + 0x34) * 2;\n                                            } while (puVar24 < *(arg_28h + 0x30));\n                                            puVar15 = var_38h;\n                                            if (var_ch < puVar27) {\n                                                if (var_2ch == 0xfffffffe) {\n                                                    var_2ch = 0xffffffff;\n                                                }\n                                                var_10h = var_8h;\n                                                *var_8h = ((var_34h & var_ch) != 0) + 0x73;\n                                                *(var_8h + 2) = var_74h;\n                                                *(var_8h + 1) = puVar27;\n                                                var_8h = var_8h + 6;\n                                                while (puVar27 = var_8h,  var_48h < var_24h) {\n                                                    uVar14 = *var_48h;\n                                                    puVar27 = var_ch;\n                                                    if (uVar14 < 0x20) {\n                                                        puVar27 = var_ch << (*var_48h & 0x1f);\n                                                    }\n                                                    *(arg_28h + 0x50) = *(arg_28h + 0x50) | puVar27;\n                                                    if (*(arg_28h + 0x4c) < uVar14) {\n                                                        *(arg_28h + 0x4c) = uVar14;\n                                                    }\n                                                    for (puVar27 = *(arg_28h + 0x24); puVar27 != NULL;\n                                                        puVar27 = *puVar27) {\n                                                        if (*(puVar27 + 1) == uVar14) {\n                                                            *(puVar27 + 6) = var_ch;\n                                                            break;\n                                                        }\n                                                    }\n                                                    var_48h = var_48h + *(arg_28h + 0x34) * 2;\n                                                    puVar21 = var_10h;\n                                                }\n                                                goto code_r0x00ba751e;\n                                            }\n                                        }\n                                    }\n                                    goto code_r0x00be3b21;\n                                }\n                                goto code_r0x00be39f5;\n                            }\n                            goto code_r0x00be35cd;\n                        }\n                        if (iVar13 == 0) {\n                            iVar13 = 0x3e;\n                        }\n                        else if (*var_4h == puVar9) {\n                            if (iVar13 < 0x21) {\n                                var_14h = NULL;\n                                iVar11 = *(arg_28h + 0x30);\n                                iVar10 = *(arg_28h + 0x28);\n                                if (0 < iVar11) {\n                                    do {\n                                        if ((iVar13 == *(iVar10 + 4)) && (iVar12 = fcn.00c1e9f8(iVar13),  iVar12 == 0))\n                                        break;\n                                        var_14h = var_14h + 1;\n                                        iVar10 = iVar10 + 0xc;\n                                    } while (var_14h < iVar11);\n                                }\n                                if (var_14h < iVar11) {\n                                    puVar15 = *(iVar10 + 8);\n                                }\n                                else {\n                                    puVar15 = NULL;\n                                }\n                                var_38h = puVar15;\n                                if (var_18h == NULL) {\n                                    *(arg_28h + 0x54) = *(arg_28h + 0x54) + 1;\n                                }\n                                *arg_2ch = *arg_2ch + 1;\n                                goto code_r0x00be3907;\n                            }\n                            iVar13 = 0x30;\n                        }\n                        else {\n                            iVar13 = 0x2a;\n                        }\n                        *arg_ch = iVar13;\n                    }\n                    else {\n                        *arg_ch = 0x54;\n                    }\n                    goto code_r0x00be46b2;\n                }\n                puVar23 = var_4h + 6;\n                uVar7 = *puVar23;\n                while ((0x2f < uVar7 && (uVar7 <= var_90h))) {\n                    puVar23 = puVar23 + 1;\n                    uVar7 = *puVar23;\n                }\n                var_4h = var_74h;\n                if (*puVar23 == puVar9) {\ncode_r0x00be350b:\n                    var_20h = NULL;\n                    var_38h = NULL;\n                    puVar27 = *var_4h;\n                    var_74h = puVar27;\n                    if (puVar27 == 0x2b) {\n                        var_4h = var_4h + 2;\n                        if ((*var_4h < 0x30) || (0x39 < *var_4h)) {\n                            iVar13 = 0x3f;\n                            puVar24 = var_4h;\n                            goto code_r0x00be4681;\n                        }\n                    }\n                    else if (puVar27 == 0x2d) {\n                        if ((*(var_4h + 2) < var_e4h) || (var_90h < *(var_4h + 2))) goto code_r0x00ba7cc4;\n                        var_4h = var_4h + 2;\n                    }\n                    puVar15 = NULL;\n                    uVar7 = *var_4h;\n                    while ((0x2f < uVar7 && (uVar7 < 0x3a))) {\n                        var_4h = var_4h + 2;\n                        puVar15 = uVar7 + puVar15 * 10 + -0x30;\n                        uVar7 = *var_4h;\n                    }\n                    puVar24 = var_4h;\n                    if (*var_4h != var_4ch) {\n                        iVar13 = 0x1d;\n                        goto code_r0x00be4681;\n                    }\n                    if (puVar27 == 0x2d) {\n                        if (puVar15 == NULL) {\ncode_r0x00be4646:\n                            iVar13 = 0x3a;\n                            goto code_r0x00be4681;\n                        }\n                        puVar15 = (*(arg_28h + 0x40) - puVar15) + 1;\n                        if (puVar15 < 1) goto code_r0x00be35cd;\n                    }\n                    else if (puVar27 == 0x2b) {\n                        if (puVar15 == NULL) goto code_r0x00be4646;\n                        puVar15 = puVar15 + *(arg_28h + 0x40);\n                    }\ncode_r0x00be39f5:\n                    puVar21 = var_8h;\n                    iVar13 = *(arg_28h + 0x14);\n                    var_10h = var_8h;\n                    if (arg_2ch == NULL) {\n                        *var_8h = 0;\n                        if (puVar15 != NULL) {\n                            iVar13 = fcn.00c1db51(puVar15);\n                        }\n                        if (iVar13 == 0) {\n                            if (*(arg_28h + 0x44) < puVar15) {\n                                *arg_ch = 0xf;\n                                goto code_r0x00be46b2;\n                            }\n                            iVar13 = *(arg_28h + 0x14) + puVar15 * 2;\n                            if ((*(arg_28h + 0x10) + *(arg_28h + 0x3c) * 2) - 200U <= *(arg_28h + 0x20)) {\n                                iVar11 = fcn.00c1e0e7();\n                                *arg_ch = iVar11;\n                                if (iVar11 != 0) goto code_r0x00be46b2;\n                            }\n                            **(arg_28h + 0x20) = var_8h + (2 - *(arg_28h + 0x14)) >> 1;\n                            *(arg_28h + 0x20) = *(arg_28h + 0x20) + 2;\n                        }\n                        else if (((*(iVar13 + 2) == 0) && (arg_24h < 1)) &&\n                                (iVar11 = fcn.00c1e0a9(arg_20h, var_3ch, arg_28h),  iVar11 != 0)) {\n                            *arg_ch = 0x28;\n                            goto code_r0x00be46b2;\n                        }\n                    }\n                    *var_8h = 0x75;\n                    *(var_8h + 2) = iVar13 - *(arg_28h + 0x14) >> 1;\n                    var_8h = var_8h + 1;\n                    var_98h = NULL;\n                    puVar27 = var_8h;\n                    if (var_2ch == 0xfffffffe) {\n                        var_2ch = 0xffffffff;\n                    }\n                }\n                else {\n                    *arg_ch = 0x39;\n                    var_4h = puVar24;\n                }\n            }\n            else if (puVar15 == 0x1c) {\n                iVar26 = *(var_4h + 2);\n                if (((iVar26 == 0x3c) || (iVar26 == var_e0h)) || (iVar26 == var_128h)) {\n                    puVar24 = var_4h + 2;\n                    var_18h = NULL;\n                    if (*puVar24 == 0x3c) {\n                        puVar9 = 0x3e;\n                    }\n                    else {\n                        puVar9 = ((*puVar24 != 0x27) - 1 & 0xffffffaa) + 0x7d;\n                    }\n                    goto code_r0x00be37bd;\n                }\n                *arg_ch = 0x45;\n            }\n            else {\n                if (-1 < puVar15) {\n                    if ((puVar15 == 0xf) || (puVar15 == 0x10)) {\n                        var_4ch = NULL;\n                        var_38h = NULL;\n                        iVar13 = fcn.00c1e541(&var_4ch, &var_38h, arg_ch);\n                        if (iVar13 == 0) goto code_r0x00be46b2;\n                        var_10h = var_8h;\n                        *var_8h = ((puVar15 == 0x10) != var_130h) + 0xf;\n                        *(var_8h + 2) = var_4ch;\n                        puVar27 = var_8h + 1;\n                        *puVar27 = var_38h;\n                    }\n                    else {\n                        if ((((puVar15 == 0x5) || (puVar15 == 0x4)) || (puVar15 == var_ch)) && (*(arg_28h + 0x48) == 0))\n                        {\n                            *(arg_28h + 0x48) = var_ch;\n                        }\n                        if ((0x1c < puVar15) && (puVar15 < 0x23)) {\n                            pcVar25 = *(puVar15 * 4 + 0xc485cc);\n                            var_60h = var_4h + 2;\n                            goto code_r0x00be1e72;\n                        }\n                        var_10h = ~-(0x10 < puVar15 + -6) & var_8h;\n                        if ((var_3ch == 0) && (puVar15 == 0xe)) {\n                            puVar15 = 0xd;\n                        }\n                        *var_8h = puVar15;\n                        var_8h = var_10h;\n                    }\n                    puVar27 = puVar27 + 2;\n                    var_10h = var_8h;\ncode_r0x00ba80f5:\n                    var_8h = puVar27;\n                    puVar27 = var_8h;\n                    puVar21 = var_10h;\n                    goto code_r0x00ba751e;\n                }\n                puVar15 = -puVar15;\ncode_r0x00be3b21:\n                puVar21 = var_8h;\n                if (var_2ch == 0xfffffffe) {\n                    var_2ch = 0xffffffff;\n                }\n                var_10h = var_8h;\n                *var_8h = ((var_34h & var_ch) != 0) + 0x71;\n                *(var_8h + 2) = puVar15;\n                var_8h = var_8h + 1;\n                puVar27 = var_ch;\n                if (puVar15 < 0x20) {\n                    puVar27 = var_ch << (puVar15 & 0x1f);\n                }\n                *(arg_28h + 0x50) = *(arg_28h + 0x50) | puVar27;\n                if (*(arg_28h + 0x4c) < puVar15) {\n                    *(arg_28h + 0x4c) = puVar15;\n                }\n                for (puVar24 = *(arg_28h + 0x24); puVar27 = var_8h,  puVar24 != NULL; puVar24 = *puVar24) {\n                    if (*(puVar24 + 1) == puVar15) {\n                        *(puVar24 + 6) = var_ch;\n                        break;\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00ba751e:\n    var_4h = var_4h + 2;\n    goto code_r0x00ba72b4;\ncode_r0x00be1f80:\n    ppiVar22 = ppiVar22 + 3;\n    var_18h = var_18h + 1;\n    var_24h = var_24h + 1 + puVar21;\n    if (0xc4779b < ppiVar22) goto code_r0x00be20a4;\n    goto code_r0x00be1f63;\n}\n",
        "token_count": 32308
    },
    "00ba8a0e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00ba8a0e(int32_t arg_8h, uint32_t *arg_ch, uint16_t *arg_10h, int32_t *arg_14h)\n\n{\n    uint16_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint16_t uVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    uint32_t uVar8;\n    uint16_t *in_ECX;\n    uint16_t *puVar9;\n    int32_t iVar10;\n    uint in_EDX;\n    uint16_t *puVar11;\n    uint32_t uVar12;\n    uint32_t *puVar13;\n    bool bVar14;\n    bool bVar15;\n    bool bVar16;\n    uint32_t var_40h;\n    int32_t var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint16_t *var_8h;\n    uint32_t *var_4h;\n    \n    var_10h = 0;\n    if (*arg_14h == 0) {\n        return false;\n    }\n    var_14h = 0x83;\n    *arg_14h = *arg_14h + -1;\n    var_1ch = 0x81;\n    var_20h = 0x82;\n    var_18h = 0x85;\n    var_ch = in_EDX;\ncode_r0x00ba8a52:\n    do {\n        while( true ) {\n            uVar6 = *in_ECX;\n            if (uVar6 != 0x76) break;\n            in_ECX = in_ECX + 4;\n        }\n        if (*in_ECX == 0x77) {\n            do {\n                in_ECX = in_ECX + in_ECX[1];\n            } while (*in_ECX == 0x77);\n            uVar6 = *in_ECX;\n        }\n        if (uVar6 < 0x84) {\n            if (0x80 < uVar6) {\ncode_r0x00ba8c75:\n                puVar11 = in_ECX + in_ECX[1];\n                in_ECX = in_ECX + *(uVar6 + 0xc35750);\n                uVar5 = *puVar11;\n                while (uVar5 == 0x77) {\n                    iVar10 = fcn.00ba8a0e(arg_8h, arg_ch, arg_10h, arg_14h);\n                    if (iVar10 == 0) {\n                        return false;\n                    }\n                    in_ECX = puVar11 + 2;\n                    puVar11 = puVar11 + puVar11[1];\n                    uVar5 = *puVar11;\n                }\n                var_10h = 1;\n                goto code_r0x00ba8a52;\n            }\n            if (uVar6 == 0) {\ncode_r0x00be588b:\n                return arg_ch[1] != 0;\n            }\n            if (uVar6 == 0x78) {\n                if (arg_ch[1] == 0) {\n                    return false;\n                }\n                if ((0x7c < in_ECX[-in_ECX[1]]) && (in_ECX[-in_ECX[1]] < 0x83)) {\n                    return var_10h == 0;\n                }\n                in_ECX = in_ECX + *0xc357c8;\n                goto code_r0x00ba8a52;\n            }\n            if (uVar6 == 0x7b) goto code_r0x00be588b;\n        }\n        else {\n            if (uVar6 == 0x85) goto code_r0x00ba8c75;\n            if (uVar6 - 0x92 < 2) {\n                puVar11 = in_ECX + 1;\n                uVar5 = *puVar11;\n                if ((((uVar5 != var_18h) && (uVar5 != var_14h)) && (uVar5 != var_1ch)) && (uVar5 != var_20h)) {\n                    return false;\n                }\n                do {\n                    puVar11 = puVar11 + puVar11[1];\n                } while (*puVar11 == 0x77);\n                iVar10 = fcn.00ba8a0e(arg_8h, arg_ch, arg_10h, arg_14h);\n                if (iVar10 == 0) {\n                    return false;\n                }\n                in_ECX = in_ECX + *(uVar6 + 0xc35750);\n                goto code_r0x00ba8a52;\n            }\n        }\n        in_ECX = fcn.00ba8d01(*(arg_8h + 4), &var_40h);\n        var_8h = in_ECX;\n        if (in_ECX == NULL) {\n            return false;\n        }\n        uVar6 = *arg_ch;\n        if (uVar6 == 0x1d) {\n            var_4h = arg_ch + 2;\n            puVar13 = &var_40h;\ncode_r0x00ba8bcd:\n            uVar6 = *puVar13;\n            uVar8 = *var_4h;\n            do {\n                puVar7 = puVar13 + 2;\n                if (0x6e < uVar6) {\n                    if (uVar6 != 0x6f) {\n                        if (uVar6 != 0x70) {\n                            return false;\n                        }\n                        iVar10 = fcn.00c1eae6(var_ch);\n                        bVar14 = iVar10 == 0;\n                        goto code_r0x00be5387;\n                    }\n                    if (0xff < uVar8) {\n                        return false;\n                    }\ncode_r0x00ba8be6:\n                    if (uVar8 < 0x100) {\n                        puVar11 = var_8h;\n                        if (puVar13 != &var_40h) {\n                            puVar11 = arg_10h;\n                        }\n                        if ((*((uVar8 >> 3) + puVar13[2] * -2 + puVar11) & 1 << (uVar8 & 7)) != 0) {\n                            return false;\n                        }\n                    }\n                    goto code_r0x00ba8c1e;\n                }\n    // switch table (26 cases) at 0xbe5898\n                switch(uVar6) {\n                case 6:\n                    if (0xff < uVar8) {\n                        return false;\n                    }\n                    bVar14 = (*(uVar8 + *(arg_8h + 0xc)) & 4) == 0;\n                    goto code_r0x00be534d;\n                case 7:\n                    if (uVar8 < 0x100) {\n                        bVar14 = (*(uVar8 + *(arg_8h + 0xc)) & 4) == 0;\ncode_r0x00be5387:\n                        if (!bVar14) {\n                            return false;\n                        }\n                    }\n                    break;\n                case 8:\n                    if (0xff < uVar8) {\n                        return false;\n                    }\n                    bVar14 = (*(uVar8 + *(arg_8h + 0xc)) & 1) == 0;\n                    goto code_r0x00be534d;\n                case 9:\n                    if (uVar8 < 0x100) {\n                        bVar14 = (*(uVar8 + *(arg_8h + 0xc)) & 1) == 0;\n                        goto code_r0x00be5387;\n                    }\n                    break;\n                case 10:\n                    if (0xff < uVar8) {\n                        return false;\n                    }\n                    bVar14 = (*(uVar8 + *(arg_8h + 0xc)) & 0x10) == 0;\n                    goto code_r0x00be534d;\n                case 0xb:\n                    if (uVar8 < 0xff) {\n                        bVar14 = (*(uVar8 + *(arg_8h + 0xc)) & 0x10) == 0;\n                        goto code_r0x00be5387;\n                    }\n                    break;\n                case 0xc:\n                case 0xd:\n                case 0xe:\n                case 0x16:\n                case 0x1a:\n                case 0x1b:\n                case 0x1c:\n                case 0x1e:\n                    goto code_r0x00ba8cc8;\n                case 0xf:\n                case 0x10:\n                    iVar10 = fcn.00c1de29(puVar13[3], uVar6 == 0xf);\n                    bVar14 = iVar10 == 0;\n                    goto code_r0x00be534d;\n                case 0x11:\n                case 0x15:\n                case 0x17:\n                case 0x19:\n                    if (9 < uVar8) {\n                        if (uVar8 < 0xe) {\n                            return false;\n                        }\n                        if (uVar8 == 0x85) {\n                            return false;\n                        }\n                        if ((0x2027 < uVar8) && (uVar8 < 0x202a)) {\n                            return false;\n                        }\n                    }\n                    break;\n                case 0x12:\n                    if (uVar8 < 0x180f) {\n                        if (((uVar8 != 0x180e) && (uVar8 != 9)) && ((uVar8 != 0x20 && (uVar8 != 0xa0)))) {\n                            bVar14 = uVar8 == 0x1680;\n                            goto code_r0x00be5387;\n                        }\n                    }\n                    else {\n                        if (uVar8 < 0x2000) {\n                            return false;\n                        }\n                        if (((0x200a < uVar8) && (uVar8 != 0x202f)) && (uVar8 != 0x205f)) {\n                            bVar14 = uVar8 == 0x3000;\n                            goto code_r0x00be5387;\n                        }\n                    }\n                    break;\n                case 0x13:\n                    if (uVar8 < 0x180f) {\n                        if (uVar8 == 0x180e) {\n                            return false;\n                        }\n                        if (uVar8 == 9) {\n                            return false;\n                        }\n                        if (uVar8 == 0x20) {\n                            return false;\n                        }\n                        if (uVar8 == 0xa0) {\n                            return false;\n                        }\n                        bVar14 = uVar8 == 0x1680;\n                    }\n                    else {\n                        if (uVar8 < 0x2000) break;\n                        if (uVar8 < 0x200b) {\n                            return false;\n                        }\n                        if (uVar8 == 0x202f) {\n                            return false;\n                        }\n                        if (uVar8 == 0x205f) {\n                            return false;\n                        }\n                        bVar14 = uVar8 == 0x3000;\n                    }\n                    goto code_r0x00be534d;\n                case 0x14:\n                    if (uVar8 < 10) {\n                        return false;\n                    }\n                    if (((0xd < uVar8) && (uVar8 != 0x85)) && (1 < uVar8 - 0x2028)) {\n                        return false;\n                    }\n                    break;\n                case 0x18:\n                    break;\n                case 0x1d:\n                    uVar12 = *puVar7;\n                    do {\n                        if (uVar8 == uVar12) {\n                            return false;\n                        }\n                        puVar7 = puVar7 + 1;\n                        uVar12 = *puVar7;\n                    } while (uVar12 != 0xffffffff);\n                    break;\n                case 0x1f:\n                    uVar12 = *puVar7;\n                    do {\n                        if (uVar8 == uVar12) break;\n                        puVar7 = puVar7 + 1;\n                        uVar12 = *puVar7;\n                    } while (uVar12 != 0xffffffff);\n                    bVar14 = *puVar7 == 0xffffffff;\ncode_r0x00be534d:\n                    if (bVar14) {\n                        return false;\n                    }\n                    break;\n                default:\n                    goto code_r0x00ba8be6;\n                }\ncode_r0x00ba8c1e:\n                var_4h = var_4h + 1;\n                uVar8 = *var_4h;\n                in_ECX = var_8h;\n            } while (uVar8 != 0xffffffff);\n            goto joined_r0x00ba8c2f;\n        }\n        if (var_40h == 0x1d) {\n            var_4h = &var_38h;\n            puVar13 = arg_ch;\n            goto code_r0x00ba8bcd;\n        }\n        if (uVar6 == 0x6e) {\n            uVar8 = arg_ch[2];\n            puVar11 = arg_10h;\n            puVar13 = &var_40h;\ncode_r0x00ba8ae8:\n            bVar14 = false;\n            puVar11 = puVar11 + -uVar8;\n            uVar6 = *puVar13;\n            if (uVar6 < 0xb) {\n                if (uVar6 == 10) {\n                    bVar14 = true;\n                    goto code_r0x00be5817;\n                }\n                if (uVar6 == 6) {\n                    bVar14 = true;\n                }\n                else if (uVar6 != 7) {\n                    if (uVar6 == 8) {\n                        bVar14 = true;\n                    }\n                    else if (uVar6 != 9) {\n                        return false;\n                    }\n                    puVar9 = *(arg_8h + 8);\n                    goto code_r0x00ba8b28;\n                }\n                puVar9 = *(arg_8h + 8) + 0x40;\n            }\n            else if (uVar6 == 0xb) {\ncode_r0x00be5817:\n                puVar9 = *(arg_8h + 8) + 0xa0;\n            }\n            else {\n                if (uVar6 < 0x6e) {\n                    return false;\n                }\n                if (uVar6 < 0x70) {\n                    if (puVar13 != &var_40h) {\n                        in_ECX = arg_10h;\n                    }\n                    puVar9 = in_ECX + -puVar13[2];\n                }\n                else {\n                    if (uVar6 != 0x70) {\n                        return false;\n                    }\n                    puVar9 = in_ECX;\n                    if (puVar13 != &var_40h) {\n                        puVar9 = arg_10h;\n                    }\n                    if ((puVar9[1 - puVar13[2]] & 4) != 0) {\n                        return false;\n                    }\n                    in_ECX = var_8h;\n                    if ((puVar9[1 - puVar13[2]] & 2) == 0) goto joined_r0x00ba8c2f;\n                    puVar9 = puVar9 + (2 - puVar13[2]);\n                }\n            }\ncode_r0x00ba8b28:\n            puVar1 = puVar11 + 0x10;\n            if (bVar14) {\n                iVar10 = puVar9 - puVar11;\n                do {\n                    puVar2 = iVar10 + puVar11;\n                    uVar3 = *puVar11;\n                    puVar11 = puVar11 + 1;\n                    if ((~*puVar2 & uVar3) != 0) {\n                        return false;\n                    }\n                    in_ECX = var_8h;\n                } while (puVar11 < puVar1);\n            }\n            else {\n                do {\n                    uVar3 = *puVar9;\n                    uVar4 = *puVar11;\n                    puVar9 = puVar9 + 1;\n                    puVar11 = puVar11 + 1;\n                    if ((uVar3 & uVar4) != 0) {\n                        return false;\n                    }\n                    in_ECX = var_8h;\n                } while (puVar11 < puVar1);\n            }\n            goto joined_r0x00ba8c2f;\n        }\n        uVar8 = var_38h;\n        puVar11 = in_ECX;\n        puVar13 = arg_ch;\n        if (var_40h == 0x6e) goto code_r0x00ba8ae8;\n        if ((uVar6 != 0x10) && (uVar6 != 0xf)) {\n            if (0x10 < uVar6 - 6) {\n                return false;\n            }\n            if (0x14 < var_40h - 6) {\n                return false;\n            }\n            if (*(uVar6 * 0x15 + 0xc4742c + var_40h) == '\\0') {\n                return false;\n            }\n            goto joined_r0x00ba8c2f;\n        }\n        if (var_40h == 0x18) goto joined_r0x00ba8c2f;\n        if ((var_40h != 0x10) && (var_40h != 0xf)) {\n            return false;\n        }\n        var_4h = uVar6 == var_40h;\n        bVar14 = uVar6 == 0x10;\n        bVar15 = var_40h == 0x10;\n        if ((bVar14) && (bVar15)) {\n            bVar16 = true;\n        }\n        else {\n            bVar16 = false;\n        }\n        uVar6 = *(arg_ch[2] * 0xb + 0xc47830 + var_38h);\n        if (0x10 < uVar6 - 1) {\n            return false;\n        }\n    // switch table (17 cases) at 0xbe58f0\n        switch(*(*(uVar6 + 0xbe5913) * 4 + 0xbe58f0)) {\n        case 0xbe5642:\n            bVar16 = (arg_ch[3] == var_34h) == var_4h;\n            goto code_r0x00be57bb;\n        case 0xbe5655:\n            bVar14 = var_4h == NULL;\n            break;\n        case 0xbe566a:\n            if (!bVar15) {\n                return false;\n            }\n            uVar6 = arg_ch[3];\n            uVar8 = var_34h;\n            goto code_r0x00be5682;\n        case 0xbe568f:\n            if (!bVar14) {\n                return false;\n            }\n            uVar8 = arg_ch[3];\n            uVar6 = var_34h;\ncode_r0x00be5682:\n            bVar14 = *(uVar6 * 0x1e + 0xc47620 + uVar8) == var_4h;\n            break;\n        case 0xbe5699:\n            if (!bVar15) {\n                return false;\n            }\n            if ((var_34h == *(L\"\\\\P{Xan}\" + uVar6 * 2 + 6)) || (var_34h == *(L\"\\\\P{Xan}\" + uVar6 * 4 + 0xd)))\n            goto code_r0x00be56dd;\n            uVar3 = *(L\"\\\\P{Xan}\" + uVar6 * 2 + 7);\ncode_r0x00be56d2:\n            if ((var_34h == uVar3) && (bVar14)) goto code_r0x00be56dd;\n            bVar15 = true;\n            goto code_r0x00be56df;\n        case 0xbe56e6:\n            if (!bVar14) {\n                return false;\n            }\n            if (((arg_ch[3] == *(L\"\\\\P{Xan}\" + uVar6 * 2)) || (arg_ch[3] == *(L\"\\\\P{Xan}\" + uVar6 * 4 + 1))) ||\n               ((arg_ch[3] == *(L\"\\\\P{Xan}\" + uVar6 * 2 + 1) && (bVar15)))) {\n                bVar14 = false;\n            }\n            else {\n                bVar14 = true;\n            }\n            bVar14 = bVar15 == bVar14;\n            break;\n        case 0xbe572d:\n            if (!bVar15) {\n                return false;\n            }\n            if ((*(*(uVar6 * 4 + 0xc478a0) * 0x1e + 0xc47620 + var_34h) != '\\0') &&\n               (*(*(uVar6 * 4 + 0xc478a1) * 0x1e + 0xc47620 + var_34h) != '\\0')) {\n                uVar3 = *(uVar6 * 4 + 0xc478a3);\n                goto code_r0x00be56d2;\n            }\ncode_r0x00be56dd:\n            bVar15 = false;\ncode_r0x00be56df:\n            bVar14 = bVar14 == bVar15;\n            break;\n        case 0xbe576b:\n            if (bVar14) {\n                uVar8 = arg_ch[3];\n                if (((*(*(uVar6 * 4 + 0xc47894) * 0x1e + 0xc47620 + uVar8) == '\\0') ||\n                    (*(*(uVar6 * 4 + 0xc47895) * 0x1e + 0xc47620 + uVar8) == '\\0')) ||\n                   ((uVar8 == *(uVar6 * 4 + 0xc47897) && (bVar15)))) {\n                    bVar14 = false;\n                }\n                else {\n                    bVar14 = true;\n                }\n                if (bVar15 == bVar14) goto joined_r0x00ba8c2f;\n            }\n            bVar16 = false;\n        case 0xbe57b9:\n            goto code_r0x00be57b9;\n        }\n        if (!bVar14) {\ncode_r0x00ba8cc8:\n            return false;\n        }\njoined_r0x00ba8c2f:\n        var_8h = in_ECX;\n        if (var_3ch == 0) {\n            return true;\n        }\n    } while( true );\ncode_r0x00be57b9:\n    bVar16 = !bVar16;\ncode_r0x00be57bb:\n    if (bVar16) {\n        return false;\n    }\n    goto joined_r0x00ba8c2f;\n}\n",
        "token_count": 5141
    },
    "00ba8d01": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.00ba8d01(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int16_t iVar3;\n    uint32_t uVar4;\n    int16_t extraout_CX;\n    int16_t iVar5;\n    uint16_t *in_ECX;\n    uint32_t uVar6;\n    int32_t in_EDX;\n    uint16_t *puVar7;\n    uint32_t *puVar8;\n    uint32_t *puVar9;\n    uint16_t *puVar10;\n    \n    uVar2 = *in_ECX;\n    uVar6 = uVar2;\n    puVar10 = in_ECX + 1;\n    *arg_ch = uVar6;\n    arg_ch[1] = 0;\n    if (uVar2 - 0x21 < 0x41) {\n        iVar3 = fcn.00ba906a();\n        iVar5 = extraout_CX + (0x21 - iVar3);\n        if ((((iVar5 == 0x27) || (iVar5 == 0x28)) || (iVar5 == 0x29)) || (iVar5 == 0x2d)) {\n            puVar10 = in_ECX + 2;\n        }\n        if (((iVar5 == 0x23) || (iVar5 == 0x24)) || ((iVar5 == 0x29 || (iVar5 == 0x2b)))) {\n            uVar6 = 0;\n        }\n        else {\n            uVar6 = 1;\n        }\n        arg_ch[1] = uVar6;\n        if (iVar3 == 0x21) {\n            *arg_ch = 0x1d;\n        }\n        else if (iVar3 == 0x2e) {\n            *arg_ch = 0x1e;\n        }\n        else if (iVar3 == 0x3b) {\n            *arg_ch = 0x1f;\n        }\n        else if (iVar3 == 0x48) {\n            *arg_ch = 0x20;\n        }\n        else if (iVar3 == 0x55) {\n            uVar2 = *puVar10;\n            puVar10 = puVar10 + 1;\n            *arg_ch = uVar2;\n        }\n        uVar6 = *arg_ch;\n    }\n    iVar3 = uVar6;\n    if (uVar6 < 0x1f) {\n        if (uVar6 == 0x1e) goto code_r0x00be59b4;\n        if (uVar6 < 6) {\n            return NULL;\n        }\n        if (uVar6 < 0xe) {\n            return puVar10;\n        }\n        if (uVar6 < 0xf) {\n            return NULL;\n        }\n        if (uVar6 < 0x11) {\n            if (*puVar10 == 9) {\n                puVar8 = arg_ch + 2;\n                puVar9 = puVar10[1] * 4 + 0xc345d0;\n                do {\n                    if (arg_ch + 8 <= puVar8) {\n                        arg_ch[2] = puVar10[2];\n                        uVar2 = puVar10[3];\n                        goto code_r0x00be5949;\n                    }\n                    *puVar8 = *puVar9;\n                    puVar8 = puVar8 + 1;\n                    uVar6 = *puVar9;\n                    puVar9 = puVar9 + 1;\n                } while (uVar6 != 0xffffffff);\n                *arg_ch = (iVar3 != 0x10) * 2 + 0x1d;\n            }\n            else {\n                arg_ch[2] = *puVar10;\n                uVar2 = puVar10[1];\ncode_r0x00be5949:\n                arg_ch[3] = uVar2;\n            }\n            return puVar10 + 2;\n        }\n        if (uVar6 < 0x1b) {\n            return puVar10;\n        }\n        if (uVar6 != 0x1d) {\n            return NULL;\n        }\n    }\n    else if (uVar6 != 0x1f) {\n        if (uVar6 != 0x20) {\n            if (2 < uVar6 - 0x6e) {\n                return NULL;\n            }\n            if (iVar3 == 0x70) {\n                puVar7 = puVar10 + (*puVar10 - 1);\n            }\n            else {\n                puVar7 = puVar10 + 0x10;\n            }\n    // switch table (12 cases) at 0xba8e9d\n            switch(*puVar7) {\n            case 0x62:\n            case 99:\n            case 0x66:\n            case 0x67:\n            case 0x6a:\n            case 0x6c:\n                arg_ch[1] = 1;\n            case 100:\n            case 0x65:\n            case 0x6b:\n                puVar7 = puVar7 + 1;\n                break;\n            case 0x68:\n            case 0x69:\n            case 0x6d:\n                puVar1 = puVar7 + 1;\n                puVar7 = puVar7 + 3;\n                arg_ch[1] = *puVar1 == 0;\n            }\n            arg_ch[2] = puVar7 - puVar10 >> 1;\n            return puVar7;\n        }\ncode_r0x00be59b4:\n        *arg_ch = (iVar3 != 0x1e) * 2 + 0x1d;\n        uVar6 = *puVar10;\n        puVar7 = puVar10 + 1;\n        if ((in_EDX != 0) && ((uVar6 & 0xfc00) == 0xd800)) {\n            uVar6 = ((uVar6 & 0x3ff) << 10 | *puVar7 & 0x3ff) + 0x10000;\n            puVar7 = puVar10 + 2;\n        }\n        arg_ch[2] = uVar6;\n        if ((uVar6 < 0x80) || ((uVar6 < 0x100 && (in_EDX == 0)))) {\n            uVar4 = *(uVar6 + arg_8h);\n        }\n        else {\n            uVar4 = *(*((*(uVar6 / 0x80 + 0xc43b40) * 0x80 + uVar6 % 0x80) * 2 + 0xc35840) * 8 + 0xc32f54) + uVar6;\n        }\n        arg_ch[3] = uVar4;\n        if (uVar6 != uVar4) {\n            arg_ch[4] = 0xffffffff;\n            return puVar7;\n        }\n        goto code_r0x00ba8de7;\n    }\n    uVar6 = *puVar10;\n    puVar7 = puVar10 + 1;\n    if ((in_EDX != 0) && ((uVar6 & 0xfc00) == 0xd800)) {\n        uVar6 = ((uVar6 & 0x3ff) << 10 | *puVar7 & 0x3ff) + 0x10000;\n        puVar7 = puVar10 + 2;\n    }\n    arg_ch[2] = uVar6;\ncode_r0x00ba8de7:\n    arg_ch[3] = 0xffffffff;\n    return puVar7;\n}\n",
        "token_count": 1695
    },
    "00bafbfb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bafbfb(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint32_t *in_EDX;\n    ulong uVar5;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00bb2e3c(in_ECX);\n    *in_EDX = 0;\n    in_EDX[1] = 0;\n    iVar3 = iVar3 + -1;\n    var_8h = 0;\n    if (0 < arg_8h) {\n        while (-1 < iVar3) {\n            uVar1 = *(in_ECX + iVar3 * 2);\n            if ((((0x39 < uVar1) || (uVar1 < 0x30)) && ((uVar1 < 0x41 || (0x46 < uVar1)))) &&\n               ((uVar1 < 0x61 || (0x66 < uVar1)))) goto code_r0x00bafc97;\n            uVar5 = fcn.00bc6200();\n            uVar2 = *in_EDX;\n            *in_EDX = *in_EDX + uVar5;\n            in_EDX[1] = in_EDX[1] + (uVar5 >> 0x20) + CARRY4(uVar2, uVar5);\n            iVar3 = iVar3 + -1;\n            var_8h = var_8h + 1;\n            if (arg_8h <= var_8h) break;\n        }\n    }\n    if (iVar3 == -1) {\n        uVar4 = 1;\n    }\n    else {\ncode_r0x00bafc97:\n        *in_EDX = 0;\n        in_EDX[1] = 0;\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 446
    },
    "00bb023b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.00bb023b(uchar *arg_8h, uint32_t *arg_ch, uchar *arg_10h, uchar *arg_14h, uchar *arg_18h, uchar *arg_1ch)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    ushort *puVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    int32_t iVar10;\n    uint var_20h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint8_t uVar9;\n    \n    var_4h = 0;\n    uVar9 = 1;\n    uVar8 = 1;\n    var_10h = 0;\n    if (*(arg_8h + 4) == 0) {\ncode_r0x00be5d4d:\n        uVar7 = arg_8h & 0xffffff00;\n    }\n    else {\n        *arg_1ch = 0;\n        *arg_18h = 0;\n        *arg_ch = 0;\n        iVar10 = 0;\n        *arg_10h = 0;\n        var_ch = 0x2b;\n        *arg_14h = 0;\n        var_8h = 0x23;\n        while( true ) {\n            piVar3 = fcn.00b97b20(iVar10);\n            iVar2 = *piVar3;\n            if ((((iVar2 != 0x2b) && (iVar2 != 0x5e)) && (iVar2 != 0x21)) && (iVar2 != var_8h)) break;\n            puVar5 = arg_10h;\n            if (((iVar2 == var_ch) || (puVar5 = arg_14h,  iVar2 == 0x5e)) ||\n               ((puVar5 = arg_18h,  iVar2 == 0x21 || (puVar5 = arg_1ch,  iVar2 == 0x23)))) {\n                *puVar5 = 1;\n            }\n            iVar10 = iVar10 + 1;\n        }\n        arg_1ch = iVar10 + 1;\n        piVar3 = fcn.00b97b20(iVar10);\n        iVar10 = var_10h;\n        if (*piVar3 == 0x7b) {\n            fcn.00b97b76(0x40);\n            cVar1 = fcn.00bb0352(0x7d, arg_8h, &var_20h, &arg_1ch);\n            if (cVar1 == '\\0') {\ncode_r0x00bb034e:\n                uVar8 = 0;\n            }\n            else {\n                do {\n                    iVar4 = fcn.00bb313d(*(iVar10 * 4 + 0xc34cf0), var_20h);\n                    if (iVar4 == 0) break;\n                    iVar10 = iVar10 + 1;\n                } while (iVar10 < 99);\n                uVar8 = uVar9;\n                if (iVar10 == 99) {\n                    puVar6 = fcn.00b97b52(0);\n                    iVar2 = (*_sym.imp.USER32.dll_VkKeyScanW)(*puVar6);\n                    uVar7 = iVar2;\n                    *arg_ch = uVar7;\n                    if (uVar7 == 0xffffffff) {\n                        arg_8h = fcn.00b95a64();\n                        goto code_r0x00be5d4d;\n                    }\n                    if ((uVar7 & 0x200) != 0) {\n                        *arg_14h = 1;\n                    }\n                    if ((uVar7 & 0x400) != 0) {\n                        *arg_18h = 1;\n                    }\n                    if ((uVar7 & 0x100) != 0) {\n                        *arg_10h = 1;\n                    }\n                }\n                else {\n                    if (*(iVar10 + 0xc34c88) != '\\0') goto code_r0x00bb034e;\n                    *arg_ch = str._f_b_b..__reepqrstuvwxyz________t__[iVar10];\n                }\n            }\n            arg_8h = fcn.00b95a64();\n        }\n        else {\n            iVar2 = (*_sym.imp.USER32.dll_VkKeyScanW)(*piVar3);\n            arg_8h = iVar2;\n            *arg_ch = arg_8h;\n            if (arg_8h == 0xffffffff) goto code_r0x00be5d4d;\n            if ((arg_8h & 0x200) != 0) {\n                *arg_14h = 1;\n            }\n            if ((arg_8h & 0x400) != 0) {\n                *arg_18h = 1;\n            }\n            if ((arg_8h & 0x100) != 0) {\n                *arg_10h = 1;\n                arg_8h = arg_10h;\n            }\n        }\n        *arg_ch = *arg_ch & 0xff;\n        uVar7 = arg_8h & 0xffffff00 | uVar8;\n    }\n    return uVar7;\n}\n",
        "token_count": 1200
    },
    "00bb040a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bb040a(int32_t arg_8h, int16_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    int32_t iVar6;\n    int16_t *piVar7;\n    int16_t *in_ECX;\n    int16_t *noname_0;\n    int16_t *piVar8;\n    int16_t *extraout_ECX;\n    int16_t *extraout_ECX_00;\n    int16_t *extraout_ECX_01;\n    uint8_t *in_EDX;\n    uint8_t *puVar9;\n    uint uVar10;\n    int16_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 1;\n    var_10h = in_ECX;\ncode_r0x00bb0425:\n    iVar2 = *var_10h;\n    piVar7 = var_10h + 2;\n    noname_0 = 0x85;\n    bVar5 = true;\n    if ((((iVar2 == 0x85) || (noname_0 = 0x8a,  iVar2 == 0x8a)) || (noname_0 = 0x86,  iVar2 == 0x86)) ||\n       (noname_0 = 0x8b,  iVar2 == 0x8b)) {\n        piVar7 = var_10h + 3;\n    }\ncode_r0x00bb0466:\n    piVar8 = NULL;\n    // switch table (162 cases) at 0xbb0562\n    switch(*piVar7) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x12:\n    case 0x14:\n    case 0x16:\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1f:\n    case 0x20:\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x43:\n    case 0x44:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x50:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n    case 0x54:\n    case 0x71:\n    case 0x72:\n    case 0x73:\n    case 0x74:\n    case 0x75:\n    case 0x7c:\n    case 0x87:\n    case 0x8c:\n    case 0x8d:\n    case 0x8e:\n    case 0x8f:\n    case 0x90:\n    case 0x91:\n    case 0x95:\n    case 0x96:\n    case 0x97:\n    case 0x98:\n    case 0x99:\n    case 0x9a:\n    case 0x9b:\n    case 0x9c:\n    case 0x9d:\n    case 0x9e:\n    case 0x9f:\n    case 0xa0:\n        goto code_r0x00bb04b6;\n    case 4:\n    case 5:\n    case 0x57:\n    case 0x58:\n    case 0x5f:\n        goto code_r0x00bb052e;\n    case 6:\n        goto code_r0x00be6079;\n    case 7:\n        goto code_r0x00be6089;\n    case 8:\n        goto code_r0x00be6079;\n    case 9:\n        goto code_r0x00be6089;\n    case 10:\ncode_r0x00be6079:\n        fcn.00c1e781(noname_0, arg_ch);\n        goto code_r0x00bb049b;\n    case 0xb:\ncode_r0x00be6089:\n        fcn.00c1e7a0(noname_0, arg_ch);\n        goto code_r0x00bb049b;\n    case 0x10:\n        goto code_r0x00be5fee;\n    case 0x11:\n    case 0x15:\n        in_EDX[1] = in_EDX[1] | 0x3c;\n        in_EDX[0x10] = in_EDX[0x10] | 0x20;\n        goto code_r0x00be605e;\n    case 0x13:\n        in_EDX[1] = in_EDX[1] | 2;\n        in_EDX[4] = in_EDX[4] | 1;\n        in_EDX[0x14] = in_EDX[0x14] | 1;\ncode_r0x00be605e:\n        in_EDX[0x1f] = in_EDX[0x1f] | 0x80;\n        goto code_r0x00bb049b;\n    case 0x1d:\n    case 0x23:\n    case 0x24:\n    case 0x2b:\n        goto code_r0x00bb0482;\n    case 0x1e:\n    case 0x30:\n    case 0x31:\n    case 0x38:\n        goto code_r0x00be603b;\n    case 0x21:\n    case 0x22:\n    case 0x25:\n    case 0x26:\n    case 0x2a:\n    case 0x2c:\n        uVar10 = 0;\n        goto code_r0x00be5ee3;\n    case 0x27:\n    case 0x28:\n    case 0x2d:\n        uVar10 = 0;\n        goto code_r0x00be5ee3;\n    case 0x29:\ncode_r0x00bb0482:\n        uVar10 = 0;\ncode_r0x00bb0489:\n        fcn.00bb0688(uVar10, arg_ch, arg_8h);\n        goto code_r0x00bb049b;\n    case 0x2e:\n    case 0x2f:\n    case 0x32:\n    case 0x33:\n    case 0x37:\n    case 0x39:\n        uVar10 = 1;\n        goto code_r0x00be5ee3;\n    case 0x34:\n    case 0x35:\n    case 0x3a:\n        uVar10 = 1;\ncode_r0x00be5ee3:\n        piVar7 = fcn.00bb0688(uVar10, arg_ch, arg_8h);\n        piVar8 = extraout_ECX_00;\n        goto code_r0x00bb04f9;\n    case 0x36:\ncode_r0x00be603b:\n        uVar10 = 1;\n        goto code_r0x00bb0489;\n    case 0x55:\n    case 0x56:\n    case 0x59:\n    case 0x5a:\n    case 0x5e:\n    case 0x60:\n        goto code_r0x00be5efe;\n    case 0x5b:\n    case 0x5c:\n    case 0x61:\n        piVar7 = piVar7 + 1;\ncode_r0x00be5efe:\n        uVar3 = piVar7[1];\n        if (uVar3 < 0xb) {\n            if ((uVar3 == 10) || (uVar3 == 6)) {\ncode_r0x00be5f38:\n                fcn.00c1e781(noname_0, arg_ch);\n                noname_0 = extraout_ECX_01;\n            }\n            else {\n                if (uVar3 != 7) {\n                    if (uVar3 == 8) goto code_r0x00be5f38;\n                    if (uVar3 != 9) {\ncode_r0x00bb04b6:\n                        return 0;\n                    }\n                }\ncode_r0x00be5e59:\n                fcn.00c1e7a0(noname_0, arg_ch);\n                noname_0 = extraout_ECX;\n            }\n        }\n        else {\n            if (uVar3 == 0xb) goto code_r0x00be5e59;\n            if (uVar3 == 0x11) {\ncode_r0x00be5f6a:\n                in_EDX[1] = in_EDX[1] | 0x3c;\n                in_EDX[0x10] = in_EDX[0x10] | 0x20;\n            }\n            else {\n                if (uVar3 != 0x13) {\n                    if (uVar3 != 0x15) {\n                        return 0;\n                    }\n                    goto code_r0x00be5f6a;\n                }\n                in_EDX[1] = in_EDX[1] | 2;\n                in_EDX[4] = in_EDX[4] | 1;\n                in_EDX[0x14] = in_EDX[0x14] | 1;\n            }\n            if (arg_8h != 0) {\n                in_EDX[0x1f] = in_EDX[0x1f] | 0x80;\n            }\n        }\n        break;\n    case 0x5d:\n        break;\n    default:\n        return 3;\n    case 0x6e:\n        goto code_r0x00bb04bd;\n    case 0x6f:\n        goto code_r0x00bb0528;\n    case 0x70:\n        uVar3 = piVar7[2];\n        if ((uVar3 & 4) != 0) {\n            return 0;\n        }\n        if (((uVar3 & 2) == 0) && ((uVar3 & 1) != 0)) {\n            return 0;\n        }\ncode_r0x00bb0528:\n        in_EDX[0x1f] = in_EDX[0x1f] | 0x80;\ncode_r0x00bb04bd:\n        if (*piVar7 == 0x70) {\n            if ((*(piVar7 + 2) & 2) != 0) {\n                piVar8 = piVar7 + 3;\n            }\n            piVar7 = piVar7 + piVar7[1];\n        }\n        else {\n            piVar8 = piVar7 + 1;\n            piVar7 = piVar7 + 0x11;\n        }\n        if (piVar8 != NULL) {\n            piVar8 = piVar8 - in_EDX;\n            iVar6 = 0x20;\n            puVar9 = in_EDX;\n            do {\n                *puVar9 = *puVar9 | *(piVar8 + puVar9);\n                puVar9 = puVar9 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n        }\n        noname_0 = piVar8;\n    // switch table (12 cases) at 0xbe60b9\n        switch(*piVar7) {\n        case 0x62:\n        case 99:\n        case 0x66:\n        case 0x67:\n        case 0x6a:\n        case 0x6c:\ncode_r0x00bb052e:\n            piVar7 = piVar7 + 1;\n            piVar8 = noname_0;\n            break;\n        default:\ncode_r0x00bb04f4:\n            bVar5 = false;\n            break;\n        case 0x68:\n        case 0x69:\n        case 0x6d:\n            if (piVar7[1] != 0) goto code_r0x00bb04f4;\n            piVar7 = piVar7 + 3;\n        }\n        goto code_r0x00bb04f9;\n    case 0x76:\n        piVar7 = piVar7 + 4;\n        piVar8 = noname_0;\n        goto code_r0x00bb04f9;\n    case 0x77:\n        var_8h = 2;\n        goto code_r0x00bb049b;\n    case 0x78:\n    case 0x79:\n    case 0x7a:\n    case 0x7b:\n        return 2;\n    case 0x7d:\n    case 0x81:\n    case 0x82:\n    case 0x83:\n    case 0x84:\n    case 0x85:\n    case 0x86:\n    case 0x88:\n    case 0x89:\n    case 0x8a:\n    case 0x8b:\n        noname_0 = arg_ch;\n        iVar6 = fcn.00bb040a(arg_8h, arg_ch);\n        if (iVar6 == 0) {\n            return 0;\n        }\n        if (iVar6 == 3) {\n            return 3;\n        }\n        if (iVar6 == 1) goto code_r0x00bb049b;\n        do {\n            piVar7 = piVar7 + piVar7[1];\n        } while (*piVar7 == 0x77);\n        break;\n    case 0x7e:\n    case 0x7f:\n    case 0x80:\n        do {\n            piVar7 = piVar7 + piVar7[1];\n        } while (*piVar7 == 0x77);\n        break;\n    case 0x92:\n    case 0x93:\n    case 0x94:\n        piVar7 = piVar7 + 1;\n        noname_0 = arg_ch;\n        iVar6 = fcn.00bb040a(arg_8h, arg_ch);\n        if (iVar6 == 0) {\n            return 0;\n        }\n        if (iVar6 == 3) {\n            return 3;\n        }\n        do {\n            piVar7 = piVar7 + piVar7[1];\n        } while (*piVar7 == 0x77);\n        break;\n    case 0xa1:\n        piVar7 = piVar7 + 1;\n        do {\n            piVar7 = piVar7 + piVar7[1];\n        } while (*piVar7 == 0x77);\n    }\n    piVar7 = piVar7 + 2;\n    piVar8 = noname_0;\ncode_r0x00bb04f9:\n    noname_0 = piVar8;\n    if (!bVar5) goto code_r0x00bb049b;\n    goto code_r0x00bb0466;\ncode_r0x00be5fee:\n    if (piVar7[1] != 9) {\n        return 0;\n    }\n    puVar1 = piVar7[2] * 4 + 0xc345d0;\n    uVar4 = *puVar1;\n    while (uVar4 != 0xffffffff) {\n        puVar1 = puVar1 + 1;\n        if (uVar4 < 0x100) {\n            in_EDX[uVar4 >> 3] = in_EDX[uVar4 >> 3] | '\\x01' << (uVar4 & 7);\n        }\n        else {\n            in_EDX[0x1f] = in_EDX[0x1f] | 0x80;\n        }\n        uVar4 = *puVar1;\n    }\ncode_r0x00bb049b:\n    var_10h = var_10h + var_10h[1];\n    if (*var_10h != 0x77) {\n        return var_8h;\n    }\n    goto code_r0x00bb0425;\n}\n",
        "token_count": 3714
    },
    "00bb0bd0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00bb0bd0(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t arg_ch;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint uVar2;\n    uint var_18h;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = *0xc56283;\n    uVar2 = 0x8000;\n    uVar1 = fcn.00bb4916(param_1);\n    arg_ch = fcn.00bb4744(uVar1, uVar2);\n    if (*(param_2 + 0xc) == 0xb) {\n        uVar1 = param_1;\n        uVar2 = fcn.00bf89e2();\n        arg_ch_00 = 1;\n        arg_8h = fcn.00bf899f();\n        uVar1 = fcn.00bb4a93(arg_8h, arg_ch_00, uVar2, uVar1);\n    }\n    else {\n        fcn.00b95c18();\n        fcn.00b99997();\n        fcn.00b95b75(*(param_2 + 8), &var_18h);\n        var_8h = fcn.00bb4b15(param_1, 0xc21d28, var_18h);\n        if (var_1h != '\\0') {\n            fcn.00b99997();\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(**(param_2 + 8));\n        }\n        fcn.00b95a64();\n        uVar1 = var_8h;\n    }\n    fcn.00bb4cda(param_1);\n    if (arg_ch == -1) {\n        arg_ch = 0x4000;\n    }\n    uVar2 = fcn.00bb4916(param_1);\n    fcn.00bb4744(uVar2, arg_ch);\n    return uVar1;\n}\n",
        "token_count": 480
    },
    "00bb9bb6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bb9bb6(int32_t arg_8h)\n\n{\n    if (*0xc4f9c0 != -1) {\n        if (arg_8h == 0) {\n            arg_8h = fcn.00bba007(*0xc4f9c0);\n        }\n        fcn.00bba026(*0xc4f9c0, 0);\n        fcn.00bb9a81(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00bbe41a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00bbe41a(int32_t arg_8h, uint8_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    code *pcVar6;\n    char *pcVar7;\n    uint8_t *puVar8;\n    uint *puVar9;\n    int32_t *piVar10;\n    int32_t extraout_ECX;\n    int32_t iVar11;\n    uint unaff_EBX;\n    uint32_t uVar12;\n    int32_t *piVar13;\n    char *pcVar14;\n    bool bVar15;\n    int64_t iVar16;\n    uint var_27ch;\n    int32_t *var_278h;\n    int32_t *var_274h;\n    uint var_270h;\n    int32_t var_268h;\n    uint var_264h;\n    int32_t var_260h;\n    uint var_25ch;\n    uint var_258h;\n    int32_t var_254h;\n    int32_t *var_250h;\n    int32_t var_24ch;\n    uint32_t var_248h;\n    int32_t var_244h;\n    int32_t *var_240h;\n    char *var_23ch;\n    int32_t var_238h;\n    int32_t var_234h;\n    int32_t var_230h;\n    uint var_22ch;\n    int32_t *var_228h;\n    char *var_224h;\n    int32_t var_220h;\n    int32_t **var_21ch;\n    uint32_t var_218h;\n    uint8_t var_211h;\n    uint8_t *var_210h;\n    uint var_20ch;\n    uchar var_dh;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0xc4fd50 ^ &stack0xfffffffc;\n    var_230h = arg_8h;\n    var_210h = arg_ch;\n    uVar12 = 0;\n    var_21ch = arg_14h;\n    var_254h = 0;\n    piVar13 = NULL;\n    var_218h = 0;\n    var_240h = NULL;\n    var_228h = NULL;\n    var_234h = 0;\n    var_25ch = 0;\n    var_24ch = 0;\n    var_238h = 0;\n    fcn.00bb30b5(arg_10h);\n    var_258h = fcn.00bb8d68();\n    if (var_230h != 0) {\n        if ((*(var_230h + 0xc) & 0x40) == 0) {\n            uVar4 = fcn.00bb4916(var_230h);\n            if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                iVar11 = 0xc4fe90;\n            }\n            else {\n                iVar11 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0xc549e0);\n            }\n            if ((*(iVar11 + 0x24) & 0x7f) == 0) {\n                if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                    iVar11 = 0xc4fe90;\n                }\n                else {\n                    iVar11 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0xc549e0);\n                }\n                if ((*(iVar11 + 0x24) & 0x80) == 0) goto code_r0x00bbe511;\n            }\n        }\n        else {\ncode_r0x00bbe511:\n            if (var_210h != NULL) {\n                var_211h = *var_210h;\n                var_224h = NULL;\n                iVar11 = 0;\n                var_220h = 0;\n                var_244h = 0;\n                var_250h = NULL;\n                var_248h = var_248h & 0xffffff00 | var_211h;\n                puVar3 = var_210h;\n                while ((var_211h != 0 && (var_210h = puVar3 + 1,  -1 < iVar11))) {\n                    if (var_211h - 0x20 < 0x59) {\n                        uVar4 = *(var_211h + 0xc24210) & 0xf;\n                    }\n                    else {\n                        uVar4 = 0;\n                    }\n                    var_244h = *(var_244h + 0xc24230 + uVar4 * 8) >> 4;\n                    puVar8 = var_210h;\n    // switch table (8 cases) at 0xbbef7a\n                    switch(var_244h) {\n                    case 0:\ncode_r0x00bbe7ad:\n                        var_238h = 0;\n                        iVar11 = fcn.00bb37fb(var_211h, &var_270h);\n                        if (iVar11 != 0) {\n                            fcn.00bbef9a(var_248h, var_230h, &var_220h);\n                            uVar1 = *var_210h;\n                            var_210h = var_210h + 1;\n                            var_248h = var_248h & 0xffffff00 | uVar1;\n                            if (uVar1 == 0) goto code_r0x00bbef65;\n                        }\n                        fcn.00bbef9a(var_248h, var_230h, &var_220h);\n                        puVar8 = var_210h;\n                        iVar11 = var_220h;\n                        break;\n                    case 1:\n                        var_228h = 0xffffffff;\n                        uVar12 = 0;\n                        var_25ch = 0;\n                        var_24ch = 0;\n                        var_240h = NULL;\n                        var_234h = 0;\n                        var_218h = 0;\n                        var_238h = 0;\n                        break;\n                    case 2:\n                        if (var_211h == 0x20) {\n                            uVar12 = uVar12 | 2;\n                            var_218h = uVar12;\n                        }\n                        else if (var_211h == 0x23) {\n                            uVar12 = uVar12 | 0x80;\n                            var_218h = uVar12;\n                        }\n                        else if (var_211h == 0x2b) {\n                            uVar12 = uVar12 | 1;\n                            var_218h = uVar12;\n                        }\n                        else if (var_211h == 0x2d) {\n                            uVar12 = uVar12 | 4;\n                            var_218h = uVar12;\n                        }\n                        else if (var_211h == 0x30) {\n                            uVar12 = uVar12 | 8;\n                            var_218h = uVar12;\n                        }\n                        break;\n                    case 3:\n                        if (var_211h == 0x2a) {\n                            var_240h = *var_21ch;\n                            var_21ch = var_21ch + 1;\n                            if (var_240h < 0) {\n                                uVar12 = uVar12 | 4;\n                                var_240h = -var_240h;\n                                var_218h = uVar12;\n                            }\n                        }\n                        else {\n                            var_240h = var_211h + var_240h * 10 + -0x30;\n                            iVar11 = var_220h;\n                        }\n                        break;\n                    case 4:\n                        var_228h = NULL;\n                        break;\n                    case 5:\n                        if (var_211h == 0x2a) {\n                            var_228h = *var_21ch;\n                            var_21ch = var_21ch + 1;\n                            if (var_228h < 0) {\n                                var_228h = 0xffffffff;\n                            }\n                        }\n                        else {\n                            var_228h = var_211h + var_228h * 10 + -0x30;\n                            iVar11 = var_220h;\n                        }\n                        break;\n                    case 6:\n                        if (var_211h == 0x49) {\n                            uVar1 = *var_210h;\n                            if ((uVar1 == 0x36) && (puVar3[2] == 0x34)) {\n                                uVar12 = uVar12 | 0x8000;\n                                puVar8 = puVar3 + 3;\n                                var_218h = uVar12;\n                            }\n                            else if ((uVar1 == 0x33) && (puVar3[2] == 0x32)) {\n                                uVar12 = uVar12 & 0xffff7fff;\n                                puVar8 = puVar3 + 3;\n                                var_218h = uVar12;\n                            }\n                            else if (((((uVar1 != 100) && (uVar1 != 0x69)) && (uVar1 != 0x6f)) &&\n                                     ((uVar1 != 0x75 && (uVar1 != 0x78)))) && (uVar1 != 0x58)) {\n                                var_244h = 0;\n                                goto code_r0x00bbe7ad;\n                            }\n                        }\n                        else if (var_211h == 0x68) {\n                            uVar12 = uVar12 | 0x20;\n                            var_218h = uVar12;\n                        }\n                        else if (var_211h == 0x6c) {\n                            if (*var_210h == 0x6c) {\n                                uVar12 = uVar12 | 0x1000;\n                                puVar8 = puVar3 + 2;\n                                var_218h = uVar12;\n                            }\n                            else {\n                                uVar12 = uVar12 | 0x10;\n                                var_218h = uVar12;\n                            }\n                        }\n                        else if (var_211h == 0x77) {\n                            uVar12 = uVar12 | 0x800;\n                            var_218h = uVar12;\n                        }\n                        break;\n                    case 7:\n                        if (var_211h < 'e') {\n                            if (var_211h == 100) {\ncode_r0x00bbea84:\n                                uVar12 = uVar12 | 0x40;\n                                var_218h = uVar12;\ncode_r0x00bbea8d:\n                                var_224h = 0xa;\ncode_r0x00bbea97:\n                                if (((uVar12 & 0x8000) == 0) && ((uVar12 & 0x1000) == 0)) {\n                                    if ((uVar12 & 0x20) == 0) {\n                                        if ((uVar12 & 0x40) == 0) {\n                                            piVar13 = *var_21ch;\n                                            piVar10 = NULL;\n                                            var_21ch = var_21ch + 1;\n                                            goto code_r0x00bbec6e;\n                                        }\n                                        piVar13 = *var_21ch;\n                                    }\n                                    else if ((uVar12 & 0x40) == 0) {\n                                        piVar13 = *var_21ch;\n                                    }\n                                    else {\n                                        piVar13 = *var_21ch;\n                                    }\n                                    piVar10 = piVar13 >> 0x1f;\n                                    var_21ch = var_21ch + 1;\n                                }\n                                else {\n                                    piVar13 = *var_21ch;\n                                    piVar10 = var_21ch[1];\n                                    var_21ch = var_21ch + 2;\n                                }\ncode_r0x00bbec6e:\n                                if ((((uVar12 & 0x40) != 0) && (piVar10 < 1)) && (piVar10 < 0)) {\n                                    bVar15 = piVar13 != NULL;\n                                    piVar13 = -piVar13;\n                                    piVar10 = -(piVar10 + bVar15);\n                                    uVar12 = uVar12 | 0x100;\n                                    var_218h = uVar12;\n                                }\n                                if ((uVar12 & 0x9000) == 0) {\n                                    piVar10 = NULL;\n                                }\n                                iVar16 = CONCAT44(piVar10, piVar13);\n                                if (var_228h < 0) {\n                                    var_228h = 0x1;\n                                }\n                                else {\n                                    var_218h = uVar12 & 0xfffffff7;\n                                    if (0x200 < var_228h) {\n                                        var_228h = 0x200;\n                                    }\n                                }\n                                if ((piVar13 | piVar10) == 0) {\n                                    var_234h = 0;\n                                }\n                                piVar10 = &var_dh;\n                                while ((piVar5 = var_228h + -1,  0 < var_228h || (iVar16 != 0))) {\n                                    var_228h = piVar5;\n                                    iVar16 = fcn.00bbaa80();\n                                    var_23ch = iVar16;\n                                    iVar11 = extraout_ECX + 0x30;\n                                    if (0x39 < iVar11) {\n                                        iVar11 = iVar11 + var_254h;\n                                    }\n                                    *piVar10 = iVar11;\n                                    piVar10 = piVar10 + -1;\n                                }\n                                var_224h = &var_dh + -piVar10;\n                                piVar13 = piVar10 + 1;\n                                uVar12 = var_218h;\n                                var_228h = piVar5;\n                                if (((var_218h & 0x200) != 0) && ((var_224h == NULL || (*piVar13 != '0')))) {\n                                    var_224h = &var_ch + -piVar10;\n                                    *piVar10 = '0';\n                                    piVar13 = piVar10;\n                                }\n                            }\n                            else if (var_211h < 'T') {\n                                if (var_211h == 0x53) {\n                                    if ((uVar12 & 0x830) == 0) {\n                                        uVar12 = uVar12 | 0x800;\n                                        var_218h = uVar12;\n                                    }\n                                    goto code_r0x00bbe8ce;\n                                }\n                                if (var_211h == 0x41) {\ncode_r0x00bbe853:\n                                    var_211h = var_211h + 0x20;\n                                    var_25ch = 1;\ncode_r0x00bbe866:\n                                    uVar4 = uVar12 | 0x40;\n                                    var_23ch = 0x200;\n                                    piVar5 = &var_20ch;\n                                    pcVar14 = var_23ch;\n                                    var_218h = uVar4;\n                                    if (var_228h < 0) {\n                                        var_228h = 0x6;\n                                    }\n                                    else if (var_228h == NULL) {\n                                        if (var_211h == 0x67) {\n                                            var_228h = 0x1;\n                                        }\n                                    }\n                                    else {\n                                        if (0x200 < var_228h) {\n                                            var_228h = 0x200;\n                                        }\n                                        if (0xa3 < var_228h) {\n                                            pcVar14 = var_228h + 0x15d;\n                                            var_250h = fcn.00bb8a5d(pcVar14);\n                                            piVar5 = var_250h;\n                                            if (var_250h == NULL) {\n                                                var_228h = 0xa3;\n                                                piVar5 = &var_20ch;\n                                                pcVar14 = var_23ch;\n                                            }\n                                        }\n                                    }\n                                    var_23ch = pcVar14;\n                                    var_278h = *var_21ch;\n                                    var_274h = var_21ch[1];\n                                    var_21ch = var_21ch + 2;\n                                    pcVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)\n                                                       (*0xc4fd3c, &var_278h, piVar5, var_23ch, var_211h, var_228h, \n                                                        var_25ch, &var_270h);\n                                    (*pcVar6)();\n                                    if (((uVar12 & 0x80) != 0) && (var_228h == NULL)) {\n                                        pcVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0xc4fd48, piVar5, &var_270h);\n                                        (*pcVar6)();\n                                    }\n                                    if ((var_211h == 0x67) && ((uVar12 & 0x80) == 0)) {\n                                        pcVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0xc4fd44, piVar5, &var_270h);\n                                        (*pcVar6)();\n                                    }\n                                    if (*piVar5 == '-') {\n                                        var_218h = uVar12 | 0x140;\n                                        uVar4 = var_218h;\n                                        piVar5 = piVar5 + 1;\n                                    }\ncode_r0x00bbe9ee:\n                                    piVar13 = piVar5;\n                                    uVar12 = uVar4;\n                                    var_224h = fcn.00bb3980(piVar13);\n                                }\n                                else if (var_211h == 0x43) {\n                                    if ((uVar12 & 0x830) == 0) {\n                                        uVar12 = uVar12 | 0x800;\n                                        var_218h = uVar12;\n                                    }\ncode_r0x00bbe947:\n                                    if ((uVar12 & 0x810) == 0) {\n                                        var_20ch._0_1_ = *var_21ch;\n                                        var_224h = 0x1;\n                                        var_21ch = var_21ch + 1;\n                                    }\n                                    else {\n                                        uVar2 = *var_21ch;\n                                        var_21ch = var_21ch + 1;\n                                        iVar11 = fcn.00bc7e15(&var_224h, &var_20ch, 0x200, uVar2);\n                                        if (iVar11 != 0) {\n                                            var_24ch = 1;\n                                        }\n                                    }\n                                    piVar13 = &var_20ch;\n                                }\n                                else if ((var_211h == 0x45) || (var_211h == 0x47)) goto code_r0x00bbe853;\n                            }\n                            else {\n                                if (var_211h == 0x58) goto code_r0x00bbebe2;\n                                if (var_211h == 0x5a) {\n                                    piVar10 = *var_21ch;\n                                    var_21ch = var_21ch + 1;\n                                    uVar4 = uVar12;\n                                    piVar5 = *0xc4fed0;\n                                    if ((piVar10 == NULL) || (piVar13 = piVar10[1],  piVar13 == NULL))\n                                    goto code_r0x00bbe9ee;\n                                    var_224h = *piVar10;\n                                    if ((uVar12 & 0x800) == 0) {\n                                        var_238h = 0;\n                                    }\n                                    else {\n                                        var_238h = 1;\n                                        var_224h = var_224h / 2;\n                                    }\n                                }\n                                else {\n                                    if (var_211h == 0x61) goto code_r0x00bbe866;\n                                    if (var_211h == 99) goto code_r0x00bbe947;\n                                }\n                            }\ncode_r0x00bbed6b:\n                            if (var_24ch == 0) {\n                                if ((uVar12 & 0x40) != 0) {\n                                    if ((uVar12 & 0x100) == 0) {\n                                        if ((uVar12 & 1) == 0) {\n                                            if ((uVar12 & 2) == 0) goto code_r0x00bbedb2;\n                                            var_22ch._0_1_ = 0x20;\n                                        }\n                                        else {\n                                            var_22ch._0_1_ = 0x2b;\n                                        }\n                                    }\n                                    else {\n                                        var_22ch._0_1_ = 0x2d;\n                                    }\n                                    var_234h = 1;\n                                }\ncode_r0x00bbedb2:\n                                pcVar14 = var_240h + (-var_234h - var_224h);\n                                if ((uVar12 & 0xc) == 0) {\n                                    fcn.00bbefe2(0x20, pcVar14, var_230h, &var_220h);\n                                }\n                                fcn.00bbf00e(&var_22ch, var_234h, var_230h, &var_220h, var_258h);\n                                if (((uVar12 & 8) != 0) && ((uVar12 & 4) == 0)) {\n                                    fcn.00bbefe2(0x30, pcVar14, var_230h, &var_220h);\n                                }\n                                if ((var_238h == 0) || (pcVar7 = var_224h,  piVar10 = piVar13,  var_224h < 1)) {\n                                    fcn.00bbf00e(piVar13, var_224h, var_230h, &var_220h, var_258h);\n                                }\n                                else {\n                                    do {\n                                        var_23ch = pcVar7 + -1;\n                                        iVar11 = fcn.00bc7e15(&var_260h, &var_ch, 6, *piVar10);\n                                        if ((iVar11 != 0) || (var_260h == 0)) {\n                                            var_220h = -1;\n                                            break;\n                                        }\n                                        fcn.00bbf00e(&var_ch, var_260h, var_230h, &var_220h, var_258h);\n                                        pcVar7 = var_23ch;\n                                        piVar10 = piVar10 + 2;\n                                    } while (var_23ch != NULL);\n                                }\n                                if ((-1 < var_220h) && ((uVar12 & 4) != 0)) {\n                                    fcn.00bbefe2(0x20, pcVar14, var_230h, &var_220h);\n                                }\n                            }\n                        }\n                        else {\n                            if ('p' < var_211h) {\n                                if (var_211h == 0x73) {\ncode_r0x00bbe8ce:\n                                    piVar10 = 0x7fffffff;\n                                    if (var_228h != 0xffffffff) {\n                                        piVar10 = var_228h;\n                                    }\n                                    piVar5 = *var_21ch;\n                                    var_21ch = var_21ch + 1;\n                                    piVar13 = piVar5;\n                                    if ((uVar12 & 0x810) == 0) {\n                                        if (piVar5 == NULL) {\n                                            piVar5 = *0xc4fed0;\n                                            piVar13 = *0xc4fed0;\n                                        }\n                                        for (; (piVar10 != NULL && (piVar10 = piVar10 + -1,  *piVar5 != '\\0'));\n                                            piVar5 = piVar5 + 1) {\n                                        }\n                                        var_224h = piVar5 - piVar13;\n                                    }\n                                    else {\n                                        if (piVar5 == NULL) {\n                                            piVar13 = *0xc4fed4;\n                                        }\n                                        var_238h = 1;\n                                        for (piVar5 = piVar13;\n                                            (piVar10 != NULL && (piVar10 = piVar10 + -1,  *piVar5 != 0));\n                                            piVar5 = piVar5 + 2) {\n                                        }\n                                        var_224h = piVar5 - piVar13 >> 1;\n                                    }\n                                    goto code_r0x00bbed6b;\n                                }\n                                if (var_211h == 0x75) goto code_r0x00bbea8d;\n                                if (var_211h != 0x78) goto code_r0x00bbed6b;\n                                var_254h = 0x27;\ncode_r0x00bbec02:\n                                var_224h = 0x10;\n                                if (uVar12 < '\\0') {\n                                    var_22ch._1_1_ = var_254h + 'Q';\n                                    var_22ch._0_1_ = 0x30;\n                                    var_234h = 2;\n                                }\n                                goto code_r0x00bbea97;\n                            }\n                            if (var_211h == 0x70) {\n                                var_228h = 0x8;\ncode_r0x00bbebe2:\n                                var_254h = 7;\n                                goto code_r0x00bbec02;\n                            }\n                            if (var_211h < 'e') goto code_r0x00bbed6b;\n                            if (var_211h < 'h') goto code_r0x00bbe866;\n                            if (var_211h == 0x69) goto code_r0x00bbea84;\n                            if (var_211h != 0x6e) {\n                                if (var_211h != 0x6f) goto code_r0x00bbed6b;\n                                var_224h = 0x8;\n                                if (uVar12 < '\\0') {\n                                    uVar12 = uVar12 | 0x200;\n                                    var_218h = uVar12;\n                                }\n                                goto code_r0x00bbea97;\n                            }\n                            piVar10 = *var_21ch;\n                            var_21ch = var_21ch + 1;\n                            iVar11 = fcn.00bc627a();\n                            if (iVar11 == 0) goto code_r0x00bbef65;\n                            if ((uVar12 & 0x20) == 0) {\n                                *piVar10 = var_220h;\n                            }\n                            else {\n                                *piVar10 = var_220h;\n                            }\n                            var_24ch = 1;\n                        }\n                        puVar8 = var_210h;\n                        iVar11 = var_220h;\n                        if (var_250h != NULL) {\n                            fcn.00bb2f95(var_250h);\n                            var_250h = NULL;\n                            puVar8 = var_210h;\n                            iVar11 = var_220h;\n                        }\n                    }\n                    var_211h = *puVar8;\n                    var_248h = var_248h & 0xffffff00 | var_211h;\n                    puVar3 = puVar8;\n                }\n                goto code_r0x00bbef41;\n            }\n        }\n    }\ncode_r0x00bbef65:\n    puVar9 = fcn.00bb8d68();\n    *puVar9 = 0x16;\n    fcn.00bb8ff6();\ncode_r0x00bbef41:\n    if (var_264h != '\\0') {\n        *(var_268h + 0x70) = *(var_268h + 0x70) & 0xfffffffd;\n    }\n    fcn.00bbc836(unaff_EBX);\n    return;\n}\n",
        "token_count": 6140
    },
    "00bc211e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nfloat10 fcn.00bc211e(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0xc28210 | *0xc28270;\n        dVar7 = SUB168(in_XMM0, 0) & *0xc28218 | *0xc28278;\n        uVar1 = SUB82(*0xc28220 + dVar6, 0) & 0x7f0;\n        dVar11 = *0xc28238 & dVar7;\n        dVar9 = (*0xc28230 & dVar6) * *(uVar1 + 0xc282f0) - *0xc28270;\n        dVar6 = (dVar6 - (*0xc28230 & dVar6)) * *(uVar1 + 0xc282f0);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0xc282f8);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0xc282f8) - *0xc28278);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0xc282c0 * dVar7 + *0xc282d0) * dVar7 + *0xc282e0) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   ((*0xc282c8 * dVar11 + *0xc282d8) * dVar11 + *0xc282e8) * dVar11 * dVar11 +\n                   *(uVar1 + 0xc28708) + dVar10 * *0xc28248 + (dVar8 & *(iVar5 + 0xc28258)) +\n                   *(uVar1 + 0xc28700) + dVar9 + dVar10 * *0xc28240 + (dVar6 & *(iVar5 + 0xc28250));\n        }\n        dStack12 = -(*0xc28280 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0xc28270 == (param_1 & *0xc28210 | *0xc28270)) {\n                    return *0xc282a8;\n                }\n                arg_14h = 1000;\n                dStack12 = *0xc28210;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 3;\n            }\n            else {\n                arg_14h = 1000;\n            }\n            goto code_r0x00bc2312;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0xc28290);\n        iVar4 = -0x34;\n    }\n    arg_14h = 2;\n    dStack12 = *0xc282a0;\ncode_r0x00bc2312:\n    fcn.00bc3718(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 974
    },
    "00bc89df": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00bc8ce9)\n// WARNING: Removing unreachable block (ram,0x00bc8cf2)\n// WARNING: Removing unreachable block (ram,0x00bc9126)\n// WARNING: Removing unreachable block (ram,0x00bc8d4f)\n// WARNING: Removing unreachable block (ram,0x00bc8d6d)\n// WARNING: Removing unreachable block (ram,0x00bc8d54)\n// WARNING: Removing unreachable block (ram,0x00bc8d5b)\n// WARNING: Removing unreachable block (ram,0x00bc8d60)\n// WARNING: Removing unreachable block (ram,0x00bc8d70)\n// WARNING: Removing unreachable block (ram,0x00bc911c)\n// WARNING: Removing unreachable block (ram,0x00bc8d78)\n// WARNING: Removing unreachable block (ram,0x00bc8d7d)\n// WARNING: Removing unreachable block (ram,0x00bc8d84)\n// WARNING: Removing unreachable block (ram,0x00bc8d87)\n// WARNING: Removing unreachable block (ram,0x00bc8d9f)\n// WARNING: Removing unreachable block (ram,0x00bc8da1)\n// WARNING: Removing unreachable block (ram,0x00bc8dab)\n// WARNING: Removing unreachable block (ram,0x00bc8dae)\n// WARNING: Removing unreachable block (ram,0x00bc8db5)\n// WARNING: Removing unreachable block (ram,0x00bc8db8)\n// WARNING: Removing unreachable block (ram,0x00bc910e)\n// WARNING: Removing unreachable block (ram,0x00bc912c)\n// WARNING: Removing unreachable block (ram,0x00bc8dc4)\n// WARNING: Removing unreachable block (ram,0x00bc90ff)\n// WARNING: Removing unreachable block (ram,0x00bc8dd0)\n// WARNING: Removing unreachable block (ram,0x00bc8de0)\n// WARNING: Removing unreachable block (ram,0x00bc8de2)\n// WARNING: Removing unreachable block (ram,0x00bc8dec)\n// WARNING: Removing unreachable block (ram,0x00bc8df5)\n// WARNING: Removing unreachable block (ram,0x00bc90e5)\n// WARNING: Removing unreachable block (ram,0x00bc8e00)\n// WARNING: Removing unreachable block (ram,0x00bc8e17)\n// WARNING: Removing unreachable block (ram,0x00bc8e29)\n// WARNING: Removing unreachable block (ram,0x00bc8e3a)\n// WARNING: Removing unreachable block (ram,0x00bc8e79)\n// WARNING: Removing unreachable block (ram,0x00bc8e82)\n// WARNING: Removing unreachable block (ram,0x00bc90c2)\n// WARNING: Removing unreachable block (ram,0x00bc8e90)\n// WARNING: Removing unreachable block (ram,0x00bc8ea2)\n// WARNING: Removing unreachable block (ram,0x00bc8ea7)\n// WARNING: Removing unreachable block (ram,0x00bc8eb4)\n// WARNING: Removing unreachable block (ram,0x00bc8eba)\n// WARNING: Removing unreachable block (ram,0x00bc8ec0)\n// WARNING: Removing unreachable block (ram,0x00bc8ecb)\n// WARNING: Removing unreachable block (ram,0x00bc8ed0)\n// WARNING: Removing unreachable block (ram,0x00bc8edd)\n// WARNING: Removing unreachable block (ram,0x00bc8ee2)\n// WARNING: Removing unreachable block (ram,0x00bc8e9a)\n// WARNING: Removing unreachable block (ram,0x00bc90d9)\n// WARNING: Removing unreachable block (ram,0x00bc90df)\n// WARNING: Removing unreachable block (ram,0x00bc8ee6)\n// WARNING: Removing unreachable block (ram,0x00bc8ef4)\n// WARNING: Removing unreachable block (ram,0x00bc8efb)\n// WARNING: Removing unreachable block (ram,0x00bc8f07)\n// WARNING: Removing unreachable block (ram,0x00bc8f27)\n// WARNING: Removing unreachable block (ram,0x00bc8f2c)\n// WARNING: Removing unreachable block (ram,0x00bc8f31)\n// WARNING: Removing unreachable block (ram,0x00bc8f34)\n// WARNING: Removing unreachable block (ram,0x00bc8f3b)\n// WARNING: Removing unreachable block (ram,0x00bc8f3e)\n// WARNING: Removing unreachable block (ram,0x00bc8f4a)\n// WARNING: Removing unreachable block (ram,0x00bc8f53)\n// WARNING: Removing unreachable block (ram,0x00bc8f62)\n// WARNING: Removing unreachable block (ram,0x00bc8f79)\n// WARNING: Removing unreachable block (ram,0x00bc8f7d)\n// WARNING: Removing unreachable block (ram,0x00bc8faf)\n// WARNING: Removing unreachable block (ram,0x00bc8fb4)\n// WARNING: Removing unreachable block (ram,0x00bc8fc0)\n// WARNING: Removing unreachable block (ram,0x00bc8fcf)\n// WARNING: Removing unreachable block (ram,0x00bc8fd5)\n// WARNING: Removing unreachable block (ram,0x00bc8fd6)\n// WARNING: Removing unreachable block (ram,0x00bc9001)\n// WARNING: Removing unreachable block (ram,0x00bc900b)\n// WARNING: Removing unreachable block (ram,0x00bc901d)\n// WARNING: Removing unreachable block (ram,0x00bc9021)\n// WARNING: Removing unreachable block (ram,0x00bc902b)\n// WARNING: Removing unreachable block (ram,0x00bc9039)\n// WARNING: Removing unreachable block (ram,0x00bc9075)\n// WARNING: Removing unreachable block (ram,0x00bc9041)\n// WARNING: Removing unreachable block (ram,0x00bc906c)\n// WARNING: Removing unreachable block (ram,0x00bc904c)\n// WARNING: Removing unreachable block (ram,0x00bc9064)\n// WARNING: Removing unreachable block (ram,0x00bc905d)\n// WARNING: Removing unreachable block (ram,0x00bc9070)\n// WARNING: Removing unreachable block (ram,0x00bc9079)\n// WARNING: Removing unreachable block (ram,0x00bc907c)\n// WARNING: Removing unreachable block (ram,0x00bc90a8)\n// WARNING: Removing unreachable block (ram,0x00bc9089)\n// WARNING: Removing unreachable block (ram,0x00bc90e2)\n// WARNING: Removing unreachable block (ram,0x00bc90ed)\n// WARNING: Removing unreachable block (ram,0x00bc9131)\n// WARNING: Variable defined which should be unmapped: var_80h\n\nvoid __cdecl\nfcn.00bc89df(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.00bb8d68();\n        *puVar2 = 0x16;\n        fcn.00bb8ff6();\n        fcn.00bbc836(arg_8h);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x00bc8a6e. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0xbc9157\n    (**0xbc9157)();\n    return;\n}\n",
        "token_count": 1968
    },
    "00bc9187": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nushort __cdecl fcn.00bc9187(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    uint32_t arg_8h_00;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t arg_10h;\n    int32_t iVar5;\n    int64_t iVar6;\n    uint var_4h;\n    \n    piVar2 = arg_ch;\n    arg_8h_00 = fcn.00bb4916(arg_ch);\n    uVar1 = arg_ch[3];\n    if ((uVar1 & 0x82) == 0) {\n        puVar3 = fcn.00bb8d68();\n        *puVar3 = 9;\ncode_r0x00bc91ac:\n        arg_ch[3] = arg_ch[3] | 0x20;\n        return 0xffff;\n    }\n    if ((uVar1 & 0x40) != 0) {\n        puVar3 = fcn.00bb8d68();\n        *puVar3 = 0x22;\n        goto code_r0x00bc91ac;\n    }\n    iVar5 = 0;\n    if ((uVar1 & 1) != 0) {\n        arg_ch[1] = 0;\n        if ((uVar1 & 0x10) == 0) {\n            arg_ch[3] = uVar1 | 0x20;\n            return 0xffff;\n        }\n        *arg_ch = arg_ch[2];\n        arg_ch[3] = uVar1 & 0xfffffffe;\n    }\n    uVar1 = arg_ch[3];\n    arg_ch[1] = 0;\n    arg_ch[3] = uVar1 & 0xffffffef | 2;\n    if (((uVar1 & 0x10c) == 0) &&\n       (((iVar4 = fcn.00bb6e48(),  arg_ch != iVar4 + 0x20 && (iVar4 = fcn.00bb6e48(),  arg_ch != iVar4 + 0x40)) ||\n        (iVar4 = fcn.00bc5ebb(arg_8h_00),  iVar4 == 0)))) {\n        fcn.00bc6234(arg_ch);\n    }\n    if ((arg_ch[3] & 0x108U) == 0) {\n        var_4h = CONCAT22(var_4h._2_2_, arg_8h);\n        arg_ch = 0x2;\n        iVar5 = fcn.00bbdac6(arg_8h_00, &var_4h, 2);\n    }\n    else {\n        iVar4 = arg_ch[2];\n        arg_10h = *arg_ch - iVar4;\n        *arg_ch = iVar4 + 2;\n        arg_ch[1] = arg_ch[6] + -2;\n        if (arg_10h < 1) {\n            if ((arg_8h_00 == 0xffffffff) || (arg_8h_00 == 0xfffffffe)) {\n                iVar4 = 0xc4fe90;\n            }\n            else {\n                iVar4 = (arg_8h_00 & 0x1f) * 0x40 + *((arg_8h_00 >> 5) * 4 + 0xc549e0);\n            }\n            if (((*(iVar4 + 4) & 0x20) != 0) && (iVar6 = fcn.00bc1a15(arg_8h_00, 0, 0, 2),  iVar6 == -1))\n            goto code_r0x00bc92d4;\n        }\n        else {\n            iVar5 = fcn.00bbdac6(arg_8h_00, iVar4, arg_10h);\n        }\n        *arg_ch[2] = arg_8h;\n        arg_ch = arg_10h;\n    }\n    if (iVar5 == arg_ch) {\n        return arg_8h;\n    }\ncode_r0x00bc92d4:\n    piVar2[3] = piVar2[3] | 0x20;\n    return 0xffff;\n}\n",
        "token_count": 932
    },
    "00be6401": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00be6401(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00b977c7();\n    if (*(in_ECX + 4) <= arg_ch && arg_ch != *(in_ECX + 4)) {\n        arg_ch = *(in_ECX + 4);\n    }\n    if ((arg_10h == 0xffffffff) || (*(in_ECX + 4) - arg_ch < arg_10h)) {\n        arg_10h = *(in_ECX + 4) - arg_ch;\n    }\n    fcn.00b979ab(in_ECX, arg_ch, arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 170
    },
    "00be6920": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint8_t __fastcall fcn.00be6920(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint lpMsg;\n    int32_t var_18h;\n    \n    if (((*0xc56281 == '\\0') || (*(param_1 + 0x145) != '\\0')) && ((*0xc567e8 == '\\0' || (*(param_1 + 0xf8) != 0)))) {\n        iVar4 = (*_sym.imp.USER32.dll_PeekMessageW)(&lpMsg, 0, 0, 0, 1);\n        while (iVar4 != 0) {\n            if (var_18h == 0x12) {\n                *(param_1 + 0xfc) = 1;\n                *(param_1 + 0xf8) = 1;\n                break;\n            }\n            if (*0xc567d8 == -1) {\ncode_r0x00be69bc:\n                iVar4 = fcn.00b931ce(&lpMsg);\n                if (iVar4 == 0) {\n                    (*_sym.imp.USER32.dll_TranslateMessage)(&lpMsg);\n                    (*_sym.imp.USER32.dll_DispatchMessageW)(&lpMsg);\n                }\n            }\n            else {\n                if (*0xc56814 <= *0xc567d8) {\ncode_r0x00be69b5:\n                    *0xc567d8 = -1;\n                    goto code_r0x00be69bc;\n                }\n                piVar1 = *(*0xc56810 + *0xc567d8 * 4);\n                iVar4 = *piVar1;\n                if ((iVar4 == 0) || (*(iVar4 + 0x18) == 0)) goto code_r0x00be69b5;\n                puVar2 = *piVar1;\n                iVar4 = (*_sym.imp.USER32.dll_TranslateAcceleratorW)(*puVar2, puVar2[6], &lpMsg);\n                if (iVar4 == 0) goto code_r0x00be69bc;\n            }\n            iVar4 = (*_sym.imp.USER32.dll_PeekMessageW)(&lpMsg, 0, 0, 0, 1);\n        }\n        if (*0xc56282 == '\\x01') {\n            *(param_1 + 0xf8) = 1;\n            *0xc56287 = '\\0';\n            *0xc56282 = '\\0';\n        }\n        if (*(param_1 + 0xf8) == 1) {\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = -(*0xc56287 != '\\0') & 0xb;\n        }\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 634
    },
    "00be6bae": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00be6bae(uint arg_8h, uint hdc)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    \n    iVar1 = fcn.00b92612(arg_8h);\n    iVar1 = **(*0xc56810 + iVar1 * 4);\n    arg_8h_00 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n    if (*(iVar1 + 0x4c) != -1) {\n        arg_8h_00 = *(iVar1 + 0x4c);\n    }\n    (*_sym.imp.GDI32.dll_SetBkColor)(hdc, arg_8h_00);\n    fcn.00b922d0(arg_8h_00, 0);\n    return;\n}\n",
        "token_count": 178
    },
    "00be7ea5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00be7ea5(int32_t **arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    uint var_4ch;\n    uint var_3ch;\n    uint *var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t *var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    *arg_8h = NULL;\n    piVar7 = NULL;\n    if (in_ECX == NULL) {\n        return -0x7fffbffd;\n    }\n    iVar6 = (**(*in_ECX + 0x10))();\n    if (iVar6 < 0) {\n        return iVar6;\n    }\n    iVar6 = (**(*var_ch + 0x48))(var_ch, &var_4h, &var_34h);\n    if (iVar6 < 0) {\n        (**(*var_ch + 8))(var_ch);\n        return iVar6;\n    }\n    if (in_EDX == 0) {\n        var_28h = (**(*var_4h + 0xc))(var_4h);\n        iVar6 = 0;\n        piVar9 = NULL;\n        var_10h = 0;\n        if (var_28h != NULL) {\n            do {\n                if (iVar6 != 0) break;\n                var_1ch = 0;\n                (**(*var_4h + 0x14))(var_4h, piVar9, &var_1ch);\n                if (var_1ch == 5) {\n                    (**(*var_4h + 0x10))(var_4h, piVar9, &var_8h);\n                    (**(*var_8h + 0xc))(var_8h, &var_2ch);\n                    uVar5 = *(var_2ch + 0x30);\n                    var_24h = uVar5;\n                    (**(*var_8h + 0x4c))(var_8h, var_2ch);\n                    if (1 < uVar5) {\n                        var_14h = -1;\n                        uVar8 = 0;\n                        if (var_24h != 0) {\n                            do {\n                                iVar6 = (**(*var_8h + 0x20))(var_8h, uVar8, &var_30h);\n                                if (iVar6 == 0) {\n                                    (**(*var_ch + 0x38))(var_ch, var_30h, &var_18h);\n                                    if (var_14h == -1) {\n                                        (**(*var_18h + 0x48))(var_18h, 0, &var_14h);\n                                    }\n                                    (**(*var_8h + 0x24))(var_8h, uVar8, &var_20h);\n                                    if (((var_14h == var_34h) && ((var_20h & 1) != 0)) && ((var_20h & 2) != 0)) {\n                                        var_10h = 1;\n                                        piVar7 = var_18h;\n                                        break;\n                                    }\n                                    (**(*var_18h + 8))(var_18h);\n                                }\n                                uVar8 = uVar8 + 1;\n                            } while (uVar8 < var_24h);\n                        }\n                    }\n                    iVar6 = var_10h;\n                    (**(*var_8h + 8))(var_8h);\n                }\n                piVar9 = piVar9 + 1;\n            } while (piVar9 < var_28h);\n        }\n        (**(*var_4h + 8))(var_4h);\n        (**(*var_ch + 8))(var_ch);\n    }\n    else {\n        var_10h = 1;\n        iVar6 = (**(*var_4h + 0x2c))(var_4h);\n        (**(*var_4h + 8))(var_4h);\n        (**(*var_ch + 8))(var_ch);\n        if (iVar6 < 0) {\n            return -0x7ffd7fe9;\n        }\n        piVar7 = var_28h;\n        if (var_10h == 0) {\n            return -0x7ffd7fe9;\n        }\n    }\n    if (piVar7 == NULL) {\n        return -0x7ffd7fe9;\n    }\n    (**(*piVar7 + 0xc))(piVar7, &var_38h);\n    var_24h = var_38h[10];\n    uVar1 = *var_38h;\n    uVar2 = var_38h[1];\n    uVar3 = var_38h[2];\n    uVar4 = var_38h[3];\n    if ((*(var_38h + 0x36) & 0x1040) != 0) {\n        var_24h = 4;\n    }\n    (**(*piVar7 + 0x4c))(piVar7, var_38h);\n    if (var_24h == 4) {\n        *arg_8h = piVar7;\n        *arg_ch = uVar1;\n        arg_ch[1] = uVar2;\n        arg_ch[2] = uVar3;\n        arg_ch[3] = uVar4;\n        return 0;\n    }\n    (**(*piVar7 + 8))(piVar7);\n    return -0x7ffd7360;\n}\n",
        "token_count": 1376
    },
    "00be8858": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.00be8858(uint arg_8h, uint arg_ch, uint32_t phNewToken, uint32_t arg_14h, uint noname_4, int32_t arg_1ch, \n            uint32_t arg_20h, uint arg_24h, int32_t arg_28h, uint arg_2ch)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint extraout_ECX;\n    uint8_t uVar5;\n    int32_t hObj;\n    int32_t hObj_00;\n    bool bVar6;\n    uint lpProfileInfo;\n    uint var_54h;\n    int32_t hProfile;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    uint lpCommandLine;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t hExistingToken;\n    \n    fcn.00be86c8();\n    cVar2 = fcn.00be8cc3(extraout_ECX);\n    if (cVar2 == '\\0') {\n        uVar5 = 0;\n        goto code_r0x00be8ae6;\n    }\n    uVar5 = 0;\n    hExistingToken = 0;\n    hObj = 0;\n    hObj_00 = 0;\n    var_8h = 0;\n    var_14h = 0;\n    lpCommandLine = 0;\n    var_ch = 0;\n    fcn.00bb3020(&lpProfileInfo, 0, 0x20);\n    bVar6 = (arg_14h & 1) != 0;\n    lpProfileInfo = 0x20;\n    var_54h = arg_8h;\n    cVar2 = fcn.00be8c93(arg_8h, arg_ch, phNewToken, arg_14h, &hExistingToken, &hExistingToken);\n    if (cVar2 == '\\0') {\ncode_r0x00be8a88:\n        if (hProfile != 0) {\n            (*_sym.imp.USERENV.dll_UnloadUserProfile)(hExistingToken, hProfile);\n        }\n    }\n    else {\n        if ((arg_14h & 2) != 0) {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_DuplicateTokenEx)(hExistingToken, 0, 0, 2, 1, &phNewToken);\n            if (iVar3 == 0) goto code_r0x00be8a88;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hExistingToken);\n            hExistingToken = phNewToken;\n        }\n        hObj = (*_sym.imp.USER32.dll_OpenWindowStationW)(L\"winsta0\", 0, 0x60000);\n        if ((hObj == 0) || (hObj == -1)) goto code_r0x00be8a88;\n        var_14h = (*_sym.imp.USER32.dll_GetProcessWindowStation)();\n        iVar3 = (*_sym.imp.USER32.dll_SetProcessWindowStation)(hObj);\n        if ((iVar3 == 0) ||\n           (((hObj_00 = (*_sym.imp.USER32.dll_OpenDesktopW)(L\"default\", 0, 0, 0x60081),  hObj_00 == 0 || (hObj_00 == -1)\n             ) || (cVar2 = fcn.00be8d5b(hExistingToken, &var_8h),  cVar2 == '\\0')))) goto code_r0x00be8a88;\n        var_2ch._0_2_ = 0xb00;\n        var_28h = 0xf0000000;\n        var_20h._0_2_ = 0x400;\n        var_1ch = 0xf037f;\n        cVar2 = fcn.00be83f4(hObj, var_8h, &var_2ch);\n        if (cVar2 == '\\0') goto code_r0x00be8a88;\n        var_20h._0_2_ = 0;\n        var_1ch = 0xf01ff;\n        cVar2 = fcn.00be81f7(hObj_00, var_8h, &var_20h);\n        if (cVar2 == '\\0') goto code_r0x00be8a88;\n        *(arg_28h + 8) = L\"winsta0\\\\default\";\n        phNewToken = *(arg_28h + 0x2c) & 0x100;\n        if (arg_1ch != 0) {\n            iVar3 = fcn.00bb2e3c(arg_1ch);\n            iVar1 = (iVar3 + 1) * 2;\n            lpCommandLine = fcn.00bb0ff6(-(iVar1 >> 0x20 != 0) | iVar1);\n            fcn.00bb2ffc(lpCommandLine, arg_1ch);\n        }\n        if ((((bVar6) && (iVar3 = (*_sym.imp.USERENV.dll_LoadUserProfileW)(hExistingToken, &lpProfileInfo),  iVar3 == 0)\n             ) || (((arg_14h & 4) == 0 &&\n                   (iVar3 = (*_sym.imp.USERENV.dll_CreateEnvironmentBlock)(&var_ch, hExistingToken, 0),  iVar3 == 0))))\n           || (iVar3 = (*_sym.imp.ADVAPI32.dll_CreateProcessAsUserW)\n                                 (hExistingToken, 0, lpCommandLine, 0, 0, phNewToken, arg_20h | 0x400, var_ch, arg_24h, \n                                  arg_28h, arg_2ch),  iVar3 == 0)) goto code_r0x00be8a88;\n        if (bVar6) {\n            fcn.00be8e03(arg_2ch, &hProfile, &hExistingToken);\n        }\n        uVar5 = 1;\n    }\n    fcn.00be86b3();\n    if (hObj != 0) {\n        (*_sym.imp.USER32.dll_CloseWindowStation)(hObj);\n    }\n    if (hObj_00 != 0) {\n        (*_sym.imp.USER32.dll_CloseDesktop)(hObj_00);\n    }\n    if (var_14h != 0) {\n        (*_sym.imp.USER32.dll_SetProcessWindowStation)(var_14h);\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(hExistingToken);\n    fcn.00bb106c(lpCommandLine);\n    if (var_ch != 0) {\n        (*_sym.imp.USERENV.dll_DestroyEnvironmentBlock)(var_ch);\n    }\ncode_r0x00be8ae6:\n    uVar4 = fcn.00be8713();\n    return uVar4 & 0xffffff00 | uVar5;\n}\n",
        "token_count": 1567
    },
    "00be8f01": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00be8f01(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint *in_ECX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint Msg;\n    \n    (*_sym.imp.USER32.dll_GetWindowRect)(*in_ECX, &lpRect);\n    if (arg_10h == 0xffffffff) {\n        arg_10h = (var_ch - lpRect) / 2;\n    }\n    if (arg_14h == -1) {\n        arg_14h = (var_8h - var_10h) / 2;\n    }\n    uVar1 = 1;\n    uVar2 = arg_14h << 0x10 | arg_10h & 0xffff;\n    arg_14h = 0x201;\n    arg_10h = 0x203;\n    Msg = 0x202;\n    if (arg_8h == 2) {\n        arg_14h = 0x204;\n        Msg = 0x205;\n        uVar1 = 2;\n    }\n    else {\n        if (arg_8h != 1) goto code_r0x00be8f99;\n        arg_14h = 0x207;\n        Msg = 0x208;\n        uVar1 = 0x10;\n    }\n    arg_10h = 0x206;\ncode_r0x00be8f99:\n    arg_8h = 1;\n    if (0 < arg_ch) {\n        do {\n            uVar3 = arg_14h;\n            if ((arg_8h - (arg_8h >> 0x1f) & 0xfffffffe) == arg_8h) {\n                uVar3 = arg_10h;\n            }\n            (*_sym.imp.USER32.dll_PostMessageW)(*in_ECX, uVar3, uVar1, uVar2);\n            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n            (*_sym.imp.USER32.dll_PostMessageW)(*in_ECX, Msg, 0, uVar2);\n            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n            arg_8h = arg_8h + 1;\n        } while (arg_8h <= arg_ch);\n    }\n    return 1;\n}\n",
        "token_count": 565
    },
    "00be92e7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00be92e7(uint *lParam, uint32_t *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint extraout_ECX;\n    uint uVar3;\n    uint extraout_ECX_00;\n    uint *puVar4;\n    uint var_10h;\n    \n    fcn.00b97f41(L\"ComboBox\");\n    puVar4 = &var_10h;\n    uVar3 = extraout_ECX;\n    cVar1 = fcn.00beb0c4(puVar4);\n    fcn.00b95a64(puVar4, uVar3);\n    if (cVar1 == '\\0') {\n        fcn.00b97f41(L\"ListBox\");\n        puVar4 = &var_10h;\n        uVar3 = extraout_ECX_00;\n        cVar1 = fcn.00beb0c4(puVar4);\n        uVar2 = fcn.00b95a64(puVar4, uVar3);\n        if (cVar1 == '\\0') {\n            return uVar2 & 0xffffff00;\n        }\n        uVar3 = 0x1a2;\n    }\n    else {\n        uVar3 = 0x158;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, uVar3, 0xffffffff, *lParam);\n    *arg_ch = uVar2;\n    return uVar2 & 0xffffff00 | uVar2 != 0xffffffff;\n}\n",
        "token_count": 356
    },
    "00be9372": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00be9372(uint arg_8h)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint *in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint *puVar7;\n    uint var_1ch;\n    uint32_t wParam;\n    uint Msg;\n    \n    fcn.00b97f41(L\"ComboBox\");\n    puVar7 = &var_1ch;\n    uVar5 = extraout_ECX;\n    cVar2 = fcn.00beb0c4(puVar7);\n    fcn.00b95a64(puVar7, uVar5);\n    if (cVar2 == '\\0') {\n        fcn.00b97f41(L\"ListBox\");\n        puVar7 = &var_1ch;\n        uVar5 = extraout_ECX_00;\n        cVar2 = fcn.00beb0c4(puVar7);\n        uVar4 = fcn.00b95a64(puVar7, uVar5);\n        if (cVar2 == '\\0') goto code_r0x00be9466;\n        uVar3 = 0x188;\n        Msg = 0x189;\n        uVar5 = 0x18a;\n    }\n    else {\n        uVar3 = 0x147;\n        Msg = 0x148;\n        uVar5 = 0x149;\n    }\n    uVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, uVar3, 0, 0);\n    if ((uVar4 != 0xffffffff) &&\n       (wParam = uVar4,  uVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, uVar5, uVar4, 0),  uVar4 != 0xffffffff)) {\n        iVar1 = (uVar4 + 0x101) * 2;\n        uVar5 = fcn.00bb0ff6(-(iVar1 >> 0x20 != 0) | iVar1);\n        iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, Msg, wParam, uVar5);\n        if (iVar6 != -1) {\n            fcn.00b97d2c(uVar5);\n        }\n        else {\n            fcn.00b97d2c(0xc1f910);\n        }\n        uVar4 = fcn.00bb106c(uVar5);\n        return uVar4 & 0xffffff00 | iVar6 != -1;\n    }\ncode_r0x00be9466:\n    return uVar4 & 0xffffff00;\n}\n",
        "token_count": 619
    },
    "00be9471": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00be9471(uint *arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *in_ECX;\n    uint extraout_ECX;\n    uint uVar6;\n    uint extraout_ECX_00;\n    uint *puVar7;\n    uint var_1ch;\n    uint *hWnd;\n    int32_t var_8h;\n    \n    hWnd = in_ECX;\n    fcn.00b97f41(L\"ComboBox\");\n    puVar7 = &var_1ch;\n    uVar6 = extraout_ECX;\n    cVar3 = fcn.00beb0c4(puVar7);\n    fcn.00b95a64(puVar7, uVar6);\n    if (cVar3 == '\\0') {\n        fcn.00b97f41(L\"ListBox\");\n        puVar7 = &var_1ch;\n        uVar6 = extraout_ECX_00;\n        cVar3 = fcn.00beb0c4(puVar7);\n        fcn.00b95a64(puVar7, uVar6);\n        if (cVar3 == '\\0') {\n            return 0;\n        }\n        uVar6 = 0x18c;\n        var_8h = 2;\n    }\n    else {\n        uVar6 = 0x14d;\n        var_8h = 9;\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, uVar6, 0xffffffff, *arg_8h);\n    if (iVar4 == -1) {\n        return 0;\n    }\n    uVar5 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*in_ECX, *in_ECX);\n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    uVar6 = (*_sym.imp.USER32.dll_GetParent)(*in_ECX, 0x111, uVar5 & 0xffff | 0x10000);\n    (*pcVar2)(uVar6);\n    uVar5 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*hWnd, *hWnd);\n    uVar6 = (*pcVar1)(*hWnd, 0x111, uVar5 & 0xffff | var_8h << 0x10);\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar6);\n    return 1;\n}\n",
        "token_count": 573
    },
    "00be955c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00be955c(uint arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint *puVar7;\n    uint var_1ch;\n    uint *hWnd;\n    int32_t var_8h;\n    \n    hWnd = in_ECX;\n    fcn.00b97f41(L\"ComboBox\");\n    puVar7 = &var_1ch;\n    uVar4 = extraout_ECX;\n    cVar3 = fcn.00beb0c4(puVar7);\n    fcn.00b95a64(puVar7, uVar4);\n    if (cVar3 == '\\0') {\n        fcn.00b97f41(L\"ListBox\");\n        puVar7 = &var_1ch;\n        uVar4 = extraout_ECX_00;\n        cVar3 = fcn.00beb0c4(puVar7);\n        fcn.00b95a64(puVar7, uVar4);\n        if (cVar3 == '\\0') {\n            return 0;\n        }\n        uVar4 = 0x186;\n        var_8h = 2;\n    }\n    else {\n        uVar4 = 0x14e;\n        var_8h = 9;\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, uVar4, arg_8h, 0);\n    if (iVar5 == -1) {\n        return 0;\n    }\n    uVar6 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*in_ECX, *in_ECX);\n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    uVar4 = (*_sym.imp.USER32.dll_GetParent)(*in_ECX, 0x111, uVar6 & 0xffff | 0x10000);\n    (*pcVar2)(uVar4);\n    uVar6 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*hWnd, *hWnd);\n    uVar4 = (*pcVar1)(*hWnd, 0x111, uVar6 & 0xffff | var_8h << 0x10);\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar4);\n    return 1;\n}\n",
        "token_count": 569
    },
    "00be9989": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00be9989(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint arg_ch_00;\n    uint *in_ECX;\n    uint var_bch;\n    uint var_38h;\n    uint32_t var_2ch;\n    uint var_28h;\n    \n    fcn.00ba62e0();\n    var_28h = 2;\n    var_2ch = -(arg_8h != '\\0') & 2;\n    arg_ch_00 = fcn.00bf18ee(0x34, *in_ECX);\n    fcn.00bf19cc(&var_38h, arg_ch_00, 0x34);\n    if (arg_ch == -1) {\n        (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x102b, 0xffffffff, arg_ch_00);\n    }\n    else {\n        for (; arg_ch <= arg_10h; arg_ch = arg_ch + 1) {\n            (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x102b, arg_ch, arg_ch_00);\n        }\n    }\n    fcn.00ba62c5();\n    return 1;\n}\n",
        "token_count": 278
    },
    "00be9bf6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00be9bf6(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_ECX;\n    \n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x130b, 0, 0);\n    *arg_8h = iVar1;\n    if (iVar1 == -1) {\n        uVar2 = 0xffffff00;\n    }\n    else {\n        *arg_8h = iVar1 + 1;\n        uVar2 = CONCAT31(iVar1 + 1 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 151
    },
    "00be9c21": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00be9c21(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    arg_8h_00 = fcn.00be9e2e(arg_8h);\n    if (arg_8h_00 != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x1127, arg_8h_00, 0xf000);\n        uVar2 = uVar2 >> 0xc;\n        if ((((uVar2 != 0) && ((arg_ch != '\\0' || (uVar2 != 1)))) && ((arg_ch != '\\x01' || (uVar2 != 2)))) &&\n           (cVar1 = fcn.00be9cd7(arg_8h_00, &var_8h),  cVar1 != '\\0')) {\n            fcn.00be8f01(0, 1, var_8h, var_4h);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 301
    },
    "00beb0c4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00beb0c4(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint extraout_ECX;\n    uint arg_8h_00;\n    uint uVar3;\n    uint lpClassName;\n    uint var_10h;\n    \n    fcn.00b977c7();\n    (*_sym.imp.USER32.dll_GetClassNameW)(*in_ECX, &lpClassName, 0xff);\n    fcn.00b97d2c(&lpClassName);\n    arg_8h_00 = *arg_8h;\n    uVar3 = extraout_ECX;\n    iVar1 = fcn.00beaeac(arg_8h_00);\n    uVar2 = fcn.00b95a64(arg_8h_00, uVar3);\n    return uVar2 & 0xffffff00 | iVar1 != -1;\n}\n",
        "token_count": 211
    },
    "00bf03ab": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf03ab(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint16_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t arg_8h_00;\n    \n    piVar1 = arg_ch;\n    iVar6 = 1;\n    arg_8h_00 = *(arg_8h + 4) + -1;\n    *arg_ch = 0;\n    arg_ch = NULL;\n    while (-1 < arg_8h_00) {\n        puVar2 = fcn.00b97b20(arg_8h_00);\n        uVar3 = *puVar2;\n        if ((*puVar2 < 0x30) || (0x39 < uVar3)) {\n            if ((uVar3 < 0x41) || (0x46 < uVar3)) {\n                if ((uVar3 < 0x61) || (0x66 < uVar3)) goto code_r0x00bf0427;\n                iVar4 = uVar3 - 0x57;\n            }\n            else {\n                iVar4 = uVar3 - 0x37;\n            }\n        }\n        else {\n            iVar4 = uVar3 - 0x30;\n        }\n        iVar4 = iVar4 * iVar6;\n        iVar6 = iVar6 << 4;\n        *piVar1 = *piVar1 + iVar4;\n        arg_8h_00 = arg_8h_00 + -1;\n        arg_ch = arg_ch + 1;\n        if (7 < arg_ch) break;\n    }\n    if (arg_8h_00 == -1) {\n        uVar5 = 1;\n    }\n    else {\ncode_r0x00bf0427:\n        *piVar1 = 0;\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 445
    },
    "00bf1c09": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf1c09(uint arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    uVar1 = *(in_ECX + 8);\n    iVar2 = *(in_ECX + 0xc);\n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    if ((uVar1 == 0xffffffff) && (iVar2 == 0x7fffffff)) {\n        uVar3 = 0;\n    }\n    else {\n        if ((uVar1 == 0) && (iVar2 == -0x80000000)) {\n            *(in_ECX + 8) = 0;\n            *(in_ECX + 0xc) = 0;\n        }\n        else {\n            *(in_ECX + 8) = uVar1 + 1;\n            *(in_ECX + 0xc) = iVar2 + (0xfffffffe < uVar1);\n        }\n        *arg_ch = *(in_ECX + 8);\n        uVar3 = *(in_ECX + 0xc);\n        arg_ch[1] = uVar3;\n        uVar3 = fcn.00bf2606(*arg_ch, uVar3, arg_8h);\n    }\n    return uVar3;\n}\n",
        "token_count": 303
    },
    "00bf26f9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00bf26f9(uint arg_8h, int16_t *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint lpmi;\n    uint32_t var_34h;\n    uint var_30h;\n    int32_t var_28h;\n    int32_t hMenu;\n    int32_t var_18h;\n    int16_t *var_14h;\n    int32_t var_8h;\n    \n    if (arg_10h != -1) {\n        if (arg_10h < 7) {\n            return 0;\n        }\n        if (0x206 < arg_10h) {\n            return 0;\n        }\n    }\n    arg_8h_00 = fcn.00bf2972();\n    if (arg_8h_00 == -1) {\n        return 0;\n    }\n    piVar1 = in_ECX[arg_8h_00 + 0x6d];\n    lpmi = 0x30;\n    fcn.00bb3020(&var_34h, 0, 0x2c);\n    if (arg_10h == -1) {\n        *piVar1 = *in_ECX;\n    }\n    else {\n        var_8h = -1;\n        cVar2 = fcn.00bf2f4c(arg_10h, &var_8h);\n        if (cVar2 == '\\0') {\ncode_r0x00bf288d:\n            fcn.00bf28a0(arg_8h_00);\n            return 0;\n        }\n        var_34h = 4;\n        iVar3 = *in_ECX[var_8h + 0x6d];\n        *piVar1 = iVar3;\n        iVar3 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(iVar3, var_8h, 0, &lpmi);\n        if (((iVar3 == 0) || (*piVar1 = hMenu,  hMenu == 0)) ||\n           (iVar3 = (*_sym.imp.USER32.dll_IsMenu)(hMenu),  iVar3 == 0)) goto code_r0x00bf288d;\n    }\n    *(piVar1 + 5) = 0;\n    var_34h = 0x32;\n    var_30h = 0;\n    var_14h = arg_ch;\n    var_28h = arg_8h_00;\n    var_18h = arg_8h_00;\n    if (arg_8h == 0) {\n        if (*arg_ch == 0) {\n            var_30h = 0x800;\n        }\n        else if (arg_18h == 1) {\n            var_30h = 0x200;\n            *(piVar1 + 5) = 1;\n        }\n        *(piVar1 + 1) = 0;\n    }\n    else if (arg_8h == 1) {\n        iVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n        if (iVar3 == 0) goto code_r0x00bf27f0;\n        var_34h = var_34h | 4;\n        *(piVar1 + 1) = 1;\n        hMenu = iVar3;\n    }\n    if ((((*(in_ECX + 1) != '\\0') && (*(in_ECX + 2) != '\\0')) && ((6 < arg_8h_00 && (*piVar1 == *in_ECX)))) &&\n       ((iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*in_ECX),  arg_14h == -1 || (iVar3 + -4 < arg_14h + 1)))) {\n        arg_14h = iVar3 + -4;\n    }\n    iVar3 = (*_sym.imp.USER32.dll_InsertMenuItemW)(*piVar1, arg_14h, 1, &lpmi);\n    if (iVar3 != 0) {\n        in_ECX[0x275] = arg_8h_00;\n        return arg_8h_00;\n    }\ncode_r0x00bf27f0:\n    fcn.00bf2c42(arg_8h_00);\n    return 0;\n}\n",
        "token_count": 993
    },
    "00bf2f4c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00bf2f4c(uint *arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint *puVar2;\n    \n    *arg_ch = 0xffffffff;\n    if (((arg_8h < 0) && (puVar2 = arg_ch,  arg_8h = *(in_ECX + 0x9d4),  *(in_ECX + 0x9d4) == 0xffffffff)) ||\n       (puVar2 = arg_8h,  *arg_ch = puVar2,  0x206 < puVar2)) {\n        uVar1 = puVar2 & 0xffffff00;\n    }\n    else {\n        uVar1 = puVar2 & 0xffffff00 | *(in_ECX + 0x1b4 + puVar2 * 4) != 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 214
    },
    "00bf3a2b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00bf3a2b(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *arg_8h_00;\n    uint lpFindFileData;\n    uint var_29ch;\n    uint var_74h;\n    uint var_64h;\n    uint var_54h;\n    uint var_44h;\n    uint lpFileName;\n    uint *var_24h;\n    uint lpExistingFileName;\n    char var_3h;\n    char var_2h;\n    uint var_1h;\n    \n    uVar6 = 0;\n    var_1h._0_1_ = 0;\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b948ae();\n    fcn.00b948ae();\n    var_3h = fcn.00bf4c69();\n    cVar2 = fcn.00bf4cd3();\n    if (cVar2 != '\\0') {\n        fcn.00b97e0b(L\"\\\\*.*\");\n    }\n    cVar2 = fcn.00bf4cd3();\n    if (cVar2 != '\\0') {\n        fcn.00b97e0b(L\"\\\\*.*\");\n    }\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b946f9(&var_64h, 0, 0);\n    iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, &lpFindFileData);\n    pcVar1 = _sym.imp.KERNEL32.dll_DeleteFileW;\n    var_2h = '\\x01';\n    if (iVar3 != -1) {\n        while (var_2h == '\\x01') {\n            if ((lpFindFileData & 0x10) == 0) {\n                arg_8h_00 = &var_29ch;\n                fcn.00b97f41(arg_8h_00);\n                fcn.00bf42ad(&var_24h);\n                fcn.00b95a64();\n                fcn.00b981a7(&var_54h);\n                fcn.00b97c8e(&var_64h);\n                fcn.00b97e0b(&var_29ch);\n                cVar2 = fcn.00bf3e73();\n                if (cVar2 == '\\0') {\ncode_r0x00bf3b89:\n                    if (arg_ch == '\\x01') {\n                        arg_8h_00 = var_24h;\n                        if (var_3h == '\\0') goto code_r0x00bf3b97;\n                        cVar2 = fcn.00bf3c40();\n                        if (cVar2 == '\\0') goto code_r0x00bf3bf4;\n                        uVar5 = (*pcVar1)(lpExistingFileName);\n                    }\n                    else {\n                        uVar5 = fcn.00bf3c40();\n                        uVar5 = uVar5 & 0xff;\n                    }\ncode_r0x00bf3bc9:\n                    if (uVar5 != 0) {\n                        var_1h._0_1_ = 1;\n                        goto code_r0x00bf3bd1;\n                    }\n                }\n                else if (arg_8h != '\\0') {\n                    iVar4 = fcn.00b97a68(&var_24h, 0);\n                    if (iVar4 != 0) {\n                        (*pcVar1)(var_24h);\n                        goto code_r0x00bf3b89;\n                    }\ncode_r0x00bf3b97:\n                    uVar5 = (*_sym.imp.KERNEL32.dll_MoveFileW)(lpExistingFileName, arg_8h_00);\n                    goto code_r0x00bf3bc9;\n                }\ncode_r0x00bf3bf4:\n                (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n                goto code_r0x00bf3c07;\n            }\ncode_r0x00bf3bd1:\n            iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar3, &lpFindFileData);\n            if (iVar4 == 0) {\n                var_2h = '\\0';\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n    uVar6 = var_1h;\ncode_r0x00bf3c07:\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    uVar5 = fcn.00b95a64();\n    return uVar5 & 0xffffff00 | uVar6;\n}\n",
        "token_count": 1155
    },
    "00bf3c66": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00bf3c66(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *piStack24;\n    \n    uVar5 = 0xc1fac0;\n    **(param_1 + 0xc) = **(param_1 + 0xc) + 1;\n    fcn.00b97886(0xc1fac0);\n    iVar4 = unaff_EBX;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(unaff_EBX);\n    if (uVar2 == 0xffffffff) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar1 = 0;\n        if (iVar3 == 2) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(unaff_EBX, 0);\n            if (iVar3 != 0) goto code_r0x00bf3d37;\n        }\n        else if (iVar3 != 3) goto code_r0x00bf3d3b;\n        iVar4 = 0xc1fac0;\n        *piStack24 = *piStack24 + 1;\n        uVar5 = 0xbf3cfb;\n        iVar3 = fcn.00b97e2f(0xc1fac0);\n        if (iVar3 != -1) {\n            uVar5 = 0xffffffff;\n            fcn.00b97e8c(iVar3, 0xffffffff);\n            uVar1 = fcn.00bf3c66();\n            iVar4 = iVar3;\n            if (uVar1 != 0) {\n                iVar4 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(unaff_EBX, 0);\n                uVar1 = iVar4 != 0;\n                iVar4 = iVar3;\n            }\n        }\n        fcn.00b95a64(iVar4, uVar5);\n    }\n    else {\n        if ((uVar2 & 0x10) == 0) {\ncode_r0x00bf3d3b:\n            uVar1 = 0;\n            goto code_r0x00bf3d3d;\n        }\ncode_r0x00bf3d37:\n        uVar1 = 1;\n    }\ncode_r0x00bf3d3d:\n    uVar2 = fcn.00b95a64(iVar4, uVar5);\n    return uVar2 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 588
    },
    "00bf3d4e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00bf3d4e(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uchar *puVar6;\n    uint32_t uVar7;\n    uint32_t uStack652;\n    uchar auStack644 [12];\n    uchar auStack632 [12];\n    uchar auStack620 [8];\n    uint8_t auStack612 [8];\n    uchar auStack604 [28];\n    uchar auStack576 [572];\n    \n    uVar5 = 0;\n    uStack652 = uStack652;\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b948ae();\n    uVar4 = 0;\n    cVar1 = fcn.00bf4cd3();\n    if (cVar1 != '\\0') {\n        uVar4 = 0;\n        fcn.00b97e0b(L\"\\\\*.*\");\n    }\n    fcn.00b946f9(auStack620, 0, 0);\n    puVar6 = auStack604;\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(uStack652, puVar6);\n    cVar1 = '\\x01';\n    uVar7 = 0x10000;\n    if (iVar2 != -1) {\n        while (cVar1 == '\\x01') {\n            if ((auStack612[0] & 0x10) == 0) {\n                uVar7 = uVar7 & 0xffffff;\n                fcn.00b981a7(auStack644);\n                fcn.00b97c8e(auStack632);\n                fcn.00b97e0b(auStack576);\n                iVar3 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(puVar6);\n                if (iVar3 != 1) {\n                    (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n                    goto code_r0x00bf3e50;\n                }\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar2, auStack612);\n            cVar1 = uVar7 >> 0x10;\n            if (iVar3 == 0) {\n                cVar1 = '\\0';\n                uVar7 = 0;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n    uVar5 = uVar4 >> 0x18;\ncode_r0x00bf3e50:\n    fcn.00b95a64();\n    fcn.00b95a64();\n    uVar4 = fcn.00b95a64();\n    return uVar4 & 0xffffff00 | uVar5;\n}\n",
        "token_count": 644
    },
    "00bf3e73": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00bf3e73(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00bf4696();\n    return uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n}\n",
        "token_count": 57
    },
    "00bf3e83": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00bf3e83(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00bf4696();\n    return uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n}\n",
        "token_count": 57
    },
    "00bf3fa0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00bf3fa0(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_3ch;\n    uint var_20h;\n    uint lpInBuffer;\n    uint var_10h;\n    uint var_ch;\n    int32_t hObject;\n    uint var_4h;\n    \n    *param_2 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(param_1, 0x80, 3, 0, 3, 0x80, 0);\n    if (iVar1 != -1) {\n        lpInBuffer = 0;\n        var_10h = 0;\n        puVar3 = &var_3ch;\n        hObject = iVar1;\n        for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        var_ch = 0;\n        var_4h = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_DeviceIoControl)(iVar1, 0x2d1400, &lpInBuffer, 0xc, &var_3ch, 0x28, &var_4h, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        if (iVar1 != 0) {\n            *param_2 = var_20h;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 357
    },
    "00bf4021": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.00bf4021(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    uint uStack28;\n    uint var_14h;\n    uint lpInBuffer;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(*0xc57428 + 0x25) != '\\0') &&\n       (iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(param_1, 0x80, 3, 0, 3, 0x80, 0),  iVar1 != -1)) {\n        lpInBuffer = 7;\n        var_ch = 0;\n        var_1ch = 0;\n        var_8h = 0;\n        var_4h = 0;\n        uStack28 = 0;\n        var_14h = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_DeviceIoControl)(iVar1, 0x2d1400, &lpInBuffer, 0xc, &var_1ch, 0xc, &var_4h, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        if (iVar2 != 0) {\n            return var_14h != '\\0';\n        }\n    }\n    return 0x80004005;\n}\n",
        "token_count": 322
    },
    "00bf40b1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.00bf40b1(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lpInBuffer;\n    uint var_228h;\n    uint var_224h;\n    uint var_21ch;\n    uint var_20ah;\n    uint var_56h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(param_1, 0xc0000000, 3, 0, 3, 0x80, 0);\n    if (iVar1 != -1) {\n        fcn.00bb3020(&lpInBuffer, 0, 0x228);\n        var_224h = 3;\n        var_20ah._0_1_ = 0xec;\n        var_228h = 0x200;\n        var_4h = 0;\n        lpInBuffer._2_2_ = 2;\n        lpInBuffer._0_2_ = 0x28;\n        var_21ch = 0x28;\n        iVar2 = (*_sym.imp.KERNEL32.dll_DeviceIoControl)\n                          (iVar1, 0x4d02c, &lpInBuffer, 0x200, &lpInBuffer, 0x200, &var_4h, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        if (iVar2 != 0) {\n            return var_56h != 1;\n        }\n    }\n    return 0x80004005;\n}\n",
        "token_count": 358
    },
    "00bf42ad": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf42ad(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    uint *arg_8h_00;\n    uint in_EDX;\n    uint var_84h;\n    uint var_74h;\n    uint var_64h;\n    uint var_54h;\n    uint var_44h;\n    uint var_34h;\n    uint var_24h;\n    uint var_14h;\n    \n    iVar1 = fcn.00bf56ec(0xc49e18);\n    if (iVar1 == -1) {\n        fcn.00b981a7(in_EDX);\n        return;\n    }\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b946f9(0, &var_84h, &var_14h);\n    fcn.00b946f9(&var_64h, &var_54h, &var_34h);\n    piVar2 = fcn.00b97b52(0);\n    if (*piVar2 == 0x2e) {\n        fcn.00b97e8c(0, 1);\n    }\n    piVar2 = fcn.00b97b52(0);\n    if (*piVar2 == 0x2e) {\n        fcn.00b97e8c(0, 1);\n    }\n    fcn.00b981a7(&var_74h);\n    fcn.00b97c8e(&var_64h);\n    fcn.00bf445f(&var_44h);\n    fcn.00bf445f(&var_24h);\n    piVar2 = fcn.00b97b52(0);\n    if (*piVar2 == 0) {\n        piVar2 = fcn.00b97b52(0);\n        if (*piVar2 == 0) goto code_r0x00bf4409;\n        fcn.00b97e0b(0xc1fb80);\n        arg_8h_00 = &var_14h;\n    }\n    else {\n        fcn.00b97e0b(0xc1fb80);\n        arg_8h_00 = &var_44h;\n    }\n    fcn.00b97c8e(arg_8h_00);\ncode_r0x00bf4409:\n    fcn.00b97c8e(&var_24h);\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return;\n}\n",
        "token_count": 697
    },
    "00bf445f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf445f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    uint16_t *puVar3;\n    uint in_EDX;\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = 0;\n    var_8h = 0;\n    fcn.00b97eec();\n    iVar1 = fcn.00bf56ec(0xc49e18);\n    if (iVar1 == -1) {\n        fcn.00b981a7(in_EDX);\n    }\n    else {\n        while (piVar2 = fcn.00b97b20(arg_8h_00),  *piVar2 != 0x2a) {\n            puVar3 = fcn.00b97b20(arg_8h_00);\n            fcn.00b97a84(*puVar3);\n            arg_8h_00 = arg_8h_00 + 1;\n        }\n        while (piVar2 = fcn.00b97b20(var_8h),  *piVar2 != 0) {\n            puVar3 = fcn.00b97b20(var_8h);\n            fcn.00b97a84(*puVar3);\n            var_8h = var_8h + 1;\n        }\n        while( true ) {\n            arg_8h_00 = arg_8h_00 + 1;\n            piVar2 = fcn.00b97b20(arg_8h_00);\n            if (*piVar2 == 0) break;\n            piVar2 = fcn.00b97b20(arg_8h_00);\n            if (*piVar2 != 0x2a) {\n                puVar3 = fcn.00b97b20(arg_8h_00);\n                fcn.00b97a84(*puVar3);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 465
    },
    "00bf45c1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00bf45c1(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar1);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return iVar1 != -1;\n}\n",
        "token_count": 97
    },
    "00bf4696": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar * __fastcall fcn.00bf4696(uint param_1)\n\n{\n    uchar *puVar1;\n    uchar auStack604 [600];\n    \n    puVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    if (puVar1 == 0xffffffff) {\n        puVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(param_1);\n        if (puVar1 != 0xffffffff) {\n            (*_sym.imp.KERNEL32.dll_FindClose)(puVar1);\n            puVar1 = auStack604;\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 138
    },
    "00bf4cd3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00bf4cd3(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    if ((uVar1 != 0xffffffff) && ((uVar1 & 0x10) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 89
    },
    "00bf573e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00bf573e(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    if (param_1 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        if (param_2 == 0xffffffff) {\n            iVar1 = fcn.00bb3980(param_1);\n            param_2 = iVar1 + 1;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 1, param_1, param_2, 0, 0);\n        uVar3 = uVar2;\n        if (uVar2 != 0) {\n            uVar3 = param_2;\n            if (param_2 <= uVar2) {\n                uVar3 = uVar2;\n            }\n            uVar3 = fcn.00bb0ff6(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n            (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 1, param_1, param_2, uVar3, uVar2);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 299
    },
    "00bf5a97": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00bf5a97(int16_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.00bb2e3c(param_1);\n    *param_2 = 0;\n    iVar5 = 1;\n    iVar1 = iVar1 + -1;\n    iVar6 = 0;\n    do {\n        if (iVar1 < 0) break;\n        uVar2 = param_1[iVar1];\n        if ((param_1[iVar1] < 0x30) || (0x39 < uVar2)) {\n            if ((uVar2 < 0x41) || (0x46 < uVar2)) {\n                if ((uVar2 < 0x61) || (0x66 < uVar2)) goto code_r0x00bf5b22;\n                iVar3 = uVar2 - 0x57;\n            }\n            else {\n                iVar3 = uVar2 - 0x37;\n            }\n        }\n        else {\n            iVar3 = uVar2 - 0x30;\n        }\n        iVar3 = iVar3 * iVar5;\n        iVar5 = iVar5 << 4;\n        *param_2 = *param_2 + iVar3;\n        iVar1 = iVar1 + -1;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 8);\n    if (iVar1 == -1) {\ncode_r0x00bf5b19:\n        uVar4 = 1;\n    }\n    else {\n        if ((param_1[1] == 0x78) || (param_1[1] == 0x58)) {\n            if (*param_1 == 0x30) goto code_r0x00bf5b19;\n        }\ncode_r0x00bf5b22:\n        *param_2 = 0;\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 477
    },
    "00bf5b29": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00bf5b29(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (param_1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        if (param_2 == -1) {\n            param_2 = fcn.00bb2e3c(param_1);\n            param_2 = param_2 + 1;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, param_2, 0, 0, 0, 0);\n        iVar2 = iVar1;\n        if (iVar1 != 0) {\n            if (iVar1 < param_2) {\n                iVar2 = param_2;\n            }\n            iVar2 = fcn.00bb0ff6(iVar2);\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, param_2, iVar2, iVar1, 0, 0);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 266
    },
    "00bf64ff": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00bf64ff(uint arg_8h, uint arg_ch, double *arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint32_t arg_ch_00;\n    float fVar1;\n    char cVar2;\n    uchar uVar3;\n    ushort uVar4;\n    double *arg_10h_00;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    float fVar8;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t iVar9;\n    float10 fVar10;\n    ulong uVar11;\n    int32_t var_ch;\n    double dStack20;\n    uint var_4h;\n    \n    var_4h = 0;\n    arg_10h_00 = fcn.00bf641c(arg_8h, &var_ch, &var_4h);\n    uVar6 = var_4h;\n    if (arg_10h_00 != NULL) {\n        iVar7 = *(in_ECX + 4);\n        var_ch = var_ch * 0x20;\n        iVar5 = *(var_ch + iVar7);\n        iVar9 = *(var_ch + 0x1c + iVar7);\n        arg_ch_00 = *(var_ch + 8 + iVar7);\n        iVar7 = *(var_ch + 4 + iVar7);\n        if (arg_18h != -1) {\n            arg_18h = arg_18h * iVar7;\n            iVar5 = iVar5 + arg_18h;\n            arg_10h_00 = arg_10h_00 + arg_18h;\n        }\n        if (iVar5 < iVar9) {\n            if ((arg_ch_00 & 0x21) != 0) {\n                uVar6 = fcn.00bf675a(arg_ch, arg_ch_00, arg_10h_00, iVar9, iVar5, arg_18h, arg_14h, arg_10h);\n                return uVar6;\n            }\n            cVar2 = arg_14h;\n            if (((arg_ch_00 & 4) != 0) && (arg_18h == -1)) {\n                iVar9 = iVar9 - iVar5;\n                if (cVar2 == '\\0') {\n                    iVar5 = iVar9;\n                    if ((arg_ch_00 & 0x10) != 0) goto code_r0x00bf65e8;\n                }\n                else if ((arg_ch_00 & 0x10) != 0) {\n                    fcn.00bf899f();\n                    iVar7 = fcn.00bf89e2();\n                    if (iVar9 < iVar7) {\n                        iVar7 = iVar9;\n                    }\n                    uVar6 = fcn.00bf899f(extraout_ECX, iVar7);\n                    fcn.00bb1080(arg_10h_00, uVar6);\n                    iVar5 = iVar7;\n                    arg_10h_00 = fcn.00bf899f(extraout_ECX_00, iVar7);\n                    iVar9 = iVar7;\ncode_r0x00bf65e8:\n                    uVar6 = fcn.00bf794e(iVar9);\n                    fcn.00bb1080(uVar6, iVar9, arg_10h_00, iVar5);\n                    return 0;\n                }\n            }\n            if ((arg_ch_00 & 0x40) == 0) {\n                if ((arg_ch_00 & 8) != 0) {\n                    if (iVar7 == 4) {\n                        if (cVar2 != '\\0') {\n                            fVar10 = fcn.00b99cf8();\n                            *arg_10h_00 = fVar10;\n                        }\n                        dStack20 = *arg_10h_00;\n                    }\n                    else {\n                        if (iVar7 != 8) {\n                            return 0;\n                        }\n                        if (cVar2 != '\\0') {\n                            fVar10 = fcn.00b99cf8();\n                            *arg_10h_00 = fVar10;\n                        }\n                        dStack20 = *arg_10h_00;\n                    }\n                    fcn.00b99a20();\n                    *arg_10h = dStack20;\n                    *(arg_10h + 0xc) = 4.203895e-45;\n                    return 0;\n                }\n                if (iVar7 == 1) {\n                    if (cVar2 != '\\0') {\n                        uVar3 = fcn.00b99d46();\n                        *arg_10h_00 = uVar3;\n                    }\n                    if ((arg_ch_00 & 2) == 0) {\n                        fVar8 = *arg_10h_00;\n                    }\n                    else {\n                        fVar8 = *arg_10h_00;\n                    }\n                }\n                else {\n                    if (iVar7 != 2) {\n                        if (iVar7 == 4) {\n                            if (cVar2 != '\\0') {\n                                fVar8 = fcn.00b99d46();\n                                *arg_10h_00 = fVar8;\n                            }\n                            fVar8 = *arg_10h_00;\n                            fcn.00b99a20();\n                            *arg_10h = fVar8;\n                            if ((arg_ch_00 & 2) != 0) {\n                                *(arg_10h + 4) = 0.0;\n                                *(arg_10h + 0xc) = 2.802597e-45;\n                                return 0;\n                            }\n                            *(arg_10h + 0xc) = 1.401298e-45;\n                            return 0;\n                        }\n                        if (iVar7 != 8) {\n                            return 0;\n                        }\n                        if (cVar2 != '\\0') {\n                            uVar11 = fcn.00b99d46();\n                            *arg_10h_00 = uVar11;\n                            *(arg_10h_00 + 4) = uVar11 >> 0x20;\n                        }\n                        fVar8 = *arg_10h_00;\n                        fVar1 = *(arg_10h_00 + 4);\n                        fcn.00b99a20();\n                        *(arg_10h + 0xc) = 2.802597e-45;\n                        *(arg_10h + 4) = fVar1;\n                        goto code_r0x00bf674d;\n                    }\n                    if (cVar2 != '\\0') {\n                        uVar4 = fcn.00b99d46();\n                        *arg_10h_00 = uVar4;\n                    }\n                    if ((arg_ch_00 & 2) == 0) {\n                        fVar8 = *arg_10h_00;\n                    }\n                    else {\n                        fVar8 = *arg_10h_00;\n                    }\n                }\n                fcn.00b99a20();\n                *(arg_10h + 0xc) = 1.401298e-45;\n            }\n            else {\n                if (cVar2 != '\\0') {\n                    fVar8 = fcn.00bf89bb();\n                    *arg_10h_00 = fVar8;\n                }\n                fVar8 = *arg_10h_00;\n                fcn.00b99a20();\n                *(arg_10h + 0xc) = 9.809089e-45;\n            }\ncode_r0x00bf674d:\n            *arg_10h = fVar8;\n            return 0;\n        }\n        uVar6 = 3;\n    }\n    fcn.00b99a20();\n    *arg_10h = 0.0;\n    *(arg_10h + 0xc) = 1.401298e-45;\n    return uVar6;\n}\n",
        "token_count": 1742
    },
    "00bf675a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00bf675a(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, uint arg_24h)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint32_t uVar6;\n    uint *arg_8h_00;\n    uint var_10h;\n    \n    if (((arg_ch & 4) == 0) || (arg_1ch != -1)) {\n        fcn.00b977c7();\n        if (arg_20h == '\\0') {\n            if ((arg_ch & 1) == 0) {\n                fcn.00bb1080(&arg_20h, arg_10h, 2);\n                uVar6 = arg_20h;\n            }\n            else {\n                fcn.00bb1080(&arg_20h + 3, arg_10h, 1);\n                uVar6 = arg_20h._3_1_;\n            }\n            fcn.00bf5d6f(uVar6);\n            fcn.00b99b9c(&var_10h);\n            goto code_r0x00bf6996;\n        }\n        cVar2 = fcn.00be65fa();\n        if (cVar2 == '\\0') {\n            fcn.00b99997();\n            uVar6 = ***(arg_8h + 8);\n        }\n        else {\n            uVar6 = fcn.00b99c9c();\n        }\n        fcn.00bf5d6f(uVar6);\n        fcn.00b99b9c(&var_10h);\n        puVar5 = fcn.00b97b52(0);\n        if ((arg_ch & 1) == 0) {\n            arg_20h = *puVar5;\n            arg_8h_00 = 0x2;\n        }\n        else {\n            arg_20h = arg_20h & 0xffffff | *puVar5 << 0x18;\n            arg_8h_00 = 0x1;\n        }\n    }\n    else {\n        uVar6 = arg_14h - arg_18h;\n        if (arg_20h == '\\0') {\n            if ((arg_ch & 1) != 0) {\n                iVar4 = fcn.00bb0ff6(uVar6 + 1);\n                fcn.00bb1080(iVar4, arg_10h, uVar6);\n                *(iVar4 + uVar6) = 0;\n                uVar3 = fcn.00bf573e();\n                fcn.00b99bf8(uVar3);\n                fcn.00bb106c(uVar3);\n                fcn.00bb106c(iVar4);\n                return 0;\n            }\n            iVar1 = ((uVar6 >> 1) + 1) * 2;\n            iVar4 = fcn.00bb0ff6(-(iVar1 >> 0x20 != 0) | iVar1);\n            fcn.00bb1080(iVar4, arg_10h, uVar6 & 0xfffffffe);\n            *((uVar6 & 0xfffffffe) + iVar4) = 0;\n            fcn.00b99bf8(iVar4);\n            fcn.00bb106c(iVar4);\n            return 0;\n        }\n        fcn.00b977c7();\n        if ((arg_ch & 1) != 0) {\n            fcn.00b99997();\n            if (*(*(arg_8h + 8) + 4) < uVar6) {\n                fcn.00b99997();\n                uVar6 = *(*(arg_8h + 8) + 4) + 1;\n            }\n            fcn.00b99997();\n            fcn.00b979ab(*(arg_8h + 8), 0, uVar6);\n            fcn.00b99b9c(&var_10h);\n            uVar3 = fcn.00bf5b29();\n            fcn.00bb1080(arg_10h, uVar3, uVar6);\n            fcn.00bb106c(uVar3);\n            goto code_r0x00bf6996;\n        }\n        uVar6 = uVar6 >> 1;\n        fcn.00b99997();\n        if (*(*(arg_8h + 8) + 4) < uVar6) {\n            fcn.00b99997();\n            uVar6 = *(*(arg_8h + 8) + 4) + 1;\n        }\n        fcn.00b99997();\n        fcn.00b979ab(*(arg_8h + 8), 0, uVar6);\n        arg_8h_00 = &var_10h;\n        fcn.00b99b9c(arg_8h_00);\n    }\n    fcn.00bb1080(arg_10h, arg_8h_00);\ncode_r0x00bf6996:\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1180
    },
    "00bf703e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00bf703e(uint32_t arg_8h, uint nStdHandle, int32_t *arg_10h, uint hReadPipe)\n\n{\n    int32_t iVar1;\n    uint32_t *in_ECX;\n    uint lpSecurityAttributes;\n    uint var_8h;\n    uint var_4h;\n    \n    lpSecurityAttributes = 0xc;\n    var_4h = 0;\n    var_8h = 0;\n    if ((*in_ECX & 0x10) == 0) {\n        if ((arg_8h & *in_ECX) == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(nStdHandle);\n            *arg_10h = iVar1;\n            if ((iVar1 != 0) && (iVar1 != -1)) goto code_r0x00bf70b7;\n            iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0xc4a478, 0x40000000, 2, &lpSecurityAttributes, 3, 0x80, 0);\n            *arg_10h = iVar1;\n            if ((iVar1 == -1) || (iVar1 == 0)) goto code_r0x00bf706e;\n        }\n        else {\n            if (*arg_10h != 0) {\n                return *arg_10h;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_CreatePipe)(hReadPipe, arg_10h, &lpSecurityAttributes, 0);\n            if (iVar1 == 0) {\n                return -1;\n            }\n        }\n        fcn.00bf6f08(1);\n        fcn.00bf6ed7();\n        *arg_10h = arg_10h;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(nStdHandle);\n        *arg_10h = iVar1;\n        if (iVar1 == -1) {\ncode_r0x00bf706e:\n            *arg_10h = 0;\n            goto code_r0x00bf7070;\n        }\ncode_r0x00bf70b7:\n        fcn.00bf6f08(1);\n    }\ncode_r0x00bf7070:\n    return *arg_10h;\n}\n",
        "token_count": 514
    },
    "00bf710c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00bf710c(uint noname_0, uint noname_1, int32_t *arg_10h, uint hWritePipe)\n\n{\n    int32_t iVar1;\n    uint32_t *in_ECX;\n    uint lpSecurityAttributes;\n    uint var_8h;\n    uint var_4h;\n    \n    lpSecurityAttributes = 0xc;\n    var_4h = 0;\n    var_8h = 0;\n    if ((*in_ECX & 0x10) == 0) {\n        if ((*in_ECX & 1) == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff6);\n            *arg_10h = iVar1;\n            if ((iVar1 != 0) && (iVar1 != -1)) goto code_r0x00bf7182;\n            iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0xc4a478, 0x80000000, 1, &lpSecurityAttributes, 3, 0x80, 0);\n            *arg_10h = iVar1;\n            if ((iVar1 == -1) || (iVar1 == 0)) goto code_r0x00bf713b;\n        }\n        else {\n            if (*arg_10h != 0) {\n                return *arg_10h;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_CreatePipe)(arg_10h, hWritePipe, &lpSecurityAttributes, 0);\n            if (iVar1 == 0) {\n                return -1;\n            }\n        }\n        fcn.00bf6f08(1);\n        fcn.00bf6ed7();\n        *arg_10h = arg_10h;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff6);\n        *arg_10h = iVar1;\n        if (iVar1 == -1) {\ncode_r0x00bf713b:\n            *arg_10h = 0;\n            goto code_r0x00bf713d;\n        }\ncode_r0x00bf7182:\n        fcn.00bf6f08(1);\n    }\ncode_r0x00bf713d:\n    return *arg_10h;\n}\n",
        "token_count": 510
    },
    "00bf9b2c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf9b2c(uint lpFileName, uint lpCreationTime, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0x40000000, 1, 0, 3, 0x80, 0);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar1, lpCreationTime, 0, arg_10h);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00bfa2d5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfa2d5(uint arg_8h, int32_t arg_ch)\n\n{\n    ushort uStackY8196;\n    uint uStackY44;\n    \n    fcn.00bc1b90();\n    uStackY8196 = 0;\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    (*_sym.imp.KERNEL32.dll_FormatMessageW)();\n    uStackY44 = 0xbfa329;\n    fcn.00b97f41(&stack0xffffdffc);\n    return arg_8h;\n}\n",
        "token_count": 135
    },
    "00bfa45a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00bfa45a(uint lpFileName, uint lpPathName, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar auStackY327668 [196588];\n    uchar auStackY131080 [65532];\n    int16_t aiStackY65548 [2];\n    uchar auStackY65544 [65440];\n    uint uStackY104;\n    int32_t iStackY100;\n    int32_t iStackY96;\n    uint uStackY92;\n    uint *lpFilePart;\n    \n    lpFilePart = 0xbfa467;\n    fcn.00bc1b90();\n    lpFilePart = &fcn.00bfa45a::lpFilePart;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)();\n    if (iVar1 != 0) {\n        fcn.00bb38d8(&stack0xfffefff8, L\"\\\\??\\\\%s\", &stack0xfffdfff8);\n        iVar1 = fcn.00bb2e3c(&stack0xfffefff8);\n        if ((*(&stack0xfffefff6 + iVar1 * 2) == 0x5c) && (*(&stack0xfffefff4 + iVar1 * 2) != 0x3a)) {\n            *(&stack0xfffefff6 + iVar1 * 2) = 0;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)();\n        if ((iVar1 != 0) || (arg_10h != '\\0')) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n            if (iVar1 != -1) {\n                fcn.00bb3020();\n                uStackY92 = 0xbfa55e;\n                fcn.00bb42ee(&stack0xfffb000c, &stack0xfffefff8, 0x7fff);\n                uStackY92 = 0x900a4;\n                iStackY100 = 0xbfa594;\n                iStackY96 = iVar1;\n                iVar2 = (*_sym.imp.KERNEL32.dll_DeviceIoControl)();\n                iStackY100 = iVar1;\n                if (iVar2 != 0) {\n                    uStackY104 = 0xbfa5b2;\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                    return 1;\n                }\n                uStackY104 = 0xbfa59f;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            }\n            (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)();\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 592
    },
    "00bfbf27": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfbf27(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t **ppiVar4;\n    uint32_t uVar5;\n    uint unaff_EDI;\n    int32_t iVar6;\n    int32_t iStack612;\n    uchar auStack608 [8];\n    uchar auStack600 [36];\n    uchar auStack564 [560];\n    \n    iVar6 = **(arg_8h + 4);\n    fcn.00b99997();\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(**(iVar6 + 8), auStack600);\n    iVar6 = iVar2;\n    if (iVar2 == -1) {\n        fcn.00b99a20();\n        *arg_ch = -1;\n        arg_ch[3] = 1;\n        return 0;\n    }\n    while ((iVar3 = fcn.00bb378c(auStack564, 0xc4a5a0),  iVar3 == 0 ||\n           (iVar3 = fcn.00bb378c(auStack564, 0xc1fb80),  iVar3 == 0))) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar2, auStack608);\n        if (iVar3 == 0) {\n            fcn.00be6aa3(1, 0);\n            fcn.00b99a20();\n            *arg_ch = -1;\n            arg_ch[3] = 1;\n            (*_sym.imp.KERNEL32.dll_FindClose)(unaff_EDI);\n            return 0;\n        }\n    }\n    uVar1 = *(in_ECX + 0x198);\n    uVar5 = 0;\n    if (uVar1 != 0) {\n        ppiVar4 = *(in_ECX + 0x194);\n        do {\n            if (**ppiVar4 == 0) break;\n            uVar5 = uVar5 + 1;\n            ppiVar4 = ppiVar4 + 1;\n        } while (uVar5 < uVar1);\n    }\n    if (uVar5 == uVar1) {\n        iStack612 = fcn.00bb0ff6(0x20);\n        if (iStack612 == 0) {\n            iStack612 = 0;\n        }\n        else {\n            fcn.00b977c7();\n        }\n        fcn.00bff835(&iStack612);\n    }\n    else {\n        iVar2 = fcn.00bb0ff6(0x20);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            fcn.00b977c7();\n        }\n        **(*(in_ECX + 0x194) + uVar5 * 4) = iVar2;\n    }\n    ***(*(in_ECX + 0x194) + uVar5 * 4) = 1;\n    *(**(*(in_ECX + 0x194) + uVar5 * 4) + 8) = iVar6;\n    fcn.00b97d2c(auStack564);\n    *(**(*(in_ECX + 0x194) + uVar5 * 4) + 0x1c) = iStack612;\n    fcn.00b99a20();\n    arg_ch[3] = 1;\n    *arg_ch = uVar5 + 1;\n    return 0;\n}\n",
        "token_count": 798
    },
    "00bfc2ce": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfc2ce(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uchar auStack24 [20];\n    \n    fcn.00b977c7();\n    fcn.00b99997();\n    arg_8h_00 = fcn.00bf4696();\n    if (arg_8h_00 == -1) {\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        fcn.00bfecc1(arg_8h_00, auStack24);\n    }\n    fcn.00b99b9c(&stack0xffffffe0);\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 167
    },
    "00bfc93c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfc93c(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uchar auStack600 [16];\n    uint uStack584;\n    uint uStack580;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.00b99997();\n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(**(iVar1 + 8), auStack600);\n    if (iVar1 == -1) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n        fcn.00b99a20();\n        arg_ch[3] = 2;\n        *arg_ch = uStack580;\n        arg_ch[1] = uStack584;\n    }\n    return 0;\n}\n",
        "token_count": 226
    },
    "00bfc9c7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfc9c7(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    uint32_t unaff_EBX;\n    uint unaff_EDI;\n    int32_t iVar4;\n    uchar *puStack756;\n    uchar *puStack752;\n    uchar *puVar5;\n    uchar *puVar6;\n    uint16_t uVar7;\n    uchar auStack712 [12];\n    uchar auStack700 [8];\n    uchar auStack692 [8];\n    uchar auStack684 [4];\n    uchar auStack680 [4];\n    uchar auStack676 [4];\n    uchar auStack672 [4];\n    uint uStack668;\n    uint uStack664;\n    uint uStack660;\n    uint uStack656;\n    uint uStack652;\n    uint uStack648;\n    uint uStack604;\n    uint uStack600;\n    uint uStack596;\n    uint uStack592;\n    uint uStack588;\n    uint uStack584;\n    \n    uVar7 = unaff_EDI >> 0x10;\n    iVar4 = 0;\n    iVar2 = **(arg_8h + 4);\n    fcn.00b99997();\n    uVar1 = **(iVar2 + 8);\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)();\n    if (iVar2 == -1) {\n        fcn.00b99bf8(0xc1f910);\n        puStack752 = 0xbfcd33;\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        uStack660 = uStack604;\n        uStack656 = uStack600;\n        uStack652 = uStack596;\n        uStack648 = uStack592;\n        uStack668 = uStack588;\n        uStack664 = uStack584;\n        (*_sym.imp.KERNEL32.dll_FindClose)();\n        if (1 < *(arg_8h + 8)) {\n            iVar4 = fcn.00b99c9c();\n        }\n        if (iVar4 == 1) {\n            puVar5 = &stack0xfffffd68;\n            puStack752 = 0xbfcaa5;\n            puVar6 = puVar5;\n            (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)();\n            puStack756 = &stack0xfffffd60;\n        }\n        else if (iVar4 == 2) {\n            puVar5 = &stack0xfffffd70;\n            puStack752 = 0xbfca8e;\n            puVar6 = puVar5;\n            (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)();\n            puStack756 = &stack0xfffffd68;\n        }\n        else {\n            puVar5 = &stack0xfffffd60;\n            puStack752 = 0xbfca77;\n            puVar6 = puVar5;\n            (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)();\n            puStack756 = &stack0xfffffd58;\n        }\n        puStack752 = &stack0xfffffd38;\n        (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)();\n        if ((*(arg_8h + 8) < 3) || (iVar2 = fcn.00b99c9c(),  iVar2 != 1)) {\n            arg_8h_00 = fcn.00b9942e();\n            fcn.00b991b0(arg_8h_00, 1);\n            fcn.00bb38d8(&stack0xfffffd6c, 0xc4a584, unaff_EBX & 0xffff);\n            uVar3 = fcn.00b97f41(&stack0xfffffd6c);\n            fcn.00b993ea(uVar3);\n            fcn.00b99040(arg_8h_00, &stack0xfffffd14, 1);\n            fcn.00b99a20();\n            fcn.00b95a64();\n            fcn.00bb38d8(&stack0xfffffd64, L\"%02d\", uVar7);\n            uVar3 = fcn.00b97f41(&stack0xfffffd64);\n            fcn.00b993ea(uVar3);\n            fcn.00b99040(arg_8h_00, &stack0xfffffd0c, 1);\n            fcn.00b99a20();\n            fcn.00b95a64();\n            fcn.00bb38d8(&stack0xfffffd5c, L\"%02d\", &stack0xfffffda8 >> 0x10);\n            uVar3 = fcn.00b97f41(&stack0xfffffd5c);\n            fcn.00b993ea(uVar3);\n            fcn.00b99040(arg_8h_00, &stack0xfffffd04, 1);\n            fcn.00b99a20();\n            fcn.00b95a64();\n            fcn.00bb38d8(&stack0xfffffd54, L\"%02d\", uVar1 & 0xffff);\n            uVar3 = fcn.00b97f41(&stack0xfffffd54);\n            fcn.00b993ea(uVar3);\n            fcn.00b99040(arg_8h_00, &stack0xfffffcfc, 1);\n            fcn.00b99a20();\n            fcn.00b95a64();\n            fcn.00bb38d8(&stack0xfffffd4c, L\"%02d\", puVar6 >> 0x10);\n            uVar3 = fcn.00b97f41(&stack0xfffffd4c);\n            fcn.00b993ea(uVar3);\n            fcn.00b99040(arg_8h_00, &stack0xfffffcf4, 1);\n            fcn.00b99a20();\n            fcn.00b95a64();\n            fcn.00bb38d8(&stack0xfffffd44, L\"%02d\", puVar5 & 0xffff);\n            uVar3 = fcn.00b97f41(&stack0xfffffd44);\n            fcn.00b993ea(uVar3);\n            fcn.00b99040(arg_8h_00, &stack0xfffffcec, 1);\n            fcn.00b99a20();\n            fcn.00b95a64();\n        }\n        else {\n            fcn.00bb38d8(&stack0xfffffd6c, L\"%4d%02d%02d%02d%02d%02d\", unaff_EBX & 0xffff);\n            fcn.00b99bf8(&stack0xfffffd6c);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1510
    },
    "00bfcde5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfcde5(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    int32_t iStack128;\n    uchar auStack120 [4];\n    uchar auStack116 [12];\n    uint auStack104 [4];\n    uchar auStack88 [12];\n    uchar auStack76 [20];\n    uchar auStack56 [36];\n    uint uStack20;\n    uint uStack16;\n    uchar uStack12;\n    \n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    fcn.00b977c7();\n    fcn.00b977c7();\n    if (*(arg_8h + 8) == 3) {\n        fcn.00b99c9c();\n    }\n    fcn.00b99997();\n    cVar1 = fcn.00bb0d27();\n    if (cVar1 != '\\0') goto code_r0x00bfd134;\n    if (*(in_ECX + 0xb4) == 2) {\n        iVar3 = **(arg_8h + 4);\n        fcn.00b99997();\n        fcn.00b981a7(*(iVar3 + 8));\n        arg_8h_00 = 0xc1fac0;\n        iVar3 = fcn.00bf56ec(0xc1fac0);\n        if (iVar3 == -1) {\n            fcn.00b981a7(in_ECX + 0xd8);\n            fcn.00b97e0b(0xc1fac0);\n            iVar3 = **(arg_8h + 4);\n            fcn.00b99997();\n            fcn.00b97c8e(*(iVar3 + 8));\n        }\n        iVar3 = *(*(arg_8h + 4) + 4);\n        fcn.00b99997();\n        fcn.00b981a7(*(iVar3 + 8));\n        cVar1 = fcn.00bf4cd3();\n        if ((cVar1 != '\\0') && (piVar4 = fcn.00b97b52(iStack128 + -1),  *piVar4 != 0x5c)) {\n            fcn.00b99a20();\n            arg_ch[3] = 1;\n            *arg_ch = 0;\n            goto code_r0x00bfd134;\n        }\n        fcn.00b99997();\n        cVar1 = fcn.00bf3a2b(arg_8h_00, 0);\n        if (cVar1 != '\\0') goto code_r0x00bfd134;\n    }\n    else {\n        iVar3 = fcn.00b94f3d(*(in_ECX + 200), 1);\n        if ((iVar3 == 0) || (iVar3 = fcn.00b94f3d(*(in_ECX + 200), 2),  iVar3 == 0)) {\n            fcn.00b977c7();\n            fcn.00b977c7();\n            fcn.00b977c7();\n            fcn.00b977c7();\n            fcn.00b99997();\n            fcn.00b946f9(auStack56, auStack120, auStack88);\n            cVar1 = '\\0';\n            piVar4 = fcn.00b97b52(0);\n            if (*piVar4 == 0) {\n                cVar1 = '\\0';\n                piVar4 = fcn.00b97b52(0);\n                if (*piVar4 == 0) {\n                    fcn.00b97d2c(0xc49e18);\n                    cVar1 = '|';\n                    fcn.00b97d2c(0xc4a87c);\n                }\n            }\n            fcn.00b981a7(auStack56);\n            fcn.00b97c8e(auStack76);\n            fcn.00b97c8e(&stack0xffffff70);\n            fcn.00b97c8e(auStack116);\n            fcn.00b99997();\n            fcn.00bf42ad(auStack104);\n            cVar2 = fcn.00bf3e73();\n            if (((cVar2 == '\\x01') && (cVar1 == '\\x01')) || (cVar2 == '\\0')) {\n                iVar3 = **(arg_8h + 4);\n                fcn.00b99997();\n                iVar3 = fcn.00bf93df(**(iVar3 + 8), auStack104[0]);\n                if (iVar3 != 0) {\n                    fcn.00baff61(iVar3, 0);\n                    fcn.00b99a20();\n                    *arg_ch = 0;\n                    goto code_r0x00bfd100;\n                }\n            }\n            else {\n                fcn.00b99a20();\n                *arg_ch = 0;\ncode_r0x00bfd100:\n                arg_ch[3] = 1;\n            }\n            fcn.00b94faa();\n            fcn.00b95a64();\n            fcn.00b95a64();\n            fcn.00b95a64();\n            fcn.00b95a64();\n            goto code_r0x00bfd134;\n        }\n        fcn.00baff61(iVar3, 0);\n    }\n    fcn.00b99a20();\n    arg_ch[3] = 1;\n    *arg_ch = 0;\ncode_r0x00bfd134:\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1302
    },
    "00bfd2e6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfd2e6(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint in_ECX;\n    uint extraout_ECX;\n    int32_t **ppiVar4;\n    uint32_t unaff_EBX;\n    uint32_t uVar5;\n    int32_t unaff_ESI;\n    uint32_t uVar6;\n    uchar *in_stack_ffffff9c;\n    int32_t iStack56;\n    int32_t *piStack44;\n    uchar auStack40 [36];\n    \n    uVar5 = 0;\n    if (1 < *(arg_8h + 8)) {\n        in_stack_ffffff9c = 0xbfd310;\n        uVar5 = fcn.00b99c9c();\n    }\n    if (((uVar5 & 8) != 0) && ((uVar5 & 3) != 0)) {\n        fcn.00b977c7();\n        fcn.00b977c7();\n        fcn.00b99997();\n        fcn.00b946f9(&stack0xffffffd8, 0, 0);\n        *piStack44 = *piStack44 + 1;\n        in_stack_ffffff9c = &stack0xffffffd8;\n        fcn.00b97c8e(in_stack_ffffff9c);\n        if ((iStack56 != 0) && (cVar2 = fcn.00bf3e73(),  cVar2 == '\\0')) {\n            fcn.00b97f41(in_ECX);\n            cVar2 = fcn.00bf3c66();\n            uVar5 = unaff_EBX;\n            fcn.00b95a64();\n            if (cVar2 == '\\0') {\n                fcn.00b99a20();\n                *arg_ch = -1;\n                arg_ch[3] = 1;\n            }\n        }\n        iVar3 = fcn.00b99c9c();\n        if (iVar3 == -1) {\n            fcn.00b95a64();\n            fcn.00b95a64();\n            fcn.00b95a64();\n            return 0;\n        }\n        uVar5 = uVar5 ^ 8;\n        fcn.00b95a64();\n        fcn.00b95a64();\n        fcn.00b95a64();\n    }\n    iVar3 = fcn.00bb0ff6(0x38);\n    if (iVar3 == 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = fcn.00b95906();\n    }\n    iVar1 = **(arg_8h + 4);\n    fcn.00b99997();\n    cVar2 = fcn.00b95956(*(iVar1 + 8), uVar5);\n    if (cVar2 == '\\0') {\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00baff61(arg_8h_00, 0);\n        if (iVar3 != 0) {\n            fcn.00b95a1a(extraout_ECX);\n        }\n        fcn.00b99a20();\n        *arg_ch = -1;\n    }\n    else {\n        uVar6 = 0;\n        uVar5 = *(unaff_ESI + 0x198);\n        if (uVar5 != 0) {\n            ppiVar4 = *(unaff_ESI + 0x194);\n            do {\n                if (**ppiVar4 == 0) break;\n                uVar6 = uVar6 + 1;\n                ppiVar4 = ppiVar4 + 1;\n            } while (uVar6 < uVar5);\n        }\n        if (uVar6 == uVar5) {\n            iVar3 = fcn.00bb0ff6(0x20);\n            if (iVar3 != 0) {\n                fcn.00b977c7();\n            }\n            fcn.00bff835(&stack0xffffffa4);\n        }\n        else {\n            iVar3 = fcn.00bb0ff6(0x20);\n            if (iVar3 == 0) {\n                iVar3 = 0;\n            }\n            else {\n                fcn.00b977c7();\n            }\n            **(*(unaff_ESI + 0x194) + uVar6 * 4) = iVar3;\n        }\n        ***(*(unaff_ESI + 0x194) + uVar6 * 4) = 0;\n        *(**(*(unaff_ESI + 0x194) + uVar6 * 4) + 4) = in_stack_ffffff9c;\n        fcn.00b99a20();\n        *arg_ch = uVar6 + 1;\n    }\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 1108
    },
    "00bfed8e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfed8e(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int16_t *piVar2;\n    ushort *puVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int16_t *unaff_ESI;\n    int32_t *arg_8h_00;\n    uint *puVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    ushort *arg_8h_01;\n    int32_t *piStack220;\n    uint uStack216;\n    int32_t *piStack212;\n    uint uStack208;\n    uchar auStack204 [8];\n    uint auStack196 [3];\n    uint uStack184;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    int32_t *apiStack152 [5];\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    int32_t *piStack120;\n    uint auStack112 [3];\n    int16_t *piStack100;\n    uint uStack96;\n    int16_t *piStack92;\n    uint uStack88;\n    ushort *puStack84;\n    uint uStack80;\n    uint uStack68;\n    uint uStack64;\n    uint32_t uStack60;\n    uint uStack52;\n    \n    fcn.00b977c7();\n    arg_8h_01 = 0xc1f910;\n    auStack196[0] = 0;\n    fcn.00b99bf8(0xc1f910);\n    iVar8 = **(arg_8h + 4);\n    fcn.00b99997();\n    puVar6 = *(iVar8 + 8);\n    uStack184 = *puVar6;\n    uStack160 = puVar6[1];\n    uStack156 = puVar6[2];\n    apiStack152[0] = puVar6[3];\n    *apiStack152[0] = *apiStack152[0] + 1;\n    iVar8 = *(*(arg_8h + 4) + 4);\n    uStack164 = uStack184;\n    fcn.00b99997();\n    puVar6 = *(iVar8 + 8);\n    auStack196[0] = *puVar6;\n    uStack128 = puVar6[1];\n    uStack124 = puVar6[2];\n    piStack120 = puVar6[3];\n    *piStack120 = *piStack120 + 1;\n    uStack132 = auStack196[0];\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b99997();\n    uVar1 = fcn.00bafec6();\n    fcn.00b9538e(uVar1);\n    iVar8 = 0xc49588;\n    uVar4 = auStack196[0];\n    while (iVar8 = fcn.00bb4668(uVar4, iVar8),  iVar8 != 0) {\n        fcn.00b97d2c(iVar8);\n        iVar7 = 0xc49e10;\n        arg_8h_01 = fcn.00bf56ec(0xc49e10);\n        uVar5 = fcn.00bf56ec(0xc49e14);\n        if (((uVar1 == 0xffffffff) || (uVar5 == 0xffffffff)) || (uVar5 < uVar1)) {\n            uStack88 = 0;\n            puVar6 = 0x2;\n            fcn.00be6aa3(2, 0);\n            goto code_r0x00bff1af;\n        }\n        fcn.00b97c8e(auStack196);\n        fcn.00b97e0b(0xc49588);\n        fcn.00b979ab(auStack204, iVar7 + 1, (uVar5 - iVar7) + -1);\n        fcn.00b97c8e(apiStack152);\n        fcn.00b97e0b(0xc49588);\n        uVar4 = 0;\n    }\n    piVar9 = 0xc49588;\n    fcn.00b97e0b(0xc49588);\n    arg_8h_00 = 0x1;\n    if (0x1 < piStack220) {\n        do {\n            piVar9 = arg_8h_00;\n            piVar2 = fcn.00b97b52(arg_8h_00);\n            if (*piVar2 == 0x7c) {\n                piVar9 = arg_8h_00;\n                puVar3 = fcn.00b97b52(arg_8h_00);\n                *puVar3 = 0;\n            }\n            arg_8h_00 = arg_8h_00 + 1;\n        } while (arg_8h_00 < piStack220);\n    }\n    if (5 < arg_10h) {\n        uStack208 = fcn.00bf89bb();\n    }\n    uVar4 = fcn.00bb0ff6(0x1fffe);\n    fcn.00b9538e(uVar4);\n    if (arg_10h < 5) {\n        *arg_8h_01 = 0;\n    }\n    else {\n        iVar8 = *(*(arg_8h + 4) + 0x10);\n        fcn.00b99997();\n        fcn.00bb2ffc(arg_8h_01, **(iVar8 + 8));\n    }\n    puVar6 = auStack112;\n    fcn.00bb3020(puVar6, 0, 0x58);\n    uStack64 = auStack196[0];\n    uVar1 = 0x80004;\n    auStack112[0] = 0x58;\n    uStack80 = 0xffff;\n    uStack68 = uStack208;\n    uStack52 = 0xc1f910;\n    piStack100 = unaff_ESI;\n    puStack84 = arg_8h_01;\n    if (((3 < arg_10h) && (iVar8 = fcn.00b99c9c(),  iVar8 < 0x20)) && (iVar8 = fcn.00b99c9c(),  -1 < iVar8)) {\n        uVar5 = fcn.00b99c9c();\n        if ((uVar5 & 0x10) != 0) {\n            uVar1 = 0x80006;\n        }\n        uVar5 = fcn.00b99c9c();\n        if ((uVar5 & 8) != 0) {\n            uVar1 = uVar1 | 0x2000;\n        }\n        uVar5 = fcn.00b99c9c();\n        if ((uVar5 & 4) != 0) {\n            uVar1 = uVar1 | 0x200;\n        }\n        uVar5 = fcn.00b99c9c();\n        if ((uVar5 & 2) != 0) {\n            uVar1 = uVar1 | 0x800;\n        }\n        uVar5 = fcn.00b99c9c();\n        if ((uVar5 & 1) != 0) {\n            uVar1 = uVar1 | 0x1000;\n        }\n    }\n    uStack60 = uVar1;\n    if (arg_14h == '\\0') {\n        iVar8 = (*_sym.imp.COMDLG32.dll_GetSaveFileNameW)(auStack112);\n        if (iVar8 == 0) goto code_r0x00bff185;\n    }\n    else {\n        iVar8 = (*_sym.imp.COMDLG32.dll_GetOpenFileNameW)();\n        if (iVar8 == 0) {\ncode_r0x00bff185:\n            uStack88 = 0;\n            puVar6 = 0x1;\n            fcn.00be6aa3(1, 0);\n            goto code_r0x00bff196;\n        }\n        if ((uVar1 & 0x200) != 0) {\n            iVar8 = fcn.00bb2e3c(uStack88);\n            fcn.00b97f41(uStack88);\n            while (piStack92 = piStack92 + iVar8 + 1,  *piStack92 != 0) {\n                iVar8 = fcn.00bb2e3c(piStack92);\n                fcn.00b97e0b(0xc49588);\n                uStack88 = uStack96;\n                fcn.00b97e0b(uStack96);\n                piStack92 = piStack100;\n            }\n            puVar6 = &uStack168;\n            fcn.00b99b9c(puVar6);\n            fcn.00b95a64();\n            goto code_r0x00bff196;\n        }\n    }\n    fcn.00b99bf8(puVar6);\ncode_r0x00bff196:\n    *piVar9 = *piVar9 + -1;\n    if (*piVar9 == 0) {\n        fcn.00bb106c(piVar9, puVar6, uStack88);\n        fcn.00bb106c(uVar4);\n    }\ncode_r0x00bff1af:\n    *piStack212 = *piStack212 + -1;\n    if (*piStack212 == 0) {\n        fcn.00bb106c(piStack212, puVar6, uStack88);\n        fcn.00bb106c(uStack216);\n    }\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 2224
    },
    "00bff200": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00bff200(uint arg_8h, uint32_t dwFileAttributes, uint32_t arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    uint lpFindFileData;\n    uint lpFileName;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_FindFirstFileW;\n    uVar7 = 0;\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(arg_8h, &lpFindFileData);\n    uVar2 = 0;\n    if (iVar4 != -1) {\n        do {\n            uVar7 = uVar2;\n            iVar5 = fcn.00bb378c(&lpFileName, 0xc1fb80);\n            if ((iVar5 != 0) && (iVar5 = fcn.00bb378c(&lpFileName, 0xc4a5a0),  iVar5 != 0)) {\n                uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(&lpFileName);\n                iVar5 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(&lpFileName, (uVar6 | dwFileAttributes) & ~arg_10h);\n                if (iVar5 == 0) {\n                    uVar6 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n                    return uVar6 & 0xffffff00;\n                }\n                uVar7 = 1;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &lpFindFileData);\n            uVar2 = uVar7;\n        } while (iVar5 != 0);\n    }\n    uVar6 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n    if (arg_14h != '\\0') {\n        iVar4 = (*pcVar1)(0xc4a598, &lpFindFileData);\n        pcVar1 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryW;\n        if (iVar4 != -1) {\n            do {\n                if ((((lpFindFileData & 0x10) != 0) && (iVar5 = fcn.00bb378c(&lpFileName, 0xc1fb80),  iVar5 != 0)) &&\n                   (iVar5 = fcn.00bb378c(&lpFileName, 0xc4a5a0),  iVar5 != 0)) {\n                    (*pcVar1)(&lpFileName);\n                    cVar3 = fcn.00bff200(arg_8h, dwFileAttributes, arg_10h, arg_14h);\n                    if (cVar3 == '\\0') {\n                        uVar7 = 0;\n                        goto code_r0x00bff33c;\n                    }\n                    (*pcVar1)(0xc4a5a0);\n                }\n                iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &lpFindFileData);\n            } while (iVar5 != 0);\n        }\n        uVar7 = 1;\ncode_r0x00bff33c:\n        uVar6 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n    }\n    return uVar6 & 0xffffff00 | uVar7;\n}\n",
        "token_count": 769
    },
    "00bff35d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00bff35d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    uint lpFindFileData;\n    uint var_22ch;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_FindFirstFileW;\n    uVar7 = 0;\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(arg_8h, &lpFindFileData);\n    uVar2 = 0;\n    if (iVar4 != -1) {\n        do {\n            uVar7 = uVar2;\n            iVar5 = fcn.00bb378c(&var_22ch, 0xc1fb80);\n            if ((iVar5 != 0) && (iVar5 = fcn.00bb378c(&var_22ch, 0xc4a5a0),  iVar5 != 0)) {\n                cVar3 = fcn.00bf45c1(arg_10h);\n                if (cVar3 == '\\0') {\n                    uVar6 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n                    return uVar6 & 0xffffff00;\n                }\n                uVar7 = 1;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &lpFindFileData);\n            uVar2 = uVar7;\n        } while (iVar5 != 0);\n    }\n    uVar6 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n    if (arg_14h != '\\0') {\n        iVar4 = (*pcVar1)(0xc4a598, &lpFindFileData);\n        pcVar1 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryW;\n        if (iVar4 != -1) {\n            do {\n                if ((((lpFindFileData & 0x10) != 0) && (iVar5 = fcn.00bb378c(&var_22ch, 0xc1fb80),  iVar5 != 0)) &&\n                   (iVar5 = fcn.00bb378c(&var_22ch, 0xc4a5a0),  iVar5 != 0)) {\n                    (*pcVar1)(&var_22ch);\n                    cVar3 = fcn.00bff35d(arg_8h, arg_ch, arg_10h, arg_14h);\n                    if (cVar3 == '\\0') {\n                        uVar7 = 0;\n                        goto code_r0x00bff484;\n                    }\n                    (*pcVar1)(0xc4a5a0);\n                }\n                iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &lpFindFileData);\n            } while (iVar5 != 0);\n        }\n        uVar7 = 1;\ncode_r0x00bff484:\n        uVar6 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n    }\n    return uVar6 & 0xffffff00 | uVar7;\n}\n",
        "token_count": 735
    },
    "00bff65e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.00bff65e(uint hFindFile, uint32_t *arg_ch, uint32_t *arg_10h, uint32_t *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint lpFindFileData;\n    int32_t var_25ch;\n    uint32_t var_258h;\n    uint var_24ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint lpFileName;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    fcn.00b97f41(hFindFile);\n    var_24h = lpFileName;\n    var_20h = var_ch;\n    var_1ch = var_8h;\n    var_18h = var_4h;\n    *var_4h = *var_4h + 1;\n    fcn.00b97e0b(0xc4a598);\n    uVar2 = 1;\n    iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, &lpFindFileData);\n    uVar1 = 1;\n    if (iVar3 != -1) {\n        do {\n            while( true ) {\n                uVar2 = uVar1;\n                iVar4 = fcn.00be6920();\n                if (iVar4 == 1) {\n                    uVar2 = 0;\n                    goto code_r0x00bff7bd;\n                }\n                if (iVar4 != 0xb) break;\n                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                uVar1 = uVar2;\n            }\n            iVar4 = fcn.00bb378c(&var_24ch, 0xc1fb80);\n            if ((iVar4 != 0) && (iVar4 = fcn.00bb378c(&var_24ch, 0xc4a5a0),  iVar4 != 0)) {\n                fcn.00b981a7(&var_24h);\n                fcn.00b97e0b(&var_24ch);\n                if ((lpFindFileData & 0x10) == 0) {\n                    uVar5 = *arg_ch;\n                    *arg_ch = *arg_ch + var_258h;\n                    arg_ch[1] = arg_ch[1] + var_25ch + CARRY4(uVar5, var_258h);\n                    if (arg_18h != '\\0') {\n                        uVar5 = *arg_10h;\n                        *arg_10h = *arg_10h + 1;\n                        arg_10h[1] = arg_10h[1] + (0xfffffffe < uVar5);\n                    }\n                }\n                else {\n                    if (arg_18h != '\\0') {\n                        uVar5 = *arg_14h;\n                        *arg_14h = *arg_14h + 1;\n                        arg_14h[1] = arg_14h[1] + (0xfffffffe < uVar5);\n                    }\n                    if (arg_1ch != '\\0') {\n                        fcn.00b97e0b(0xc1fac0);\n                        uVar2 = fcn.00bff65e(lpFileName, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n                        if (uVar2 == 0) break;\n                    }\n                }\n            }\n            iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar3, &lpFindFileData);\n            uVar1 = uVar2;\n        } while (iVar4 != 0);\n    }\ncode_r0x00bff7bd:\n    (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n    fcn.00b95a64();\n    uVar5 = fcn.00b95a64();\n    return uVar5 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 943
    },
    "00bff7df": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bff7df(int32_t *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    iVar3 = fcn.00b99c9c();\n    iVar3 = iVar3 + -1;\n    *arg_8h = iVar3;\n    if ((((-1 < iVar3) && (cVar2 = fcn.00be65fa(),  cVar2 != '\\0')) && (iVar3 < *(in_ECX + 0x198))) &&\n       ((piVar1 = **(*(in_ECX + 0x194) + iVar3 * 4),  piVar1 != NULL && ((arg_10h == -1 || (*piVar1 == arg_10h)))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 210
    },
    "00c02083": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c02083(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    char cVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    uint uVar9;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(arg_8h + 8) == 0) {\n        iVar6 = *(in_ECX + 4);\n        iVar8 = 0;\n        while (iVar6 != 0) {\n            cVar4 = fcn.00c02a6f(0);\n            if (cVar4 == '\\0') {\n                iVar8 = iVar8 + 1;\n            }\n            fcn.00be6cea(&var_4h);\n        }\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = iVar8;\n        return 0;\n    }\n    var_4h = fcn.00b99c9c();\n    piVar1 = *(in_ECX + 4);\ncode_r0x00c020f2:\n    if (piVar1 == NULL) {\ncode_r0x00c022e1:\n        uVar9 = 1;\ncode_r0x00c022e5:\n        fcn.00be6aa3(uVar9, 0);\n        fcn.00b99bf8(0xc1f910);\n        return 0;\n    }\n    if (*(*piVar1 + 0xd8) != var_4h) {\n        fcn.00be6cea(&var_8h);\n        goto code_r0x00c020f2;\n    }\n    if (piVar1 == NULL) goto code_r0x00c022e1;\n    if (*(arg_8h + 8) < 2) {\n        iVar6 = -1;\n    }\n    else {\n        iVar6 = fcn.00b99c9c();\n    }\n    if (iVar6 != -1) {\n        if (iVar6 == 0) {\n            iVar6 = *(*piVar1 + 8);\n            iVar8 = *(*piVar1 + 0xc);\n        }\n        else {\n            if (iVar6 != 1) {\n                if (iVar6 == 2) {\n                    uVar5 = fcn.00c02a6f(0);\n                }\n                else {\n                    if (iVar6 != 3) {\n                        if (iVar6 == 4) {\n                            iVar8 = *(*piVar1 + 0x18);\n                            goto code_r0x00c0227e;\n                        }\n                        if (iVar6 != 5) {\n                            uVar9 = 2;\n                            goto code_r0x00c022e5;\n                        }\n                        iVar8 = *(*piVar1 + 0x1c);\n                        goto code_r0x00c0227e;\n                    }\n                    uVar5 = fcn.00c0255a();\n                }\n                arg_8h = piVar1 & 0xffffff00 | uVar5;\n                fcn.00b99863(arg_8h);\n                return 0;\n            }\n            iVar6 = *(*piVar1 + 0x10);\n            iVar8 = *(*piVar1 + 0x14);\n        }\n        fcn.00b99a20();\n        arg_ch[3] = 2;\n        *arg_ch = iVar6;\n        arg_ch[1] = iVar8;\n        return 0;\n    }\n    fcn.00b9942e();\n    if (arg_ch[3] == 5) {\n        iVar6 = *arg_ch;\n    }\n    else {\n        iVar6 = 0;\n    }\n    fcn.00b991b0(iVar6, 1);\n    uVar9 = *(*piVar1 + 8);\n    uVar2 = *(*piVar1 + 0xc);\n    puVar7 = fcn.00b98ea0(iVar6, 2, 1);\n    fcn.00b99a20();\n    puVar7[3] = 2;\n    *puVar7 = uVar9;\n    puVar7[1] = uVar2;\n    uVar9 = *(*piVar1 + 0x10);\n    uVar3 = *(*piVar1 + 0x14);\n    puVar7 = fcn.00b98ea0(iVar6, 2, 1);\n    fcn.00b99a20();\n    puVar7[3] = 2;\n    *puVar7 = uVar9;\n    puVar7[1] = uVar3;\n    uVar5 = fcn.00c02a6f(0);\n    uVar3 = uVar3 & 0xffffff00;\n    arg_8h = uVar3 | uVar5;\n    fcn.00b98ea0(iVar6, 2, 1);\n    fcn.00b99863(arg_8h);\n    uVar5 = fcn.00c0255a();\n    arg_8h = uVar3 | uVar5;\n    fcn.00b98ea0(iVar6, 2, 1);\n    fcn.00b99863(arg_8h);\n    uVar9 = *(*piVar1 + 0x18);\n    puVar7 = fcn.00b98ea0(iVar6, 2, 1);\n    fcn.00b99a20();\n    puVar7[3] = 1;\n    *puVar7 = uVar9;\n    iVar8 = *(*piVar1 + 0x1c);\n    arg_ch = fcn.00b98ea0(iVar6, 2, 1);\ncode_r0x00c0227e:\n    fcn.00b99a20();\n    arg_ch[3] = 1;\n    *arg_ch = iVar8;\n    return 0;\n}\n",
        "token_count": 1348
    },
    "00c03aa2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.00c03aa2(uint32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    *arg_8h = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 1;\n    if (arg_14h == 0) {\n        if (arg_10h + (0x7fffffff < arg_ch) == 0) {\n            fcn.00b99a20();\n            arg_8h[3] = 1;\n        }\n        else {\n            fcn.00b99a20();\n            arg_8h[3] = 2;\n            arg_8h[1] = arg_10h;\n        }\n        *arg_8h = arg_ch;\n    }\n    else if (arg_14h == 1) {\n        fcn.00b99a20();\n        arg_8h[3] = 1;\n        *arg_8h = arg_ch;\n    }\n    else {\n        fcn.00b99a20();\n        *arg_8h = arg_ch;\n        arg_8h[3] = 2;\n        arg_8h[1] = arg_10h;\n    }\n    return arg_8h;\n}\n",
        "token_count": 298
    },
    "00c0518e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0518e(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint unaff_EBX;\n    int32_t arg_10h;\n    uint uStack28;\n    \n    arg_10h = -1;\n    fcn.00b99997();\n    iVar1 = fcn.00bf4e10();\n    if (iVar1 == 0) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        arg_8h_00 = fcn.00b99c9c();\n        arg_ch_00 = fcn.00b99c9c();\n        fcn.00b99c9c();\n        fcn.00b99c9c();\n        if (5 < *(arg_8h + 8)) {\n            arg_10h = fcn.00b99c9c();\n        }\n        fcn.00c073b1(arg_8h_00, arg_ch_00, arg_10h, 1);\n        if ((arg_10h < 2) && (arg_10h != -1)) {\n            arg_10h = 2;\n        }\n        fcn.00b99997();\n        fcn.00bf4ec9();\n        fcn.00bf54e6();\n        fcn.00c073b1(uStack28, unaff_EBX, arg_10h, 1);\n        fcn.00bf54e6();\n        fcn.00b99997();\n        fcn.00bf4ef5();\n        fcn.00bf54e6();\n    }\n    return 0;\n}\n",
        "token_count": 399
    },
    "00c0564f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0564f(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    uint uVar9;\n    int32_t in_ECX;\n    uint uVar10;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 8);\n    iVar6 = *(*(arg_8h + 4) + 4);\n    fcn.00b99997();\n    puVar2 = *(iVar6 + 8);\n    uVar9 = *puVar2;\n    piVar3 = puVar2[3];\n    *piVar3 = *piVar3 + 1;\n    iVar6 = *(*(arg_8h + 4) + 8);\n    fcn.00b99997();\n    puVar2 = *(iVar6 + 8);\n    uVar10 = 0;\n    uVar8 = *puVar2;\n    uVar4 = puVar2[1];\n    *puVar2[3] = *puVar2[3] + 1;\n    iVar6 = fcn.00b99c9c();\n    if ((iVar6 == -1) || (cVar5 = fcn.00b99dae(0x29),  cVar5 != '\\0')) {\n        uVar7 = 0;\n    }\n    else {\n        uVar7 = fcn.00b99c9c();\n        uVar7 = uVar7 | 0x10000;\n    }\n    cVar5 = fcn.00b99dae(0x29);\n    if (cVar5 != '\\0') {\n        fcn.00b981a7(in_ECX + 0xb8);\n    }\n    if (0x4000 < uVar4) {\n        fcn.00b97e8c(0x4000, 0xffffffff);\n    }\n    if (4 < uVar1) {\n        uVar10 = fcn.00bf89bb();\n    }\n    if ((*(arg_8h + 8) < 4) || (cVar5 = fcn.00b99dae(0x29),  cVar5 != '\\0')) {\n        uVar9 = (*_sym.imp.USER32.dll_MessageBoxW)(uVar10, uVar8, uVar9, uVar7);\n    }\n    else {\n        fcn.00b99cf8();\n        uVar8 = fcn.00bcb5d0();\n        uVar9 = fcn.00bf4d35(uVar9, uVar7, uVar8);\n    }\n    fcn.00b99a20();\n    *arg_ch = uVar9;\n    arg_ch[3] = 1;\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 754
    },
    "00c05a45": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c05a45(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBX;\n    uint32_t uVar4;\n    uint32_t unaff_EDI;\n    uint arg_8h_00;\n    uint32_t uVar5;\n    uchar *arg_ch_00;\n    int32_t iStack472;\n    uchar *puStack468;\n    uint uStack444;\n    uint uStack440;\n    uchar auStack432 [24];\n    uchar auStack408 [404];\n    \n    uVar5 = *(arg_8h + 8);\n    puStack468 = 0xc05a6e;\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    if (1 < uVar5) {\n        puStack468 = 0xc05a89;\n        iVar1 = fcn.00b99c9c();\n        if (0 < iVar1) {\n            puStack468 = 0xc05a98;\n            fcn.00b99c9c();\n        }\n    }\n    puStack468 = &stack0xfffffe68;\n    iStack472 = 0x101;\n    iVar1 = (*_sym.imp.WSOCK32.dll_WSAStartup)();\n    if (iVar1 != 0) {\n        fcn.00be6aa3(4, 0);\n        return 0;\n    }\n    fcn.00b95c18();\n    iVar1 = **(arg_8h + 4);\n    fcn.00b99997();\n    arg_ch_00 = &stack0xfffffe50;\n    uVar5 = *(iVar1 + 8);\n    fcn.00b95b75(uVar5, arg_ch_00);\n    iVar1 = (*_sym.imp.WSOCK32.dll_inet_addr)(uStack440);\n    iVar2 = (*_sym.imp.WSOCK32.dll_gethostbyname)(uStack444);\n    if ((iVar2 == 0) || (iStack472 = (*_sym.imp.IPHLPAPI.DLL_IcmpCreateFile)(),  iStack472 == -1)) {\n        fcn.00be6aa3(4, 0);\n        goto code_r0x00c05c15;\n    }\n    puStack468 = str.Ping._0_4_;\n    uVar4 = unaff_EDI & 0xffffff00 | str.Ping[4];\n    uVar3 = fcn.00bb0ff6(0x29);\n    fcn.00b9538e(uVar3);\n    if (iVar1 == -1) {\n        uVar3 = 0;\n        iVar1 = (*_sym.imp.IPHLPAPI.DLL_IcmpSendEcho)(arg_ch_00, ***(unaff_EBX + 0xc), &stack0xfffffe28, 5, 0, uVar4);\n    }\n    else {\n        uVar3 = 0;\n        iVar1 = (*_sym.imp.IPHLPAPI.DLL_IcmpSendEcho)(arg_ch_00, iVar1, &stack0xfffffe28, 5, 0, uVar4, 0x29);\n        uVar4 = uVar5;\n    }\n    if (iVar1 == 0) {\ncode_r0x00c05bca:\n        arg_8h_00 = 2;\ncode_r0x00c05bce:\n        fcn.00be6aa3(arg_8h_00, 0);\n    }\n    else {\n        uVar5 = *(uVar4 + 4);\n        if (uVar5 != 0) {\n            if (uVar5 < 0x2afa) {\ncode_r0x00c05bdc:\n                arg_8h_00 = 4;\n            }\n            else {\n                if (uVar5 < 0x2afe) goto code_r0x00c05bca;\n                if (uVar5 == 0x2b02) {\n                    arg_8h_00 = 1;\n                }\n                else {\n                    if (uVar5 != 0x2b0a) goto code_r0x00c05bdc;\n                    arg_8h_00 = 3;\n                }\n            }\n            goto code_r0x00c05bce;\n        }\n        iVar1 = *(uVar4 + 8);\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        if (iVar1 == 0) {\n            *arg_ch = 1;\n        }\n        else {\n            *arg_ch = iVar1;\n        }\n    }\n    (*_sym.imp.IPHLPAPI.DLL_IcmpCloseHandle)(uVar3);\n    (*_sym.imp.WSOCK32.dll_WSACleanup)();\n    fcn.00b95371();\ncode_r0x00c05c15:\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1111
    },
    "00c06486": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c06486(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    int32_t *piVar6;\n    uint arg_ch_00;\n    uint var_114h;\n    uint var_10h;\n    \n    iVar4 = **(arg_8h + 4);\n    fcn.00b99997();\n    arg_ch_00 = *(iVar4 + 8);\n    uVar3 = fcn.00b99c9c();\n    cVar2 = fcn.00c080a0(&var_10h, arg_ch_00, uVar3);\n    if (cVar2 != '\\0') {\n        iVar4 = (*_sym.imp.WSOCK32.dll_socket)(2, 1, 6);\n        pcVar1 = _sym.imp.WSOCK32.dll_ioctlsocket;\n        if (iVar4 == -1) {\n            uVar3 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)(0);\n            fcn.00be6aa3(uVar3, arg_ch_00);\n        }\n        else {\n            arg_8h = 0;\n            if (*(in_ECX + 0x46c) != 0) {\n                arg_8h = 1;\n                (*_sym.imp.WSOCK32.dll_ioctlsocket)(iVar4, 0x8004667e, &arg_8h);\n            }\n            iVar5 = (*_sym.imp.WSOCK32.dll_connect)(iVar4, &var_10h, 0x10);\n            if (iVar5 == 0) {\ncode_r0x00c06568:\n                arg_8h = 0;\n                (*pcVar1)(iVar4, 0x8004667e, &arg_8h);\n                piVar6 = arg_ch;\n                fcn.00b99a20();\n                *piVar6 = iVar4;\n                goto code_r0x00c06584;\n            }\n            iVar5 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n            if (iVar5 == 0x2733) {\n                iVar5 = fcn.00c08131(iVar4, &var_114h, *(in_ECX + 0x46c), 1);\n                if (0 < iVar5) goto code_r0x00c06568;\n            }\n            (*_sym.imp.WSOCK32.dll_closesocket)(iVar4);\n        }\n    }\n    piVar6 = arg_ch;\n    fcn.00b99a20();\n    *piVar6 = -1;\ncode_r0x00c06584:\n    piVar6[3] = 1;\n    return 0;\n}\n",
        "token_count": 630
    },
    "00c06596": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c06596(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_14h;\n    uint var_4h;\n    \n    var_4h = 5;\n    if (2 < *(arg_8h + 8)) {\n        var_4h = fcn.00b99c9c();\n    }\n    iVar3 = **(arg_8h + 4);\n    fcn.00b99997();\n    uVar5 = *(iVar3 + 8);\n    uVar2 = fcn.00b99c9c();\n    cVar1 = fcn.00c080a0(&var_14h, uVar5, uVar2);\n    if (cVar1 != '\\0') {\n        iVar3 = (*_sym.imp.WSOCK32.dll_socket)(2, 1, 6);\n        if (iVar3 == -1) {\n            uVar2 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)(0);\n            fcn.00be6aa3(uVar2, uVar5);\n        }\n        else {\n            iVar4 = (*_sym.imp.WSOCK32.dll_bind)(iVar3, &var_14h, 0x10);\n            if (iVar4 != -1) {\n                iVar4 = (*_sym.imp.WSOCK32.dll_listen)(iVar3, var_4h);\n                if (iVar4 == 0) {\n                    fcn.00b99a20();\n                    *arg_ch = iVar3;\n                    goto code_r0x00c0666a;\n                }\n            }\n            uVar2 = 0;\n            uVar5 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n            fcn.00be6aa3(uVar5, uVar2);\n            (*_sym.imp.WSOCK32.dll_closesocket)(iVar3);\n        }\n    }\n    fcn.00b99a20();\n    *arg_ch = -1;\ncode_r0x00c0666a:\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 495
    },
    "00c0672d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0672d(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint arg_ch_00;\n    uint var_130h;\n    uint var_2ch;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00b99c9c();\n    var_4h = iVar1;\n    iVar2 = fcn.00b99c9c();\n    fcn.00b99bf8(0xc1f910);\n    if (iVar1 == -1) {\n        fcn.00be6aa3(0xffffffff, 0);\n        return 0;\n    }\n    iVar1 = fcn.00c08131(iVar1, &var_130h, *(in_ECX + 0x46c), 0);\n    if (iVar1 < 1) {\n        return 0;\n    }\n    uVar3 = fcn.00bb0ff6(iVar2 + 1);\n    fcn.00b9538e(uVar3);\n    iVar1 = (*_sym.imp.WSOCK32.dll_recv)(var_4h, var_ch, iVar2, 0);\n    if (iVar1 == -1) {\n        arg_ch_00 = 0;\n        uVar3 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        fcn.00be6aa3(uVar3, arg_ch_00);\n    }\n    else if (iVar1 == 0) {\n        fcn.00baff61(1, 0);\n    }\n    else {\n        if ((*(arg_8h + 8) < 3) || (iVar2 = fcn.00b99c9c(),  iVar2 == 0)) {\n            *(var_ch + iVar1) = 0;\n            iVar2 = fcn.00bb3980(var_ch);\n            if (iVar2 == iVar1) {\n                fcn.00beae14(var_ch);\n                uVar3 = fcn.00c082ac(&var_2ch);\n                fcn.00b99b9c(uVar3);\n                fcn.00b95a64();\n                fcn.00b95a64();\n                goto code_r0x00c06863;\n            }\n        }\n        iVar2 = iVar1;\n        uVar3 = fcn.00bf794e(iVar1);\n        fcn.00bb1080(uVar3, iVar1, var_ch, iVar2);\n    }\ncode_r0x00c06863:\n    fcn.00b95371();\n    return 0;\n}\n",
        "token_count": 609
    },
    "00c06876": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c06876(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uint arg_ch_00;\n    \n    uVar1 = fcn.00b99c9c();\n    fcn.00bf899f();\n    uVar3 = fcn.00bf89e2();\n    iVar2 = (*_sym.imp.WSOCK32.dll_send)(uVar1, uVar3 >> 0x20, uVar3, 0);\n    fcn.00b99a20();\n    arg_ch[3] = 1;\n    if (iVar2 == -1) {\n        *arg_ch = 0;\n        arg_ch_00 = 0;\n        uVar1 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        fcn.00be6aa3(uVar1, arg_ch_00);\n    }\n    else {\n        *arg_ch = iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 230
    },
    "00c06a5a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c06a5a(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t *piVar7;\n    uint uVar8;\n    uint var_14h;\n    int32_t var_4h;\n    \n    iVar3 = **(arg_8h + 4);\n    fcn.00b99997();\n    uVar4 = *(iVar3 + 8);\n    uVar2 = fcn.00b99c9c();\n    cVar1 = fcn.00c080a0(&var_14h, uVar4, uVar2);\n    if (cVar1 == '\\0') {\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n    }\n    else {\n        iVar3 = (*_sym.imp.WSOCK32.dll_socket)(2, 2, 0x11);\n        var_4h = iVar3;\n        uVar4 = fcn.00b9942e();\n        fcn.00b991b0(uVar4, 1);\n        if (iVar3 == -1) {\n            uVar8 = 0;\n            uVar2 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n            fcn.00be6aa3(uVar2, uVar8);\n        }\n        else {\n            iVar5 = (*_sym.imp.WSOCK32.dll_bind)(iVar3, &var_14h, 0x10);\n            uVar2 = 0;\n            if (iVar5 != -1) {\n                puVar6 = fcn.00b98ea0(uVar4, 2, 1);\n                fcn.00b99a20();\n                puVar6[3] = 1;\n                *puVar6 = 0x2b594d1;\n                piVar7 = fcn.00b98ea0(uVar4, 2, 1);\n                fcn.00b99a20();\n                piVar7[3] = 1;\n                *piVar7 = var_4h;\n                iVar3 = **(arg_8h + 4);\n                fcn.00b99997();\n                uVar2 = *(iVar3 + 8);\n                fcn.00b98ea0(uVar4, 2, 1);\n                fcn.00b99b9c(uVar2);\n                iVar3 = *(*(arg_8h + 4) + 4);\n                fcn.00b99997();\n                uVar2 = *(iVar3 + 8);\n                fcn.00b98ea0(uVar4, 2, 1);\n                fcn.00b99b9c(uVar2);\n                return 0;\n            }\n            uVar8 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n            fcn.00be6aa3(uVar8, uVar2);\n            (*_sym.imp.WSOCK32.dll_closesocket)(iVar3);\n        }\n        arg_ch = fcn.00b98ea0(uVar4, 2, 1);\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n    }\n    *arg_ch = 0xffffffff;\n    return 0;\n}\n",
        "token_count": 756
    },
    "00c06cbd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c06cbd(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint uVar7;\n    \n    arg_8h_00 = fcn.00b9942e();\n    fcn.00b991b0(arg_8h_00, 1);\n    arg_ch = (*_sym.imp.WSOCK32.dll_socket)(2, 2, 0x11);\n    iVar1 = arg_8h;\n    if (arg_ch == -1) {\n        uVar7 = 0;\n        uVar2 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        fcn.00be6aa3(uVar2, uVar7);\ncode_r0x00c06d07:\n        puVar3 = fcn.00b98ea0(arg_8h_00, 2, 1);\n        fcn.00b99a20();\n        puVar3[3] = 1;\n        *puVar3 = 0xffffffff;\n    }\n    else {\n        if (2 < *(arg_8h + 8)) {\n            uVar4 = fcn.00b99c9c();\n            if ((uVar4 & 1) != 0) {\n                arg_8h = 1;\n                iVar5 = (*_sym.imp.WSOCK32.dll_setsockopt)(arg_ch, 0xffff, 0x20, &arg_8h, 4);\n                if (iVar5 != 0) {\n                    uVar7 = 0;\n                    uVar2 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n                    fcn.00be6aa3(uVar2, uVar7);\n                    goto code_r0x00c06d07;\n                }\n            }\n        }\n        puVar3 = fcn.00b98ea0(arg_8h_00, 2, 1);\n        fcn.00b99a20();\n        *puVar3 = 0x2b594d1;\n        puVar3[3] = 1;\n        piVar6 = fcn.00b98ea0(arg_8h_00, 2, 1);\n        fcn.00b99a20();\n        piVar6[3] = 1;\n        *piVar6 = arg_ch;\n        iVar5 = **(iVar1 + 4);\n        fcn.00b99997();\n        uVar2 = *(iVar5 + 8);\n        fcn.00b98ea0(arg_8h_00, 2, 1);\n        fcn.00b99b9c(uVar2);\n        iVar1 = *(*(iVar1 + 4) + 4);\n        fcn.00b99997();\n        uVar2 = *(iVar1 + 8);\n        fcn.00b98ea0(arg_8h_00, 2, 1);\n        fcn.00b99b9c(uVar2);\n    }\n    return 0;\n}\n",
        "token_count": 713
    },
    "00c06e17": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c06e17(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uchar *arg_ch_00;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint16_t auStack336 [4];\n    uint32_t uStack328;\n    uint uStack320;\n    uchar auStack316 [8];\n    ushort uStack308;\n    uint uStack306;\n    uint uStack302;\n    uint uStack298;\n    ushort uStack294;\n    uchar auStack276 [272];\n    \n    fcn.00b99c9c();\n    iVar11 = 0xc1f910;\n    fcn.00b99bf8(0xc1f910);\n    puVar1 = **(arg_8h + 4);\n    if (puVar1[3] == 5) {\n        if (puVar1[3] == 5) {\n            uVar4 = *puVar1;\n        }\n        else {\n            uVar4 = 0;\n        }\n        iVar2 = fcn.00b98ea0(uVar4, 1, 1);\n        if (iVar2 != 0) {\n            iVar2 = fcn.00b99c9c();\n            if (iVar2 != 0x2b594d1) {\n                iVar10 = -4;\n                goto code_r0x00c06e56;\n            }\n            iVar2 = fcn.00b98ea0(uVar4, 1, 1);\n            iVar10 = fcn.00b99c9c();\n            uStack308 = 0;\n            uStack306 = 0;\n            uStack302 = 0;\n            uStack298 = 0;\n            uStack294 = 0;\n            if (iVar10 == -1) goto code_r0x00c06e56;\n            iVar3 = fcn.00c08131(iVar10, auStack276, 100, 0);\n            if (iVar3 == -1) {\n                return 0;\n            }\n            iVar3 = iVar11;\n            uVar4 = fcn.00bb0ff6(iVar11 + 1);\n            fcn.00b9538e(uVar4);\n            iVar5 = (*_sym.imp.WSOCK32.dll___WSAFDIsSet)(iVar10, &uStack298 + 2);\n            if (iVar5 == 0) {\n                arg_ch_00 = NULL;\n                uVar4 = 0xfffffffe;\n            }\n            else {\n                arg_ch_00 = &stack0xfffffe90;\n                iVar11 = (*_sym.imp.WSOCK32.dll_recvfrom)(iVar10, iVar3, iVar11, 0, auStack336);\n                if (iVar11 != -1) {\n                    if (*(arg_8h + 8) < 3) {\ncode_r0x00c07053:\n                        *(iVar3 + iVar11) = 0;\n                        iVar2 = fcn.00bb3980(iVar3);\n                        if (iVar2 == iVar11) {\n                            fcn.00b97b76(iVar11);\n                            fcn.00beae14(iVar3);\n                            fcn.00b9793a(auStack316, &stack0xfffffea0);\n                            fcn.00b95a64();\n                            fcn.00b99b9c(&stack0xfffffe98);\n                            fcn.00b95a64();\n                            goto code_r0x00c070db;\n                        }\n                    }\n                    else {\n                        iVar10 = iVar11;\n                        uVar6 = fcn.00b99c9c();\n                        uVar6 = uVar6 & 1;\n                        uStack328 = fcn.00b99c9c();\n                        uStack328 = uStack328 & 2;\n                        if (uStack328 != 0) {\n                            uVar4 = fcn.00b9942e();\n                            fcn.00b991b0(uVar4, 1);\n                            fcn.00b98ea0(uVar4, 2, 1);\n                            uVar7 = (*_sym.imp.WSOCK32.dll_inet_ntoa)(uStack320);\n                            fcn.00beae14(uVar7);\n                            uVar7 = fcn.00c082ac(auStack316);\n                            fcn.00b99b9c(uVar7);\n                            fcn.00b95a64();\n                            puVar8 = fcn.00b98ea0(uVar4, 2, 1);\n                            uVar9 = (*_sym.imp.WSOCK32.dll_ntohs)(auStack336[0] << 0x10);\n                            fcn.00b99a20();\n                            puVar8[3] = 1;\n                            *puVar8 = uVar9 & 0xffff;\n                            fcn.00b98ea0(uVar4, 2, 1);\n                            iVar11 = iVar10;\n                            iVar3 = iVar2;\n                            fcn.00b95a64();\n                        }\n                        if (uVar6 == 0) goto code_r0x00c07053;\n                    }\n                    iVar2 = iVar11;\n                    uVar4 = fcn.00bf794e(iVar11);\n                    fcn.00bb1080(uVar4, iVar11, iVar3, iVar2);\n                    goto code_r0x00c070db;\n                }\n                uVar4 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)(0);\n            }\n            fcn.00be6aa3(uVar4, arg_ch_00);\ncode_r0x00c070db:\n            fcn.00b95371();\n            return 0;\n        }\n    }\n    iVar10 = -3;\ncode_r0x00c06e56:\n    fcn.00be6aa3(iVar10, 0);\n    return 0;\n}\n",
        "token_count": 1348
    },
    "00c070ef": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c070ef(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    uint uVar5;\n    uint arg_10h;\n    uint var_14h;\n    uint var_4h;\n    \n    puVar1 = **(arg_8h + 4);\n    if (puVar1[3] == 5) {\n        if (puVar1[3] == 5) {\n            var_4h = *puVar1;\n        }\n        else {\n            var_4h = 0;\n        }\n        uVar5 = var_4h;\n        iVar3 = fcn.00b98ea0(var_4h, 1, 1);\n        if (iVar3 != 0) {\n            iVar3 = fcn.00b99c9c();\n            if (iVar3 == 0x2b594d1) {\n                iVar3 = fcn.00b98ea0(uVar5, 1, 1);\n                fcn.00b99997();\n                uVar5 = *(iVar3 + 8);\n                fcn.00b98ea0(var_4h, 1, 1);\n                arg_10h = fcn.00b99c9c();\n                cVar2 = fcn.00c080a0(&var_14h, uVar5, arg_10h);\n                if (cVar2 == '\\0') {\n                    fcn.00b99a20();\n                    *arg_ch = -1;\n                }\n                else {\n                    fcn.00b98ea0(var_4h, 1, 1);\n                    uVar5 = fcn.00b99c9c();\n                    fcn.00bf899f();\n                    uVar4 = fcn.00bf89e2();\n                    iVar3 = (*_sym.imp.WSOCK32.dll_sendto)(uVar5, uVar4 >> 0x20, uVar4, 0, &var_14h, 0x10);\n                    if (iVar3 == -1) {\n                        fcn.00b99a20();\n                        arg_ch[3] = 1;\n                        *arg_ch = 0;\n                        uVar5 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)(0);\n                        goto code_r0x00c07241;\n                    }\n                    fcn.00b99a20();\n                    *arg_ch = iVar3;\n                }\n                arg_ch[3] = 1;\n                return 0;\n            }\n            fcn.00b99a20();\n            arg_10h = 0;\n            arg_ch[3] = 1;\n            *arg_ch = 0;\n            uVar5 = 0xfffffffc;\n            goto code_r0x00c07241;\n        }\n        fcn.00b99a20();\n    }\n    else {\n        fcn.00b99a20();\n    }\n    arg_10h = 0;\n    arg_ch[3] = 1;\n    *arg_ch = 0;\n    uVar5 = 0xfffffffd;\ncode_r0x00c07241:\n    fcn.00be6aa3(uVar5, arg_10h);\n    return 0;\n}\n",
        "token_count": 736
    },
    "00c077be": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c077be(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    uint nEscapement;\n    uint var_2ch;\n    int32_t lpRect;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t dwExStyle;\n    int32_t var_8h;\n    uint32_t dwStyle;\n    \n    dwStyle = 0x88c00000;\n    var_8h = -1;\n    iVar9 = -1;\n    dwExStyle = 8;\n    fcn.00b977c7();\n    if (*0xc56298 != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(*0xc56298);\n        *0xc56298 = 0;\n    }\n    if (arg_10h != 1) {\n        iVar5 = -1;\n        if (2 < arg_ch) {\n            iVar5 = *(*(arg_8h + 4) + 8);\n            fcn.00b99997();\n            fcn.00b981a7(*(iVar5 + 8));\n            iVar5 = var_8h;\n        }\n        if (3 < arg_ch) {\n            iVar5 = fcn.00b99c9c();\n            var_8h = iVar5;\n        }\n        if (4 < arg_ch) {\n            iVar9 = fcn.00b99c9c();\n        }\n        if (5 < arg_ch) {\n            uVar6 = fcn.00b99c9c();\n            if ((uVar6 & 1) != 0) {\n                dwStyle = 0x88000000;\n            }\n            uVar4 = fcn.00b99c9c();\n            dwExStyle = ~-((uVar4 & 2) != 0) & 8;\n            uVar6 = fcn.00b99c9c();\n            if ((uVar6 & 0x10) != 0) {\n                dwStyle = dwStyle ^ 0x8000000;\n            }\n        }\n        (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &lpRect, 0);\n        if (iVar5 == -1) {\n            var_8h = (var_14h + -300) / 2;\n        }\n        if (iVar9 == -1) {\n            iVar9 = (var_10h + -100) / 2;\n        }\n        (*_sym.imp.USER32.dll_SetRect)(&lpRect, 0, 0, 300, 100);\n        (*_sym.imp.USER32.dll_AdjustWindowRectEx)(&lpRect, dwStyle, 0, dwExStyle);\n        iVar5 = **(arg_8h + 4);\n        fcn.00b99997();\n        pcVar1 = _sym.imp.USER32.dll_CreateWindowExW;\n        *0xc56298 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                              (dwExStyle, L\"AutoIt v3\", **(iVar5 + 8), dwStyle, var_8h, iVar9, var_14h - lpRect, \n                               var_10h - var_18h, *0xc562ac, 0, 0, 0);\n        (*_sym.imp.USER32.dll_GetClientRect)(*0xc56298, &lpRect);\n        iVar9 = *(*(arg_8h + 4) + 4);\n        fcn.00b99997();\n        *0xc56290 = (*pcVar1)(0, L\"static\", **(iVar9 + 8), 0x50000000, (var_14h - lpRect) + -0x119, 4, 0x500, 0x18, \n                              *0xc56298, 0, 0, 0);\n        uVar7 = (*_sym.imp.GDI32.dll_CreateDCW)(L\"DISPLAY\", 0, 0, 0);\n        pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n        uVar8 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n        (*_sym.imp.GDI32.dll_SelectObject)(uVar7, uVar8);\n        (*_sym.imp.GDI32.dll_GetTextFaceW)(uVar7, 0x40, &nEscapement);\n        iVar9 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar7, 0x5a);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar7);\n        uVar7 = (*_sym.imp.GDI32.dll_CreateFontW)\n                          ((iVar9 * -10) / 0x48, 0, 0, 0, 600, 0, 0, 0, 1, 4, 0, 2, 0, &nEscapement);\n        pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n        (*_sym.imp.USER32.dll_SendMessageW)(*0xc56290, 0x30, uVar7, 1);\n        pcVar3 = _sym.imp.USER32.dll_CreateWindowExW;\n        *0xc56294 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                              (0x200, L\"msctls_progress32\", 0, 0x50000001, ((var_14h - lpRect) + -0x104) / 2, 0x1e, \n                               0x104, 0x14, *0xc56298, 0, 0, 0);\n        (*pcVar2)(*0xc56294, 0x401, 0, 0x640000);\n        (*pcVar2)(*0xc56294, 0x404, 1, 0);\n        *0xc5628c = (*pcVar3)(0, L\"static\", var_2ch, 0x50000000, (var_14h - lpRect) + -0x118, 0x37, 0x500, 0x32, \n                              *0xc56298, 0, 0, 0);\n        uVar7 = (*pcVar1)(0x11, 1);\n        (*pcVar2)(*0xc5628c, 0x30, uVar7);\n        (*_sym.imp.USER32.dll_ShowWindow)(*0xc56298, 4);\n    }\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1514
    },
    "00c07b1b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c07b1b(int32_t *lpPictDesc, uint32_t lParam, int32_t *nWidth)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint nEscapement;\n    uint var_34h;\n    uint32_t nHeight;\n    int32_t lpRect;\n    int32_t cy;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t dwStyle;\n    int32_t lpNumberOfBytesRead;\n    \n    pcVar1 = _sym.imp.GDI32.dll_DeleteObject;\n    var_18h = -1;\n    var_1ch = -1;\n    var_ch = 500;\n    uVar10 = 0x50000001;\n    lpNumberOfBytesRead = 400;\n    nHeight = 0;\n    var_14h = 0x50000001;\n    dwStyle = 0x88c00000;\n    var_10h = 8;\n    if (*0xc562a0 != 0) {\n        if (*0xc562a4 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(*0xc562a4);\n            *0xc562a4 = 0;\n        }\n        if (*0xc5629c != 0) {\n            (*pcVar1)(*0xc5629c);\n            *0xc5629c = 0;\n        }\n        (*_sym.imp.USER32.dll_DestroyWindow)(*0xc562a0);\n        *0xc562a0 = 0;\n    }\n    if (nWidth == 0x2) {\n        return 0;\n    }\n    uVar4 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&lpRect);\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar4);\n    uVar6 = lParam;\n    piVar2 = lpPictDesc;\n    if ((2 < lParam) && (iVar5 = fcn.00b99c9c(),  iVar5 != -1)) {\n        var_ch = fcn.00b99c9c();\n    }\n    if ((3 < uVar6) && (iVar5 = fcn.00b99c9c(),  iVar5 != -1)) {\n        lpNumberOfBytesRead = fcn.00b99c9c();\n    }\n    if (4 < uVar6) {\n        var_18h = fcn.00b99c9c();\n    }\n    if (5 < uVar6) {\n        var_1ch = fcn.00b99c9c();\n    }\n    if ((6 < uVar6) && (iVar5 = fcn.00b99c9c(),  iVar5 != -1)) {\n        nHeight = fcn.00b99c9c();\n        if (nWidth == 0x1) {\n            if ((nHeight & 8) == 0) {\n                cVar3 = '\\0';\n            }\n            else {\n                cVar3 = '\\x02';\n                var_14h = 0x50000002;\n            }\n            uVar10 = var_14h;\n            if ((nHeight & 4) != 0) {\n                uVar10 = (cVar3 | 0xa0000001U) >> 1;\n                var_14h = uVar10;\n            }\n        }\n        var_10h = ~-((nHeight & 2) != 0) & var_10h;\n        if ((nHeight & 1) == 0) {\n            uVar6 = 0x88c00000;\n        }\n        else {\n            uVar6 = 0x88800000;\n            dwStyle = 0x88800000;\n        }\n        if ((nHeight & 0x10) != 0) {\n            dwStyle = uVar6 ^ 0x8000000;\n        }\n    }\n    uVar6 = var_10h;\n    if (var_18h == -1) {\n        var_18h = (var_24h - var_ch) / 2;\n    }\n    if (var_1ch == -1) {\n        var_1ch = (var_20h - lpNumberOfBytesRead) / 2;\n    }\n    (*_sym.imp.USER32.dll_SetRect)(&lpRect, 0, 0, var_ch, lpNumberOfBytesRead);\n    (*_sym.imp.USER32.dll_AdjustWindowRectEx)(&lpRect, dwStyle, 0, uVar6);\n    iVar5 = *piVar2[1];\n    fcn.00b99997();\n    pcVar1 = _sym.imp.USER32.dll_CreateWindowExW;\n    *0xc562a0 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                          (var_10h, L\"AutoIt v3\", **(iVar5 + 8), dwStyle, var_18h, var_1ch, var_24h - lpRect, \n                           var_20h - cy, *0xc562ac, 0, 0, 0);\n    (*_sym.imp.USER32.dll_GetClientRect)(*0xc562a0, &lpRect);\n    if (nWidth == NULL) {\n        nWidth = NULL;\n        nHeight = (*pcVar1)(0, L\"static\", 0, 0x5000000e, 0, 0, var_24h - lpRect, var_20h - cy, *0xc562a0, 0, 0, 0);\n        iVar5 = *(piVar2[1] + 4);\n        fcn.00b99997();\n        iVar5 = (*_sym.imp.KERNEL32.dll_CreateFileW)(**(iVar5 + 8), 0x80000000, 0, 0, 3, 0, 0);\n        if (iVar5 == -1) {\n            return 0;\n        }\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar5, 0);\n        uVar7 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(2, uVar4);\n        uVar8 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar7);\n        iVar9 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar5, uVar8, uVar4, &lpNumberOfBytesRead, 0);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar7);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar5);\n        if (iVar9 == 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar7);\n            return 0;\n        }\n        (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(uVar7, 1, &lpPictDesc);\n        (*_sym.imp.OLEAUT32.dll_OleCreatePictureIndirect)(lpPictDesc, 0, 0, 0xc22cac, &nWidth);\n        (**(*lpPictDesc + 8))(lpPictDesc);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar7);\n        if (nWidth == NULL) {\n            return 0;\n        }\n        (**(*nWidth + 0xc))(nWidth, &lParam);\n        lParam = (*_sym.imp.USER32.dll_CopyImage)(lParam, 0, 0, 0, 0x2000);\n        (**(*nWidth + 8))(nWidth);\n        uVar10 = nHeight;\n        (*_sym.imp.USER32.dll_SendMessageW)(nHeight, 0x172, 0, lParam);\n        *0xc5629c = lParam;\n        (*_sym.imp.USER32.dll_SetWindowPos)(uVar10, 0, 0, 0, var_24h - lpRect, var_20h - cy, 0x20);\n    }\n    else {\n        lpNumberOfBytesRead = (var_20h - cy) + -0x16;\n        nWidth = (var_24h - lpRect) + -0x16;\n        iVar5 = *(piVar2[1] + 4);\n        fcn.00b99997();\n        uVar10 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                           (0, L\"static\", **(iVar5 + 8), uVar10, 0xb, 0xb, nWidth, lpNumberOfBytesRead, *0xc562a0, 0, 0\n                            , 0);\n        dwStyle = uVar10;\n        uVar4 = (*_sym.imp.GDI32.dll_CreateDCW)(L\"DISPLAY\", 0, 0, 0);\n        uVar7 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n        (*_sym.imp.GDI32.dll_SelectObject)(uVar4, uVar7);\n        (*_sym.imp.GDI32.dll_GetTextFaceW)(uVar4, 0x40, &nEscapement);\n        var_ch = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar4, 0x5a);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar4);\n        if (7 < lParam) {\n            iVar5 = *(piVar2[1] + 0x1c);\n            fcn.00b99997();\n            iVar5 = fcn.00bb2e3c(**(iVar5 + 8));\n            if (iVar5 != 0) {\n                iVar5 = *(piVar2[1] + 0x1c);\n                fcn.00b99997();\n                fcn.00bb2ffc(&nEscapement, **(iVar5 + 8));\n            }\n        }\n        if ((lParam < 9) || (iVar5 = fcn.00b99c9c(),  iVar5 < 6)) {\n            iVar5 = 0xc;\n        }\n        else {\n            iVar5 = fcn.00b99c9c();\n        }\n        if (((lParam < 10) || (iVar9 = fcn.00b99c9c(),  iVar9 < 0)) || (iVar9 = fcn.00b99c9c(),  1000 < iVar9)) {\n            uVar4 = 400;\n        }\n        else {\n            uVar4 = fcn.00b99c9c();\n        }\n        *0xc562a4 = (*_sym.imp.GDI32.dll_CreateFontW)\n                              ((var_ch * iVar5) / -0x48, 0, 0, 0, uVar4, 0, 0, 0, 1, 4, 0, 2, 0, &nEscapement);\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar10, 0x30, *0xc562a4, 1);\n        if ((nHeight & 0x20) != 0) {\n            uVar4 = (*_sym.imp.USER32.dll_GetDC)(uVar10);\n            uVar7 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, *0xc562a4);\n            fcn.00b99997();\n            fcn.00bf4a71(&var_34h);\n            (*_sym.imp.GDI32.dll_SelectObject)(uVar4, uVar7);\n            uVar10 = dwStyle;\n            (*_sym.imp.USER32.dll_ReleaseDC)(dwStyle, uVar4);\n            (*_sym.imp.USER32.dll_MoveWindow)\n                      (uVar10, 0xb, (lpNumberOfBytesRead - nHeight) / 2 + 0xb, nWidth, nHeight, 1);\n        }\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(*0xc562a0, 4);\n    return 0;\n}\n",
        "token_count": 2692
    },
    "00c080a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c080a0(ushort *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint cp;\n    \n    *arg_8h = 2;\n    fcn.00b95c18();\n    fcn.00c0830b(arg_ch, &cp);\n    iVar3 = (*_sym.imp.WSOCK32.dll_inet_addr)(cp);\n    fcn.00b95a64();\n    if ((iVar3 == -1) && (cVar1 = fcn.00bea36d(),  cVar1 != '\\0')) {\n        arg_8h_00 = 1;\n    }\n    else {\n        *(arg_8h + 2) = iVar3;\n        if (arg_10h - 1U < 0xffff) {\n            uVar2 = (*_sym.imp.WSOCK32.dll_htons)(arg_10h);\n            arg_8h[1] = uVar2;\n            return 1;\n        }\n        arg_8h_00 = 2;\n    }\n    fcn.00be6aa3(arg_8h_00, 0);\n    return 0;\n}\n",
        "token_count": 290
    },
    "00c09428": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c09428(int32_t arg_8h, int16_t **arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t *extraout_EDX;\n    int16_t *piVar4;\n    int32_t iVar5;\n    char16_t *pcVar6;\n    uint var_94h;\n    uint pvarg;\n    int32_t *var_6ch;\n    uint var_64h;\n    int32_t *var_5ch;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint pvargDest;\n    char16_t *var_28h;\n    char16_t *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    var_24h = L\"_NewEnum\";\n    var_10h = 0;\n    var_1ch = 0;\n    var_28h = L\"get__NewEnum\";\n    var_4ch = 0;\n    var_48h = 0;\n    var_44h = 0;\n    var_40h = 0;\n    var_20h = 0x20404;\n    var_18h = 0xc0;\n    var_14h = 0x46000000;\n    fcn.00bb3020(&var_94h, 0, 0x20);\n    if (((arg_8h == 0) || (arg_10h == 0)) || (arg_ch == NULL)) {\ncode_r0x00c096c2:\n        pcVar6 = L\"Null Object assignment in FOR..IN loop\";\ncode_r0x00c096c8:\n        iVar5 = 1;\n    }\n    else {\n        cVar2 = fcn.00b993dd();\n        if (cVar2 != '\\0') {\ncode_r0x00c09600:\n            if (arg_ch[3] == 0x8) {\n                piVar4 = *arg_ch;\n            }\n            else {\n                piVar4 = NULL;\n            }\n            if (piVar4 == NULL) goto code_r0x00c096c2;\n            if (arg_ch[3] == 0x8) {\n                piVar4 = *arg_ch;\n            }\n            else {\n                piVar4 = NULL;\n            }\n            if (*piVar4 == 0xd) {\n                if (arg_ch[3] == 0x8) {\n                    piVar4 = *arg_ch;\n                }\n                else {\n                    piVar4 = NULL;\n                }\n                piVar1 = *(piVar4 + 4);\n                (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n                iVar5 = (**(*piVar1 + 0xc))(piVar1, 1, &pvargDest, &var_10h);\n                if (-1 < iVar5) {\n                    if ((var_10h == 0) || (iVar5 == 1)) {\n                        pvargDest._0_2_ = 1;\n                        fcn.00b99a20();\n                        *arg_ch = NULL;\n                        arg_ch[3] = 0x1;\n                    }\n                    fcn.00bf7804(&pvargDest);\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n                    return 0;\n                }\n                fcn.00b99a20();\n                arg_ch[3] = 0x1;\n                var_5ch = NULL;\n                *arg_ch = NULL;\n                pcVar6 = NULL;\n                goto code_r0x00c096cd;\n            }\n            pcVar6 = L\"Incorrect Object type in FOR..IN loop\";\n            goto code_r0x00c096c8;\n        }\n        if (extraout_EDX[3] == 8) {\n            iVar5 = *extraout_EDX;\n        }\n        else {\n            iVar5 = 0;\n        }\n        if (((iVar5 != 0) && (extraout_EDX[3] == 8)) && (piVar1 = *(*extraout_EDX + 8),  piVar1 != NULL)) {\n            iVar5 = (**(*piVar1 + 0x14))(piVar1, 0xc22c2c, &var_24h, 1, 0x400, &var_ch);\n            if (((iVar5 < 0) || (var_ch == -1)) &&\n               ((iVar5 = (**(*piVar1 + 0x14))(piVar1, 0xc22c2c, &var_28h, 1, 0x400, &var_ch),  iVar5 < 0 ||\n                (var_ch == -1)))) {\n                var_ch = -4;\n            }\n            uVar3 = fcn.00bb0fa5(0x10);\n            var_44h = 0;\n            var_4ch = uVar3;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvarg);\n            iVar5 = (**(*piVar1 + 0x18))(piVar1, var_ch, 0xc22c2c, 0x800, 3, &var_4ch, &pvarg, &var_94h, &var_50h);\n            fcn.00bb30b0(uVar3);\n            if (iVar5 < 0) {\n                pcVar6 = NULL;\n                if (iVar5 == -0x7ffdfff7) {\n                    var_5ch = &var_94h;\n                    iVar5 = -0x7ffdfff7;\n                }\n                else {\n                    var_5ch = NULL;\n                }\n                goto code_r0x00c096cd;\n            }\n            if (var_6ch == NULL) {\n                var_5ch = NULL;\n                iVar5 = 1;\n                pcVar6 = L\"Null Object assignment in FOR..IN loop\";\n                goto code_r0x00c096cd;\n            }\n            var_64h._0_2_ = 0xd;\n            iVar5 = (***var_6ch)(var_6ch, &var_20h, &var_5ch);\n            (**(*var_6ch + 8))(var_6ch);\n            pcVar6 = var_5ch;\n            if (var_5ch == NULL) goto code_r0x00c096cd;\n            (**(*var_5ch + 0x14))(var_5ch);\n            fcn.00bf7804(&var_64h);\n            (**(*var_5ch + 8))(var_5ch);\n            goto code_r0x00c09600;\n        }\n        pcVar6 = L\"Null Object assignment in FOR..IN loop\";\n        iVar5 = 2;\n    }\n    var_5ch = NULL;\ncode_r0x00c096cd:\n    uVar3 = fcn.00c096db(iVar5, var_5ch, pcVar6, 1);\n    return uVar3;\n}\n",
        "token_count": 1639
    },
    "00c09a72": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c09a72(uint arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h, uint *arg_18h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    char16_t *arg_10h_00;\n    uint Clsid;\n    uint var_ach;\n    uint var_a8h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_8ch;\n    uint var_7ch;\n    int32_t *var_74h;\n    uint pServerInfo;\n    uint pv;\n    uint *var_64h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint dwAuthnSvc;\n    uint dwAuthzSvc;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint pResults;\n    int32_t *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    uVar3 = 0;\n    dwAuthnSvc = 0;\n    puVar4 = &dwAuthzSvc;\n    for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.00b99a20();\n    arg_18h[3] = 1;\n    *arg_18h = 0;\n    iVar2 = fcn.00be7652(0);\n    if (iVar2 < 0) {\n        uVar3 = 0;\n        arg_10h_00 = NULL;\n    }\n    else {\n        var_7ch._0_2_ = 9;\n        iVar2 = fcn.00be7d24(&Clsid, arg_10h, arg_14h);\n        if (-1 < iVar2) {\n            (*_sym.imp.ole32.dll_CoInitializeSecurity)(0, 0xffffffff, 0, 0, 2, 3, 0, 0, 0);\n            fcn.00bb3020(&pServerInfo, 0, 0x10);\n            fcn.00be80d4();\n            if (arg_10h == 0) {\n                var_64h = NULL;\n            }\n            else {\n                var_44h = 1;\n                fcn.00b97d2c(arg_10h);\n                uVar1 = fcn.00bf56ec(0xc1fac0);\n                if (uVar1 == 0xffffffff) {\n                    var_5ch = var_24h;\n                    var_54h = 0;\n                    var_50h = 0;\n                }\n                else {\n                    arg_10h = uVar1;\n                    if (var_20h < uVar1) {\n                        arg_10h = var_20h;\n                    }\n                    fcn.00b977c7();\n                    fcn.00b979ab(&var_24h, 0, arg_10h);\n                    fcn.00b981a7(&var_8ch);\n                    fcn.00b95a64();\n                    var_54h = var_ach;\n                    var_50h = var_a8h;\n                    arg_8h_00 = fcn.00be6401(&var_8ch, uVar1 + 1, 0xffffffff);\n                    fcn.00b981a7(arg_8h_00);\n                    fcn.00b95a64();\n                    var_5ch = var_9ch;\n                }\n                if (arg_14h == 0) {\n                    var_4ch = 0;\n                    var_48h = 0;\n                }\n                else {\n                    var_4ch = arg_14h;\n                    var_48h = fcn.00bb2e3c(arg_14h);\n                }\n                var_2ch = &var_5ch;\n                var_34h = 2;\n                var_64h = &dwAuthnSvc;\n                dwAuthnSvc = 9;\n                dwAuthzSvc = 0;\n                var_28h = 0;\n                var_30h = 3;\n                var_38h = 0;\n            }\n            var_74h = NULL;\n            fcn.00bb3020(&pResults, 0, 0xc);\n            var_10h = var_74h;\n            pResults = 0xc22c0c;\n            var_ch = 0;\n            iVar2 = (*_sym.imp.ole32.dll_CoCreateInstanceEx)(&Clsid, 0, 0x15, &pServerInfo, 1, &pResults);\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(pv);\n            if ((-1 < iVar2) && (iVar2 = var_ch,  -1 < var_ch)) {\n                if ((var_64h != NULL) && (var_10h != NULL)) {\n                    iVar2 = (*_sym.imp.ole32.dll_CoSetProxyBlanket)\n                                      (var_10h, dwAuthnSvc, dwAuthzSvc, var_38h, var_34h, var_30h, &var_5ch, 0x800);\n                }\n                var_7ch._0_2_ = 9;\n                var_74h = var_10h;\n                if (var_10h == NULL) {\n                    uVar3 = 1;\n                    arg_10h_00 = L\"NULL Pointer assignment\";\n                    iVar2 = 1;\n                    goto code_r0x00c09d1c;\n                }\n                if (-1 < iVar2) {\n                    fcn.00bf7804(&var_7ch);\n                    (**(*var_74h + 8))(var_74h);\n                    goto code_r0x00c09d23;\n                }\n            }\n        }\n        uVar3 = 0;\n        arg_10h_00 = NULL;\n    }\ncode_r0x00c09d1c:\n    uVar3 = fcn.00c096db(iVar2, 0, arg_10h_00, uVar3);\ncode_r0x00c09d23:\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return uVar3;\n}\n",
        "token_count": 1549
    },
    "00c0ee69": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c0ee69(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint arg_8h_00;\n    int32_t iVar4;\n    uint uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack64 = *(arg_8h + 8);\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar4 = 0;\n    if (1 < uStack64) {\n        iVar4 = fcn.00b99c9c();\n    }\n    if (((uStack64 == 0) || (iVar1 = fcn.00b99c9c(),  iVar1 == -1)) ||\n       (iVar1 = **(arg_8h + 4),  fcn.00b99997(),  *(*(iVar1 + 8) + 4) == 0)) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    }\n    else {\n        fcn.00b99997();\n        fcn.00bf3e91(&uStack68 + 3);\n        uVar2 = uStack64;\n        if (uStack68._3_1_ == '\\0') goto code_r0x00c0f108;\n    }\n    iStack60 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x410, 0, uVar2);\n    if ((iStack60 == 0) || (iStack60 == -1)) {\ncode_r0x00c0f108:\n        fcn.00be6aa3(1, 0);\n        return 0;\n    }\n    if (iVar4 == 0) {\n        iVar4 = (*_sym.imp.PSAPI.DLL_GetProcessMemoryInfo)(iStack60, &uStack56, 0x28);\n        if (iVar4 == 0) goto code_r0x00c0f088;\n        arg_8h_00 = fcn.00b9942e();\n        fcn.00b991b0(arg_8h_00, 1);\n        puVar3 = fcn.00b98ea0(arg_8h_00, 2, 1);\n        fcn.00b99a20();\n        puVar3[1] = 0;\n        puVar3[3] = 2;\n        *puVar3 = uStack44;\n        puVar3 = fcn.00b98ea0(arg_8h_00, 2, 1);\n        fcn.00b99a20();\n        puVar3[1] = 0;\n        uStack16 = uStack48;\n    }\n    else {\n        if ((iVar4 != 1) || (iVar4 = (*_sym.imp.KERNEL32.dll_GetProcessIoCounters)(iStack60, &uStack56),  iVar4 == 0)) {\ncode_r0x00c0f088:\n            fcn.00be6aa3(2, 0);\n            goto code_r0x00c0f0fb;\n        }\n        uVar2 = fcn.00b9942e();\n        uStack64 = uVar2;\n        fcn.00b991b0(uVar2, 1);\n        puVar3 = fcn.00b98ea0(uVar2, 2, 1);\n        fcn.00b99a20();\n        puVar3[3] = 2;\n        *puVar3 = uStack56;\n        puVar3[1] = uStack52;\n        puVar3 = fcn.00b98ea0(uStack64, 2, 1);\n        fcn.00b99a20();\n        puVar3[3] = 2;\n        *puVar3 = uStack48;\n        puVar3[1] = uStack44;\n        puVar3 = fcn.00b98ea0(uStack64, 2, 1);\n        fcn.00b99a20();\n        puVar3[3] = 2;\n        *puVar3 = uStack40;\n        puVar3[1] = uStack36;\n        puVar3 = fcn.00b98ea0(uStack64, 2, 1);\n        fcn.00b99a20();\n        puVar3[3] = 2;\n        *puVar3 = uStack32;\n        puVar3[1] = uStack28;\n        puVar3 = fcn.00b98ea0(uStack64, 2, 1);\n        fcn.00b99a20();\n        puVar3[3] = 2;\n        *puVar3 = uStack24;\n        puVar3[1] = uStack20;\n        puVar3 = fcn.00b98ea0(uStack64, 2, 1);\n        fcn.00b99a20();\n        puVar3[1] = uStack12;\n    }\n    *puVar3 = uStack16;\n    puVar3[3] = 2;\ncode_r0x00c0f0fb:\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uStack68);\n    return 0;\n}\n",
        "token_count": 1266
    },
    "00c0f9a8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0f9a8(uint arg_8h, uint arg_ch, int32_t arg_10h, double *arg_14h)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    uchar *arg_8h_00;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    uchar *noname_4;\n    uchar *puVar6;\n    int32_t extraout_EDX;\n    uint8_t uVar7;\n    int32_t unaff_ESI;\n    uint32_t uVar8;\n    bool bVar9;\n    bool bVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    uchar *puVar14;\n    double dVar15;\n    uint uVar16;\n    uint uStack180;\n    int32_t iStack176;\n    uchar *puStack172;\n    uchar *puStack168;\n    uchar *puStack164;\n    uint uStack160;\n    uchar *puStack156;\n    uint32_t uStack152;\n    uint uStack148;\n    int32_t iStack144;\n    uchar auStack140 [56];\n    uchar auStack84 [4];\n    uint auStack80 [10];\n    uint32_t uStack40;\n    uint uStack36;\n    ushort uStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    iStack144 = in_ECX;\n    fcn.00bb3020(auStack80, 0, 0x44);\n    auStack80[0] = 0x44;\n    puStack172 = NULL;\n    uStack36 = 1;\n    uStack32 = 1;\n    uVar8 = 0;\n    puStack168 = NULL;\n    iStack176 = 0;\n    uStack148 = 0;\n    uStack152 = 0;\n    uStack160 = 0;\n    if (arg_ch == '\\0') {\n        if (3 < *(arg_10h + 8)) {\n            uVar8 = fcn.00b99c9c();\n            goto code_r0x00c0fa4e;\n        }\ncode_r0x00c0fa80:\n        if (2 < *(arg_10h + 8)) {\ncode_r0x00c0fa8e:\n            uStack32 = fcn.00b99c9c();\n        }\n    }\n    else {\n        uStack148 = fcn.00b99c9c();\n        if (7 < *(arg_10h + 8)) {\n            uVar8 = fcn.00b99c9c();\ncode_r0x00c0fa4e:\n            uVar8 = uVar8 & 0xffff0000;\n            uStack152 = fcn.00b99c9c();\n            uStack152 = uStack152 & 0xffff;\n            if (arg_ch == '\\0') goto code_r0x00c0fa80;\n        }\n        if (6 < *(arg_10h + 8)) goto code_r0x00c0fa8e;\n        if (arg_ch == '\\0') goto code_r0x00c0fa80;\n    }\n    if ((uVar8 & 0x10000) != 0) {\n        uStack160 = 0x10;\n    }\n    fcn.00b99997();\n    puStack164 = fcn.00bafec6();\n    if (arg_ch == '\\0') {\n        if (1 < *(arg_10h + 8)) {\n            fcn.00b99997();\n            arg_8h_00 = fcn.00bafec6();\n            if ((arg_8h_00 != NULL) && (iVar4 = fcn.00bb2e3c(arg_8h_00),  iVar4 != 0)) goto code_r0x00c0fc21;\n        }\n        pcVar2 = _sym.imp.KERNEL32.dll_GetCurrentDirectoryW;\n        uVar16 = 0;\n        uVar5 = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n        iVar1 = (iVar4 + 1) * 2;\n        puStack164 = fcn.00bb0ff6(-(iVar1 >> 0x20 != 0) | iVar1);\n        (*pcVar2)(iVar4, puStack164, uVar5, uVar16);\n        arg_8h_00 = puStack156;\n        in_ECX = iStack144;\n    }\n    else {\n        puStack172 = puStack164;\n        fcn.00b99997();\n        puStack168 = fcn.00bafec6();\n        fcn.00b99997();\n        iStack176 = fcn.00bafec6();\n        fcn.00b99997();\n        puStack164 = fcn.00bafec6();\n        if (5 < *(arg_10h + 8)) {\n            fcn.00b99997();\n            arg_8h_00 = fcn.00bafec6();\n            if ((arg_8h_00 != NULL) && (iVar4 = fcn.00bb2e3c(arg_8h_00),  iVar4 != 0)) goto code_r0x00c0fbec;\n        }\n        pcVar2 = _sym.imp.KERNEL32.dll_GetSystemDirectoryW;\n        uVar16 = 0;\n        uVar5 = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)();\n        iVar1 = (iVar4 + 1) * 2;\n        arg_8h_00 = fcn.00bb0ff6(-(iVar1 >> 0x20 != 0) | iVar1);\n        puStack164 = arg_8h_00;\n        (*pcVar2)(arg_8h_00, iVar4, uVar5, uVar16);\n        in_ECX = iStack144;\n    }\ncode_r0x00c0fbec:\n    if (arg_ch != '\\0') {\n        fcn.00b99bf8(0xc1f910);\n        fcn.00b99bf8(0xc1f910);\n        fcn.00b99bf8(0xc1f910);\n    }\ncode_r0x00c0fc21:\n    uVar8 = uStack152;\n    fcn.00bf6c7c(uStack152);\n    if (extraout_EDX == 0) {\n        uVar7 = 0;\n    }\n    else {\n        iStack24 = fcn.00bf7339();\n        bVar9 = iStack24 == -1;\n        iStack20 = fcn.00bf7248();\n        bVar10 = iStack20 == -1;\n        iStack28 = fcn.00bf72c1();\n        uVar7 = (iStack28 == -1) - 1U & bVar10 - 1U & bVar9 - 1U & 1;\n        if (uVar7 != 0) {\n            uStack40 = uStack40 | 0x100;\n        }\n    }\n    puVar14 = arg_8h_00;\n    if (arg_ch == '\\0') {\n        iVar4 = (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                          (0, puStack168, 0, 0, uVar7, puStack164, 0, arg_8h_00, auStack84, auStack140);\n        cVar3 = iVar4 != 0;\n    }\n    else {\n        cVar3 = fcn.00be881d();\n        puVar11 = noname_4;\n        puVar12 = puStack168;\n        puVar13 = puStack164;\n        if (cVar3 == '\\0') {\n            cVar3 = fcn.00be8af9(iStack176, puStack172, uStack180, uStack152, noname_4, puStack168, puStack164, \n                                 arg_8h_00, auStack84, auStack140);\n        }\n        else {\n            cVar3 = fcn.00be8858(iStack176, puStack172, uStack180, uStack152, noname_4, puStack168, puStack164, \n                                 arg_8h_00, auStack84, auStack140);\n        }\n        iVar4 = fcn.00bb2e3c(puVar12);\n        puVar6 = puVar12;\n        for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar6 = 0;\n            puVar6 = puVar6 + 1;\n        }\n        iVar4 = fcn.00bb2e3c(puVar13);\n        puVar6 = puVar13;\n        for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar6 = 0;\n            puVar6 = puVar6 + 1;\n        }\n        iVar4 = fcn.00bb2e3c(puVar11);\n        puVar6 = puVar11;\n        for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar6 = 0;\n            puVar6 = puVar6 + 1;\n        }\n        fcn.00bb106c(puVar12);\n        fcn.00bb106c(puVar13);\n        fcn.00bb106c(puVar11);\n    }\n    fcn.00bb106c(puVar14);\n    fcn.00bb106c(arg_8h_00);\n    if (cVar3 == '\\0') {\n        fcn.00be6aa3(1, 0);\n        uVar16 = 0;\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00baff61(uVar5, uVar16);\n        fcn.00b99a20();\n        *(arg_14h + 0xc) = 1;\n        *arg_14h = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iStack176);\n        if (uVar7 != 0) {\n            fcn.00bf6eec();\n            iStack176 = unaff_ESI;\n            fcn.00bf7534();\n            fcn.00c0fe8a(&uStack180);\n        }\n        if (arg_8h == '\\0') {\n            dVar15 = unaff_ESI;\n            if (unaff_ESI < 0) {\n                dVar15 = dVar15 + *0xc4bac8;\n            }\n            fcn.00b99a20();\n            *arg_14h = dVar15;\n            *(arg_14h + 0xc) = 3;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar8);\n        }\n        else {\n            *(in_ECX + 0x444) = uVar8;\n        }\n    }\n    fcn.00bf6d16();\n    return 0;\n}\n",
        "token_count": 2467
    },
    "00c11347": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c11347(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int16_t *piVar1;\n    uint32_t uVar2;\n    \n    fcn.00b97eec();\n    fcn.00b97eec();\n    fcn.00b97eec();\n    if (1 < arg_18h) {\n        piVar1 = fcn.00b97b52(0);\n        if (*piVar1 == 0x5c) {\n            piVar1 = fcn.00b97b52(1);\n            if (*piVar1 == 0x5c) {\n                fcn.00b97e8c(0, 2);\n                uVar2 = fcn.00bf56ec(0xc1fac0);\n                if (uVar2 == 0xffffffff) {\n                    uVar2 = arg_18h;\n                }\n                fcn.00b979ab(&arg_14h, 0, uVar2);\n                fcn.00b97e8c(0, uVar2 + 1);\n                goto code_r0x00c113d5;\n            }\n        }\n    }\n    fcn.00b97eec();\ncode_r0x00c113d5:\n    uVar2 = fcn.00bf56ec(0xc1fac0);\n    if (uVar2 == 0xffffffff) {\n        uVar2 = arg_18h;\n    }\n    fcn.00b979ab(&arg_14h, 0, uVar2);\n    fcn.00b979ab(&arg_14h, uVar2 + 1, (arg_18h - uVar2) + -1);\n    fcn.00b97886(0xc1fac0);\n    fcn.00b95a64();\n    return;\n}\n",
        "token_count": 423
    },
    "00c11c7e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c11c7e(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint arg_8h_00;\n    int32_t iVar6;\n    uint uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint var_20h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00b99bf8(0xc1f910);\n    if ((**(arg_8h + 4))[3] == 5) {\n        uVar7 = ***(arg_8h + 4);\n        var_4h = uVar7;\n        if (*(arg_8h + 8) < 3) {\n            uVar3 = fcn.00b98e6b(1);\n        }\n        else {\n            uVar3 = fcn.00b99c9c();\n        }\n        if (uVar3 == 0xffffffff) {\n            uVar3 = fcn.00b98e6b(1);\n        }\n        uVar8 = fcn.00b98e6b(1);\n        uVar9 = uVar8 & 0xffffffff00000000 | uVar3;\n        if (uVar8 < uVar3) {\n            uVar9 = fcn.00b98e6b(1);\n        }\n        iVar5 = uVar9 >> 0x20;\n        uVar3 = uVar9;\n        if (*(iVar5 + 8) < 2) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00b99c9c();\n            iVar5 = arg_8h;\n        }\n        if (uVar4 <= uVar3) {\n            if (*(iVar5 + 8) < 4) {\n                iVar5 = 0;\n            }\n            else {\n                iVar5 = fcn.00b99c9c();\n            }\n            if ((iVar5 == 1) || (iVar5 == 2)) {\n                var_8h = uVar3 - uVar4;\n                var_10h = fcn.00bb0ff6(var_8h + 1);\n                uVar7 = var_4h;\n                iVar6 = 0;\n                if (uVar4 < uVar3) {\n                    var_ch = var_10h - uVar4;\n                    do {\n                        fcn.00b98ea0(uVar7, 2, 1);\n                        uVar2 = fcn.00b99c9c();\n                        *(var_ch + uVar4) = uVar2;\n                        uVar4 = uVar4 + 1;\n                        iVar6 = var_8h;\n                    } while (uVar4 < uVar3);\n                }\n                iVar1 = var_10h;\n                *(iVar6 + var_10h) = 0;\n                if (iVar5 == 1) {\n                    uVar7 = fcn.00bf573e();\n                }\n                else {\n                    uVar7 = fcn.00bf5b8c();\n                }\n                fcn.00b99bf8(uVar7);\n                fcn.00bb106c(iVar1);\n                fcn.00bb106c(uVar7);\n            }\n            else {\n                fcn.00b977c7();\n                for (; uVar4 < uVar3; uVar4 = uVar4 + 1) {\n                    fcn.00b98ea0(uVar7, 2, 1);\n                    arg_8h_00 = fcn.00b99c9c();\n                    fcn.00b97a84(arg_8h_00);\n                }\n                fcn.00b99b9c(&var_20h);\n                fcn.00b95a64();\n            }\n        }\n    }\n    else {\n        fcn.00be6aa3(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 921
    },
    "00c12781": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c12781(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    int32_t **arg_8h_00;\n    uint32_t arg_8h_01;\n    uint32_t unaff_EDI;\n    uint32_t uVar6;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    int32_t *piStack28;\n    uchar auStack24 [20];\n    \n    uVar3 = fcn.00b99c9c();\n    iVar4 = **(arg_8h + 4);\n    fcn.00b99997();\n    puVar1 = *(iVar4 + 8);\n    uStack32 = puVar1[2];\n    uStack40 = *puVar1;\n    arg_8h_01 = puVar1[1];\n    piStack28 = puVar1[3];\n    *piStack28 = *piStack28 + 1;\n    uStack36 = arg_8h_01;\n    fcn.00b97b76(arg_8h_01);\n    if (uVar3 == 8) {\n        uVar3 = 0;\n        if (arg_8h_01 != 0) {\n            do {\n                fcn.00b97b52(uVar3);\n                iVar4 = fcn.00bf4ce9();\n                if (iVar4 == 0) {\n                    puVar5 = fcn.00b97b52(uVar3);\n                    fcn.00b97a84(*puVar5);\n                }\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < arg_8h_01);\n        }\n        arg_8h_00 = &piStack28;\n    }\n    else {\n        if (((uVar3 & 1) != 0) && (arg_8h_01 != 0)) {\n            uVar6 = 0;\n            if (arg_8h_01 != 0) {\n                do {\n                    fcn.00b97b52(uVar6);\n                    iVar4 = fcn.00bf4ce9();\n                    if (iVar4 == 0) break;\n                    uVar6 = uVar6 + 1;\n                } while (uVar6 < arg_8h_01);\n            }\n            fcn.00b979ab(&stack0xffffffd4, uVar6, arg_8h_01 - uVar6);\n            arg_8h_01 = unaff_EDI;\n            fcn.00b981a7(&uStack40);\n        }\n        if (((uVar3 & 2) != 0) && (arg_8h_01 != 0)) {\n            do {\n                uVar6 = arg_8h_01;\n                arg_8h_01 = uVar6 - 1;\n                if (arg_8h_01 == 0xffffffff) break;\n                fcn.00b97b52(arg_8h_01);\n                iVar4 = fcn.00bf4ce9();\n            } while (iVar4 != 0);\n            fcn.00b979ab(&piStack28, 0, uVar6);\n            fcn.00b981a7(auStack24);\n            arg_8h_01 = uStack40;\n        }\n        if (((uVar3 & 4) != 0) && (arg_8h_01 != 0)) {\n            fcn.00b97e8c(0, 0xffffffff);\n            bVar2 = false;\n            uVar3 = 0;\n            if (arg_8h_01 != 0) {\n                do {\n                    fcn.00b97b52(uVar3);\n                    iVar4 = fcn.00bf4ce9();\n                    if (iVar4 == 0) {\n                        bVar2 = false;\ncode_r0x00c128f2:\n                        puVar5 = fcn.00b97b52(uVar3);\n                        fcn.00b97a84(*puVar5);\n                    }\n                    else if (!bVar2) {\n                        bVar2 = true;\n                        goto code_r0x00c128f2;\n                    }\n                    uVar3 = uVar3 + 1;\n                } while (uVar3 < arg_8h_01);\n            }\n            fcn.00b981a7(auStack24);\n        }\n        arg_8h_00 = &stack0xffffffd4;\n    }\n    fcn.00b99b9c(arg_8h_00);\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1069
    },
    "00c15a20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c15a20(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint var_24h;\n    int32_t *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar1 = *(arg_8h + 8);\n    uVar2 = fcn.00bb0ff6(0x10000);\n    fcn.00b9538e(uVar2);\n    var_14h = 0;\n    fcn.00b9b9ad(arg_8h);\n    iVar3 = fcn.00b9b93d(1);\n    if (iVar3 < 1) {\n        if (iVar3 < 0) {\n            fcn.00be6aa3(-iVar3, 0);\n        }\n    }\n    else {\n        uVar2 = **(in_ECX + 0x1f0);\n        var_8h = (*_sym.imp.USER32.dll_GetMenu)(uVar2);\n        if (var_8h != 0) {\n            var_ch = 3;\n            if (2 < uVar1) {\n                do {\n                    iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(var_8h);\n                    if (iVar3 == 0) goto code_r0x00c15b82;\n                    var_4h = 0;\n                    while( true ) {\n                        (*_sym.imp.USER32.dll_GetMenuStringW)(var_8h, var_4h, var_24h, 0x7fff, 0x400);\n                        iVar5 = *(*(arg_8h + 4) + -4 + var_ch * 4);\n                        fcn.00b99997();\n                        uVar4 = **(iVar5 + 8);\n                        iVar5 = *(*(arg_8h + 4) + -4 + var_ch * 4);\n                        fcn.00b99997();\n                        arg_8h_00 = **(iVar5 + 8);\n                        uVar4 = fcn.00bb2e3c(uVar4);\n                        iVar5 = fcn.00bb38a2(arg_8h_00, var_24h, uVar4);\n                        if (iVar5 == 0) break;\n                        var_4h = var_4h + 1;\n                        if (iVar3 - 1U < var_4h) goto code_r0x00c15b82;\n                    }\n                    if (var_ch == uVar1) {\n                        var_14h = (*_sym.imp.USER32.dll_GetMenuItemID)(var_8h);\n                    }\n                    else {\n                        var_8h = (*_sym.imp.USER32.dll_GetSubMenu)(var_8h, var_4h);\n                        if (var_8h == 0) goto code_r0x00c15b82;\n                    }\n                    var_ch = var_ch + 1;\n                } while (var_ch <= uVar1);\n                if (var_14h == -1) {\ncode_r0x00c15b82:\n                    fcn.00b99a20();\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                    goto code_r0x00c15bc9;\n                }\n            }\n            fcn.00bf387d();\n            (*_sym.imp.USER32.dll_PostMessageW)(uVar2, 0x111, var_14h, 0);\n            fcn.00bf387d();\n            fcn.00bf54e6();\n            goto code_r0x00c15bc9;\n        }\n    }\n    fcn.00b99a20();\n    arg_ch[3] = 1;\n    *arg_ch = 0;\ncode_r0x00c15bc9:\n    *var_20h = *var_20h + -1;\n    if (*var_20h == 0) {\n        fcn.00bb106c(var_20h);\n        fcn.00bb106c(var_24h);\n    }\n    return 0;\n}\n",
        "token_count": 985
    },
    "00c15c53": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c15c53(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint32_t Y;\n    int32_t iVar5;\n    uint Y_00;\n    uint uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iStack44;\n    int32_t iStack40;\n    uint32_t uStack36;\n    \n    uVar4 = *(arg_8h + 8);\n    uStack36 = uVar4;\n    fcn.00b9b9ad(arg_8h);\n    uVar7 = 1;\n    iVar2 = fcn.00b9b93d(1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            fcn.00be6aa3(-iVar2, 0);\n        }\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        return 0;\n    }\n    uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)();\n    uVar3 = (uVar3 & 0x40000000) != 0;\n    uVar6 = 0xc15cd7;\n    fcn.00beaf6a(&stack0xffffffd8, uVar3);\n    if (uVar4 < 5) {\ncode_r0x00c15cfa:\n        unaff_ESI = iStack44 - unaff_ESI;\n    }\n    else {\n        uVar6 = 0x29;\n        cVar1 = fcn.00b99dae(0x29);\n        if (cVar1 != '\\0') goto code_r0x00c15cfa;\n        unaff_ESI = fcn.00b99c9c();\n    }\n    if ((uVar7 < 6) || (cVar1 = fcn.00b99dae(0x29),  cVar1 != '\\0')) {\n        iStack40 = iStack40 - unaff_EBX;\n    }\n    else {\n        iStack40 = fcn.00b99c9c();\n    }\n    Y_00 = 0x29;\n    uVar4 = *(*(arg_8h + 4) + 8);\n    cVar1 = fcn.00b99dae(0x29);\n    uVar7 = uVar4;\n    if (cVar1 == '\\0') {\n        uVar4 = fcn.00b99c9c();\n    }\n    uVar8 = *(*(arg_8h + 4) + 0xc);\n    cVar1 = fcn.00b99dae(0x29);\n    uVar9 = uVar7;\n    if (cVar1 == '\\0') {\n        uVar7 = fcn.00b99c9c();\n    }\n    Y = uVar7;\n    if (6 < uVar4) {\n        iVar5 = 0xc15da2;\n        iVar2 = fcn.00b99c9c();\n        Y = uVar7;\n        if (iVar2 != -1) {\n            if ((iVar2 < 1) || (100 < iVar2)) {\n                iVar5 = 10;\n                iVar2 = 10;\n            }\n            if ((uVar3 != uVar8) || (uVar3 = uVar8,  Y = uVar9,  uVar7 != uVar9)) {\n                while (cVar1 = fcn.00bf5310(iVar2, 1, &stack0xffffffac, &stack0xffffffa8),  cVar1 != '\\0') {\n                    fcn.00beb122(uVar6, Y_00, unaff_ESI, iStack40);\n                    iVar2 = iVar5;\n                    fcn.00bf54e6();\n                    iVar5 = iVar2;\n                }\n                goto code_r0x00c15e36;\n            }\n        }\n    }\n    fcn.00beb122(uVar3, Y, unaff_ESI, iStack40);\ncode_r0x00c15e36:\n    uVar6 = **(in_ECX + 0x1f0);\n    fcn.00b99a20();\n    arg_ch[3] = 7;\n    *arg_ch = uVar6;\n    return 0;\n}\n",
        "token_count": 1023
    },
    "00c16656": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00c16656(uint arg_8h, int32_t *arg_ch, uint arg_10h, int16_t *arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, uint noname_9, int32_t arg_30h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 2;\n    }\n    if (arg_28h < 0x10) {\n        arg_28h = arg_28h | 2;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x96;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    if ((-1 < arg_30h) && (*arg_14h != 0)) {\n        iVar2 = fcn.00b91d35(arg_8h, 0, L\"SysAnimate32\", 0, arg_28h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, \n                             arg_20h, 0);\n        *arg_ch = iVar2;\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x467, 0, arg_14h);\n            if (((iVar2 != 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(arg_14h),  iVar2 == 0)) ||\n               (iVar2 = (*pcVar1)(*arg_ch, 0x467, iVar2, arg_30h),  iVar2 != 0)) {\n                if (*0xc567b8 == 0) {\n                    *(arg_ch + 0x86) = 0x300;\n                }\n                return 1;\n            }\n            (*_sym.imp.USER32.dll_DestroyWindow)(*arg_ch);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 501
    },
    "00c1671c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00c1671c(int32_t arg_8h, int32_t *arg_ch, uint noname_2, int32_t arg_14h, uint arg_18h, uint arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (arg_14h != 0) {\n        if (arg_20h == -1) {\n            arg_20h = 0x96;\n        }\n        if (arg_24h == -1) {\n            arg_24h = 0x96;\n        }\n        *(arg_ch + 0x22) = arg_18h;\n        *(arg_ch + 0x8a) = arg_1ch;\n        *(arg_ch + 0x23) = arg_20h;\n        *(arg_ch + 0x8e) = arg_24h;\n        if (*(arg_8h + 0x1cc) == 0) {\n            iVar2 = fcn.00bb0ff6(0x1c);\n            if (iVar2 == 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = fcn.00beba39(***(*0xc56810 + *0xc5681c * 4));\n            }\n            *(arg_8h + 0x1cc) = uVar3;\n        }\n        iVar2 = fcn.00bebc06(arg_14h, arg_ch, arg_ch);\n        arg_ch[0x20] = iVar2;\n        if (*arg_ch != 0) {\n            if (*0xc567b8 == 0) {\n                *(arg_ch + 0x86) = 0x300;\n            }\n            pcVar1 = _sym.imp.USER32.dll_SetWindowLongW;\n            (*_sym.imp.USER32.dll_SetWindowLongW)(*arg_ch, 0xfffffff0, -(arg_28h != 0xffffffff) & arg_28h | 0x50010000);\n            (*pcVar1)(*arg_ch, 0xffffffec, -(arg_2ch != 0xffffffff) & arg_2ch | 0x10000);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 536
    },
    "00c16825": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00c16825(uint *arg_8h, int32_t *arg_ch, uint wParam, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint32_t arg_18h_00;\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    arg_18h_00 = fcn.00c1b8ac(-(arg_28h != 0xffffffff) & arg_28h | 0x10000);\n    bVar3 = (arg_18h_00 & 1) != 0;\n    if (bVar3) {\n        arg_18h_00 = arg_18h_00 ^ 1;\n    }\n    if (arg_2ch == -1) {\n        arg_2ch = 0x100;\n    }\n    iVar1 = fcn.00b91d35(arg_8h, arg_2ch, L\"button\", arg_14h, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, wParam, \n                         arg_2ch, 1);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if (bVar3) {\n            (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0x401, wParam, 0);\n        }\n        if (*0xc567b8 == 0) {\n            *(arg_ch + 0x86) = 0x300;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 406
    },
    "00c168bf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00c168bf(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 3;\n    }\n    if ((arg_28h & 7) == 0) {\n        arg_28h = arg_28h | 3;\n    }\n    uVar1 = fcn.00c1b8ac(arg_28h | 0x10000);\n    arg_2ch = -(arg_2ch != 0xffffffff) & arg_2ch;\n    iVar2 = fcn.00b91d35(arg_8h, arg_2ch, L\"button\", arg_14h, uVar1, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, \n                         arg_2ch, 1);\n    *arg_ch = iVar2;\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n        arg_ch[0x13] = iVar2;\n        if (*0xc567b8 == 0) {\n            *(arg_ch + 0x86) = 0x200;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 376
    },
    "00c169fa": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c169fa(int32_t arg_8h, int32_t arg_ch, uint noname_2, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    iVar2 = arg_ch;\n    iVar1 = arg_8h;\n    if (arg_14h == -1) {\n        arg_ch = iVar2;\n        if (*(arg_8h + 0x1a0) == 0) {\n            uVar4 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n            *(iVar1 + 0x1a0) = uVar4;\n            *(iVar1 + 0x1a4) = uVar4;\n            *(iVar2 + 0xc) = uVar4;\n            arg_ch = iVar2;\n            if (*(iVar1 + 0x1a0) == 0) goto code_r0x00c16a3b;\n        }\ncode_r0x00c16ac6:\n        *(arg_ch + 0x92) = 0;\n        uVar4 = 1;\n    }\n    else {\n        cVar3 = fcn.00b92402(arg_14h, &arg_8h, &var_4h);\n        if (cVar3 != '\\0') {\n            arg_14h = **(*0xc56810 + arg_8h * 4);\n            iVar1 = **(*0xc56824 + var_4h * 4);\n            cVar3 = *(iVar1 + 0x90);\n            if ((((cVar3 != '\\x0e') && (cVar3 != '\\x0f')) && (cVar3 != '\\x02')) &&\n               ((cVar3 != '\\x03' && (*(iVar1 + 0xc) == 0)))) {\n                uVar4 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                *(arg_ch + 0xc) = uVar4;\n                *(arg_14h + 0x1a4) = uVar4;\n                *(**(*0xc56824 + var_4h * 4) + 0xc) = *(arg_ch + 0xc);\n                if (*(arg_ch + 0xc) != 0) goto code_r0x00c16ac6;\n            }\n        }\ncode_r0x00c16a3b:\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 557
    },
    "00c16b8f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00c16b8f(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0x3010c0;\n    }\n    if ((arg_28h & 0x800) == 0) {\n        arg_28h = arg_28h | 0x10004;\n    }\n    else {\n        arg_28h = arg_28h | 4;\n    }\n    uVar1 = fcn.00c1b8ac(arg_28h);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    iVar2 = fcn.00b91d35(arg_8h, arg_2ch, L\"edit\", arg_14h, uVar1, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, arg_20h\n                         , 1);\n    *arg_ch = iVar2;\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthW)(iVar2);\n        uVar3 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch, 0xb1, uVar1, uVar1);\n        if (*0xc567b8 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n        uVar3 = uVar3 & 0xffffff00 | 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 494
    },
    "00c16c3e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00c16c3e(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint arg_18h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    arg_18h_00 = fcn.00c1b8ac(-(arg_28h != 0xffffffff) & arg_28h | 0x20007);\n    arg_2ch = -(arg_2ch != 0xffffffff) & arg_2ch;\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    iVar1 = fcn.00b91d35(arg_8h, arg_2ch, L\"button\", arg_14h, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, \n                         arg_2ch, 1);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n        arg_ch[0x13] = uVar2;\n        if (*0xc567b8 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n        uVar2 = uVar2 & 0xffffff00 | 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 413
    },
    "00c16cd2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00c16cd2(uint arg_8h, int32_t *arg_ch, uint arg_10h, int16_t *arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, uint32_t arg_2ch, uint arg_30h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *arg_8h_00;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0x100;\n    }\n    uVar2 = fcn.00c1b8ac(arg_28h | 0x10003);\n    arg_2ch = -(arg_2ch != 0xffffffff) & arg_2ch;\n    if (arg_20h == -1) {\n        arg_20h = 0x20;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x20;\n    }\n    iVar3 = fcn.00b91d35(arg_8h, arg_2ch, L\"static\", 0, uVar2, arg_18h, arg_1ch, 0, 0, arg_10h, arg_2ch, 0);\n    *arg_ch = iVar3;\n    if (iVar3 == 0) {\ncode_r0x00c16d8c:\n        uVar5 = 0;\n    }\n    else {\n        *(arg_ch + 0x8e) = arg_24h;\n        *(arg_ch + 0x23) = arg_20h;\n        uVar5 = 1;\n        if (*arg_14h != 0) {\n            *(arg_ch + 0x22) = arg_18h;\n            *(arg_ch + 0x8a) = arg_1ch;\n            arg_8h_00 = &arg_30h;\n            uVar2 = 0;\n            fcn.00b99ac0(arg_8h_00);\n            cVar1 = fcn.00c1bab8(arg_ch, arg_14h, arg_8h_00, in_stack_ffffffac, in_stack_ffffffb0, uVar2);\n            if (cVar1 == '\\0') {\n                (*_sym.imp.USER32.dll_DestroyWindow)(*arg_ch);\n                goto code_r0x00c16d8c;\n            }\n            (*_sym.imp.USER32.dll_MoveWindow)\n                      (*arg_ch, *(arg_ch + 0x22), *(arg_ch + 0x8a), *(arg_ch + 0x23), *(arg_ch + 0x8e), 1);\n        }\n        if (*0xc567b8 == 0) {\n            *(arg_ch + 0x86) = 0x300;\n        }\n    }\n    uVar4 = fcn.00b99a20();\n    return uVar4 & 0xffffff00 | uVar5;\n}\n",
        "token_count": 716
    },
    "00c16ddf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00c16ddf(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0x80;\n    }\n    if ((arg_28h & 0x800) == 0) {\n        arg_28h = arg_28h | 0x10000;\n    }\n    else {\n        arg_28h = arg_28h & 0xfffffffb;\n    }\n    uVar1 = fcn.00c1b8ac(arg_28h);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x14;\n    }\n    iVar2 = fcn.00b91d35(arg_8h, arg_2ch, L\"edit\", arg_14h, uVar1, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, arg_20h\n                         , 1);\n    *arg_ch = iVar2;\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (*0xc567b8 == 0) {\n            *(arg_ch + 0x86) = 0x200;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 422
    },
    "00c17192": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00c17192(uint noname_0, int32_t arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint arg_8h;\n    uint uVar1;\n    code *pcVar2;\n    char cVar3;\n    ushort uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar8;\n    int16_t iStackY8268;\n    uint uStackY160;\n    uint uStackY156;\n    uint uStackY152;\n    int32_t iStackY148;\n    uint uStackY144;\n    uint uStackY140;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t hWnd;\n    \n    hWnd = 0xc1719f;\n    fcn.00bc1b90();\n    var_8h = unaff_ESI;\n    hWnd = unaff_EBX;\n    cVar3 = fcn.00b92402(arg_18h, &fcn.00c17192::var_8h, &fcn.00c17192::hWnd);\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    if (cVar3 != '\\0') {\n        arg_8h = **(*0xc56810 + var_8h * 4);\n        uVar1 = ***(*0xc56824 + hWnd * 4);\n        *(arg_ch + 0x34) = uVar1;\n        *(arg_ch + 0x93) = *(**(*0xc56824 + hWnd * 4) + 0x93);\n        (*pcVar2)();\n        var_8h = (*pcVar2)();\n        *(arg_ch + 0x94) = var_8h;\n        *(**(*0xc56824 + hWnd * 4) + 0x94) = var_8h;\n        uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)();\n        fcn.00bb3020();\n        uVar4 = (*pcVar2)();\n        *(arg_ch + 0x88) = uVar4;\n        iVar8 = 1;\n        arg_18h = 1;\n        fcn.00c1af23(&stack0xffffdfb4, &fcn.00c17192::arg_14h, 0xc567c4);\n        iVar6 = (*pcVar2)();\n        if (iVar6 != -1) {\n            while( true ) {\n                cVar3 = fcn.00c1af23(&stack0xffffdfb4, &fcn.00c17192::arg_14h, 0xc567c4);\n                if (cVar3 == '\\0') {\n                    if (*(arg_ch + 0x93) != -1) {\n                        uStackY140 = 0xc173b6;\n                        fcn.00c1b57f(arg_8h, **(*0xc56824 + hWnd * 4), 1);\n                    }\n                    return 1;\n                }\n                if (var_8h <= iVar8) break;\n                if (iStackY8268 != 0) {\n                    uStackY144 = 0xc17322;\n                    uStackY140 = uVar1;\n                    iVar6 = (*pcVar2)();\n                    if (iVar6 == 0) {\n                        return 0;\n                    }\n                }\n                if ((uVar5 & 1) != 0) {\n                    uStackY144 = 0xc17341;\n                    uStackY140 = uVar1;\n                    iVar6 = (*pcVar2)();\n                    iVar6 = iVar6 + 0xc;\n                    if (0x96 < iVar6) {\n                        iVar6 = 0x96;\n                    }\n                    uStackY144 = 0;\n                    iStackY148 = arg_18h;\n                    uStackY152 = 0x101d;\n                    uStackY160 = 0xc1735c;\n                    uStackY156 = uVar1;\n                    iVar7 = (*pcVar2)();\n                    iVar8 = arg_18h;\n                    if (iVar7 <= iVar6) {\n                        (*pcVar2)();\n                    }\n                }\n                iVar8 = iVar8 + 1;\n                arg_18h = iVar8;\n            }\n            uStackY144 = 0xc1738d;\n            uStackY140 = uVar1;\n            (*pcVar2)();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1111
    },
    "00c173c1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c173c1(uint *arg_8h, int32_t arg_ch, uint arg_10h, int32_t item, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    uint lpmi;\n    uint var_30h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_10h;\n    int32_t var_4h;\n    \n    lpmi = 0x30;\n    fcn.00bb3020(&var_30h, 0, 0x2c);\n    puVar4 = arg_8h;\n    if (item == -1) {\n        iVar3 = arg_8h[0x67];\n        if (iVar3 == 0) {\n            uVar2 = (*_sym.imp.USER32.dll_CreateMenu)();\n            puVar4[0x67] = uVar2;\n            (*_sym.imp.USER32.dll_SetMenu)(*puVar4, uVar2);\n            iVar3 = puVar4[0x67];\n            puVar4[0x69] = iVar3;\n        }\n        piVar5 = arg_ch + 0xc;\n        *piVar5 = iVar3;\n    }\n    else {\n        cVar1 = fcn.00b92402(item, &arg_8h, &var_4h);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        puVar4 = **(*0xc56810 + arg_8h * 4);\n        iVar3 = *(**(*0xc56824 + var_4h * 4) + 0xc);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        piVar5 = arg_ch + 0xc;\n        *piVar5 = iVar3;\n        if (*(**(*0xc56824 + var_4h * 4) + 0x90) != '\\f') {\n            var_30h = 4;\n            iVar3 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(iVar3, item, 0, &lpmi);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            *piVar5 = var_20h;\n        }\n        if (*piVar5 == 0) {\n            return 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_IsMenu)(*piVar5);\n        if (iVar3 == 0) {\n            return 0;\n        }\n    }\n    iVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n    if (iVar3 == 0) {\n        return 0;\n    }\n    var_10h = arg_18h;\n    var_24h = arg_10h;\n    var_30h = 0x46;\n    var_20h = iVar3;\n    (*_sym.imp.USER32.dll_InsertMenuItemW)(*piVar5, arg_1ch, 1, &lpmi);\n    (*_sym.imp.USER32.dll_DrawMenuBar)(*puVar4);\n    puVar4[0x69] = iVar3;\n    return 1;\n}\n",
        "token_count": 721
    },
    "00c17500": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00c17500(uint *arg_8h, int32_t arg_ch, uint arg_10h, int32_t item, int16_t *arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lpmii;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    int16_t *var_14h;\n    int32_t var_8h;\n    \n    lpmii = 0x30;\n    fcn.00bb3020(&var_34h, 0, 0x2c);\n    if (item == -1) {\n        if (arg_8h[0x69] == 0) {\n            return 0;\n        }\n        *(arg_ch + 0xc) = arg_8h[0x67];\n        iVar4 = arg_ch;\n        puVar5 = arg_8h;\n    }\n    else {\n        cVar2 = fcn.00b92402(item, &arg_8h, &var_8h);\n        iVar4 = arg_ch;\n        if (cVar2 == '\\0') {\n            return 0;\n        }\n        puVar5 = **(*0xc56810 + arg_8h * 4);\n        if (puVar5[0x69] == 0) {\n            return 0;\n        }\n        iVar3 = *(**(*0xc56824 + var_8h * 4) + 0xc);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        *(arg_ch + 0xc) = iVar3;\n        if (*(**(*0xc56824 + var_8h * 4) + 0x90) == '\\x0e') {\n            var_34h = 4;\n            iVar3 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*(arg_ch + 0xc), item, 0, &lpmii);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            *(iVar4 + 0xc) = var_24h;\n        }\n        if (*(iVar4 + 0xc) == 0) {\n            return 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_IsMenu)(*(iVar4 + 0xc));\n        if (iVar3 == 0) {\n            return 0;\n        }\n    }\n    uVar1 = arg_1ch;\n    var_34h = 0x13;\n    var_30h = 0;\n    if (arg_20h == 1) {\n        var_30h = 0x200;\n    }\n    if (*arg_18h == 0) {\n        var_30h = 0x800;\n    }\n    else {\n        var_14h = arg_18h;\n    }\n    var_28h = arg_10h;\n    iVar3 = (*_sym.imp.USER32.dll_InsertMenuItemW)(*(iVar4 + 0xc), arg_1ch, 1, &lpmii);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    *(iVar4 + 0x88) = uVar1;\n    (*_sym.imp.USER32.dll_DrawMenuBar)(*puVar5);\n    return 1;\n}\n",
        "token_count": 769
    },
    "00c17648": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00c17648(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h, \n            uint32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = fcn.00c1b8ac(-(arg_28h != 0xffffffff) & arg_28h | 0x10000);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    arg_20h = -(arg_20h != 0xffffffff) & arg_20h;\n    arg_24h = -(arg_24h != 0xffffffff) & arg_24h;\n    iVar3 = fcn.00b91d35(arg_8h, arg_2ch, L\"SysMonthCal32\", 0, uVar2, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, \n                         arg_2ch, 1);\n    *arg_ch = iVar3;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if ((arg_20h == 0) || (arg_24h == 0)) {\n            (*_sym.imp.USER32.dll_SendMessageW)(iVar3, 0x1009, 0, &var_10h);\n            (*_sym.imp.USER32.dll_SetWindowPos)(*arg_ch, 0, arg_18h, arg_1ch, var_8h, var_4h, 4);\n        }\n        fcn.00bf589f(1, 1);\n        (*pcVar1)(*arg_ch, 0x1002, 0, &var_20h);\n        if (*0xc567b8 == 0) {\n            *(arg_ch + 0x86) = 0x300;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 535
    },
    "00c1772a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00c1772a(uint *arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint X, uint Y, int32_t nWidth, int32_t nHeight\n            , uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar1 = arg_28h;\n    if (arg_28h == 0xffffffff) {\n        uVar1 = 0x100;\n    }\n    uVar2 = fcn.00c1b8ac(uVar1 | 0xe);\n    uVar1 = -(arg_2ch != 0xffffffff) & arg_2ch;\n    iVar3 = fcn.00b91d35(arg_8h, uVar1, L\"static\", 0, uVar2, X, Y, 0, 0, arg_10h, uVar1, 0);\n    *arg_ch = iVar3;\n    if (iVar3 != 0) {\n        if (nWidth == -1) {\n            nWidth = 0x96;\n        }\n        if (nHeight == -1) {\n            nHeight = 0x96;\n        }\n        if (*0xc567b8 == 0) {\n            *(arg_ch + 0x86) = 0x300;\n        }\n        iVar3 = fcn.00c1bced(arg_ch, arg_14h, &nWidth, &nHeight);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_MoveWindow)(*arg_ch, X, Y, nWidth, nHeight, 0);\n            uVar2 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(0);\n            uVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch, 0x173, 0, 0);\n            (*_sym.imp.GDI32.dll_SelectObject)(uVar2, uVar4);\n            uVar4 = (*_sym.imp.GDI32.dll_GetPixel)(uVar2, 0, 0);\n            (*_sym.imp.GDI32.dll_DeleteDC)(uVar2);\n            uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(*arg_8h, 0xffffffec);\n            if ((uVar1 & 0x80000) != 0) {\n                (*_sym.imp.USER32.dll_SetLayeredWindowAttributes)(*arg_8h, uVar4, 0, 1);\n            }\n            return 1;\n        }\n        (*_sym.imp.USER32.dll_DestroyWindow)(*arg_ch);\n    }\n    return 0;\n}\n",
        "token_count": 607
    },
    "00c1797d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00c1797d(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t arg_28h, uint32_t arg_2ch)\n\n{\n    code *pcVar1;\n    uint32_t arg_18h_00;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (arg_28h == -1) {\n        arg_28h = 1;\n    }\n    arg_18h_00 = fcn.00c1b8ac(arg_28h);\n    arg_2ch = -(arg_2ch != 0xffffffff) & arg_2ch;\n    iVar2 = fcn.00b91d35(arg_8h, arg_2ch, L\"msctls_trackbar32\", 0, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, \n                         arg_10h, arg_2ch, 0);\n    *arg_ch = iVar2;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x405, 0, 0);\n        if ((arg_18h_00 & 1) != 0) {\n            (*pcVar1)(*arg_ch, 0x406, 0, 0x640000);\n            (*pcVar1)(*arg_ch, 0x414, 10, 0);\n        }\n        uVar3 = 1;\n        if (*0xc567b8 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 436
    },
    "00c17a1f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00c17a1f(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint noname_3, uint X, uint Y, int32_t cx, int32_t arg_24h, \n            uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint arg_18h;\n    int32_t iVar2;\n    \n    if (*(arg_8h + 0x188) == 0) {\n        arg_18h = fcn.00c1b8ac(-(arg_28h != 0xffffffff) & arg_28h | 0x4014000);\n        arg_2ch = -(arg_2ch != 0xffffffff) & arg_2ch;\n        if (cx == -1) {\n            cx = 0x96;\n        }\n        if (arg_24h == -1) {\n            arg_24h = 0x96;\n        }\n        iVar2 = fcn.00b91d35(arg_8h, arg_2ch, L\"SysTabControl32\", 0xc1f910, arg_18h, X, Y, cx, arg_24h, arg_10h, arg_2ch\n                             , 1);\n        *arg_ch = iVar2;\n        if (iVar2 == 0) {\n            uVar1 = 0;\n        }\n        else {\n            (*_sym.imp.USER32.dll_SetWindowPos)(iVar2, 0xffffffff, X, Y, cx, arg_24h, 0x20);\n            iVar2 = *arg_ch;\n            *(arg_8h + 0x18c) = 0xffffffff;\n            *(arg_8h + 400) = 0xffffffff;\n            *(arg_8h + 0x194) = 0;\n            *(arg_8h + 0x188) = iVar2;\n            *(arg_8h + 0x198) = 1;\n            if (*0xc567b8 == 0) {\n                *(arg_ch + 0x86) = 0x300;\n            }\n            uVar1 = CONCAT31(iVar2 >> 8, 1);\n        }\n    }\n    else {\n        uVar1 = in_EAX & 0xffffff00;\n    }\n    return uVar1;\n}\n",
        "token_count": 532
    },
    "00c17bb5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00c17bb5(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    bool bVar4;\n    \n    uVar1 = arg_28h;\n    if (arg_28h == 0xffffffff) {\n        uVar1 = 0x37;\n    }\n    uVar1 = fcn.00c1b8ac(uVar1 | 0x10000);\n    bVar4 = (uVar1 & 0x100) != 0;\n    if (bVar4) {\n        uVar1 = uVar1 ^ 0x100;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x96;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    iVar2 = fcn.00b91d35(arg_8h, -(arg_2ch != 0xffffffff) & arg_2ch, L\"SysTreeView32\", 0xc1f910, uVar1, arg_18h, arg_1ch\n                         , arg_20h, arg_24h, arg_10h, uVar1, 0);\n    *arg_ch = iVar2;\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        if (*(arg_8h + 0x188) != 0) {\n            (*_sym.imp.USER32.dll_SetWindowPos)(iVar2, 0, 0, 0, 0, 0, 0x13);\n        }\n        *(arg_8h + 0x1ac) = *arg_ch;\n        if (bVar4) {\n            *(arg_ch + 0x24) = 0x10;\n            uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(*arg_ch, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongW)(*arg_ch, 0xfffffff0, uVar1 | 0x100);\n        }\n        if (*(arg_8h + 0x38) != '\\0') {\n            iVar2 = *(arg_8h + 0x1c);\n            fcn.00b92402(arg_10h, &arg_2ch, &arg_28h);\n            fcn.00b92327(arg_2ch, arg_28h);\n            if (iVar2 != -1) {\n                fcn.00b92327(arg_2ch, iVar2);\n            }\n        }\n        *(arg_8h + 0x1b4) = 0xffffffff;\n        *(arg_8h + 0x1b8) = 0xffffffff;\n        uVar3 = 1;\n        if (*0xc567b8 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 728
    },
    "00c17e02": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c17e02(int32_t *arg_8h, int32_t *arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint noname_10;\n    \n    uVar4 = arg_18h;\n    if (arg_18h == 0xffffffff) {\n        uVar4 = 4;\n    }\n    if ((uVar4 & 0xc) == 0) {\n        uVar4 = uVar4 | 4;\n    }\n    uVar5 = fcn.00c1b8ac(uVar4 | 2);\n    iVar6 = fcn.00b91d35(arg_8h, 0, L\"msctls_updown32\", 0, uVar5, 0, 0, 0, 0, arg_10h, noname_10, 0);\n    if (iVar6 != 0) {\n        fcn.00bb3f79(arg_14h);\n        uVar5 = fcn.00bcb5d0();\n        cVar3 = fcn.00b92402(uVar5, &arg_18h, &arg_10h);\n        pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n        if (((cVar3 != '\\0') && (*arg_8h == ***(*0xc56810 + arg_18h * 4))) &&\n           (*(**(*0xc56824 + arg_10h * 4) + 0x90) == '\\x03')) {\n            *arg_ch = iVar6;\n            iVar1 = ***(*0xc56824 + arg_10h * 4);\n            arg_ch[0xd] = iVar1;\n            (*pcVar2)(iVar6, 0x469, iVar1, 0);\n            (*pcVar2)(iVar6, 0x465, 0, 0x80017fff);\n            return 1;\n        }\n        (*_sym.imp.USER32.dll_DestroyWindow)(iVar6);\n    }\n    return 0;\n}\n",
        "token_count": 500
    },
    "00c1804a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00c1804a(uint item, uint32_t *hWnd, uint arg_10h)\n\n{\n    ushort *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    code *pcVar11;\n    bool bVar12;\n    bool bVar13;\n    uint uVar14;\n    uint uVar15;\n    uint var_c4h;\n    uint var_c0h;\n    uint32_t var_b8h;\n    int32_t var_a0h;\n    uint var_9ch;\n    uint var_94h;\n    uint var_90h;\n    uint var_88h;\n    uint32_t var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_6eh;\n    uint var_64h;\n    uint32_t var_60h;\n    int32_t var_5ch;\n    uint32_t var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint32_t var_44h;\n    uint lParam;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint32_t var_ch;\n    uint *var_8h;\n    \n    cVar6 = fcn.00b92402(item, &var_78h, &var_8h);\n    if (cVar6 == '\\0') {\n        *hWnd = 0;\n        return 0;\n    }\n    piVar3 = *(*0xc56824 + var_8h * 4);\n    *hWnd = 0xffffffff;\n    pcVar11 = _sym.imp.USER32.dll_SendMessageW;\n    puVar4 = *piVar3;\n    uVar2 = *(puVar4 + 0x24);\n    uVar14 = *puVar4;\n    var_8h = puVar4;\n    if (uVar2 < 0x12) {\n        if (uVar2 == 0x11) {\n            var_2ch = puVar4[4];\n            uVar14 = puVar4[0xd];\n            *hWnd = 0;\n            uVar7 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar14, 0xfffffff0);\n            lParam = 8;\n            var_24h = 0xf000;\n            if (arg_10h == '\\0') {\n                iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(var_8h[0xd], 0x113e, 0, &lParam);\n                if (iVar8 == 0) {\n                    return 0;\n                }\n                if ((uVar7 & 0x100) != 0) {\n                    *hWnd = (-(var_28h >> 0xc != 1) & 0xfffffffd) + 4;\n                }\n                if ((var_28h & 2) != 0) {\n                    *hWnd = *hWnd | 0x100;\n                }\n                if ((var_28h & 0x20) != 0) {\n                    *hWnd = *hWnd | 0x400;\n                }\n                if ((var_28h & 0x10) == 0) {\n                    return 0;\n                }\n                *hWnd = *hWnd | 0x200;\n                return 0;\n            }\n            iVar8 = fcn.00bb0ff6(0x2000);\n            uVar14 = var_8h[0xd];\n        }\n        else {\n            if (uVar2 < 0xb) {\n                if (uVar2 == 10) {\n                    uVar7 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x130b, 0, 0);\n                    *hWnd = uVar7;\n                    if (arg_10h == '\\0') {\n                        return 0;\n                    }\n                    var_94h = 8;\n                    (*pcVar11)(uVar14, 0x133c, uVar7, &var_94h);\n                    goto code_r0x00c18745;\n                }\n                if (uVar2 == 0) {\n                    iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x147, 0, 0);\n                    pcVar11 = _sym.imp.USER32.dll_SendMessageW;\n                    if (iVar8 != -1) {\n                        iVar9 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x149, iVar8, 0);\n                        iVar5 = (iVar9 + 1) * 2;\n                        iVar9 = fcn.00bb0ff6(-(iVar5 >> 0x20 != 0) | iVar5);\n                        uVar15 = 0x148;\ncode_r0x00c18120:\n                        (*pcVar11)(uVar14, uVar15, iVar8, iVar9);\n                        return iVar9;\n                    }\ncode_r0x00c18505:\n                    iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0xe, 0, 0);\n                    iVar5 = (iVar8 + 1U) * 2;\n                    iVar9 = fcn.00bb0ff6(-(iVar5 >> 0x20 != 0) | iVar5);\n                    (*_sym.imp.USER32.dll_GetWindowTextW)(uVar14, iVar9, iVar8 + 1U);\n                    return iVar9;\n                }\n                if (uVar2 == 1) {\n                    iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x188, 0, 0);\n                    pcVar11 = _sym.imp.USER32.dll_SendMessageW;\n                    if (iVar8 != -1) {\n                        iVar9 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x18a, iVar8, 0);\n                        iVar5 = (iVar9 + 1) * 2;\n                        iVar9 = fcn.00bb0ff6(-(iVar5 >> 0x20 != 0) | iVar5);\n                        uVar15 = 0x189;\n                        goto code_r0x00c18120;\n                    }\n                    goto code_r0x00c18505;\n                }\n                if (uVar2 != 8) goto code_r0x00c18505;\n                uVar15 = 0x408;\n                goto code_r0x00c1873e;\n            }\n            if (uVar2 == 0xc) {\n                *hWnd = 0;\n                return 0;\n            }\n            if (uVar2 < 0xe) goto code_r0x00c18505;\n            if (uVar2 < 0x10) {\n                iVar8 = (*_sym.imp.USER32.dll_IsMenu)(puVar4[3]);\n                if (iVar8 == 0) {\n                    return 0;\n                }\n                iVar8 = fcn.00bb0ff6(0x208);\n                var_c4h = 0x30;\n                if (arg_10h == '\\0') {\n                    var_c0h = 1;\n                    iVar9 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(var_8h[3], item, 0, &var_c4h);\n                    if (iVar9 != 0) {\n                        fcn.00bb106c(iVar8);\n                        *hWnd = var_b8h;\n                        var_7ch = (-((var_b8h & 3) != 0) & 0x40) + 0x40;\n                        if ((var_b8h & 0x8080) != 0) {\n                            var_7ch = var_7ch | 0x100;\n                        }\n                        if ((var_b8h & 8) == 0) {\n                            var_7ch = var_7ch | 4;\n                        }\n                        else {\n                            var_7ch = var_7ch | 1;\n                        }\n                        if ((var_b8h & 0x1000) != 0) {\n                            var_7ch = var_7ch | 0x200;\n                        }\n                        goto code_r0x00c18745;\n                    }\n                }\n                else {\n                    var_c0h = 0x10;\n                    var_9ch = 0x104;\n                    var_a0h = iVar8;\n                    iVar9 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(var_8h[3], item, 0);\n                    if (iVar9 != 0) {\n                        return iVar8;\n                    }\n                    *hWnd = 0;\n                }\n                goto code_r0x00c18240;\n            }\n            if (uVar2 != 0x10) goto code_r0x00c18505;\n            *hWnd = 0;\n            var_2ch = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x110a, 9, 0);\n            if (var_2ch == 0) {\n                return 0;\n            }\n            lParam = 4;\n            if (arg_10h == '\\0') {\n                iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x113e, 0, &lParam);\n                var_7ch = var_ch;\n                if (iVar8 == 0) {\n                    return 0;\n                }\n                goto code_r0x00c18745;\n            }\n            iVar8 = fcn.00bb0ff6(0x2000);\n        }\n        var_1ch = 0xfff;\n        lParam = 1;\n        var_20h = iVar8;\n        iVar9 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x113e, 0, &lParam);\n        if (iVar9 != 0) {\n            return iVar8;\n        }\ncode_r0x00c18240:\n        fcn.00bb106c(iVar8);\n        return 0;\n    }\n    if (uVar2 != 0x12) {\n        if (uVar2 == 0x13) {\n            uVar7 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x100c, 0xffffffff, 2);\n            *hWnd = uVar7;\n            fcn.00bb3020(&var_64h, 0, 0x34);\n            var_60h = *hWnd;\n            var_64h = 4;\n            iVar8 = (*pcVar11)(uVar14, 0x104b, 0, &var_64h);\n            var_7ch = -(iVar8 != 0) & var_44h;\n        }\n        else if (uVar2 == 0x14) {\n            *hWnd = 0xffffffff;\n            uVar7 = (*_sym.imp.USER32.dll_GetWindowLongW)(puVar4[0xd], 0xffffffec);\n            fcn.00bb3020(&var_64h, 0, 0x34);\n            puVar4 = var_8h;\n            var_88h = item;\n            var_90h = 1;\n            var_60h = (*_sym.imp.USER32.dll_SendMessageW)(var_8h[0xd], 0x1053, 0xffffffff, &var_90h);\n            if (var_60h == -1) {\n                return 0;\n            }\n            if (((uVar7 & 4) == 0) || (arg_10h == '\\0')) {\n                iVar9 = fcn.00bb0ff6(0x2000);\n                var_64h = 1;\n                var_4ch = 0xfff;\n                bVar13 = false;\n                bVar12 = 0 < *(puVar4 + 0x25);\n                iVar10 = 0;\n                iVar8 = iVar9;\n                while( true ) {\n                    var_5ch = iVar10;\n                    var_50h = iVar8;\n                    if (bVar13 == bVar12) {\n                        (*_sym.imp.USER32.dll_SendMessageW)();\n                        return iVar9;\n                    }\n                    (*_sym.imp.USER32.dll_SendMessageW)(puVar4[0xd], 0x104b, 0, &var_64h);\n                    var_4ch = fcn.00bb2e3c(iVar8);\n                    var_4ch = 0xffe - var_4ch;\n                    if (var_4ch < 1) break;\n                    iVar8 = fcn.00bb2e3c(iVar9);\n                    puVar1 = iVar9 + iVar8 * 2;\n                    *puVar1 = *0xc567c4;\n                    puVar1[1] = 0;\n                    iVar8 = (*_sym.imp.USER32.dll_CharNextW)(puVar1);\n                    iVar10 = iVar10 + 1;\n                    bVar13 = SBORROW4(iVar10, *(puVar4 + 0x25));\n                    bVar12 = iVar10 - *(puVar4 + 0x25) < 0;\n                }\n                return iVar9;\n            }\n            var_64h = 8;\n            var_54h = 0xf000;\n            iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(puVar4[0xd], 0x104b, 0, &var_64h);\n            if (iVar8 == 0) {\n                return 0;\n            }\n            var_7ch = (-(var_58h >> 0xc != 1) & 0xfffffffd) + 4;\n        }\n        else {\n            if (uVar2 != 0x15) {\n                if (0x18 < uVar2) {\n                    if (uVar2 < 0x1b) {\n                        if (arg_10h == '\\0') {\n                            uVar7 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0xf0, 0, 0);\n                            *hWnd = uVar7;\n                            if (uVar7 != 0) {\n                                return 0;\n                            }\n                            *hWnd = 4;\n                            return 0;\n                        }\n                        iVar9 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0xe);\n                        iVar5 = (iVar9 + 1U) * 2;\n                        iVar8 = fcn.00bb0ff6(-(iVar5 >> 0x20 != 0) | iVar5);\n                        iVar9 = (*_sym.imp.USER32.dll_GetWindowTextW)(uVar14, iVar8, iVar9 + 1U);\n                        if (iVar9 != 0) {\n                            return iVar8;\n                        }\n                        *hWnd = 0;\n                        goto code_r0x00c18240;\n                    }\n                    if (uVar2 == 0x1c) {\n                        iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, 0x1001, 0, &var_74h);\n                        if (iVar8 == 0) {\n                            *hWnd = 0;\n                            return 0;\n                        }\n                        iVar8 = fcn.00bb0ff6(0x16);\n                        (*_sym.imp.USER32.dll_wsprintfW)(iVar8, L\"%d/%02d/%02d\", var_74h, var_74h._2_2_, var_6eh);\n                        return iVar8;\n                    }\n                }\n                goto code_r0x00c18505;\n            }\n            if (puVar4[0x1f] == 4) {\n                fcn.00b99997();\n                iVar5 = (*(puVar4[0x1e] + 4) + 1) * 2;\n                iVar9 = fcn.00bb0ff6(-(iVar5 >> 0x20 != 0) | iVar5);\n                fcn.00b99997();\n                iVar8 = *(puVar4[0x1e] + 4);\n                fcn.00b99997();\n                fcn.00b9463e(iVar8 + 1);\n                return iVar9;\n            }\n            var_7ch = fcn.00b99c9c();\n        }\n        goto code_r0x00c18745;\n    }\n    uVar15 = 0x400;\ncode_r0x00c1873e:\n    var_7ch = (*_sym.imp.USER32.dll_SendMessageW)(uVar14, uVar15, 0, 0);\ncode_r0x00c18745:\n    *hWnd = var_7ch;\n    return 0;\n}\n",
        "token_count": 3762
    },
    "00c188b4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c188b4(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint *hWnd;\n    uint uVar2;\n    code *pcVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t arg_8h_00;\n    uint uVar6;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = fcn.00b92402(arg_8h, &var_4h, &var_8h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    var_4h = **(*0xc56810 + var_4h * 4);\n    hWnd = **(*0xc56824 + var_8h * 4);\n    uVar1 = *(hWnd + 0x24);\n    uVar2 = *hWnd;\n    var_8h = uVar2;\n    fcn.00b9322f();\n    if (-1 < hWnd[0x12]) {\n        fcn.00c1a71e(hWnd[0x12]);\n    }\n    pcVar3 = _sym.imp.USER32.dll_SendMessageW;\n    if (uVar1 < 0x13) {\n        if (uVar1 == 0x12) {\n            if (arg_ch < -1) {\n                return 0;\n            }\n            hWnd[0x12] = arg_ch;\n            fcn.00b922d0(arg_ch, 1);\n            pcVar3 = _sym.imp.USER32.dll_ShowWindow;\n            if ((*(hWnd + 0x92) & 0x20) == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*hWnd, 0);\n                (*pcVar3)(*hWnd, 5);\n                (*_sym.imp.USER32.dll_SetFocus)(*hWnd);\n            }\n            goto code_r0x00c18aa0;\n        }\n        if (uVar1 == 0) {\n            arg_8h_00 = arg_ch;\n            if (arg_ch < 0) {\n                return 0;\n            }\ncode_r0x00c18a6a:\n            hWnd[0x12] = arg_8h_00;\n            fcn.00b922d0(arg_8h_00, 1);\n            goto code_r0x00c18aa0;\n        }\n        if (uVar1 == 0) {\n            return 0;\n        }\n        if (4 < uVar1) {\n            if (uVar1 == 8) {\n                if (arg_ch < 0) {\n                    return 0;\n                }\n                uVar6 = 0x2001;\n            }\n            else {\n                if (uVar1 != 0x10) {\n                    if (uVar1 != 0x11) {\n                        return 0;\n                    }\n                    goto code_r0x00c18951;\n                }\n                if (arg_ch < 0) {\n                    return 0;\n                }\n                uVar6 = 0x111d;\n            }\n            (*_sym.imp.USER32.dll_SendMessageW)(uVar2, uVar6, 0, arg_ch);\n            goto code_r0x00c18aa0;\n        }\ncode_r0x00c18a48:\n        hWnd[0x12] = arg_ch;\n        fcn.00b922d0(arg_ch, 1);\n    }\n    else {\n        if (uVar1 != 0x13) {\n            if (uVar1 == 0x14) {\ncode_r0x00c18951:\n                if (arg_ch < 0) {\n                    return 0;\n                }\n                hWnd[0x12] = arg_ch;\n                fcn.00b922d0(arg_ch, 1);\n                (*_sym.imp.USER32.dll_InvalidateRect)(hWnd[0xd], 0, 1);\n                goto code_r0x00c18aa0;\n            }\n            if (uVar1 != 0x17) {\n                if (uVar1 == 0x18) {\n                    if (arg_ch < 0) {\n                        return 0;\n                    }\n                    uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar2, 0xfffffff0);\n                    (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xfffffff0, uVar5 | 0xb);\n                }\n                else {\n                    if (uVar1 < 0x19) {\n                        return 0;\n                    }\n                    if (0x1b < uVar1) {\n                        return 0;\n                    }\n                }\n            }\n            goto code_r0x00c18a48;\n        }\n        if (arg_ch == -2) {\n            return 0;\n        }\n        arg_8h_00 = -0x2000000;\n        if (arg_ch == -0x2000000) goto code_r0x00c18a6a;\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x1001, 0, arg_ch);\n        (*pcVar3)(var_8h, 0x1026, 0, arg_ch);\n    }\n    fcn.00c1b57f(var_4h, hWnd, 1);\ncode_r0x00c18aa0:\n    if ((*0xc562b0 != 0) && (uVar1 == 8)) {\n        return 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 1224
    },
    "00c18c44": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: Msg\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00c18c44(uint item, int16_t *lpString, int16_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    uint *hWnd_00;\n    int16_t *arg_8h;\n    char cVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_ESI;\n    int32_t iVar5;\n    int16_t aiStackY8464 [4096];\n    uint var_10ch;\n    uint var_108h;\n    int16_t *var_fch;\n    uint var_e4h;\n    int16_t *var_d8h;\n    uint var_c8h;\n    uint var_c0h;\n    uint lpmii;\n    uint var_ach;\n    uint32_t var_a8h;\n    int16_t *var_8ch;\n    uint var_88h;\n    uint lParam;\n    int16_t *var_74h;\n    uint var_60h;\n    int32_t wParam;\n    int32_t var_58h;\n    uint uStackY88;\n    uint uStackY84;\n    int16_t *var_4ch;\n    uint uStackY76;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint Msg;\n    uint var_ch;\n    uint hWnd;\n    \n    fcn.00bc1b90();\n    iVar5 = 0;\n    var_ch = 0;\n    cVar2 = fcn.00b92402(item, 0, 0);\n    arg_8h = lpString;\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    iVar3 = **(*0xc56810 + unaff_ESI * 4);\n    hWnd_00 = **(*0xc56824 + 0x30631dc);\n    uVar1 = *(hWnd_00 + 0x24);\n    uStackY88 = *hWnd_00;\n    if (uVar1 == 0) {\n        var_ch = 0x14e;\n    }\n    else if (uVar1 == 1) {\n        var_ch = 0x186;\n    }\n    else if ((((uVar1 < 2) || ((3 < uVar1 && (uVar1 != 0x15)))) && (arg_10h != NULL)) && (*arg_10h != 0)) {\n        return 0;\n    }\n    // switch table (29 cases) at 0xc19180\n    switch(uVar1) {\n    case 0:\n    case 1:\n        if (lpString != NULL) {\n            iVar5 = (*_sym.imp.USER32.dll_SendMessageW)();\n            if (iVar5 != -1) {\n                (*_sym.imp.USER32.dll_SendMessageW)();\n                uStackY76 = 0xc18d57;\n                fcn.00c1b57f(iVar3, hWnd_00, 1);\n                return 0;\n            }\n            if ((*lpString != *0xc567c4) && (pcVar4 = _sym.imp.USER32.dll_SendMessageW,  *lpString != 0))\n            goto code_r0x00c18d90;\n            lpString = (*_sym.imp.USER32.dll_CharNextW)();\n            pcVar4 = _sym.imp.USER32.dll_SendMessageW;\n            do {\n                uStackY76 = 0xc18db7;\n                (*pcVar4)();\ncode_r0x00c18d90:\n                cVar2 = fcn.00c1af23(&stack0xffffdef0, &fcn.00c18c44::lpString, 0xc567c4);\n            } while (cVar2 != '\\0');\n            if (arg_10h == NULL) {\n                return 1;\n            }\n            uStackY76 = 0xc18dcd;\n            var_4ch = (*pcVar4)();\n            if (var_4ch == 0xffffffff) {\n                return 1;\n            }\n            uStackY76 = 0;\n            uStackY84 = var_ch;\n            var_58h = 0xc18dde;\n            (*pcVar4)();\n            return 1;\n        }\n        break;\n    case 2:\n    case 3:\n        if ((arg_10h == NULL) || (*arg_10h == 0)) {\n            (*_sym.imp.USER32.dll_SetWindowTextW)();\n            (*_sym.imp.USER32.dll_SendMessageW)();\n            *(iVar3 + 0x1c4) = 0xffffffff;\n            return 1;\n        }\n        goto code_r0x00c18df8;\n    default:\n        if (lpString != NULL) {\n            iVar5 = (*_sym.imp.USER32.dll_SetWindowTextW)();\n            if (iVar5 != 0) {\n                fcn.00c1b57f(iVar3, hWnd_00, 1);\n                return 1;\n            }\n            return 0;\n        }\n        break;\n    case 5:\n    case 0x1c:\n        fcn.00bf589f(1, 1);\n        goto code_r0x00c18e8c;\n    case 6:\n    case 7:\n    case 0x16:\n        break;\n    case 8:\n        fcn.00bb3f79(lpString);\n        fcn.00bcb5d0();\n        goto code_r0x00c18df8;\n    case 0xb:\n        var_d8h = lpString;\n        var_e4h = 1;\n        iVar5 = (*_sym.imp.USER32.dll_SendMessageW)();\n        if (iVar5 == 0) {\n            return 0;\n        }\n        if (*(hWnd_00 + 0x93) == -1) {\n            return 1;\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)();\n        return 1;\n    case 0xe:\n    case 0xf:\n        var_8ch = fcn.00bb0ff6(0x208);\n        lpmii = 0x30;\n        var_ach = 0x10;\n        var_88h = 0x104;\n        iVar5 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)();\n        if ((iVar5 != 0) && ((var_a8h & 0x800) == 0)) {\n            var_8ch = lpString;\n            iVar5 = (*_sym.imp.USER32.dll_SetMenuItemInfoW)();\n            if (iVar5 != 0) {\n                (*_sym.imp.USER32.dll_DrawMenuBar)();\n                fcn.00bb106c();\n                return 1;\n            }\n        }\n        fcn.00bb106c();\n        return 0;\n    case 0x11:\n        var_108h = hWnd_00[4];\n        var_fch = lpString;\n        var_10ch = 1;\n        goto code_r0x00c18e8c;\n    case 0x12:\n        fcn.00bb3f79(lpString);\n        fcn.00bcb5d0();\ncode_r0x00c18df8:\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        return 1;\n    case 0x13:\n        if (lpString != NULL) {\n            fcn.00bb3020();\n            lpString = arg_8h;\n            while (cVar2 = fcn.00c1af23(&stack0xffffdef0, &fcn.00c18c44::lpString, 0xc567c4),  cVar2 != '\\0') {\n                var_74h = &stack0xffffdef0;\n                lParam = 4;\n                if ((aiStackY8464[0] != 0) && (iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(),  iVar5 == 0)) {\n                    return 0;\n                }\n            }\n            iVar5 = fcn.00bb2e3c(arg_8h);\n            if ((iVar5 != 0) && (iVar5 = fcn.00bb2e3c(arg_8h),  arg_8h[iVar5 + -1] != *0xc567c4)) {\n                return 1;\n            }\n            var_74h = lpString;\n            goto code_r0x00c18e8c;\n        }\n        break;\n    case 0x14:\n        if (lpString == NULL) {\n            return 0xffffffff;\n        }\n        fcn.00bb3020();\n        var_c0h = item;\n        var_c8h = 1;\n        wParam = (*_sym.imp.USER32.dll_SendMessageW)();\n        lpString = arg_8h;\n        if (wParam == -1) {\n            return 0;\n        }\n        while (cVar2 = fcn.00c1af23(&stack0xffffdef0, &fcn.00c18c44::lpString, 0xc567c4),  cVar2 != '\\0') {\n            var_4ch = &stack0xffffdef0;\n            var_60h = 1;\n            var_58h = iVar5;\n            if ((aiStackY8464[0] != 0) && (iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(),  iVar3 == 0)) {\n                return 0;\n            }\n            iVar5 = iVar5 + 1;\n        }\n        iVar3 = fcn.00bb2e3c(arg_8h);\n        if ((iVar3 != 0) && (iVar3 = fcn.00bb2e3c(arg_8h),  arg_8h[iVar3 + -1] != *0xc567c4)) {\n            return 1;\n        }\n        var_4ch = lpString;\n        var_58h = iVar5;\ncode_r0x00c18e8c:\n        iVar5 = (*_sym.imp.USER32.dll_SendMessageW)();\n        if (iVar5 != 0) {\n            return 1;\n        }\n        return 0;\n    case 0x15:\n        fcn.00b99bf8(lpString);\n        return 1;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 2345
    },
    "00c191d1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c191d1(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t hWnd;\n    char cVar1;\n    uint uVar2;\n    double in_stack_00000018;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_4h;\n    \n    fcn.00b97f41(arg_10h);\n    cVar1 = fcn.00b92402(arg_8h, &arg_10h, &var_4h);\n    if (cVar1 != '\\0') {\n        arg_8h_00 = **(*0xc56810 + arg_10h * 4);\n        hWnd = **(*0xc56824 + var_4h * 4);\n        if ((*(hWnd + 0x91) & 1) == 0) {\n            if (*0xc4bad8 == in_stack_00000018) {\n                arg_10h = *(arg_8h_00 + 0x7c);\n            }\n            else {\n                arg_10h = fcn.00bcb5d0();\n            }\n            if (arg_ch == -1) {\n                arg_ch = *(arg_8h_00 + 0x80);\n            }\n            if (arg_14h == -1) {\n                arg_14h = *(arg_8h_00 + 0x84);\n            }\n            if (var_10h == 0) {\n                fcn.00b981a7(arg_8h_00 + 0x6c);\n            }\n            uVar2 = 1;\n            fcn.00c16442(arg_8h_00, hWnd, &var_14h, arg_10h, arg_ch, arg_14h, arg_18h, 1);\n            goto code_r0x00c1929e;\n        }\n    }\n    uVar2 = 0;\ncode_r0x00c1929e:\n    fcn.00b95a64();\n    return uVar2;\n}\n",
        "token_count": 488
    },
    "00c192b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c192b0(uint32_t arg_8h, uint32_t lpszFile, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t *arg_8h_00;\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    ulong uVar7;\n    uint *arg_8h_01;\n    uint in_stack_ffffff2c;\n    uint in_stack_ffffff30;\n    uint var_a8h;\n    uint32_t var_a4h;\n    uint var_a0h;\n    uint32_t var_8ch;\n    uint var_74h;\n    uint var_70h;\n    uint32_t var_5ch;\n    uint32_t var_58h;\n    uint lParam;\n    uint var_48h;\n    uint32_t lprcUpdate;\n    uint var_38h;\n    int32_t lpRect;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t phiconLarge;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t nIconIndex;\n    uint32_t var_ch;\n    uint32_t phiconSmall;\n    \n    var_18h = fcn.00b99c9c();\n    cVar2 = fcn.00b92402(arg_8h, &var_ch, &var_14h);\n    if (cVar2 == '\\0') goto code_r0x00c1994d;\n    var_20h = **(*0xc56810 + var_ch * 4);\n    arg_8h_00 = **(*0xc56824 + var_14h * 4);\n    uVar6 = *arg_8h_00;\n    arg_8h = arg_8h & 0xffffff | *(arg_8h_00 + 0x24) << 0x18;\n    var_ch = uVar6;\n    uVar7 = fcn.00bf4be8();\n    nIconIndex = uVar7;\n    uVar5 = uVar7 >> 0x20 & 0xff;\n    if (uVar5 < 0x12) {\n        if (0xf < uVar5) {\n            iVar3 = (*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, nIconIndex, 0, &phiconSmall, 1);\n            if (iVar3 < 1) goto code_r0x00c1994d;\n            if (arg_8h._3_1_ == '\\x10') {\n                lpszFile = *0xc56834;\n                var_ch = var_14h;\n                uVar5 = 3;\n            }\n            else {\n                uVar6 = arg_8h_00[0xd];\n                var_ch = fcn.00b925db(uVar6);\n                lpszFile = var_14h;\n                uVar5 = var_14h;\n            }\n            iVar3 = *(**(*0xc56824 + var_ch * 4) + 0x40);\n            if (iVar3 == 0) {\n                var_18h = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 1, 1);\n                *(**(*0xc56824 + var_ch * 4) + 0x40) = var_18h;\n                (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x1109, 0, var_18h);\n                iVar3 = var_18h;\n                if (var_18h != 0) goto code_r0x00c19526;\n            }\n            else {\ncode_r0x00c19526:\n                var_ch = (*_sym.imp.COMCTL32.dll_ImageList_ReplaceIcon)(iVar3, 0xffffffff, phiconSmall);\n                if (arg_8h._3_1_ == '\\x10') {\n                    if ((arg_10h & 2) != 0) {\n                        *(var_20h + 0x1b4) = var_ch;\n                    }\n                    if ((arg_10h & 4) != 0) {\n                        *(var_20h + 0x1b8) = var_ch;\n                    }\n                }\n                for (; uVar5 <= lpszFile; uVar5 = uVar5 + 1) {\n                    iVar3 = **(*0xc56824 + uVar5 * 4);\n                    if ((((iVar3 != 0) && (*(iVar3 + 4) == *(var_20h + 4))) && (*(iVar3 + 0x90) == '\\x11')) &&\n                       (*(iVar3 + 0x34) == uVar6)) {\n                        var_70h = *(iVar3 + 0x10);\n                        var_74h = 0x32;\n                        (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x113e, 0, &var_74h);\n                        if ((arg_10h & 2) != 0) {\n                            var_58h = var_ch;\n                        }\n                        if ((arg_10h & 4) != 0) {\n                            var_5ch = var_ch;\n                        }\n                        (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x113f, 0, &var_74h);\n                    }\n                }\n            }\n            (*_sym.imp.USER32.dll_GetClientRect)(uVar6, &lprcUpdate);\n            (*_sym.imp.USER32.dll_RedrawWindow)(uVar6, &lprcUpdate, 0, 0);\ncode_r0x00c195f1:\n            (*_sym.imp.USER32.dll_DestroyIcon)(phiconSmall);\ncode_r0x00c19948:\n            uVar4 = 1;\n            goto code_r0x00c1994f;\n        }\n        if (uVar5 == 6) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(uVar6, &lpRect);\n            arg_8h = var_28h - lpRect;\n            arg_10h = var_24h - var_2ch;\n            iVar3 = fcn.00c1bced(arg_8h_00, lpszFile, &arg_8h, &arg_10h);\n            if (iVar3 != 0) {\n                uVar4 = 1;\n                fcn.00c1b57f(var_20h, arg_8h_00, 1);\n                goto code_r0x00c1994f;\n            }\n        }\n        else {\n            if (uVar5 != 7) {\n                if ((uVar5 != 0xb) ||\n                   (iVar3 = (*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, nIconIndex, 0, &phiconSmall, 1),  iVar3 < 1\n                   )) goto code_r0x00c1994d;\n                lpszFile = *(var_20h + 0x188);\n                arg_10h = fcn.00b925db(lpszFile);\n                iVar3 = *(**(*0xc56824 + arg_10h * 4) + 0x40);\n                uVar6 = lpszFile;\n                if (iVar3 == 0) {\n                    iVar3 = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 1, 1);\n                    uVar6 = lpszFile;\n                    *(**(*0xc56824 + arg_10h * 4) + 0x40) = iVar3;\n                    (*_sym.imp.USER32.dll_SendMessageW)(lpszFile, 0x1303, 0, iVar3);\n                    if (iVar3 != 0) goto code_r0x00c193d5;\n                }\n                else {\ncode_r0x00c193d5:\n                    uVar4 = (*_sym.imp.COMCTL32.dll_ImageList_ReplaceIcon)(iVar3, *(arg_8h_00 + 0x22), phiconSmall);\n                    lParam = 2;\n                    var_38h = uVar4;\n                    (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x133d, *(arg_8h_00 + 0x93), &lParam);\n                    *(arg_8h_00 + 0x22) = uVar4;\n                }\n                goto code_r0x00c195f1;\n            }\n            arg_8h_01 = &arg_14h;\n            uVar4 = 0;\n            fcn.00b99ac0(arg_8h_01);\n            cVar2 = fcn.00c1bab8(arg_8h_00, lpszFile, arg_8h_01, in_stack_ffffff2c, in_stack_ffffff30, uVar4);\n            if (cVar2 != '\\0') {\n                fcn.00c1b57f(var_20h, arg_8h_00, 0);\n                goto code_r0x00c19948;\n            }\n        }\n    }\n    else if (0x12 < uVar5) {\n        if (uVar5 < 0x15) {\n            iVar3 = (*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, nIconIndex, &phiconLarge, &phiconSmall, 1);\n            if (((0 < iVar3) ||\n                ((*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, 0xffffffff, &phiconLarge, &phiconSmall, 1), \n                phiconLarge != 0)) || (phiconSmall != 0)) {\n                if (arg_8h._3_1_ == '\\x13') {\n                    lpszFile = var_14h;\n                    var_14h = 0;\n                    uVar5 = (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x1004, 0, 0);\n                }\n                else {\n                    uVar6 = arg_8h_00[0xd];\n                    var_ch = uVar6;\n                    lpszFile = fcn.00b925db(uVar6);\n                    lprcUpdate = var_14h;\n                    var_48h = 1;\n                    uVar5 = (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x1053, 0xffffffff, &var_48h);\n                    var_14h = uVar5;\n                    if (uVar5 == 0xffffffff) goto code_r0x00c1994d;\n                }\n                iVar3 = **(*0xc56824 + lpszFile * 4);\n                var_18h = *(iVar3 + 0x38);\n                arg_10h = *(iVar3 + 0x3c);\n                nIconIndex = uVar5;\n                if (var_18h == 0) {\n                    var_18h = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 0, 1);\n                    *(**(*0xc56824 + lpszFile * 4) + 0x38) = var_18h;\n                    (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x1003, 1, var_18h);\n                }\n                if (arg_10h == 0) {\n                    arg_10h = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x20, 0x20, 0x21, 0, 1);\n                    *(**(*0xc56824 + lpszFile * 4) + 0x3c) = arg_10h;\n                    (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x1003, 0, arg_10h);\n                }\n                pcVar1 = _sym.imp.COMCTL32.dll_ImageList_ReplaceIcon;\n                if ((var_18h != 0) && (arg_10h != 0)) {\n                    lpszFile = (*_sym.imp.COMCTL32.dll_ImageList_ReplaceIcon)(var_18h, 0xffffffff, phiconSmall);\n                    (*pcVar1)(arg_10h, 0xffffffff, phiconLarge);\n                    uVar6 = var_ch;\n                    if (arg_8h._3_1_ == '\\x13') {\n                        arg_8h_00[0x27] = lpszFile;\n                    }\n                    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n                    arg_10h = var_14h;\n                    if (var_14h <= nIconIndex) {\n                        do {\n                            var_a8h = 2;\n                            var_a0h = 0;\n                            var_a4h = arg_10h;\n                            (*pcVar1)(uVar6, 0x104b, 0, &var_a8h);\n                            if ((var_8ch == 0xfffffffe) || (arg_8h._3_1_ == '\\x14')) {\n                                var_8ch = lpszFile;\n                                (*pcVar1)(uVar6, 0x104c, 0, &var_a8h);\n                            }\n                            arg_10h = arg_10h + 1;\n                        } while (arg_10h <= nIconIndex);\n                    }\n                    (*pcVar1)(uVar6, 0x1015, var_14h, nIconIndex);\n                }\n                pcVar1 = _sym.imp.USER32.dll_DestroyIcon;\n                (*_sym.imp.USER32.dll_DestroyIcon)(phiconSmall);\n                (*pcVar1)(phiconLarge);\n                goto code_r0x00c19948;\n            }\n        }\n        else if (uVar5 - 0x18 < 3) {\n            cVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar6, 0xfffffff0);\n            if (cVar2 < '\\0') {\n                lpszFile = (*_sym.imp.USER32.dll_LoadImageW)(0, lpszFile, 0, 0, 0, 0x2010);\n                if (lpszFile == 0) goto code_r0x00c1994d;\n                (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0xf7, 0, lpszFile);\n                if (arg_8h_00[0x19] != 0) {\n                    (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_00[0x19]);\n                }\n                if (arg_8h_00[0x1a] != 0) {\n                    (*_sym.imp.USER32.dll_DestroyIcon)(arg_8h_00[0x1a]);\n                }\n                arg_8h_00[0x19] = lpszFile;\n                arg_8h_00[0x1a] = 0;\n            }\n            else {\n                if ((var_18h == -1) && (arg_8h._3_1_ == '\\x18')) {\n                    lpszFile = (*_sym.imp.USER32.dll_LoadImageW)(0, lpszFile, 1, 0, 0, 0x2010);\n                    if (lpszFile == 0) goto code_r0x00c19948;\n                    (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0xf7, 1, lpszFile);\n                    if (arg_8h_00[0x19] != 0) {\n                        (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_00[0x19]);\n                    }\n                    if (arg_8h_00[0x1a] != 0) {\n                        (*_sym.imp.USER32.dll_DestroyIcon)(arg_8h_00[0x1a]);\n                    }\n                    arg_8h_00[0x19] = 0;\n                }\n                else {\n                    iVar3 = (*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, nIconIndex, &phiconLarge, &phiconSmall, 1);\n                    pcVar1 = _sym.imp.USER32.dll_DestroyIcon;\n                    if (iVar3 < 1) goto code_r0x00c1994d;\n                    lpszFile = phiconSmall;\n                    if (arg_10h != 0) {\n                        lpszFile = phiconLarge;\n                        phiconLarge = phiconSmall;\n                    }\n                    (*_sym.imp.USER32.dll_DestroyIcon)(phiconLarge);\n                    (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0xf7, 1, lpszFile);\n                    if (arg_8h_00[0x19] != 0) {\n                        (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_00[0x19]);\n                    }\n                    if (arg_8h_00[0x1a] != 0) {\n                        (*pcVar1)(arg_8h_00[0x1a]);\n                    }\n                    arg_8h_00[0x19] = 0;\n                }\n                arg_8h_00[0x1a] = lpszFile;\n            }\n            goto code_r0x00c19948;\n        }\n    }\ncode_r0x00c1994d:\n    uVar4 = 0;\ncode_r0x00c1994f:\n    fcn.00b99a20();\n    return uVar4;\n}\n",
        "token_count": 3917
    },
    "00c19a63": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c19a63(uint hWnd, int32_t X, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint *arg_8h;\n    int32_t iVar1;\n    uint *puVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *arg_ch;\n    int32_t iVar6;\n    int32_t lpRect;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t lpPoint;\n    int32_t var_4h;\n    \n    cVar3 = fcn.00b92402(hWnd, &var_4h, &var_ch);\n    if (cVar3 == '\\0') {\n        uVar4 = 0;\n    }\n    else {\n        arg_8h = **(*0xc56810 + var_4h * 4);\n        arg_ch = **(*0xc56824 + var_ch * 4);\n        if ((((X != -1) || (arg_10h != -1)) || (arg_14h != -1)) || (arg_18h != -1)) {\n            iVar1 = *arg_ch;\n            var_ch = arg_ch;\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar1, &lpRect);\n            if (arg_14h == -1) {\n                arg_14h = var_14h - lpRect;\n            }\n            if (arg_18h == -1) {\n                arg_18h = var_10h - var_18h;\n            }\n            lpPoint = lpRect;\n            var_4h = var_18h;\n            (*_sym.imp.USER32.dll_ScreenToClient)(*arg_8h, &lpPoint);\n            if (X == -1) {\n                X = lpPoint;\n            }\n            if (arg_10h == -1) {\n                arg_10h = var_4h;\n            }\n            arg_8h[0x16] = X;\n            arg_8h[0x17] = arg_10h;\n            arg_8h[0x18] = arg_14h;\n            arg_8h[0x19] = arg_18h;\n            if (((*(arg_ch + 0x22) != X) || (*(arg_ch + 0x8a) != arg_10h)) ||\n               ((*(arg_ch + 0x23) != arg_14h || (*(arg_ch + 0x8e) != arg_18h)))) {\n                (*_sym.imp.USER32.dll_MoveWindow)(iVar1, X, arg_10h, arg_14h, arg_18h, 1);\n                fcn.00b91db3(arg_8h, arg_ch, 1);\n                if ((*(arg_ch + 0x24) == '\\x03') && (iVar6 = 3,  iVar5 = *0xc56834,  2 < *0xc56834)) {\n                    do {\n                        puVar2 = **(*0xc56824 + iVar6 * 4);\n                        if ((puVar2 != NULL) &&\n                           (((puVar2[1] == arg_8h[1] && (*(puVar2 + 0x24) == '\\x16')) && (puVar2[0xd] == iVar1)))) {\n                            (*_sym.imp.USER32.dll_SendMessageW)(*puVar2, 0x469, iVar1, 0);\n                            iVar5 = *0xc56834;\n                        }\n                        iVar6 = iVar6 + 1;\n                        arg_ch = var_ch;\n                    } while (iVar6 <= iVar5);\n                }\n                fcn.00c1b57f(arg_8h, arg_ch, 1);\n            }\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 874
    },
    "00c19c8b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00c19eaa)\n// WARNING: Removing unreachable block (ram,0x00c19eae)\n\nint32_t * __cdecl fcn.00c19c8b(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t *hWnd;\n    char cVar1;\n    uint8_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint *unaff_ESI;\n    int32_t *piVar9;\n    uint uVar10;\n    uint uVar11;\n    uint *in_stack_ffffff34;\n    int32_t *piVar12;\n    uchar *arg_10h;\n    uint uVar13;\n    uint *puVar14;\n    uint *puStack172;\n    int32_t iStack168;\n    uint uStack164;\n    int32_t iStack160;\n    uchar auStack156 [12];\n    uchar auStack144 [8];\n    uint uStack136;\n    uint32_t uStack132;\n    uint uStack128;\n    uint uStack68;\n    int32_t iStack64;\n    uint32_t uStack60;\n    uint uStack56;\n    \n    arg_10h = auStack156;\n    piVar12 = &iStack168;\n    cVar1 = fcn.00b92402(arg_8h, piVar12, arg_10h);\n    if (cVar1 == '\\0') {\n        return NULL;\n    }\n    piVar9 = NULL;\n    uVar13 = 0;\n    uStack164 = **(*0xc56810 + unaff_ESI * 4);\n    hWnd = **(*0xc56824 + iStack168 * 4);\n    iVar4 = *hWnd;\n    uVar5 = arg_10h & 0xffffff | *(hWnd + 0x24) << 0x18;\n    if (arg_ch < 0) {\n        arg_ch = 0;\n    }\n    puStack172 = arg_ch & 0x100;\n    puVar14 = unaff_ESI;\n    if (puStack172 != NULL) {\n        fcn.00b92327(unaff_ESI, iStack168);\n        piVar12 = 0x1;\n        in_stack_ffffff34 = unaff_ESI;\n    }\n    if ((arg_ch & 0x800) != 0) {\n        (*_sym.imp.USER32.dll_SetWindowPos)(uVar13, arg_8h >> 0x18 == '\\x17', 0, 0, 0, 0, 0x103);\n        piVar12 = 0x1;\n    }\n    uVar2 = arg_8h >> 0x18;\n    if (uVar2 < 0x15) {\n        if (uVar2 == 0x14) {\n            iVar7 = hWnd[0xd];\n            uVar13 = 0xffffffff;\n            iStack168 = 1;\n            iStack160 = iVar4;\n            uVar5 = (*_sym.imp.USER32.dll_SendMessageW)(iVar7, 0x1053, 0xffffffff, &iStack168);\n            if (uVar5 == 0xffffffff) {\n                return NULL;\n            }\n            uStack128 = 0;\n            uStack136 = 8;\n            uStack132 = uVar5;\n            uVar6 = (*_sym.imp.USER32.dll_GetWindowLongW)(iVar7, 0xffffffec);\n            if (((uVar6 & 4) != 0) && ((arg_ch & 5) != 0)) {\n                uStack128 = 0xf000;\n                uStack132 = (-(arg_ch != 1) & 0xfffff000) + 0x2000;\n                piVar9 = (*_sym.imp.USER32.dll_SendMessageW)(iVar7, 0x104c, 0, auStack144);\n            }\n            if ((arg_ch & 0x2100) != 0) {\n                if (uVar5 != 0) {\n                    uStack132 = 0xffffffff;\n                }\n                uStack128 = 3;\n                uStack132 = ~-((arg_ch & 0x2000) != 0) & uStack132;\n                piVar12 = (*_sym.imp.USER32.dll_SendMessageW)(iVar7, 0x102b, uVar13, auStack144);\n                return piVar12;\n            }\n            return piVar9;\n        }\n        if (uVar2 == 9) {\n            if ((arg_ch & 7) == 0) {\n                uVar11 = 0;\n                uVar10 = 0;\n                uVar3 = 0x466;\n            }\n            else {\n                if ((arg_ch & 7) != 1) {\ncode_r0x00c1a0cf:\n                    (*_sym.imp.USER32.dll_SendMessageW)();\n                    goto code_r0x00c1a0ab;\n                }\n                uVar11 = 0xffff0000;\n                uVar10 = 0xffffffff;\n                uVar3 = 0x465;\n            }\n            iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(uVar13, uVar3, uVar10, uVar11);\n            if (iVar4 == 0) goto code_r0x00c1a1b5;\n        }\n        else if (uVar2 == 0xb) {\n            if ((arg_ch & 0x10) == 0) goto code_r0x00c1a1b5;\n            uVar2 = *(hWnd + 0x93);\n            if (*(puStack172 + 0x66) != '\\0') {\n                puStack172[100] = puStack172[0x65];\n            }\n            fcn.00c1b958(puStack172, uVar2);\n            puVar14[0x65] = *(hWnd + 0x93);\n        }\n        else {\n            if (uVar2 == 0xc) {\n                return NULL;\n            }\n            if (uVar2 < 0xe) goto code_r0x00c1a1b5;\n            if (0xf < uVar2) {\n                if (uVar2 != 0x11) goto code_r0x00c1a1b5;\n                iStack64 = hWnd[4];\n                uStack68 = 8;\n                uStack56 = 0xf010;\n                uStack60 = (-((arg_ch & 1) != 0) & 0x1000) + 0x1000;\n                if ((arg_ch & 0x200) != 0) {\n                    uStack60 = uStack60 | 0x10;\n                }\n                (*_sym.imp.USER32.dll_SendMessageW)(hWnd[0xd], 0x113f, 0, &uStack68);\n                if ((arg_ch & 0x400) != 0) {\n                    (*_sym.imp.USER32.dll_SendMessageW)(hWnd[0xd], 0x1102, 2, hWnd[4]);\n                }\n                if (puVar14 != NULL) {\n                    uVar3 = fcn.00b925db(hWnd[0xd]);\n                    fcn.00b92327(piVar12, uVar3);\n                    goto code_r0x00c1a0cf;\n                }\n                goto code_r0x00c1a0ab;\n            }\n            piVar9 = &iStack168;\n            iStack168 = 0x30;\n            uStack164 = 1;\n            iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(hWnd[3], iVar4, 0, piVar9);\n            if (iVar4 == 0) {\n                return NULL;\n            }\n            if ((arg_ch & 0x20) != 0) {\n                return NULL;\n            }\n            if (arg_ch < '\\0') {\n                puStack172 = 0x3;\n            }\n            else {\n                puStack172 = NULL;\n            }\n            if ((arg_ch & 1) != 0) {\n                puStack172 = puStack172 | 8;\n            }\n            if (arg_8h != 0) {\n                puStack172 = puStack172 | 0x80;\n            }\n            (*_sym.imp.USER32.dll_SetMenuItemInfoW)(hWnd[3], piVar12, 0, &stack0xffffff48);\n            if ((arg_ch & 0x200) == 0) {\n                iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(hWnd[3], piVar9, 0, &stack0xffffff38);\n                if ((iVar4 != 0) && ((uVar5 & 0x1000) != 0)) {\n                    piVar9 = 0xffffffff;\n                    goto code_r0x00c19efe;\n                }\n            }\n            else {\ncode_r0x00c19efe:\n                (*_sym.imp.USER32.dll_SetMenuDefaultItem)(hWnd[3], piVar9, 0);\n            }\n            (*_sym.imp.USER32.dll_DrawMenuBar)(*in_stack_ffffff34);\n        }\n    }\n    else {\n        if (uVar2 == 0x16) {\n            iVar4 = 3;\n            if (2 < *0xc56834) {\n                do {\n                    piVar9 = **(*0xc56824 + iVar4 * 4);\n                    if ((((piVar9 != NULL) && (piVar9[1] == puStack172[1])) && (*(piVar9 + 0x24) == '\\x03')) &&\n                       (*piVar9 == hWnd[0xd])) {\n                        if (((arg_ch & *(hWnd + 0x92)) == 0) && ((*(hWnd + 0x92) & 0x10) != 0)) {\n                            uVar3 = 0;\n                            puVar14 = **(*0xc56824 + iVar4 * 4);\n                            (*_sym.imp.USER32.dll_MoveWindow)\n                                      (*puVar14, *(puVar14 + 0x22), *(puVar14 + 0x8a), *(puVar14 + 0x23), \n                                       *(puVar14 + 0x8e), 0);\n                            (*_sym.imp.USER32.dll_SendMessageW)(uVar3, 0x469, hWnd[0xd], 0);\n                        }\n                        break;\n                    }\n                    iVar4 = iVar4 + 1;\n                } while (iVar4 <= *0xc56834);\n            }\n            goto code_r0x00c1a1b5;\n        }\n        if (uVar2 == 0x18) {\n            if ((arg_ch & 0x200) == 0) goto code_r0x00c1a1b5;\n            (*_sym.imp.USER32.dll_SendMessageW)(*puStack172, 0x401, iVar4, 0);\n            iVar7 = (*_sym.imp.USER32.dll_GetFocus)();\n            if (iVar7 == *hWnd) {\n                fcn.00b92327(uVar5, iVar4);\n            }\n        }\n        else {\n            if (uVar2 == 0x19) {\n                if ((arg_ch & 7) == 0) goto code_r0x00c1a1b5;\n                goto code_r0x00c1a0cf;\n            }\n            if ((uVar2 != 0x1a) || ((arg_ch & 7) == 0)) goto code_r0x00c1a1b5;\n            fcn.00c1653c(iVar4, arg_ch & 3);\n        }\n    }\ncode_r0x00c1a0ab:\n    piVar12 = 0x1;\ncode_r0x00c1a1b5:\n    if ((arg_ch & 0x10f8) != 0) {\n        piVar12 = 0x1;\n        uVar8 = 0;\n        uVar2 = arg_ch & 0x10f8;\n        if (uVar2 < '\\0') {\n            uVar8 = 0xc0;\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar13, 0);\n        }\n        if ((arg_ch & 0x40) != 0) {\n            uVar8 = 0xc0;\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar13, 1);\n        }\n        if ((arg_ch & 0x20) != 0) {\n            uVar8 = uVar8 + 0x30;\n        }\n        if ((arg_ch & 0x10) != 0) {\n            uVar8 = uVar8 + 0x30;\n        }\n        if ((arg_ch & 8) != 0) {\n            uVar8 = uVar8 + 8;\n        }\n        if ((arg_ch & 0x1000) != 0) {\n            uVar8 = uVar8 + 8;\n        }\n        *(hWnd + 0x92) = ~uVar8 & *(hWnd + 0x92) | uVar2;\n        if (((*(hWnd + 0x93) == 0xff) || (*(hWnd + 0x93) == puStack172[100])) || (puStack172[100] == 0xffffffff)) {\n            if ((arg_ch & 0x20) != 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(uVar13, 0);\n            }\n            cVar1 = uVar13 >> 0x18;\n            if (((iStack168 != 0) && ((*_sym.imp.USER32.dll_ShowWindow)(),  cVar1 == '\\x1a')) &&\n               ((*(hWnd + 0x92) & 0x40) != 0)) {\n                (*_sym.imp.USER32.dll_EnableWindow)();\n            }\n            fcn.00c1b57f(iStack160, hWnd, 1);\n        }\n    }\n    return piVar12;\n}\n",
        "token_count": 3104
    },
    "00c1a2c5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00c1a2c5(uint arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint *hWnd;\n    uint uVar1;\n    char cVar2;\n    bool bVar3;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    cVar2 = fcn.00b92402(arg_8h, &var_ch, &var_8h);\n    if (cVar2 == '\\0') {\n        return false;\n    }\n    arg_8h_00 = **(*0xc56810 + var_ch * 4);\n    hWnd = **(*0xc56824 + var_8h * 4);\n    uVar1 = *hWnd;\n    if (arg_ch == 0xffffffff) goto code_r0x00c1a38a;\n    cVar2 = *(hWnd + 0x24);\n    if (cVar2 == '\\x02') {\n        arg_ch = arg_ch | 4;\ncode_r0x00c1a359:\n        bVar3 = (arg_ch & 0x800) == 0;\n        if (bVar3) {\n            arg_ch = arg_ch | 0x10000;\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0xcf, !bVar3, 0);\n    }\n    else {\n        if (cVar2 == '\\x03') goto code_r0x00c1a359;\n        if (cVar2 == '\\x06') {\n            arg_ch = arg_ch | 0xe;\n        }\n        else if (cVar2 == '\\a') {\n            arg_ch = arg_ch | 3;\n        }\n        else if (cVar2 == '\\n') {\n            arg_ch = arg_ch | 0x4000000;\n        }\n        else if (cVar2 == '\\x16') {\n            return false;\n        }\n    }\n    var_4h = (*_sym.imp.USER32.dll_SetWindowLongW)(uVar1, 0xfffffff0, arg_ch | 0x50000000);\ncode_r0x00c1a38a:\n    if ((arg_10h != -1) &&\n       (var_4h = (*_sym.imp.USER32.dll_SetWindowLongW)(uVar1, 0xffffffec, arg_10h), \n       *(**(*0xc56824 + var_8h * 4) + 0x90) == '\\x13')) {\n        var_4h = (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x1036, 0, arg_10h);\n    }\n    if ((*(hWnd + 0x93) == 0xff) || (*(hWnd + 0x93) == *(arg_8h_00 + 400))) {\n        fcn.00c1b57f(arg_8h_00, hWnd, 1);\n    }\n    else {\n        (*_sym.imp.USER32.dll_ShowWindow)(uVar1, 0);\n    }\n    if (((*(hWnd + 0x24) == '\\x02') || (*(hWnd + 0x24) == '\\x03')) || (arg_10h != -1)) {\n        (*_sym.imp.USER32.dll_SetWindowPos)(*hWnd, 0, 0, 0, 0, 0, 0x27);\n    }\n    return var_4h != 0;\n}\n",
        "token_count": 798
    },
    "00c1a849": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1a849(int32_t arg_8h, int32_t *hWnd)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uchar *puVar6;\n    uchar *puStack208;\n    int32_t iStack204;\n    int32_t *piStack200;\n    int32_t iStack188;\n    uint uStack184;\n    uint uStack180;\n    int32_t iStack176;\n    int32_t iStack172;\n    int32_t iStack168;\n    int32_t *piStack164;\n    int32_t iStack160;\n    uchar *puStack156;\n    uint uStack152;\n    uint uStack148;\n    int32_t iStack144;\n    int32_t iStack140;\n    uchar *puStack136;\n    int32_t iStack132;\n    uint uStack128;\n    int32_t iStack124;\n    uint *puStack120;\n    int32_t iStack116;\n    uint uStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    uint uStack92;\n    int32_t iStack88;\n    uint *puStack84;\n    uint uStack60;\n    uint uStack56;\n    uint32_t uStack52;\n    uint uStack48;\n    uint32_t uStack44;\n    uint32_t uStack36;\n    \n    if (*0xc562b0 == 0) {\n        uStack36 = *(arg_8h + 0x10);\n        iVar1 = *(arg_8h + 0x18);\n        uStack52 = uStack36 & 0x10;\n        uStack44 = uStack36 & 1;\n        uStack36 = uStack36 & 6;\n        if (uStack36 == 0) {\n            if (hWnd[0x13] == -1) {\n                (*_sym.imp.USER32.dll_GetSysColor)();\n            }\n            puStack84 = 0xc1a8c4;\n            iVar3 = iVar1;\n            uStack52 = (*_sym.imp.GDI32.dll_SetTextColor)();\n        }\n        else {\n            iVar3 = (*_sym.imp.USER32.dll_GetSysColor)();\n            iStack88 = 0xc1a8a5;\n            puStack84 = iVar1;\n            uStack52 = (*_sym.imp.GDI32.dll_SetTextColor)();\n        }\n        if (hWnd[0x12] == -1) {\n            iStack88 = 0xf;\n            uStack92 = 0xc1a8d6;\n            (*_sym.imp.USER32.dll_GetSysColorBrush)();\n            uStack92 = 0xf;\n            iStack96 = 0xc1a8e2;\n            iStack96 = (*_sym.imp.USER32.dll_GetSysColor)();\n        }\n        else {\n            iStack88 = hWnd[0x12];\n            uStack92 = 0xc1a8ed;\n            (*_sym.imp.GDI32.dll_CreateSolidBrush)();\n            iStack96 = hWnd[0x12];\n        }\n        iStack104 = 0xc1a8fc;\n        iStack100 = iVar1;\n        uStack56 = (*_sym.imp.GDI32.dll_SetBkColor)();\n        iStack104 = puStack84;\n        uStack112 = 0xc1a90b;\n        iStack108 = iVar1;\n        (*_sym.imp.GDI32.dll_SelectObject)();\n        puStack84 = arg_8h + 0x1c;\n        uStack60 = *puStack84;\n        uStack56 = *(arg_8h + 0x20);\n        uStack52 = *(arg_8h + 0x24);\n        uStack48 = *(arg_8h + 0x28);\n        if (iVar3 == 0) {\n            if (iStack88 != 0) {\n                uStack112 = 0xffffffff;\n                iStack116 = 0xffffffff;\n                puStack120 = &stack0xffffffc4;\n                iStack124 = 0xc1a973;\n                (*_sym.imp.USER32.dll_InflateRect)();\n            }\n            uStack112 = 0x10;\n            iStack116 = 4;\n            puStack120 = &stack0xffffffc4;\n            uStack128 = 0xc1a983;\n            iStack124 = iVar1;\n            (*_sym.imp.USER32.dll_DrawFrameControl)();\n        }\n        else {\n            uStack112 = 0xffffffff;\n            iStack116 = -1;\n            puStack120 = &stack0xffffffc4;\n            iStack124 = 0xc1a936;\n            (*_sym.imp.USER32.dll_InflateRect)();\n            iStack124 = 0x10;\n            uStack128 = 0xc1a93e;\n            uStack128 = (*_sym.imp.USER32.dll_GetSysColor)();\n            iStack132 = 0xc1a945;\n            iVar3 = (*_sym.imp.GDI32.dll_CreateSolidBrush)();\n            puStack136 = &stack0xffffffb0;\n            iStack144 = 0xc1a954;\n            iStack140 = iVar1;\n            iStack132 = iVar3;\n            (*_sym.imp.USER32.dll_FrameRect)();\n            uStack148 = 0xc1a95b;\n            iStack144 = iVar3;\n            (*_sym.imp.GDI32.dll_DeleteObject)();\n        }\n        iVar3 = iStack116;\n        puStack156 = &stack0xffffffa0;\n        iStack96 = *puStack120;\n        uStack92 = puStack120[1];\n        iStack88 = puStack120[2];\n        puStack84 = puStack120[3];\n        if (iStack116 == 0) {\n            if (iStack124 == 0) {\n                uStack148 = 0xfffffffe;\n                uStack152 = 0xfffffffe;\n            }\n            else {\n                uStack148 = 0xfffffffd;\n                uStack152 = 0xfffffffd;\n            }\n            iStack160 = 0xc1a9c0;\n            (*_sym.imp.USER32.dll_InflateRect)();\n            iStack108 = iStack108 + -1;\n            iStack104 = iStack104 + -1;\n        }\n        else {\n            uStack148 = 0xfffffffe;\n            uStack152 = 0xfffffffe;\n            iStack160 = 0xc1a9a6;\n            (*_sym.imp.USER32.dll_InflateRect)();\n        }\n        iStack160 = iStack140;\n        piStack164 = &stack0xffffff94;\n        iStack172 = 0xc1a9d8;\n        iStack168 = iVar1;\n        (*_sym.imp.USER32.dll_FillRect)();\n        if ((iVar3 != 0) || (iStack132 != 0)) {\n            puStack120 = puStack120 + 2;\n            iStack116 = iStack116 + 2;\n        }\n        puVar6 = 0x104;\n        iStack172 = -0x10;\n        puStack156 = 0x104;\n        iStack176 = *hWnd;\n        uStack180 = 0xc1aa03;\n        uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)();\n        if ((uVar4 & 0x2000) == 0) {\n            puVar6 = 0x124;\n            piStack164 = 0x124;\n        }\n        if ((uVar4 & 0x300) == 0x300) {\n            puVar6 = puVar6 | 1;\n            piStack164 = puVar6;\n        }\n        if ((uVar4 & 0x200) == 0) {\n            if ((uVar4 & 0x100) == 0) {\n                puVar6 = puVar6 | 1;\n                piStack164 = puVar6;\n            }\n        }\n        else {\n            puVar6 = puVar6 | 2;\n            piStack164 = puVar6;\n        }\n        uStack180 = 0;\n        uStack184 = 0;\n        iStack188 = 0xe;\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageW)();\n        uVar4 = iVar3 + 1;\n        piStack200 = 0xc1aa6d;\n        piStack200 = fcn.00bb0ff6(-(uVar4 * 2 >> 0x20 != 0) | uVar4 * 2);\n        iStack204 = *hWnd;\n        puStack208 = 0xc1aa7f;\n        piStack164 = piStack200;\n        (*_sym.imp.USER32.dll_GetWindowTextW)();\n        uVar2 = 0xffffffff;\n        iVar3 = iVar1;\n        puStack208 = puVar6;\n        (*_sym.imp.USER32.dll_DrawTextW)(iVar1, iStack176, 0xffffffff, &stack0xffffff64);\n        if (iStack188 != 0) {\n            iStack168 = piStack200[2];\n            piStack164 = piStack200[3];\n            iStack176 = *piStack200 + 1;\n            iStack172 = piStack200[1] + 1;\n            uVar5 = (*_sym.imp.USER32.dll_GetSysColor)(0x11);\n            (*_sym.imp.GDI32.dll_SetTextColor)(iVar1, uVar5);\n            (*_sym.imp.USER32.dll_DrawTextW)(iVar1, puStack208, 0xffffffff, &stack0xffffff44, iVar3);\n        }\n        if (iStack204 != 0) {\n            iStack176 = *piStack200;\n            iStack172 = piStack200[1];\n            iStack168 = piStack200[2];\n            piStack164 = piStack200[3];\n            uVar5 = (*_sym.imp.GDI32.dll_CreateSolidBrush)(0);\n            (*_sym.imp.USER32.dll_FrameRect)(iVar1, &stack0xffffff4c, uVar5);\n            (*_sym.imp.GDI32.dll_DeleteObject)(uVar5);\n            (*_sym.imp.USER32.dll_InflateRect)(&stack0xffffff3c, 0xfffffffc, 0xfffffffc);\n            (*_sym.imp.USER32.dll_DrawFocusRect)(iVar1, &stack0xffffff30);\n        }\n        fcn.00bb106c(uVar4);\n        (*_sym.imp.GDI32.dll_SelectObject)(iVar1, uStack184);\n        (*_sym.imp.GDI32.dll_DeleteObject)(uVar2);\n        (*_sym.imp.GDI32.dll_SetTextColor)(iVar1, iStack204);\n        (*_sym.imp.GDI32.dll_SetBkColor)(iVar1, piStack200);\n        uVar2 = 1;\n    }\n    else {\n        puStack84 = 0xc1a869;\n        uVar2 = fcn.00c1ab60(arg_8h, hWnd);\n    }\n    return uVar2;\n}\n",
        "token_count": 2411
    },
    "00c1ab60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1ab60(uint32_t format, uint *lpchText)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    uint nLeftRect;\n    uint nTopRect;\n    uint nRightRect;\n    uint nBottomRect;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint *crColor;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = _sym.imp.USER32.dll_GetSysColor;\n    uVar1 = *(format + 0x18);\n    var_10h = *(format + 0x10) & 0x10;\n    uVar7 = *(format + 0x10) & 6;\n    var_14h = uVar7;\n    if (uVar7 == 0) {\n        iVar5 = lpchText[0x13];\n        if (iVar5 != -1) goto code_r0x00c1ab9b;\n        uVar9 = 0x12;\n    }\n    else {\n        uVar9 = 0xe;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_GetSysColor)(uVar9);\ncode_r0x00c1ab9b:\n    var_8h = (*_sym.imp.GDI32.dll_SetTextColor)(uVar1, iVar5);\n    if (lpchText[0x12] == -1) {\n        var_4h = (*_sym.imp.USER32.dll_GetSysColorBrush)(0xf);\n        crColor = (*pcVar3)(0xf);\n    }\n    else {\n        var_4h = (*_sym.imp.GDI32.dll_CreateSolidBrush)(lpchText[0x12]);\n        crColor = lpchText[0x12];\n    }\n    if (uVar7 == 0) {\n        uVar9 = 0x743c00;\n    }\n    else {\n        uVar9 = (*pcVar3)(0x11);\n    }\n    var_20h = (*_sym.imp.GDI32.dll_CreatePen)(0, 1, uVar9);\n    pcVar3 = _sym.imp.GDI32.dll_SelectObject;\n    var_1ch = (*_sym.imp.GDI32.dll_SelectObject)(uVar1, var_20h);\n    var_24h = (*_sym.imp.GDI32.dll_SetBkColor)(uVar1, crColor);\n    var_18h = (*pcVar3)(uVar1, var_4h);\n    crColor = format + 0x1c;\n    nLeftRect = *crColor;\n    nTopRect = *(format + 0x20);\n    nRightRect = *(format + 0x24);\n    nBottomRect = *(format + 0x28);\n    (*_sym.imp.USER32.dll_InflateRect)(&nLeftRect, 0xffffffff, 0xffffffff);\n    (*_sym.imp.GDI32.dll_RoundRect)(uVar1, nLeftRect, nTopRect, nRightRect, nBottomRect, 5, 5);\n    uVar8 = 0x104;\n    format = 0x104;\n    uVar7 = (*_sym.imp.USER32.dll_GetWindowLongW)(*lpchText, 0xfffffff0);\n    if ((uVar7 & 0x2000) == 0) {\n        uVar8 = 0x124;\n        format = 0x124;\n    }\n    if ((uVar7 & 0x300) == 0x300) {\n        uVar8 = uVar8 | 1;\n        format = uVar8;\n    }\n    if ((uVar7 & 0x200) == 0) {\n        if ((uVar7 & 0x100) == 0) {\n            format = uVar8 | 1;\n        }\n    }\n    else {\n        format = uVar8 | 2;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*lpchText, 0xe, 0, 0);\n    iVar2 = (iVar5 + 1U) * 2;\n    uVar9 = fcn.00bb0ff6(-(iVar2 >> 0x20 != 0) | iVar2);\n    (*_sym.imp.USER32.dll_GetWindowTextW)(*lpchText, uVar9, iVar5 + 1U);\n    if (var_10h != 0) {\n        nLeftRect = *crColor;\n        nTopRect = crColor[1];\n        nRightRect = crColor[2];\n        nBottomRect = crColor[3];\n        (*_sym.imp.USER32.dll_InflateRect)(&nLeftRect, 0xfffffffd, 0xfffffffd);\n        (*_sym.imp.USER32.dll_DrawFocusRect)(uVar1, &nLeftRect);\n    }\n    if (var_14h != 0) {\n        uVar6 = (*_sym.imp.USER32.dll_GetSysColor)(0x11);\n        (*_sym.imp.GDI32.dll_SetTextColor)(uVar1, uVar6);\n    }\n    (*_sym.imp.USER32.dll_DrawTextW)(uVar1, uVar9, 0xffffffff, &nLeftRect, format);\n    fcn.00bb106c(uVar9);\n    pcVar4 = _sym.imp.GDI32.dll_SelectObject;\n    (*_sym.imp.GDI32.dll_SelectObject)(uVar1, var_18h);\n    pcVar3 = _sym.imp.GDI32.dll_DeleteObject;\n    (*_sym.imp.GDI32.dll_DeleteObject)(var_4h);\n    (*pcVar4)(uVar1, var_1ch);\n    (*pcVar3)(var_20h);\n    (*_sym.imp.GDI32.dll_SetTextColor)(uVar1, var_8h);\n    (*_sym.imp.GDI32.dll_SetBkColor)(uVar1, var_24h);\n    return 1;\n}\n",
        "token_count": 1379
    },
    "00c1af89": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00c1af89(void)\n\n{\n    uint *puVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    arg_8h = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    iVar2 = (*_sym.imp.USER32.dll_GetFocus)();\n    if ((iVar2 != 0) && (iVar3 = fcn.00b92612(arg_8h),  iVar3 != -1)) {\n        iVar3 = **(*0xc56810 + iVar3 * 4);\n        iVar2 = fcn.00b925db(iVar2);\n        if ((iVar2 != -1) && (**(*0xc56824 + iVar2 * 4) != 0)) {\n            *(iVar3 + 0x1c) = iVar2;\n            puVar1 = **(*0xc56824 + iVar2 * 4);\n            if (*(puVar1 + 0x24) == '\\x02') {\n                (*_sym.imp.USER32.dll_SendMessageW)(*puVar1, 0xb0, iVar3 + 0x1bc, iVar3 + 0x1c0);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "00c1b00f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00c1b00f(int32_t arg_8h)\n\n{\n    bool bVar1;\n    \n    if (arg_8h != 0) {\n        *0xc5681c = fcn.00b92612(arg_8h);\n    }\n    bVar1 = *0xc5681c != -1;\n    if (bVar1) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(***(*0xc56810 + *0xc5681c * 4));\n    }\n    return bVar1;\n}\n",
        "token_count": 123
    },
    "00c1b057": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00c1b057(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    \n    iVar1 = *0xc5681c;\n    if (arg_8h != 0) {\n        iVar1 = fcn.00b92612(arg_8h);\n    }\n    if (iVar1 != -1) {\n        arg_8h_00 = **(*0xc56810 + iVar1 * 4);\n        if ((arg_8h == 0) && (iVar1 = (*_sym.imp.USER32.dll_GetActiveWindow)(),  *arg_8h_00 != iVar1)) {\n            return 0;\n        }\n        fcn.00b92344(arg_8h_00, 0xffffffff);\n        *arg_ch = arg_8h_00[0x5d];\n        *arg_10h = arg_8h_00[0x5e];\n        *arg_14h = arg_8h_00[0x5f];\n        *0xc5684c = 0;\n        *0xc56850 = 0x7fffffff;\n        *arg_18h = arg_8h_00[0x60];\n        *0xc56854 = arg_8h_00[0x5b];\n        *0xc56858 = arg_8h_00[0x5c];\n        (*_sym.imp.USER32.dll_EnumChildWindows)(*arg_8h_00, fcn.00c1ad70, 0);\n        iVar1 = *0xc5684c;\n        *arg_1ch = -1;\n        if ((iVar1 != 0) && (iVar1 != *arg_8h_00)) {\n            iVar1 = fcn.00b925db(iVar1);\n            *arg_1ch = iVar1;\n            if (iVar1 != -1) {\n                return 1;\n            }\n        }\n        *arg_1ch = 0;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 501
    },
    "00c1b140": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00c1b140(uint *arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    if (arg_10h != 0) {\n        *0xc5681c = fcn.00b92612(arg_10h);\n    }\n    bVar3 = *0xc5681c != -1;\n    if (bVar3) {\n        uVar2 = ***(*0xc56810 + *0xc5681c * 4);\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar2, 0xfffffff0);\n        *arg_8h = uVar1;\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar2, 0xffffffec);\n        *arg_ch = uVar2;\n    }\n    return bVar3;\n}\n",
        "token_count": 213
    },
    "00c1b236": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1b236(int32_t paccel, uint cAccel, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (arg_10h != 0) {\n        *0xc5681c = fcn.00b92612(arg_10h);\n    }\n    if (*0xc5681c != -1) {\n        piVar1 = **(*0xc56810 + *0xc5681c * 4);\n        if (piVar1[6] != 0) {\n            if (*0xc567d8 == *0xc5681c) {\n                *0xc567d8 = -1;\n            }\n            (*_sym.imp.USER32.dll_DestroyAcceleratorTable)(piVar1[6]);\n            piVar1[6] = 0;\n        }\n        if (paccel != 0) {\n            iVar2 = (*_sym.imp.USER32.dll_CreateAcceleratorTableW)(paccel, cAccel);\n            piVar1[6] = iVar2;\n            iVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n            if (*piVar1 == iVar2) {\n                *0xc567d8 = *0xc5681c;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "00c1b2bc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1b2bc(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_18h != 0) {\n        *0xc5681c = fcn.00b92612(arg_18h);\n    }\n    if (*0xc5681c == -1) {\n        uVar2 = 0;\n    }\n    else {\n        iVar1 = **(*0xc56810 + *0xc5681c * 4);\n        *(iVar1 + 0x58) = arg_8h;\n        *(iVar1 + 0x5c) = arg_ch;\n        if (0 < arg_10h) {\n            *(iVar1 + 0x60) = arg_10h;\n        }\n        if (0 < arg_14h) {\n            *(iVar1 + 100) = arg_14h;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 247
    },
    "00c1b31c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1b31c(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    \n    if (arg_10h != 0) {\n        *0xc5681c = fcn.00b92612(arg_10h);\n    }\n    if (*0xc5681c != -1) {\n        puVar1 = **(*0xc56810 + *0xc5681c * 4);\n        puVar1[4] = arg_8h;\n        puVar1[5] = arg_ch;\n        (*_sym.imp.USER32.dll_PostMessageW)(*puVar1, 0x20, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "00c1b36f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1b36f(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    double in_stack_00000018;\n    \n    if (arg_18h != 0) {\n        *0xc5681c = fcn.00b92612(arg_18h);\n    }\n    if (*0xc5681c == -1) {\n        uVar2 = 0;\n    }\n    else {\n        iVar1 = **(*0xc56810 + *0xc5681c * 4);\n        if (*0xc4bad8 != in_stack_00000018) {\n            uVar2 = fcn.00bcb5d0();\n            *(iVar1 + 0x7c) = uVar2;\n        }\n        if (arg_8h != -1) {\n            *(iVar1 + 0x80) = arg_8h;\n        }\n        if (arg_10h != -1) {\n            *(iVar1 + 0x84) = arg_10h;\n        }\n        fcn.00b981a7(arg_ch);\n        *(iVar1 + 0x88) = arg_14h;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 307
    },
    "00c1b405": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1b405(uint32_t arg_8h, int32_t dwNewLong, int32_t hWnd)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    if (hWnd != 0) {\n        *0xc5681c = fcn.00b92612(hWnd);\n    }\n    if (*0xc5681c == -1) {\n        uVar2 = 0;\n    }\n    else {\n        puVar1 = **(*0xc56810 + *0xc5681c * 4);\n        uVar2 = *puVar1;\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar2, 0xfffffff0);\n        if (((arg_8h == 0xffffffff) ||\n            (iVar4 = (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xfffffff0, arg_8h),  iVar4 != 0)) &&\n           ((dwNewLong == -1 ||\n            (iVar4 = (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xffffffec, dwNewLong),  iVar4 != 0)))) {\n            if (*(puVar1 + 0xe) != '\\0') {\n                iVar4 = -((arg_8h & 0xc00000) != 0xc00000);\n                if (((uVar3 & 0xc00000) == 0xc00000) != iVar4 + 1U) {\n                    iVar5 = (*_sym.imp.USER32.dll_GetSystemMetrics)(4);\n                    if (iVar4 == -1) {\n                        puVar1[0x12] = puVar1[0x12] - iVar5;\n                    }\n                    else {\n                        puVar1[0x12] = puVar1[0x12] + iVar5;\n                    }\n                }\n                (*_sym.imp.USER32.dll_SetWindowPos)(uVar2, 0, 0, 0, 0, 0, 0x47);\n            }\n            uVar2 = 1;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 509
    },
    "00c1b4e1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1b4e1(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    if (*0xc5681c == -1) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = ***(*0xc56810 + *0xc5681c * 4);\n    }\n    arg_8h = fcn.00b92612(arg_8h);\n    if (arg_8h != -1) {\n        if (arg_ch == -1) {\n            *0xc5681c = arg_8h;\n            return uVar4;\n        }\n        *0xc5681c = arg_8h;\n        cVar3 = fcn.00b92402(arg_ch, &arg_8h, &var_4h);\n        if (cVar3 != '\\0') {\n            iVar1 = **(*0xc56810 + arg_8h * 4);\n            iVar2 = **(*0xc56824 + var_4h * 4);\n            if (*(iVar2 + 0x90) == '\\v') {\n                *(iVar1 + 0x198) = 1;\n                *(iVar1 + 400) = *(iVar2 + 0x93);\n                return uVar4;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 331
    },
    "00c1bced": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1bced(uint *arg_8h, int16_t *hgdiobj, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint lpvObject;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint lpNumberOfBytesRead;\n    int32_t *lpPictDesc;\n    int32_t *var_4h;\n    \n    if (*hgdiobj == 0) {\n        hgdiobj = NULL;\ncode_r0x00c1be0c:\n        if (arg_8h[0x19] != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h[0x19]);\n        }\n        arg_8h[0x19] = hgdiobj;\n        uVar2 = *arg_8h;\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x172, 0, hgdiobj);\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(hgdiobj, 0x80000000, 0, 0, 3, 0, 0);\n        if (iVar1 != -1) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar1, 0);\n            iVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(2, uVar2);\n            if (iVar3 == 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            }\n            else {\n                uVar4 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar3);\n                iVar5 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar1, uVar4, uVar2, &lpNumberOfBytesRead, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar3);\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n                if (iVar5 != 0) {\n                    (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(iVar3, 1, &lpPictDesc);\n                    var_4h = NULL;\n                    (*_sym.imp.OLEAUT32.dll_OleCreatePictureIndirect)(lpPictDesc, 0, 0, 0xc22cac, &var_4h);\n                    (**(*lpPictDesc + 8))(lpPictDesc);\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar3);\n                    if (var_4h != NULL) {\n                        (**(*var_4h + 0xc))(var_4h, &hgdiobj);\n                        (*_sym.imp.GDI32.dll_GetObjectW)(hgdiobj, 0x18, &lpvObject);\n                        if ((*arg_10h == 0) && (*arg_14h == 0)) {\n                            *arg_10h = var_20h;\n                            *arg_14h = var_1ch;\n                        }\n                        hgdiobj = (*_sym.imp.USER32.dll_CopyImage)(hgdiobj, 0, *arg_10h, *arg_14h, 0x2000);\n                        (**(*var_4h + 8))(var_4h);\n                        goto code_r0x00c1be0c;\n                    }\n                }\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 786
    },
    "00c1bf4d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1bf4d(uint arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00b925db(arg_8h);\n    if (iVar1 == -1) {\n    // WARNING: Could not recover jumptable at 0x00c1bf6e. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.USER32.dll_DefDlgProcW)();\n        return;\n    }\n    if (arg_ch == 0x20) {\n        fcn.00c1bfb7(arg_8h, arg_10h, arg_14h & 0xffff, arg_14h >> 0x10);\n    }\n    else {\n        (*_sym.imp.USER32.dll_CallWindowProcW)(*(**(*0xc56824 + iVar1 * 4) + 8), arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "00c1c27c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1c27c(uint32_t hDlg, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint unaff_retaddr;\n    uint uVar5;\n    uint *hWnd;\n    uint uVar6;\n    \n    iVar3 = fcn.00b92612(hDlg);\n    fcn.00b92344(**(*0xc56810 + iVar3 * 4), 1);\n    uVar4 = arg_ch;\n    if (arg_18h == 0) {\n        if (*0xc56860 != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_DragLeave)(0);\n            (*_sym.imp.COMCTL32.dll_ImageList_EndDrag)();\n            (*_sym.imp.USER32.dll_ReleaseCapture)();\n            arg_ch = arg_10h;\n            hDlg = uVar4;\n            arg_ch = fcn.00c1adf1(&arg_14h, uVar4, arg_10h);\n            if ((arg_ch != 0xffffffff) && (arg_ch != *0xc56860)) {\n                arg_14h = **(*0xc56810 + uVar4 * 4);\n                puVar2 = **(*0xc56824 + arg_ch * 4);\n                if ((*(puVar2 + 0x92) & 8) != 0) {\n                    hDlg = *puVar2;\n                    fcn.00c1804a(*0xc56860, &arg_10h, 0);\n                    iVar3 = 0;\n                    hWnd = &arg_ch;\n                    uVar5 = fcn.00c1804a(unaff_retaddr, hWnd, 0);\n                    cVar1 = *(**(*0xc56824 + iVar3 * 4) + 0x90);\n                    if ((cVar1 == '\\x02') || (cVar1 == '\\x03')) {\n                        uVar6 = uVar5;\n                        (*_sym.imp.USER32.dll_SetWindowTextW)(hWnd, uVar5);\n                        (*_sym.imp.USER32.dll_SendMessageW)(uVar5, 0xb1, 0, 0xffffffff);\n                        uVar5 = uVar6;\n                    }\n                    fcn.00bb106c(uVar5);\n                    arg_ch = 0;\n                    arg_10h = 1;\n                    fcn.00b99a20();\n                    arg_10h = 1;\n                    fcn.00b97f41(L\"@GUI_DROPID\");\n                    fcn.00b98b13(&arg_10h, &stack0xfffffffc, 1);\n                    fcn.00b95a64();\n                    uVar5 = 0xc1f910;\n                    fcn.00b99bf8(0xc1f910);\n                    fcn.00b97f41(L\"@GUI_DRAGFILE\");\n                    fcn.00b98b13(&stack0xfffffff8, &stack0xffffffe8, 1);\n                    fcn.00b95a64();\n                    fcn.00c163d0(0xfffffff3, uVar5, 0, 0);\n                    fcn.00b99a20();\n                }\n                *0xc56860 = 0;\n            }\n        }\n        uVar4 = arg_10h << 0x10 | uVar4 & 0xffff;\n        uVar5 = 0x202;\n    }\n    else {\n        uVar4 = arg_10h << 0x10 | arg_ch & 0xffff;\n        uVar5 = 0x205;\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, uVar5, arg_14h, uVar4);\n    return;\n}\n",
        "token_count": 858
    },
    "00c1c49c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1c49c(uint hDlg, uint32_t arg_ch, int32_t lParam, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t unaff_EBX;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    uint uStack84;\n    uint32_t uStack76;\n    uint32_t uStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uchar auStack56 [8];\n    uint32_t uStack48;\n    uint uStack40;\n    uint uStack36;\n    int32_t iStack20;\n    \n    iStack68 = fcn.00b92612(hDlg);\n    uVar4 = **(*0xc56810 + iStack68 * 4);\n    uStack72 = uVar4;\n    if (arg_ch == 2) {\n        if (*0xc567b0 == '\\0') {\n            return;\n        }\n        uVar9 = 0xf060;\n        uVar8 = 0x112;\ncode_r0x00c1c4e9:\n        (*_sym.imp.USER32.dll_PostMessageW)(hDlg, uVar8, uVar9, 0);\n        return;\n    }\n    if (arg_ch == 1) {\n        iStack68 = (*_sym.imp.USER32.dll_GetFocus)();\n        uVar9 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iStack68);\n        fcn.00c17f4c(uVar9, &iStack60);\n        uVar3 = fcn.00bb6ccd(*(uVar4 + 0x1c4));\n        if (uVar9 != uVar3) {\n            return;\n        }\n        *(uVar4 + 0x1c4) = 0;\n        if (arg_14h != 0) {\n            return;\n        }\n        if (lParam != 0) {\n            return;\n        }\n        uVar9 = uVar9 & 0xffff;\n        uVar8 = 0x111;\n        goto code_r0x00c1c4e9;\n    }\n    iVar7 = 0;\n    uVar4 = arg_ch;\n    if (arg_14h == 0) {\n        if (lParam == 0) {\n            uStack76 = arg_ch;\n        }\n        else {\ncode_r0x00c1c587:\n            uVar4 = fcn.00b925db(lParam);\n            if (uVar4 == 0xffffffff) goto code_r0x00c1c75f;\n        }\n    }\n    else {\n        if ((arg_14h != 1) || (lParam != 0)) goto code_r0x00c1c587;\n        arg_14h = 0;\n        uStack76 = arg_ch;\n    }\n    uVar3 = uVar4;\n    cVar2 = fcn.00b92402(uVar4, &uStack72, &stack0xffffffa4);\n    if (cVar2 == '\\0') {\n        iVar7 = *(unaff_EBX + 0x1c4);\n        if (iVar7 != 0) {\n            *(unaff_EBX + 0x1c4) = 0;\n            fcn.00c1b60b(iVar7, 0);\n        }\n    }\n    else {\n        if (*(**(*0xc56824 + uVar3 * 4) + 0x90) == '\\x0f') {\n            uStack40 = fcn.00bb0ff6(0x208);\n            uVar8 = *(**(*0xc56824 + uVar3 * 4) + 0xc);\n            uStack76 = 0x30;\n            fcn.00bb3020(&uStack72, 0, 0x2c);\n            uStack72 = 0x10;\n            uStack36 = 0x104;\n            iVar5 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uVar8, uVar4, 0, &uStack76);\n            if ((iVar5 != 0) && ((uStack48 & 0x200) != 0)) {\n                iVar5 = (*_sym.imp.USER32.dll_GetMenuItemCount)(uStack84);\n                if (iVar5 < 1) {\n                    uVar3 = 0xffffffff;\n                }\n                else {\n                    do {\n                        uVar3 = (*_sym.imp.USER32.dll_GetMenuItemID)(uStack84, iVar7);\n                        iVar1 = iVar7;\n                        if (uVar3 == uVar4) goto joined_r0x00c1c6b5;\n                        iVar7 = iVar7 + 1;\n                    } while (iVar7 < iVar5);\n                }\n                iVar1 = iVar7;\n                if (uVar3 == uVar4) {\njoined_r0x00c1c6b5:\n                    do {\n                        iStack60 = iVar1;\n                        iStack64 = iVar7;\n                        iVar1 = iStack60 + -1;\n                        iStack20 = iStack68;\n                        iVar7 = iStack64;\n                        if (iVar1 < 0) break;\n                        iVar6 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uStack84, iVar1, 1, auStack56);\n                        iVar7 = iStack64;\n                        arg_14h = uStack76;\n                    } while ((iVar6 == 0) || (iStack20 = iStack68,  (uStack48 & 0x200) != 0));\n                    do {\n                        iVar1 = iVar7;\n                        iVar7 = iVar1 + 1;\n                        if (iVar5 <= iVar7) break;\n                        iVar6 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uStack84, iVar7, 1, auStack56);\n                        uVar4 = uStack72;\n                        arg_14h = uStack76;\n                    } while ((iVar6 == 0) || ((uStack48 & 0x200) != 0));\n                    (*_sym.imp.USER32.dll_CheckMenuRadioItem)(uStack84, iStack60, iVar1, iStack64, 0x400);\n                }\n            }\n            fcn.00bb106c(iStack68);\n        }\n        cVar2 = fcn.00c1b60b(uVar4, arg_14h);\n        if (cVar2 != '\\0') {\n            return;\n        }\n    }\ncode_r0x00c1c75f:\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x111, arg_14h << 0x10 | arg_ch & 0xffff, lParam);\n    return;\n}\n",
        "token_count": 1520
    },
    "00c1c788": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1c788(int32_t arg_8h, int32_t wParam, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint lpPoint;\n    uint var_4h;\n    \n    iVar4 = fcn.00b92612(arg_8h);\n    piVar2 = **(*0xc56810 + iVar4 * 4);\n    if (wParam == arg_8h) {\n        if (piVar2[0x68] != 0) {\n            (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n            iVar4 = piVar2[0x68];\ncode_r0x00c1c7d7:\n            (*_sym.imp.USER32.dll_TrackPopupMenuEx)(iVar4, 0, lpPoint, var_4h, arg_8h, 0);\n            return;\n        }\n    }\n    else {\n        iVar4 = fcn.00b925db(wParam);\n        if (iVar4 != -1) {\n            iVar3 = **(*0xc56824 + iVar4 * 4);\n            cVar1 = *(iVar3 + 0x90);\n            if ((((cVar1 != '\\x0e') && (cVar1 != '\\x0f')) && (cVar1 != '\\x13')) &&\n               ((cVar1 != '\\x10' && (*(iVar3 + 0xc) != 0)))) {\n                (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n                arg_8h = *piVar2;\n                iVar4 = *(**(*0xc56824 + iVar4 * 4) + 0xc);\n                goto code_r0x00c1c7d7;\n            }\n        }\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x7b, wParam, arg_14h << 0x10 | arg_10h & 0xffff);\n    return;\n}\n",
        "token_count": 463
    },
    "00c1c86d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1c86d(uint hDlg, int32_t *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00b92612(hDlg);\n    puVar1 = **(*0xc56810 + iVar2 * 4);\n    if (*arg_ch == 4) {\n        iVar2 = fcn.00b925db(arg_ch[5]);\n        if (iVar2 != -1) {\n            fcn.00c1a849(arg_ch, **(*0xc56824 + iVar2 * 4));\n            if ((*(arg_ch + 4) & 0x10) == 0) {\n                puVar1[0x71] = 0;\n            }\n            else {\n                (*_sym.imp.USER32.dll_SendMessageW)(*puVar1, 0x401, iVar2, 0);\n            }\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x2b, arg_ch[1], arg_ch);\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "00c1c8ee": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1c8ee(uint hDlg, int32_t hDrop)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iStack696;\n    int32_t iStack692;\n    uchar *puStack688;\n    uint uStack684;\n    int32_t iStack680;\n    int32_t iStack676;\n    uint uStack672;\n    uint uStack668;\n    uint uStack664;\n    uint uStack660;\n    uchar *puStack656;\n    uchar *puStack652;\n    uchar auStack608 [16];\n    uint uStack592;\n    uchar auStack584 [16];\n    uchar auStack568 [4];\n    uint uStack564;\n    uint uStack560;\n    uchar auStack556 [552];\n    \n    fcn.00b92612(hDlg);\n    (*_sym.imp.SHELL32.dll_DragQueryPoint)();\n    puStack652 = 0xc1c92f;\n    iVar2 = fcn.00c1adf1(&stack0xfffffd94, uStack564, uStack560);\n    uStack592 = **(*0xc56810 + &stack0xfffffdd4 * 4);\n    if ((iVar2 == -1) || (puVar1 = **(*0xc56824 + iVar2 * 4),  (*(puVar1 + 0x92) & 8) == 0)) {\n        puStack652 = NULL;\n        puStack656 = hDrop;\n        uStack660 = 0x233;\n        uStack664 = hDlg;\n        uStack668 = 0xc1cb47;\n        (*_sym.imp.USER32.dll_DefDlgProcW)();\n    }\n    else {\n        uStack664 = *puVar1;\n        puStack652 = &stack0xfffffdc8;\n        puStack656 = &stack0xfffffdb8;\n        uStack660 = 0xb0;\n        iVar4 = 0;\n        uStack668 = 0xc1c986;\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        uStack668 = 0;\n        uStack672 = 0;\n        iStack676 = 0xffffffff;\n        iStack680 = hDrop;\n        uStack684 = 0xc1c991;\n        iVar3 = (*_sym.imp.SHELL32.dll_DragQueryFileW)();\n        if (0 < iVar3) {\n            do {\n                uStack684 = 0x104;\n                puStack688 = &stack0xfffffdb0;\n                iStack696 = hDrop;\n                iStack692 = iVar4;\n                (*_sym.imp.SHELL32.dll_DragQueryFileW)();\n                if (iVar4 < hDrop) {\n                    if (*(**(*0xc56824 + iVar2 * 4) + 0x90) == '\\x02') {\n                        uVar6 = 0xc4a470;\n                    }\n                    else {\n                        uVar6 = 0xc49588;\n                    }\n                    fcn.00bb2fcd(&stack0xfffffda0, uVar6);\n                }\n                uVar6 = 0xc2;\n                iVar5 = iStack680;\n                (*_sym.imp.USER32.dll_SendMessageW)();\n                (*_sym.imp.USER32.dll_SendMessageW)(iStack696, 0xb0, &stack0xfffffd8c);\n                (*_sym.imp.USER32.dll_SendMessageW)(iVar5, 0xb1, uVar6, uVar6);\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < iVar3);\n        }\n        uStack684 = uStack660;\n        iStack692 = 0xb1;\n        iStack696 = uStack664;\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        (*_sym.imp.SHELL32.dll_DragFinish)();\n        iStack676 = 0;\n        uStack668 = 0;\n        uStack664 = 1;\n        fcn.00b99a20();\n        uStack664 = 1;\n        iStack676 = iVar2;\n        fcn.00b97f41(L\"@GUI_DROPID\");\n        fcn.00b98b13(&stack0xfffffd68, &stack0xfffffd58, 1);\n        fcn.00b95a64();\n        fcn.00b99a20();\n        iStack692 = 0xffffffff;\n        iStack680 = 1;\n        fcn.00b97f41(L\"@GUI_DRAGID\");\n        fcn.00b98b13(&stack0xfffffd58, &stack0xfffffd48, 1);\n        fcn.00b95a64();\n        fcn.00b99bf8(&stack0xfffffd7c);\n        fcn.00b97f41(L\"@GUI_DRAGFILE\");\n        fcn.00b98b13(&stack0xfffffd44, &stack0xfffffd34, 1);\n        fcn.00b95a64();\n        fcn.00c163d0(0xfffffff3, iStack696, 0, 0);\n        fcn.00b99a20();\n    }\n    return;\n}\n",
        "token_count": 1144
    },
    "00c1cdac": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1cdac(int32_t hDlg, uint wParam, uint *arg_10h)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    int16_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint unaff_ESI;\n    int32_t unaff_EDI;\n    char cVar9;\n    int32_t iVar10;\n    int32_t *arg_ch;\n    uint32_t *arg_10h_00;\n    uint32_t uStack176;\n    uint32_t uStack172;\n    int32_t iStack168;\n    uint uStack164;\n    uint32_t uStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uint uStack148;\n    uint8_t uStack144;\n    uint *puStack132;\n    int32_t iStack128;\n    uint uStack124;\n    uint32_t uStack120;\n    uint uStack108;\n    int32_t iStack104;\n    uint uStack96;\n    uint uStack88;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack36;\n    \n    cVar3 = unaff_ESI >> 0x18;\n    iVar6 = hDlg;\n    iStack152 = fcn.00b92612(hDlg);\n    pcVar2 = _sym.imp.USER32.dll_GetKeyState;\n    iVar8 = **(*0xc56810 + iStack152 * 4);\n    uVar7 = arg_10h[2];\n    iStack128 = iVar8;\n    if (uVar7 < 0xfffffe6f) {\n        if (uVar7 == 0xfffffe6e) {\ncode_r0x00c1d00c:\n            uVar5 = 0;\n            iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x110a, 9);\n            if (iVar8 == 0) goto code_r0x00c1ce47;\n            uStack108 = 4;\n            iStack104 = iVar8;\n            iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x113e, 0, &uStack108);\n            if (((iVar8 == 0) || (arg_10h[0xd] == arg_10h[0x17])) || (arg_10h[3] == 0x1000)) goto code_r0x00c1ce47;\n            uVar7 = arg_10h[3] - 1;\n            goto joined_r0x00c1d2ea;\n        }\n        if (uVar7 < 0xfffffdda) {\n            if (uVar7 == 0xfffffdd9) {\n                iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x130b, 0);\n            }\n            else if (uVar7 == 0xfffffd09) {\n                *(iVar8 + 0x19a) = 1;\n                if (*(iVar8 + 0x199) != '\\0') goto code_r0x00c1ce47;\n                *(iVar8 + 0x19a) = 0;\n            }\n            else {\n                if (uVar7 == 0xfffffd0e) {\n                    *(iVar8 + 0x199) = 1;\n                    goto code_r0x00c1ce47;\n                }\n                if (uVar7 == 0xfffffd0f) {\n                    if (*(iVar8 + 0x19a) == '\\x01') {\n                        fcn.00c1b60b(arg_10h[1], 0xfffffd0f);\n                    }\n                    *(iVar8 + 0x199) = 0;\n                    goto code_r0x00c1ce47;\n                }\n                if (uVar7 != 0xfffffd16) goto code_r0x00c1ce47;\n            }\n        }\n        else {\n            if (uVar7 != 0xfffffdda) {\n                if (uVar7 == 0xfffffdee) {\n                    if ((*(iVar8 + 0x188) != 0) && (iVar8 = 3,  2 < *0xc56834)) {\n                        do {\n                            iVar6 = **(*0xc56824 + iVar8 * 4);\n                            if ((iVar6 != 0) && ((*(iVar6 + 4) == iStack152 && (*(iVar6 + 0x93) == arg_10h[1])))) break;\n                            iVar8 = iVar8 + 1;\n                        } while (iVar8 <= *0xc56834);\n                        if (iVar8 <= *0xc56834) {\n                            fcn.00bb42ee(arg_10h + 4, *(**(*0xc56824 + iVar8 * 4) + 0x54), 0x4f);\n                            *(arg_10h + 0xae) = 0;\n                            return 1;\n                        }\n                    }\n                    goto code_r0x00c1ce47;\n                }\n                if (uVar7 != 0xfffffe3d) {\n                    if (uVar7 != 0xfffffe64) goto code_r0x00c1ce47;\n                    uStack156 = *arg_10h;\n                    uVar5 = 0xfffffff0;\n                    uVar7 = (*_sym.imp.USER32.dll_GetWindowLongW)(uStack156);\n                    if ((((uVar7 & 0x100) == 0) || (*(arg_10h + 3) != 0x20)) ||\n                       (iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uStack160, 0x110a, 9, 0),  iVar8 == 0))\n                    goto code_r0x00c1ce47;\n                    uStack108 = 4;\n                    iStack104 = iVar8;\n                    uVar7 = (*_sym.imp.USER32.dll_SendMessageW)(uStack160, 0x113e, 0, &uStack108);\n                    goto joined_r0x00c1d2ea;\n                }\n                goto code_r0x00c1d00c;\n            }\n            iVar4 = (*_sym.imp.USER32.dll_GetKeyState)();\n            if ((-1 < iVar4) || (iVar4 = (*pcVar2)(9),  -1 < iVar4)) goto code_r0x00c1ce47;\n            iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x130b, 0, 0);\n            iVar4 = (*_sym.imp.USER32.dll_GetKeyState)(0x10);\n            if (iVar4 < 0) {\n                iVar6 = iVar6 + -1;\n            }\n            else {\n                iVar6 = iVar6 + 1;\n            }\n        }\n        uVar5 = arg_10h[1];\n    }\n    else {\n        if (uVar7 < 0xfffffff1) {\n            if (uVar7 == 0xfffffff0) {\n                (*_sym.imp.USER32.dll_ReleaseCapture)();\n            }\n            else if ((uVar7 == 0xfffffec0) || (uVar7 == 0xfffffed4)) {\n                (*_sym.imp.USER32.dll_InvalidateRect)(*arg_10h, 0);\n            }\n            else if (uVar7 == 0xffffff93) {\n                (*_sym.imp.COMCTL32.dll_ImageList_SetDragCursorImage)(*0xc5685c, 0, 0);\n                (*_sym.imp.COMCTL32.dll_ImageList_BeginDrag)(*0xc5685c, 0, 0xfffffff8, 0xfffffff0);\n                (*_sym.imp.USER32.dll_SetCapture)(hDlg);\n                *0xc56860 = wParam;\n                uStack176 = 0;\n                uStack172 = 1;\n                fcn.00b99a20();\n                uStack172 = 1;\n                fcn.00b97f41(L\"@GUI_DRAGID\");\n                fcn.00b98b13(&uStack164, &stack0xffffff44, 1);\n                fcn.00b95a64();\n                (*_sym.imp.USER32.dll_ClientToScreen)(*arg_10h, arg_10h + 8);\n                (*_sym.imp.COMCTL32.dll_ImageList_DragEnter)(0, arg_10h[8], arg_10h[9]);\n                fcn.00b99a20();\n            }\n            else if (uVar7 == 0xffffff94) {\n                uVar5 = arg_10h[1];\n                arg_10h_00 = &uStack172;\n                arg_ch = &iStack152;\n                cVar3 = fcn.00b92402(uVar5, arg_ch, arg_10h_00);\n                if (cVar3 != '\\0') {\n                    *(**(*0xc56824 + unaff_EDI * 4) + 0x96) = *(arg_10h + 4);\n                    fcn.00c1b60b(arg_10h[1], 0);\n                    if (*(**(*0xc56824 + arg_10h_00 * 4) + 0x28) != 0) {\n                        *0xc567ec = uVar5;\n                        fcn.00b981a7(**(*0xc56824 + arg_10h_00 * 4) + 0x24);\n                        *0xc56800 = *(**(*0xc56824 + arg_ch * 4) + 0x98);\n                        (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x1030, arg_10h[4], fcn.00c1b602);\n                    }\n                }\n            }\n            goto code_r0x00c1ce47;\n        }\n        if (uVar7 == 0xfffffff4) {\n            uStack176 = fcn.00b925db(*arg_10h);\n            if (uStack176 != 0xffffffff) {\n                iVar8 = **(*0xc56824 + uStack176 * 4);\n                cVar3 = *(iVar8 + 0x90);\n                if ((cVar3 == '\\x10') || (cVar3 == '\\x13')) {\n                    if (arg_10h[3] == 1) {\n                        return 0x20;\n                    }\n                    if (arg_10h[3] == 0x10001) {\n                        cVar9 = *(iVar8 + 0x48) == -0x2000000;\n                        cVar3 = fcn.00b92402(arg_10h[0xb], &uStack156, &uStack176);\n                        if ((cVar3 != '\\0') &&\n                           (uVar7 = (*_sym.imp.USER32.dll_GetWindowLongW)\n                                              (*(**(*0xc56824 + iVar6 * 4) + 0x34), 0xfffffff0), \n                           (uVar7 & 0x8000000) == 0)) {\n                            if (((*(arg_10h + 10) & 0x11) != 0) && (*(**(*0xc56824 + iVar6 * 4) + 0x90) != '\\x14'))\n                            goto code_r0x00c1ce47;\n                            iVar8 = *(**(*0xc56824 + iVar6 * 4) + 0x4c);\n                            if (iVar8 != -1) {\n                                arg_10h[0xc] = iVar8;\n                            }\n                            iVar8 = *(**(*0xc56824 + iVar6 * 4) + 0x48);\n                            if ((-1 < iVar8) && ((cVar9 == '\\0' || ((*(arg_10h + 9) & 1) != 0)))) {\n                                arg_10h[0xd] = iVar8;\n                            }\n                        }\n                        return 0;\n                    }\n                }\n            }\n            goto code_r0x00c1ce47;\n        }\n        if (uVar7 == 0xfffffffb) {\n            uStack176 = uStack176 & 0xffffff;\n            fcn.00b92344(iVar8, 1);\n            (*_sym.imp.USER32.dll_GetCursorPos)(&uStack172);\n            (*_sym.imp.USER32.dll_ScreenToClient)(*arg_10h, &uStack176);\n            uStack176 = fcn.00b925db(*arg_10h);\n            if (uStack176 == 0xffffffff) {\n                uStack172 = uStack176;\n                uVar5 = (*_sym.imp.USER32.dll_GetParent)(*arg_10h);\n                uStack176 = fcn.00b925db(uVar5);\n                uStack172 = uStack176;\n                if (uStack176 == 0xffffffff) goto code_r0x00c1ce47;\n                cVar3 = '\\x01';\n            }\n            cVar9 = *(**(*0xc56824 + uStack176 * 4) + 0x90);\n            uStack172 = uStack176;\n            uStack160 = uStack176;\n            if (cVar9 == '\\x10') {\n                iStack152 = iStack168;\n                uStack148 = uStack164;\n                iVar8 = 0;\n                iVar10 = 0x1111;\n                uVar5 = *arg_10h;\n                uVar7 = (*_sym.imp.USER32.dll_SendMessageW)(uVar5, 0x1111, 0, &iStack152);\n                if (uVar7 != 0) {\n                    uStack124 = 4;\n                    uStack120 = uVar7;\n                    (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x113e, 0, &uStack124);\n                    if (((uStack160 & 0x46) != 0) &&\n                       ((cVar3 = fcn.00b92402(uStack88, &uStack172, &stack0xffffff40),  uVar5 = uStack88,  cVar3 == '\\0'\n                        || (iVar8 = iVar10,  *(**(*0xc56824 + iVar10 * 4) + 0xc) == 0)))) {\n                        iVar8 = iVar6;\n                    }\n                }\n                (*_sym.imp.USER32.dll_ClientToScreen)(*arg_10h, &stack0xffffff48, uVar5, iVar10, iVar8);\n                iVar8 = *(**(*0xc56824 + uStack172 * 4) + 0xc);\n                if (iVar8 != 0) {\n                    (*_sym.imp.USER32.dll_TrackPopupMenuEx)(iVar8, 0x80, iStack168, uStack164, *puStack132, 0);\n                    return 1;\n                }\n            }\n            else if (cVar9 == '\\x13') {\n                iStack128 = iStack168;\n                uStack124 = uStack164;\n                iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x1012, 0, &iStack128);\n                if ((-1 < iVar8) && (cVar3 == '\\0')) {\n                    uStack68 = 4;\n                    iStack64 = iVar8;\n                    iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x104b, 0, &uStack68);\n                    if (iVar8 == 0) goto code_r0x00c1ce47;\n                    if ((uStack120 & 0xe) != 0) {\n                        fcn.00b92402(uStack36, &uStack156, &uStack176);\n                    }\n                }\n                (*_sym.imp.USER32.dll_ClientToScreen)(*arg_10h, &iStack168);\n                iVar8 = *(**(*0xc56824 + uStack172 * 4) + 0xc);\n                if (iVar8 != 0) {\n                    (*_sym.imp.USER32.dll_TrackPopupMenuEx)(iVar8, 0, iStack168, uStack164, *puStack132, 0);\n                }\n            }\n            goto code_r0x00c1ce47;\n        }\n        if (uVar7 != 0xfffffffe) goto code_r0x00c1ce47;\n        fcn.00b92344(iVar8, 1);\n        (*_sym.imp.USER32.dll_GetCursorPos)(&uStack172);\n        (*_sym.imp.USER32.dll_ScreenToClient)(*arg_10h, &uStack176);\n        uVar5 = *arg_10h;\n        iVar8 = fcn.00b925db(uVar5);\n        if ((iVar8 == -1) || (uVar1 = *(**(*0xc56824 + iVar8 * 4) + 0x90),  uVar1 < 0x10)) goto code_r0x00c1ce47;\n        if (uVar1 < 0x12) {\n            iStack152 = iStack168;\n            uStack148 = uStack164;\n            iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x1111, 0, &iStack152);\n            if (iVar8 != 0) {\n                uStack108 = 0xc;\n                uStack96 = 0xf000;\n                iStack104 = iVar8;\n                (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x113e, 0, &uStack108);\n                pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n                if ((uStack144 & 0x46) != 0) {\n                    (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x110b, 9, 0);\n                    (*pcVar2)(*arg_10h, 0x110b, 9, uStack156);\n                }\n            }\n            goto code_r0x00c1ce47;\n        }\n        if (uVar1 != 0x13) goto code_r0x00c1ce47;\n        iStack128 = iStack168;\n        uStack124 = uStack164;\n        iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x1012, 0, &iStack128);\n        if (iVar8 == -1) goto code_r0x00c1ce47;\n        uStack68 = 4;\n        iStack64 = iVar8;\n        (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x104b, 0, &uStack68);\n        uVar7 = uStack120 & 0xe;\njoined_r0x00c1d2ea:\n        if (uVar7 == 0) goto code_r0x00c1ce47;\n    }\n    fcn.00c1b60b(uVar5, iVar6);\ncode_r0x00c1ce47:\n    uVar5 = (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x4e, wParam, arg_10h);\n    return uVar5;\n}\n",
        "token_count": 4237
    },
    "00c1d6c6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1d6c6(uint hDlg, uint arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    int32_t nIDButton;\n    uint uVar2;\n    \n    nIDButton = fcn.00b925db(arg_ch);\n    if (((nIDButton != -1) &&\n        (((arg_10h == 8 && (*(**(*0xc56824 + nIDButton * 4) + 0x90) == '\\x12')) ||\n         ((arg_10h == 4 && (*(**(*0xc56824 + nIDButton * 4) + 0x90) == '\\x16')))))) &&\n       (cVar1 = fcn.00c1b60b(nIDButton, arg_10h),  cVar1 != '\\0')) {\n        return;\n    }\n    if (arg_18h == 0) {\n        uVar2 = 0x115;\n    }\n    else {\n        uVar2 = 0x114;\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, uVar2, arg_14h << 0x10 | arg_10h & 0xffff, arg_ch);\n    return;\n}\n",
        "token_count": 292
    },
    "00c1dc98": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00c1dc98(uint arg_8h, uint arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    iVar3 = *arg_10h;\n    while (iVar3 != -1) {\n        iVar5 = 0;\n        iVar1 = iVar3;\n        piVar2 = arg_10h;\n        if (iVar3 != arg_14h) {\n            while( true ) {\n                if (piVar2[1] != iVar1 + 1) break;\n                iVar5 = iVar5 + 1;\n                iVar1 = iVar1 + 1;\n                piVar2 = piVar2 + 1;\n            }\n            iVar3 = fcn.00ba8305(arg_8h, arg_ch, iVar3, arg_10h[iVar5]);\n            iVar4 = iVar4 + iVar3;\n        }\n        arg_10h = arg_10h + iVar5 + 1;\n        iVar3 = *arg_10h;\n    }\n    return iVar4;\n}\n",
        "token_count": 291
    },
    "00c1dd9a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00c1dd9a(uint32_t arg_8h, uint arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (*arg_10h != 0) {\n        iVar4 = fcn.00ba8305(arg_8h, arg_ch, 0, *arg_10h - 1);\n    }\n    while (uVar2 = *arg_10h,  puVar5 = arg_10h,  uVar2 != 0xffffffff) {\n        while (puVar1 = puVar5 + 1,  *puVar1 == uVar2 + 1) {\n            puVar5 = puVar1;\n            uVar2 = *puVar1;\n        }\n        arg_10h = puVar5 + 1;\n        uVar2 = *arg_10h;\n        if (uVar2 == 0xffffffff) {\n            uVar2 = -((arg_8h >> 0xb & 1) != 0) & 0x110000;\n        }\n        iVar3 = fcn.00ba8305(arg_8h, arg_ch, *puVar5 + 1, uVar2 - 1);\n        iVar4 = iVar4 + iVar3;\n    }\n    return iVar4;\n}\n",
        "token_count": 346
    },
    "00b955ec": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b955ec(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = *(in_ECX + 0x2c);\n    if (iVar1 != 4) {\n        if ((((iVar1 == 5) || (iVar1 == 6)) || (iVar1 == 7)) || (iVar1 == 8)) {\n            fcn.00bf34df(arg_8h);\n            return;\n        }\n        if (iVar1 != 3) {\n            fcn.00b955a7(arg_8h);\n            return;\n        }\n    }\n    fcn.00b95562(arg_8h);\n    return;\n}\n",
        "token_count": 159
    },
    "00b956d2": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1h\n\nbool __cdecl fcn.00b956d2(uint arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint32_t *puVar3;\n    char cVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t *unaff_EDI;\n    uint32_t *var_10h;\n    uint var_1h;\n    \n    iVar1 = *(in_ECX + 0x2c);\n    if ((((iVar1 != 5) && (iVar1 != 6)) && (iVar1 != 7)) && (iVar1 != 8)) {\n        if ((iVar1 != 3) && (iVar1 != 4)) {\n            fcn.00b95c18();\n            cVar4 = fcn.00b95632(&var_10h, arg_ch);\n            if (cVar4 != '\\0') {\n                fcn.00b9793a(&var_10h, arg_8h);\n            }\n            fcn.00b95a64();\n            return cVar4 != '\\0';\n        }\n        fcn.00b95c18();\n        cVar4 = fcn.00b95632(&var_10h, arg_ch);\n        if (cVar4 != '\\0') {\n            fcn.00b981c1(&var_10h, arg_8h);\n        }\n        fcn.00b95a64();\n        return cVar4 != '\\0';\n    }\n    var_10h = unaff_EDI;\n    fcn.00b97eec();\n    puVar3 = arg_ch;\n    uVar5 = 0;\n    bVar2 = false;\n    if (*arg_ch != 0) {\n        do {\n            cVar4 = fcn.00bf3436(&arg_ch);\n            if (cVar4 == '\\0') {\n                if (!bVar2) {\n                    return false;\n                }\n                break;\n            }\n            var_10h = arg_ch;\n            bVar2 = true;\n            fcn.00b97a84(arg_ch);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < *puVar3);\n    }\n    *puVar3 = uVar5;\n    return true;\n}\n",
        "token_count": 539
    },
    "00b98238": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b98238(int32_t *param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int64_t iVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint var_ch;\n    uint var_8h;\n    \n    if (5 < param_1[3]) {\n        iVar3 = param_1[3] * 4;\n        iVar6 = fcn.00bb0ff6(-(iVar3 >> 0x20 != 0) | iVar3);\n        iVar8 = *param_1;\n        iVar7 = 0;\n        param_1[2] = iVar6;\n        if (0 < param_1[3]) {\n            do {\n                *(param_1[2] + iVar7 * 4) = iVar8;\n                iVar7 = iVar7 + 1;\n                iVar8 = *(iVar8 + 0x24);\n            } while (iVar7 < param_1[3]);\n        }\n        do {\n            bVar4 = false;\n            iVar8 = 0;\n            if (param_1[3] == 1 || param_1[3] + -1 < 0) {\n                return;\n            }\n            do {\n                uVar1 = *(param_1[2] + iVar8 * 4);\n                uVar2 = *(param_1[2] + 4 + iVar8 * 4);\n                cVar5 = fcn.00ba5f13();\n                if (cVar5 != '\\0') {\n                    bVar4 = true;\n                    *(param_1[2] + iVar8 * 4) = uVar2;\n                    *(param_1[2] + 4 + iVar8 * 4) = uVar1;\n                }\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < param_1[3] + -1);\n        } while (bVar4);\n    }\n    return;\n}\n",
        "token_count": 449
    },
    "00b9a000": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00b9a000(int32_t **arg_8h, int32_t **arg_ch, int32_t **arg_10h, int32_t *arg_14h)\n\n{\n    int16_t iVar1;\n    uint16_t **ppuVar2;\n    int32_t *piVar3;\n    uint64_t uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t **ppiVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uchar *puVar10;\n    uint64_t *puVar11;\n    uint *puVar12;\n    int32_t *piVar13;\n    int32_t *piVar14;\n    uint16_t *puVar15;\n    int32_t **ppiVar16;\n    int32_t **unaff_ESI;\n    int32_t **ppiVar17;\n    int32_t **ppiVar18;\n    int32_t **unaff_EDI;\n    uint uVar19;\n    bool bVar20;\n    ulong uVar21;\n    char16_t *arg_10h_00;\n    int32_t **in_stack_fffffec8;\n    int32_t **in_stack_fffffecc;\n    int32_t **ppiVar22;\n    int32_t **ppiVar23;\n    int32_t **ppiVar24;\n    int32_t **ppiVar25;\n    int32_t **arg_ch_00;\n    int32_t **extraout_var;\n    int32_t **arg_8h_00;\n    int32_t **ppiVar26;\n    uint uVar27;\n    int32_t **in_stack_fffffeec;\n    int32_t **in_stack_fffffef0;\n    int32_t **arg_14h_00;\n    uint uStack260;\n    int32_t **ppiStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    ulong uStack236;\n    int32_t **ppiStack228;\n    int32_t **ppiStack224;\n    int32_t **ppiStack220;\n    int32_t **ppiStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    int32_t **ppiStack200;\n    uint32_t uStack196;\n    int32_t **ppiStack192;\n    uint uStack188;\n    int32_t **ppiStack184;\n    int32_t **ppiStack180;\n    uchar auStack176 [4];\n    int32_t **ppiStack172;\n    uint uStack160;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    int32_t *piStack132;\n    int32_t *piStack128;\n    int32_t *piStack124;\n    int32_t *apiStack120 [2];\n    int32_t *apiStack112 [2];\n    uint uStack104;\n    uint uStack100;\n    int32_t *apiStack96 [2];\n    uint uStack88;\n    uint uStack84;\n    uchar auStack80 [16];\n    int32_t *apiStack64 [4];\n    int32_t *piStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    \n    if ((*0xc57480 & 1) == 0) {\n        *0xc57480 = *0xc57480 | 1;\n        *0xc57488 = 0;\n        *0xc57490 = NULL;\n        *0xc57494 = 1;\n        fcn.00bb2f80(0xbcb83c);\n    }\n    ppiVar23 = 0x8;\n    uStack208 = CONCAT22(uStack208._2_2_, 1);\n    uStack260 = NULL;\n    ppiVar25 = NULL;\n    ppiStack256 = NULL;\n    uStack252 = CONCAT22(uStack252._2_2_, 1);\n    ppiVar22 = 0xb9a04d;\n    ppiVar7 = arg_10h;\n    uStack212 = fcn.00bb0ff6(8);\n    if (uStack212 == NULL) {\n        uStack212 = NULL;\n    }\n    else {\n        *uStack212 = 0x14;\n    }\n    uStack212[1] = NULL;\n    ppiStack216 = 0x1;\n    ppiVar26 = 0x17;\n    uStack204 = *(arg_8h[1][*arg_ch] + 10);\n    ppiVar16 = arg_10h;\n    arg_8h_00 = extraout_var;\n    arg_14h_00 = uStack212;\ncode_r0x00b9a10d:\n    do {\n        ppiVar18 = ppiVar7;\n        piVar13 = *arg_ch;\n        ppiVar7 = in_stack_fffffeec;\n        if (piVar13 == arg_14h) {\ncode_r0x00b9a166:\n            ppiVar17 = 0x14;\n            ppiVar26 = ppiVar17;\n            goto code_r0x00b9a170;\n        }\n        piVar14 = arg_8h[1];\n        uStack236 = uStack236 & 0xffffffff | ZEXT48(piVar14) << 0x20;\n        iVar1 = *(piVar14[piVar13] + 2);\n        if (iVar1 == 0x7f) goto code_r0x00b9a166;\n        uVar6 = iVar1;\n        if (uVar6 == 0x33) {\n            ppiVar26 = 0x16;\n            ppiVar22 = uStack260;\n            ppiVar24 = unaff_EDI;\n            if (uStack260 != NULL) {\n                if (uStack252._1_1_ == '\\0') {\n                    ppiVar23 = 0x18;\n                    ppiStack256 = fcn.00bb0ff6(0x18);\n                    if (ppiStack256 == NULL) {\n                        ppiStack256 = NULL;\n                    }\n                    else {\n                        ppiVar23 = 0xc57488;\n                        ppiStack256[2] = NULL;\n                        fcn.00b99ac0(0xc57488);\n                    }\n                    ppiStack256[4] = ppiVar25;\n                    ppiVar24 = unaff_EDI;\n                    ppiVar25 = ppiStack256;\n                    goto code_r0x00b9a23a;\n                }\n                if (ppiVar25 == 0xc57488) goto code_r0x00b9a23a;\n                if ((ppiVar25[3] == 0x4) && (*0xc57494 == 4)) {\n                    ppiVar23 = *0xc57490;\n                    fcn.00b981a7(*0xc57490);\n                    ppiVar24 = unaff_EDI;\n                    goto code_r0x00b9a23a;\n                }\n                ppiVar7 = ppiVar25;\n                if (ppiVar25[2] != NULL) {\n                    fcn.00b97b3d(ppiVar25[2]);\n                    ppiVar25 = unaff_ESI;\n                    ppiVar25[2] = NULL;\n                }\n                if (ppiVar25[3] < 5) goto code_r0x00b9af80;\n    // switch table (11 cases) at 0xbd0fe8\n                switch(ppiVar25[3]) {\n                case 0x5:\n                    if (*ppiVar7 != NULL) {\n                        fcn.00b98e34();\n                    }\n                    break;\n                case 0x8:\n                    if (*ppiVar7 != NULL) {\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*ppiVar7);\n                        fcn.00bb106c(*arg_8h_00);\n                    }\n                    break;\n                case 0xa:\n                    piVar13 = *ppiVar7;\n                    goto joined_r0x00bd0b09;\n                case 0xb:\n                    fcn.00bb106c((*ppiVar7)[1]);\n                    fcn.00bb106c(*ppiVar7);\n                    break;\n                case 0xc:\n                    if (*ppiVar7 != NULL) {\n                        fcn.00be73f0();\n                    }\n                    break;\n                case 0xd:\n                case 0xe:\n                    piVar13 = *ppiVar7;\njoined_r0x00bd0b09:\n                    if (piVar13 != NULL) {\n                        fcn.00b95a64();\n                        fcn.00bb106c(piVar13);\n                    }\n                    break;\n                case 0xf:\n                    if (*ppiVar7 != NULL) {\n                        fcn.00be7405();\n                    }\n                }\ncode_r0x00b9af80:\n                ppiVar24 = 0xc57488;\n                arg_8h_00[3] = 0x1;\n                *arg_8h_00 = NULL;\n                ppiVar23 = 0xb9af9d;\n                fcn.00b99ac0(0xc57488);\n                ppiVar25 = ppiVar7;\n                goto code_r0x00b9a23a;\n            }\n            if (ppiVar16 == 0xc57488) goto code_r0x00b9a23a;\n            if ((ppiVar16[3] == 0x4) && (*0xc57494 == 4)) {\n                ppiVar23 = *0xc57490;\n                fcn.00b981a7(*0xc57490);\n                ppiVar24 = unaff_EDI;\n                goto code_r0x00b9a23a;\n            }\n            ppiVar22 = ppiVar16[2];\n            if (ppiVar22 != NULL) {\n                *ppiVar22[3] = *ppiVar22[3] + -1;\n                if (*ppiVar22[3] == 0) {\n                    fcn.00bb106c(*ppiVar22);\n                    fcn.00bb106c(ppiVar22[3]);\n                }\n                fcn.00bb106c();\n                ppiVar16[2] = NULL;\n                ppiVar23 = ppiVar22;\n            }\n            if (ppiVar16[3] < 5) goto code_r0x00b9a219;\n    // switch table (11 cases) at 0xbd0fbc\n            switch(ppiVar16[3]) {\n            case 0x5:\n                ppiVar22 = *ppiVar16;\n                if (ppiVar22 != NULL) {\n                    fcn.00b98e34();\n                    ppiVar23 = ppiVar22;\n                }\n                break;\n            case 0x8:\n                if (*ppiVar16 != NULL) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*ppiVar16);\n                    ppiVar22 = *ppiVar16;\n                    goto code_r0x00bd0a24;\n                }\n                break;\n            case 0xa:\n                ppiVar22 = *ppiVar16;\n                goto joined_r0x00bd0a16;\n            case 0xb:\n                fcn.00bb106c((*ppiVar16)[1]);\n                ppiVar22 = *ppiVar16;\n                goto code_r0x00bd0a24;\n            case 0xc:\n                ppiVar22 = *ppiVar16;\n                if (ppiVar22 != NULL) {\n                    fcn.00be73f0();\n                    ppiVar23 = ppiVar22;\n                }\n                break;\n            case 0xd:\n            case 0xe:\n                ppiVar22 = *ppiVar16;\njoined_r0x00bd0a16:\n                if (ppiVar22 != NULL) {\n                    fcn.00b95a64();\ncode_r0x00bd0a24:\n                    fcn.00bb106c();\n                    ppiVar23 = ppiVar22;\n                }\n                break;\n            case 0xf:\n                ppiVar22 = *ppiVar16;\n                if (ppiVar22 != NULL) {\n                    fcn.00be7405();\n                    ppiVar23 = ppiVar22;\n                }\n            }\ncode_r0x00b9a219:\n            ppiVar24 = 0xc57488;\n            ppiVar16[3] = 0x1;\n            *ppiVar16 = NULL;\n            fcn.00b99ac0(0xc57488);\n            ppiVar22 = ppiVar18;\ncode_r0x00b9a23a:\n            uStack252 = ppiVar22 + 1;\n            uStack212 = ppiVar16;\n            if ((uStack252 != 0x1) && (uStack212 = ppiVar25,  uStack244._1_1_ != '\\0')) {\n                uStack212 = ppiVar25[4];\n            }\n            ppiVar7 = *arg_8h[1][*arg_ch];\n            if (*0xc57280 != 0) {\n                ppiVar22 = *0xc57284;\n                if (*0xc57289 != '\\0') {\n                    ppiVar22 = (*0xc57284)[2];\n                }\n                if (*ppiVar22 != NULL) {\n                    arg_14h_00 = arg_14h_00 & 0xffffff;\n                    if ((*0xc57440 & 1) == 0) {\n                        *0xc57440 = *0xc57440 | 1;\n                        fcn.00b977c7();\n                        ppiVar24 = 0xbd0b52;\n                        fcn.00bb2f80(0xbcb80a);\n                    }\n                    *0xc57460 = NULL;\n                    *0xc5745c = NULL;\n                    ppiStack228 = 0xc57444;\n                    ppiStack192 = 0xc57444;\ncode_r0x00b9a2c1:\n                    uStack240 = *ppiVar22;\n                    uStack236._0_4_ = ppiVar7[1];\n                    uStack236 = uStack236 & 0xffffffff00000000 | ZEXT48(uStack236);\n                    ppiVar18 = uStack240[1];\n                    if (uStack236 == NULL) {\n                        if (ppiVar18 == NULL) goto code_r0x00bd0b66;\n                        goto code_r0x00b9a3c6;\n                    }\n                    if (ppiVar18 != NULL) {\ncode_r0x00b9a2e1:\n                        if (uStack236 < ppiVar18) {\n                            piVar13 = *uStack240;\n                            piVar14 = *ppiVar7;\n                            uStack236 = CONCAT44(piVar14, uStack236);\n                            for (; ppiVar18 != NULL; ppiVar18 = ppiVar18 + -1) {\n                                uStack236._4_4_ = uStack236 >> 0x20;\n                                if (*piVar14 != *piVar13) {\n                                    bVar20 = *uStack236._4_4_ < *piVar13;\n                                    goto code_r0x00b9a336;\n                                }\n                                piVar14 = uStack236._4_4_ + 2;\n                                piVar13 = piVar13 + 2;\n                                uStack236 = uStack236 & 0xffffffff | ZEXT48(piVar14) << 0x20;\n                            }\n                        }\n                        else {\n                            piVar13 = *uStack240;\n                            uStack236 = CONCAT44(uStack236, uStack236);\n                            piVar14 = *ppiVar7;\n                            while (uStack236 != NULL) {\n                                bVar20 = *piVar14 < *piVar13;\n                                if (*piVar14 != *piVar13) goto code_r0x00b9a336;\n                                piVar14 = piVar14 + 2;\n                                piVar13 = piVar13 + 2;\n                                uStack236._4_4_ = uStack236 >> 0x20;\n                                uStack236._0_4_ = uStack236._4_4_ + -1;\n                                uStack236 = uStack236 & 0xffffffff | ZEXT48(uStack236) << 0x20;\n                            }\n                        }\n                        iVar9 = 0;\n                        goto code_r0x00b9a33c;\n                    }\ncode_r0x00bd0b66:\n                    if (uStack236 == NULL) goto code_r0x00b9a2e1;\n                    goto code_r0x00b9a34e;\n                }\n            }\n            goto code_r0x00b9a5b0;\n        }\n        if (uVar6 == 0x4f) goto code_r0x00b9a166;\n        if (uVar6 != 5) {\n            if (0x58 < uVar6) goto code_r0x00b9a166;\n    // switch table (89 cases) at 0xb9b740\n            switch(*(*(uVar6 + 0xb9b7ac) * 4 + 0xb9b740)) {\n            case 0xb9a152:\n                iVar9 = *piVar14[piVar13];\n                if (((3 < iVar9) && (iVar9 < 0x27)) || (0x29 < iVar9 - 1U)) goto code_r0x00b9a166;\n    // switch table (42 cases) at 0xb9b824\n                switch(*(*(iVar9 + 0xb9b843) * 4 + 0xb9b824)) {\n                case 0xb9a166:\n                    goto code_r0x00b9a166;\n                case 0xb9b1be:\n                    ppiVar17 = 0x7;\n                    *arg_ch = piVar13 + 1;\n                    ppiVar26 = ppiVar17;\n                    break;\n                case 0xb9b420:\n                    ppiVar23 = 0xc57488;\n                    ppiVar26 = 0x16;\n                    fcn.00bafb84(0xc57488);\n                    puVar10 = fcn.00bafb6d();\n                    ppiVar22 = 0xb9b448;\n                    arg_10h = arg_14h_00;\n                    fcn.00b99a20();\n                    *(puVar10 + 0xc) = 9;\n                    *puVar10 = 0;\n                    *arg_ch = *arg_ch + 1;\n                    ppiVar16 = arg_10h;\n                    unaff_ESI = uStack260;\n                    arg_14h_00 = arg_10h;\n                    ppiVar7 = ppiVar18;\n                    goto code_r0x00b9a10d;\n                case 0xb9b498:\n                    ppiVar23 = 0xc57488;\n                    ppiVar26 = 0x16;\n                    fcn.00bafb84(0xc57488);\n                    uStack136 = CONCAT31(uStack136._1_3_, 1);\n                    ppiVar22 = uStack136;\n                    fcn.00bafb6d();\n                    in_stack_fffffecc = 0xb9b4cd;\n                    arg_10h = in_stack_fffffef0;\n                    unaff_EDI = ppiVar18;\n                    fcn.00b99863(ppiVar22);\n                    *arg_ch = *arg_ch + 1;\n                    ppiVar16 = arg_10h;\n                    in_stack_fffffef0 = arg_10h;\n                    ppiVar7 = unaff_EDI;\n                    goto code_r0x00b9a10d;\n                case 0xb9b4f8:\n                    ppiVar17 = 0x8;\n                    *arg_ch = piVar13 + 1;\n                    ppiVar26 = ppiVar17;\n                    break;\n                case 0xbd05c3:\n                    ppiVar17 = 0xa;\n                    *arg_ch = piVar13 + 1;\n                    ppiVar26 = ppiVar17;\n                    break;\n                case 0xbd05d5:\n                    ppiVar26 = 0x16;\n                    arg_10h_00 = L\"Default\";\n                    fcn.00b97f41(L\"Default\");\n                    uVar27 = 0xffffffff;\n                    uVar19 = 0x29;\n                    goto code_r0x00bd060d;\n                case 0xbd05f2:\n                    ppiVar26 = 0x16;\n                    arg_10h_00 = 0xc1f910;\n                    fcn.00b97f41(0xc1f910);\n                    uVar27 = 0;\n                    uVar19 = 0x2a;\ncode_r0x00bd060d:\n                    fcn.00bf6bbd(uVar19, uVar27, arg_10h_00, in_stack_fffffec8, in_stack_fffffecc, ppiVar22);\n                    fcn.00bafb84(0xc57488);\n                    puVar10 = &stack0xffffffb0;\n                    fcn.00bafb6d();\n                    fcn.00bf77cf(puVar10);\ncode_r0x00bd0649:\n                    *arg_ch = *arg_ch + 1;\n                    ppiVar25 = 0xbd0650;\n                    fcn.00b95a64();\n                    goto code_r0x00b9a4e8;\n                }\n                break;\n            case 0xb9a166:\n                goto code_r0x00b9a166;\n            case 0xb9a9d4:\n                ppiVar17 = 0xd;\n                *arg_ch = piVar13 + 1;\n                ppiVar26 = ppiVar17;\n                break;\n            case 0xb9aa96:\n                if ((piVar13 == NULL) ||\n                   ((*(piVar14[piVar13 + -1] + 8) != 0x48 && (*(piVar14[piVar13 + -1] + 8) != 0x4f)))) {\n                    ppiVar17 = 0x12;\n                    *arg_ch = piVar13 + 1;\n                    ppiVar26 = ppiVar17;\n                    break;\n                }\n                if (uStack260 == NULL) goto code_r0x00bd0d2e;\n                ppiVar23 = &stack0xffffff90;\n                apiStack112[0] = NULL;\n                uStack104 = 0;\n                uStack100 = 1;\n                ppiVar22 = fcn.00bafb6d();\n                in_stack_fffffec8 = arg_8h;\n                in_stack_fffffecc = arg_ch;\n                iVar9 = fcn.00b9ca20(arg_8h, arg_ch, ppiVar22, ppiVar23);\n                if (iVar9 < 0) {\n                    fcn.00b99a20();\n                    ppiVar18 = unaff_EDI;\n                    ppiVar24 = in_stack_fffffeec;\n                    goto code_r0x00bd049e;\n                }\n                puVar10 = &stack0xffffff80;\n                fcn.00bafb6d();\n                fcn.00b99e9c(puVar10);\n                fcn.00b99a20();\n                ppiVar7 = ppiVar18;\n                goto code_r0x00b9a10d;\n            case 0xb9aac8:\n                ppiVar17 = 0x13;\n                *arg_ch = piVar13 + 1;\n                ppiVar26 = ppiVar17;\n                break;\n            case 0xb9ab11:\n                ppiVar17 = 0x1;\n                *arg_ch = piVar13 + 1;\n                ppiVar26 = ppiVar17;\n                break;\n            case 0xb9ab23:\n                ppiVar26 = 0x16;\n                if (uStack260 == NULL) {\n                    ppiVar22 = 0xb9b38d;\n                    fcn.00b99e9c(0xc57488);\n                    ppiVar7 = ppiVar18;\n                }\n                else if (uStack252._1_1_ == '\\0') {\n                    ppiVar22 = 0xb9ab48;\n                    ppiStack256 = fcn.00bb0ff6(0x18);\n                    if (ppiStack256 == NULL) {\n                        ppiStack256 = NULL;\n                    }\n                    else {\n                        ppiStack256[2] = NULL;\n                        ppiVar22 = 0xb9ab68;\n                        fcn.00b99ac0(0xc57488);\n                    }\n                    ppiStack256[4] = ppiVar25;\n                    ppiVar25 = ppiStack256;\n                    ppiVar7 = ppiVar18;\n                }\n                else {\n                    ppiVar22 = 0xb9b416;\n                    fcn.00b99e9c(0xc57488);\n                    ppiStack256 = ppiStack256 & 0xffff00ff;\n                    ppiVar7 = ppiVar18;\n                }\n                ppiStack256 = ppiStack256 + 1;\n                piVar13 = arg_8h[1];\n                piVar14 = *arg_ch;\n                if (*(piVar13[piVar14 + 1] + 8) == 0x47) {\n                    unaff_EDI = ppiVar16;\n                    if ((ppiStack256 != 0x1) && (unaff_EDI = arg_8h_00,  uStack248._1_1_ != '\\0')) {\n                        unaff_EDI = arg_8h_00[4];\n                    }\n                    ppiStack192 = 0xc1fb84;\n                    uStack188 = 0;\n                    ppiStack184 = NULL;\n                    ppiStack180 = NULL;\n                    ppiVar23 = *piVar13[piVar14];\n                    uStack236 = uStack236 & 0xffffffff | *(piVar13[piVar14] + 10) << 0x20;\n                    uStack244 = ppiVar23;\n                    if ((*0xc57464 & 1) == 0) {\n                        *0xc57464 = *0xc57464 | 1;\n                        puVar12 = fcn.00b97f41(L\"CALL\");\n                        *0xc57468 = (**(**0xc57294 + 4))(*puVar12);\n                        fcn.00b95a64();\n                    }\n                    if (ppiVar23 == *0xc57468) {\n                        ppiVar22 = arg_8h;\n                        ppiVar23 = arg_ch;\n                        arg_14h_00 = unaff_EDI;\n                        iVar9 = fcn.00c0bf80(arg_8h, arg_ch, unaff_EDI);\n                        in_stack_fffffecc = 0xbd0079;\n                        fcn.00be66f4();\n                        ppiVar18 = unaff_EDI;\n                        ppiVar24 = in_stack_fffffeec;\n                        if (-1 < iVar9) goto code_r0x00b9af06;\n                        goto code_r0x00bd049e;\n                    }\n                    iVar9 = fcn.00ba9090(ppiVar23);\n                    in_stack_fffffeec = in_stack_fffffeec & 0xffffff | *(iVar9 + 0x20) << 0x18;\n                    *arg_ch = *arg_ch + 1;\n                    piVar13 = *arg_ch;\n                    if (*(arg_8h[1][piVar13] + 8) != 0x47) {\n                        piVar14 = arg_8h[1];\ncode_r0x00bd0c72:\n                        uStack236._0_4_ = *(piVar14[piVar13 + -1] + 10);\n                        uVar19 = 0x6f;\n                        unaff_EDI = ppiVar23;\ncode_r0x00bd0c7d:\n                        fcn.00bfa0b5(uVar19, uStack236);\n                        goto code_r0x00bd0c86;\n                    }\n                    piVar14 = arg_8h[1];\n                    ppiStack180 = piVar13 + 1;\n                    uStack236 = uStack236 & 0xffffffff | ZEXT48(ppiStack180) << 0x20;\n                    uStack236._0_4_ = NULL;\n                    ppiVar22 = ppiStack180;\n                    while( true ) {\n                        while( true ) {\n                            while( true ) {\n                                *arg_ch = ppiVar22;\n                                iVar1 = *(piVar14[ppiVar22] + 8);\n                                if (iVar1 != 0x47) break;\n                                uStack236._0_4_ = uStack236 + 1;\n                                ppiVar22 = ppiVar22 + 1;\n                            }\n                            if (iVar1 == 0x48) break;\n                            if (iVar1 == 0x7f) {\n                                piVar13 = *arg_ch;\n                                piVar14 = arg_8h[1];\n                                goto code_r0x00bd0c72;\n                            }\n                            ppiVar22 = ppiVar22 + 1;\n                        }\n                        if (uStack236 == NULL) break;\n                        uStack236._0_4_ = uStack236 + -1;\n                        ppiVar22 = ppiVar22 + 1;\n                    }\n                    ppiStack220 = *arg_ch;\n                    *arg_ch = ppiStack220 + 1;\n                    ppiVar23 = in_stack_fffffef0;\n                    arg_14h_00 = unaff_EDI;\n                    uStack244 = uStack236;\n                    if (ppiStack180 < ppiStack220) {\n                        do {\n                            uStack160 = 0;\n                            uStack152 = 0;\n                            uStack148 = 1;\n                            ppiVar23 = ppiStack184;\n                            if (ppiStack180 == auStack176) {\n                                auStack176 = auStack176 * 2;\n                                if (auStack176 < 0x8) {\n                                    auStack176 = 0x8;\n                                }\n                                ppiVar23 = fcn.00bb0ff6(-(ZEXT48(auStack176) * 4 >> 0x20 != 0) | ZEXT48(auStack176) * 4)\n                                ;\n                                if ((ppiStack184 != NULL) && (ppiStack180 != NULL)) {\n                                    fcn.00bb1080(ppiVar23, ppiStack184, ppiStack180 << 2);\n                                    fcn.00bb106c(ppiStack184);\n                                }\n                            }\n                            ppiStack184 = ppiVar23;\n                            piVar13 = fcn.00bb0ff6(0x10);\n                            if (piVar13 == NULL) {\n                                piVar13 = NULL;\n                                arg_14h_00 = unaff_EDI;\n                            }\n                            else {\n                                piVar13[2] = 0;\n                                fcn.00b99ac0(&stack0xffffff60);\n                                arg_14h_00 = unaff_EDI;\n                            }\n                            ppiVar23 = uStack212;\n                            ppiStack184[ppiStack180] = piVar13;\n                            ppiVar25 = arg_8h;\n                            unaff_ESI = uStack212;\n                            if (arg_14h_00 >> 0x18 == '\\0') {\n                                unaff_EDI = ppiStack184[ppiStack180];\n                                ppiStack180 = ppiStack180 + 1;\n                                iVar9 = fcn.00b9a000(arg_8h, &stack0xffffff54, unaff_EDI, uStack212);\n                            }\n                            else {\n                                unaff_EDI = NULL;\n                                ppiVar22 = ppiStack184 + ppiStack180;\n                                ppiStack180 = ppiStack180 + 1;\n                                iVar9 = fcn.00b9f803(arg_8h, &stack0xffffff54, *ppiVar22, 0x100, 0, 0, uStack212);\n                            }\n                            if (iVar9 < 0) {\n                                fcn.00b99df0();\n                                goto code_r0x00bd0c86;\n                            }\n                            uStack236 = uStack236 & 0xffffffff00000000 | uStack236 + 1;\n                            if (ppiStack172 == ppiVar23) {\n                                uStack148 = 1;\n                                uStack160 = 0;\n                                break;\n                            }\n                            if ((*(arg_8h[1][ppiStack172] + 8) != 0x40) || (ppiStack172 + 1 == ppiVar23)) {\n                                unaff_EDI = 0x6f;\n                                fcn.00bfa0b5(0x6f, *(arg_8h[1][ppiStack172] + 10));\n                                fcn.00b99a20();\n                                goto code_r0x00bd0c86;\n                            }\n                            unaff_ESI = 0xb9b372;\n                            ppiStack172 = ppiStack172 + 1;\n                            fcn.00b99a20();\n                            unaff_EDI = arg_14h_00;\n                        } while (ppiStack172 < ppiVar23);\n                        ppiVar23 = in_stack_fffffef0;\n                    }\n                    unaff_EDI = 0xb9ada2;\n                    iVar9 = fcn.00ba9090(0xb9ada2);\n                    if ((uStack236 < *(iVar9 + 0x18)) ||\n                       (unaff_EDI = uStack244,  iVar9 = fcn.00ba9090(uStack244),  *(iVar9 + 0x1c) < uStack236)) {\n                        uVar19 = 0x70;\n                        goto code_r0x00bd0c7d;\n                    }\n                    ppiVar18 = ppiVar23[2];\n                    ppiVar22 = in_stack_fffffeec;\n                    in_stack_fffffef0 = ppiVar23;\n                    if (ppiVar18 != NULL) {\n                        fcn.00b97b3d();\n                        ppiVar23[2] = NULL;\n                        unaff_EDI = ppiVar18;\n                        ppiVar22 = in_stack_fffffeec;\n                    }\n                    if (ppiVar23[3] < 5) goto code_r0x00b9ade2;\n    // switch table (11 cases) at 0xbd0f0c\n                    switch(ppiVar23[3]) {\n                    case 0x5:\n                        if (*ppiVar23 != NULL) {\n                            fcn.00b98e34(*ppiVar23);\n                        }\n                        break;\n                    case 0x8:\n                        if (*ppiVar23 != NULL) {\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(*ppiVar23);\n                            fcn.00bb106c(*ppiVar23);\n                        }\n                        break;\n                    case 0xa:\n                        piVar13 = *ppiVar23;\n                        goto joined_r0x00bd0160;\n                    case 0xb:\n                        fcn.00bb106c((*ppiVar23)[1]);\n                        fcn.00bb106c(*ppiVar23);\n                        break;\n                    case 0xc:\n                        if (*ppiVar23 != NULL) {\n                            fcn.00be73f0(*ppiVar23);\n                        }\n                        break;\n                    case 0xd:\n                    case 0xe:\n                        piVar13 = *ppiVar23;\njoined_r0x00bd0160:\n                        ppiVar23 = in_stack_fffffef0;\n                        if (piVar13 != NULL) {\n                            fcn.00b95a64();\n                            ppiVar23 = in_stack_fffffef0;\n                            fcn.00bb106c(piVar13);\n                            in_stack_fffffef0 = ppiVar23;\n                        }\n                        break;\n                    case 0xf:\n                        if (*ppiVar23 != NULL) {\n                            fcn.00be7405(*ppiVar23);\n                        }\n                    }\ncode_r0x00b9ade2:\n                    ppiVar23[3] = 0x1;\n                    *ppiVar23 = 0x1;\n                    iVar9 = (*arg_8h_00)[1];\n                    iVar8 = *(iVar9 + 8 + arg_8h_00);\n                    if (*(arg_8h_00 + iVar9 + 0xd) != '\\0') {\n                        iVar8 = *(iVar8 + 0x38);\n                    }\n                    *(iVar8 + 0x14) = 0;\n                    iVar8 = *(arg_8h_00 + iVar9 + 8);\n                    if (*(arg_8h_00 + iVar9 + 0xd) != '\\0') {\n                        iVar8 = *(iVar8 + 0x38);\n                    }\n                    *(iVar8 + 0x18) = 0;\n                    ppiStack220 = (*arg_8h_00)[1] + arg_8h_00;\n                    if (*(ppiStack220 + 0xd) == '\\0') {\n                        piVar13 = ppiStack220[2];\n                    }\n                    else {\n                        piVar13 = ppiStack220[2][0xe];\n                    }\n                    if (piVar13[10] != 0) {\n                        fcn.00b97b3d(piVar13[10]);\n                        piVar13[10] = 0;\n                    }\n                    if (piVar13[0xb] < 5) goto code_r0x00b9ae4f;\n    // switch table (11 cases) at 0xbd0f38\n                    switch(piVar13[0xb]) {\n                    case 5:\n                        if (piVar13[8] != 0) {\n                            fcn.00b98e34(piVar13[8]);\n                        }\n                        break;\n                    case 8:\n                        if (piVar13[8] != 0) {\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(piVar13[8]);\n                            uStack236._4_4_ = piVar13[8];\n                            goto code_r0x00bd0240;\n                        }\n                        break;\n                    case 10:\n                        uVar6 = piVar13[8];\n                        uStack236 = uStack236 & 0xffffffff | uVar6 << 0x20;\n                        goto joined_r0x00bd022f;\n                    case 0xb:\n                        fcn.00bb106c(*(piVar13[8] + 4));\n                        uStack236._4_4_ = piVar13[8];\n                        goto code_r0x00bd0240;\n                    case 0xc:\n                        if (piVar13[8] != 0) {\n                            fcn.00be73f0(piVar13[8]);\n                        }\n                        break;\n                    case 0xd:\n                    case 0xe:\n                        uVar6 = piVar13[8];\n                        uStack236 = uStack236 & 0xffffffff | uVar6 << 0x20;\njoined_r0x00bd022f:\n                        if (uVar6 != 0) {\n                            fcn.00b95a64();\ncode_r0x00bd0240:\n                            fcn.00bb106c(uStack236._4_4_);\n                        }\n                        break;\n                    case 0xf:\n                        if (piVar13[8] != 0) {\n                            fcn.00be7405(piVar13[8]);\n                        }\n                    }\ncode_r0x00b9ae4f:\n                    piVar13[0xb] = 1;\n                    piVar13[8] = 0;\n                    piVar13 = ppiStack220[2];\n                    if (*(ppiStack220 + 0xd) != '\\0') {\n                        piVar13 = piVar13[0xe];\n                    }\n                    *(piVar13 + 0xc) = 0;\n                    ppiVar23 = uStack248;\n                    iVar9 = fcn.00ba9090(uStack248);\n                    in_stack_fffffeec = ppiVar22;\n                    iVar9 = (**(iVar9 + 0xc))(&stack0xffffff38);\n                    if (iVar9 < 0) {\ncode_r0x00bd0c86:\n                        fcn.00be66f4();\n                        ppiVar18 = unaff_EDI;\n                        ppiVar24 = in_stack_fffffeec;\n                        goto code_r0x00bd049e;\n                    }\n                    uVar6 = 0;\n                    uStack204 = 0xc1fb84;\n                    if (uStack196 != 0) {\n                        do {\n                            uStack240 = ppiStack200[uVar6];\n                            if (uStack240 != NULL) {\n                                fcn.00b99df0();\n                                fcn.00bb106c(uStack240);\n                            }\n                            ppiStack200[uVar6] = NULL;\n                            uVar6 = uVar6 + 1;\n                        } while (uVar6 < uStack196);\n                    }\n                    uStack196 = 0;\n                    in_stack_fffffec8 = 0xb9af03;\n                    in_stack_fffffecc = ppiStack200;\n                    fcn.00bb106c();\ncode_r0x00b9af06:\n                    ppiVar18 = unaff_EDI;\n                    ppiVar24 = in_stack_fffffeec;\n                    if (unaff_ESI[0x3e] == 0x1) goto code_r0x00bd049e;\n                }\n                else {\n                    unaff_EDI = *piVar13[piVar14];\n                    fcn.00bafb6d();\n                    ppiVar23 = 0xbd001a;\n                    fcn.00bf7be0(unaff_EDI);\n                    *arg_ch = *arg_ch + 1;\n                }\n                goto code_r0x00b9a10d;\n            case 0xb9af1f:\n                if ((ppiVar26 == 0x16) || (ppiVar26 == 0x13)) {\n                    ppiVar17 = 0xb;\n                    *arg_ch = piVar13 + 1;\n                    ppiVar26 = 0xb;\n                }\n                else {\n                    ppiVar17 = 0x11;\n                    *arg_ch = piVar13 + 1;\n                    ppiVar26 = 0x11;\n                }\n                break;\n            case 0xb9af45:\n                ppiVar17 = NULL;\n                *arg_ch = piVar13 + 1;\n                ppiVar26 = ppiVar17;\n                break;\n            case 0xb9afae:\n                ppiVar26 = 0x16;\n                if (uStack260 == NULL) {\n                    ppiVar22 = ppiVar23;\n                    ppiVar24 = ppiVar25;\n                    if (ppiVar16 != 0xc57488) {\n                        if ((ppiVar16[3] == 0x4) && (*0xc57494 == 4)) {\n                            ppiVar22 = *0xc57490;\n                            fcn.00b981a7(*0xc57490);\n                            ppiVar24 = ppiVar25;\n                        }\n                        else {\n                            fcn.00b99a20();\n                            ppiVar22 = 0xc57488;\n                            fcn.00b99ac0(0xc57488);\n                            ppiVar24 = ppiVar25;\n                        }\n                    }\n                }\n                else if (uStack252._1_1_ == '\\0') {\n                    ppiVar22 = 0x18;\n                    ppiStack256 = fcn.00bb0ff6(0x18);\n                    if (ppiStack256 == NULL) {\n                        ppiStack256 = NULL;\n                    }\n                    else {\n                        ppiVar22 = 0xc57488;\n                        ppiStack256[2] = NULL;\n                        fcn.00b99ac0(0xc57488);\n                    }\n                    ppiVar24 = ppiStack256;\n                    if (ppiVar25 == NULL) {\n                        ppiStack256[4] = NULL;\n                    }\n                    else {\n                        ppiStack256[4] = ppiVar25;\n                    }\n                }\n                else {\n                    if (ppiVar25 != 0xc57488) {\n                        if ((*0xc57494 == 4) && (ppiVar25[3] == 0x4)) {\n                            ppiVar23 = *0xc57490;\n                            fcn.00b981a7(*0xc57490);\n                        }\n                        else {\n                            fcn.00b99a20();\n                            ppiVar23 = 0xc57488;\n                            fcn.00b99ac0(0xc57488);\n                        }\n                    }\n                    uStack252 = uStack252 & 0xffff00ff;\n                    ppiVar22 = ppiVar23;\n                    ppiVar24 = ppiVar25;\n                }\n                uStack260 = uStack260 + 1;\n                ppiVar7 = ppiVar16;\n                if ((uStack260 != 0x1) && (ppiVar7 = ppiVar24,  uStack252._1_1_ != '\\0')) {\n                    ppiVar7 = ppiVar24[4];\n                }\n                ppiVar23 = *arg_8h[1][*arg_ch];\n                ppiVar25 = ppiVar7[2];\n                ppiStack220 = ppiVar23;\n                if (ppiVar7[3] == 0x4) {\n                    ppiVar22 = 0xbcfeb4;\n                    fcn.00b981a7(ppiVar23);\n                    goto code_r0x00b9b070;\n                }\n                if (ppiVar25 != NULL) {\n                    fcn.00b97b3d();\n                    ppiVar7[2] = NULL;\n                    ppiVar22 = ppiVar25;\n                }\n                ppiVar23 = ppiVar22;\n                if (ppiVar7[3] < 5) goto code_r0x00b9b030;\n    // switch table (11 cases) at 0xbd0ee0\n                switch(ppiVar7[3]) {\n                case 0x5:\n                    ppiVar22 = *ppiVar7;\n                    if (ppiVar22 != NULL) {\n                        fcn.00b98e34();\n                        ppiVar23 = ppiVar22;\n                    }\n                    break;\n                case 0x8:\n                    ppiVar22 = *ppiVar7;\n                    if (ppiVar22 != NULL) {\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n                        uStack236._4_4_ = *ppiVar7;\n                        goto code_r0x00bcff6f;\n                    }\n                    break;\n                case 0xa:\n                    piVar13 = *ppiVar7;\n                    uStack236 = uStack236 & 0xffffffff | ZEXT48(piVar13) << 0x20;\n                    goto joined_r0x00bcff5e;\n                case 0xb:\n                    ppiVar22 = (*ppiVar7)[1];\n                    fcn.00bb106c();\n                    uStack236._4_4_ = *ppiVar7;\n                    goto code_r0x00bcff6f;\n                case 0xc:\n                    ppiVar22 = *ppiVar7;\n                    if (ppiVar22 != NULL) {\n                        fcn.00be73f0();\n                        ppiVar23 = ppiVar22;\n                    }\n                    break;\n                case 0xd:\n                case 0xe:\n                    piVar13 = *ppiVar7;\n                    uStack236 = uStack236 & 0xffffffff | ZEXT48(piVar13) << 0x20;\njoined_r0x00bcff5e:\n                    if (piVar13 != NULL) {\n                        ppiVar22 = 0xbcff6b;\n                        fcn.00b95a64();\ncode_r0x00bcff6f:\n                        fcn.00bb106c(uStack236._4_4_);\n                        ppiVar23 = ppiVar22;\n                    }\n                    break;\n                case 0xf:\n                    ppiVar22 = *ppiVar7;\n                    if (ppiVar22 != NULL) {\n                        fcn.00be7405();\n                        ppiVar23 = ppiVar22;\n                    }\n                }\ncode_r0x00b9b030:\n                ppiVar22 = 0x10;\n                *ppiVar7 = NULL;\n                ppiVar7[3] = 0x4;\n                in_stack_fffffecc = 0xb9b044;\n                ppiVar25 = fcn.00bb0ff6(0x10);\n                if (ppiVar25 == NULL) {\n                    ppiVar25 = NULL;\n                }\n                else {\n                    *ppiVar25 = *ppiStack224;\n                    ppiVar25[1] = ppiStack224[1];\n                    ppiVar25[2] = ppiStack224[2];\n                    piVar13 = ppiStack224[3];\n                    ppiVar25[3] = piVar13;\n                    *piVar13 = *piVar13 + 1;\n                }\n                ppiVar7[2] = ppiVar25;\ncode_r0x00b9b070:\n                *arg_ch = *arg_ch + 1;\n                ppiVar25 = ppiVar24;\n                if (*(ppiVar24 + 0xfd) != '\\0') {\n                    ppiVar22 = fcn.00bafb6d();\n                    in_stack_fffffecc = 0xbcff8b;\n                    ppiVar24 = unaff_ESI;\n                    fcn.00c0c4a7(ppiVar22);\n                    unaff_ESI = ppiVar24;\n                }\n                ppiVar7 = ppiVar18;\n                if (*(ppiVar24 + 0xfe) != '\\0') {\n                    ppiVar23 = fcn.00bafb6d();\n                    ppiVar22 = 0xbcffa7;\n                    fcn.00c0c5f4(ppiVar23);\n                    ppiVar7 = ppiVar18;\n                }\n                goto code_r0x00b9a10d;\n            case 0xb9b09e:\n                if ((ppiVar26 == 0x16) || (ppiVar26 == 0x13)) {\n                    ppiVar17 = 0xc;\n                }\n                else {\n                    ppiVar17 = 0x10;\n                }\n                *arg_ch = piVar13 + 1;\n                ppiVar26 = ppiVar17;\n                break;\n            case 0xb9b112:\n                ppiVar17 = 0xe;\n                *arg_ch = piVar13 + 1;\n                ppiVar26 = ppiVar17;\n                break;\n            case 0xb9b172:\n                ppiVar17 = 0x9;\n                *arg_ch = piVar13 + 1;\n                ppiVar26 = ppiVar17;\n                break;\n            case 0xb9b30b:\n                ppiVar17 = 0x5;\n                *arg_ch = piVar13 + 1;\n                ppiVar26 = ppiVar17;\n                break;\n            case 0xb9b39b:\n                ppiVar17 = 0x2;\n                *arg_ch = piVar13 + 1;\n                ppiVar26 = ppiVar17;\n                break;\n            case 0xb9b3f6:\n                ppiVar17 = 0x4;\n                *arg_ch = piVar13 + 1;\n                ppiVar26 = ppiVar17;\n                break;\n            case 0xb9b4e6:\n                ppiVar17 = 0x3;\n                *arg_ch = piVar13 + 1;\n                ppiVar26 = ppiVar17;\n                break;\n            case 0xb9b56e:\n                ppiVar23 = 0xc57488;\n                ppiVar26 = 0x16;\n                fcn.00bafb84(0xc57488);\n                *arg_ch = *arg_ch + 1;\n                uVar21 = fcn.00bafb6d();\n                ppiVar22 = uVar21;\n                in_stack_fffffecc = *(uVar21 >> 0x20);\n                in_stack_fffffec8 = 0xb9b5ac;\n                iVar9 = fcn.00b9c707(in_stack_fffffecc, ppiVar22);\n                if (-1 < iVar9) goto code_r0x00b9a4e8;\n                fcn.00bfa0b5(0x86, *(arg_8h[1][*arg_ch + -1] + 10));\n                ppiVar24 = in_stack_fffffeec;\n                goto code_r0x00bd049e;\n            case 0xb9b5f0:\n                ppiVar23 = 0xc57488;\n                ppiVar26 = 0x16;\n                fcn.00bafb84(0xc57488);\n                uStack236 = *arg_8h[1][*arg_ch];\n                puVar11 = fcn.00bafb6d();\n                ppiVar22 = 0xb9b62c;\n                arg_10h = arg_14h_00;\n                fcn.00b99a20();\n                *puVar11 = uStack236;\n                *(puVar11 + 0xc) = 3;\n                *arg_ch = *arg_ch + 1;\n                ppiVar16 = arg_10h;\n                unaff_ESI = uStack260;\n                arg_14h_00 = arg_10h;\n                ppiVar7 = ppiVar18;\n                goto code_r0x00b9a10d;\n            case 0xbcffac:\n                ppiVar23 = 0xc57488;\n                ppiVar26 = 0x16;\n                fcn.00bafb84(0xc57488);\n                uVar19 = *arg_8h[1][*arg_ch];\n                uStack236 = uStack236 & 0xffffffff00000000 | arg_8h[1][*arg_ch][1];\n                puVar12 = fcn.00bafb6d();\n                ppiVar22 = 0xbcffeb;\n                fcn.00b99a20();\n                puVar12[3] = 2;\n                *puVar12 = uVar19;\n                puVar12[1] = uStack236;\n                *arg_ch = *arg_ch + 1;\n                goto code_r0x00b9a4e8;\n            case 0xbd0251:\n                ppiVar23 = 0xc57488;\n                ppiVar26 = 0x16;\n                fcn.00bafb84(0xc57488);\n                if (*(arg_8h[1][*arg_ch + 1] + 8) == 0x47) {\n                    ppiVar22 = &stack0xffffff53;\n                    in_stack_fffffecc = fcn.00bafb6d();\n                    in_stack_fffffec8 = arg_ch;\n                    ppiVar7 = ppiVar25;\n                    iVar9 = fcn.00b9fe40(0, arg_8h, arg_ch, in_stack_fffffecc, ppiVar22);\n                    ppiVar24 = in_stack_fffffeec;\n                    if ((-1 < iVar9) && (ppiVar16 = ppiVar25 + 0x3e,  ppiVar25 = ppiVar7,  *ppiVar16 != 0x1))\n                    goto code_r0x00b9a4e8;\n                }\n                else {\n                    ppiVar22 = *arg_8h[1][*arg_ch];\n                    piStack132 = *ppiVar22;\n                    piStack128 = ppiVar22[1];\n                    piStack124 = ppiVar22[2];\n                    apiStack120[0] = ppiVar22[3];\n                    *apiStack120[0] = *apiStack120[0] + 1;\n                    ppiVar22 = &stack0xffffff7c;\n                    iVar9 = fcn.00b99fbd(ppiVar22);\n                    if (iVar9 != 0) {\n                        in_stack_fffffecc = &stack0xffffff78;\n                        fcn.00bafb6d();\n                        in_stack_fffffec8 = 0xbd02dc;\n                        fcn.00bf85d9(in_stack_fffffecc);\n                        goto code_r0x00bd0649;\n                    }\n                    fcn.00bfa0b5(0x85, *(arg_8h[1][*arg_ch] + 10));\n                    fcn.00b95a64();\n                    ppiVar18 = unaff_EDI;\n                    ppiVar24 = in_stack_fffffeec;\n                }\n                goto code_r0x00bd049e;\n            case 0xbd032d:\n                ppiVar26 = 0x16;\n                if (uStack260 == NULL) goto code_r0x00bd0d2e;\n                ppiVar23 = &stack0xffffffa0;\n                apiStack96[0] = NULL;\n                uStack88 = 0;\n                uStack84 = 1;\n                ppiVar22 = fcn.00bafb6d();\n                in_stack_fffffec8 = arg_8h;\n                in_stack_fffffecc = arg_ch;\n                iVar9 = fcn.00b9ca20(arg_8h, arg_ch, ppiVar22, ppiVar23);\n                if (iVar9 < 0) {\n                    fcn.00b99a20();\n                    ppiVar18 = unaff_EDI;\n                    ppiVar24 = in_stack_fffffeec;\n                    goto code_r0x00bd049e;\n                }\n                puVar10 = &stack0xffffff90;\n                fcn.00bafb6d();\n                fcn.00b99e9c(puVar10);\n                fcn.00b99a20();\n                ppiVar7 = ppiVar18;\n                goto code_r0x00b9a10d;\n            case 0xbd0433:\n                ppiVar17 = 0x6;\n                *arg_ch = piVar13 + 1;\n                ppiVar26 = ppiVar17;\n                break;\n            case 0xbd0445:\n                ppiVar17 = 0xf;\n                *arg_ch = piVar13 + 1;\n                ppiVar26 = ppiVar17;\n                break;\n            case 0xbd0457:\n                while( true ) {\n                    piVar13 = fcn.00bb00dd();\n                    if ((*piVar13 == 0x14) || (*piVar13 == 0x12)) break;\n                    arg_8h_00 = &stack0xffffff28;\n                    in_stack_fffffecc = 0xbd047b;\n                    iVar9 = fcn.00b9ba60(arg_8h_00, &stack0xfffffef8);\n                    ppiVar16 = ppiStack192;\n                    ppiVar24 = in_stack_fffffeec;\n                    if (iVar9 < 0) goto code_r0x00bd0483;\n                }\n                if (uStack260 != NULL) {\n                    fcn.00bafb6d();\n                    cVar5 = fcn.00bf787b();\n                    if (cVar5 == '\\0') {\n                        ppiVar23 = 0xbd0530;\n                        fcn.00bafb17();\n                        *arg_ch = *arg_ch + 1;\n                    }\n                    else {\n                        ppiVar23 = 0xbd04d2;\n                        fcn.00bafb17();\n                        iVar9 = 1;\n                        *arg_ch = *arg_ch + 1;\n                        piVar13 = *arg_ch;\n                        piVar14 = arg_8h[1];\n                        do {\n                            iVar1 = *(piVar14[piVar13] + 8);\n                            if (iVar1 == 0x57) {\n                                iVar9 = iVar9 + 1;\n                            }\n                            else if (iVar1 == 0x58) {\n                                iVar9 = iVar9 + -1;\n                            }\n                            else if ((iVar1 == 0x7f) || ((iVar1 == 0x40 && (iVar9 == 0)))) break;\n                            piVar13 = piVar13 + 1;\n                            *arg_ch = piVar13;\n                        } while (iVar9 != 0);\n                    }\n                    ppiVar26 = 0x12;\n                    arg_14h_00 = uStack212;\n                    goto code_r0x00b9a4e8;\n                }\n                ppiVar16 = *(arg_8h[1][*arg_ch] + 10);\n                ppiVar24 = in_stack_fffffeec;\ncode_r0x00bd0483:\n                ppiVar18 = 0xbd048e;\n                fcn.00bfa0b5(0x6e, ppiVar16);\n                in_stack_fffffeec = uStack208;\n                goto code_r0x00bd049e;\n            case 0xbd0537:\n                if (uStack260 == NULL) {\ncode_r0x00bd0d2e:\n                    ppiVar23 = *(arg_8h[1][*arg_ch] + 10);\n                    uVar19 = 0x6e;\n                    goto code_r0x00bd0d57;\n                }\n                piVar13 = piVar13 + 1;\n                *arg_ch = piVar13;\n                iVar9 = 1;\n                ppiVar26 = 0x16;\n                piVar3 = arg_8h[1];\n                do {\n                    iVar1 = *(piVar3[piVar13] + 8);\n                    if (iVar1 == 0x47) {\n                        iVar9 = iVar9 + 1;\n                    }\n                    else if (iVar1 == 0x48) {\n                        iVar9 = iVar9 + -1;\n                    }\n                    else if ((iVar1 == 0x7f) || ((iVar1 == 0x40 && (iVar9 == 1)))) break;\n                    piVar13 = piVar13 + 1;\n                    *arg_ch = piVar13;\n                } while (iVar9 != 0);\n                ppiVar16 = arg_10h;\n                ppiVar7 = ppiVar18;\n                if ((*(piVar14[*arg_ch + -1] + 8) == 0x48) && (iVar9 == 0)) {\n                    *arg_ch = *arg_ch + -1;\n                }\n                goto code_r0x00b9a10d;\n            case 0xbd0655:\n                uStack152 = 0;\n                uStack144 = 0;\n                uStack140 = 1;\n                in_stack_fffffeec = CONCAT13(1, in_stack_fffffeec);\n                if ((piVar13 != NULL) &&\n                   ((*(piVar14[piVar13 + -1] + 8) == 0x48 || (*(piVar14[piVar13 + -1] + 8) == 0x4f)))) {\n                    uVar19 = fcn.00bafb6d();\n                    ppiVar22 = 0xbd06a9;\n                    fcn.00b99e9c(uVar19);\n                }\n                ppiVar23 = 0xbd06ba;\n                cVar5 = fcn.00be6543();\n                if (cVar5 == '\\0') {\n                    if (in_stack_fffffeec >> 0x18 == '\\0') {\n                        fcn.00bfa0b5(0xa9, *(arg_8h[1][*arg_ch] + 10));\n                    }\n                    else {\n                        ppiVar23 = 0xbd06d7;\n                        uVar19 = fcn.00c0c2f7();\n                        fcn.00b99e9c(uVar19);\n                        ppiVar22 = 0xbd06f0;\n                        cVar5 = fcn.00be6543();\n                        if (cVar5 != '\\0') goto code_r0x00bd0718;\n                        fcn.00bfa0b5(0xa7, 0xa7);\n                    }\n                }\n                else {\ncode_r0x00bd0718:\n                    arg_14h_00 = &stack0xffffffd0;\n                    in_stack_fffffef0 = &stack0xffffff88;\n                    piStack48 = NULL;\n                    uStack40 = 0;\n                    uStack36 = 1;\n                    ppiVar26 = arg_8h;\n                    in_stack_fffffeec = arg_ch;\n                    iVar9 = fcn.00c0c9f3(arg_8h, arg_ch, in_stack_fffffef0, arg_14h_00);\n                    if (-1 < iVar9) {\n                        ppiVar18 = 0x16;\n                        if (uStack260._3_1_ == '\\0') {\n                            fcn.00bafb17();\n                        }\n                        arg_8h_00 = &stack0xffffffc0;\n                        fcn.00bafb84(arg_8h_00);\n                        fcn.00b99a20();\n                        ppiVar25 = 0xbd07a3;\n                        fcn.00b99a20();\n                        goto code_r0x00b9a4e8;\n                    }\n                    fcn.00bfa0b5(0x6e, *(arg_8h[1][*arg_ch] + 10));\n                    fcn.00b99a20();\n                }\n                fcn.00b99a20();\n                ppiVar18 = unaff_EDI;\n                ppiVar24 = in_stack_fffffeec;\n                goto code_r0x00bd049e;\n            }\ncode_r0x00b9a170:\n            in_stack_fffffeec = ppiVar7;\n            ppiVar7 = arg_14h_00;\n            if (uStack208._1_1_ != '\\0') {\n                ppiVar7 = arg_14h_00[1];\n            }\n            ppiVar16 = arg_14h_00;\n            arg_ch_00 = ppiVar25;\n    // switch table (7 cases) at 0xb9b808\n            switch(*(*ppiVar7 * 0x15 + 0xc35350 + ppiVar17)) {\n            case 0:\n                goto code_r0x00b9a4a0;\n            case 1:\n                goto code_r0x00b9a78e;\n            case 2:\n                goto code_r0x00b9aa50;\n            case 3:\n                goto code_r0x00b9a4d3;\n            case 4:\n                uVar19 = 0x6b;\n                break;\n            case 5:\n                uVar19 = 0x6c;\n                break;\n            case 6:\n                uVar19 = 0x6d;\n                break;\n            default:\n                if (uStack260 == 0x1) {\n                    uVar19 = 0;\n                    ppiVar18 = unaff_EDI;\n                    uVar27 = uVar19;\n                    ppiVar24 = in_stack_fffffeec;\n                    ppiVar23 = ppiStack256;\n                    goto joined_r0x00b9a1b1;\n                }\n                ppiVar22 = 0x6e;\n                ppiVar23 = uStack204;\n                goto code_r0x00bd0e2f;\n            }\n            fcn.00bfa0b5(uVar19, uStack204);\n            ppiVar24 = in_stack_fffffeec;\n            goto code_r0x00bd049e;\n        }\n        ppiVar26 = 0x16;\n        if (uStack260 != NULL) {\n            if (uStack252._1_1_ == '\\0') {\n                ppiVar23 = 0x18;\n                ppiVar22 = 0xb9aa04;\n                ppiStack256 = fcn.00bb0ff6(0x18);\n                if (ppiStack256 == NULL) {\n                    ppiStack256 = NULL;\n                }\n                else {\n                    ppiVar23 = 0xc57488;\n                    ppiStack256[2] = NULL;\n                    ppiVar22 = 0xb9aa24;\n                    fcn.00b99ac0(0xc57488);\n                }\n                ppiStack256[4] = ppiVar25;\n                ppiVar25 = ppiStack256;\n            }\n            else {\n                if (ppiVar25 != 0xc57488) {\n                    if ((ppiVar25[3] == 0x4) && (*0xc57494 == 4)) {\n                        ppiVar22 = 0xbd0896;\n                        ppiVar23 = *0xc57490;\n                        fcn.00b981a7(*0xc57490);\n                    }\n                    else {\n                        fcn.00b99a20();\n                        ppiVar23 = 0xc57488;\n                        ppiVar22 = 0xb9b0f6;\n                        fcn.00b99ac0(0xc57488);\n                    }\n                }\n                uStack252 = uStack252 & 0xffff00ff;\n            }\n            goto code_r0x00b9a55a;\n        }\n        if (ppiVar16 == 0xc57488) goto code_r0x00b9a55a;\n        if ((ppiVar16[3] == 0x4) && (*0xc57494 == 4)) {\n            ppiVar22 = 0xbd07b6;\n            ppiVar23 = *0xc57490;\n            fcn.00b981a7(*0xc57490);\n            goto code_r0x00b9a55a;\n        }\n        ppiVar22 = ppiVar16[2];\n        uStack260 = ppiVar18;\n        if (ppiVar22 != NULL) {\n            *ppiVar22[3] = *ppiVar22[3] + -1;\n            if (*ppiVar22[3] == 0) {\n                fcn.00bb106c(*ppiVar22);\n                fcn.00bb106c(ppiVar22[3]);\n                uStack260 = ppiVar18;\n            }\n            fcn.00bb106c();\n            ppiVar16[2] = NULL;\n            ppiVar23 = ppiVar22;\n        }\n        if (ppiVar16[3] < 5) goto code_r0x00b9a539;\n    // switch table (11 cases) at 0xbd0f64\n        switch(ppiVar16[3]) {\n        case 0x5:\n            ppiVar22 = *ppiVar16;\n            if (ppiVar22 != NULL) {\n                fcn.00b98e34();\n                ppiVar23 = ppiVar22;\n            }\n            break;\n        case 0x8:\n            if (*ppiVar16 != NULL) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*ppiVar16);\n                ppiVar22 = *ppiVar16;\n                goto code_r0x00bd086e;\n            }\n            break;\n        case 0xa:\n            ppiVar22 = *ppiVar16;\n            goto joined_r0x00bd0860;\n        case 0xb:\n            fcn.00bb106c((*ppiVar16)[1]);\n            ppiVar22 = *ppiVar16;\n            goto code_r0x00bd086e;\n        case 0xc:\n            ppiVar22 = *ppiVar16;\n            if (ppiVar22 != NULL) {\n                fcn.00be73f0();\n                ppiVar23 = ppiVar22;\n            }\n            break;\n        case 0xd:\n        case 0xe:\n            ppiVar22 = *ppiVar16;\njoined_r0x00bd0860:\n            if (ppiVar22 != NULL) {\n                fcn.00b95a64();\ncode_r0x00bd086e:\n                fcn.00bb106c();\n                ppiVar23 = ppiVar22;\n            }\n            break;\n        case 0xf:\n            ppiVar22 = *ppiVar16;\n            if (ppiVar22 != NULL) {\n                fcn.00be7405();\n                ppiVar23 = ppiVar22;\n            }\n        }\ncode_r0x00b9a539:\n        unaff_EDI = 0xc57488;\n        ppiVar16[3] = 0x1;\n        *ppiVar16 = NULL;\n        ppiVar22 = 0xb9a552;\n        fcn.00b99ac0(0xc57488);\n        ppiVar18 = uStack260;\ncode_r0x00b9a55a:\n        uStack260 = uStack260 + 1;\n        ppiVar7 = ppiVar16;\n        if ((uStack260 != 0x1) && (ppiVar7 = ppiVar25,  uStack252._1_1_ != '\\0')) {\n            ppiVar7 = ppiVar25[4];\n        }\n        ppiVar24 = ppiVar7[2];\n        ppiStack220 = *arg_8h[1][*arg_ch];\n        if (ppiVar24 != NULL) {\n            ppiVar22 = 0xbd08a1;\n            fcn.00b97b3d();\n            ppiVar7[2] = NULL;\n            ppiVar23 = ppiVar24;\n        }\n        if (ppiVar7[3] < 5) goto code_r0x00b9a595;\n    // switch table (11 cases) at 0xbd0f90\n        switch(ppiVar7[3]) {\n        case 0x5:\n            ppiVar24 = *ppiVar7;\n            if (ppiVar24 != NULL) {\n                ppiVar22 = 0xbd08f8;\n                fcn.00b98e34();\n                ppiVar23 = ppiVar24;\n            }\n            break;\n        case 0x8:\n            if (*ppiVar7 != NULL) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*ppiVar7);\n                uStack236._4_4_ = *ppiVar7;\n                goto code_r0x00bd0951;\n            }\n            break;\n        case 0xa:\n            piVar13 = *ppiVar7;\n            uStack236 = uStack236 & 0xffffffff | ZEXT48(piVar13) << 0x20;\n            goto joined_r0x00bd0940;\n        case 0xb:\n            fcn.00bb106c((*ppiVar7)[1]);\n            uStack236._4_4_ = *ppiVar7;\n            goto code_r0x00bd0951;\n        case 0xc:\n            ppiVar24 = *ppiVar7;\n            if (ppiVar24 != NULL) {\n                ppiVar22 = 0xbd091e;\n                fcn.00be73f0();\n                ppiVar23 = ppiVar24;\n            }\n            break;\n        case 0xd:\n        case 0xe:\n            piVar13 = *ppiVar7;\n            uStack236 = uStack236 & 0xffffffff | ZEXT48(piVar13) << 0x20;\njoined_r0x00bd0940:\n            if (piVar13 != NULL) {\n                fcn.00b95a64();\ncode_r0x00bd0951:\n                ppiVar22 = 0xbd0956;\n                fcn.00bb106c();\n                ppiVar23 = uStack236._4_4_;\n            }\n            break;\n        case 0xf:\n            ppiVar24 = *ppiVar7;\n            if (ppiVar24 != NULL) {\n                ppiVar22 = 0xbd0933;\n                fcn.00be7405();\n                ppiVar23 = ppiVar24;\n            }\n        }\ncode_r0x00b9a595:\n        ppiVar7[3] = 0x1;\n        *ppiVar7 = ppiStack220;\n        *arg_ch = *arg_ch + 1;\n        ppiVar7 = ppiVar18;\n    } while( true );\ncode_r0x00b9a336:\n    iVar9 = (-bVar20 & 0xfffffffe) + 1;\ncode_r0x00b9a33c:\n    if (iVar9 < 0) {\ncode_r0x00b9a3c6:\n        ppuVar2 = uStack240[6];\n        if (ppuVar2 == NULL) goto code_r0x00b9a09c;\n        ppiVar18 = ppuVar2[1];\n        if (ppiVar18 < uStack236) {\n            uStack236 = ZEXT48(ppiVar18);\n            uStack236._0_4_ = ppiVar18;\n        }\n        puVar15 = *ppuVar2;\n        uVar4 = uStack236 & 0xffffffff;\n        uStack236 = uVar4 | ZEXT48(uStack236) << 0x20;\n        ppiStack216 = *ppiVar7;\n        uStack236._0_4_ = uVar4;\n        if (uStack236 != NULL) {\n            do {\n                if (*ppiStack216 != *puVar15) {\n                    if (*ppiStack216 < *puVar15) goto code_r0x00b9a418;\n                    goto code_r0x00b9a433;\n                }\n                ppiStack216 = ppiStack216 + 2;\n                puVar15 = puVar15 + 1;\n                uVar4 = uStack236 & 0xffffffff;\n                uStack236 = uVar4 | uStack236._4_4_ - 1U << 0x20;\n            } while (uStack236._4_4_ - 1U != 0);\n            uStack236._0_4_ = uVar4;\n        }\n        if (uStack236 < ppuVar2[1]) {\ncode_r0x00b9a418:\n            uStack240[6] = ppuVar2[7];\n            ppuVar2[7] = *ppiVar22;\n            *ppiVar22 = ppuVar2;\n            if (ppuVar2[6] == NULL) goto code_r0x00b9a09c;\n        }\ncode_r0x00b9a433:\n        ppiStack228[6] = *ppiVar22;\n        ppiStack228 = *ppiVar22;\n        *ppiVar22 = ppiStack228[6];\n        goto code_r0x00b9a2c1;\n    }\n    if (0 < iVar9) {\ncode_r0x00b9a34e:\n        ppiVar18 = uStack240[7];\n        if (ppiVar18 == NULL) goto code_r0x00b9a09c;\n        ppiVar17 = ppiVar18[1];\n        if (uStack236 < ppiVar18[1]) {\n            ppiVar17 = uStack236;\n        }\n        uVar4 = uStack236 & 0xffffffff;\n        uStack236 = uVar4 | ZEXT48(*ppiVar7) << 0x20;\n        ppiStack216 = *ppiVar18;\n        uStack236._0_4_ = uVar4;\n        ppiStack224 = ppiVar17;\n        if (ppiVar17 != NULL) {\n            do {\n                if (*ppiStack216 != *uStack236._4_4_) {\n                    ppiVar16 = arg_10h;\n                    if (*ppiStack216 < *uStack236._4_4_) goto code_r0x00b9a45c;\n                    goto code_r0x00b9a477;\n                }\n                uVar4 = uStack236 & 0xffffffff;\n                uStack236 = uVar4 | ZEXT48(uStack236._4_4_ + 2) << 0x20;\n                ppiStack216 = ppiStack216 + 2;\n                ppiStack224 = ppiStack224 + -1;\n            } while (ppiStack224 != NULL);\n            uStack236._0_4_ = uVar4;\n            ppiVar16 = arg_10h;\n        }\n        if (ppiVar17 < uStack236) {\ncode_r0x00b9a45c:\n            uStack240[7] = ppiVar18[6];\n            ppiVar18[6] = *ppiVar22;\n            *ppiVar22 = ppiVar18;\n            if (ppiVar18[7] == NULL) goto code_r0x00b9a09c;\n        }\ncode_r0x00b9a477:\n        ppiStack192[7] = *ppiVar22;\n        ppiStack192 = *ppiVar22;\n        *ppiVar22 = ppiStack192[7];\n        goto code_r0x00b9a2c1;\n    }\n    arg_14h_00 = CONCAT13(1, arg_14h_00);\ncode_r0x00b9a09c:\n    ppiStack192[7] = (*ppiVar22)[6];\n    ppiStack228[6] = (*ppiVar22)[7];\n    (*ppiVar22)[6] = *0xc57460;\n    (*ppiVar22)[7] = *0xc5745c;\n    if (((arg_14h_00 >> 0x18 != '\\0') && (*ppiVar22 != NULL)) && (unaff_EDI = (*ppiVar22)[5],  unaff_EDI != NULL)) {\ncode_r0x00b9a0e8:\n        *arg_ch = *arg_ch + 1;\n        in_stack_fffffecc = 0xb9a0ff;\n        ppiVar22 = arg_8h;\n        ppiVar23 = arg_ch;\n        unaff_ESI = uStack212;\n        iVar9 = fcn.00b9ca20(arg_8h, arg_ch, unaff_EDI, uStack212);\n        ppiVar18 = unaff_EDI;\n        ppiVar24 = in_stack_fffffeec;\n        if (iVar9 < 0) goto code_r0x00bd049e;\n        goto code_r0x00b9a10d;\n    }\ncode_r0x00b9a5b0:\n    uStack236 = uStack236 & 0xffffffff00000000 | ZEXT48(*0xc57270);\n    if (*0xc57270 != NULL) {\n        arg_14h_00 = arg_14h_00 & 0xffffff;\n        if ((*0xc57440 & 1) == 0) {\n            *0xc57440 = *0xc57440 | 1;\n            fcn.00b977c7();\n            ppiVar24 = 0xbd0b90;\n            fcn.00bb2f80(0xbcb80a);\n            uStack236 = ZEXT48(*0xc57270);\n        }\n        *0xc57460 = NULL;\n        *0xc5745c = NULL;\n        uStack236 = CONCAT44(0xc57444, uStack236);\n        ppiStack192 = 0xc57444;\ncode_r0x00b9a600:\n        while( true ) {\n            ppiVar22 = ppiVar7[1];\n            ppiVar18 = (*0xc57270)[1];\n            uStack236._0_4_ = *0xc57270;\n            ppiStack216 = ppiVar22;\n            if (ppiVar22 != NULL) break;\n            if (ppiVar18 == NULL) {\ncode_r0x00bd0bae:\n                if (ppiVar22 == NULL) goto code_r0x00b9a61a;\n                goto code_r0x00b9a6ed;\n            }\ncode_r0x00b9a807:\n            ppiVar18 = uStack236[6];\n            ppiStack216 = uStack236 + 6;\n            if (ppiVar18 == NULL) goto code_r0x00b9a662;\n            if (ppiVar18[1] < ppiVar22) {\n                ppiVar22 = ppiVar18[1];\n            }\n            uStack240 = *ppiVar18;\n            ppiStack228 = *ppiVar7;\n            for (ppiStack224 = ppiVar22; ppiStack224 != NULL; ppiStack224 = ppiStack224 + -1) {\n                if (*ppiStack228 != *uStack240) {\n                    if (*ppiStack228 < *uStack240) goto code_r0x00b9a878;\n                    goto code_r0x00b9a89b;\n                }\n                uStack240 = uStack240 + 2;\n                ppiStack228 = ppiStack228 + 2;\n            }\n            if (ppiVar22 < ppiVar18[1]) {\ncode_r0x00b9a878:\n                *ppiStack216 = ppiVar18[7];\n                ppiVar18[7] = *0xc57270;\n                uStack236._0_4_ = ppiVar18;\n                ppiVar16 = arg_10h;\n                *0xc57270 = ppiVar18;\n                if (ppiVar18[6] == NULL) goto code_r0x00b9a662;\n            }\ncode_r0x00b9a89b:\n            *(uStack236._4_4_ + 0x18) = uStack236;\n            uStack236 = CONCAT44(*0xc57270, (*0xc57270)[6]);\n            ppiVar16 = arg_10h;\n            *0xc57270 = (*0xc57270)[6];\n        }\n        if (ppiVar18 == NULL) goto code_r0x00bd0bae;\ncode_r0x00b9a61a:\n        if (ppiVar22 < ppiVar18) {\n            uStack240 = **0xc57270;\n            ppiStack228 = *ppiVar7;\n            for (; ppiVar18 != NULL; ppiVar18 = ppiVar18 + -1) {\n                if (*ppiStack228 != *uStack240) {\n                    iVar9 = (-(*ppiStack228 < *uStack240) & 0xfffffffe) + 1;\n                    ppiVar16 = arg_10h;\n                    goto code_r0x00b9a64f;\n                }\n                uStack240 = uStack240 + 2;\n                ppiStack228 = ppiStack228 + 2;\n            }\n            iVar9 = 0;\n            ppiVar16 = arg_10h;\n        }\n        else {\n            piVar13 = *ppiVar7;\n            piVar14 = *uStack236;\n            for (ppiVar18 = ppiVar22; ppiVar18 != NULL; ppiVar18 = ppiVar18 + -1) {\n                if (*piVar13 != *piVar14) {\n                    iVar9 = (-(*piVar13 < *piVar14) & 0xfffffffe) + 1;\n                    goto code_r0x00b9a64f;\n                }\n                piVar13 = piVar13 + 2;\n                piVar14 = piVar14 + 2;\n            }\n            iVar9 = 0;\n        }\ncode_r0x00b9a64f:\n        if (iVar9 < 0) goto code_r0x00b9a807;\n        if (0 < iVar9) {\ncode_r0x00b9a6ed:\n            uStack240 = uStack236 + 7;\n            ppuVar2 = *uStack240;\n            if (ppuVar2 == NULL) goto code_r0x00b9a662;\n            ppiStack228 = ppuVar2[1];\n            if (ppiVar22 < ppuVar2[1]) {\n                ppiStack228 = ppiVar22;\n            }\n            puVar15 = *ppuVar2;\n            piVar13 = *ppiVar7;\n            for (ppiStack224 = ppiStack228; ppiStack224 != NULL; ppiStack224 = ppiStack224 + -1) {\n                if (*puVar15 != *piVar13) {\n                    if (*puVar15 < *piVar13) goto code_r0x00b9a745;\n                    goto code_r0x00b9a768;\n                }\n                puVar15 = puVar15 + 1;\n                piVar13 = piVar13 + 2;\n            }\n            if (ppiStack228 < ppiVar22) {\ncode_r0x00b9a745:\n                uStack236._0_4_ = *uStack240;\n                *uStack240 = uStack236[6];\n                uStack236[6] = *0xc57270;\n                *0xc57270 = uStack236;\n                if (uStack236[7] == NULL) goto code_r0x00b9a662;\n            }\ncode_r0x00b9a768:\n            ppiStack192[7] = uStack236;\n            ppiStack192 = *0xc57270;\n            uStack236 = uStack236 & 0xffffffff00000000 | ZEXT48((*0xc57270)[7]);\n            *0xc57270 = (*0xc57270)[7];\n            goto code_r0x00b9a600;\n        }\n        arg_14h_00 = CONCAT13(1, arg_14h_00);\ncode_r0x00b9a662:\n        ppiStack192[7] = uStack236[6];\n        *(uStack236._4_4_ + 0x18) = (*0xc57270)[7];\n        (*0xc57270)[6] = *0xc57460;\n        (*0xc57270)[7] = *0xc5745c;\n        if (((arg_14h_00 >> 0x18 != '\\0') && (*0xc57270 != NULL)) && (unaff_EDI = (*0xc57270)[5],  unaff_EDI != NULL))\n        goto code_r0x00b9a0e8;\n    }\n    uVar19 = 0x79;\n    unaff_EDI = ppiVar24;\ncode_r0x00bd0d57:\n    fcn.00bfa0b5(uVar19, ppiVar23);\n    ppiVar18 = unaff_EDI;\n    ppiVar24 = in_stack_fffffeec;\n    goto code_r0x00bd049e;\ncode_r0x00b9aa50:\n    ppiVar7 = ppiVar16;\n    if (uStack208._1_1_ != '\\0') {\n        ppiVar7 = ppiVar16[1];\n    }\n    if (*ppiVar7 == 0x12) goto code_r0x00b9aada;\n    if (uStack208._1_1_ != '\\0') {\n        ppiVar16 = ppiVar16[1];\n    }\n    if (*ppiVar16 == 0x14) goto code_r0x00bd0e2f;\n    arg_ch_00 = &stack0xffffff04;\n    arg_8h_00 = &stack0xffffff34;\n    unaff_EDI = 0xb9aa80;\n    iVar9 = fcn.00b9ba60(arg_8h_00, arg_ch_00);\n    ppiVar16 = ppiStack192;\n    ppiVar24 = in_stack_fffffeec;\n    if (iVar9 < 0) goto code_r0x00bd0483;\n    ppiVar16 = uStack208;\n    uStack208._1_1_ = uStack204._1_1_;\n    ppiVar18 = uStack208;\n    goto code_r0x00b9aa50;\ncode_r0x00b9aada:\n    ppiVar25 = ppiVar16;\n    if (uStack208._1_1_ != '\\0') {\n        ppiVar25 = ppiVar16[1];\n        unaff_ESI = 0xb9aae7;\n        ppiVar17 = arg_14h_00;\n        fcn.00bb106c();\n        arg_ch_00 = ppiVar16;\n        arg_14h_00 = ppiVar17;\n        ppiStack256 = ppiVar25;\n        ppiStack200 = ppiVar25;\n    }\n    if (uStack196 == '\\0') {\n        ppiStack256 = ppiVar25[1];\n        unaff_ESI = 0xbd0bc4;\n        ppiVar17 = arg_14h_00;\n        fcn.00bb106c();\n        uStack196 = uStack196 & 0xffff00ff;\n        arg_14h_00 = ppiVar17;\n        ppiStack200 = ppiStack256;\n    }\n    else {\n        uStack196._0_2_ = CONCAT11(1, uStack196);\n        uStack196 = uStack196 & 0xffff0000 | uStack196;\n        ppiVar25 = arg_ch_00;\n    }\n    uStack204 = uStack204 + -1;\n    goto code_r0x00b9a4d3;\ncode_r0x00bd0e2f:\n    fcn.00bfa0b5(ppiVar22, ppiVar23);\n    ppiVar24 = in_stack_fffffeec;\n    goto code_r0x00bd049e;\ncode_r0x00b9a78e:\n    ppiVar23 = &stack0xfffffef8;\n    arg_8h_00 = &stack0xffffff28;\n    in_stack_fffffecc = 0xb9a79d;\n    iVar9 = fcn.00b9ba60(arg_8h_00, ppiVar23);\n    ppiVar16 = ppiStack192;\n    ppiVar7 = ppiStack220;\n    ppiVar24 = in_stack_fffffeec;\n    if (iVar9 < 0) goto code_r0x00bd0483;\n    goto code_r0x00b9a170;\ncode_r0x00bd049e:\n    uVar19 = 0xffffffff;\n    arg_14h_00 = in_stack_fffffeec;\n    uVar27 = uVar19;\n    ppiVar23 = ppiVar18;\njoined_r0x00b9a1b1:\n    do {\n        if (ppiVar23 == NULL) {\n            while (arg_14h_00 != NULL) {\n                ppiVar23 = arg_14h_00[1];\n                fcn.00bb106c(arg_14h_00);\n                arg_14h_00 = ppiVar23;\n            }\n            return uVar19;\n        }\n        piVar13 = ppiVar18[2];\n        ppiStack184 = ppiVar18[4];\n        if (piVar13 != NULL) {\n            *piVar13[3] = *piVar13[3] + -1;\n            if (*piVar13[3] == 0) {\n                fcn.00bb106c(*piVar13);\n                fcn.00bb106c(piVar13[3]);\n            }\n            fcn.00bb106c(piVar13);\n            ppiVar18[2] = NULL;\n        }\n        if (4 < ppiVar18[3]) {\n    // switch table (11 cases) at 0xb9b870\n            switch(ppiVar18[3]) {\n            case 0x5:\n                if (*ppiVar18 != NULL) {\n                    fcn.00b98e34(*ppiVar18);\n                }\n                break;\n            case 0x8:\n                if (*ppiVar18 != NULL) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*ppiVar18);\n                    piVar13 = *ppiVar18;\n                    goto code_r0x00bd0ed1;\n                }\n                break;\n            case 0xa:\n                if (*ppiVar18 != NULL) {\n                    fcn.00bf268b(*ppiVar18);\n                }\n                break;\n            case 0xb:\n                fcn.00bb106c((*ppiVar18)[1]);\n                piVar13 = *ppiVar18;\ncode_r0x00bd0ed1:\n                fcn.00bb106c(piVar13);\n                break;\n            case 0xc:\n                if (*ppiVar18 != NULL) {\n                    fcn.00be73f0(*ppiVar18);\n                }\n                break;\n            case 0xd:\n            case 0xe:\n                piVar13 = *ppiVar18;\n                if (piVar13 != NULL) {\n                    fcn.00b95a64();\n                    goto code_r0x00bd0ed1;\n                }\n                break;\n            case 0xf:\n                if (*ppiVar18 != NULL) {\n                    fcn.00be7405(*ppiVar18);\n                }\n            }\n        }\n        ppiVar18[3] = 0x1;\n        *ppiVar18 = NULL;\n        fcn.00bb106c(ppiVar18);\n        arg_14h_00 = ppiVar24;\n        uVar19 = uVar27;\n        ppiVar18 = ppiStack184;\n        ppiVar23 = ppiStack184;\n    } while( true );\ncode_r0x00b9a4a0:\n    if (uStack208._1_1_ == '\\0') {\n        ppiVar23 = 0x8;\n        ppiVar22 = 0xb9a4af;\n        uStack212 = fcn.00bb0ff6(8);\n        if (uStack212 == NULL) {\n            uStack212 = NULL;\n        }\n        else {\n            *uStack212 = ppiVar17;\n        }\n        uStack212[1] = arg_14h_00;\n        arg_14h_00 = uStack212;\n    }\n    else {\n        *arg_14h_00 = ppiVar17;\n        uStack208 = uStack208 & 0xffff00ff;\n    }\n    ppiStack216 = ppiStack216 + 1;\ncode_r0x00b9a4d3:\n    ppiVar7 = uStack248;\n    ppiVar16 = uStack252;\n    if (((ppiVar17 != 0x7) && (ppiVar17 != 0x8)) || (uStack248 == NULL)) {\ncode_r0x00b9a4e8:\n        arg_10h = uStack252;\n        ppiVar16 = uStack252;\n        in_stack_fffffeec = uStack244;\n        ppiVar7 = ppiVar18;\n        goto code_r0x00b9a10d;\n    }\n    arg_10h = uStack252;\n    ppiVar25 = uStack252;\n    if ((uStack248 != 0x1) && (ppiVar25 = uStack244,  uStack240._1_1_ != '\\0')) {\n        ppiVar25 = uStack244[4];\n    }\n    uStack44 = 0;\n    in_stack_fffffeec = uStack244;\n    fcn.00b99ac0(ppiVar25);\n    unaff_ESI = 0xb9b26e;\n    cVar5 = fcn.00b99399();\n    if (cVar5 == '\\0') {\ncode_r0x00b9b27a:\n        if (in_stack_fffffef0 != 0x7) goto code_r0x00b9b2dc;\n    }\n    else if (in_stack_fffffef0 != 0x8) {\n        if (cVar5 != '\\0') goto code_r0x00b9b2dc;\n        goto code_r0x00b9b27a;\n    }\n    unaff_EDI = arg_8h;\n    unaff_ESI = arg_ch;\n    iVar9 = fcn.00b9b9f2(arg_8h, arg_ch);\n    if (iVar9 < 0) {\n        fcn.00bfa0b5(0x6e, uStack204);\n        uVar19 = 0xffffffff;\n        uVar27 = 0xffffffff;\n        fcn.00b99a20();\n        arg_14h_00 = in_stack_fffffeec;\n        ppiVar18 = unaff_EDI;\n        ppiVar24 = in_stack_fffffeec;\n        ppiVar23 = unaff_EDI;\n        goto joined_r0x00b9a1b1;\n    }\n    if (ppiVar26 == 0x8) {\n        auStack176 = CONCAT31(auStack176._1_3_, 1);\n        ppiVar23 = auStack176;\n        fcn.00bafb6d();\n        fcn.00b99863(ppiVar23);\n    }\n    else {\n        ppiVar22 = ppiVar16;\n        if ((ppiVar7 != 0x1) && (ppiVar22 = ppiVar25,  uStack252._1_1_ != '\\0')) {\n            ppiVar22 = ppiVar25[4];\n        }\n        ppiVar23 = 0xb9b2af;\n        fcn.00b99a20();\n        ppiVar22[3] = 0x9;\n        *ppiVar22 = 0;\n    }\n    ppiVar22 = in_stack_fffffef0;\n    if (uStack212._1_1_ != '\\0') {\n        ppiVar22 = in_stack_fffffef0[1];\n        in_stack_fffffecc = 0xbd0c35;\n        fcn.00bb106c(in_stack_fffffef0);\n        ppiStack216 = ppiVar22;\n    }\n    if (uStack212 == '\\0') {\n        in_stack_fffffef0 = ppiVar22[1];\n        in_stack_fffffecc = 0xbd0c50;\n        fcn.00bb106c(ppiVar22);\n        uStack212 = uStack212 & 0xffff00ff;\n        ppiStack216 = in_stack_fffffef0;\n    }\n    else {\n        uStack212._0_2_ = CONCAT11(1, uStack212);\n        uStack212 = uStack212 & 0xffff0000 | uStack212;\n        in_stack_fffffef0 = ppiVar22;\n    }\n    ppiStack220 = ppiStack220 + -1;\ncode_r0x00b9b2dc:\n    ppiVar22 = 0xb9b2e8;\n    fcn.00b99a20();\n    ppiVar7 = ppiVar18;\n    goto code_r0x00b9a10d;\n}\n",
        "token_count": 22742
    },
    "00b9c707": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00bd1f63)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00b9c707(uint *hDC, double *arg_ch)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint in_ECX;\n    double *pdVar9;\n    uint arg_ch_00;\n    char16_t *pcVar10;\n    uint uVar11;\n    uint lpBuffer;\n    uint pwszKLID;\n    uint var_110h;\n    uint var_100h;\n    uint var_f8h;\n    uint var_e8h;\n    uint var_e0h;\n    uint var_d8h;\n    uint var_d0h;\n    uint var_c0h;\n    uint var_b8h;\n    uint var_a8h;\n    uint var_a0h;\n    uint var_90h;\n    uint var_80h;\n    uint uStack128;\n    uint uStack124;\n    uint32_t var_74h;\n    uint var_70h;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint lpSystemTime;\n    int32_t hLibModule;\n    uint uStack36;\n    int32_t hWnd;\n    double dStack36;\n    uint32_t pcbBuffer;\n    uint var_10h;\n    \n    dStack36 = CONCAT44(in_ECX, uStack36);\n    lpBuffer._0_2_ = 0;\n    fcn.00b97b76(0x104);\n    var_2ch = 0;\n    uVar11 = *hDC;\n    do {\n        arg_ch_00 = 0xb9c742;\n        iVar3 = fcn.00bb378c(*(var_2ch * 4 + 0xc35510), uVar11);\n        pdVar9 = arg_ch;\n        if (iVar3 == 0) break;\n        var_2ch = var_2ch + 1;\n    } while (var_2ch < 0x61);\n    iVar3 = 0;\n    // switch table (97 cases) at 0xb9c88f\n    switch(var_2ch) {\n    case 0:\n        iVar3 = fcn.00baff9a();\n        var_44h = *(iVar3 + 0x14);\n        goto code_r0x00bd1b0b;\n    case 1:\n        iVar5 = fcn.00baff9a();\n        fcn.00b99e9c(iVar5 + 0x20);\n        goto code_r0x00b9c77e;\n    case 2:\n        (*_sym.imp.KERNEL32.dll_GetLocalTime)(&fcn.00b9c707::lpSystemTime);\n        uVar8 = hWnd._2_2_;\n        arg_ch_00 = 0xc4ad84;\n        goto code_r0x00bd1b6c;\n    case 3:\n        uVar11 = 0xc4ad90;\n        puVar4 = &fcn.00b9c707::var_f8h;\n        fcn.00c0c3f9();\n        uVar11 = fcn.00c0c33b(puVar4, uVar11);\n        fcn.00b99b9c(uVar11);\n        goto code_r0x00bd1c08;\n    case 4:\n        uVar11 = 0xc4ad98;\n        puVar4 = &fcn.00b9c707::var_90h;\n        fcn.00c0c3f9();\n        uVar11 = fcn.00c0c33b(puVar4, uVar11);\n        fcn.00b99b9c(uVar11);\n        goto code_r0x00bd1c08;\n    case 5:\n        uVar11 = 0xc4ada0;\n        puVar4 = &fcn.00b9c707::var_110h;\n        fcn.00c0c3f9();\n        uVar11 = fcn.00c0c33b(puVar4, uVar11);\n        fcn.00b99b9c(uVar11);\n        goto code_r0x00bd1c08;\n    case 6:\n        uVar11 = 0xc4a18c;\n        puVar4 = &fcn.00b9c707::var_a0h;\n        fcn.00c0c3f9();\n        uVar11 = fcn.00c0c33b(puVar4, uVar11);\n        fcn.00b99b9c(uVar11);\n        goto code_r0x00bd1c08;\n    case 7:\n        uVar11 = 0xc4ada8;\n        puVar4 = &fcn.00b9c707::var_b8h;\n        fcn.00c0c3f9();\n        uVar11 = fcn.00c0c33b(puVar4, uVar11);\n        fcn.00b99b9c(uVar11);\n        goto code_r0x00bd1c08;\n    case 8:\n        uVar11 = 0xc4adb0;\n        puVar4 = &fcn.00b9c707::var_d0h;\n        fcn.00c0c3f9();\n        uVar11 = fcn.00c0c33b(puVar4, uVar11);\n        fcn.00b99b9c(uVar11);\n        goto code_r0x00bd1c08;\n    case 9:\n        fcn.00c0c3f9();\n        fcn.00c0c398();\n        uVar8 = 0xc4a18c;\ncode_r0x00bd1b6c:\n        fcn.00bb38d8(&fcn.00b9c707::lpBuffer, arg_ch_00, uVar8);\n        goto code_r0x00bd1ba5;\n    case 10:\n        uVar11 = 0xc4adb8;\n        puVar4 = &fcn.00b9c707::var_80h;\n        fcn.00c0c3f9();\n        uVar11 = fcn.00c0c33b(puVar4, uVar11);\n        fcn.00b99b9c(uVar11);\n        goto code_r0x00bd1c08;\n    case 0xb:\n        break;\n    case 0xc:\n        break;\n    case 0xd:\n        break;\n    case 0xe:\n        break;\n    case 0xf:\n        break;\n    case 0x10:\n        break;\n    case 0x11:\n        break;\n    case 0x12:\n        break;\n    case 0x13:\n        break;\n    case 0x14:\n        break;\n    case 0x15:\n        break;\n    case 0x16:\n        break;\n    case 0x17:\n        break;\n    case 0x18:\n        break;\n    case 0x19:\n        break;\n    case 0x1a:\n        break;\n    case 0x1b:\n        break;\n    case 0x1c:\n        pcbBuffer = 0x104;\n        (*_sym.imp.KERNEL32.dll_GetComputerNameW)(&fcn.00b9c707::lpBuffer, &fcn.00b9c707::pcbBuffer);\n        goto code_r0x00bd1ba5;\n    case 0x1d:\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(&fcn.00b9c707::lpBuffer, 0x104);\n        if (iVar5 == 0) goto code_r0x00b9c77e;\n        goto code_r0x00bd1ba5;\n    case 0x1e:\n        if (*(*0xc57428 + 0x34) == '\\0') {\n            (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(&fcn.00b9c707::lpBuffer, 0x104);\n        }\n        else {\n            hLibModule = 0;\n            dStack36 = dStack36 & 0xffffffff;\n            pcVar6 = fcn.00c0c304();\n            (*pcVar6)();\n            if (hLibModule != 0) {\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n            }\n        }\n        goto code_r0x00bd1ba5;\n    case 0x1f:\n    case 0x5e:\n        goto code_r0x00b9c7a8;\n    case 0x20:\n        fcn.00b99a20();\n        *pdVar9 = 6;\n        goto code_r0x00b9c7b4;\n    case 0x21:\n    case 0x27:\n        fcn.00b99a20();\n        *pdVar9 = 3;\n        goto code_r0x00b9c7b4;\n    case 0x22:\n        fcn.00b99a20();\n        *pdVar9 = 9;\n        goto code_r0x00b9c7b4;\n    case 0x23:\n        fcn.00b99a20();\n        *pdVar9 = 5;\n        goto code_r0x00b9c7b4;\n    case 0x24:\n        fcn.00b99a20();\n        *pdVar9 = 10;\n        goto code_r0x00b9c7b4;\n    case 0x25:\n        fcn.00b99a20();\n        *pdVar9 = 0x40;\n        goto code_r0x00b9c7b4;\n    case 0x26:\n        fcn.00b99a20();\n        *pdVar9 = 0x41;\n        goto code_r0x00b9c7b4;\n    case 0x28:\n        fcn.00b99a20();\n        *pdVar9 = 2;\n        goto code_r0x00b9c7b4;\n    case 0x29:\n        fcn.00b99a20();\n        *pdVar9 = 7;\n        goto code_r0x00b9c7b4;\n    case 0x2a:\n        fcn.00b99a20();\n        *pdVar9 = 8;\n        goto code_r0x00b9c7b4;\n    case 0x2b:\n        fcn.00b99a20();\n        *pdVar9 = 4;\n        goto code_r0x00b9c7b4;\n    case 0x2c:\n    case 0x5d:\n    case 0x5f:\n        goto code_r0x00bd1e5f;\n    case 0x2d:\n        fcn.00b99a20();\n        *pdVar9 = 0x42;\n        goto code_r0x00b9c7b4;\n    case 0x2e:\n        fcn.00b99a20();\n        *pdVar9 = 0x43;\n        goto code_r0x00b9c7b4;\n    case 0x2f:\n        cVar2 = *0xc56288;\n        goto code_r0x00bd1e81;\n    case 0x30:\n        cVar2 = *0xc56899;\ncode_r0x00bd1e81:\n        if (cVar2 == '\\x01') {\ncode_r0x00bd1e5f:\n            fcn.00b99a20();\n            *(pdVar9 + 0xc) = 1;\n            *pdVar9 = 1;\n        }\n        else {\n            fcn.00b99a20();\n            *pdVar9 = 0;\n            *(pdVar9 + 0xc) = 1;\n        }\n        goto code_r0x00b9c77e;\n    case 0x31:\n        puVar4 = hWnd + 200;\n        goto code_r0x00b9c775;\n    case 0x32:\n        puVar4 = hWnd + 0xb8;\n        goto code_r0x00b9c775;\n    case 0x33:\n        puVar4 = hWnd + 0xd8;\n        goto code_r0x00b9c775;\n    case 0x34:\n        var_44h = fcn.00beff75(*(hWnd + 0xf4));\n        goto code_r0x00bd1b0b;\n    case 0x35:\n        (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, &fcn.00b9c707::lpBuffer);\n        goto code_r0x00bd1ba5;\n    case 0x36:\n        pcVar10 = L\"WIN32_NT\";\n        goto code_r0x00b9c799;\n    case 0x37:\n        if (*(*0xc57428 + 0x30) == '\\x01') {\n            pcVar10 = L\"WIN_10\";\n        }\n        else if (*(*0xc57428 + 0x32) == '\\x01') {\n            pcVar10 = L\"WIN_2016\";\n        }\n        else if (*(*0xc57428 + 0x2c) == '\\x01') {\n            pcVar10 = L\"WIN_81\";\n        }\n        else if (*(*0xc57428 + 0x2e) == '\\x01') {\n            pcVar10 = L\"WIN_2012R2\";\n        }\n        else if (*(*0xc57428 + 0x2a) == '\\x01') {\n            pcVar10 = L\"WIN_2012\";\n        }\n        else if (*(*0xc57428 + 0x28) == '\\x01') {\n            pcVar10 = L\"WIN_8\";\n        }\n        else if (*(*0xc57428 + 0x26) == '\\x01') {\n            pcVar10 = L\"WIN_2008R2\";\n        }\n        else if (*(*0xc57428 + 0x24) == '\\x01') {\n            pcVar10 = L\"WIN_7\";\n        }\n        else if (*(*0xc57428 + 0x22) == '\\x01') {\n            pcVar10 = L\"WIN_2008\";\n        }\n        else if (*(*0xc57428 + 0x20) == '\\x01') {\n            pcVar10 = L\"WIN_VISTA\";\n        }\n        else if (*(*0xc57428 + 0x1e) == '\\x01') {\n            pcVar10 = L\"WIN_2003\";\n        }\n        else if (*(*0xc57428 + 0x1c) == '\\x01') {\n            pcVar10 = L\"WIN_XPe\";\n            if (*(*0xc57428 + 0x38) == '\\0') {\n                pcVar10 = L\"WIN_XP\";\n            }\n        }\n        else {\n            pcVar10 = L\"UNKNOWN\";\n        }\n        goto code_r0x00b9c799;\n    case 0x38:\n        var_44h = *(*0xc57428 + 8);\n        goto code_r0x00bd1b0b;\n    case 0x39:\n        puVar4 = *0xc57428 + 0xc;\n        goto code_r0x00b9c775;\n    case 0x3a:\n        fcn.00b935b0(L\"InstallLanguage\", 0x104, &fcn.00b9c707::lpBuffer);\n        goto code_r0x00bd1ba5;\n    case 0x3b:\n    case 0x3c:\n        iVar1 = *(*0xc57428 + 0x36);\n        if (iVar1 == 0) {\n            pcVar10 = 0xc4adc0;\n        }\n        else if (iVar1 == 6) {\n            pcVar10 = L\"IA64\";\n        }\n        else if (iVar1 == 9) {\n            pcVar10 = 0xc4add4;\n        }\n        else {\n            pcVar10 = L\"UNKNOWN\";\n        }\n        goto code_r0x00b9c799;\n    case 0x3d:\n        puVar4 = cpuid(0x80000001);\n        var_80h = *puVar4;\n        uStack128 = puVar4[1];\n        var_74h = puVar4[2];\n        uStack124 = puVar4[3];\n        pcVar10 = 0xc4add4;\n        if ((var_74h & 0x20000000) == 0) {\n            pcVar10 = 0xc4adc0;\n        }\n        goto code_r0x00b9c799;\n    case 0x3e:\n        (*_sym.imp.USER32.dll_GetKeyboardLayoutNameW)(&fcn.00b9c707::pwszKLID);\n        pcVar10 = &fcn.00b9c707::pwszKLID;\n        goto code_r0x00b9c799;\n    case 0x3f:\n        fcn.00bb2ffc(&fcn.00b9c707::lpBuffer, L\"3, 3, 14, 5\");\n        hDC = NULL;\n        iVar7 = fcn.00bb2e3c(&fcn.00b9c707::lpBuffer);\n        iVar5 = iVar3;\n        if (0 < iVar7) {\n            do {\n                iVar1 = *(&fcn.00b9c707::lpBuffer + iVar5 * 2);\n                if (iVar1 != 0x20) {\n                    if (iVar1 == 0x2c) {\n                        *(&fcn.00b9c707::lpBuffer + iVar3 * 2) = 0x2e;\n                    }\n                    else {\n                        *(&fcn.00b9c707::lpBuffer + iVar3 * 2) = iVar1;\n                    }\n                    iVar3 = iVar3 + 1;\n                }\n                iVar5 = iVar5 + 1;\n                iVar7 = fcn.00bb2e3c(&fcn.00b9c707::lpBuffer);\n            } while (iVar5 < iVar7);\n        }\n        *(&fcn.00b9c707::lpBuffer + iVar3 * 2) = 0;\n        goto code_r0x00bd1ba5;\n    case 0x40:\n        fcn.00b94864();\n        goto code_r0x00bd1d1b;\n    case 0x41:\n        goto code_r0x00bd2145;\n    case 0x42:\n        goto code_r0x00bd2145;\n    case 0x43:\n        goto code_r0x00bd2145;\n    case 0x44:\ncode_r0x00bd2145:\n        fcn.00bf48f3();\n        pcVar10 = &fcn.00b9c707::var_70h;\n        goto code_r0x00b9c799;\n    case 0x45:\n        pcVar10 = 0xc4ad7c;\n        goto code_r0x00b9c799;\n    case 0x46:\n        pcVar10 = 0xc22bb8;\n        goto code_r0x00b9c799;\n    case 0x47:\n        pcVar10 = 0xc4a470;\n        goto code_r0x00b9c799;\n    case 0x48:\n        uVar11 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&fcn.00b9c707::var_50h);\n        (*_sym.imp.USER32.dll_GetWindowRect)(uVar11);\n        var_44h = var_48h;\n        goto code_r0x00bd1b0b;\n    case 0x49:\n        uVar11 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&fcn.00b9c707::var_50h);\n        (*_sym.imp.USER32.dll_GetWindowRect)(uVar11);\n        goto code_r0x00bd1b0b;\n    case 0x4a:\n        uVar8 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        dStack36 = dStack36 & 0xffffffff | uVar8 << 0x20;\n        hDC = (*_sym.imp.USER32.dll_GetDC)(uVar8);\n        uVar11 = 0xc;\n        goto code_r0x00bd21ad;\n    case 0x4b:\n        uVar8 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        dStack36 = dStack36 & 0xffffffff | uVar8 << 0x20;\n        hDC = (*_sym.imp.USER32.dll_GetDC)(uVar8);\n        uVar11 = 0x74;\ncode_r0x00bd21ad:\n        uVar11 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(hDC, uVar11);\n        pdVar9 = arg_ch;\n        fcn.00b99a20();\n        *(pdVar9 + 0xc) = 1;\n        *pdVar9 = uVar11;\n        (*_sym.imp.USER32.dll_ReleaseDC)(hWnd, hDC);\n        iVar3 = 0;\n        goto code_r0x00b9c77e;\n    case 0x4c:\n        if ((*0xc562e0 == 3) || (*0xc562e0 == 4)) goto code_r0x00bd1e5f;\n        goto code_r0x00b9c7a8;\n    case 0x4d:\n        pcVar10 = L\"COMSPEC\";\n        goto code_r0x00bd2203;\n    case 0x4e:\n        pcVar10 = 0xc4ad80;\n        goto code_r0x00b9c799;\n    case 0x4f:\n        pcbBuffer = 0x104;\n        (*_sym.imp.ADVAPI32.dll_GetUserNameW)(&fcn.00b9c707::lpBuffer, &fcn.00b9c707::pcbBuffer);\n        goto code_r0x00bd1ba5;\n    case 0x50:\n        (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, &fcn.00b9c707::lpBuffer);\n        fcn.00bb07a1();\n        goto code_r0x00bd1ba5;\n    case 0x51:\n        pcVar10 = L\"USERPROFILE\";\n        goto code_r0x00bd2203;\n    case 0x52:\n        pcVar10 = L\"HOMEDRIVE\";\n        goto code_r0x00bd2203;\n    case 0x53:\n        pcVar10 = L\"HOMEPATH\";\n        goto code_r0x00bd2203;\n    case 0x54:\n        pcVar10 = L\"HOMESHARE\";\n        goto code_r0x00bd2203;\n    case 0x55:\n        pcVar10 = L\"LOGONSERVER\";\n        goto code_r0x00bd2203;\n    case 0x56:\n        pcVar10 = L\"USERDOMAIN\";\n        goto code_r0x00bd2203;\n    case 0x57:\n        pcVar10 = L\"USERDNSDOMAIN\";\ncode_r0x00bd2203:\n        (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(pcVar10, &fcn.00b9c707::lpBuffer, 0x104);\n        goto code_r0x00bd1ba5;\n    case 0x58:\n    case 0x59:\n        goto code_r0x00b9c77e;\n    case 0x5a:\n        var_44h = *(hWnd + 0x148);\ncode_r0x00bd1b0b:\n        pdVar9 = arg_ch;\n        fcn.00b99a20();\n        *pdVar9 = var_44h;\ncode_r0x00b9c7b4:\n        iVar3 = 0;\n        *(pdVar9 + 0xc) = 1;\n        goto code_r0x00b9c77e;\n    case 0x5b:\n        puVar4 = hWnd + 0x14c;\n        goto code_r0x00b9c775;\n    case 0x5c:\n        hDC = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        pdVar9 = arg_ch;\n        dStack36 = hDC;\n        if (hDC < 0) {\n            dStack36 = dStack36 + *0xc4bac8;\n        }\n        fcn.00b99a20();\n        *pdVar9 = dStack36;\n        *(pdVar9 + 0xc) = 3;\n        goto code_r0x00b9c77e;\n    case 0x60:\n        fcn.00b935b0(L\"SchemeLangID\", 0x104, &fcn.00b9c707::lpBuffer);\n        pcbBuffer = lpBuffer;\n        fcn.00bafd71(pcbBuffer, 0);\ncode_r0x00bd1ba5:\n        pcVar10 = &fcn.00b9c707::lpBuffer;\ncode_r0x00b9c799:\n        iVar3 = 0;\n        fcn.00b99bf8(pcVar10);\n        goto code_r0x00b9c77e;\n    default:\n        fcn.00b97f41(0xc4ad20);\n        fcn.00b97c8e(hDC);\n        hDC = NULL;\n        iVar5 = fcn.00b9859a(&fcn.00b9c707::var_40h, &fcn.00b9c707::hDC, 0);\n        if (iVar5 == 0) {\n            iVar3 = -1;\n        }\n        else {\n            fcn.00b99e9c(iVar5);\n        }\ncode_r0x00bd1c08:\n        fcn.00b95a64();\n        goto code_r0x00b9c77e;\n    }\n    fcn.00bf49ff();\ncode_r0x00bd1d1b:\n    puVar4 = &fcn.00b9c707::var_10h;\ncode_r0x00b9c775:\n    fcn.00b99b9c(puVar4);\ncode_r0x00b9c77e:\n    fcn.00b95a64();\n    return iVar3;\ncode_r0x00b9c7a8:\n    fcn.00b99a20();\n    *pdVar9 = 0;\n    goto code_r0x00b9c7b4;\n}\n",
        "token_count": 6000
    },
    "00b9fe40": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b9fe40(uint arg_8h, int32_t arg_ch, uint32_t **arg_10h, uint *arg_14h, uchar *arg_18h)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    int32_t *piVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    ushort *puVar9;\n    uint *puVar10;\n    char *pcVar11;\n    int32_t in_ECX;\n    uint32_t *puVar12;\n    uint32_t *puVar13;\n    uint32_t *puVar14;\n    uint uVar15;\n    uint32_t *puVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t *puVar20;\n    uint32_t *unaff_EDI;\n    int32_t iVar21;\n    int32_t **ppiVar22;\n    int32_t iVar23;\n    uint32_t *puVar24;\n    uchar *arg_8h_00;\n    uchar *puVar25;\n    uint32_t *arg_14h_00;\n    uint uStack188;\n    int32_t *piStack184;\n    uint32_t *puStack180;\n    int32_t iStack176;\n    uint32_t *puStack172;\n    int32_t iStack168;\n    int32_t iStack164;\n    uint32_t *puStack160;\n    int32_t iStack156;\n    uint32_t *puStack152;\n    uint32_t uStack148;\n    uint32_t uStack144;\n    uint32_t uStack140;\n    int32_t iStack136;\n    uint32_t *puStack132;\n    uint32_t *puStack128;\n    uint32_t uStack124;\n    int32_t iStack120;\n    uint32_t uStack116;\n    uint32_t uStack112;\n    uint32_t *puStack108;\n    uint uStack104;\n    uint uStack96;\n    uint32_t uStack92;\n    uint uStack84;\n    uint uStack72;\n    uint uStack64;\n    uint uStack60;\n    uchar uStack56;\n    uint uStack52;\n    uchar uStack48;\n    uchar auStack44 [4];\n    uint uStack40;\n    uint uStack32;\n    uint uStack28;\n    uchar uStack24;\n    \n    iStack168 = 3;\n    piVar3 = *(*(arg_ch + 4) + *arg_10h * 4);\n    uStack140 = *(piVar3 + 10);\n    puVar10 = *piVar3;\n    uVar15 = *puVar10;\n    puVar8 = puVar10[1];\n    puVar24 = puVar10[2];\n    arg_14h_00 = puVar10[3];\n    *arg_14h_00 = *arg_14h_00 + 1;\n    iStack176 = in_ECX;\n    uStack148 = fcn.00b982e0(uVar15, puVar8, puVar24, arg_14h_00);\n    if (uStack148 == 0) {\n        fcn.00bfa0b5(0x85, iStack156);\n        return 0xffffffff;\n    }\n    uStack84 = *(in_ECX + 0x148);\n    uStack116 = 0;\n    uStack104 = 0;\n    puVar12 = *arg_10h + 1;\n    uStack96 = 0;\n    puStack160 = NULL;\n    puStack128 = NULL;\n    iStack120 = 0;\n    uStack144 = 0;\n    uStack112 = 0;\n    uStack92 = 1;\n    uStack140 = 0xc1fb84;\n    iStack136 = 0;\n    iVar5 = *(*(arg_ch + 4) + puVar12 * 4);\n    puStack132 = NULL;\n    uStack124 = 0xc21cc0;\n    *arg_10h = puVar12;\n    if (*(iVar5 + 8) == 0x47) {\n        puStack180 = puVar12;\n        iVar5 = fcn.00b9f394(arg_ch, arg_10h, &stack0xffffff4c, &stack0xffffff3c);\n        if (-1 < iVar5) {\n            iVar5 = *(iStack164 + 0x10);\n            if ((*0xc572a0 < iVar5) || (iVar5 < 1)) {\n                puVar6 = NULL;\n            }\n            else {\n                puVar6 = iVar5 * 0x10 + *0xc572dc;\n            }\n            ppiVar22 = puVar6[1];\n            if ((*(*ppiVar22 + 2) == 0) && (**ppiVar22 == 0x2b)) {\n                puVar13 = 0x4;\n                unaff_EDI = 0x4;\n            }\n            else {\n                puVar13 = 0x3;\n            }\n            uStack188 = NULL;\n            piStack184 = NULL;\n            puVar16 = NULL;\n            puVar20 = puVar13;\n            puVar14 = puVar12;\n            if (0 < *(iStack164 + 0x14)) {\n                do {\n                    if (puVar8 <= puVar12) break;\n                    puStack172 = puVar16 + 1;\n                    cVar4 = '\\0';\n                    puStack152 = NULL;\n                    if (*(ppiVar22[puVar13] + 2) == 0) {\n                        puStack108 = *(iStack176 + 4);\n                        cVar4 = '\\0';\n                        do {\n                            if ((*(puStack108[puVar13 + 1] + 8) != 0x33) &&\n                               (*puStack108[puVar13] == *puStack108[puVar13 + 1])) {\ncode_r0x00bd4c13:\n                                fcn.00bfa0b5(0x91, *(*(*(iStack176 + 4) + 4 + unaff_EDI * 4) + 10));\n                                goto code_r0x00bd4fc2;\n                            }\n                            if (*puStack108[puVar13] == 0x24) {\n                                cVar4 = '\\x01';\n                            }\n                            else {\n                                if (*puStack108[puVar13] != 0x1e) goto code_r0x00bd4c13;\n                                puStack152 = 0x100;\n                            }\n                            unaff_EDI = unaff_EDI + 1;\n                            puVar13 = unaff_EDI;\n                        } while (*(ppiVar22[unaff_EDI] + 2) == 0);\n                    }\n                    if (*(*(*(arg_ch + 4) + puVar12 * 4) + 8) != 0x33) {\n                        cVar4 = '\\0';\n                    }\n                    puVar12 = puVar20;\n                    puVar8 = puVar14;\n                    iVar5 = iStack120;\n                    if (uStack116 == uStack144) {\n                        uStack144 = uStack144 * 2;\n                        if (uStack144 < 8) {\n                            uStack144 = 8;\n                        }\n                        uStack112 = uStack144;\n                        iVar5 = fcn.00bb0ff6(-(uStack144 * 4 >> 0x20 != 0) | uStack144 * 4);\n                        puVar12 = puVar20;\n                        puVar8 = puVar14;\n                        if ((iStack120 != 0) && (uStack116 != 0)) {\n                            fcn.00bb1080(iVar5, iStack120, uStack116 << 2);\n                            fcn.00bb106c(iStack120);\n                            puVar12 = puVar20;\n                            puVar8 = puVar14;\n                        }\n                    }\n                    iStack120 = iVar5;\n                    uVar19 = uStack116;\n                    pcVar11 = fcn.00bb0ff6(1);\n                    if (pcVar11 == NULL) {\n                        pcVar11 = NULL;\n                    }\n                    else {\n                        *pcVar11 = cVar4;\n                    }\n                    *(iStack120 + uVar19 * 4) = pcVar11;\n                    uStack116 = uVar19 + 1;\n                    fcn.00b99a20();\n                    uStack92 = 1;\n                    uStack104 = 0;\n                    iVar5 = iStack136;\n                    if (puStack132 == puStack160) {\n                        puStack160 = puStack160 * 2;\n                        if (puStack160 < 0x8) {\n                            puStack160 = 0x8;\n                        }\n                        puStack128 = puStack160;\n                        iVar5 = fcn.00bb0ff6(-(ZEXT48(puStack160) * 4 >> 0x20 != 0) | ZEXT48(puStack160) * 4);\n                        if ((iStack136 != 0) && (puStack132 != NULL)) {\n                            fcn.00bb1080(iVar5, iStack136, puStack132 * 4);\n                            fcn.00bb106c(iStack136);\n                        }\n                    }\n                    iStack136 = iVar5;\n                    iVar5 = fcn.00bb0ff6(0x10);\n                    if (iVar5 == 0) {\n                        iVar5 = 0;\n                    }\n                    else {\n                        *(iVar5 + 8) = 0;\n                        fcn.00b99ac0(&stack0xffffff98);\n                    }\n                    *(iStack136 + puStack132 * 4) = iVar5;\n                    puStack132 = puStack132 + 1;\n                    if (cVar4 == '\\0') {\n                        iVar5 = fcn.00b9a000(arg_ch, &stack0xffffff4c, arg_ch, puVar8);\n                        if (iVar5 < 0) goto code_r0x00bd4fc2;\n                        puVar20 = puVar12 + 1;\n                        puVar13 = puVar20;\n                        if (*(*(puVar6[1] + puVar20 * 4) + 8) == 0x41) {\n                            puVar13 = puVar12 + 2;\n                            iVar5 = 0;\n                            do {\n                                iVar2 = *(*(puVar6[1] + puVar13 * 4) + 8);\n                                if (iVar2 == 0x47) {\n                                    iVar5 = iVar5 + 1;\n                                }\n                                else {\n                                    unaff_EDI = puVar13;\n                                    if (iVar2 == 0x48) {\n                                        iVar5 = iVar5 + -1;\n                                        if (iVar5 < 0) break;\n                                    }\n                                    else if ((iVar2 == 0x40) && (iVar5 == 0)) break;\n                                }\n                                puVar13 = puVar13 + 1;\n                            } while( true );\n                        }\n                    }\n                    else {\n                        iVar7 = 1;\n                        iVar5 = fcn.00b9f803(arg_ch, &stack0xffffff4c, *(iStack136 + -4 + puStack132 * 4), puStack152, 1\n                                             , arg_ch, puVar8);\n                        if (iVar5 < 0) goto code_r0x00bd4fc2;\n                        puVar13 = iVar7 + 1;\n                        puVar20 = puVar12;\n                        unaff_EDI = puVar13;\n                    }\n                    puVar12 = puStack180;\n                    puVar14 = puVar8;\n                    if (puStack180 == puVar8) break;\n                    if ((*(*(*(arg_ch + 4) + puStack180 * 4) + 8) != 0x40) ||\n                       (puVar12 = puStack180 + 1,  puVar12 == puVar8)) {\n                        fcn.00bfa0b5(0x6f, *(*(*(arg_ch + 4) + puStack180 * 4) + 10));\n                        goto code_r0x00bd4fc2;\n                    }\n                    ppiVar22 = *(iStack176 + 4);\n                    if (*(ppiVar22[puVar13] + 2) == 0x40) {\n                        puVar13 = puVar13 + 1;\n                        unaff_EDI = puVar13;\n                    }\n                    iStack168 = iStack168 + 1;\n                    puVar16 = puStack172;\n                    puStack180 = puVar12;\n                } while (iStack168 < *(uStack148 + 0x14));\n            }\n            puVar13 = puStack172;\n            if (arg_8h != '\\0') {\n                if (puStack172 == NULL) {\n                    if (puVar12 != puVar8) {\n                        uStack188 = uStack188 & 0xffffff;\n                        fcn.00be6c62(&stack0xffffff47);\n                        fcn.00b99a20();\n                        uStack96 = 1;\n                        puStack108 = puVar13;\n                        fcn.00be6665(&stack0xffffff94);\n                        iVar5 = fcn.00b9a000(arg_ch, &stack0xffffff44, *((uStack144 - 4) + uStack140 * 4), arg_14h_00);\n                        if (iVar5 < 0) goto code_r0x00bd4fc2;\ncode_r0x00bd4ccd:\n                        puVar8 = arg_14h_00;\n                        iVar5 = fcn.00c0a5ee(&stack0xffffff74, &stack0xffffff54);\n                        puVar12 = uStack188;\n                        arg_14h_00 = puVar8;\n                        if ((iVar5 == 0) &&\n                           (fcn.00bb0a88(),  puVar12 = uStack188,  arg_14h_00 = puVar8,  0 < puStack180)) {\n                            puVar14 = puVar14 & 0xffffff;\n                            puVar13 = puStack180;\n                            puVar12 = puVar6;\n                            do {\n                                puVar8 = puVar24;\n                                fcn.00be6c62(&stack0xffffff3f);\n                                puVar13 = puVar13 + -1;\n                                puVar24 = puVar8;\n                                puVar6 = puVar12;\n                            } while (puVar13 != NULL);\n                        }\n                    }\n                }\n                else if (puStack172 == 0x1) goto code_r0x00bd4ccd;\n            }\n            iVar5 = iStack156;\n            if (((*(iStack156 + 0x18) <= puStack180) && (puStack180 <= *(iStack156 + 0x14))) && (puVar12 == puVar8)) {\n                puStack172 = *(iStack156 + 0x10);\n                iStack176 = 0;\n                if (puStack172 < 0) {\n                    puStack172 = NULL;\n                }\n                arg_8h_00 = &stack0xffffff50;\n                fcn.00b984dc(arg_8h_00);\n                puVar8 = puStack180;\n                if (puStack180 != NULL) {\n                    puVar25 = puStack180[6];\n                    if (puVar25 != NULL) {\n                        fcn.00b98720(puVar25);\n                        arg_8h_00 = puVar25;\n                    }\n                    puVar25 = puVar8[7];\n                    if (puVar25 != NULL) {\n                        fcn.00b98720(puVar25);\n                        arg_8h_00 = puVar25;\n                    }\n                    if ((*(puVar8 + 4) == '\\0') && (puVar25 = puVar8[5],  puVar25 != NULL)) {\n                        fcn.00be6621();\n                        arg_8h_00 = puVar25;\n                    }\n                    fcn.00b95a64(arg_8h_00);\n                    fcn.00bb106c(puVar8);\n                }\n                if (0 < *(iVar5 + 0x14)) {\n                    uStack148 = uStack112 - puStack128;\n                    puVar6 = 0x1;\n                    puStack152 = puStack128;\ncode_r0x00ba0300:\n                    iVar5 = iStack176 * 4;\n                    uVar19 = 0;\n                    iVar7 = *(iStack168 + 4);\n                    iVar2 = *(*(iVar7 + iVar5) + 8);\n                    iVar23 = iStack176;\n                    while (iVar2 == 0) {\n                        if (**(iVar7 + iVar5) == 0x24) {\ncode_r0x00bd4d8e:\n                            iVar23 = iVar23 + 1;\n                        }\n                        else if (**(iVar7 + iVar5) == 0x1e) {\n                            uVar19 = 0x100;\n                            goto code_r0x00bd4d8e;\n                        }\n                        iVar5 = iVar23 * 4;\n                        iVar2 = *(*(iVar7 + iVar23 * 4) + 8);\n                    }\n                    iVar21 = 0;\n                    puVar8 = 0x1;\n                    iVar5 = iVar23 * 4;\n                    do {\n                        iVar5 = iVar5 + 4;\n                        iVar2 = *(*(iVar7 + iVar5) + 8);\n                        if (iVar2 == 0x47) {\n                            iVar21 = iVar21 + 1;\n                        }\n                        else if (iVar2 == 0x48) {\n                            iVar21 = iVar21 + -1;\n                            if (iVar21 < 0) goto code_r0x00ba036d;\n                        }\n                        else if ((iVar2 == 0x40) && (iVar21 == 0)) goto code_r0x00ba036d;\n                        puVar8 = puVar8 + 1;\n                    } while( true );\n                }\ncode_r0x00ba000e:\n                piVar3 = piStack184;\n                uStack72 = 0;\n                uStack64 = 0;\n                piStack184[0x52] = iStack164;\n                uStack60 = 1;\n                uStack56 = 0;\n                uStack52 = 0;\n                iVar5 = *(*piStack184 + 4);\n                uStack48 = 0;\n                uStack40 = 0;\n                uStack32 = 0;\n                uStack28 = 1;\n                uStack24 = 0;\n                if (*(piStack184 + iVar5 + 0xd) == '\\0') {\n                    iVar7 = fcn.00bb0ff6(0x40);\n                    if (iVar7 == 0) {\n                        iVar7 = 0;\n                    }\n                    else {\n                        *(iVar7 + 8) = 0;\n                        fcn.00b99ac0(&stack0xffffffb8);\n                        *(iVar7 + 0x10) = 0;\n                        *(iVar7 + 0x14) = 0;\n                        *(iVar7 + 0x18) = 0;\n                        *(iVar7 + 0x28) = 0;\n                        fcn.00b99ac0(&stack0xffffffd4);\n                        *(iVar7 + 0x30) = 0;\n                    }\n                    *(iVar7 + 0x38) = *(piVar3 + iVar5 + 8);\n                    *(piVar3 + iVar5 + 8) = iVar7;\n                }\n                else {\n                    fcn.00bf9d71(&stack0xffffffb8);\n                    *(piVar3 + iVar5 + 0xd) = 0;\n                }\n                puVar8 = piVar3 + 0x57;\n                piVar1 = piVar3 + iVar5 + 4;\n                *piVar1 = *piVar1 + 1;\n                uVar17 = piVar3[0x3d];\n                uVar18 = *puVar8;\n                fcn.00ba0b30(0xba0112);\n                uVar19 = *puVar8;\n                while (uVar18 < uVar19) {\n                    fcn.00bafdcf();\n                    uVar19 = *puVar8;\n                }\n                puVar6[0x3d] = uVar17;\n                iVar5 = *(*puVar6 + 4);\n                iVar7 = *(iVar5 + 8 + puVar6);\n                if (*(puVar6 + iVar5 + 0xd) != '\\0') {\n                    iVar7 = *(iVar7 + 0x38);\n                }\n                if (*(iVar7 + 0x10) == '\\0') {\n                    *arg_18h = 0;\n                    fcn.00b99a20();\n                    arg_14h[3] = 1;\n                    *arg_14h = 0;\n                }\n                else {\n                    cVar4 = *(puVar6 + iVar5 + 0xd);\n                    *arg_18h = 1;\n                    if (cVar4 == '\\0') {\n                        puVar10 = *(puVar6 + iVar5 + 8);\n                    }\n                    else {\n                        puVar10 = *(*(puVar6 + iVar5 + 8) + 0x38);\n                    }\n                    if (arg_14h != puVar10) {\n                        if ((arg_14h[3] == 4) && (puVar10[3] == 4)) {\n                            fcn.00b981a7(puVar10[2]);\n                        }\n                        else {\n                            fcn.00b99a20();\n                            fcn.00b99ac0(puVar10);\n                        }\n                    }\n                }\n                iVar5 = *(*puVar6 + 4);\n                iVar7 = *(iVar5 + 8 + puVar6);\n                if (*(puVar6 + iVar5 + 0xd) != '\\0') {\n                    iVar7 = *(iVar7 + 0x38);\n                }\n                if (*(iVar7 + 0x18) != '\\0') {\n                    iVar7 = fcn.00baff9a();\n                    uStack64 = *(iVar7 + 0x14);\n                }\n                iVar7 = *(puVar6 + iVar5 + 8);\n                if (*(puVar6 + iVar5 + 0xd) != '\\0') {\n                    iVar7 = *(iVar7 + 0x38);\n                }\n                if (*(iVar7 + 0x30) != '\\0') {\n                    iVar5 = fcn.00baff9a();\n                    fcn.00b99e9c(iVar5 + 0x20);\n                }\n                iVar5 = *(*puVar6 + 4);\n                if (*(puVar6 + iVar5 + 0xd) != '\\0') {\n                    iVar7 = *(puVar6 + iVar5 + 8);\n                    uVar15 = *(iVar7 + 0x38);\n                    if (iVar7 != 0) {\n                        fcn.00bb001c();\n                    }\n                    *(puVar6 + iVar5 + 8) = uVar15;\n                    *(puVar6 + iVar5 + 0xd) = 0;\n                }\n                if (*(puVar6 + iVar5 + 0xc) == '\\0') {\n                    iVar7 = *(puVar6 + iVar5 + 8);\n                    uVar15 = *(iVar7 + 0x38);\n                    if (iVar7 != 0) {\n                        fcn.00b99a20();\n                        fcn.00b99a20();\n                        fcn.00bb106c(iVar7);\n                    }\n                    *(puVar6 + iVar5 + 8) = uVar15;\n                    *(puVar6 + iVar5 + 0xd) = 0;\n                }\n                else {\n                    *(puVar6 + iVar5 + 0xd) = 1;\n                    puVar14 = puVar6;\n                }\n                piVar3 = puVar6 + iVar5 + 4;\n                *piVar3 = *piVar3 + -1;\n                iVar5 = *(*puVar14 + 4);\n                iVar7 = *(iVar5 + 8 + puVar14);\n                if (*(puVar14 + iVar5 + 0xd) != '\\0') {\n                    iVar7 = *(iVar7 + 0x38);\n                }\n                *(iVar7 + 0x14) = uStack64;\n                iVar7 = *(puVar14 + iVar5 + 8);\n                if (*(puVar14 + iVar5 + 0xd) != '\\0') {\n                    iVar7 = *(iVar7 + 0x38);\n                }\n                *(iVar7 + 0x18) = 0;\n                iVar5 = *(*puVar14 + 4);\n                fcn.00b99e9c(&stack0xffffffcc);\n                iVar7 = *(puVar14 + iVar5 + 8);\n                if (*(puVar14 + iVar5 + 0xd) != '\\0') {\n                    iVar7 = *(iVar7 + 0x38);\n                }\n                *(iVar7 + 0x30) = 0;\n                fcn.00b9843f();\n                puVar14[0x52] = uStack92;\n                uVar15 = 0;\n                iStack176 = 0;\n                fcn.00b99a20();\n                fcn.00b99a20();\n                goto code_r0x00ba0291;\n            }\n            if (arg_8h == '\\0') {\n                fcn.00bfa0b5(0x70, iStack164);\n            }\n            else {\n                *arg_10h = *arg_10h + -2;\n            }\n        }\n    }\n    else {\n        fcn.00bfa0b5(0x6f, iStack156);\n    }\ncode_r0x00bd4fc2:\n    uVar15 = 0xffffffff;\n    iStack176 = 0xffffffff;\ncode_r0x00ba0291:\n    fcn.00b99a20();\n    uVar19 = uStack124;\n    puVar8 = puStack128;\n    uVar17 = 0;\n    if (uStack124 != 0) {\n        do {\n            fcn.00bb106c(puVar8[uVar17]);\n            puVar8[uVar17] = 0;\n            uVar17 = uVar17 + 1;\n            uVar15 = iStack176;\n        } while (uVar17 < uVar19);\n    }\n    fcn.00bb106c(puStack128);\n    uVar18 = 0;\n    uVar19 = uStack140;\n    uVar17 = uStack144;\n    if (uStack140 != 0) {\n        do {\n            iVar5 = *(uVar17 + uVar18 * 4);\n            if (iVar5 != 0) {\n                fcn.00b99df0();\n                fcn.00bb106c(iVar5);\n                uVar19 = uStack140;\n                uVar17 = uStack144;\n            }\n            *(uVar17 + uVar18 * 4) = 0;\n            uVar18 = uVar18 + 1;\n        } while (uVar18 < uVar19);\n    }\n    fcn.00bb106c(uStack144);\n    return uVar15;\ncode_r0x00ba036d:\n    uStack188 = puVar8;\n    iStack176 = iVar23;\n    if (iStack164 < puVar6) {\n        puStack160 = iVar23 + 2;\n        puVar24 = puVar6;\n        iVar5 = fcn.00b9a000(iStack168, &stack0xffffff60, &stack0xffffffa0, puVar8 + iVar23);\n        if (iVar5 < 0) goto code_r0x00bd4fc2;\n        fcn.00b98620(**(piStack184[1] + puVar24 * 4), &stack0xffffff90, uVar19 | 0x200, 1);\n    }\n    else if (**(uStack148 + puStack152) == '\\0') {\n        uStack144 = *puStack152;\n        puVar24 = **(iVar7 + iVar23 * 4);\n        if (*0xc57280 == 0) {\n            fcn.00b98b13(puVar24, uStack144, uVar19 | 0x200);\n            puVar8 = unaff_EDI;\n            unaff_EDI = puVar8;\n        }\n        else {\n            puVar12 = *0xc57284;\n            if (*0xc57289 != '\\0') {\n                puVar12 = (*0xc57284)[2];\n            }\n            puVar6 = puVar12;\n            puStack160 = puVar12;\n            cVar4 = fcn.00b988a0(puVar24, puVar12);\n            if ((cVar4 == '\\0') || (*puVar12 == 0)) {\n                uStack144 = uVar19 | 0x200;\n                puVar8 = fcn.00bb0ff6(0x20);\n                if (puVar8 == NULL) {\n                    puVar8 = NULL;\n                }\n                else {\n                    puVar8[1] = 0;\n                    puVar8[2] = 8;\n                    puVar9 = fcn.00bb0ff6(0x10);\n                    *puVar8 = puVar9;\n                    *puVar9 = 0;\n                    puVar10 = fcn.00bb0ff6(4);\n                    if (puVar10 == NULL) {\n                        puVar10 = NULL;\n                    }\n                    else {\n                        *puVar10 = 1;\n                    }\n                    puVar8[3] = puVar10;\n                }\n                if (puVar8 != puVar24) {\n                    iVar5 = *puVar8[3];\n                    if (iVar5 < 2) {\n                        uVar19 = puVar24[1];\n                        puVar8[1] = uVar19;\n                        if (puVar8[2] < uVar19 + 1) {\n                            uVar17 = fcn.00b98170(uVar19 + 1);\n                            puVar8[2] = uVar17;\n                            if (*puVar8 != 0) {\n                                fcn.00bb106c(*puVar8);\n                            }\n                            uVar17 = fcn.00bb0ff6(-(puVar8[2] * 2 >> 0x20 != 0) | puVar8[2] * 2);\n                            *puVar8 = uVar17;\n                            *(uVar17 + uVar19 * 2) = 0;\n                        }\n                        fcn.00bb1080(*puVar8, *puVar24, puVar8[1] * 2 + 2);\n                        puVar12 = puStack172;\n                    }\n                    else {\n                        *puVar8[3] = iVar5 + -1;\n                        puVar8[1] = puVar24[1];\n                        puVar8[2] = puVar24[2];\n                        *puVar8 = *puVar24;\n                        piVar3 = puVar24[3];\n                        puVar8[3] = piVar3;\n                        *piVar3 = *piVar3 + 1;\n                    }\n                }\n                puVar8[4] = uStack148;\n                uVar19 = fcn.00bb0ff6(0x10);\n                if (uVar19 == 0) {\n                    uVar19 = 0;\n                }\n                else {\n                    *(uVar19 + 8) = 0;\n                    fcn.00b99ac0(iStack156);\n                }\n                puVar8[5] = uVar19;\n                puVar8[7] = 0;\n                puVar8[6] = 0;\n                uVar19 = fcn.00b987c0(puVar8, *puVar12);\n                *puVar12 = uVar19;\n            }\n            else {\n                puVar6 = arg_14h_00;\n                puVar8 = unaff_EDI;\n                fcn.00b99e9c(puStack152);\n                arg_14h_00 = puVar6;\n                unaff_EDI = puVar8;\n            }\n        }\n    }\n    else {\n        if ((*puStack152)[3] == 6) {\n            uVar15 = **puStack152;\n        }\n        else {\n            uVar15 = 0;\n        }\n        cVar4 = fcn.00bf5bd9(**(iVar7 + iVar23 * 4), uVar15, uVar19 | 0x200, 1);\n        puVar8 = arg_14h_00;\n        arg_14h_00 = puVar8;\n        if (cVar4 == '\\0') {\n            fcn.00bfa0b5(0x79, *(*(piStack184[1] + iVar23 * 4) + 10));\n            goto code_r0x00bd4fc2;\n        }\n    }\n    puVar6 = puVar6 + 1;\n    puStack152 = puStack152 + 1;\n    iStack176 = iStack176 + 1 + puVar8;\n    if (*(uStack140 + 0x14) < puVar6) goto code_r0x00ba000e;\n    goto code_r0x00ba0300;\n}\n",
        "token_count": 7349
    },
    "00ba236a": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba236a(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint dwExStyle;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    dwExStyle = 0xffffffff;\n    arg_8h = 0;\n    var_4h = 0xffffffff;\n    uVar1 = *(iVar2 + 8);\n    var_ch = 0xffffffff;\n    var_8h = 0xffffffff;\n    var_14h = 0xffffffff;\n    var_10h = 0xffffffff;\n    if (7 < uVar1) {\n        arg_8h = fcn.00bf89bb();\n    }\n    if (6 < uVar1) {\n        var_4h = fcn.00b99c9c();\n    }\n    if (5 < uVar1) {\n        dwExStyle = fcn.00b99c9c();\n    }\n    if (4 < uVar1) {\n        var_10h = fcn.00b99c9c();\n    }\n    if (3 < uVar1) {\n        var_14h = fcn.00b99c9c();\n    }\n    if (2 < uVar1) {\n        var_8h = fcn.00b99c9c();\n    }\n    if (1 < uVar1) {\n        var_ch = fcn.00b99c9c();\n    }\n    iVar2 = **(iVar2 + 4);\n    fcn.00b99997();\n    iVar2 = fcn.00b927d9(**(iVar2 + 8), var_14h, var_10h, var_ch, var_8h, dwExStyle, var_4h, arg_8h);\n    if (iVar2 == 0) {\n        fcn.00be6aa3(1, 0);\n        fcn.00b99a20();\n        *arg_ch = 0;\n    }\n    else {\n        fcn.00b99a20();\n        *arg_ch = iVar2;\n    }\n    arg_ch[3] = 7;\n    return 0;\n}\n",
        "token_count": 524
    },
    "00ba24ab": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba24ab(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint uVar2;\n    uint arg_10h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h = 0xffffffff;\n    uVar2 = 0xffffffff;\n    var_10h = 0xffffffff;\n    var_ch = 0xffffffff;\n    var_8h = 0xffffffff;\n    var_4h = 0xffffffff;\n    iVar1 = fcn.00b99c9c();\n    if (iVar1 < 1) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n    }\n    else {\n        if (7 < *(arg_8h + 8)) {\n            var_4h = fcn.00b99c9c();\n        }\n        if (6 < *(arg_8h + 8)) {\n            var_8h = fcn.00b99c9c();\n        }\n        if (5 < *(arg_8h + 8)) {\n            var_ch = fcn.00b99c9c();\n        }\n        if (4 < *(arg_8h + 8)) {\n            var_10h = fcn.00b99c9c();\n        }\n        if (3 < *(arg_8h + 8)) {\n            uVar2 = fcn.00b99c9c();\n        }\n        if (2 < *(arg_8h + 8)) {\n            arg_10h = fcn.00b99c9c();\n        }\n        arg_ch_00 = fcn.00b99c9c();\n        arg_8h_00 = fcn.00b99c9c();\n        uVar2 = fcn.00b92f95(arg_8h_00, arg_ch_00, arg_10h, uVar2, var_10h, var_ch, var_8h, var_4h);\n        fcn.00b99a20();\n        *arg_ch = uVar2;\n    }\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 510
    },
    "00ba3b18": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba3b18(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t arg_ch_00;\n    int32_t **ppiVar2;\n    uint in_stack_ffffffe0;\n    uint var_4h;\n    \n    ppiVar2 = **(arg_8h + 4);\n    if (ppiVar2[3] == 0x6) {\n        ppiVar2 = *ppiVar2;\n    }\n    if (ppiVar2[3] == 0x5) {\n        if (*(arg_8h + 8) != 1) {\n            uVar1 = fcn.00b99c9c();\n            uVar1 = fcn.00b98e6b(uVar1);\n            fcn.00b99a20();\n            arg_ch[3] = 1;\n            *arg_ch = uVar1;\n            arg_ch_00 = fcn.00b99c9c();\n            if (arg_ch_00 != 0) {\n                return 0;\n            }\n            in_stack_ffffffe0 = 2;\ncode_r0x00bd77f4:\n            fcn.00be6aa3(in_stack_ffffffe0, arg_ch_00);\n            return 0;\n        }\n        uVar1 = fcn.00b98e6b(1);\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n    }\n    else {\n        if (ppiVar2[3] != 0xf) {\n            fcn.00b99a20();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n            arg_ch_00 = 1;\n            goto code_r0x00bd77f4;\n        }\n        uVar1 = *((*ppiVar2)[4] + 8);\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n    }\n    *arg_ch = uVar1;\n    return 0;\n}\n",
        "token_count": 452
    },
    "00ba49c0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00bd93d8)\n// WARNING: Removing unreachable block (ram,0x00ba4eda)\n// WARNING: Removing unreachable block (ram,0x00ba4bed)\n// WARNING: Removing unreachable block (ram,0x00bdac83)\n// WARNING: Removing unreachable block (ram,0x00bda792)\n// WARNING: Removing unreachable block (ram,0x00bdb4f2)\n// WARNING: Removing unreachable block (ram,0x00bdb677)\n// WARNING: Removing unreachable block (ram,0x00bdb7e5)\n// WARNING: Removing unreachable block (ram,0x00bdbcb7)\n// WARNING: Removing unreachable block (ram,0x00bdd2a8)\n// WARNING: Removing unreachable block (ram,0x00bdbc33)\n// WARNING: Removing unreachable block (ram,0x00bdba0a)\n// WARNING: Removing unreachable block (ram,0x00bdb932)\n// WARNING: Removing unreachable block (ram,0x00bdb72e)\n// WARNING: Removing unreachable block (ram,0x00bdb5b9)\n// WARNING: Removing unreachable block (ram,0x00bdae45)\n// WARNING: Removing unreachable block (ram,0x00bda9ab)\n// WARNING: Removing unreachable block (ram,0x00bda5eb)\n// WARNING: Removing unreachable block (ram,0x00bd9272)\n// WARNING: Removing unreachable block (ram,0x00bdf68d)\n// WARNING: Removing unreachable block (ram,0x00bdf60a)\n// WARNING: Removing unreachable block (ram,0x00bdee78)\n// WARNING: Removing unreachable block (ram,0x00bdf28c)\n// WARNING: Removing unreachable block (ram,0x00bdef5d)\n// WARNING: Removing unreachable block (ram,0x00bded8a)\n// WARNING: Removing unreachable block (ram,0x00ba4c50)\n// WARNING: Removing unreachable block (ram,0x00bdd32c)\n// WARNING: Removing unreachable block (ram,0x00bdd007)\n// WARNING: Removing unreachable block (ram,0x00bdcf08)\n// WARNING: Removing unreachable block (ram,0x00bdcdbb)\n// WARNING: Removing unreachable block (ram,0x00bd9460)\n// WARNING: Removing unreachable block (ram,0x00bdf38c)\n// WARNING: Removing unreachable block (ram,0x00bde229)\n// WARNING: Removing unreachable block (ram,0x00bdcc53)\n// WARNING: Removing unreachable block (ram,0x00bdcd07)\n// WARNING: Removing unreachable block (ram,0x00bdcaa6)\n// WARNING: Removing unreachable block (ram,0x00bdf03b)\n// WARNING: Removing unreachable block (ram,0x00bdf119)\n// WARNING: Removing unreachable block (ram,0x00bdcb98)\n// WARNING: Removing unreachable block (ram,0x00bde2c0)\n// WARNING: Type propagation algorithm not settling\n\nuint32_t __cdecl fcn.00ba49c0(uint16_t *arg_8h, uint16_t *arg_ch, uint32_t *arg_10h, uint *arg_14h, uint32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint32_t *puVar3;\n    char cVar4;\n    uint8_t uVar5;\n    uint16_t uVar6;\n    uint16_t uVar7;\n    uint32_t **ppuVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint16_t *in_ECX;\n    uint32_t uVar11;\n    uint16_t *puVar12;\n    uint16_t *puVar13;\n    int32_t iVar14;\n    uint16_t *puVar15;\n    uint16_t *puVar16;\n    uint16_t *in_EDX;\n    uint16_t *puVar17;\n    uint *puVar18;\n    bool bVar19;\n    bool bVar20;\n    uint var_14ch;\n    uint var_d0h;\n    uint32_t var_cch;\n    uint32_t var_c8h;\n    uint32_t var_c4h;\n    int32_t var_c0h;\n    int32_t var_bch;\n    int32_t var_b8h;\n    int32_t var_b4h;\n    uint32_t var_b0h;\n    uint32_t var_ach;\n    uint32_t var_a8h;\n    uint32_t var_a4h;\n    uint32_t var_a0h;\n    uint var_9ch;\n    uint32_t var_98h;\n    uint32_t var_94h;\n    uint32_t var_90h;\n    int32_t var_8ch;\n    int32_t var_88h;\n    int32_t var_84h;\n    int32_t var_80h;\n    uint32_t var_7ch;\n    uint32_t var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint32_t var_6ch;\n    uint var_68h;\n    uint *var_5ch;\n    uint16_t *var_58h;\n    uint32_t var_54h;\n    uint32_t var_50h;\n    uint *var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint16_t *var_40h;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint16_t *var_30h;\n    uint16_t *var_2ch;\n    uint16_t *var_28h;\n    uint32_t var_24h;\n    uint16_t *var_20h;\n    uint16_t *var_1ch;\n    uint16_t *var_18h;\n    uint16_t *var_14h;\n    uint16_t *var_10h;\n    uint16_t *var_ch;\n    uint16_t *var_8h;\n    \n    if (in_EDX == NULL) {\n        if (arg_18h == 0) {\n            uVar9 = fcn.00ba49c0(NULL, NULL, NULL, NULL, 1);\n            return uVar9;\n        }\n        uVar9 = &fcn.00ba49c0::arg_18h - in_ECX;\n        if (uVar9 < 1) {\n            return uVar9;\n        }\n        return -uVar9;\n    }\n    var_3ch = 0;\n    var_38h = 0;\n    uVar9 = *arg_10h;\n    var_24h = arg_10h[0x14];\n    var_30h = in_EDX;\n    var_8h = in_ECX;\n    if (arg_10h[1] <= uVar9) {\ncode_r0x00be0158:\n        *arg_10h = *arg_10h + 1;\n        return 0xfffffff8;\n    }\ncode_r0x00ba4a03:\n    *arg_10h = uVar9 + 1;\n    if (arg_10h[2] <= arg_18h) {\n        return 0xffffffeb;\n    }\n    puVar13 = var_8h;\n    if (arg_10h[0x27] == 2) {\n        var_58h = var_8h;\n        var_5ch = arg_14h;\n        arg_14h = &fcn.00ba49c0::var_5ch;\n        arg_10h[0x27] = 0;\n        in_ECX = var_8h;\n    }\ncode_r0x00ba4a1f:\n    var_8h = puVar13;\n    puVar13 = var_8h;\n    uVar9 = var_24h;\n    uVar11 = *in_EDX;\n    var_34h = 0;\n    var_2ch = NULL;\n    // switch table (162 cases) at 0xba5400\n    switch(uVar11) {\n    case 0:\n    case 0x9e:\n    case 0x9f:\n        if (((var_8h == arg_8h) && (uVar11 != 0x9f)) && (arg_10h[0x2a] == 0)) {\n            if (arg_10h[0x18] != 0) {\n                return 0;\n            }\n            if ((arg_10h[0x19] != 0) && (arg_8h == arg_10h[0x1e] + arg_10h[0x26] * 2)) {\n                return 0;\n            }\n        }\n        arg_10h[0x21] = var_8h;\n        arg_10h[0x24] = arg_ch;\n        arg_10h[0x20] = arg_8h;\n        if (uVar11 != 0) {\n            return 0xfffffc19;\n        }\n        return 1;\n    case 1:\n        goto code_r0x00bd8f62;\n    case 2:\n        if (in_ECX != arg_10h[0x1e] + arg_10h[0x26] * 2) {\n            return 0;\n        }\n        var_30h = in_EDX + 1;\n        in_EDX = var_30h;\n        goto code_r0x00ba4a1f;\n    case 3:\n        in_EDX = in_EDX + 1;\n        arg_8h = var_8h;\n        in_ECX = var_8h;\n        var_30h = in_EDX;\n        goto code_r0x00ba4a1f;\n    case 4:\n    case 5:\n        if (var_24h == 0) {\n            if (var_8h == arg_10h[0x1e]) {\ncode_r0x00bd942a:\n                iVar14 = 0;\n            }\n            else {\n                if (var_8h < arg_10h[0x22] || var_8h == arg_10h[0x22]) {\n                    arg_10h[0x22] = var_8h + -1;\n                }\n                uVar9 = var_8h[-1];\n                if (arg_10h[0x16] == 0) {\n                    if ((0xff < var_8h[-1]) || ((*(uVar9 + arg_10h[0x11]) & 0x10) == 0)) goto code_r0x00bd942a;\n                    iVar14 = 1;\n                }\n                else if (uVar9 == 0x5f) {\n                    iVar14 = 1;\n                }\n                else {\n                    iVar14 = *(*(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                                0xc32f51) * 4 + 0xc489a0);\n                    if ((iVar14 != 1) && (iVar14 != 3)) goto code_r0x00bd942a;\n                    iVar14 = 1;\n                }\n            }\n            if (var_8h < arg_10h[0x1f]) {\n                if (arg_10h[0x16] == 0) {\n                    if ((0xff < *var_8h) || ((*(*var_8h + arg_10h[0x11]) & 0x10) == 0)) goto code_r0x00bd9351;\n                }\n                else {\n                    uVar9 = *var_8h;\n                    if (uVar9 != 0x5f) {\n                        uVar5 = *((uVar9 >> 7) + 0xc43b40);\n                        goto code_r0x00bd9465;\n                    }\n                }\n                goto code_r0x00bd94b4;\n            }\ncode_r0x00bd932c:\n            if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n               (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                return 0xfffffff4;\n            }\ncode_r0x00bd9351:\n            iVar10 = 0;\n        }\n        else {\n            if (var_8h == arg_10h[0x1e]) {\ncode_r0x00bd92c2:\n                iVar14 = 0;\n            }\n            else {\n                puVar15 = var_8h + -1;\n                if ((*puVar15 & 0xfc00) == 0xdc00) {\n                    puVar15 = var_8h + -2;\n                }\n                if (puVar15 < arg_10h[0x22]) {\n                    arg_10h[0x22] = puVar15;\n                }\n                uVar9 = *puVar15;\n                if ((uVar9 & 0xfc00) == 0xd800) {\n                    uVar9 = ((uVar9 & 0x3ff) << 10 | puVar15[1] & 0x3ff) + 0x10000;\n                }\n                if (arg_10h[0x16] == 0) {\n                    if ((0xff < uVar9) || ((*(uVar9 + arg_10h[0x11]) & 0x10) == 0)) goto code_r0x00bd92c2;\n                    iVar14 = 1;\n                }\n                else if (uVar9 == 0x5f) {\n                    iVar14 = 1;\n                }\n                else {\n                    iVar14 = *(*(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                                0xc32f51) * 4 + 0xc489a0);\n                    if ((iVar14 != 1) && (iVar14 != 3)) goto code_r0x00bd92c2;\n                    iVar14 = 1;\n                }\n            }\n            if (arg_10h[0x1f] <= var_8h) goto code_r0x00bd932c;\n            uVar9 = *var_8h;\n            if ((uVar9 & 0xfc00) == 0xd800) {\n                uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n            }\n            if (arg_10h[0x16] == 0) {\n                if ((uVar9 < 0x100) && ((*(uVar9 + arg_10h[0x11]) & 0x10) != 0)) goto code_r0x00bd94b4;\n                goto code_r0x00bd9351;\n            }\n            if (uVar9 == 0x5f) {\ncode_r0x00bd94b4:\n                iVar10 = 1;\n            }\n            else {\n                uVar5 = *((uVar9 >> 7) + 0xc43b40);\ncode_r0x00bd9465:\n                iVar10 = *(*(*((uVar5 * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 + 0xc32f51) * 4 + 0xc489a0);\n                if (iVar10 == 1) goto code_r0x00bd94b4;\n                if (iVar10 != 3) goto code_r0x00bd9351;\n                iVar10 = 1;\n            }\n        }\n        uVar7 = *in_EDX;\n        in_EDX = in_EDX + 1;\n        var_30h = in_EDX;\n        if (uVar7 == 5) {\n            in_ECX = var_8h;\n            if (iVar10 == iVar14) {\n                return 0;\n            }\n        }\n        else {\n            in_ECX = var_8h;\n            if (iVar10 != iVar14) {\n                return 0;\n            }\n        }\n        goto code_r0x00ba4a1f;\n    case 6:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n        uVar9 = *var_8h;\n        puVar13 = var_8h + 1;\n        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n            uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n            puVar13 = var_8h + 2;\n        }\n        var_8h = puVar13;\n        puVar13 = var_8h;\n        if (uVar9 < 0x100) {\n            uVar5 = *(uVar9 + arg_10h[0x11]) & 4;\njoined_r0x00bd97c4:\n            puVar13 = var_8h;\n            if (uVar5 != 0) {\n                return 0;\n            }\n        }\n        break;\n    case 7:\n        if (var_8h < arg_10h[0x1f]) {\n            uVar9 = *var_8h;\n            puVar13 = var_8h + 1;\n            if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                puVar13 = var_8h + 2;\n            }\n            var_8h = puVar13;\n            if (0xff < uVar9) {\n                return 0;\n            }\n            uVar5 = *(uVar9 + arg_10h[0x11]) & 4;\n            goto joined_r0x00bd982b;\n        }\n        goto code_r0x00bde4bf;\n    case 8:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n        uVar9 = *var_8h;\n        puVar13 = var_8h + 1;\n        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n            uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n            puVar13 = var_8h + 2;\n        }\n        var_8h = puVar13;\n        puVar13 = var_8h;\n        if (uVar9 < 0x100) {\n            uVar5 = *(uVar9 + arg_10h[0x11]) & 1;\n            goto joined_r0x00bd97c4;\n        }\n        break;\n    case 9:\n        if (var_8h < arg_10h[0x1f]) {\n            uVar9 = *var_8h;\n            puVar13 = var_8h + 1;\n            if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                puVar13 = var_8h + 2;\n            }\n            var_8h = puVar13;\n            if (0xff < uVar9) {\n                return 0;\n            }\n            uVar5 = *(uVar9 + arg_10h[0x11]) & 1;\n            goto joined_r0x00bd982b;\n        }\n        goto code_r0x00bde4bf;\n    case 10:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n        uVar9 = *var_8h;\n        puVar13 = var_8h + 1;\n        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n            uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n            puVar13 = var_8h + 2;\n        }\n        var_8h = puVar13;\n        puVar13 = var_8h;\n        if (uVar9 < 0x100) {\n            uVar5 = *(uVar9 + arg_10h[0x11]) & 0x10;\n            goto joined_r0x00bd97c4;\n        }\n        break;\n    case 0xb:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n        uVar9 = *var_8h;\n        puVar13 = var_8h + 1;\n        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n            uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n            puVar13 = var_8h + 2;\n        }\n        var_8h = puVar13;\n        if (0xff < uVar9) {\n            return 0;\n        }\n        uVar5 = *(uVar9 + arg_10h[0x11]) & 0x10;\njoined_r0x00bd982b:\n        puVar13 = var_8h;\n        if (uVar5 == 0) {\n            return 0;\n        }\n        break;\n    case 0xc:\n        puVar13 = arg_10h[0x1f];\n        if (arg_10h[6] == 0) {\n            if ((var_8h <= puVar13 + -arg_10h[7]) && (*var_8h == *(arg_10h + 0xd))) {\n                if (arg_10h[7] == 1) {\n                    return 0;\n                }\n                if (var_8h[1] == *(arg_10h + 0x36)) {\n                    return 0;\n                }\n            }\n        }\n        else if ((var_8h < puVar13) && (iVar14 = fcn.00ba5e9f(puVar13, arg_10h + 7, var_24h),  iVar14 != 0)) {\n            return 0;\n        }\n        if (((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= var_8h + 1)) && (arg_10h[6] == 0)) &&\n            ((arg_10h[7] == 2 && (*var_8h == *(arg_10h + 0xd))))) && (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n            return 0xfffffff4;\n        }\n        goto code_r0x00bd9572;\n    case 0xd:\ncode_r0x00bd9572:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n        puVar13 = var_8h + 1;\n        if (((uVar9 != 0) && (puVar13 < arg_10h[0x1f])) && ((*puVar13 & 0xfc00) == 0xdc00)) {\n            puVar13 = var_8h + 2;\n        }\n        break;\n    case 0xe:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n        puVar13 = var_8h + 1;\n        break;\n    case 0xf:\n    case 0x10:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n        var_14h = *var_8h;\n        puVar13 = var_8h + 1;\n        if ((var_24h != 0) && ((var_14h & 0xfc00) == 0xd800)) {\n            var_14h = ((var_14h & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n            puVar13 = var_8h + 2;\n        }\n        var_8h = puVar13;\n        puVar13 = *((*((var_14h >> 7) + 0xc43b40) * 0x80 + (var_14h & 0x8000007f)) * 2 + 0xc35840);\n    // switch table (11 cases) at 0xbe0193\n        switch(in_EDX[1]) {\n        case 0:\n            goto code_r0x00bd9c16;\n        case 1:\n            cVar4 = *(puVar13 * 8 + 0xc32f51);\n            if (((cVar4 == '\\t') || (cVar4 == '\\x05')) || (cVar4 == '\\b')) {\ncode_r0x00bd9c24:\n                bVar19 = true;\n            }\n            else {\n                bVar19 = false;\n            }\n            goto code_r0x00bd9c40;\n        case 2:\n            if ((in_EDX[2] != *(*(puVar13 * 8 + 0xc32f51) * 4 + 0xc489a0)) == (uVar11 == 0x10)) {\n                return 0;\n            }\n            break;\n        case 3:\n            uVar5 = *(puVar13 * 8 + 0xc32f51);\n            goto code_r0x00bd9c97;\n        case 4:\n            uVar5 = *(puVar13 * 8 + 0xc32f50);\ncode_r0x00bd9c97:\n            if ((in_EDX[2] != uVar5) == (uVar11 == 0x10)) {\n                return 0;\n            }\n            break;\n        case 5:\n            iVar14 = *(*(puVar13 * 8 + 0xc32f51) * 4 + 0xc489a0);\n            if ((iVar14 == 1) || (iVar14 == 3)) goto code_r0x00bd9c24;\n            bVar19 = false;\n            goto code_r0x00bd9c40;\n        case 6:\n        case 7:\n            if (var_14h < 0x180f) {\n                if (var_14h != 0x180e) {\n                    if (var_14h < 0x86) {\n                        if ((var_14h != 0x85) && ((var_14h < 9 || ((0xd < var_14h && (var_14h != 0x20)))))) {\ncode_r0x00bd9c2b:\n                            bVar19 = *(*(puVar13 * 8 + 0xc32f51) * 4 + 0xc489a0) == 6;\n                            goto code_r0x00bd9c40;\n                        }\n                    }\n                    else if ((var_14h != 0xa0) && (var_14h != 0x1680)) goto code_r0x00bd9c2b;\n                }\n            }\n            else if (var_14h < 0x2030) {\n                if (var_14h != 0x202f) {\n                    if (var_14h - 0x2000U < 0x2a) {\n    // switch table (42 cases) at 0xbe01bf\n                        switch(*(*(var_14h + 0xbde1c7) * 4 + 0xbe01bf)) {\n                        case 0xbd9c16:\n                            goto code_r0x00bd9c16;\n                        }\n                    }\n                    goto code_r0x00bd9c2b;\n                }\n            }\n            else if ((var_14h != 0x205f) && (var_14h != 0x3000)) goto code_r0x00bd9c2b;\n            goto code_r0x00bd9c16;\n        case 8:\n            iVar14 = *(*(puVar13 * 8 + 0xc32f51) * 4 + 0xc489a0);\n            if (((iVar14 == 1) || (iVar14 == 3)) || (var_14h == 0x5f)) goto code_r0x00bd9c24;\n            bVar19 = false;\n            goto code_r0x00bd9c40;\n        case 9:\n            puVar3 = in_EDX[2] * 4 + 0xc345d0;\n            uVar9 = *(in_EDX[2] * 4 + 0xc345d0);\n            while ((uVar9 <= var_14h && (puVar3 = puVar3 + 1,  var_14h != uVar9))) {\n                uVar9 = *puVar3;\n            }\n            if (uVar11 != 0x10) {\n                return 0;\n            }\n            break;\n        case 10:\n            if (((var_14h == 0x24) || (var_14h == 0x40)) ||\n               ((var_14h == 0x60 || (((0x9f < var_14h && (var_14h < 0xd800)) || (0xdfff < var_14h))))))\n            goto code_r0x00bd9c24;\n            bVar19 = false;\ncode_r0x00bd9c40:\n            if (bVar19 == (uVar11 == 0xf)) {\n                return 0;\n            }\n            break;\n        default:\n            goto code_r0x00bde4fe;\n        }\n        goto code_r0x00ba4f2e;\n    case 0x11:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n        uVar9 = *var_8h;\n        puVar13 = var_8h + 1;\n        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n            uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n            puVar13 = var_8h + 2;\n        }\n        var_8h = puVar13;\n        puVar13 = var_8h;\n        if (uVar9 < 0xe) {\n            if (uVar9 == 0xd) {\n                if (var_8h < arg_10h[0x1f]) {\n                    if (*var_8h == 10) {\n                        puVar13 = var_8h + 1;\n                    }\n                }\n                else if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                        (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                    return 0xfffffff4;\n                }\n            }\n            else if (uVar9 != 10) {\n                if (uVar9 < 0xb) {\n                    return 0;\n                }\n                if (0xc < uVar9) {\n                    return 0;\n                }\n                goto code_r0x00bd9907;\n            }\n        }\n        else {\n            if ((uVar9 != 0x85) && (1 < uVar9 - 0x2028)) {\n                return 0;\n            }\ncode_r0x00bd9907:\n            if (arg_10h[0x1b] != 0) {\n                return 0;\n            }\n        }\n        break;\n    case 0x12:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n        uVar9 = *var_8h;\n        puVar13 = var_8h + 1;\n        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n            uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n            puVar13 = var_8h + 2;\n        }\n        var_8h = puVar13;\n        puVar13 = var_8h;\n        if (uVar9 < 0x180f) {\n            if (uVar9 == 0x180e) {\n                return 0;\n            }\n            if (uVar9 < 0xa1) {\n                if (uVar9 == 0xa0) {\n                    return 0;\n                }\n                if (uVar9 == 9) {\n                    return 0;\n                }\n                if (uVar9 == 0x20) {\n                    return 0;\n                }\n            }\n            else if (uVar9 == 0x1680) {\n                return 0;\n            }\n        }\n        else if (uVar9 < 0x2060) {\n            if (uVar9 == 0x205f) {\n                return 0;\n            }\n            if (0x1fff < uVar9) {\n                if (uVar9 < 0x200b) {\n                    return 0;\n                }\n                if (uVar9 == 0x202f) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar9 == 0x3000) {\n            return 0;\n        }\n        break;\n    case 0x13:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n        uVar9 = *var_8h;\n        puVar13 = var_8h + 1;\n        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n            uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n            puVar13 = var_8h + 2;\n        }\n        var_8h = puVar13;\n        puVar13 = var_8h;\n        if (uVar9 < 0x180f) {\n            if (uVar9 != 0x180e) {\n                if (uVar9 < 0xa1) {\n                    if (((uVar9 != 0xa0) && (uVar9 != 9)) && (uVar9 != 0x20)) {\n                        return 0;\n                    }\n                }\n                else if (uVar9 != 0x1680) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar9 < 0x2060) {\n            if (uVar9 != 0x205f) {\n                if (uVar9 < 0x2000) {\n                    return 0;\n                }\n                if ((0x200a < uVar9) && (uVar9 != 0x202f)) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar9 != 0x3000) {\n            return 0;\n        }\n        break;\n    case 0x14:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n        uVar9 = *var_8h;\n        puVar13 = var_8h + 1;\n        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n            uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n            puVar13 = var_8h + 2;\n        }\n        var_8h = puVar13;\n        puVar13 = var_8h;\n        if (uVar9 < 0x86) {\n            if (uVar9 == 0x85) {\n                return 0;\n            }\n            if ((9 < uVar9) && (uVar9 < 0xe)) {\n                return 0;\n            }\n        }\n        else if ((0x2027 < uVar9) && (uVar9 < 0x202a)) {\n            return 0;\n        }\n        break;\n    case 0x15:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n        uVar9 = *var_8h;\n        puVar13 = var_8h + 1;\n        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n            uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n            puVar13 = var_8h + 2;\n        }\n        var_8h = puVar13;\n        puVar13 = var_8h;\n        if (uVar9 < 0x86) {\n            if ((uVar9 != 0x85) && (3 < uVar9 - 10)) {\n                return 0;\n            }\n        }\n        else if (1 < uVar9 - 0x2028) {\n            return 0;\n        }\n        break;\n    case 0x16:\n        var_28h = arg_10h[0x1f];\n        if (var_8h < var_28h) {\n            uVar9 = *var_8h;\n            puVar13 = var_8h + 1;\n            if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                puVar13 = var_8h + 2;\n            }\n            var_8h = puVar13;\n            uVar5 = *(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 + 0xc32f52);\n            for (; var_14h = uVar5,  var_8h < var_28h; var_8h = var_8h + iVar14) {\n                iVar14 = 1;\n                uVar9 = *var_8h;\n                if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                    iVar14 = 2;\n                    uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                }\n                uVar5 = *(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 + 0xc32f52);\n                in_EDX = var_30h;\n                if ((*(var_14h * 4 + 0xc35800) & 1 << (uVar5 & 0x1f)) == 0) break;\n            }\n            puVar13 = var_8h;\n            if ((arg_10h[0x23] == 0) || (var_8h < var_28h)) break;\n            goto code_r0x00bd9118;\n        }\n        goto code_r0x00bde4bf;\n    case 0x17:\n        goto code_r0x00bd915d;\n    case 0x18:\ncode_r0x00bd914f:\n        if (var_8h < arg_10h[0x1f]) {\n            return 0;\n        }\n        goto code_r0x00bd910b;\n    case 0x19:\n        if (arg_10h[0x13] != 0) {\n            return 0;\n        }\n        if (arg_10h[0x17] != 0) goto code_r0x00bd914f;\ncode_r0x00bd915d:\n        puVar13 = arg_10h[0x1f];\n        if (var_8h < puVar13) {\n            puVar3 = arg_10h + 7;\n            if (arg_10h[6] == 0) {\n                if (((puVar13 + -*puVar3 < var_8h) || (*var_8h != *(arg_10h + 0xd))) ||\n                   ((*puVar3 != 1 && (var_8h[1] != *(arg_10h + 0x36))))) goto code_r0x00bd906f;\n            }\n            else {\n                iVar14 = fcn.00ba5e9f(puVar13, puVar3, var_24h);\n                if (iVar14 == 0) goto code_r0x00bd906f;\n            }\n            if (var_8h != arg_10h[0x1f] + *puVar3 * -2) {\ncode_r0x00bd906f:\n                if (arg_10h[0x23] == 0) {\n                    return 0;\n                }\n                if (var_8h + 1 < arg_10h[0x1f]) {\n                    return 0;\n                }\n                if (arg_10h[6] != 0) {\n                    return 0;\n                }\n                if (arg_10h[7] != 2) {\n                    return 0;\n                }\n                if (*var_8h != *(arg_10h + 0xd)) {\n                    return 0;\n                }\n                arg_10h[0x1a] = 1;\n                if (arg_10h[0x23] < 2) {\n                    return 0;\n                }\n                return 0xfffffff4;\n            }\n        }\ncode_r0x00bd910b:\n        puVar13 = var_8h;\n        if (arg_10h[0x23] != 0) {\ncode_r0x00bd9118:\n            puVar13 = var_8h;\n            if (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22]) {\n                arg_10h[0x1a] = 1;\n                if (1 < arg_10h[0x23]) {\n                    return 0xfffffff4;\n                }\n                in_EDX = in_EDX + 1;\n                in_ECX = var_8h;\n                var_30h = in_EDX;\n                goto code_r0x00ba4a1f;\n            }\n        }\n        break;\n    case 0x1a:\n        puVar15 = arg_10h[0x1f];\n        if (puVar15 <= var_8h) {\n            if (arg_10h[0x13] != 0) {\n                return 0;\n            }\n            goto code_r0x00bd910b;\n        }\n        if (arg_10h[6] == 0) {\n            if (((puVar15 + -arg_10h[7] < var_8h) || (*var_8h != *(arg_10h + 0xd))) ||\n               ((arg_10h[7] != 1 && (var_8h[1] != *(arg_10h + 0x36))))) goto code_r0x00bd906f;\n        }\n        else {\n            iVar14 = fcn.00ba5e9f(puVar15, arg_10h + 7, var_24h);\n            puVar13 = var_8h;\n            if (iVar14 == 0) goto code_r0x00bd906f;\n        }\n        break;\n    case 0x1b:\n        if ((arg_10h[0x12] != 0) && (var_8h == arg_10h[0x1e])) {\n            return 0;\n        }\ncode_r0x00bd8f62:\n        if (var_8h != arg_10h[0x1e]) {\n            return 0;\n        }\n        in_EDX = in_EDX + 1;\n        in_ECX = var_8h;\n        var_30h = in_EDX;\n        goto code_r0x00ba4a1f;\n    case 0x1c:\n        if ((arg_10h[0x12] != 0) && (var_8h == arg_10h[0x1e])) {\n            return 0;\n        }\n        puVar15 = arg_10h[0x1e];\n        if (var_8h != puVar15) {\n            if (var_8h == arg_10h[0x1f]) {\n                return 0;\n            }\n            if (arg_10h[6] == 0) {\n                if (var_8h < puVar15 + arg_10h[7]) {\n                    return 0;\n                }\n                if (var_8h[-arg_10h[7]] != *(arg_10h + 0xd)) {\n                    return 0;\n                }\n                if ((arg_10h[7] != 1) && ((var_8h + -arg_10h[7])[1] != *(arg_10h + 0x36))) {\n                    return 0;\n                }\n            }\n            else {\n                if (var_8h <= puVar15) {\n                    return 0;\n                }\n                iVar14 = fcn.00c1ea2d(puVar15, arg_10h + 7, var_24h);\n                puVar13 = var_8h;\n                if (iVar14 == 0) {\n                    return 0;\n                }\n            }\n        }\n        break;\n    case 0x1d:\n        if (var_24h == 0) {\n            if ((arg_10h[0x1f] - var_8h & 0xfffffffe) < 2) goto code_r0x00bde726;\n            if (in_EDX[1] != *var_8h) {\n                return 0;\n            }\n            in_EDX = in_EDX + 2;\n            in_ECX = var_8h + 1;\n            var_30h = in_EDX;\n            puVar13 = var_8h + 1;\n        }\n        else {\n            puVar15 = in_EDX + 1;\n            in_EDX = in_EDX + 1;\n            iVar14 = 1;\n            if ((*puVar15 & 0xfc00) == 0xd800) {\n                iVar14 = 2;\n            }\n            if (arg_10h[0x1f] - var_8h >> 1 < iVar14) {\n                if (arg_10h[0x23] == 0) {\n                    return 0;\n                }\n                if (var_8h < arg_10h[0x1f]) {\n                    return 0;\n                }\n                bVar19 = var_8h < arg_10h[0x22];\n                bVar20 = var_8h == arg_10h[0x22];\n                goto code_r0x00bde4da;\n            }\n            in_ECX = var_8h;\n            var_30h = in_EDX;\n            if (iVar14 != 0) {\n                do {\n                    uVar7 = *in_EDX;\n                    iVar14 = iVar14 + -1;\n                    uVar6 = *var_8h;\n                    in_EDX = in_EDX + 1;\n                    var_8h = var_8h + 1;\n                    if (uVar7 != uVar6) {\n                        return 0;\n                    }\n                    in_ECX = var_8h;\n                    var_30h = in_EDX;\n                    puVar13 = var_8h;\n                } while (0 < iVar14);\n            }\n        }\n        goto code_r0x00ba4a1f;\n    case 0x1e:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n        if (var_24h == 0) {\n            uVar9 = in_EDX[1];\n            if (in_EDX[1] < 0x100) {\n                uVar9 = *(arg_10h[0xf] + uVar9);\n            }\n            uVar11 = *var_8h;\n            if (*var_8h < 0x100) {\n                uVar11 = *(arg_10h[0xf] + uVar11);\n            }\n            if (uVar9 != uVar11) {\n                return 0;\n            }\n            in_EDX = in_EDX + 2;\n            in_ECX = var_8h + 1;\n            var_30h = in_EDX;\n            puVar13 = var_8h + 1;\n        }\n        else {\n            puVar15 = in_EDX[1];\n            iVar14 = 1;\n            if ((puVar15 & 0xfc00) == 0xd800) {\n                iVar14 = 2;\n                puVar15 = ((puVar15 & 0x3ff) << 10 | in_EDX[2] & 0x3ff) + 0x10000;\n            }\n            puVar12 = *var_8h;\n            if (puVar15 < 0x80) {\n                if (puVar12 < 0x100) {\n                    puVar12 = *(arg_10h[0xf] + puVar12);\n                }\n                if (*(arg_10h[0xf] + puVar15) != puVar12) {\n                    return 0;\n                }\n                var_30h = in_EDX + 2;\n                in_ECX = var_8h + 1;\n                in_EDX = var_30h;\n                puVar13 = var_8h + 1;\n            }\n            else {\n                puVar13 = var_8h + 1;\n                if ((puVar12 & 0xfc00) == 0xd800) {\n                    puVar12 = ((puVar12 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                    puVar13 = var_8h + 2;\n                }\n                var_8h = puVar13;\n                in_EDX = in_EDX + iVar14 + 1;\n                in_ECX = var_8h;\n                var_30h = in_EDX;\n                var_14h = puVar12;\n                puVar13 = var_8h;\n                if ((puVar15 != puVar12) &&\n                   (puVar12 !=\n                    *(*((*((puVar15 >> 7) + 0xc43b40) * 0x80 + (puVar15 & 0x8000007f)) * 2 + 0xc35840) * 8 + 0xc32f54) +\n                    puVar15)) {\n                    return 0;\n                }\n            }\n        }\n        goto code_r0x00ba4a1f;\n    case 0x1f:\n    case 0x20:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n        if (var_24h == 0) {\n            uVar7 = *var_8h;\n            var_8h = var_8h + 1;\n            uVar9 = in_EDX[1];\n            if (uVar9 == uVar7) {\n                return 0;\n            }\n            if (uVar11 != 0x20) goto code_r0x00bd898e;\n            if (uVar9 < 0x100) {\n                uVar9 = *(arg_10h[0x10] + uVar9);\n            }\n            if (uVar9 == uVar7) {\n                return 0;\n            }\n            in_EDX = in_EDX + 2;\n            in_ECX = var_8h;\n            var_30h = in_EDX;\n            puVar13 = var_8h;\n        }\n        else {\n            var_14h = in_EDX[1];\n            puVar13 = in_EDX + 2;\n            if ((var_14h & 0xfc00) == 0xd800) {\n                var_14h = ((var_14h & 0x3ff) << 10 | in_EDX[2] & 0x3ff) + 0x10000;\n                puVar13 = in_EDX + 3;\n            }\n            in_EDX = puVar13;\n            var_28h = *var_8h;\n            puVar13 = var_8h + 1;\n            if ((var_28h & 0xfc00) == 0xd800) {\n                var_28h = ((var_28h & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                puVar13 = var_8h + 2;\n            }\n            var_8h = puVar13;\n            puVar15 = var_14h;\n            if (uVar11 != 0x1f) {\n                if (var_14h < 0x80) {\n                    if (var_14h < 0x100) {\n                        puVar15 = *(arg_10h[0x10] + var_14h);\n                    }\n                }\n                else {\n                    puVar15 = *(*((*((var_14h >> 7) + 0xc43b40) * 0x80 + (var_14h & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                               0xc32f54) + var_14h;\n                }\n                if (var_14h == var_28h) {\n                    return 0;\n                }\n            }\n            in_ECX = var_8h;\n            var_30h = in_EDX;\n            puVar13 = var_8h;\n            if (puVar15 == var_28h) {\n                return 0;\n            }\n        }\n        goto code_r0x00ba4a1f;\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x2e:\n    case 0x2f:\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n        puVar13 = in_EDX + 1;\n        uVar9 = uVar11 - ((-(uVar11 < 0x2e) & 0xfffffff3) + 0x2e);\n        var_2ch = uVar9 & 1;\n        var_10h = *(uVar9 + 0xc35730);\n        var_18h = *(uVar9 + 0xc3573c);\n        if (var_18h == NULL) {\n            var_18h = 0x7fffffff;\n        }\n        goto code_r0x00bda705;\n    case 0x27:\n    case 0x28:\n    case 0x34:\n    case 0x35:\n        goto code_r0x00bda678;\n    case 0x29:\n    case 0x36:\n        var_18h = in_EDX[1];\n        puVar13 = in_EDX + 2;\n        var_10h = var_18h;\n        goto code_r0x00bda705;\n    case 0x2a:\n    case 0x37:\n        var_10h = NULL;\n        goto code_r0x00bda6a4;\n    case 0x2b:\n    case 0x38:\n        var_10h = 0x1;\ncode_r0x00bda6a4:\n        var_18h = 0x7fffffff;\ncode_r0x00bda6b6:\n        puVar13 = in_EDX + 1;\n        var_34h = 1;\n        goto code_r0x00bda705;\n    case 0x2c:\n    case 0x39:\n        var_10h = NULL;\n        var_18h = 0x1;\n        goto code_r0x00bda6b6;\n    case 0x2d:\n    case 0x3a:\n        var_34h = 1;\ncode_r0x00bda678:\n        var_10h = NULL;\n        var_18h = in_EDX[1];\n        if ((uVar11 == 0x28) || (uVar11 == 0x35)) {\n            var_2ch = 0x1;\n        }\n        else {\n            var_2ch = NULL;\n        }\n        puVar13 = in_EDX + 2;\ncode_r0x00bda705:\n        var_ch = *puVar13;\n        if (var_24h == 0) {\n            in_EDX = puVar13 + 1;\n        }\n        else {\n            var_1ch = 0x1;\n            if ((var_ch & 0xfc00) == 0xd800) {\n                var_ch = (puVar13[1] & 0x3ff | (var_ch & 0x3ff) << 10) + 0x10000;\n                var_1ch = 0x2;\n            }\n            var_28h = var_1ch * 2;\n            in_EDX = puVar13 + var_1ch;\n            var_14h = puVar13;\n            if (0x1 < var_1ch) {\n                var_30h = in_EDX;\n                if ((uVar11 < 0x2e) ||\n                   (*(*((*((var_ch >> 7) + 0xc43b40) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0xc35840) * 8 + 0xc32f54) ==\n                    0)) {\n                    puVar15 = NULL;\n                }\n                else {\n                    puVar15 = fcn.00c1ef2a();\n                }\n                var_ch = 0x1;\n                var_20h = puVar15;\n                if (0 < var_10h) {\n                    do {\n                        if ((arg_10h[0x1f] - var_28h < var_8h) ||\n                           (iVar14 = fcn.00bb16c4(var_8h, var_14h, var_1ch * 2),  iVar14 != 0)) {\n                            if ((puVar15 < 1) ||\n                               ((arg_10h[0x1f] + puVar15 * -2 < var_8h ||\n                                (iVar14 = fcn.00bb16c4(var_8h, &fcn.00ba49c0::var_68h, puVar15 * 2),  iVar14 != 0)))) {\n                                if (arg_10h[0x23] == 0) {\n                                    return 0;\n                                }\n                                if (var_8h < arg_10h[0x1f]) {\n                                    return 0;\n                                }\n                                bVar19 = var_8h < arg_10h[0x22];\n                                bVar20 = var_8h == arg_10h[0x22];\n                                goto code_r0x00bde4da;\n                            }\n                            var_8h = var_8h + puVar15;\n                        }\n                        else {\n                            var_8h = var_8h + var_28h;\n                        }\n                        var_ch = var_ch + 1;\n                    } while (var_ch <= var_10h);\n                }\n                puVar13 = var_8h;\n                in_ECX = var_8h;\n                if (var_10h != var_18h) {\n                    if (var_2ch != NULL) {\n                        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        if (uVar9 != 0) {\n                            return uVar9;\n                        }\n                        var_28h = var_1ch * 2;\n                        goto code_r0x00bde8ec;\n                    }\n                    var_20h = var_8h;\n                    if (var_10h < var_18h) {\n                        do {\n                            if ((arg_10h[0x1f] - var_28h < var_8h) ||\n                               (iVar14 = fcn.00bb16c4(var_8h, var_14h, var_1ch * 2),  puVar13 = var_28h,  iVar14 != 0))\n                            {\n                                if ((puVar15 < 1) ||\n                                   ((arg_10h[0x1f] + puVar15 * -2 < var_8h ||\n                                    (iVar14 = fcn.00bb16c4(var_8h, &fcn.00ba49c0::var_68h, puVar15 * 2),  iVar14 != 0)))\n                                   ) {\n                                    if ((arg_10h[0x23] != 0) &&\n                                       (((arg_10h[0x1f] <= var_8h &&\n                                         (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                                        (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])))) {\n                                        return 0xfffffff4;\n                                    }\n                                    break;\n                                }\n                                puVar13 = puVar15 * 2;\n                            }\n                            var_8h = var_8h + puVar13;\n                            var_10h = var_10h + 1;\n                        } while (var_10h < var_18h);\n                    }\n                    in_ECX = var_8h;\n                    puVar13 = var_8h;\n                    if (var_34h == 0) {\n                        puVar15 = var_30h;\n                        if (var_20h < var_8h) {\n                            do {\n                                puVar13 = var_8h;\n                                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                                if (uVar9 != 0) {\n                                    return uVar9;\n                                }\n                                in_ECX = puVar13 + -1;\n                                if ((puVar13[-1] & 0xfc00) == 0xdc00) {\n                                    in_ECX = puVar13 + -2;\n                                }\n                                puVar15 = var_30h;\n                                var_8h = in_ECX;\n                            } while (var_20h < in_ECX);\n                        }\n                        goto code_r0x00ba4b88;\n                    }\n                }\n                goto code_r0x00ba4a1f;\n            }\n        }\n        var_30h = in_EDX;\n        if (0x2d < uVar11) {\n            if ((var_24h == 0) || (var_ch < 0x80)) {\n                var_1ch = var_ch;\n                if (var_ch < 0x100) {\n                    var_1ch = *(arg_10h[0x10] + var_ch);\n                }\n            }\n            else {\n                var_1ch = *(*((*((var_ch >> 7) + 0xc43b40) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                           0xc32f54) + var_ch;\n            }\n            var_28h = 0x1;\n            if (0 < var_10h) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n                    var_14h = *var_8h;\n                    if ((var_ch != var_14h) && (var_1ch != var_14h)) {\n                        return 0;\n                    }\n                    var_28h = var_28h + 1;\n                    var_8h = var_8h + 1;\n                } while (var_28h <= var_10h);\n            }\n            puVar13 = var_8h;\n            in_ECX = var_8h;\n            if (var_10h != var_18h) {\n                puVar15 = var_10h;\n                if (var_2ch != NULL) {\n                    uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar15 = var_8h;\n                    var_8h = puVar13;\n                    while( true ) {\n                        if (uVar9 != 0) {\n                            return uVar9;\n                        }\n                        if (var_18h <= var_10h) {\n                            return 0;\n                        }\n                        if (arg_10h[0x1f] <= var_8h) break;\n                        if ((var_ch != *var_8h) && (var_1ch != *var_8h)) {\n                            return 0;\n                        }\n                        var_10h = var_10h + 1;\n                        puVar13 = var_8h + 1;\n                        var_8h = puVar15;\n                        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        puVar15 = var_8h;\n                        var_8h = puVar13;\n                    }\n                    goto code_r0x00bde866;\n                }\n                for (; puVar15 < var_18h; puVar15 = puVar15 + 1) {\n                    if (arg_10h[0x1f] <= in_ECX) {\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= in_ECX && in_ECX != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                        break;\n                    }\n                    if ((var_ch != *in_ECX) && (var_1ch != *in_ECX)) break;\n                    in_ECX = in_ECX + 1;\n                }\n                var_20h = var_8h;\n                puVar13 = in_ECX;\n                if (var_34h == 0) {\n                    bVar19 = in_ECX != var_8h;\n                    puVar15 = in_EDX;\n                    var_8h = in_ECX;\n                    if (bVar19) {\n                        do {\n                            puVar13 = var_8h;\n                            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            in_ECX = puVar13 + -1;\n                            if (uVar9 != 0) {\n                                return uVar9;\n                            }\n                            puVar15 = var_30h;\n                            var_8h = in_ECX;\n                        } while (in_ECX != var_20h);\n                    }\n                    goto code_r0x00ba4b88;\n                }\n            }\n            goto code_r0x00ba4a1f;\n        }\n        var_14h = 0x1;\n        if (0 < var_10h) {\n            do {\n                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n                uVar7 = *var_8h;\n                var_8h = var_8h + 1;\n                if (var_ch != uVar7) {\n                    return 0;\n                }\n                var_14h = var_14h + 1;\n            } while (var_14h <= var_10h);\n        }\n        puVar13 = var_8h;\n        in_ECX = var_8h;\n        if (var_10h == var_18h) goto code_r0x00ba4a1f;\n        if (var_2ch == NULL) {\n            var_20h = var_8h;\n            for (puVar13 = var_10h; puVar13 < var_18h; puVar13 = puVar13 + 1) {\n                if (arg_10h[0x1f] <= in_ECX) {\n                    if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= in_ECX && in_ECX != arg_10h[0x22])) &&\n                       (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                        return 0xfffffff4;\n                    }\n                    break;\n                }\n                if (var_ch != *in_ECX) break;\n                in_ECX = in_ECX + 1;\n            }\n            puVar13 = in_ECX;\n            if (var_34h == 0) {\n                bVar19 = in_ECX != var_8h;\n                puVar15 = in_EDX;\n                var_8h = in_ECX;\n                if (bVar19) {\n                    do {\n                        puVar13 = var_8h;\n                        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        in_ECX = puVar13 + -1;\n                        if (uVar9 != 0) {\n                            return uVar9;\n                        }\n                        puVar15 = var_30h;\n                        var_8h = in_ECX;\n                    } while (in_ECX != var_20h);\n                }\n                goto code_r0x00ba4b88;\n            }\n            goto code_r0x00ba4a1f;\n        }\n        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        puVar15 = var_8h;\n        var_8h = puVar13;\n        while( true ) {\n            if (uVar9 != 0) {\n                return uVar9;\n            }\n            if (var_18h <= var_10h) {\n                return 0;\n            }\n            if (arg_10h[0x1f] <= var_8h) break;\n            puVar13 = var_8h + 1;\n            if (var_ch != *var_8h) {\n                return 0;\n            }\n            var_10h = var_10h + 1;\n            var_8h = puVar15;\n            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar15 = var_8h;\n            var_8h = puVar13;\n        }\n        goto code_r0x00bde866;\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n        puVar13 = in_EDX + 1;\n        uVar9 = uVar11 - ((-(uVar11 < 0x48) & 0xfffffff3) + 0x48);\n        var_2ch = uVar9 & 1;\n        var_10h = *(uVar9 + 0xc35730);\n        var_18h = *(uVar9 + 0xc3573c);\n        if (var_18h == NULL) {\n            var_18h = 0x7fffffff;\n        }\n        goto code_r0x00bdadbf;\n    case 0x41:\n    case 0x42:\n    case 0x4e:\n    case 0x4f:\n        var_18h = in_EDX[1];\n        var_10h = NULL;\n        if ((uVar11 == 0x42) || (uVar11 == 0x4f)) {\n            var_2ch = 0x1;\n        }\n        else {\n            var_2ch = NULL;\n        }\n        puVar13 = in_EDX + 2;\n        goto code_r0x00bdadbf;\n    case 0x43:\n    case 0x50:\n        var_18h = in_EDX[1];\n        puVar13 = in_EDX + 2;\n        var_10h = var_18h;\ncode_r0x00bdadbf:\n        uVar9 = 0;\ncode_r0x00bdadc2:\n        var_ch = *puVar13;\n        var_30h = puVar13 + 1;\n        if ((var_24h != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n            var_ch = (*var_30h & 0x3ff | (var_ch & 0x3ff) << 10) + 0x10000;\n            var_30h = puVar13 + 2;\n        }\n        in_EDX = var_30h;\n        puVar15 = var_30h;\n        if (0x47 < uVar11) {\n            if ((var_24h == 0) || (var_ch < 0x80)) {\n                var_20h = var_ch;\n                if (var_ch < 0x100) {\n                    var_20h = *(arg_10h[0x10] + var_ch);\n                }\n            }\n            else {\n                var_20h = *(*((*((var_ch >> 7) + 0xc43b40) * 0x80 + (var_ch & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                           0xc32f54) + var_ch;\n                uVar9 = var_34h;\n            }\n            var_28h = 0x1;\n            if (var_24h == 0) {\n                if (0 < var_10h) {\n                    do {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n                        var_14h = *var_8h;\n                        if (var_ch == var_14h) {\n                            return 0;\n                        }\n                        if (var_20h == var_14h) {\n                            return 0;\n                        }\n                        var_28h = var_28h + 1;\n                        var_8h = var_8h + 1;\n                        uVar9 = var_34h;\n                    } while (var_28h <= var_10h);\n                }\n            }\n            else if (0 < var_10h) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n                    var_1ch = *var_8h;\n                    puVar13 = var_8h + 1;\n                    if ((var_1ch & 0xfc00) == 0xd800) {\n                        var_1ch = (*puVar13 & 0x3ff | (var_1ch & 0x3ff) << 10) + 0x10000;\n                        puVar13 = var_8h + 2;\n                    }\n                    if (var_ch == var_1ch) {\n                        return 0;\n                    }\n                    if (var_20h == var_1ch) {\n                        return 0;\n                    }\n                    var_28h = var_28h + 1;\n                    uVar9 = var_34h;\n                    var_8h = puVar13;\n                } while (var_28h <= var_10h);\n            }\n            puVar12 = var_8h;\n            in_ECX = var_8h;\n            puVar13 = var_8h;\n            if (var_10h != var_18h) {\n                if (var_2ch != NULL) {\n                    uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar13 = var_8h;\n                    var_8h = puVar12;\n                    if (var_24h == 0) {\n                        while( true ) {\n                            var_8h = puVar12;\n                            if (uVar9 != 0) {\n                                return uVar9;\n                            }\n                            if (var_18h <= var_10h) {\n                                return 0;\n                            }\n                            if (arg_10h[0x1f] <= var_8h) break;\n                            if (var_ch == *var_8h) {\n                                return 0;\n                            }\n                            if (var_20h == *var_8h) {\n                                return 0;\n                            }\n                            var_10h = var_10h + 1;\n                            puVar12 = var_8h + 1;\n                            var_8h = puVar13;\n                            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            puVar13 = var_8h;\n                        }\n                    }\n                    else {\n                        while( true ) {\n                            if (uVar9 != 0) {\n                                return uVar9;\n                            }\n                            if (var_18h <= var_10h) {\n                                return 0;\n                            }\n                            if (arg_10h[0x1f] <= var_8h) break;\n                            puVar15 = *var_8h;\n                            puVar12 = var_8h + 1;\n                            if ((puVar15 & 0xfc00) == 0xd800) {\n                                puVar15 = ((puVar15 & 0x3ff) << 10 | *puVar12 & 0x3ff) + 0x10000;\n                                puVar12 = var_8h + 2;\n                            }\n                            if (var_ch == puVar15) {\n                                return 0;\n                            }\n                            if (var_20h == puVar15) {\n                                return 0;\n                            }\n                            var_10h = var_10h + 1;\n                            var_8h = puVar13;\n                            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            puVar13 = var_8h;\n                            var_8h = puVar12;\n                        }\n                    }\n                    goto code_r0x00bde866;\n                }\n                if (var_24h == 0) {\n                    if (var_10h < var_18h) {\n                        while (var_8h < arg_10h[0x1f]) {\n                            if ((var_ch == *var_8h) || (var_20h == *var_8h)) goto code_r0x00bdb0bf;\n                            var_8h = var_8h + 1;\n                            var_10h = var_10h + 1;\n                            if (var_18h <= var_10h) goto code_r0x00bdb0bf;\n                        }\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                    }\ncode_r0x00bdb0bf:\n                    in_ECX = var_8h;\n                    var_10h = puVar12;\n                    puVar13 = var_8h;\n                    if (uVar9 == 0) {\n                        if (var_8h != puVar12) {\n                            do {\n                                puVar13 = var_8h;\n                                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                                if (uVar9 != 0) {\n                                    return uVar9;\n                                }\n                                in_ECX = puVar13 + -1;\n                                puVar15 = var_30h;\n                                var_8h = in_ECX;\n                            } while (in_ECX != var_10h);\n                        }\n                        goto code_r0x00ba4b88;\n                    }\n                }\n                else {\n                    if (var_10h < var_18h) {\n                        while (var_14h = 0x1,  var_8h < arg_10h[0x1f]) {\n                            puVar13 = *var_8h;\n                            if ((puVar13 & 0xfc00) == 0xd800) {\n                                iVar14 = 2;\n                                puVar13 = ((puVar13 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                            }\n                            else {\n                                iVar14 = 1;\n                            }\n                            uVar9 = var_34h;\n                            if ((var_ch == puVar13) || (var_20h == puVar13)) goto code_r0x00bdafe6;\n                            var_8h = var_8h + iVar14;\n                            var_10h = var_10h + 1;\n                            if (var_18h <= var_10h) goto code_r0x00bdafe6;\n                        }\n                        uVar9 = var_34h;\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                    }\ncode_r0x00bdafe6:\n                    in_ECX = var_8h;\n                    var_10h = puVar12;\n                    puVar13 = var_8h;\n                    if (uVar9 == 0) {\n                        if (puVar12 < var_8h) {\n                            do {\n                                puVar13 = var_8h;\n                                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                                if (uVar9 != 0) {\n                                    return uVar9;\n                                }\n                                in_ECX = puVar13 + -1;\n                                if ((puVar13[-1] & 0xfc00) == 0xdc00) {\n                                    in_ECX = puVar13 + -2;\n                                }\n                                puVar15 = var_30h;\n                                var_8h = in_ECX;\n                            } while (var_10h < in_ECX);\n                        }\n                        goto code_r0x00ba4b88;\n                    }\n                }\n            }\n            goto code_r0x00ba4a1f;\n        }\n        var_28h = 0x1;\n        if (var_24h == 0) {\n            if (0 < var_10h) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                    uVar7 = *var_8h;\n                    var_8h = var_8h + 1;\n                    if (var_ch == uVar7) {\n                        return 0;\n                    }\n                    var_28h = var_28h + 1;\n                } while (var_28h <= var_10h);\n            }\n        }\n        else if (0 < var_10h) {\n            do {\n                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                puVar13 = *var_8h;\n                puVar12 = var_8h + 1;\n                var_20h = puVar13;\n                if ((puVar13 & 0xfc00) == 0xd800) {\n                    var_20h = (puVar13 & 0x3ff) << 10;\n                    puVar13 = (*puVar12 & 0x3ff | var_20h) + 0x10000;\n                    puVar12 = var_8h + 2;\n                }\n                if (var_ch == puVar13) {\n                    return 0;\n                }\n                var_28h = var_28h + 1;\n                var_8h = puVar12;\n            } while (var_28h <= var_10h);\n        }\n        puVar13 = var_8h;\n        in_ECX = var_8h;\n        if (var_10h == var_18h) goto code_r0x00ba4a1f;\n        if (var_2ch == NULL) {\n            var_1ch = var_8h;\n            if (var_24h == 0) {\n                for (; var_10h < var_18h; var_10h = var_10h + 1) {\n                    if (arg_10h[0x1f] <= in_ECX) {\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= in_ECX && in_ECX != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                        break;\n                    }\n                    if (var_ch == *in_ECX) break;\n                    in_ECX = in_ECX + 1;\n                }\n                puVar13 = in_ECX;\n                if (uVar9 == 0) {\n                    bVar19 = in_ECX != var_8h;\n                    var_8h = in_ECX;\n                    if (bVar19) {\n                        do {\n                            puVar13 = var_8h;\n                            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            if (uVar9 != 0) {\n                                return uVar9;\n                            }\n                            in_ECX = puVar13 + -1;\n                            puVar15 = var_30h;\n                            var_8h = in_ECX;\n                        } while (in_ECX != var_1ch);\n                    }\n                    goto code_r0x00ba4b88;\n                }\n            }\n            else {\n                for (; var_10h < var_18h; var_10h = var_10h + 1) {\n                    var_14h = 0x1;\n                    if (arg_10h[0x1f] <= in_ECX) {\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= in_ECX && in_ECX != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                        break;\n                    }\n                    puVar13 = *in_ECX;\n                    if ((puVar13 & 0xfc00) == 0xd800) {\n                        iVar14 = 2;\n                        puVar13 = ((puVar13 & 0x3ff) << 10 | in_ECX[1] & 0x3ff) + 0x10000;\n                    }\n                    else {\n                        iVar14 = 1;\n                    }\n                    if (var_ch == puVar13) break;\n                    in_ECX = in_ECX + iVar14;\n                }\n                puVar13 = in_ECX;\n                if (uVar9 == 0) {\n                    bVar19 = var_8h < in_ECX;\n                    var_8h = in_ECX;\n                    if (bVar19) {\n                        do {\n                            puVar13 = var_8h;\n                            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            if (uVar9 != 0) {\n                                return uVar9;\n                            }\n                            in_ECX = puVar13 + -1;\n                            if ((puVar13[-1] & 0xfc00) == 0xdc00) {\n                                in_ECX = puVar13 + -2;\n                            }\n                            puVar15 = var_30h;\n                            var_8h = in_ECX;\n                        } while (var_1ch < in_ECX);\n                    }\n                    goto code_r0x00ba4b88;\n                }\n            }\n            goto code_r0x00ba4a1f;\n        }\n        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        puVar15 = var_8h;\n        var_8h = puVar13;\n        if (var_24h == 0) {\n            while( true ) {\n                var_8h = puVar13;\n                if (uVar9 != 0) {\n                    return uVar9;\n                }\n                if (var_18h <= var_10h) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                puVar13 = var_8h + 1;\n                if (var_ch == *var_8h) {\n                    return 0;\n                }\n                var_10h = var_10h + 1;\n                var_8h = puVar15;\n                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar15 = var_8h;\n            }\n        }\n        else {\n            while( true ) {\n                if (uVar9 != 0) {\n                    return uVar9;\n                }\n                if (var_18h <= var_10h) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                puVar13 = *var_8h;\n                puVar12 = var_8h + 1;\n                if ((puVar13 & 0xfc00) == 0xd800) {\n                    puVar13 = ((puVar13 & 0x3ff) << 10 | *puVar12 & 0x3ff) + 0x10000;\n                    puVar12 = var_8h + 2;\n                }\n                if (var_ch == puVar13) {\n                    return 0;\n                }\n                var_10h = var_10h + 1;\n                var_8h = puVar15;\n                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar15 = var_8h;\n                var_8h = puVar12;\n            }\n        }\n        goto code_r0x00bde866;\n    case 0x44:\n    case 0x51:\n        var_10h = NULL;\n        goto code_r0x00bdad51;\n    case 0x45:\n    case 0x52:\n        var_10h = 0x1;\ncode_r0x00bdad51:\n        var_18h = 0x7fffffff;\ncode_r0x00bdad64:\n        puVar13 = in_EDX + 1;\ncode_r0x00bdad7a:\n        uVar9 = 1;\n        var_34h = 1;\n        goto code_r0x00bdadc2;\n    case 0x46:\n    case 0x53:\n        var_10h = NULL;\n        var_18h = 0x1;\n        goto code_r0x00bdad64;\n    case 0x47:\n    case 0x54:\n        var_18h = in_EDX[1];\n        var_10h = NULL;\n        puVar13 = in_EDX + 2;\n        goto code_r0x00bdad7a;\n    case 0x55:\n    case 0x56:\n    case 0x57:\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n        puVar13 = in_EDX + 1;\n        var_2ch = (uVar11 - 0x55 & 1) != 0;\n        var_18h = *(uVar11 + 0xc356e7);\n        var_ch = *(uVar11 + 0xc356db);\n        if (var_18h == NULL) goto code_r0x00ba5096;\n        goto code_r0x00ba509d;\n    case 0x5b:\n    case 0x5c:\n        var_18h = in_EDX[1];\n        var_ch = NULL;\n        var_2ch = uVar11 == 0x5c;\n        puVar13 = in_EDX + 2;\n        goto code_r0x00ba509d;\n    case 0x5d:\n        var_18h = in_EDX[1];\n        puVar13 = in_EDX + 2;\n        var_2ch = 0x1;\n        var_ch = var_18h;\n        goto code_r0x00ba509d;\n    case 0x5e:\n        var_34h = 1;\n        var_ch = NULL;\n        goto code_r0x00ba5096;\n    case 0x5f:\n        var_34h = 1;\n        var_ch = 0x1;\ncode_r0x00ba5096:\n        puVar13 = in_EDX + 1;\n        var_18h = 0x7fffffff;\n        goto code_r0x00ba509d;\n    case 0x60:\n        var_34h = 1;\n        puVar13 = in_EDX + 1;\n        var_ch = NULL;\n        var_18h = 0x1;\n        goto code_r0x00ba509d;\n    case 0x61:\n        var_18h = in_EDX[1];\n        puVar13 = in_EDX + 2;\n        var_34h = 1;\n        var_ch = NULL;\ncode_r0x00ba509d:\n        var_1ch = *puVar13;\n        in_EDX = puVar13 + 1;\n        if (var_1ch == 0x10) {\n            var_38h = 0;\ncode_r0x00bdb3fb:\n            var_3ch = puVar13[2];\n            var_10h = *in_EDX;\n            in_EDX = puVar13 + 3;\n        }\n        else {\n            if (var_1ch == 0xf) {\n                var_38h = 1;\n                goto code_r0x00bdb3fb;\n            }\n            var_10h = 0xffffffff;\n        }\n        var_30h = in_EDX;\n        if (0 < var_ch) {\n    // switch table (11 cases) at 0xbe0217\n            switch(var_10h) {\n            case NULL:\n                if (var_38h != 0) {\n                    return 0;\n                }\n                iVar14 = 1;\n                if (0 < var_ch) {\n                    do {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                        puVar13 = var_8h + 1;\n                        if ((var_24h != 0) && ((*var_8h & 0xfc00) == 0xd800)) {\n                            puVar13 = var_8h + 2;\n                        }\n                        var_8h = puVar13;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 <= var_ch);\n                }\n                break;\n            case 0x1:\n                var_14h = 0x1;\n                if (0 < var_ch) {\n                    do {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                        uVar9 = *var_8h;\n                        puVar13 = var_8h + 1;\n                        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                            uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                            puVar13 = var_8h + 2;\n                        }\n                        var_8h = puVar13;\n                        cVar4 = *(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                                 0xc32f51);\n                        if (((cVar4 == '\\t') || (cVar4 == '\\x05')) || (cVar4 == '\\b')) {\n                            uVar9 = 1;\n                        }\n                        else {\n                            uVar9 = 0;\n                        }\n                        if (uVar9 == var_38h) {\n                            return 0;\n                        }\n                        var_14h = var_14h + 1;\n                    } while (var_14h <= var_ch);\n                }\n                break;\n            case 0x2:\n                var_14h = 0x1;\n                if (0 < var_ch) {\n                    do {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                        uVar9 = *var_8h;\n                        puVar13 = var_8h + 1;\n                        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                            uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                            puVar13 = var_8h + 2;\n                        }\n                        var_8h = puVar13;\n                        if ((*(*(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                                0xc32f51) * 4 + 0xc489a0) == var_3ch) == var_38h) {\n                            return 0;\n                        }\n                        var_14h = var_14h + 1;\n                    } while (var_14h <= var_ch);\n                }\n                break;\n            case 0x3:\n                var_14h = 0x1;\n                if (0 < var_ch) {\n                    do {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                        uVar9 = *var_8h;\n                        puVar13 = var_8h + 1;\n                        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                            uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                            puVar13 = var_8h + 2;\n                        }\n                        var_8h = puVar13;\n                        if ((*(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                              0xc32f51) == var_3ch) == var_38h) {\n                            return 0;\n                        }\n                        var_14h = var_14h + 1;\n                    } while (var_14h <= var_ch);\n                }\n                break;\n            case 0x4:\n                var_14h = 0x1;\n                if (0 < var_ch) {\n                    do {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                        uVar9 = *var_8h;\n                        puVar13 = var_8h + 1;\n                        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                            uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                            puVar13 = var_8h + 2;\n                        }\n                        var_8h = puVar13;\n                        if ((*(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                              0xc32f50) == var_3ch) == var_38h) {\n                            return 0;\n                        }\n                        var_14h = var_14h + 1;\n                    } while (var_14h <= var_ch);\n                }\n                break;\n            case 0x5:\n                var_14h = 0x1;\n                if (0 < var_ch) {\n                    do {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                        uVar9 = *var_8h;\n                        puVar13 = var_8h + 1;\n                        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                            uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                            puVar13 = var_8h + 2;\n                        }\n                        var_8h = puVar13;\n                        iVar14 = *(*(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                                    0xc32f51) * 4 + 0xc489a0);\n                        if ((iVar14 == 1) || (iVar14 == 3)) {\n                            uVar9 = 1;\n                        }\n                        else {\n                            uVar9 = 0;\n                        }\n                        if (uVar9 == var_38h) {\n                            return 0;\n                        }\n                        var_14h = var_14h + 1;\n                    } while (var_14h <= var_ch);\n                }\n                break;\n            case 0x6:\n            case 0x7:\n                var_14h = 0x1;\n                if (0 < var_ch) {\n                    do {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                        uVar9 = *var_8h;\n                        puVar13 = var_8h + 1;\n                        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                            uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                            puVar13 = var_8h + 2;\n                        }\n                        var_8h = puVar13;\n                        if (uVar9 < 0x180f) {\n                            if (uVar9 == 0x180e) goto code_r0x00bdb96a;\n                            if (uVar9 < 0x86) {\n                                if ((uVar9 == 0x85) || ((8 < uVar9 && ((uVar9 < 0xe || (uVar9 == 0x20))))))\n                                goto code_r0x00bdb96a;\n                            }\n                            else if ((uVar9 == 0xa0) || (uVar9 == 0x1680)) goto code_r0x00bdb96a;\ncode_r0x00bdb915:\n                            if ((*(*(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                                    0xc32f51) * 4 + 0xc489a0) == 6) == var_38h) {\n                                return 0;\n                            }\n                        }\n                        else {\n                            if (0x202f < uVar9) {\n                                if ((uVar9 == 0x205f) || (uVar9 == 0x3000)) goto code_r0x00bdb96a;\n                                goto code_r0x00bdb915;\n                            }\n    // switch table (42 cases) at 0xbe0243\n                            switch(uVar9) {\n                            case 0x2000:\n                            case 0x2001:\n                            case 0x2002:\n                            case 0x2003:\n                            case 0x2004:\n                            case 0x2005:\n                            case 0x2006:\n                            case 0x2007:\n                            case 0x2008:\n                            case 0x2009:\n                            case 0x200a:\n                            case 0x2028:\n                            case 0x2029:\n                            default:\ncode_r0x00bdb96a:\n                                if (var_38h != 0) {\n                                    return 0;\n                                }\n                                break;\n                            case 0x200b:\n                            case 0x200c:\n                            case 0x200d:\n                            case 0x200e:\n                            case 0x200f:\n                            case 0x2010:\n                            case 0x2011:\n                            case 0x2012:\n                            case 0x2013:\n                            case 0x2014:\n                            case 0x2015:\n                            case 0x2016:\n                            case 0x2017:\n                            case 0x2018:\n                            case 0x2019:\n                            case 0x201a:\n                            case 0x201b:\n                            case 0x201c:\n                            case 0x201d:\n                            case 0x201e:\n                            case 0x201f:\n                            case 0x2020:\n                            case 0x2021:\n                            case 0x2022:\n                            case 0x2023:\n                            case 0x2024:\n                            case 0x2025:\n                            case 0x2026:\n                            case 0x2027:\n                                goto code_r0x00bdb915;\n                            }\n                        }\n                        var_14h = var_14h + 1;\n                    } while (var_14h <= var_ch);\n                }\n                break;\n            case 0x8:\n                var_28h = 0x1;\n                if (0 < var_ch) {\n                    do {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                        var_14h = *var_8h;\n                        puVar13 = var_8h + 1;\n                        if ((var_24h != 0) && ((var_14h & 0xfc00) == 0xd800)) {\n                            var_14h = ((var_14h & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                            puVar13 = var_8h + 2;\n                        }\n                        var_8h = puVar13;\n                        iVar14 = *(*(*((*((var_14h >> 7) + 0xc43b40) * 0x80 + (var_14h & 0x8000007f)) * 2 + 0xc35840) *\n                                     8 + 0xc32f51) * 4 + 0xc489a0);\n                        if (((iVar14 == 1) || (iVar14 == 3)) || (var_14h == 0x5f)) {\n                            uVar9 = 1;\n                        }\n                        else {\n                            uVar9 = 0;\n                        }\n                        if (uVar9 == var_38h) {\n                            return 0;\n                        }\n                        var_28h = var_28h + 1;\n                    } while (var_28h <= var_ch);\n                }\n                break;\n            case 0x9:\n                var_14h = 0x1;\n                if (0 < var_ch) {\n                    do {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                        uVar9 = *var_8h;\n                        puVar13 = var_8h + 1;\n                        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                            uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                            puVar13 = var_8h + 2;\n                        }\n                        var_8h = puVar13;\n                        puVar3 = var_3ch * 4 + 0xc345d0;\n                        uVar11 = *(var_3ch * 4 + 0xc345d0);\n                        while ((uVar11 <= uVar9 && (puVar3 = puVar3 + 1,  uVar9 != uVar11))) {\n                            uVar11 = *puVar3;\n                        }\n                        if (var_38h != 0) {\n                            return 0;\n                        }\n                        var_14h = var_14h + 1;\n                    } while (var_14h <= var_ch);\n                }\n                break;\n            case 0xa:\n                iVar14 = 1;\n                if (0 < var_ch) {\n                    do {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                        uVar9 = *var_8h;\n                        puVar13 = var_8h + 1;\n                        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                            uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                            puVar13 = var_8h + 2;\n                        }\n                        var_8h = puVar13;\n                        if (((((uVar9 == 0x24) || (uVar9 == 0x40)) || (uVar9 == 0x60)) ||\n                            ((0x9f < uVar9 && (uVar9 < 0xd800)))) || (0xdfff < uVar9)) {\n                            uVar9 = 1;\n                        }\n                        else {\n                            uVar9 = 0;\n                        }\n                        if (uVar9 == var_38h) {\n                            return 0;\n                        }\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 <= var_ch);\n                }\n                break;\n            default:\n                if (var_1ch == 0x16) {\n                    var_20h = 0x1;\n                    if (0 < var_ch) {\n                        do {\n                            var_28h = arg_10h[0x1f];\n                            if (var_28h <= var_8h) goto code_r0x00bde866;\n                            uVar9 = *var_8h;\n                            puVar13 = var_8h + 1;\n                            if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                                uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                                puVar13 = var_8h + 2;\n                            }\n                            var_8h = puVar13;\n                            puVar15 = *(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8\n                                       + 0xc32f52);\n                            puVar13 = arg_10h[0x1f];\n                            var_14h = puVar15;\n                            if (var_8h < arg_10h[0x1f]) {\n                                do {\n                                    uVar9 = *var_8h;\n                                    var_14h = 0x1;\n                                    if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                                        var_14h = 0x2;\n                                        uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                                    }\n                                    uVar5 = *(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 +\n                                               0xc35840) * 8 + 0xc32f52);\n                                    puVar13 = var_28h;\n                                } while (((*(puVar15 * 4 + 0xc35800) & 1 << (uVar5 & 0x1f)) != 0) &&\n                                        (var_8h = var_8h + var_14h,  puVar15 = uVar5,  var_8h < var_28h));\n                            }\n                            if ((arg_10h[0x23] != 0) &&\n                               (((puVar13 <= var_8h && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                                (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])))) {\n                                return 0xfffffff4;\n                            }\n                            var_20h = var_20h + 1;\n                        } while (var_20h <= var_ch);\n                    }\n                }\n                else if (var_24h == 0) {\n    // switch table (16 cases) at 0xbe02b7\n                    switch(var_1ch + -3) {\n                    case NULL:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                if ((*var_8h < 0x100) && ((*(*var_8h + arg_10h[0x11]) & 4) != 0)) {\n                                    return 0;\n                                }\n                                var_8h = var_8h + 1;\n                                iVar14 = iVar14 + 1;\n                            } while (iVar14 <= var_ch);\n                        }\n                        break;\n                    case 0x1:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                if (0xff < *var_8h) {\n                                    return 0;\n                                }\n                                if ((*(*var_8h + arg_10h[0x11]) & 4) == 0) {\n                                    return 0;\n                                }\n                                var_8h = var_8h + 1;\n                                iVar14 = iVar14 + 1;\n                            } while (iVar14 <= var_ch);\n                        }\n                        break;\n                    case 0x2:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                if ((*var_8h < 0x100) && ((*(*var_8h + arg_10h[0x11]) & 1) != 0)) {\n                                    return 0;\n                                }\n                                var_8h = var_8h + 1;\n                                iVar14 = iVar14 + 1;\n                            } while (iVar14 <= var_ch);\n                        }\n                        break;\n                    case 0x3:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                if (0xff < *var_8h) {\n                                    return 0;\n                                }\n                                if ((*(*var_8h + arg_10h[0x11]) & 1) == 0) {\n                                    return 0;\n                                }\n                                var_8h = var_8h + 1;\n                                iVar14 = iVar14 + 1;\n                            } while (iVar14 <= var_ch);\n                        }\n                        break;\n                    case 0x4:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                if ((*var_8h < 0x100) && ((*(*var_8h + arg_10h[0x11]) & 0x10) != 0)) {\n                                    return 0;\n                                }\n                                var_8h = var_8h + 1;\n                                iVar14 = iVar14 + 1;\n                            } while (iVar14 <= var_ch);\n                        }\n                        break;\n                    case 0x5:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                if (0xff < *var_8h) {\n                                    return 0;\n                                }\n                                if ((*(*var_8h + arg_10h[0x11]) & 0x10) == 0) {\n                                    return 0;\n                                }\n                                var_8h = var_8h + 1;\n                                iVar14 = iVar14 + 1;\n                            } while (iVar14 <= var_ch);\n                        }\n                        break;\n                    case 0x6:\n                        var_14h = 0x1;\n                        if (0 < var_ch) {\n                            do {\n                                puVar15 = var_8h;\n                                puVar13 = arg_10h[0x1f];\n                                if (puVar13 <= var_8h) goto code_r0x00bde866;\n                                if (arg_10h[6] == 0) {\n                                    if ((var_8h <= puVar13 + -arg_10h[7]) && (*var_8h == *(arg_10h + 0xd))) {\n                                        if (arg_10h[7] == 1) {\n                                            return 0;\n                                        }\n                                        if (var_8h[1] == *(arg_10h + 0x36)) {\n                                            return 0;\n                                        }\n                                    }\n                                }\n                                else {\n                                    iVar14 = fcn.00ba5e9f(puVar13, arg_10h + 7, 0);\n                                    if (iVar14 != 0) {\n                                        return 0;\n                                    }\n                                }\n                                if (((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= puVar15 + 1)) && (arg_10h[6] == 0)) &&\n                                    ((arg_10h[7] == 2 && (*puVar15 == *(arg_10h + 0xd))))) &&\n                                   (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                                    return 0xfffffff4;\n                                }\n                                var_8h = puVar15 + 1;\n                                var_14h = var_14h + 1;\n                            } while (var_14h <= var_ch);\n                        }\n                        break;\n                    case 0x7:\n                    case 0x8:\n                        if (arg_10h[0x1f] + var_ch * -2 < var_8h) goto code_r0x00bde866;\n                        var_8h = var_8h + var_ch;\n                        break;\n                    default:\n                        goto code_r0x00bde4fe;\n                    case 0xb:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                uVar9 = *var_8h;\n                                puVar13 = var_8h + 1;\n                                if (uVar9 < 0xe) {\n                                    if (uVar9 == 0xd) {\n                                        if ((puVar13 < arg_10h[0x1f]) && (*puVar13 == 10)) {\n                                            puVar13 = var_8h + 2;\n                                        }\n                                    }\n                                    else if (uVar9 != 10) {\n                                        if (1 < uVar9 - 0xb) {\n                                            return 0;\n                                        }\n                                        goto code_r0x00bdc5c6;\n                                    }\n                                }\n                                else {\n                                    if ((uVar9 != 0x85) && (1 < uVar9 - 0x2028)) {\n                                        return 0;\n                                    }\ncode_r0x00bdc5c6:\n                                    if (arg_10h[0x1b] != 0) {\n                                        return 0;\n                                    }\n                                }\n                                var_8h = puVar13;\n                                iVar14 = iVar14 + 1;\n                            } while (iVar14 <= var_ch);\n                        }\n                        break;\n                    case 0xc:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                uVar7 = *var_8h;\n                                var_8h = var_8h + 1;\n                                if (uVar7 < 0x180f) {\n                                    if (uVar7 == 0x180e) {\n                                        return 0;\n                                    }\n                                    if (uVar7 < 0xa1) {\n                                        if (uVar7 == 0xa0) {\n                                            return 0;\n                                        }\n                                        if (uVar7 == 9) {\n                                            return 0;\n                                        }\n                                        if (uVar7 == 0x20) {\n                                            return 0;\n                                        }\n                                    }\n                                    else if (uVar7 == 0x1680) {\n                                        return 0;\n                                    }\n                                }\n                                else if (uVar7 < 0x2060) {\n                                    if (uVar7 == 0x205f) {\n                                        return 0;\n                                    }\n                                    if (0x1fff < uVar7) {\n                                        if (uVar7 < 0x200b) {\n                                            return 0;\n                                        }\n                                        if (uVar7 == 0x202f) {\n                                            return 0;\n                                        }\n                                    }\n                                }\n                                else if (uVar7 == 0x3000) {\n                                    return 0;\n                                }\n                                iVar14 = iVar14 + 1;\n                            } while (iVar14 <= var_ch);\n                        }\n                        break;\n                    case 0xd:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                uVar7 = *var_8h;\n                                var_8h = var_8h + 1;\n                                if (uVar7 < 0x180f) {\n                                    if (uVar7 != 0x180e) {\n                                        if (uVar7 < 0xa1) {\n                                            if (((uVar7 != 0xa0) && (uVar7 != 9)) && (uVar7 != 0x20)) {\n                                                return 0;\n                                            }\n                                        }\n                                        else if (uVar7 != 0x1680) {\n                                            return 0;\n                                        }\n                                    }\n                                }\n                                else if (uVar7 < 0x2060) {\n                                    if (uVar7 != 0x205f) {\n                                        if (uVar7 < 0x2000) {\n                                            return 0;\n                                        }\n                                        if ((0x200a < uVar7) && (uVar7 != 0x202f)) {\n                                            return 0;\n                                        }\n                                    }\n                                }\n                                else if (uVar7 != 0x3000) {\n                                    return 0;\n                                }\n                                iVar14 = iVar14 + 1;\n                            } while (iVar14 <= var_ch);\n                        }\n                        break;\n                    case 0xe:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                uVar7 = *var_8h;\n                                var_8h = var_8h + 1;\n                                if (uVar7 < 0x86) {\n                                    if (uVar7 == 0x85) {\n                                        return 0;\n                                    }\n                                    if ((9 < uVar7) && (uVar7 < 0xe)) {\n                                        return 0;\n                                    }\n                                }\n                                else if ((0x2027 < uVar7) && (uVar7 < 0x202a)) {\n                                    return 0;\n                                }\n                                iVar14 = iVar14 + 1;\n                            } while (iVar14 <= var_ch);\n                        }\n                        break;\n                    case 0xf:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                uVar9 = *var_8h;\n                                var_8h = var_8h + 1;\n                                if (uVar9 < 0x86) {\n                                    if ((uVar9 != 0x85) && (3 < uVar9 - 10)) {\n                                        return 0;\n                                    }\n                                }\n                                else if (1 < uVar9 - 0x2028) {\n                                    return 0;\n                                }\n                                iVar14 = iVar14 + 1;\n                            } while (iVar14 <= var_ch);\n                        }\n                    }\n                }\n                else {\n    // switch table (16 cases) at 0xbe0277\n                    switch(var_1ch + -3) {\n                    case NULL:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                uVar9 = *var_8h;\n                                puVar13 = var_8h + 1;\n                                if ((uVar9 & 0xfc00) == 0xd800) {\n                                    uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                                    puVar13 = var_8h + 2;\n                                }\n                                if ((uVar9 < 0x80) && ((*(uVar9 + arg_10h[0x11]) & 4) != 0)) {\n                                    return 0;\n                                }\n                                iVar14 = iVar14 + 1;\n                                var_8h = puVar13;\n                            } while (iVar14 <= var_ch);\n                        }\n                        break;\n                    case 0x1:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                if (0x7f < *var_8h) {\n                                    return 0;\n                                }\n                                if ((*(*var_8h + arg_10h[0x11]) & 4) == 0) {\n                                    return 0;\n                                }\n                                var_8h = var_8h + 1;\n                                iVar14 = iVar14 + 1;\n                            } while (iVar14 <= var_ch);\n                        }\n                        break;\n                    case 0x2:\n                        var_14h = 0x1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                if ((*var_8h < 0x80) && ((*(*var_8h + arg_10h[0x11]) & 1) != 0)) {\n                                    return 0;\n                                }\n                                puVar13 = var_8h + 1;\n                                if ((puVar13 < arg_10h[0x1f]) && ((*puVar13 & 0xfc00) == 0xdc00)) {\n                                    puVar13 = var_8h + 2;\n                                }\n                                var_8h = puVar13;\n                                var_14h = var_14h + 1;\n                            } while (var_14h <= var_ch);\n                        }\n                        break;\n                    case 0x3:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                if (0x7f < *var_8h) {\n                                    return 0;\n                                }\n                                if ((*(*var_8h + arg_10h[0x11]) & 1) == 0) {\n                                    return 0;\n                                }\n                                var_8h = var_8h + 1;\n                                iVar14 = iVar14 + 1;\n                            } while (iVar14 <= var_ch);\n                        }\n                        break;\n                    case 0x4:\n                        var_14h = 0x1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                if ((*var_8h < 0x80) && ((*(*var_8h + arg_10h[0x11]) & 0x10) != 0)) {\n                                    return 0;\n                                }\n                                puVar13 = var_8h + 1;\n                                if ((puVar13 < arg_10h[0x1f]) && ((*puVar13 & 0xfc00) == 0xdc00)) {\n                                    puVar13 = var_8h + 2;\n                                }\n                                var_8h = puVar13;\n                                var_14h = var_14h + 1;\n                            } while (var_14h <= var_ch);\n                        }\n                        break;\n                    case 0x5:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                if (0x7f < *var_8h) {\n                                    return 0;\n                                }\n                                if ((*(*var_8h + arg_10h[0x11]) & 0x10) == 0) {\n                                    return 0;\n                                }\n                                var_8h = var_8h + 1;\n                                iVar14 = iVar14 + 1;\n                            } while (iVar14 <= var_ch);\n                        }\n                        break;\n                    case 0x6:\n                        var_14h = 0x1;\n                        if (0 < var_ch) {\n                            var_20h = var_8h + 1;\n                            do {\n                                puVar15 = var_8h;\n                                puVar13 = arg_10h[0x1f];\n                                if (puVar13 <= var_8h) goto code_r0x00bde866;\n                                if (arg_10h[6] == 0) {\n                                    if ((var_8h <= puVar13 + -arg_10h[7]) && (*var_8h == *(arg_10h + 0xd))) {\n                                        if (arg_10h[7] == 1) {\n                                            return 0;\n                                        }\n                                        if (*var_20h == *(arg_10h + 0x36)) {\n                                            return 0;\n                                        }\n                                    }\n                                }\n                                else {\n                                    iVar14 = fcn.00ba5e9f(puVar13, arg_10h + 7, var_24h);\n                                    if (iVar14 != 0) {\n                                        return 0;\n                                    }\n                                }\n                                if ((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= var_20h)) && (arg_10h[6] == 0)) &&\n                                   (((arg_10h[7] == 2 && (*puVar15 == *(arg_10h + 0xd))) &&\n                                    (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])))) {\n                                    return 0xfffffff4;\n                                }\n                                var_8h = puVar15 + 1;\n                                puVar13 = var_20h + 1;\n                                if ((var_8h < arg_10h[0x1f]) && ((*var_8h & 0xfc00) == 0xdc00)) {\n                                    var_8h = puVar15 + 2;\n                                    puVar13 = var_20h + 2;\n                                }\n                                var_20h = puVar13;\n                                var_14h = var_14h + 1;\n                            } while (var_14h <= var_ch);\n                        }\n                        break;\n                    case 0x7:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                puVar13 = var_8h + 1;\n                                if ((puVar13 < arg_10h[0x1f]) && (var_14h = 0xdc00,  (*puVar13 & 0xfc00) == 0xdc00)) {\n                                    puVar13 = var_8h + 2;\n                                }\n                                var_8h = puVar13;\n                                iVar14 = iVar14 + 1;\n                            } while (iVar14 <= var_ch);\n                        }\n                        break;\n                    case 0x8:\n                        if (arg_10h[0x1f] + var_ch * -2 < var_8h) {\n                            return 0;\n                        }\n                        var_8h = var_8h + var_ch;\n                        break;\n                    default:\n                        goto code_r0x00bde4fe;\n                    case 0xb:\n                        var_14h = 0x1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                uVar9 = *var_8h;\n                                puVar13 = var_8h + 1;\n                                if ((uVar9 & 0xfc00) == 0xd800) {\n                                    uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                                    puVar13 = var_8h + 2;\n                                }\n                                var_8h = puVar13;\n                                if (uVar9 < 0xe) {\n                                    if (uVar9 == 0xd) {\n                                        if ((puVar13 < arg_10h[0x1f]) && (*puVar13 == 10)) {\n                                            var_8h = puVar13 + 1;\n                                        }\n                                    }\n                                    else if (uVar9 != 10) {\n                                        if (1 < uVar9 - 0xb) {\n                                            return 0;\n                                        }\n                                        goto code_r0x00bdbf72;\n                                    }\n                                }\n                                else {\n                                    if ((uVar9 != 0x85) && (1 < uVar9 - 0x2028)) {\n                                        return 0;\n                                    }\ncode_r0x00bdbf72:\n                                    if (arg_10h[0x1b] != 0) {\n                                        return 0;\n                                    }\n                                }\n                                var_14h = var_14h + 1;\n                            } while (var_14h <= var_ch);\n                        }\n                        break;\n                    case 0xc:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                uVar9 = *var_8h;\n                                puVar13 = var_8h + 1;\n                                if ((uVar9 & 0xfc00) == 0xd800) {\n                                    uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                                    puVar13 = var_8h + 2;\n                                }\n                                if (uVar9 < 0x180f) {\n                                    if (uVar9 == 0x180e) {\n                                        return 0;\n                                    }\n                                    if (uVar9 < 0xa1) {\n                                        if (uVar9 == 0xa0) {\n                                            return 0;\n                                        }\n                                        if (uVar9 == 9) {\n                                            return 0;\n                                        }\n                                        if (uVar9 == 0x20) {\n                                            return 0;\n                                        }\n                                    }\n                                    else if (uVar9 == 0x1680) {\n                                        return 0;\n                                    }\n                                }\n                                else if (uVar9 < 0x2060) {\n                                    if (uVar9 == 0x205f) {\n                                        return 0;\n                                    }\n                                    if (0x1fff < uVar9) {\n                                        if (uVar9 < 0x200b) {\n                                            return 0;\n                                        }\n                                        if (uVar9 == 0x202f) {\n                                            return 0;\n                                        }\n                                    }\n                                }\n                                else if (uVar9 == 0x3000) {\n                                    return 0;\n                                }\n                                iVar14 = iVar14 + 1;\n                                var_8h = puVar13;\n                            } while (iVar14 <= var_ch);\n                        }\n                        break;\n                    case 0xd:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                uVar9 = *var_8h;\n                                puVar13 = var_8h + 1;\n                                if ((uVar9 & 0xfc00) == 0xd800) {\n                                    uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                                    puVar13 = var_8h + 2;\n                                }\n                                if (uVar9 < 0x180f) {\n                                    if (uVar9 != 0x180e) {\n                                        if (uVar9 < 0xa1) {\n                                            if (((uVar9 != 0xa0) && (uVar9 != 9)) && (uVar9 != 0x20)) {\n                                                return 0;\n                                            }\n                                        }\n                                        else if (uVar9 != 0x1680) {\n                                            return 0;\n                                        }\n                                    }\n                                }\n                                else if (uVar9 < 0x2060) {\n                                    if (uVar9 != 0x205f) {\n                                        if (uVar9 < 0x2000) {\n                                            return 0;\n                                        }\n                                        if ((0x200a < uVar9) && (uVar9 != 0x202f)) {\n                                            return 0;\n                                        }\n                                    }\n                                }\n                                else if (uVar9 != 0x3000) {\n                                    return 0;\n                                }\n                                iVar14 = iVar14 + 1;\n                                var_8h = puVar13;\n                            } while (iVar14 <= var_ch);\n                        }\n                        break;\n                    case 0xe:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                uVar9 = *var_8h;\n                                puVar13 = var_8h + 1;\n                                if ((uVar9 & 0xfc00) == 0xd800) {\n                                    uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                                    puVar13 = var_8h + 2;\n                                }\n                                if (uVar9 < 0x86) {\n                                    if (uVar9 == 0x85) {\n                                        return 0;\n                                    }\n                                    if ((9 < uVar9) && (uVar9 < 0xe)) {\n                                        return 0;\n                                    }\n                                }\n                                else if ((0x2027 < uVar9) && (uVar9 < 0x202a)) {\n                                    return 0;\n                                }\n                                iVar14 = iVar14 + 1;\n                                var_8h = puVar13;\n                            } while (iVar14 <= var_ch);\n                        }\n                        break;\n                    case 0xf:\n                        iVar14 = 1;\n                        if (0 < var_ch) {\n                            do {\n                                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n                                uVar9 = *var_8h;\n                                puVar13 = var_8h + 1;\n                                if ((uVar9 & 0xfc00) == 0xd800) {\n                                    uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                                    puVar13 = var_8h + 2;\n                                }\n                                if (uVar9 < 0x86) {\n                                    if ((uVar9 != 0x85) && (3 < uVar9 - 10)) {\n                                        return 0;\n                                    }\n                                }\n                                else if (1 < uVar9 - 0x2028) {\n                                    return 0;\n                                }\n                                iVar14 = iVar14 + 1;\n                                var_8h = puVar13;\n                            } while (iVar14 <= var_ch);\n                        }\n                    }\n                }\n                break;\n            case 0xbad1abe1:\n                goto code_r0x00bde4fe;\n            }\n        }\n        puVar12 = var_8h;\n        in_ECX = var_8h;\n        puVar13 = var_8h;\n        if (var_ch == var_18h) goto code_r0x00ba4a1f;\n        if (var_2ch == NULL) {\n            puVar15 = var_30h;\n            if (-1 < var_10h) {\n                if (0xa < var_10h) {\n                    return 0xfffffff2;\n                }\n    // switch table (11 cases) at 0xbe02f7\n                switch(*(var_10h * 4 + 0xbe02f7)) {\n                case 0xbdc9b2:\n                    for (puVar13 = var_ch; puVar13 < var_18h; puVar13 = puVar13 + 1) {\n                        iVar14 = 1;\n                        if (arg_10h[0x1f] <= var_8h) {\n                            if ((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) {\n                                arg_10h[0x1a] = 1;\n                                uVar9 = arg_10h[0x23];\n                                goto joined_r0x00bdd1be;\n                            }\n                            break;\n                        }\n                        if ((var_24h != 0) && (var_14h = 0xd800,  (*var_8h & 0xfc00) == 0xd800)) {\n                            iVar14 = 2;\n                        }\n                        if (var_38h != 0) break;\n                        var_8h = var_8h + iVar14;\n                    }\n                    break;\n                case 0xbdca38:\n                    for (; var_ch < var_18h; var_ch = var_ch + 1) {\n                        var_14h = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bdcafc;\n                        uVar9 = *var_8h;\n                        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                            var_14h = 0x2;\n                            uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                        }\n                        cVar4 = *(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                                 0xc32f51);\n                        if (((cVar4 == '\\t') || (cVar4 == '\\x05')) || (cVar4 == '\\b')) {\n                            uVar9 = 1;\n                        }\n                        else {\n                            uVar9 = 0;\n                        }\n                        if (uVar9 == var_38h) break;\n                        var_8h = var_8h + var_14h;\n                    }\n                    break;\n                case 0xbdcb2e:\n                    for (; var_ch < var_18h; var_ch = var_ch + 1) {\n                        var_14h = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bdcafc;\n                        uVar9 = *var_8h;\n                        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                            var_14h = 0x2;\n                            uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                        }\n                        if ((*(*(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                                0xc32f51) * 4 + 0xc489a0) == var_3ch) == var_38h) break;\n                        var_8h = var_8h + var_14h;\n                    }\n                    break;\n                case 0xbdcbe5:\n                    for (; var_ch < var_18h; var_ch = var_ch + 1) {\n                        var_14h = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bdcafc;\n                        uVar9 = *var_8h;\n                        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                            var_14h = 0x2;\n                            uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                        }\n                        if ((*(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                              0xc32f51) == var_3ch) == var_38h) break;\n                        var_8h = var_8h + var_14h;\n                    }\n                    break;\n                case 0xbdcc99:\n                    for (; var_ch < var_18h; var_ch = var_ch + 1) {\n                        var_14h = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bdcafc;\n                        uVar9 = *var_8h;\n                        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                            var_14h = 0x2;\n                            uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                        }\n                        if ((*(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                              0xc32f50) == var_3ch) == var_38h) break;\n                        var_8h = var_8h + var_14h;\n                    }\n                    break;\n                case 0xbdcd4d:\n                    for (; var_ch < var_18h; var_ch = var_ch + 1) {\n                        var_14h = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bdcafc;\n                        uVar9 = *var_8h;\n                        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                            var_14h = 0x2;\n                            uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                        }\n                        iVar14 = *(*(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                                    0xc32f51) * 4 + 0xc489a0);\n                        if ((iVar14 == 1) || (iVar14 == 3)) {\n                            uVar9 = 1;\n                        }\n                        else {\n                            uVar9 = 0;\n                        }\n                        if (uVar9 == var_38h) break;\n                        var_8h = var_8h + var_14h;\n                    }\n                    break;\n                case 0xbdce13:\n                    while (var_ch < var_18h) {\n                        puVar13 = 0x1;\n                        var_28h = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) {\n                            if ((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) {\n                                arg_10h[0x1a] = 1;\n                                uVar9 = arg_10h[0x23];\n                                goto joined_r0x00bdd1be;\n                            }\n                            break;\n                        }\n                        uVar9 = *var_8h;\n                        if (var_24h != 0) {\n                            if ((uVar9 & 0xfc00) == 0xd800) {\n                                puVar13 = 0x2;\n                                uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                                var_28h = 0x2;\n                            }\n                            else {\n                                puVar13 = 0x1;\n                            }\n                        }\n                        if (uVar9 < 0x180f) {\n                            if (uVar9 != 0x180e) {\n                                if (uVar9 < 0x86) {\n                                    if ((uVar9 != 0x85) && ((uVar9 < 9 || ((0xd < uVar9 && (uVar9 != 0x20))))))\n                                    goto code_r0x00bdceeb;\n                                }\n                                else if ((uVar9 != 0xa0) && (uVar9 != 0x1680)) goto code_r0x00bdceeb;\n                            }\n                            goto code_r0x00bdcf40;\n                        }\n                        if (0x202f < uVar9) {\n                            if ((uVar9 != 0x205f) && (uVar9 != 0x3000)) goto code_r0x00bdceeb;\n                            goto code_r0x00bdcf40;\n                        }\n    // switch table (42 cases) at 0xbe0323\n                        switch(uVar9) {\n                        case 0x2000:\n                        case 0x2001:\n                        case 0x2002:\n                        case 0x2003:\n                        case 0x2004:\n                        case 0x2005:\n                        case 0x2006:\n                        case 0x2007:\n                        case 0x2008:\n                        case 0x2009:\n                        case 0x200a:\n                        case 0x2028:\n                        case 0x2029:\n                            puVar13 = var_28h;\n                        default:\ncode_r0x00bdcf40:\n                            if (var_38h != 0) goto code_r0x00bdd1c7;\ncode_r0x00bdcf4a:\n                            var_ch = var_ch + 1;\n                            var_8h = var_8h + puVar13;\n                            break;\n                        case 0x200b:\n                        case 0x200c:\n                        case 0x200d:\n                        case 0x200e:\n                        case 0x200f:\n                        case 0x2010:\n                        case 0x2011:\n                        case 0x2012:\n                        case 0x2013:\n                        case 0x2014:\n                        case 0x2015:\n                        case 0x2016:\n                        case 0x2017:\n                        case 0x2018:\n                        case 0x2019:\n                        case 0x201a:\n                        case 0x201b:\n                        case 0x201c:\n                        case 0x201d:\n                        case 0x201e:\n                        case 0x201f:\n                        case 0x2020:\n                        case 0x2021:\n                        case 0x2022:\n                        case 0x2023:\n                        case 0x2024:\n                        case 0x2025:\n                        case 0x2026:\n                        case 0x2027:\ncode_r0x00bdceeb:\n                            puVar13 = var_28h;\n                            if ((*(*(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                                    0xc32f51) * 4 + 0xc489a0) == 6) != var_38h) goto code_r0x00bdcf4a;\n                            goto code_r0x00bdd1c7;\n                        }\n                    }\n                    break;\n                case 0xbdcf8f:\n                    for (; var_ch < var_18h; var_ch = var_ch + 1) {\n                        var_28h = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bdcafc;\n                        var_14h = *var_8h;\n                        if ((var_24h != 0) && ((var_14h & 0xfc00) == 0xd800)) {\n                            var_28h = 0x2;\n                            var_14h = ((var_14h & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                        }\n                        iVar14 = *(*(*((*((var_14h >> 7) + 0xc43b40) * 0x80 + (var_14h & 0x8000007f)) * 2 + 0xc35840) *\n                                     8 + 0xc32f51) * 4 + 0xc489a0);\n                        if (((iVar14 == 1) || (iVar14 == 3)) || (var_14h == 0x5f)) {\n                            uVar9 = 1;\n                        }\n                        else {\n                            uVar9 = 0;\n                        }\n                        if (uVar9 == var_38h) break;\n                        var_8h = var_8h + var_28h;\n                    }\n                    break;\n                case 0xbdd064:\n                    for (; var_ch < var_18h; var_ch = var_ch + 1) {\n                        var_14h = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x00bdcafc;\n                        uVar9 = *var_8h;\n                        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                            var_14h = 0x2;\n                            uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                        }\n                        puVar3 = var_3ch * 4 + 0xc345d0;\n                        uVar11 = *(var_3ch * 4 + 0xc345d0);\n                        while ((uVar11 <= uVar9 && (puVar3 = puVar3 + 1,  uVar9 != uVar11))) {\n                            uVar11 = *puVar3;\n                        }\n                        if (var_38h != 0) break;\n                        var_8h = var_8h + var_14h;\n                    }\n                    break;\n                case 0xbdd10a:\n                    for (; var_ch < var_18h; var_ch = var_ch + 1) {\n                        iVar14 = 1;\n                        if (arg_10h[0x1f] <= var_8h) {\n                            if ((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) {\n                                arg_10h[0x1a] = 1;\n                                uVar9 = arg_10h[0x23];\n                                goto joined_r0x00bdd1be;\n                            }\n                            break;\n                        }\n                        uVar9 = *var_8h;\n                        if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                            iVar14 = 2;\n                            uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                        }\n                        if (((((uVar9 == 0x24) || (uVar9 == 0x40)) || (uVar9 == 0x60)) ||\n                            ((0x9f < uVar9 && (uVar9 < 0xd800)))) || (0xdfff < uVar9)) {\n                            uVar9 = 1;\n                        }\n                        else {\n                            uVar9 = 0;\n                        }\n                        if (uVar9 == var_38h) break;\n                        var_8h = var_8h + iVar14;\n                    }\n                }\n                goto code_r0x00bdd1c7;\n            }\n            if (var_1ch == 0x16) {\n                for (; var_ch < var_18h; var_ch = var_ch + 1) {\n                    var_28h = arg_10h[0x1f];\n                    if (var_28h <= var_8h) {\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                        break;\n                    }\n                    uVar9 = *var_8h;\n                    puVar13 = var_8h + 1;\n                    if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                        uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar13 & 0x3ff) + 0x10000;\n                        puVar13 = var_8h + 2;\n                    }\n                    var_8h = puVar13;\n                    puVar16 = *(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                               0xc32f52);\n                    puVar13 = arg_10h[0x1f];\n                    var_14h = puVar16;\n                    if (var_8h < arg_10h[0x1f]) {\n                        do {\n                            uVar9 = *var_8h;\n                            var_14h = 0x1;\n                            if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                                var_14h = 0x2;\n                                uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                            }\n                            uVar5 = *(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                                     0xc32f52);\n                            puVar13 = var_28h;\n                            in_EDX = var_30h;\n                        } while (((*(puVar16 * 4 + 0xc35800) & 1 << (uVar5 & 0x1f)) != 0) &&\n                                (var_8h = var_8h + var_14h,  puVar16 = uVar5,  var_8h < var_28h));\n                    }\n                    if ((arg_10h[0x23] != 0) &&\n                       (((puVar13 <= var_8h && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                        (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])))) {\n                        return 0xfffffff4;\n                    }\n                }\n                in_ECX = var_8h;\n                var_10h = puVar12;\n                puVar13 = var_8h;\n                if (var_34h == 0) {\n                    if (puVar12 < var_8h) {\n                        do {\n                            puVar13 = var_8h;\n                            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            if (uVar9 != 0) {\n                                return uVar9;\n                            }\n                            var_8h = puVar13 + -1;\n                            if (var_24h == 0) {\n                                uVar9 = *var_8h;\n                            }\n                            else {\n                                if ((*var_8h & 0xfc00) == 0xdc00) {\n                                    var_8h = puVar13 + -2;\n                                }\n                                uVar9 = *var_8h;\n                                if ((uVar9 & 0xfc00) == 0xd800) {\n                                    uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                                }\n                            }\n                            var_28h = *(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8\n                                       + 0xc32f52);\n                            while( true ) {\n                                in_ECX = var_8h;\n                                puVar15 = var_30h;\n                                if (var_8h <= var_10h) goto code_r0x00ba4b88;\n                                var_14h = var_8h + -1;\n                                if (var_24h == 0) {\n                                    uVar9 = *var_14h;\n                                }\n                                else {\n                                    if ((*var_14h & 0xfc00) == 0xdc00) {\n                                        var_14h = var_8h + -2;\n                                    }\n                                    uVar9 = *var_14h;\n                                    if ((uVar9 & 0xfc00) == 0xd800) {\n                                        uVar9 = ((uVar9 & 0x3ff) << 10 | var_14h[1] & 0x3ff) + 0x10000;\n                                    }\n                                }\n                                puVar13 = *(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840)\n                                            * 8 + 0xc32f52);\n                                if ((*(puVar13 * 4 + 0xc35800) & 1 << (var_28h & 0x1f)) == 0) break;\n                                var_8h = var_14h;\n                                var_28h = puVar13;\n                            }\n                        } while( true );\n                    }\n                    goto code_r0x00ba4b88;\n                }\n                goto code_r0x00ba4a1f;\n            }\n            puVar13 = var_1ch + -3;\n            var_10h = var_8h;\n            if (var_24h == 0) {\n                if (0xf < puVar13) {\n                    return 0xfffffff2;\n                }\n    // switch table (16 cases) at 0xbe0397\n                puVar16 = var_8h;\n                switch(*(puVar13 * 4 + 0xbe0397)) {\n                case 0xbddb93:\n                    if (var_ch < var_18h) {\n                        do {\n                            puVar16 = var_8h;\n                            puVar13 = arg_10h[0x1f];\n                            if (puVar13 <= var_8h) goto code_r0x00bddc61;\n                            if (arg_10h[6] == 0) {\n                                if (((var_8h <= puVar13 + -arg_10h[7]) && (*var_8h == *(arg_10h + 0xd))) &&\n                                   ((arg_10h[7] == 1 || (var_8h[1] == *(arg_10h + 0x36))))) break;\n                            }\n                            else {\n                                iVar14 = fcn.00ba5e9f(puVar13, arg_10h + 7, 0);\n                                if (iVar14 != 0) break;\n                            }\n                            if (((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= puVar16 + 1)) && (arg_10h[6] == 0)) &&\n                                ((arg_10h[7] == 2 && (*puVar16 == *(arg_10h + 0xd))))) &&\n                               (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                                return 0xfffffff4;\n                            }\n                            puVar16 = puVar16 + 1;\n                            var_ch = var_ch + 1;\n                            var_8h = puVar16;\n                        } while (var_ch < var_18h);\n                    }\n                    break;\n                case 0xbddc49:\n                    var_18h = var_18h - var_ch;\n                    var_10h = puVar12;\n                    puVar16 = arg_10h[0x1f];\n                    if (arg_10h[0x1f] - var_8h >> 1 < var_18h) {\ncode_r0x00bddc61:\n                        var_8h = puVar16;\n                        puVar16 = var_8h;\n                        if ((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) {\n                            arg_10h[0x1a] = 1;\n                            uVar9 = arg_10h[0x23];\njoined_r0x00bde05a:\n                            puVar16 = var_8h;\n                            if (1 < uVar9) {\n                                return 0xfffffff4;\n                            }\n                        }\n                    }\n                    else {\n                        puVar16 = var_8h + var_18h;\n                        var_8h = var_8h + var_18h;\n                    }\n                    break;\n                case 0xbddc9e:\n                    var_10h = puVar12;\n                    if (var_ch < var_18h) {\n                        puVar13 = var_ch;\n                        do {\n                            puVar16 = var_8h;\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x00bddc61;\n                            uVar7 = *var_8h;\n                            if (uVar7 == 0xd) {\n                                puVar16 = var_8h + 1;\n                                var_8h = puVar16;\n                                if (arg_10h[0x1f] <= puVar16) break;\n                                if (*puVar16 == 10) goto code_r0x00bddcfe;\n                            }\n                            else {\n                                if ((uVar7 != 10) &&\n                                   ((arg_10h[0x1b] != 0 ||\n                                    ((((uVar7 != 0xb && (uVar7 != 0xc)) && (uVar7 != 0x85)) &&\n                                     ((uVar7 != 0x2028 && (uVar7 != 0x2029)))))))) break;\ncode_r0x00bddcfe:\n                                puVar16 = var_8h + 1;\n                            }\n                            puVar13 = puVar13 + 1;\n                            var_8h = puVar16;\n                        } while (puVar13 < var_18h);\n                    }\n                    break;\n                case 0xbddd0f:\n                    for (puVar13 = var_ch; var_10h = puVar12,  var_8h = puVar16,  puVar13 < var_18h;\n                        puVar13 = puVar13 + 1) {\n                        if (arg_10h[0x1f] <= puVar16) goto code_r0x00bddc61;\n                        uVar7 = *puVar16;\n                        if (uVar7 < 0x180f) {\n                            if (uVar7 == 0x180e) break;\n                            if (uVar7 < 0xa1) {\n                                if (((uVar7 == 0xa0) || (uVar7 == 9)) || (uVar7 == 0x20)) break;\n                            }\n                            else if (uVar7 == 0x1680) break;\n                        }\n                        else if (uVar7 < 0x2060) {\n                            if ((uVar7 == 0x205f) || ((0x1fff < uVar7 && ((uVar7 < 0x200b || (uVar7 == 0x202f))))))\n                            break;\n                        }\n                        else if (uVar7 == 0x3000) break;\n                        puVar16 = puVar16 + 1;\n                    }\n                    break;\n                case 0xbddda9:\n                    for (puVar13 = var_ch; var_10h = puVar12,  var_8h = puVar16,  puVar13 < var_18h;\n                        puVar13 = puVar13 + 1) {\n                        if (arg_10h[0x1f] <= puVar16) goto code_r0x00bddc61;\n                        uVar7 = *puVar16;\n                        if (uVar7 < 0x180f) {\n                            if (uVar7 != 0x180e) {\n                                if (uVar7 < 0xa1) {\n                                    if (((uVar7 != 0xa0) && (uVar7 != 9)) && (uVar7 != 0x20)) break;\n                                }\n                                else if (uVar7 != 0x1680) break;\n                            }\n                        }\n                        else if (uVar7 < 0x2060) {\n                            if ((uVar7 != 0x205f) && ((uVar7 < 0x2000 || ((0x200a < uVar7 && (uVar7 != 0x202f))))))\n                            break;\n                        }\n                        else if (uVar7 != 0x3000) break;\n                        puVar16 = puVar16 + 1;\n                    }\n                    break;\n                case 0xbdde2f:\n                    for (puVar13 = var_ch; var_10h = puVar12,  var_8h = puVar16,  puVar13 < var_18h;\n                        puVar13 = puVar13 + 1) {\n                        if (arg_10h[0x1f] <= puVar16) goto code_r0x00bddc61;\n                        uVar7 = *puVar16;\n                        if (uVar7 < 0x86) {\n                            if ((uVar7 == 0x85) || ((9 < uVar7 && (uVar7 < 0xe)))) break;\n                        }\n                        else if ((0x2027 < uVar7) && (uVar7 < 0x202a)) break;\n                        puVar16 = puVar16 + 1;\n                    }\n                    break;\n                case 0xbdde84:\n                    for (puVar13 = var_ch; var_10h = puVar12,  var_8h = puVar16,  puVar13 < var_18h;\n                        puVar13 = puVar13 + 1) {\n                        if (arg_10h[0x1f] <= puVar16) goto code_r0x00bddc61;\n                        uVar9 = *puVar16;\n                        if (uVar9 < 0x86) {\n                            if ((uVar9 != 0x85) && (3 < uVar9 - 10)) break;\n                        }\n                        else if (1 < uVar9 - 0x2028) break;\n                        puVar16 = puVar16 + 1;\n                    }\n                    break;\n                case 0xbddecf:\n                    for (puVar13 = var_ch; var_10h = puVar12,  var_8h = puVar16,  puVar13 < var_18h;\n                        puVar13 = puVar13 + 1) {\n                        if (arg_10h[0x1f] <= puVar16) goto code_r0x00bddc61;\n                        if ((*puVar16 < 0x100) && ((*(*puVar16 + arg_10h[0x11]) & 4) != 0)) break;\n                        puVar16 = puVar16 + 1;\n                    }\n                    break;\n                case 0xbddf0e:\n                    for (puVar13 = var_ch; var_10h = puVar12,  var_8h = puVar16,  puVar13 < var_18h;\n                        puVar13 = puVar13 + 1) {\n                        if (arg_10h[0x1f] <= puVar16) goto code_r0x00bddc61;\n                        if ((0xff < *puVar16) || ((*(*puVar16 + arg_10h[0x11]) & 4) == 0)) break;\n                        puVar16 = puVar16 + 1;\n                    }\n                    break;\n                case 0xbddf51:\n                    for (puVar13 = var_ch; var_10h = puVar12,  var_8h = puVar16,  puVar13 < var_18h;\n                        puVar13 = puVar13 + 1) {\n                        if (arg_10h[0x1f] <= puVar16) goto code_r0x00bddc61;\n                        if ((*puVar16 < 0x100) && ((*(*puVar16 + arg_10h[0x11]) & 1) != 0)) break;\n                        puVar16 = puVar16 + 1;\n                    }\n                    break;\n                case 0xbddf90:\n                    for (puVar13 = var_ch; var_10h = puVar12,  var_8h = puVar16,  puVar13 < var_18h;\n                        puVar13 = puVar13 + 1) {\n                        if (arg_10h[0x1f] <= puVar16) goto code_r0x00bddc61;\n                        if ((0xff < *puVar16) || ((*(*puVar16 + arg_10h[0x11]) & 1) == 0)) break;\n                        puVar16 = puVar16 + 1;\n                    }\n                    break;\n                case 0xbddfd3:\n                    for (puVar13 = var_ch; var_10h = puVar12,  var_8h = puVar16,  puVar13 < var_18h;\n                        puVar13 = puVar13 + 1) {\n                        if (arg_10h[0x1f] <= puVar16) goto code_r0x00bddc61;\n                        if ((*puVar16 < 0x100) && ((*(*puVar16 + arg_10h[0x11]) & 0x10) != 0)) break;\n                        puVar16 = puVar16 + 1;\n                    }\n                    break;\n                case 0xbde00b:\n                    puVar13 = var_ch;\n                    var_10h = puVar12;\n                    if (var_ch < var_18h) {\n                        while (puVar16 = var_8h,  var_8h < arg_10h[0x1f]) {\n                            if ((0xff < *var_8h) || ((*(*var_8h + arg_10h[0x11]) & 0x10) == 0)) goto code_r0x00bde060;\n                            puVar16 = var_8h + 1;\n                            puVar13 = puVar13 + 1;\n                            var_8h = puVar16;\n                            if (var_18h <= puVar13) goto code_r0x00bde060;\n                        }\n                        if ((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) {\n                            arg_10h[0x1a] = 1;\n                            uVar9 = arg_10h[0x23];\n                            goto joined_r0x00bde05a;\n                        }\n                    }\n                    break;\n                case 0xbde4fe:\n                    goto code_r0x00bde4fe;\n                }\ncode_r0x00bde060:\n                in_ECX = var_8h;\n                puVar13 = var_8h;\n                if (var_34h == 0) {\n                    puVar15 = var_30h;\n                    if (puVar16 != var_10h) {\n                        do {\n                            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            if (uVar9 != 0) {\n                                return uVar9;\n                            }\n                            var_8h = puVar16 + -1;\n                            if ((((var_1ch == 0x11) && (var_10h < var_8h)) && (*var_8h == 10)) && (puVar16[-2] == 0xd))\n                            {\n                                var_8h = puVar16 + -2;\n                            }\n                            in_ECX = var_8h;\n                            puVar16 = var_8h;\n                            puVar15 = var_30h;\n                        } while (var_8h != var_10h);\n                    }\n                    goto code_r0x00ba4b88;\n                }\n                goto code_r0x00ba4a1f;\n            }\n            if (0xf < puVar13) {\n                return 0xfffffff2;\n            }\n    // switch table (16 cases) at 0xbe0357\n            puVar16 = var_8h;\n            puVar15 = var_8h;\n            switch(*(puVar13 * 4 + 0xbe0357)) {\n            case 0xbdd440:\n                if (var_ch < var_18h) {\n                    var_20h = var_8h + 1;\n                    do {\n                        puVar16 = var_8h;\n                        puVar15 = arg_10h[0x1f];\n                        puVar13 = var_8h;\n                        if (puVar15 <= var_8h) goto code_r0x00bdd59a;\n                        if (arg_10h[6] == 0) {\n                            if (((var_8h <= puVar15 + -arg_10h[7]) && (*var_8h == *(arg_10h + 0xd))) &&\n                               ((puVar15 = var_8h,  arg_10h[7] == 1 || (*var_20h == *(arg_10h + 0x36))))) break;\n                        }\n                        else {\n                            iVar14 = fcn.00ba5e9f(puVar15, arg_10h + 7, var_24h);\n                            puVar15 = var_8h;\n                            if (iVar14 != 0) break;\n                        }\n                        if (((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= var_20h)) && (arg_10h[6] == 0)) &&\n                            ((arg_10h[7] == 2 && (*puVar16 == *(arg_10h + 0xd))))) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                        var_8h = puVar16 + 1;\n                        puVar13 = var_20h + 1;\n                        if ((var_8h < arg_10h[0x1f]) && ((*var_8h & 0xfc00) == 0xdc00)) {\n                            var_8h = puVar16 + 2;\n                            puVar13 = var_20h + 2;\n                        }\n                        var_20h = puVar13;\n                        var_ch = var_ch + 1;\n                        puVar16 = var_8h;\n                        puVar15 = var_8h;\n                    } while (var_ch < var_18h);\n                }\n                break;\n            case 0xbdd53b:\n                if (var_18h < 0x7fffffff) {\n                    var_10h = puVar12;\n                    if (var_ch < var_18h) {\n                        puVar17 = var_ch;\n                        do {\n                            puVar13 = var_8h;\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x00bdd59a;\n                            puVar13 = var_8h + 1;\n                            if ((puVar13 < arg_10h[0x1f]) && (var_14h = 0xdc00,  (*puVar13 & 0xfc00) == 0xdc00)) {\n                                puVar13 = var_8h + 2;\n                            }\n                            var_8h = puVar13;\n                            puVar17 = puVar17 + 1;\n                            puVar16 = var_8h;\n                            puVar15 = var_8h;\n                        } while (puVar17 < var_18h);\n                    }\n                    break;\n                }\n                var_10h = puVar12;\n                puVar13 = arg_10h[0x1f];\ncode_r0x00bdd59a:\n                var_8h = puVar13;\n                puVar16 = var_8h;\n                puVar15 = var_8h;\n                if ((arg_10h[0x23] == 0) || (var_8h < arg_10h[0x22] || var_8h == arg_10h[0x22])) break;\n                arg_10h[0x1a] = 1;\n                uVar9 = arg_10h[0x23];\n                puVar12 = var_10h;\n                goto joined_r0x00bddaf8;\n            case 0xbdd5cc:\n                var_18h = var_18h - var_ch;\n                var_10h = puVar12;\n                puVar13 = arg_10h[0x1f];\n                if (arg_10h[0x1f] - var_8h >> 1 < var_18h) goto code_r0x00bdd59a;\n                puVar16 = var_8h + var_18h;\n                puVar15 = var_8h + var_18h;\n                break;\n            case 0xbdd5ea:\n                var_10h = puVar12;\n                if (var_ch < var_18h) {\n                    puVar13 = arg_10h[0x1f];\n                    do {\n                        iVar14 = 1;\n                        if (puVar13 <= var_8h) goto code_r0x00bdd6a7;\n                        uVar9 = *var_8h;\n                        if ((uVar9 & 0xfc00) == 0xd800) {\n                            iVar14 = 2;\n                            uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                        }\n                        if (uVar9 == 0xd) {\n                            puVar13 = arg_10h[0x1f];\n                            puVar16 = var_8h + 1;\n                            puVar15 = puVar16;\n                            if (puVar13 <= puVar16) break;\n                            if (*puVar16 == 10) {\n                                puVar16 = var_8h + 2;\n                            }\n                        }\n                        else {\n                            if ((uVar9 != 10) &&\n                               ((puVar16 = var_8h,  puVar15 = var_8h,  arg_10h[0x1b] != 0 ||\n                                (((uVar9 != 0xb && (uVar9 != 0xc)) &&\n                                 ((uVar9 != 0x85 && ((uVar9 != 0x2028 && (uVar9 != 0x2029)))))))))) break;\n                            puVar13 = arg_10h[0x1f];\n                            puVar16 = var_8h + iVar14;\n                        }\n                        var_ch = var_ch + 1;\n                        puVar15 = puVar16;\n                        var_8h = puVar16;\n                    } while (var_ch < var_18h);\n                }\n                break;\n            case 0xbdd6d4:\n                for (; puVar16 = var_8h,  var_10h = puVar12,  puVar15 = var_8h,  var_ch < var_18h; var_ch = var_ch + 1)\n                {\n                    iVar14 = 1;\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x00bdd6a7;\n                    uVar9 = *var_8h;\n                    if ((uVar9 & 0xfc00) == 0xd800) {\n                        iVar14 = 2;\n                        uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                    }\n                    if (uVar9 < 0x180f) {\n                        if (uVar9 == 0x180e) goto code_r0x00bdd735;\n                        if (uVar9 < 0xa1) {\n                            if (((uVar9 == 0xa0) || (uVar9 == 9)) || (uVar9 == 0x20)) goto code_r0x00bdd735;\n                        }\n                        else if (uVar9 == 0x1680) goto code_r0x00bdd735;\ncode_r0x00bdd798:\n                        bVar19 = false;\n                    }\n                    else {\n                        if (0x205f < uVar9) {\n                            if (uVar9 == 0x3000) goto code_r0x00bdd735;\n                            goto code_r0x00bdd798;\n                        }\n                        if ((uVar9 != 0x205f) && ((uVar9 < 0x2000 || ((0x200a < uVar9 && (uVar9 != 0x202f))))))\n                        goto code_r0x00bdd798;\ncode_r0x00bdd735:\n                        bVar19 = true;\n                    }\n                    if (bVar19 == (var_1ch == 0x12)) break;\n                    var_8h = var_8h + iVar14;\n                }\n                break;\n            case 0xbdd79c:\n                for (; puVar16 = var_8h,  var_10h = puVar12,  puVar15 = var_8h,  var_ch < var_18h; var_ch = var_ch + 1)\n                {\n                    iVar14 = 1;\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x00bdd6a7;\n                    uVar9 = *var_8h;\n                    if ((uVar9 & 0xfc00) == 0xd800) {\n                        iVar14 = 2;\n                        uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                    }\n                    if (uVar9 < 0x86) {\n                        if ((uVar9 != 0x85) && ((uVar9 < 10 || (0xd < uVar9)))) goto code_r0x00bdd7f7;\ncode_r0x00bdd82c:\n                        bVar19 = true;\n                    }\n                    else {\n                        if (uVar9 - 0x2028 < 2) goto code_r0x00bdd82c;\ncode_r0x00bdd7f7:\n                        bVar19 = false;\n                    }\n                    if (bVar19 == (var_1ch == 0x14)) break;\n                    var_8h = var_8h + iVar14;\n                }\n                break;\n            case 0xbdd833:\n                for (; puVar16 = var_8h,  var_10h = puVar12,  puVar15 = var_8h,  var_ch < var_18h; var_ch = var_ch + 1)\n                {\n                    iVar14 = 1;\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x00bdd6a7;\n                    uVar9 = *var_8h;\n                    if ((uVar9 & 0xfc00) == 0xd800) {\n                        iVar14 = 2;\n                        uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                    }\n                    if ((uVar9 < 0x100) && ((*(uVar9 + arg_10h[0x11]) & 4) != 0)) break;\n                    var_8h = var_8h + iVar14;\n                }\n                break;\n            case 0xbdd8a6:\n                for (; puVar16 = var_8h,  var_10h = puVar12,  puVar15 = var_8h,  var_ch < var_18h; var_ch = var_ch + 1)\n                {\n                    iVar14 = 1;\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x00bdd6a7;\n                    uVar9 = *var_8h;\n                    if ((uVar9 & 0xfc00) == 0xd800) {\n                        iVar14 = 2;\n                        uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                    }\n                    if ((0xff < uVar9) || ((*(uVar9 + arg_10h[0x11]) & 4) == 0)) break;\n                    var_8h = var_8h + iVar14;\n                }\n                break;\n            case 0xbdd91d:\n                for (; puVar16 = var_8h,  var_10h = puVar12,  puVar15 = var_8h,  var_ch < var_18h; var_ch = var_ch + 1)\n                {\n                    iVar14 = 1;\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x00bdd6a7;\n                    uVar9 = *var_8h;\n                    if ((uVar9 & 0xfc00) == 0xd800) {\n                        iVar14 = 2;\n                        uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                    }\n                    if ((uVar9 < 0x100) && ((*(uVar9 + arg_10h[0x11]) & 1) != 0)) break;\n                    var_8h = var_8h + iVar14;\n                }\n                break;\n            case 0xbdd990:\n                for (; puVar16 = var_8h,  var_10h = puVar12,  puVar15 = var_8h,  var_ch < var_18h; var_ch = var_ch + 1)\n                {\n                    iVar14 = 1;\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x00bdd6a7;\n                    uVar9 = *var_8h;\n                    if ((uVar9 & 0xfc00) == 0xd800) {\n                        iVar14 = 2;\n                        uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                    }\n                    if ((0xff < uVar9) || ((*(uVar9 + arg_10h[0x11]) & 1) == 0)) break;\n                    var_8h = var_8h + iVar14;\n                }\n                break;\n            case 0xbdda07:\n                for (; puVar16 = var_8h,  var_10h = puVar12,  puVar15 = var_8h,  var_ch < var_18h; var_ch = var_ch + 1)\n                {\n                    iVar14 = 1;\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x00bdd6a7;\n                    uVar9 = *var_8h;\n                    if ((uVar9 & 0xfc00) == 0xd800) {\n                        iVar14 = 2;\n                        uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                    }\n                    if ((uVar9 < 0x100) && ((*(uVar9 + arg_10h[0x11]) & 0x10) != 0)) break;\n                    var_8h = var_8h + iVar14;\n                }\n                break;\n            case 0xbdda7a:\n                var_10h = puVar12;\n                if (var_ch < var_18h) {\n                    while (iVar14 = 1,  puVar16 = var_8h,  puVar15 = var_8h,  var_8h < arg_10h[0x1f]) {\n                        uVar9 = *var_8h;\n                        if ((uVar9 & 0xfc00) == 0xd800) {\n                            iVar14 = 2;\n                            uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                        }\n                        if ((0xff < uVar9) || ((*(uVar9 + arg_10h[0x11]) & 0x10) == 0)) goto code_r0x00bddafe;\n                        puVar16 = var_8h + iVar14;\n                        var_ch = var_ch + 1;\n                        puVar15 = puVar16;\n                        var_8h = puVar16;\n                        if (var_18h <= var_ch) goto code_r0x00bddafe;\n                    }\n                    if ((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) {\n                        arg_10h[0x1a] = 1;\n                        uVar9 = arg_10h[0x23];\n                        goto joined_r0x00bddaf8;\n                    }\n                }\n                break;\n            case 0xbde4fe:\n                goto code_r0x00bde4fe;\n            }\n            goto code_r0x00bddafe;\n        }\n        if (var_10h < 0) {\n            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar13 = var_8h;\n            if (var_1ch == 0x16) goto joined_r0x00bdf59c;\n            if (var_24h == 0) goto joined_r0x00bdfa74;\n            goto joined_r0x00ba5116;\n        }\n        if (0xa < var_10h) {\n            return 0xfffffff2;\n        }\n    // switch table (11 cases) at 0xbe03d7\n        switch(*(var_10h * 4 + 0xbe03d7)) {\n        case 0xbdec7a:\n            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar13 = var_8h;\n            var_8h = puVar12;\n            while( true ) {\n                if (uVar9 != 0) {\n                    return uVar9;\n                }\n                if (var_18h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                puVar15 = var_8h + 1;\n                if ((var_24h != 0) && ((*var_8h & 0xfc00) == 0xd800)) {\n                    puVar15 = var_8h + 2;\n                }\n                if (var_38h != 0) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                var_8h = puVar13;\n                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar13 = var_8h;\n                var_8h = puVar15;\n            }\n            break;\n        case 0xbdecff:\n            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar13 = var_8h;\n            var_8h = puVar12;\n            while( true ) {\n                if (uVar9 != 0) {\n                    return uVar9;\n                }\n                if (var_18h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                uVar9 = *var_8h;\n                puVar15 = var_8h + 1;\n                if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                    uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar15 & 0x3ff) + 0x10000;\n                    puVar15 = var_8h + 2;\n                }\n                cVar4 = *(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 + 0xc32f51);\n                if (((cVar4 == '\\t') || (cVar4 == '\\x05')) || (cVar4 == '\\b')) {\n                    uVar9 = 1;\n                }\n                else {\n                    uVar9 = 0;\n                }\n                if (uVar9 == var_38h) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                var_8h = puVar13;\n                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar13 = var_8h;\n                var_8h = puVar15;\n            }\n            break;\n        case 0xbdeded:\n            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar13 = var_8h;\n            var_8h = puVar12;\n            while( true ) {\n                if (uVar9 != 0) {\n                    return uVar9;\n                }\n                if (var_18h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                uVar9 = *var_8h;\n                puVar15 = var_8h + 1;\n                if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                    uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar15 & 0x3ff) + 0x10000;\n                    puVar15 = var_8h + 2;\n                }\n                if ((*(*(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 + 0xc32f51) *\n                       4 + 0xc489a0) == var_3ch) == var_38h) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                var_8h = puVar13;\n                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar13 = var_8h;\n                var_8h = puVar15;\n            }\n            break;\n        case 0xbdeed2:\n            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar13 = var_8h;\n            var_8h = puVar12;\n            while( true ) {\n                if (uVar9 != 0) {\n                    return uVar9;\n                }\n                if (var_18h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                uVar9 = *var_8h;\n                puVar15 = var_8h + 1;\n                if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                    uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar15 & 0x3ff) + 0x10000;\n                    puVar15 = var_8h + 2;\n                }\n                if ((*(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 + 0xc32f51) ==\n                    var_3ch) == var_38h) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                var_8h = puVar13;\n                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar13 = var_8h;\n                var_8h = puVar15;\n            }\n            break;\n        case 0xbdefb0:\n            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar13 = var_8h;\n            var_8h = puVar12;\n            while( true ) {\n                if (uVar9 != 0) {\n                    return uVar9;\n                }\n                if (var_18h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                uVar9 = *var_8h;\n                puVar15 = var_8h + 1;\n                if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                    uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar15 & 0x3ff) + 0x10000;\n                    puVar15 = var_8h + 2;\n                }\n                if ((*(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 + 0xc32f50) ==\n                    var_3ch) == var_38h) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                var_8h = puVar13;\n                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar13 = var_8h;\n                var_8h = puVar15;\n            }\n            break;\n        case 0xbdf08e:\n            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar13 = var_8h;\n            var_8h = puVar12;\n            while( true ) {\n                if (uVar9 != 0) {\n                    return uVar9;\n                }\n                if (var_18h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                uVar9 = *var_8h;\n                puVar15 = var_8h + 1;\n                if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                    uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar15 & 0x3ff) + 0x10000;\n                    puVar15 = var_8h + 2;\n                }\n                iVar14 = *(*(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 + 0xc32f51\n                            ) * 4 + 0xc489a0);\n                if ((iVar14 == 1) || (iVar14 == 3)) {\n                    uVar9 = 1;\n                }\n                else {\n                    uVar9 = 0;\n                }\n                if (uVar9 == var_38h) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                var_8h = puVar13;\n                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar13 = var_8h;\n                var_8h = puVar15;\n            }\n            break;\n        case 0xbdf17e:\n            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar13 = var_8h;\n            var_8h = puVar12;\n            goto joined_r0x00bdf19b;\n        case 0xbdf2f7:\n            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar13 = var_8h;\n            var_8h = puVar12;\n            while( true ) {\n                if (uVar9 != 0) {\n                    return uVar9;\n                }\n                if (var_18h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                var_14h = *var_8h;\n                puVar15 = var_8h + 1;\n                if ((var_24h != 0) && ((var_14h & 0xfc00) == 0xd800)) {\n                    var_14h = ((var_14h & 0x3ff) << 10 | *puVar15 & 0x3ff) + 0x10000;\n                    puVar15 = var_8h + 2;\n                }\n                iVar14 = *(*(*((*((var_14h >> 7) + 0xc43b40) * 0x80 + (var_14h & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                            0xc32f51) * 4 + 0xc489a0);\n                if (((iVar14 == 1) || (iVar14 == 3)) || (var_14h == 0x5f)) {\n                    uVar9 = 1;\n                }\n                else {\n                    uVar9 = 0;\n                }\n                if (uVar9 == var_38h) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                var_8h = puVar13;\n                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar13 = var_8h;\n                var_8h = puVar15;\n            }\n            break;\n        case 0xbdf3f6:\n            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar13 = var_8h;\n            var_8h = puVar12;\n            while( true ) {\n                if (uVar9 != 0) {\n                    return uVar9;\n                }\n                if (var_18h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                uVar9 = *var_8h;\n                puVar15 = var_8h + 1;\n                if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                    uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar15 & 0x3ff) + 0x10000;\n                    puVar15 = var_8h + 2;\n                }\n                puVar3 = var_3ch * 4 + 0xc345d0;\n                uVar11 = *(var_3ch * 4 + 0xc345d0);\n                while ((uVar11 <= uVar9 && (puVar3 = puVar3 + 1,  uVar9 != uVar11))) {\n                    uVar11 = *puVar3;\n                }\n                if (var_38h != 0) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                var_8h = puVar13;\n                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar13 = var_8h;\n                var_8h = puVar15;\n            }\n            break;\n        case 0xbdf4c7:\n            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar13 = var_8h;\n            var_8h = puVar12;\n            while( true ) {\n                if (uVar9 != 0) {\n                    return uVar9;\n                }\n                if (var_18h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                uVar9 = *var_8h;\n                puVar15 = var_8h + 1;\n                if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n                    uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar15 & 0x3ff) + 0x10000;\n                    puVar15 = var_8h + 2;\n                }\n                if (((((uVar9 == 0x24) || (uVar9 == 0x40)) || (uVar9 == 0x60)) || ((0x9f < uVar9 && (uVar9 < 0xd800))))\n                   || (0xdfff < uVar9)) {\n                    uVar9 = 1;\n                }\n                else {\n                    uVar9 = 0;\n                }\n                if (uVar9 == var_38h) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                var_8h = puVar13;\n                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar13 = var_8h;\n                var_8h = puVar15;\n            }\n        }\n        goto code_r0x00bde866;\n    default:\n        return 0xfffffffb;\n    case 0x6e:\n    case 0x6f:\n        uVar9 = in_EDX[0x11];\n        var_20h = in_EDX + 1;\n        var_30h = in_EDX + 0x11;\n    // switch table (12 cases) at 0xba55f0\n        switch(uVar9) {\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n            var_30h = in_EDX + 0x12;\n            if (uVar9 - 0x62 < 8) {\n                if ((uVar9 - 0x62 & 1) == 0) {\n                    bVar19 = false;\n                }\n                else {\n                    bVar19 = true;\n                }\n            }\n            else {\n                bVar19 = false;\n                var_34h = 1;\n            }\n            var_10h = *(uVar9 + 0xc356ce);\n            var_1ch = *(uVar9 + 0xc356da);\n            if (var_1ch == NULL) {\n                var_1ch = 0x7fffffff;\n            }\n            break;\n        case 0x68:\n        case 0x69:\n        case 0x6d:\n            bVar19 = uVar9 == 0x69;\n            var_1ch = in_EDX[0x13];\n            var_34h = uVar9 == 0x6d;\n            var_10h = in_EDX[0x12];\n            if (var_1ch == NULL) {\n                var_1ch = 0x7fffffff;\n            }\n            var_30h = in_EDX + 0x14;\n            break;\n        default:\n            bVar19 = false;\n            var_1ch = 0x1;\n            var_10h = 0x1;\n        }\n        if (var_24h == 0) {\n            var_14h = 0x1;\n            if (0 < var_10h) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n                    uVar7 = *var_8h;\n                    var_28h = uVar7;\n                    var_8h = var_8h + 1;\n                    if (var_28h < 0x100) {\n                        if ((*((uVar7 >> 3) + var_20h) & 1 << (uVar7 & 7)) == 0) {\n                            return 0;\n                        }\n                    }\n                    else if (uVar11 == 0x6e) {\n                        return 0;\n                    }\n                    var_14h = var_14h + 1;\n                } while (var_14h <= var_10h);\n            }\n        }\n        else {\n            var_28h = 0x1;\n            if (0 < var_10h) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n                    var_14h = *var_8h;\n                    puVar13 = var_8h + 1;\n                    if ((var_14h & 0xfc00) == 0xd800) {\n                        var_14h = ((var_14h & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                        puVar13 = var_8h + 2;\n                    }\n                    var_8h = puVar13;\n                    if (var_14h < 0x100) {\n                        if ((*((var_14h >> 3) + var_20h) & 1 << (var_14h & 7)) == 0) {\n                            return 0;\n                        }\n                    }\n                    else if (uVar11 == 0x6e) {\n                        return 0;\n                    }\n                    var_28h = var_28h + 1;\n                } while (var_28h <= var_10h);\n            }\n        }\n        in_ECX = var_8h;\n        in_EDX = var_30h;\n        puVar13 = var_8h;\n        if (var_10h == var_1ch) goto code_r0x00ba4a1f;\n        if (!bVar19) {\n            var_2ch = var_8h;\n            if (var_24h == 0) {\n                for (; var_10h < var_1ch; var_10h = var_10h + 1) {\n                    if (arg_10h[0x1f] <= in_ECX) {\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= in_ECX && in_ECX != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                        break;\n                    }\n                    uVar7 = *in_ECX;\n                    if (uVar7 < 0x100) {\n                        if ((*((uVar7 >> 3) + var_20h) & 1 << (uVar7 & 7)) == 0) break;\n                    }\n                    else if (uVar11 == 0x6e) break;\n                    in_ECX = in_ECX + 1;\n                }\n                puVar13 = in_ECX;\n                if (var_34h == 0) {\n                    bVar19 = in_ECX < var_8h;\n                    var_8h = in_ECX;\n                    if (bVar19) {\n                        return 0;\n                    }\n                    do {\n                        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        if (uVar9 != 0) {\n                            return uVar9;\n                        }\n                        in_ECX = in_ECX + -1;\n                    } while (var_2ch <= in_ECX);\n                    return 0;\n                }\n            }\n            else {\n                for (; var_10h < var_1ch; var_10h = var_10h + 1) {\n                    puVar13 = 0x1;\n                    var_14h = 0x1;\n                    if (arg_10h[0x1f] <= in_ECX) {\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= in_ECX && in_ECX != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                        break;\n                    }\n                    uVar9 = *in_ECX;\n                    if ((uVar9 & 0xfc00) == 0xd800) {\n                        puVar13 = 0x2;\n                        var_14h = 0x2;\n                        uVar9 = ((uVar9 & 0x3ff) << 10 | in_ECX[1] & 0x3ff) + 0x10000;\n                    }\n                    if (uVar9 < 0x100) {\n                        puVar13 = var_14h;\n                        if ((*((uVar9 >> 3) + var_20h) & 1 << (uVar9 & 7)) == 0) break;\n                    }\n                    else if (uVar11 == 0x6e) break;\n                    in_ECX = in_ECX + puVar13;\n                }\n                puVar13 = in_ECX;\n                if (var_34h == 0) {\n                    var_8h = in_ECX;\n                    uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    while( true ) {\n                        if (uVar9 != 0) {\n                            return uVar9;\n                        }\n                        puVar13 = in_ECX + -1;\n                        if (in_ECX == var_2ch) break;\n                        if ((*puVar13 & 0xfc00) == 0xdc00) {\n                            puVar13 = in_ECX + -2;\n                        }\n                        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        in_ECX = puVar13;\n                    }\n                    return 0;\n                }\n            }\n            goto code_r0x00ba4a1f;\n        }\n        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (var_24h != 0) goto joined_r0x00bde678;\n        while( true ) {\n            if (uVar9 != 0) {\n                return uVar9;\n            }\n            if (var_1ch <= var_10h) {\n                return 0;\n            }\n            if (arg_10h[0x1f] <= var_8h) break;\n            uVar7 = *var_8h;\n            var_8h = var_8h + 1;\n            if (uVar7 < 0x100) {\n                if ((*((uVar7 >> 3) + var_20h) & 1 << (uVar7 & 7)) == 0) {\n                    return 0;\n                }\n            }\n            else if (uVar11 == 0x6e) {\n                return 0;\n            }\n            var_10h = var_10h + 1;\n            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        }\ncode_r0x00bde4bf:\n        if (arg_10h[0x23] == 0) {\n            return 0;\n        }\ncode_r0x00bde4cc:\n        bVar19 = var_8h < arg_10h[0x22];\n        bVar20 = var_8h == arg_10h[0x22];\n        goto code_r0x00bde4da;\n    case 0x70:\n        var_28h = in_EDX + 2;\n        uVar9 = in_EDX[in_EDX[1]];\n        var_30h = in_EDX + in_EDX[1];\n    // switch table (12 cases) at 0xbe0203\n        switch(uVar9) {\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n            uVar11 = uVar9 - 0x62;\n            var_30h = var_30h + 1;\n            if (7 >= uVar11) {\n                var_2ch = uVar11 & 1;\n            }\n            var_34h = 7 < uVar11;\n            var_1ch = *(uVar9 + 0xc356da);\n            var_20h = *(uVar9 + 0xc356ce);\n            if (var_1ch == NULL) {\n                var_1ch = 0x7fffffff;\n                in_ECX = var_8h;\n            }\n            break;\n        case 0x68:\n        case 0x69:\n        case 0x6d:\n            var_1ch = var_30h[2];\n            var_2ch = uVar9 == 0x69;\n            var_20h = var_30h[1];\n            var_34h = uVar9 == 0x6d;\n            if (var_1ch == NULL) {\n                var_1ch = 0x7fffffff;\n            }\n            var_30h = var_30h + 3;\n            break;\n        default:\n            var_1ch = 0x1;\n            var_20h = 0x1;\n        }\n        puVar15 = var_20h;\n        in_EDX = var_30h;\n        var_14h = 0x1;\n        if (0 < var_20h) {\n            do {\n                if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde4bf;\n                puVar13 = var_8h + 1;\n                if ((var_24h != 0) && ((*var_8h & 0xfc00) == 0xd800)) {\n                    puVar13 = var_8h + 2;\n                }\n                var_8h = puVar13;\n                iVar14 = fcn.00c1eae6(var_24h);\n                if (iVar14 == 0) {\n                    return 0;\n                }\n                var_14h = var_14h + 1;\n                in_ECX = var_8h;\n            } while (var_14h <= puVar15);\n        }\n        puVar13 = var_8h;\n        if (puVar15 != var_1ch) {\n            if (var_2ch != NULL) {\n                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar15 = var_8h;\n                while( true ) {\n                    if (uVar9 != 0) {\n                        return uVar9;\n                    }\n                    if (var_1ch <= var_20h) {\n                        return 0;\n                    }\n                    var_8h = puVar13;\n                    if (arg_10h[0x1f] <= puVar13) break;\n                    puVar12 = puVar13 + 1;\n                    if ((var_24h != 0) && ((*puVar13 & 0xfc00) == 0xd800)) {\n                        puVar12 = puVar13 + 2;\n                    }\n                    var_8h = puVar15;\n                    iVar14 = fcn.00c1eae6(var_24h);\n                    if (iVar14 == 0) {\n                        return 0;\n                    }\n                    var_20h = var_20h + 1;\n                    uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar15 = var_8h;\n                    puVar13 = puVar12;\n                }\n                goto code_r0x00bde866;\n            }\n            var_10h = var_8h;\n            puVar12 = var_8h;\n            if (puVar15 < var_1ch) {\n                do {\n                    puVar12 = var_8h;\n                    var_14h = 0x1;\n                    if (arg_10h[0x1f] <= var_8h) {\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                        break;\n                    }\n                    if ((var_24h != 0) && ((*var_8h & 0xfc00) == 0xd800)) {\n                        var_14h = 0x2;\n                    }\n                    iVar14 = fcn.00c1eae6(var_24h);\n                    if (iVar14 == 0) break;\n                    var_20h = var_20h + 1;\n                    var_8h = var_8h + var_14h;\n                    puVar12 = var_8h;\n                } while (var_20h < var_1ch);\n            }\n            in_ECX = var_8h;\n            puVar13 = var_8h;\n            if (var_34h == 0) {\n                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                while( true ) {\n                    if (uVar9 != 0) {\n                        return uVar9;\n                    }\n                    puVar13 = puVar12 + -1;\n                    if (puVar12 == var_10h) break;\n                    if ((var_24h != 0) && ((*puVar13 & 0xfc00) == 0xdc00)) {\n                        puVar13 = puVar12 + -2;\n                    }\n                    uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar12 = puVar13;\n                }\n                return 0;\n            }\n        }\n        goto code_r0x00ba4a1f;\n    case 0x71:\n    case 0x72:\n        uVar9 = in_EDX[1];\n        var_34h = uVar11 == 0x72;\n        var_10h = uVar9 * 2;\n        var_30h = in_EDX + 2;\n        if ((var_10h < arg_ch) && (uVar11 = arg_10h[3],  -1 < *(uVar11 + uVar9 * 8))) {\n            var_20h = *(uVar11 + 4 + uVar9 * 8) - *(uVar11 + uVar9 * 8);\n        }\n        else {\n            var_20h = (arg_10h[0x15] != 0) - 1;\n        }\n        goto code_r0x00bd9f13;\n    case 0x73:\n    case 0x74:\n        var_34h = uVar11 == 0x74;\n        var_1ch = in_EDX[2];\n        var_30h = in_EDX + 3;\n        var_28h = arg_10h[0xc] + in_EDX[1] * arg_10h[9] * 2;\n        var_10h = NULL;\n        var_20h = (arg_10h[0x15] != 0) - 1;\n        if (var_1ch != NULL) {\n            do {\n                var_1ch = var_1ch - 1;\n                uVar9 = *var_28h;\n                var_10h = uVar9 * 2;\n                if ((var_10h < arg_ch) && (uVar11 = arg_10h[3],  -1 < *(uVar11 + uVar9 * 8))) {\n                    var_20h = *(uVar11 + 4 + uVar9 * 8) - *(uVar11 + uVar9 * 8);\n                    break;\n                }\n                var_28h = var_28h + arg_10h[9];\n                in_ECX = var_8h;\n            } while (0 < var_1ch);\n        }\ncode_r0x00bd9f13:\n        in_EDX = var_30h;\n        var_14h = *var_30h;\n        if (var_14h + -0x31 < 0x8) {\n    // switch table (8 cases) at 0xbe01f3\n            switch(*(*(var_14h + 0xbe0199) * 4 + 0xbe01f3)) {\n            case 0xbd9f33:\n                var_30h = var_30h + 1;\n                var_2ch = var_14h + -0x31 & 1;\n                var_28h = *(var_14h + 0x61ab67);\n                var_1ch = *(var_14h + 0x61ab6d);\n                if (var_1ch == NULL) {\n                    var_1ch = 0x7fffffff;\n                }\n                break;\n            case 0xbd9f69:\n                var_28h = var_30h[1];\n                var_2ch = *var_30h == 0x69;\n                var_1ch = var_30h[2];\n                if (var_1ch == NULL) {\n                    var_1ch = 0x7fffffff;\n                }\n                var_30h = var_30h + 3;\n            }\n            puVar15 = var_28h;\n            in_EDX = var_30h;\n            if ((var_20h != NULL) && ((-1 < var_20h || (var_28h != NULL)))) {\n                var_14h = 0x1;\n                if (0 < var_28h) {\n                    do {\n                        iVar14 = fcn.00c1e7bd(var_20h, arg_10h, var_34h);\n                        if (iVar14 < 0) goto code_r0x00bde5de;\n                        var_8h = var_8h + iVar14;\n                        var_14h = var_14h + 1;\n                    } while (var_14h <= puVar15);\n                }\n                puVar13 = var_8h;\n                in_ECX = var_8h;\n                if (puVar15 != var_1ch) {\n                    if (var_2ch != NULL) {\n                        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        while( true ) {\n                            if (uVar9 != 0) {\n                                return uVar9;\n                            }\n                            if (var_1ch <= var_28h) {\n                                return 0;\n                            }\n                            iVar14 = fcn.00c1e7bd(var_20h, arg_10h, var_34h);\n                            if (iVar14 < 0) break;\n                            var_28h = var_28h + 1;\n                            puVar13 = puVar13 + iVar14;\n                            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        }\n                        if (iVar14 == -2) {\n                            puVar13 = arg_10h[0x1f];\n                        }\n                        goto code_r0x00bde510;\n                    }\n                    puVar13 = var_8h;\n                    var_14h = var_8h;\n                    if (var_1ch <= puVar15) goto code_r0x00bde5a1;\n                    goto code_r0x00bde53c;\n                }\n            }\n        }\n        else {\n            iVar14 = fcn.00c1e7bd(var_20h, arg_10h, var_34h);\n            if (iVar14 < 0) {\ncode_r0x00bde5de:\n                if (iVar14 == -2) {\n                    var_8h = arg_10h[0x1f];\n                }\n                if (arg_10h[0x23] == 0) {\n                    return 0;\n                }\n                if (var_8h < arg_10h[0x1f]) {\n                    return 0;\n                }\n                goto code_r0x00bde4cc;\n            }\n            in_ECX = var_8h + iVar14;\n            puVar13 = var_8h + iVar14;\n        }\n        goto code_r0x00ba4a1f;\n    case 0x75:\n        puVar13 = arg_10h[0x1d] + in_EDX[1];\n        if (puVar13 == arg_10h[0x1d]) {\n            var_50h = 0;\n        }\n        else {\n            var_50h = puVar13[2];\n        }\n        for (ppuVar8 = arg_10h[0x2a]; ppuVar8 != NULL; ppuVar8 = *ppuVar8) {\n            if ((var_50h == ppuVar8[1]) && (var_8h == ppuVar8[5])) {\n                return 0xffffffe6;\n            }\n        }\n        in_EDX = in_EDX + 2;\n        var_44h = arg_10h[0x25];\n        var_40h = var_8h;\n        var_54h = arg_10h[0x2a];\n        arg_10h[0x2a] = &fcn.00ba49c0::var_54h;\n        var_48h = arg_10h[4];\n        var_30h = in_EDX;\n        var_14h = puVar13;\n        if (var_48h < 0x1f) {\n            var_4ch = &fcn.00ba49c0::var_14ch;\n        }\n        else {\n            var_4ch = (**0xc3574c)(var_48h * 4);\n            if (var_4ch == NULL) {\n                return 0xfffffffa;\n            }\n        }\n        fcn.00bb1080(var_4ch, arg_10h[3], var_48h << 2);\n        var_28h = 0x87 < *puVar13;\n        while( true ) {\n            if (var_28h != NULL) {\n                arg_10h[0x27] = 2;\n            }\n            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            fcn.00bb1080(arg_10h[3], var_4ch, var_48h << 2);\n            arg_10h[0x25] = var_44h;\n            arg_10h[0x2a] = var_54h;\n            if ((uVar9 == 1) || (uVar9 == 0xfffffc19)) break;\n            if ((-0x3e5 < uVar9) && (uVar9 < -0x3df)) goto code_r0x00bde388;\n            if (uVar9 != 0) {\n                if (var_4ch == &fcn.00ba49c0::var_14ch) {\n                    return uVar9;\n                }\n                (**0xc35748)(var_4ch);\n                return uVar9;\n            }\n            arg_10h[0x2a] = &fcn.00ba49c0::var_54h;\n            puVar13 = var_14h + var_14h[1];\n            var_14h = var_14h + var_14h[1];\n            if (*puVar13 != 0x77) {\n                arg_10h[0x2a] = var_54h;\ncode_r0x00bde388:\n                if (var_4ch == &fcn.00ba49c0::var_14ch) {\n                    return 0;\n                }\n                (**0xc35748)(var_4ch);\n                return 0;\n            }\n        }\n        if (var_4ch != &fcn.00ba49c0::var_14ch) {\n            (**0xc35748)(var_4ch);\n        }\n        arg_8h = arg_10h[0x20];\n        in_ECX = arg_10h[0x21];\n        puVar13 = arg_10h[0x21];\n        goto code_r0x00ba4a1f;\n    case 0x76:\n        if (*0xc57524 != NULL) {\n            var_d0h = 2;\n            var_cch = in_EDX[1];\n            var_c8h = arg_10h[3];\n            var_c4h = arg_10h[0x1e];\n            var_c0h = arg_10h[0x1f] - arg_10h[0x1e] >> 1;\n            var_bch = arg_8h - arg_10h[0x1e] >> 1;\n            var_b8h = var_8h - arg_10h[0x1e] >> 1;\n            var_a8h = in_EDX[2];\n            var_a4h = in_EDX[3];\n            var_b4h = arg_ch / 2;\n            var_b0h = *(arg_10h + 0x25);\n            if (var_b0h == 0) {\n                var_b0h = 0xffffffff;\n            }\n            var_ach = arg_10h[0x2b];\n            var_a0h = arg_10h[0x2d];\n            uVar9 = (**0xc57524)(&fcn.00ba49c0::var_d0h);\n            if (0 < uVar9) {\n                return 0;\n            }\n            in_ECX = var_8h;\n            if (uVar9 < 0) {\n                return uVar9;\n            }\n        }\n        var_30h = in_EDX + 4;\n        in_EDX = var_30h;\n        puVar13 = var_8h;\n        goto code_r0x00ba4a1f;\n    case 0x77:\n        do {\n            puVar15 = in_EDX + in_EDX[1];\n            in_EDX = in_EDX + in_EDX[1];\n            var_30h = in_EDX;\n        } while (*puVar15 == 0x77);\n        goto code_r0x00ba4a1f;\n    case 0x78:\n    case 0x79:\n    case 0x7a:\n    case 0x7b:\n        puVar15 = in_EDX + -in_EDX[1];\n        uVar7 = *puVar15;\n        if ((uVar7 < 0x88) && (uVar7 != 0x81)) {\n            var_1ch = NULL;\n        }\n        else {\n            var_1ch = arg_14h[1];\n            in_ECX = var_8h;\n            arg_14h = *arg_14h;\n        }\n        if (((0x7c < uVar7) && (uVar7 < 0x81)) || (uVar7 == 0x82)) {\n            arg_10h[0x21] = var_8h;\n            arg_10h[0x24] = arg_ch;\n            arg_10h[0x20] = arg_8h;\n            return 1;\n        }\n        if (((uVar7 == 0x85) || (uVar7 == 0x8a)) || ((uVar7 == 0x86 || (var_14h = 0x8b,  uVar7 == 0x8b)))) {\n            var_28h = puVar15[2];\n            var_14h = var_28h * 2;\n            if ((arg_10h[0x2a] != 0) && (*(arg_10h[0x2a] + 4) == var_28h)) {\n                arg_10h[0x21] = var_8h;\n                arg_10h[0x20] = arg_8h;\n                return 1;\n            }\n            uVar9 = arg_10h[0x25] & 0xffff0000 | var_28h;\n            arg_10h[0x25] = uVar9;\n            if (var_14h < arg_10h[5]) {\n                if (arg_ch < var_14h) {\n                    puVar18 = arg_10h[3] + arg_ch * 4;\n                    puVar2 = arg_10h[3] + var_28h * 8;\n                    if (puVar18 < puVar2) {\n                        iVar14 = (puVar2 + (-1 - puVar18) >> 2) + 1;\n                        for (; iVar14 != 0; iVar14 = iVar14 + -1) {\n                            *puVar18 = 0xffffffff;\n                            puVar18 = puVar18 + 1;\n                        }\n                    }\n                }\n                *(arg_10h[3] + var_28h * 8) = *(arg_10h[3] + (arg_10h[4] - var_28h) * 4);\n                *(arg_10h[3] + 4 + var_28h * 8) = var_8h - arg_10h[0x1e] >> 1;\n                in_ECX = var_8h;\n                if (arg_ch <= var_14h) {\n                    arg_ch = var_14h + 1;\n                }\n            }\n            else {\n                arg_10h[0x25] = uVar9 | 0x10000;\n            }\n        }\n        var_20h = puVar15;\n        if (*in_EDX != 0x78) {\n            if (*in_EDX == 0x7b) {\n                arg_10h[0x20] = arg_8h;\n                arg_10h[0x21] = var_8h;\n                arg_10h[0x24] = arg_ch;\n                return 0xfffffc1a;\n            }\n            in_ECX = var_8h;\n            if (var_8h != var_1ch) {\n                if (*in_EDX == 0x7a) {\n                    uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar13 = var_20h;\n                    if (uVar9 != 0) {\n                        return uVar9;\n                    }\n                    if (*var_20h == 0x81) {\n                        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        if (uVar9 != 0) {\n                            return uVar9;\n                        }\n                        arg_10h[0x2e] = puVar13;\n                        return 0xfffffc1b;\n                    }\n                    in_ECX = var_8h;\n                    in_EDX = var_20h;\n                    puVar15 = var_20h;\n                    if (0x87 < *var_20h) {\n                        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        return uVar9;\n                    }\n                }\n                else {\n                    uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    if (uVar9 == 0xfffffc1b) {\n                        if (arg_10h[0x2e] != var_20h) {\n                            return 0xfffffc1b;\n                        }\n                    }\n                    else if (uVar9 != 0) {\n                        return uVar9;\n                    }\n                    if (*var_20h == 0x81) {\n                        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        if (uVar9 != 0) {\n                            return uVar9;\n                        }\n                        arg_10h[0x2e] = var_20h;\n                        return 0xfffffc1b;\n                    }\n                    in_EDX = in_EDX + 2;\n                    in_ECX = var_8h;\n                    puVar15 = in_EDX;\n                }\n                goto code_r0x00ba4b88;\n            }\n        }\n        if (*puVar15 == 0x81) {\n            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            if (uVar9 != 0) {\n                return uVar9;\n            }\n            arg_10h[0x2e] = puVar15;\n            return 0xfffffc1b;\n        }\n        var_30h = in_EDX + 2;\n        in_EDX = var_30h;\n        goto code_r0x00ba4a1f;\n    case 0x7c:\n        if (var_24h == 0) {\n            var_8h = var_8h + -in_EDX[1];\n            if (var_8h < arg_10h[0x1e]) {\n                return 0;\n            }\n        }\n        else {\n            uVar9 = in_EDX[1];\n            if (uVar9 != 0) {\n                do {\n                    uVar9 = uVar9 - 1;\n                    puVar13 = var_8h + -1;\n                    if (puVar13 < arg_10h[0x1e]) {\n                        return 0;\n                    }\n                    if ((*puVar13 & 0xfc00) == 0xdc00) {\n                        puVar13 = var_8h + -2;\n                    }\n                    var_8h = puVar13;\n                } while (0 < uVar9);\n            }\n        }\n        if (var_8h < arg_10h[0x22]) {\n            arg_10h[0x22] = var_8h;\n        }\n        goto code_r0x00bd898e;\n    case 0x7d:\n    case 0x7f:\n        var_14h = arg_10h[0x2c];\n        if (arg_10h[0x27] == 1) {\n            bVar19 = true;\n            arg_10h[0x27] = 0;\n        }\n        else {\n            bVar19 = false;\n        }\n        do {\n            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, NULL, arg_18h + 1);\n            if ((uVar9 == 1) || (uVar9 == 0xfffffc19)) {\n                arg_8h = arg_10h[0x20];\n                break;\n            }\n            arg_10h[0x2c] = var_14h;\n            if (uVar9 == 0xfffffc20) {\n                if (in_EDX + in_EDX[1] <= arg_10h[0x20]) {\n                    return 0xfffffc20;\n                }\n                if ((*in_EDX != 0x77) && (in_EDX[in_EDX[1]] != 0x77)) {\n                    return 0xfffffc20;\n                }\n            }\n            else if (uVar9 != 0) {\n                return uVar9;\n            }\n            puVar13 = in_EDX + in_EDX[1];\n            in_EDX = in_EDX + in_EDX[1];\n        } while (*puVar13 == 0x77);\n        if (*in_EDX == 0x78) {\n            return 0;\n        }\n        if (bVar19) {\n            return 1;\n        }\n        do {\n            puVar13 = in_EDX + in_EDX[1];\n            in_EDX = in_EDX + in_EDX[1];\n        } while (*puVar13 == 0x77);\n        arg_ch = arg_10h[0x24];\n        var_30h = in_EDX + 2;\n        in_ECX = var_8h;\n        in_EDX = var_30h;\n        puVar13 = var_8h;\n        goto code_r0x00ba4a1f;\n    case 0x7e:\n    case 0x80:\n        uVar9 = arg_10h[0x2c];\n        if (arg_10h[0x27] == 1) {\n            var_14h = 0x1;\n            arg_10h[0x27] = 0;\n        }\n        else {\n            var_14h = NULL;\n        }\ncode_r0x00bd8874:\n        uVar11 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, NULL, arg_18h + 1);\n        arg_10h[0x2c] = uVar9;\n        if (uVar11 < -0x3df) {\n            if (uVar11 != 0xfffffc20) {\n                if (uVar11 == 0xfffffc19) {\n                    return 0;\n                }\n                if (3 < uVar11 + 0x3e4) {\n                    return uVar11;\n                }\ncode_r0x00bd88fb:\n                do {\n                    puVar13 = in_EDX + in_EDX[1];\n                    in_EDX = in_EDX + in_EDX[1];\n                } while (*puVar13 == 0x77);\ncode_r0x00bd8909:\n                if (var_14h != NULL) {\n                    return 1;\n                }\n                var_30h = in_EDX + 2;\n                in_ECX = var_8h;\n                in_EDX = var_30h;\n                puVar13 = var_8h;\n                goto code_r0x00ba4a1f;\n            }\n            if ((in_EDX + in_EDX[1] <= arg_10h[0x20]) || ((*in_EDX != 0x77 && (in_EDX[in_EDX[1]] != 0x77))))\n            goto code_r0x00bd88fb;\n        }\n        else if (uVar11 != 0) {\n            if (uVar11 != 1) {\n                return uVar11;\n            }\n            return 0;\n        }\n        puVar13 = in_EDX + in_EDX[1];\n        in_EDX = in_EDX + in_EDX[1];\n        if (*puVar13 != 0x77) goto code_r0x00bd8909;\n        goto code_r0x00bd8874;\n    case 0x81:\n    case 0x83:\n    case 0x88:\n        goto code_r0x00ba4b44;\n    case 0x82:\n        uVar9 = arg_10h[0x2c];\n        var_28h = var_8h;\n        var_14h = in_EDX;\n        do {\n            uVar11 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            if (uVar11 == 1) {\n                arg_8h = arg_10h[0x20];\n                break;\n            }\n            if (uVar11 == 0xfffffc20) {\n                if (in_EDX + in_EDX[1] <= arg_10h[0x20]) {\n                    return 0xfffffc20;\n                }\n                if ((*in_EDX != 0x77) && (in_EDX[in_EDX[1]] != 0x77)) {\n                    return 0xfffffc20;\n                }\n            }\n            else if (uVar11 != 0) {\n                return uVar11;\n            }\n            in_EDX = in_EDX + in_EDX[1];\n            arg_10h[0x2c] = uVar9;\n        } while (*in_EDX == 0x77);\n        if ((*in_EDX != 0x82) && (*in_EDX != 0x77)) {\n            return 0;\n        }\n        do {\n            puVar13 = in_EDX + in_EDX[1];\n            in_EDX = in_EDX + in_EDX[1];\n        } while (*puVar13 == 0x77);\n        arg_ch = arg_10h[0x24];\n        var_8h = arg_10h[0x21];\n        if (*in_EDX == 0x78) goto code_r0x00bd898e;\n        if (var_8h != var_28h) {\n            if (*in_EDX == 0x7a) {\n                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                in_ECX = var_8h;\n                in_EDX = var_14h;\n                puVar15 = var_14h;\n                if (uVar9 != 0) {\n                    return uVar9;\n                }\n            }\n            else {\n                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                if (uVar9 != 0) {\n                    return uVar9;\n                }\n                in_EDX = in_EDX + 2;\n                in_ECX = var_8h;\n                puVar15 = in_EDX;\n            }\n            goto code_r0x00ba4b88;\n        }\n        var_30h = in_EDX + 2;\n        in_ECX = var_8h;\n        in_EDX = var_30h;\n        puVar13 = var_8h;\n        goto code_r0x00ba4a1f;\n    case 0x84:\n    case 0x89:\n        var_20h = NULL;\n        goto code_r0x00bd8368;\n    case 0x85:\n    case 0x8a:\n        var_28h = in_EDX[2];\n        var_14h = var_28h * 2;\n        if (arg_10h[5] <= var_14h) goto code_r0x00ba4b44;\n        uVar9 = arg_10h[3];\n        var_3ch = *(uVar9 + var_28h * 8);\n        var_38h = *(uVar9 + 4 + var_28h * 8);\n        piVar1 = uVar9 + (arg_10h[4] - var_28h) * 4;\n        var_34h = *piVar1;\n        var_20h = arg_10h[0x25];\n        var_1ch = arg_10h[0x2c];\n        *piVar1 = var_8h - arg_10h[0x1e] >> 1;\n        goto code_r0x00ba5000;\n    case 0x86:\n    case 0x8b:\n        var_20h = NULL;\ncode_r0x00bd8ca6:\n        var_28h = in_EDX[2];\n        if (arg_10h[5] <= var_28h * 2) goto code_r0x00bd8368;\n        var_10h = var_28h * 8;\n        var_34h = in_EDX - arg_10h[0x1d] >> 1;\n        uVar9 = arg_10h[3];\n        var_1ch = NULL;\n        var_2ch = *(var_10h + uVar9);\n        var_30h = *(var_10h + uVar9 + 4);\n        var_18h = *(uVar9 + (arg_10h[4] - var_28h) * 4);\n        var_14h = arg_10h[0x25];\n        puVar13 = var_8h;\n        do {\n            while( true ) {\n                var_8h = puVar13;\n                *(arg_10h[3] + (arg_10h[4] - var_28h) * 4) = var_8h - arg_10h[0x1e] >> 1;\n                if (0x87 < uVar11) {\n                    arg_10h[0x27] = 2;\n                }\n                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                if (uVar9 != 0xfffffc1a) break;\n                arg_ch = arg_10h[0x24];\n                in_EDX = arg_10h[0x1d] + var_34h * 2;\n                var_14h = arg_10h[0x25];\n                arg_8h = arg_10h[0x20];\n                var_1ch = 0x1;\n                puVar13 = arg_10h[0x21];\n                if (var_8h == arg_10h[0x21]) goto code_r0x00bd8e99;\n            }\n            if (uVar9 == 0xfffffc20) {\n                if (in_EDX + in_EDX[1] <= arg_10h[0x20]) {\n                    return 0xfffffc20;\n                }\n                if ((*in_EDX != 0x77) && (in_EDX[in_EDX[1]] != 0x77)) {\n                    return 0xfffffc20;\n                }\n            }\n            else if (uVar9 != 0) {\n                return uVar9;\n            }\n            arg_10h[0x25] = var_14h;\n            puVar15 = in_EDX + in_EDX[1];\n            in_EDX = in_EDX + in_EDX[1];\n            puVar13 = var_8h;\n        } while (*puVar15 == 0x77);\n        if (var_1ch == NULL) {\n            *(var_10h + arg_10h[3]) = var_2ch;\n            *(var_10h + arg_10h[3] + 4) = var_30h;\n            *(arg_10h[3] + (arg_10h[4] - var_28h) * 4) = var_18h;\n        }\n        goto code_r0x00bd8ea7;\n    case 0x87:\n    case 0x8c:\n        var_20h = in_EDX[1];\n        puVar13 = in_EDX + 2;\n        if (*puVar13 == 0x76) {\n            if (*0xc57524 != NULL) {\n                var_9ch = 2;\n                var_98h = in_EDX[3];\n                var_94h = arg_10h[3];\n                var_90h = arg_10h[0x1e];\n                var_8ch = arg_10h[0x1f] - arg_10h[0x1e] >> 1;\n                var_88h = arg_8h - arg_10h[0x1e] >> 1;\n                var_84h = var_8h - arg_10h[0x1e] >> 1;\n                var_74h = in_EDX[4];\n                var_70h = in_EDX[5];\n                var_80h = arg_ch / 2;\n                var_7ch = *(arg_10h + 0x25);\n                if (var_7ch == 0) {\n                    var_7ch = 0xffffffff;\n                }\n                var_78h = arg_10h[0x2b];\n                var_6ch = arg_10h[0x2d];\n                uVar9 = (**0xc57524)(&fcn.00ba49c0::var_9ch);\n                if (0 < uVar9) {\n                    return 0;\n                }\n                in_ECX = var_8h;\n                if (uVar9 < 0) {\n                    return uVar9;\n                }\n            }\n            puVar13 = in_EDX + 6;\n            var_20h = var_20h + -2;\n        }\n        var_34h = *puVar13;\n        var_1ch = NULL;\n        puVar15 = var_20h;\n        puVar12 = var_1ch;\n    // switch table (17 cases) at 0xbe0167\n        switch(var_34h) {\n        case 0x8d:\n            if ((puVar13[1] * 2 < arg_ch) && (-1 < *(arg_10h[3] + puVar13[1] * 8))) {\ncode_r0x00bd85a1:\n                var_1ch = NULL;\ncode_r0x00bd8680:\n                puVar15 = *(var_34h + 0xc35750);\n                puVar12 = 0x1;\n            }\n            break;\n        case 0x8e:\n            var_14h = arg_10h[0xc] + puVar13[1] * arg_10h[9] * 2;\n            puVar16 = puVar13[2];\n            if (puVar16 != NULL) {\n                var_1ch = NULL;\n                do {\n                    puVar16 = puVar16 - 1;\n                    var_28h = puVar16;\n                    if ((*var_14h * 2 < arg_ch) && (-1 < *(arg_10h[3] + *var_14h * 8))) goto code_r0x00bd85a1;\n                    var_14h = var_14h + arg_10h[9];\n                    puVar12 = var_1ch;\n                } while (0 < puVar16);\n            }\n            break;\n        case 0x8f:\n            if ((arg_10h[0x2a] != 0) && ((puVar13[1] == 0xffff || (puVar13[1] == *(arg_10h[0x2a] + 4)))))\n            goto code_r0x00bd85a1;\n            break;\n        case 0x90:\n            if (arg_10h[0x2a] != 0) {\n                var_28h = arg_10h[0xc] + puVar13[1] * arg_10h[9] * 2;\n                uVar9 = puVar13[2];\n                if (uVar9 != 0) {\n                    var_1ch = NULL;\n                    var_14h = *(arg_10h[0x2a] + 4);\n                    do {\n                        uVar9 = uVar9 - 1;\n                        if (*var_28h == var_14h) goto code_r0x00bd85a1;\n                        var_28h = var_28h + arg_10h[9];\n                        puVar12 = var_1ch;\n                        in_ECX = var_8h;\n                    } while (0 < uVar9);\n                }\n            }\n            break;\n        case 0x91:\n        case 0x9d:\n            break;\n        default:\n            arg_10h[0x27] = 1;\n            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, NULL, arg_18h + 1);\n            in_ECX = var_8h;\n            if (uVar9 == 1) {\n                if (arg_ch < arg_10h[0x24]) {\n                    arg_ch = arg_10h[0x24];\n                }\n                var_1ch = 0x1;\n                if (*puVar13 == 0x92) {\n                    puVar13 = puVar13 + 1;\n                }\n                puVar15 = puVar13 + puVar13[1];\n                uVar7 = puVar13[puVar13[1]];\n                while (uVar7 == 0x77) {\n                    puVar13 = puVar15 + puVar15[1];\n                    puVar15 = puVar15 + puVar15[1];\n                    uVar7 = *puVar13;\n                }\n                puVar13 = puVar15 + (2 - *(var_34h + 0xc35750));\n                goto code_r0x00bd8680;\n            }\n            puVar15 = var_20h;\n            puVar12 = var_1ch;\n            if ((uVar9 != 0) && (uVar9 != 0xfffffc20)) {\n                return uVar9;\n            }\n        }\n        var_30h = puVar13 + puVar15;\n        in_EDX = var_30h;\n        if ((puVar12 != NULL) || (puVar13 = var_8h,  var_30h[-2] == 0x77)) goto code_r0x00bd86b9;\n        goto code_r0x00ba4a1f;\n    case 0x92:\n        puVar13 = in_EDX + 1;\n        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (uVar9 != 0) {\n            return uVar9;\n        }\n        do {\n            puVar15 = puVar13 + puVar13[1];\n            puVar13 = puVar13 + puVar13[1];\n        } while (*puVar15 == 0x77);\n        var_30h = puVar13 + 2;\n        in_ECX = var_8h;\n        in_EDX = var_30h;\n        puVar13 = var_8h;\n        goto code_r0x00ba4a1f;\n    case 0x93:\n        in_EDX = in_EDX + 1;\n        puVar13 = in_EDX;\n        do {\n            puVar15 = puVar13 + puVar13[1];\n            puVar13 = puVar13 + puVar13[1];\n        } while (*puVar15 == 0x77);\n        var_30h = in_EDX;\n        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        in_ECX = var_8h;\n        puVar13 = var_8h;\n        if (uVar9 != 0) {\n            return uVar9;\n        }\n        goto code_r0x00ba4a1f;\n    case 0x94:\n        uVar11 = in_EDX[1];\n        in_EDX = in_EDX + 1;\n        var_20h = 0x1;\n        if ((uVar11 == 0x86) || (uVar11 == 0x8b)) goto code_r0x00bd8ca6;\ncode_r0x00bd8368:\n        var_14h = NULL;\n        var_28h = in_EDX - arg_10h[0x1d] >> 1;\n        var_1ch = arg_10h[0x25];\n        puVar13 = var_8h;\n        do {\n            while( true ) {\n                var_8h = puVar13;\n                if (0x87 < uVar11) {\n                    arg_10h[0x27] = 2;\n                }\n                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                if (uVar9 == 0xfffffc1a) break;\n                if (uVar9 == 0xfffffc20) {\n                    if (in_EDX + in_EDX[1] <= arg_10h[0x20]) {\n                        return 0xfffffc20;\n                    }\n                    if ((*in_EDX != 0x77) && (in_EDX[in_EDX[1]] != 0x77)) {\n                        return 0xfffffc20;\n                    }\n                }\n                else if (uVar9 != 0) {\n                    return uVar9;\n                }\n                puVar13 = in_EDX + in_EDX[1];\n                in_EDX = in_EDX + in_EDX[1];\n                if (*puVar13 != 0x77) {\n                    if (var_14h != NULL) goto code_r0x00bd898e;\n                    if (var_20h == NULL) {\n                        return 0;\n                    }\n                    var_30h = in_EDX + 2;\n                    in_ECX = var_8h;\n                    in_EDX = var_30h;\n                    puVar13 = var_8h;\n                    goto code_r0x00ba4a1f;\n                }\n                arg_10h[0x25] = var_1ch;\n                puVar13 = var_8h;\n            }\n            arg_ch = arg_10h[0x24];\n            var_14h = 0x1;\n            in_EDX = arg_10h[0x1d] + var_28h * 2;\n            arg_8h = arg_10h[0x20];\n            puVar13 = arg_10h[0x21];\n        } while (var_8h != arg_10h[0x21]);\n        do {\n            puVar13 = in_EDX + in_EDX[1];\n            in_EDX = in_EDX + in_EDX[1];\n        } while (*puVar13 == 0x77);\n        goto code_r0x00bd898e;\n    case 0x95:\n        var_14h = in_EDX + 2;\n        arg_10h[0x2d] = var_14h;\n        arg_10h[0x2c] = 0;\n        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (((uVar9 == 1) || (uVar9 == 0xfffffc19)) && (arg_10h[0x2c] == 0)) {\n            arg_10h[0x2c] = var_14h;\n            return uVar9;\n        }\n        if (uVar9 != 0xfffffc1f) {\n            return uVar9;\n        }\n        uVar11 = fcn.00c1e9c8();\n        goto joined_r0x00be005e;\n    case 0x96:\n        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (uVar9 != 0) {\n            return uVar9;\n        }\n        return 0xfffffc1d;\n    case 0x97:\n        arg_10h[0x2d] = in_EDX + 2;\n        arg_10h[0x2c] = 0;\n        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (((uVar9 == 1) || (uVar9 == 0xfffffc19)) && (arg_10h[0x2c] == 0)) {\n            arg_10h[0x2c] = in_EDX + 2;\n        }\n        if (uVar9 != 0) {\n            return uVar9;\n        }\n        return 0xfffffc1d;\n    case 0x98:\n        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        uVar11 = uVar9;\njoined_r0x00be005e:\n        if (uVar11 != 0) {\n            return uVar9;\n        }\n        arg_10h[0x20] = puVar13;\n        return 0xfffffc1e;\n    case 0x99:\n        arg_10h[10] = arg_10h[10] + 1;\n        if (arg_10h[0xb] <= arg_10h[10] && arg_10h[10] != arg_10h[0xb]) {\n            uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            if (uVar9 != 0) {\n                return uVar9;\n            }\n            arg_10h[0x20] = in_EDX + 2;\n            return 0xfffffc1f;\n        }\n        var_30h = in_EDX + *(*in_EDX + 0xc35750) + in_EDX[1];\n        in_EDX = var_30h;\n        goto code_r0x00ba4a1f;\n    case 0x9a:\n        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        goto code_r0x00be00a3;\n    case 0x9b:\n        arg_10h[0x2d] = in_EDX + 2;\n        arg_10h[0x2c] = 0;\n        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (((uVar9 == 1) || (uVar9 == 0xfffffc19)) && (arg_10h[0x2c] == 0)) {\n            arg_10h[0x2c] = in_EDX + 2;\n        }\ncode_r0x00be00a3:\n        if (uVar9 != 0) {\n            return uVar9;\n        }\n        arg_10h[0x20] = in_EDX;\n        return 0xfffffc20;\n    case 0x9c:\n        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (uVar9 != 0) {\n            return uVar9;\n        }\n        return 0xfffffc1c;\n    case 0x9d:\n        goto code_r0x00ba505e;\n    case 0xa0:\n        uVar11 = in_EDX[1];\n        uVar9 = arg_10h[0x25] & 0xffff0000 | uVar11;\n        arg_10h[0x25] = uVar9;\n        if (uVar11 * 2 < arg_10h[5]) {\n            *(arg_10h[3] + uVar11 * 8) = *(arg_10h[3] + (arg_10h[4] - uVar11) * 4);\n            *(arg_10h[3] + 4 + uVar11 * 8) = var_8h - arg_10h[0x1e] >> 1;\n            in_ECX = var_8h;\n            if (arg_ch <= uVar11 * 2) {\n                puVar18 = arg_10h[3] + arg_ch * 4;\n                puVar2 = arg_10h[3] + uVar11 * 8;\n                if (puVar18 < puVar2) {\n                    iVar14 = (puVar2 + (-1 - puVar18) >> 2) + 1;\n                    for (; iVar14 != 0; iVar14 = iVar14 + -1) {\n                        *puVar18 = 0xffffffff;\n                        puVar18 = puVar18 + 1;\n                    }\n                }\n                arg_ch = uVar11 * 2 + 2;\n            }\n        }\n        else {\n            arg_10h[0x25] = uVar9 | 0x10000;\n        }\n        var_30h = in_EDX + 2;\n        in_EDX = var_30h;\n        goto code_r0x00ba4a1f;\n    case 0xa1:\n        var_30h = in_EDX + 1;\n        do {\n            puVar15 = var_30h + var_30h[1];\n            var_30h = var_30h + var_30h[1];\n        } while (*puVar15 == 0x77);\n        var_30h = var_30h + 2;\n        in_EDX = var_30h;\n        goto code_r0x00ba4a1f;\n    }\n    var_8h = puVar13;\n    in_EDX = in_EDX + 1;\n    in_ECX = var_8h;\n    var_30h = in_EDX;\n    puVar13 = var_8h;\n    goto code_r0x00ba4a1f;\ncode_r0x00bd86b9:\n    puVar15 = var_30h;\n    if (uVar11 == 0x8c) {\n        arg_10h[0x27] = 2;\n        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        return uVar9;\n    }\n    goto code_r0x00ba4b88;\ncode_r0x00bd8e99:\n    do {\n        puVar13 = in_EDX + in_EDX[1];\n        in_EDX = in_EDX + in_EDX[1];\n    } while (*puVar13 == 0x77);\ncode_r0x00bd8ea7:\n    if (var_20h == NULL) {\n        if (var_1ch == NULL) {\n            return 0;\n        }\n        var_30h = in_EDX + 2;\n        in_ECX = var_8h;\n        in_EDX = var_30h;\n        puVar13 = var_8h;\n    }\n    else {\ncode_r0x00bd898e:\n        var_30h = in_EDX + 2;\n        in_ECX = var_8h;\n        in_EDX = var_30h;\n        puVar13 = var_8h;\n    }\n    goto code_r0x00ba4a1f;\ncode_r0x00ba4b44:\n    if ((uVar11 < 0x88) && (uVar11 != 0x81)) {\n        if ((arg_10h[0x1c] == 0) && (in_EDX[in_EDX[1]] != 0x77)) goto code_r0x00ba4b75;\n    }\n    else {\n        arg_10h[0x27] = 2;\n    }\n    var_14h = arg_10h[0x2c];\n    var_28h = arg_10h[0x25];\n    uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n    if (uVar9 == 0xfffffc20) {\n        if (in_EDX + in_EDX[1] <= arg_10h[0x20]) {\n            return 0xfffffc20;\n        }\n        if ((*in_EDX != 0x77) && (in_EDX[in_EDX[1]] != 0x77)) {\n            return 0xfffffc20;\n        }\n    }\n    else if (uVar9 != 0) {\n        if (uVar9 != 0xfffffc1b) {\n            return uVar9;\n        }\n        uVar7 = *in_EDX;\n        if (uVar7 != 0x81) {\n            while (uVar7 == 0x77) {\n                puVar13 = in_EDX + in_EDX[1];\n                in_EDX = in_EDX + in_EDX[1];\n                uVar7 = *puVar13;\n            }\n            in_EDX = in_EDX + -in_EDX[1];\n        }\n        return -(arg_10h[0x2e] != in_EDX) & 0xfffffc1b;\n    }\n    in_EDX = in_EDX + in_EDX[1];\n    arg_10h[0x2c] = var_14h;\n    if (*in_EDX != 0x77) {\n        return 0;\n    }\n    arg_10h[0x25] = var_28h;\n    goto code_r0x00ba4b44;\ncode_r0x00ba4b75:\n    in_EDX = in_EDX + *(*in_EDX + 0xc35750);\n    in_ECX = var_8h;\n    puVar15 = in_EDX;\n    goto code_r0x00ba4b88;\ncode_r0x00bdcafc:\n    if ((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) {\n        arg_10h[0x1a] = 1;\n        uVar9 = arg_10h[0x23];\njoined_r0x00bdd1be:\n        if (1 < uVar9) {\n            return 0xfffffff4;\n        }\n    }\ncode_r0x00bdd1c7:\n    in_ECX = var_8h;\n    var_10h = puVar12;\n    puVar13 = var_8h;\n    if (var_34h == 0) {\n        if (puVar12 < var_8h) {\n            do {\n                puVar13 = var_8h;\n                uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                if (uVar9 != 0) {\n                    return uVar9;\n                }\n                var_8h = puVar13 + -1;\n                if ((var_24h != 0) && ((*var_8h & 0xfc00) == 0xdc00)) {\n                    var_8h = puVar13 + -2;\n                }\n                in_ECX = var_8h;\n                puVar15 = var_30h;\n            } while (var_10h < var_8h);\n        }\n        goto code_r0x00ba4b88;\n    }\n    goto code_r0x00ba4a1f;\ncode_r0x00bdd6a7:\n    puVar16 = var_8h;\n    var_10h = puVar12;\n    puVar15 = var_8h;\n    if ((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) {\n        arg_10h[0x1a] = 1;\n        uVar9 = arg_10h[0x23];\njoined_r0x00bddaf8:\n        puVar16 = var_8h;\n        var_10h = puVar12;\n        puVar15 = var_8h;\n        if (1 < uVar9) {\n            return 0xfffffff4;\n        }\n    }\ncode_r0x00bddafe:\n    var_8h = puVar15;\n    in_ECX = var_8h;\n    puVar13 = var_8h;\n    if (var_34h == 0) {\n        puVar15 = var_30h;\n        if (var_10h < puVar16) goto code_r0x00bddb11;\n        goto code_r0x00ba4b88;\n    }\n    goto code_r0x00ba4a1f;\ncode_r0x00bddb11:\n    do {\n        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (uVar9 != 0) {\n            return uVar9;\n        }\n        var_8h = puVar16 + -1;\n        if ((puVar16[-1] & 0xfc00) == 0xdc00) {\n            var_8h = puVar16 + -2;\n        }\n        puVar15 = var_30h;\n        if (var_1ch == 0x11) {\n            in_ECX = var_8h;\n            if (var_8h <= var_10h) break;\n            if ((*var_8h == 10) && (var_8h[-1] == 0xd)) {\n                var_8h = var_8h + -1;\n            }\n        }\n        in_ECX = var_8h;\n        puVar16 = var_8h;\n    } while (var_10h < var_8h);\ncode_r0x00ba4b88:\n    var_30h = puVar15;\n    var_24h = arg_10h[0x14];\n    uVar9 = *arg_10h;\n    if (arg_10h[1] <= uVar9) goto code_r0x00be0158;\n    goto code_r0x00ba4a03;\njoined_r0x00bdf59c:\n    var_8h = puVar12;\n    if (uVar9 != 0) {\n        return uVar9;\n    }\n    if (var_18h <= var_ch) {\n        return 0;\n    }\n    if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n    uVar9 = *var_8h;\n    puVar12 = var_8h + 1;\n    if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n        uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar12 & 0x3ff) + 0x10000;\n        puVar12 = var_8h + 2;\n    }\n    uVar9 = *(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 + 0xc32f52);\n    puVar15 = arg_10h[0x1f];\n    var_14h = uVar9;\n    if (puVar12 < puVar15) {\n        do {\n            uVar11 = *puVar12;\n            var_14h = 0x1;\n            if ((var_24h != 0) && ((uVar11 & 0xfc00) == 0xd800)) {\n                var_14h = 0x2;\n                uVar11 = ((uVar11 & 0x3ff) << 10 | puVar12[1] & 0x3ff) + 0x10000;\n            }\n            uVar5 = *(*((*((uVar11 >> 7) + 0xc43b40) * 0x80 + (uVar11 & 0x8000007f)) * 2 + 0xc35840) * 8 + 0xc32f52);\n            if ((*(uVar9 * 4 + 0xc35800) & 1 << (uVar5 & 0x1f)) == 0) {\n                puVar15 = arg_10h[0x1f];\n                break;\n            }\n            puVar12 = puVar12 + var_14h;\n            puVar15 = arg_10h[0x1f];\n            uVar9 = uVar5;\n        } while (puVar12 < puVar15);\n    }\n    if ((((arg_10h[0x23] != 0) && (puVar15 <= puVar12)) && (arg_10h[0x22] <= puVar12 && puVar12 != arg_10h[0x22])) &&\n       (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n        return 0xfffffff4;\n    }\n    var_ch = var_ch + 1;\n    var_8h = puVar13;\n    uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n    puVar13 = var_8h;\n    goto joined_r0x00bdf59c;\njoined_r0x00ba5116:\n    if (uVar9 != 0) {\n        return uVar9;\n    }\n    if (var_18h <= var_ch) {\n        return 0;\n    }\n    puVar15 = arg_10h[0x1f];\n    var_8h = puVar12;\n    if (puVar15 <= puVar12) goto code_r0x00bde866;\n    var_8h = puVar13;\n    if (var_1ch == 0xc) {\n        if (arg_10h[6] == 0) {\n            if ((puVar12 <= puVar15 + -arg_10h[7]) && (*puVar12 == *(arg_10h + 0xd))) {\n                if (arg_10h[7] == 1) {\n                    return 0;\n                }\n                if (*(puVar12 + 2) == *(arg_10h + 0x36)) {\n                    return 0;\n                }\n            }\n        }\n        else {\n            iVar14 = fcn.00ba5e9f(puVar15, arg_10h + 7, var_24h);\n            if (iVar14 != 0) {\n                return 0;\n            }\n        }\n    }\n    uVar9 = *puVar12;\n    puVar15 = puVar12 + 2;\n    if ((uVar9 & 0xfc00) == 0xd800) {\n        uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar15 & 0x3ff) + 0x10000;\n        puVar15 = puVar12 + 4;\n    }\n    if (var_1ch == 0xc) {\ncode_r0x00ba5189:\n        if (((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= puVar15)) && (arg_10h[6] == 0)) &&\n            ((arg_10h[7] == 2 && (uVar9 == *(arg_10h + 0xd))))) && (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n            return 0xfffffff4;\n        }\n        goto code_r0x00ba5196;\n    }\n    if (0xf < var_1ch + -3) {\n        return 0xfffffff2;\n    }\n    // switch table (16 cases) at 0xbe0437\n    switch(*((var_1ch + -3) * 4 + 0xbe0437)) {\n    case 0xba5189:\n        goto code_r0x00ba5189;\n    case 0xbde4fe:\n        goto code_r0x00bde4fe;\n    case 0xbdf790:\n        if (uVar9 < 0xe) {\n            if (uVar9 == 0xd) {\n                if ((puVar15 < arg_10h[0x1f]) && (*puVar15 == 10)) {\n                    puVar15 = puVar15 + 1;\n                }\n            }\n            else if (uVar9 != 10) {\n                if (1 < uVar9 - 0xb) {\n                    return 0;\n                }\n                goto code_r0x00bdf7e0;\n            }\n        }\n        else {\n            if ((uVar9 != 0x85) && (1 < uVar9 - 0x2028)) {\n                return 0;\n            }\ncode_r0x00bdf7e0:\n            if (arg_10h[0x1b] != 0) {\n                return 0;\n            }\n        }\n        break;\n    case 0xbdf7ef:\n        if (uVar9 < 0x180f) {\n            if (uVar9 == 0x180e) {\n                return 0;\n            }\n            if (uVar9 < 0xa1) {\n                if (uVar9 == 0xa0) {\n                    return 0;\n                }\n                if (uVar9 == 9) {\n                    return 0;\n                }\n                if (uVar9 == 0x20) {\n                    return 0;\n                }\n            }\n            else if (uVar9 == 0x1680) {\n                return 0;\n            }\n        }\n        else if (uVar9 < 0x2060) {\n            if (uVar9 == 0x205f) {\n                return 0;\n            }\n            if (0x1fff < uVar9) {\n                if (uVar9 < 0x200b) {\n                    return 0;\n                }\n                if (uVar9 == 0x202f) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar9 == 0x3000) {\n            return 0;\n        }\n        break;\n    case 0xbdf87b:\n        if (uVar9 < 0x180f) {\n            if (uVar9 != 0x180e) {\n                if (uVar9 < 0xa1) {\n                    if (((uVar9 != 0xa0) && (uVar9 != 9)) && (uVar9 != 0x20)) {\n                        return 0;\n                    }\n                }\n                else if (uVar9 != 0x1680) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar9 < 0x2060) {\n            if (uVar9 != 0x205f) {\n                if (uVar9 < 0x2000) {\n                    return 0;\n                }\n                if ((0x200a < uVar9) && (uVar9 != 0x202f)) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar9 != 0x3000) {\n            return 0;\n        }\n        break;\n    case 0xbdf907:\n        if (uVar9 < 0x86) {\n            if (uVar9 == 0x85) {\n                return 0;\n            }\n            if ((9 < uVar9) && (uVar9 < 0xe)) {\n                return 0;\n            }\n        }\n        else if ((0x2027 < uVar9) && (uVar9 < 0x202a)) {\n            return 0;\n        }\n        break;\n    case 0xbdf949:\n        if (uVar9 < 0x86) {\n            if ((uVar9 != 0x85) && (3 < uVar9 - 10)) {\n                return 0;\n            }\n        }\n        else if (1 < uVar9 - 0x2028) {\n            return 0;\n        }\n        break;\n    case 0xbdf97c:\n        if (uVar9 < 0x100) {\n            uVar5 = *(uVar9 + arg_10h[0x11]) & 4;\njoined_r0x00bdfa07:\n            if (uVar5 != 0) {\n                return 0;\n            }\n        }\n        break;\n    case 0xbdf99a:\n        if (0xff < uVar9) {\n            return 0;\n        }\n        uVar5 = *(uVar9 + arg_10h[0x11]) & 4;\n        goto joined_r0x00bdfa25;\n    case 0xbdf9b8:\n        if (uVar9 < 0x100) {\n            uVar5 = *(uVar9 + arg_10h[0x11]) & 1;\n            goto joined_r0x00bdfa07;\n        }\n        break;\n    case 0xbdf9d6:\n        if (0xff < uVar9) {\n            return 0;\n        }\n        uVar5 = *(uVar9 + arg_10h[0x11]) & 1;\n        goto joined_r0x00bdfa25;\n    case 0xbdf9f4:\n        if (uVar9 < 0x100) {\n            uVar5 = *(uVar9 + arg_10h[0x11]) & 0x10;\n            goto joined_r0x00bdfa07;\n        }\n        break;\n    case 0xbdfa12:\n        if (0xff < uVar9) {\n            return 0;\n        }\n        uVar5 = *(uVar9 + arg_10h[0x11]) & 0x10;\njoined_r0x00bdfa25:\n        if (uVar5 == 0) {\n            return 0;\n        }\n    }\ncode_r0x00ba5196:\n    var_ch = var_ch + 1;\n    uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n    puVar13 = var_8h;\n    puVar12 = puVar15;\n    goto joined_r0x00ba5116;\njoined_r0x00bdfa74:\n    if (uVar9 != 0) {\n        return uVar9;\n    }\n    if (var_18h <= var_ch) {\n        return 0;\n    }\n    puVar15 = arg_10h[0x1f];\n    var_8h = puVar12;\n    if (puVar15 <= puVar12) goto code_r0x00bde866;\n    var_8h = puVar13;\n    if (var_1ch == 0xc) {\n        if (arg_10h[6] == 0) {\n            if ((puVar12 <= puVar15 + -arg_10h[7]) && (*puVar12 == *(arg_10h + 0xd))) {\n                if (arg_10h[7] == 1) {\n                    return 0;\n                }\n                if (puVar12[1] == *(arg_10h + 0x36)) {\n                    return 0;\n                }\n            }\n        }\n        else {\n            iVar14 = fcn.00ba5e9f(puVar15, arg_10h + 7, 0);\n            if (iVar14 != 0) {\n                return 0;\n            }\n        }\n    }\n    uVar9 = *puVar12;\n    puVar15 = puVar12 + 1;\n    if (0xf < var_1ch + -3) {\n        return 0xfffffff2;\n    }\n    // switch table (16 cases) at 0xbe0477\n    switch(*((var_1ch + -3) * 4 + 0xbe0477)) {\n    case 0xbde4fe:\ncode_r0x00bde4fe:\n        return 0xfffffff2;\n    case 0xbdfb06:\n        if ((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= puVar15)) && (arg_10h[6] == 0)) &&\n           (((arg_10h[7] == 2 && (uVar9 == *(arg_10h + 0xd))) && (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])))) {\n            return 0xfffffff4;\n        }\n        break;\n    case 0xbdfb55:\n        if (uVar9 < 0xe) {\n            if (uVar9 == 0xd) {\n                if ((puVar15 < arg_10h[0x1f]) && (*puVar15 == 10)) {\n                    puVar15 = puVar12 + 2;\n                }\n            }\n            else if (uVar9 != 10) {\n                if (1 < uVar9 - 0xb) {\n                    return 0;\n                }\n                goto code_r0x00bdfba5;\n            }\n        }\n        else {\n            if ((uVar9 != 0x85) && (1 < uVar9 - 0x2028)) {\n                return 0;\n            }\ncode_r0x00bdfba5:\n            if (arg_10h[0x1b] != 0) {\n                return 0;\n            }\n        }\n        break;\n    case 0xbdfbb4:\n        if (uVar9 < 0x180f) {\n            if (uVar9 == 0x180e) {\n                return 0;\n            }\n            if (uVar9 < 0xa1) {\n                if (uVar9 == 0xa0) {\n                    return 0;\n                }\n                if (uVar9 == 9) {\n                    return 0;\n                }\n                if (uVar9 == 0x20) {\n                    return 0;\n                }\n            }\n            else if (uVar9 == 0x1680) {\n                return 0;\n            }\n        }\n        else if (uVar9 < 0x2060) {\n            if (uVar9 == 0x205f) {\n                return 0;\n            }\n            if (0x1fff < uVar9) {\n                if (uVar9 < 0x200b) {\n                    return 0;\n                }\n                if (uVar9 == 0x202f) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar9 == 0x3000) {\n            return 0;\n        }\n        break;\n    case 0xbdfc40:\n        if (uVar9 < 0x180f) {\n            if (uVar9 != 0x180e) {\n                if (uVar9 < 0xa1) {\n                    if (((uVar9 != 0xa0) && (uVar9 != 9)) && (uVar9 != 0x20)) {\n                        return 0;\n                    }\n                }\n                else if (uVar9 != 0x1680) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar9 < 0x2060) {\n            if (uVar9 != 0x205f) {\n                if (uVar9 < 0x2000) {\n                    return 0;\n                }\n                if ((0x200a < uVar9) && (uVar9 != 0x202f)) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar9 != 0x3000) {\n            return 0;\n        }\n        break;\n    case 0xbdfccc:\n        if (uVar9 < 0x86) {\n            if (uVar9 == 0x85) {\n                return 0;\n            }\n            if ((9 < uVar9) && (uVar9 < 0xe)) {\n                return 0;\n            }\n        }\n        else if ((0x2027 < uVar9) && (uVar9 < 0x202a)) {\n            return 0;\n        }\n        break;\n    case 0xbdfd0e:\n        if (uVar9 < 0x86) {\n            if ((uVar9 != 0x85) && (3 < uVar9 - 10)) {\n                return 0;\n            }\n        }\n        else if (1 < uVar9 - 0x2028) {\n            return 0;\n        }\n        break;\n    case 0xbdfd41:\n        if (uVar9 < 0x100) {\n            uVar5 = *(uVar9 + arg_10h[0x11]) & 4;\njoined_r0x00bdfdb8:\n            if (uVar5 != 0) {\n                return 0;\n            }\n        }\n        break;\n    case 0xbdfd5c:\n        if (0xff < uVar9) {\n            return 0;\n        }\n        uVar5 = *(uVar9 + arg_10h[0x11]) & 4;\n        goto joined_r0x00bdfdd3;\n    case 0xbdfd77:\n        if (uVar9 < 0x100) {\n            uVar5 = *(uVar9 + arg_10h[0x11]) & 1;\n            goto joined_r0x00bdfdb8;\n        }\n        break;\n    case 0xbdfd8e:\n        if (0xff < uVar9) {\n            return 0;\n        }\n        uVar5 = *(uVar9 + arg_10h[0x11]) & 1;\n        goto joined_r0x00bdfdd3;\n    case 0xbdfda9:\n        if (uVar9 < 0x100) {\n            uVar5 = *(uVar9 + arg_10h[0x11]) & 0x10;\n            goto joined_r0x00bdfdb8;\n        }\n        break;\n    case 0xbdfdc0:\n        if (0xff < uVar9) {\n            return 0;\n        }\n        uVar5 = *(uVar9 + arg_10h[0x11]) & 0x10;\njoined_r0x00bdfdd3:\n        if (uVar5 == 0) {\n            return 0;\n        }\n    }\n    var_ch = var_ch + 1;\n    uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n    puVar13 = var_8h;\n    puVar12 = puVar15;\n    goto joined_r0x00bdfa74;\njoined_r0x00bdf19b:\n    if (uVar9 != 0) {\n        return uVar9;\n    }\n    if (var_18h <= var_ch) {\n        return 0;\n    }\n    if (arg_10h[0x1f] <= var_8h) goto code_r0x00bde866;\n    uVar9 = *var_8h;\n    puVar15 = var_8h + 1;\n    if ((var_24h != 0) && ((uVar9 & 0xfc00) == 0xd800)) {\n        uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar15 & 0x3ff) + 0x10000;\n        puVar15 = var_8h + 2;\n    }\n    if (uVar9 < 0x180f) {\n        if (uVar9 == 0x180e) goto code_r0x00bdf2c1;\n        if (uVar9 < 0x86) {\n            if ((uVar9 == 0x85) || ((8 < uVar9 && ((uVar9 < 0xe || (uVar9 == 0x20)))))) goto code_r0x00bdf2c1;\n        }\n        else if ((uVar9 == 0xa0) || (uVar9 == 0x1680)) goto code_r0x00bdf2c1;\ncode_r0x00bdf26f:\n        if ((*(*(*((*((uVar9 >> 7) + 0xc43b40) * 0x80 + (uVar9 & 0x8000007f)) * 2 + 0xc35840) * 8 + 0xc32f51) * 4 +\n              0xc489a0) == 6) == var_38h) {\n            return 0;\n        }\n    }\n    else {\n        if (0x202f < uVar9) {\n            if ((uVar9 == 0x205f) || (uVar9 == 0x3000)) goto code_r0x00bdf2c1;\n            goto code_r0x00bdf26f;\n        }\n    // switch table (42 cases) at 0xbe0403\n        switch(uVar9) {\n        case 0x2000:\n        case 0x2001:\n        case 0x2002:\n        case 0x2003:\n        case 0x2004:\n        case 0x2005:\n        case 0x2006:\n        case 0x2007:\n        case 0x2008:\n        case 0x2009:\n        case 0x200a:\n        case 0x2028:\n        case 0x2029:\n        default:\ncode_r0x00bdf2c1:\n            if (var_38h != 0) {\n                return 0;\n            }\n            break;\n        case 0x200b:\n        case 0x200c:\n        case 0x200d:\n        case 0x200e:\n        case 0x200f:\n        case 0x2010:\n        case 0x2011:\n        case 0x2012:\n        case 0x2013:\n        case 0x2014:\n        case 0x2015:\n        case 0x2016:\n        case 0x2017:\n        case 0x2018:\n        case 0x2019:\n        case 0x201a:\n        case 0x201b:\n        case 0x201c:\n        case 0x201d:\n        case 0x201e:\n        case 0x201f:\n        case 0x2020:\n        case 0x2021:\n        case 0x2022:\n        case 0x2023:\n        case 0x2024:\n        case 0x2025:\n        case 0x2026:\n        case 0x2027:\n            goto code_r0x00bdf26f;\n        }\n    }\n    var_ch = var_ch + 1;\n    var_8h = puVar13;\n    uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n    puVar13 = var_8h;\n    var_8h = puVar15;\n    goto joined_r0x00bdf19b;\ncode_r0x00bde8ec:\n    if (var_18h <= var_10h) {\n        return 0;\n    }\n    if ((arg_10h[0x1f] - var_28h < puVar13) ||\n       (iVar10 = fcn.00bb16c4(puVar13, var_14h, var_1ch * 2),  iVar14 = var_28h,  iVar10 != 0)) {\n        if ((var_20h < 1) ||\n           ((arg_10h[0x1f] + var_20h * -2 < puVar13 ||\n            (iVar14 = fcn.00bb16c4(puVar13, &fcn.00ba49c0::var_68h, var_20h * 2),  iVar14 != 0))))\n        goto code_r0x00bde510;\n        iVar14 = var_20h * 2;\n    }\n    puVar13 = puVar13 + iVar14;\n    var_10h = var_10h + 1;\n    uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n    if (uVar9 != 0) {\n        return uVar9;\n    }\n    goto code_r0x00bde8ec;\ncode_r0x00bde510:\n    if (arg_10h[0x23] == 0) {\n        return 0;\n    }\n    if (puVar13 < arg_10h[0x1f]) {\n        return 0;\n    }\n    bVar19 = puVar13 < arg_10h[0x22];\n    bVar20 = puVar13 == arg_10h[0x22];\n    goto code_r0x00bde4da;\ncode_r0x00bde866:\n    if (arg_10h[0x23] == 0) {\n        return 0;\n    }\n    bVar19 = var_8h < arg_10h[0x22];\n    bVar20 = var_8h == arg_10h[0x22];\n    goto code_r0x00bde4da;\ncode_r0x00bd9c16:\n    if (uVar11 == 0xf) {\n        return 0;\n    }\ncode_r0x00ba4f2e:\n    var_30h = in_EDX + 3;\n    in_ECX = var_8h;\n    in_EDX = var_30h;\n    var_14h = puVar13;\n    puVar13 = var_8h;\n    goto code_r0x00ba4a1f;\n    while( true ) {\n        puVar15 = puVar15 + 1;\n        var_8h = var_8h + iVar14;\n        if (var_1ch <= puVar15) break;\ncode_r0x00bde53c:\n        iVar14 = fcn.00c1e7bd(var_20h, arg_10h, var_34h);\n        if (iVar14 < 0) {\n            if ((((iVar14 == -2) && (arg_10h[0x23] != 0)) &&\n                (arg_10h[0x22] <= arg_10h[0x1f] && arg_10h[0x1f] != arg_10h[0x22])) &&\n               (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                return 0xfffffff4;\n            }\n            break;\n        }\n    }\n    puVar13 = var_14h;\n    if (var_8h < var_14h) {\n        return 0;\n    }\ncode_r0x00bde5a1:\n    do {\n        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (uVar9 != 0) {\n            return uVar9;\n        }\n        var_8h = var_8h + -var_20h;\n    } while (puVar13 <= var_8h);\n    return 0;\n    while( true ) {\n        if (uVar9 == 0xfffffc20) {\n            if (in_EDX + in_EDX[1] <= arg_10h[0x20]) {\n                return 0xfffffc20;\n            }\n            if ((*in_EDX != 0x77) && (in_EDX[in_EDX[1]] != 0x77)) {\n                return 0xfffffc20;\n            }\n            uVar9 = 0;\n        }\n        else if (uVar9 != 0) {\n            return uVar9;\n        }\n        arg_10h[0x25] = var_20h;\n        in_EDX = in_EDX + in_EDX[1];\n        arg_10h[0x2c] = var_1ch;\n        if (*in_EDX != 0x77) break;\ncode_r0x00ba5000:\n        if (0x87 < uVar11) {\n            arg_10h[0x27] = 2;\n        }\n        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (uVar9 == 0xfffffc1b) break;\n    }\n    *(arg_10h[3] + var_14h * 4) = var_3ch;\n    *(arg_10h[3] + 4 + var_14h * 4) = var_38h;\n    *(arg_10h[3] + (arg_10h[4] - var_28h) * 4) = var_34h;\n    return uVar9;\njoined_r0x00bde678:\n    while( true ) {\n        if (uVar9 != 0) {\n            return uVar9;\n        }\n        if (var_1ch <= var_10h) {\n            return 0;\n        }\n        if (arg_10h[0x1f] <= var_8h) break;\n        uVar9 = *var_8h;\n        puVar13 = var_8h + 1;\n        if ((uVar9 & 0xfc00) == 0xd800) {\n            uVar9 = ((uVar9 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n            puVar13 = var_8h + 2;\n        }\n        var_8h = puVar13;\n        if (uVar9 < 0x100) {\n            if ((*((uVar9 >> 3) + var_20h) & 1 << (uVar9 & 7)) == 0) {\n                return 0;\n            }\n        }\n        else if (uVar11 == 0x6e) {\n            return 0;\n        }\n        var_10h = var_10h + 1;\n        uVar9 = fcn.00ba49c0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n    }\ncode_r0x00bde726:\n    if (arg_10h[0x23] == 0) {\n        return 0;\n    }\n    bVar19 = var_8h < arg_10h[0x22];\n    bVar20 = var_8h == arg_10h[0x22];\ncode_r0x00bde4da:\n    if ((!bVar19 && !bVar20) && (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n        return 0xfffffff4;\n    }\ncode_r0x00ba505e:\n    return 0;\n}\n",
        "token_count": 73760
    },
    "00be6df3": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00be6df3(int32_t *arg_8h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    ushort *in_ECX;\n    int32_t arg_8h_00;\n    float10 fVar5;\n    ulong uVar6;\n    uint var_2ch;\n    uint pvargDest;\n    uint var_8h;\n    \n    arg_8h_00 = 0;\n    var_8h = 0;\n    (*_sym.imp.OLEAUT32.dll_VariantClear)();\n    *(in_ECX + 4) = 0;\n    *(in_ECX + 6) = 0;\n    iVar3 = arg_8h[3];\n    if (0xe < iVar3 - 1U) {\n        return;\n    }\n    // switch table (15 cases) at 0xbe702b\n    switch(*((iVar3 - 1U) * 4 + 0xbe702b)) {\n    case 0xbe6e29:\n        *in_ECX = 0xb;\n        cVar1 = fcn.00b99c53();\n        if (cVar1 == '\\0') {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0xffff;\n        }\n        in_ECX[4] = uVar2;\n        break;\n    case 0xbe6e4a:\n        *in_ECX = 3;\n        uVar4 = fcn.00b99c9c();\n        goto code_r0x00be6f57;\n    case 0xbe6e5c:\n        *in_ECX = 5;\n        fVar5 = fcn.00b99cf8();\n        *(in_ECX + 4) = fVar5;\n        break;\n    case 0xbe6e71:\n        *in_ECX = 0x14;\n        uVar6 = fcn.00b99d46();\n        *(in_ECX + 4) = uVar6;\n        *(in_ECX + 6) = uVar6 >> 0x20;\n        break;\n    case 0xbe6e89:\n        *in_ECX = 0x13;\n        uVar4 = fcn.00bf89bb();\n        goto code_r0x00be6f57;\n    case 0xbe6e9b:\n        *in_ECX = 8;\n        fcn.00b99997();\n        uVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*arg_8h[2]);\n        goto code_r0x00be6f57;\n    case 0xbe6eb8:\n        *in_ECX = 0x200c;\n        uVar4 = fcn.00be710e(arg_8h);\n        goto code_r0x00be6f57;\n    case 0xbe6ecb:\n        if (iVar3 == 8) {\n            arg_8h_00 = *arg_8h;\n        }\n        if (arg_8h_00 != 0) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopyInd)();\n        }\n        break;\n    case 0xbe6ee7:\n        if (iVar3 == 6) {\n            arg_8h_00 = *arg_8h;\n        }\n        uVar4 = fcn.00be6df3(arg_8h_00);\n        fcn.00be70c0(uVar4);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n        break;\n    case 0xbe6f0e:\n        cVar1 = fcn.00b99dae(0x29);\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00b99dae(0x2a);\n            if (cVar1 != '\\0') {\n                *in_ECX = 1;\n            }\n        }\n        else {\n            *in_ECX = 10;\n            *(in_ECX + 4) = 0x80020004;\n        }\n        break;\n    case 0xbe6f49:\n        *in_ECX = 0x2011;\n        uVar4 = fcn.00be7280(arg_8h);\ncode_r0x00be6f57:\n        *(in_ECX + 4) = uVar4;\n        break;\n    case 0xbe6f5f:\n        *in_ECX = 0x24;\n        *(in_ECX + 4) = 0;\n        iVar3 = fcn.00bb0ff6(0x28);\n        if (iVar3 != 0) {\n            if (arg_8h[3] == 0xc) {\n                arg_8h_00 = *arg_8h;\n            }\n            arg_8h_00 = fcn.00be735a(arg_8h_00);\n        }\n        goto code_r0x00be6fd5;\n    case 0xbe6f86:\n        *in_ECX = 0x24;\n        *(in_ECX + 4) = 0;\n        iVar3 = fcn.00bb0ff6(0x28);\n        if (iVar3 != 0) {\n            if (arg_8h[3] == 0xf) {\n                arg_8h_00 = *arg_8h;\n            }\n            arg_8h_00 = fcn.00be73a5(arg_8h_00);\n        }\ncode_r0x00be6fd5:\n        *(in_ECX + 6) = arg_8h_00;\n        break;\n    case 0xbe6fad:\n        *in_ECX = 0x24;\n        *(in_ECX + 4) = 0;\n        iVar3 = fcn.00bb0ff6(0x28);\n        if (iVar3 != 0) {\n            uVar4 = fcn.00bf7b95();\n            arg_8h_00 = fcn.00be7323(uVar4);\n        }\n        goto code_r0x00be6fd5;\n    case 0xbe6fda:\n        *in_ECX = 0x24;\n        *(in_ECX + 4) = 0;\n        iVar3 = fcn.00bb0ff6(0x28);\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00bf7ba4(&var_2ch);\n            uVar4 = fcn.00be72e5(uVar4);\n        }\n        *(in_ECX + 6) = uVar4;\n        if (iVar3 != 0) {\n            fcn.00b95a64();\n        }\n    }\n    return;\n}\n",
        "token_count": 1510
    },
    "00be7579": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00be7579(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    ushort extraout_var;\n    ushort uVar2;\n    ushort extraout_var_00;\n    int32_t *extraout_ECX;\n    uint extraout_EDX;\n    int16_t iVar3;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_8h = param_1;\n    if (param_1 == NULL) {\n        var_4h = param_1;\n        fcn.00be7631(0x80070057);\n        param_1 = extraout_ECX;\n        param_2 = extraout_EDX;\n    }\n    var_4h = NULL;\n    iVar3 = 0x1d;\n    iVar1 = (**(*param_1 + 0x38))(param_1, param_2, &var_4h);\n    if (iVar1 < 0) {\n        fcn.00be756c();\n        uVar2 = extraout_var;\n        goto code_r0x00be7628;\n    }\n    var_8h = NULL;\n    iVar1 = (**(*var_4h + 0xc))(var_4h, &var_8h);\n    if (iVar1 < 0) {\ncode_r0x00be760d:\n        if (var_8h != NULL) {\n            iVar1 = (**(*var_4h + 0x4c))(var_4h, var_8h);\n        }\n    }\n    else if (var_8h != NULL) {\n        iVar1 = *(var_8h + 0x28);\n        if ((iVar1 == 6) || (iVar1 == 0)) {\n            iVar3 = *(var_8h + 0x40);\n            if (iVar3 == 0x1d) {\n                iVar1 = fcn.00be7579();\n                iVar3 = iVar1;\n            }\n            else if (iVar1 == 0) {\n                iVar3 = 3;\n            }\n            else if (iVar1 + -3 == 0) {\n                iVar3 = 0xd;\n                iVar1 = iVar1 + -3;\n            }\n            else {\n                iVar1 = iVar1 + -4;\n                if (iVar1 == 0) {\n                    iVar3 = 9;\n                }\n            }\n        }\n        goto code_r0x00be760d;\n    }\n    uVar2 = iVar1 >> 0x10;\n    if (var_4h != NULL) {\n        (**(*var_4h + 8))(var_4h);\n        uVar2 = extraout_var_00;\n    }\ncode_r0x00be7628:\n    return CONCAT22(uVar2, iVar3);\n}\n",
        "token_count": 618
    },
    "00bf20a9": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf20a9(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    uint uVar6;\n    uchar auStack44 [20];\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t *piStack12;\n    \n    fcn.00b99997();\n    puVar1 = *(arg_ch + 8);\n    uVar5 = 1;\n    uStack24 = *puVar1;\n    uStack20 = puVar1[1];\n    uStack16 = puVar1[2];\n    piStack12 = puVar1[3];\n    *piStack12 = *piStack12 + 1;\n    if (arg_8h != 1) {\n        if ((arg_8h & 2) == 0) {\n            if ((arg_8h & 0xc) != 0) {\n                piVar4 = **(arg_10h + 4);\n                if (piVar4[3] == 6) {\n                    piVar4 = *piVar4;\n                }\n                uVar5 = 0;\n                fcn.00bf256c(&uStack24, piVar4, 0);\n            }\n        }\n        else {\n            iVar3 = fcn.00bf1e60(&uStack24);\n            uVar5 = 0;\n            if (iVar3 == 0) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = *(iVar3 + 0x20);\n            }\n            if (iVar3 == 0) {\n                uVar6 = fcn.00bf23e2();\n                fcn.00b99e9c(uVar6);\n            }\n            else {\n                *arg_14h = iVar3;\n            }\n        }\n        goto code_r0x00bf2328;\n    }\n    fcn.00b97f41(L\"REMOVE\");\n    uVar6 = 0;\n    iVar3 = fcn.00b97a68(auStack44, 0);\n    fcn.00b95a64();\n    if (iVar3 == 0) {\n        if (*(arg_10h + 8) == 1) {\n            piVar4 = **(arg_10h + 4);\n            if (piVar4[3] == 6) {\n                piVar4 = *piVar4;\n            }\n            cVar2 = fcn.00bf2462(piVar4);\n            puVar1 = *arg_14h;\n            if (cVar2 == '\\0') {\n                fcn.00b99a20();\n                *puVar1 = 0;\n                puVar1[3] = 1;\n                uVar5 = uVar6;\n            }\n            else {\n                fcn.00b99a20();\n                puVar1[3] = 1;\n                *puVar1 = 1;\n                uVar5 = uVar6;\n            }\n            goto code_r0x00bf2328;\n        }\n    }\n    else {\n        fcn.00b97f41(L\"KEYS\");\n        iVar3 = fcn.00b97a68(&stack0xffffffc8, 0);\n        fcn.00b95a64();\n        if (iVar3 == 0) {\n            fcn.00bf233c(&stack0xffffffc0);\n            fcn.00bf7770(&stack0xffffffbc);\n            fcn.00be66f4();\n            uVar5 = uVar6;\n            goto code_r0x00bf2328;\n        }\n        fcn.00b97f41(L\"EXISTS\");\n        iVar3 = fcn.00b97a68(&stack0xffffffbc, 0);\n        fcn.00b95a64();\n        if (iVar3 == 0) {\n            if (*(arg_10h + 8) == 1) {\n                piVar4 = **(arg_10h + 4);\n                if (piVar4[3] == 6) {\n                    piVar4 = *piVar4;\n                }\n                cVar2 = fcn.00bf1e24(piVar4);\n                puVar1 = *arg_14h;\n                if (cVar2 == '\\0') {\n                    fcn.00b99a20();\n                    *puVar1 = 0;\n                }\n                else {\n                    fcn.00b99a20();\n                    *puVar1 = 1;\n                }\n                puVar1[3] = 1;\n                uVar5 = uVar6;\n                goto code_r0x00bf2328;\n            }\n        }\n        else {\n            fcn.00b97f41(L\"APPEND\");\n            iVar3 = fcn.00b97a68(&stack0xffffffb0, 0);\n            fcn.00b95a64();\n            if (iVar3 != 0) goto code_r0x00bf2328;\n            if (*(arg_10h + 8) == 1) {\n                piVar4 = **(arg_10h + 4);\n                if (piVar4[3] == 6) {\n                    piVar4 = *piVar4;\n                }\n                fcn.00bf1be5(piVar4, &stack0xffffffa8);\n                uVar5 = uVar6;\n                goto code_r0x00bf2328;\n            }\n        }\n    }\n    uVar5 = 3;\ncode_r0x00bf2328:\n    fcn.00b95a64();\n    return uVar5;\n}\n",
        "token_count": 1272
    },
    "00bf2d91": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf2d91(int32_t hmenu, uint *arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = -1;\n    if (((hmenu != 5) && (hmenu != 6)) &&\n       ((hmenu == 3 || ((hmenu == 4 || (cVar2 = fcn.00bf2f4c(hmenu, &var_4h),  hmenu = var_4h,  cVar2 != '\\0')))))) {\n        piVar1 = *(hmenu * 4 + 0xc56a44);\n        *arg_10h = 0;\n        if (piVar1 != NULL) {\n            iVar3 = *piVar1;\n            var_34h = 0x30;\n            fcn.00bb3020(&var_30h, 0, 0x2c);\n            if (iVar3 != 0) {\n                var_10h = fcn.00bb0ff6(0x208);\n                var_30h = 0x11;\n                *arg_ch = var_10h;\n                var_ch = 0x104;\n                iVar3 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(iVar3, hmenu, 0, &var_34h);\n                if ((iVar3 != 0) && ((var_2ch & 0x800) == 0)) {\n                    if ((var_28h & 3) == 0) {\n                        *arg_10h = *arg_10h | 0x40;\n                    }\n                    else {\n                        *arg_10h = *arg_10h | 0x80;\n                    }\n                    if ((var_28h & 0x8080) != 0) {\n                        *arg_10h = *arg_10h | 0x100;\n                    }\n                    if ((var_28h & 8) == 0) {\n                        *arg_10h = *arg_10h | 4;\n                    }\n                    else {\n                        *arg_10h = *arg_10h | 1;\n                    }\n                    if ((var_28h & 0x1000) != 0) {\n                        *arg_10h = *arg_10h | 0x200;\n                    }\n                    return 1;\n                }\n                fcn.00bb106c(*arg_ch);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 614
    },
    "00bf2e9e": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf2e9e(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_34h;\n    uint var_30h;\n    uint var_20h;\n    int32_t var_4h;\n    \n    var_4h = -1;\n    uVar3 = *0xc56890;\n    if (arg_8h == 0) {\ncode_r0x00bf2eb6:\n        *arg_ch = uVar3;\n        uVar3 = 1;\n    }\n    else {\n        if ((((arg_8h != 5) && (arg_8h != 6)) &&\n            ((iVar4 = arg_8h,  arg_8h == 3 ||\n             ((arg_8h == 4 || (cVar2 = fcn.00bf2f4c(arg_8h, &var_4h),  iVar4 = var_4h,  cVar2 != '\\0')))))) &&\n           ((iVar1 = *(iVar4 * 4 + 0xc56a44),  iVar1 != 0 && (*(iVar1 + 4) != '\\0')))) {\n            var_34h = 0x30;\n            fcn.00bb3020(&var_30h, 0, 0x2c);\n            var_30h = 4;\n            iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(**(iVar4 * 4 + 0xc56a44), arg_8h, 0, &var_34h);\n            uVar3 = var_20h;\n            if (iVar4 != 0) goto code_r0x00bf2eb6;\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 418
    },
    "00bf2f86": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf2f86(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t *arg_8h_00;\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t unaff_EBX;\n    uint *unaff_ESI;\n    uint *puVar5;\n    uint uStack80;\n    int32_t *piStack76;\n    int32_t *piStack68;\n    uint uStack64;\n    uint uStack60;\n    uint32_t uStack56;\n    uint32_t uStack52;\n    int32_t *piStack28;\n    uint uStack24;\n    \n    uVar2 = fcn.00bafec6();\n    fcn.00b9538e(uVar2);\n    arg_8h_00 = piStack68;\n    uStack80 = 0xffffffff;\n    if ((arg_8h == 5) || (arg_8h == 6)) {\ncode_r0x00bf31b7:\n        uVar2 = 0;\n        goto code_r0x00bf31b9;\n    }\n    if ((arg_8h == 3) || (arg_8h == 4)) {\n        arg_10h = 0xffffffff;\n        if (arg_8h == 3) {\n            if (*piStack68 == 0) {\n                uVar2 = 0xc568ac;\n                goto code_r0x00bf300b;\n            }\ncode_r0x00bf3023:\n            fcn.00b97d2c(piStack68);\n        }\n        else if (arg_8h == 4) {\n            if (*piStack68 != 0) goto code_r0x00bf3023;\n            uVar2 = 0xc568bc;\ncode_r0x00bf300b:\n            fcn.00b981a7(uVar2);\n        }\n        if ((*(arg_8h * 4 + 0xc56a44) == 0) || (*arg_8h_00 == 0)) goto code_r0x00bf31b7;\n    }\n    else {\n        iVar3 = unaff_EBX;\n        cVar1 = fcn.00bf2f4c(arg_8h, &uStack80);\n        arg_8h = iVar3;\n        if (cVar1 == '\\0') goto code_r0x00bf31b7;\n    }\n    puVar5 = *(arg_8h * 4 + 0xc56a44);\n    uVar2 = fcn.00bb0ff6(0x208);\n    fcn.00b9538e(uVar2);\n    piStack68 = 0x30;\n    fcn.00bb3020(&uStack64, 0, 0x2c);\n    uStack64 = 0x11;\n    piStack28 = 0x104;\n    iVar3 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*unaff_ESI, arg_8h, 0, &piStack68);\n    cVar1 = unaff_ESI >> 0x18;\n    if ((iVar3 == 0) || ((uStack56 & 0x800) != 0)) {\ncode_r0x00bf3198:\n        uVar2 = 0;\n    }\n    else {\n        if ((uStack52 & 0x1000) != 0) {\n            cVar1 = '\\x01';\n        }\n        if (arg_10h < 0) {\n            if (*arg_8h_00 == 0) goto code_r0x00bf3198;\n            arg_10h = 0;\n            uStack60 = 0x10;\n            piStack28 = arg_8h_00;\n            uStack24 = fcn.00bb2e3c(arg_8h_00);\n        }\n        else {\n            uVar4 = uStack52;\n            if ((arg_10h & 0x40) != 0) {\n                uVar4 = uStack52 & 0xfffffffc;\n            }\n            if (arg_10h < '\\0') {\n                uVar4 = uVar4 | 3;\n            }\n            if ((arg_10h & 1) != 0) {\n                uVar4 = uVar4 | 8;\n            }\n            if ((arg_10h & 4) != 0) {\n                uVar4 = uVar4 & 0xfffffff7;\n            }\n            if ((arg_10h & 0x100) != 0) {\n                uVar4 = uVar4 | 0x80;\n            }\n            if (((uStack52 & 8) != 0) && ((arg_10h & 4) == 0)) {\n                uVar4 = uVar4 | 8;\n            }\n            uStack60 = 1;\n            uStack52 = uVar4;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_SetMenuItemInfoW)(*puVar5, arg_8h, 0, &uStack64);\n        if (iVar3 == 0) goto code_r0x00bf3198;\n        if (0 < arg_10h) {\n            if ((arg_10h & 0x200) == 0) {\n                if (cVar1 == '\\0') goto code_r0x00bf3191;\n                arg_8h = -1;\n            }\n            iVar3 = (*_sym.imp.USER32.dll_SetMenuDefaultItem)(*puVar5, arg_8h, 0);\n            if (iVar3 == 0) goto code_r0x00bf3198;\n        }\ncode_r0x00bf3191:\n        uVar2 = 1;\n    }\n    *piStack76 = *piStack76 + -1;\n    if (*piStack76 == 0) {\n        fcn.00bb106c(piStack76);\n        fcn.00bb106c(uStack80);\n    }\ncode_r0x00bf31b9:\n    *piStack68 = *piStack68 + -1;\n    if (*piStack68 == 0) {\n        fcn.00bb106c(piStack68);\n        fcn.00bb106c(arg_8h_00);\n    }\n    return uVar2;\n}\n",
        "token_count": 1405
    },
    "00bf36e5": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00bf36e5(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint var_14h;\n    \n    iVar1 = *(in_ECX + 0x2c);\n    if ((iVar1 == 5) || (iVar1 == 6)) {\n        iVar1 = arg_8h[1];\n        uVar3 = fcn.00bf3696(*arg_8h, iVar1 * 2);\n        uVar2 = uVar3 == iVar1 * 2;\n    }\n    else if ((iVar1 == 7) || (iVar1 == 8)) {\n        uVar3 = fcn.00bf377e(arg_8h);\n        uVar2 = uVar3;\n    }\n    else {\n        if ((iVar1 == 3) || (iVar1 == 4)) {\n            fcn.00b95c18();\n            fcn.00bf3629(arg_8h, &var_14h);\n        }\n        else {\n            fcn.00b95c18();\n            fcn.00b95b75(arg_8h, &var_14h);\n        }\n        uVar2 = fcn.00bf36c7(&var_14h);\n        uVar3 = fcn.00b95a64();\n    }\n    return uVar3 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 331
    },
    "00bfbba6": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfbba6(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t extraout_EDX;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uchar *arg_14h;\n    int32_t *arg_18h;\n    uint uStack124;\n    int32_t *piStack120;\n    int32_t *piStack116;\n    uint32_t uStack112;\n    int32_t *piStack108;\n    uint uStack104;\n    \n    uVar8 = *(arg_8h + 8);\n    uVar9 = 0;\n    iVar5 = *(*(arg_8h + 4) + 4);\n    fcn.00b99997();\n    iVar5 = *(iVar5 + 8);\n    iVar1 = *(iVar5 + 4);\n    piVar2 = *(iVar5 + 0xc);\n    *piVar2 = *piVar2 + 1;\n    fcn.00b948ae();\n    iVar5 = fcn.00bef658(L\".lnk\", 2, 1, 0xffffffff, 0xffffffff, 0xffffffff);\n    if (iVar5 == iVar1) {\n        uStack104 = 0xbfbc24;\n        fcn.00b97e0b(L\".lnk\");\n    }\n    uStack104 = 0;\n    piStack108 = 0xbfbc2c;\n    (*_sym.imp.ole32.dll_CoInitialize)();\n    piStack108 = &stack0xffffffa8;\n    uStack112 = 0xc22bdc;\n    piStack116 = 0x1;\n    piStack120 = NULL;\n    uStack124 = 0xc22d6c;\n    iVar5 = (*_sym.imp.ole32.dll_CoCreateInstance)();\n    if (iVar5 < 0) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    else {\n        iVar5 = **(arg_8h + 4);\n        fcn.00b99997();\n        piVar3 = piStack108;\n        piVar2 = **(iVar5 + 8);\n        (**(*piStack108 + 0x50))();\n        if (2 < uVar8) {\n            iVar5 = *(*(arg_8h + 4) + 8);\n            fcn.00b99997();\n            (**(*piStack116 + 0x24))(piStack116, **(iVar5 + 8));\n        }\n        if (3 < uVar8) {\n            iVar5 = *(*(arg_8h + 4) + 0xc);\n            fcn.00b99997();\n            (**(*piStack116 + 0x2c))(piStack116, **(iVar5 + 8));\n        }\n        if (4 < uVar8) {\n            iVar5 = *(*(arg_8h + 4) + 0x10);\n            fcn.00b99997();\n            (**(*piStack116 + 0x1c))(piStack116, **(iVar5 + 8));\n        }\n        if (5 < uVar8) {\n            iVar5 = *(*(arg_8h + 4) + 0x14);\n            fcn.00b99997();\n            (**(*piStack116 + 0x44))(piStack116, **(iVar5 + 8), 0);\n        }\n        iVar5 = arg_8h;\n        if (6 < uVar8) {\n            iVar1 = *(*(arg_8h + 4) + 0x18);\n            cVar4 = fcn.00b99399();\n            iVar5 = extraout_EDX;\n            if (cVar4 != '\\0') {\n                fcn.00b99997();\n                fcn.00b97f41(**(iVar1 + 8));\n                arg_18h = &stack0xffffff84;\n                arg_14h = &stack0xffffff85;\n                cVar4 = fcn.00bb023b(&stack0xffffffa8, &stack0xffffff94, &stack0xffffff86, arg_14h, arg_18h, \n                                     &stack0xffffff87);\n                fcn.00b95a64();\n                iVar5 = arg_8h;\n                uVar8 = uStack112;\n                if (cVar4 == '\\x01') {\n                    if (arg_14h != '\\0') {\n                        uVar9 = 4;\n                    }\n                    cVar4 = arg_14h >> 8;\n                    if (cVar4 != '\\0') {\n                        uVar9 = uVar9 | 2;\n                    }\n                    if (arg_14h >> 0x10 != '\\0') {\n                        uVar9 = uVar9 | 1;\n                    }\n                    if ((cVar4 == '\\0') && (arg_14h == '\\0')) {\n                        uVar9 = uVar9 | 6;\n                    }\n                    (**(*arg_18h + 0x34))(arg_18h, uVar9 << 8 | piVar3);\n                    uVar8 = uStack112;\n                }\n            }\n        }\n        if (7 < uVar8) {\n            iVar5 = *(*(iVar5 + 4) + 0x14);\n            fcn.00b99997();\n            uVar7 = **(iVar5 + 8);\n            iVar5 = *piStack116;\n            uVar6 = fcn.00b99c9c();\n            (**(iVar5 + 0x44))(piStack116, uVar7, uVar6);\n            uVar8 = uStack112;\n        }\n        if (8 < uVar8) {\n            iVar5 = *piStack116;\n            uVar7 = fcn.00b99c9c();\n            (**(iVar5 + 0x3c))(piStack116, uVar7);\n        }\n        iVar5 = (***piStack116)(piStack116, 0xc22c3c, &stack0xffffff94);\n        if (iVar5 < 0) {\n            fcn.00b99a20();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n        }\n        else {\n            iVar5 = (**(*piStack120 + 0x18))(piStack120, uStack112, 1);\n            if (iVar5 < 0) {\n                fcn.00b99a20();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n            }\n            (**(*piVar3 + 8))(piVar3);\n        }\n        (**(*piVar2 + 8))(piVar2);\n    }\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1556
    },
    "00c03426": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c03426(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = **(arg_8h + 4);\n    if (puVar1[3] == 6) {\n        puVar1 = *puVar1;\n    }\n    if (puVar1[3] != 5) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 124
    },
    "00c0345b": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0345b(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = **(arg_8h + 4);\n    if (puVar1[3] == 6) {\n        puVar1 = *puVar1;\n    }\n    if (puVar1[3] != 0xb) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "00c03490": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c03490(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    float10 fVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = **(arg_8h + 4);\n    if (puVar2[3] == 6) {\n        puVar2 = *puVar2;\n    }\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    cVar1 = fcn.00be65fa();\n    if ((cVar1 != '\\0') && (puVar2[3] == 3)) {\n        fcn.00b99cf8();\n        _var_8h = fcn.00bcb606();\n        fVar3 = fcn.00b99cf8();\n        if (_var_8h != fVar3) {\n            fcn.00b99a20();\n            arg_ch[3] = 1;\n            *arg_ch = 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 265
    },
    "00c03514": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c03514(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    puVar3 = **(arg_8h + 4);\n    if (puVar3[3] == 6) {\n        puVar3 = *puVar3;\n    }\n    if (puVar3[3] == 7) {\n        uVar1 = fcn.00bf89bb();\n        iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x00c03546;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00c03546:\n    fcn.00b99a20();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 217
    },
    "00c03561": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c03561(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    float10 fVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = **(arg_8h + 4);\n    if (puVar2[3] == 6) {\n        puVar2 = *puVar2;\n    }\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    cVar1 = fcn.00be65fa();\n    if (cVar1 != '\\0') {\n        if ((puVar2[3] != 1) && (puVar2[3] != 2)) {\n            fcn.00b99cf8();\n            _var_8h = fcn.00bcb606();\n            fVar3 = fcn.00b99cf8();\n            if (_var_8h != fVar3) {\n                return 0;\n            }\n        }\n        fcn.00b99a20();\n        *arg_ch = 1;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 286
    },
    "00c035ea": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c035ea(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = **(arg_8h + 4);\n    if (puVar1[3] == 6) {\n        puVar1 = *puVar1;\n    }\n    if (puVar1[3] != 0xf) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 125
    },
    "00c0361f": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0361f(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00be65fa();\n    if (cVar1 == '\\0') {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 93
    },
    "00c03657": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c03657(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = **(arg_8h + 4);\n    if (puVar1[3] == 6) {\n        puVar1 = *puVar1;\n    }\n    if (puVar1[3] != 7) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 124
    },
    "00c0368c": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0368c(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = **(arg_8h + 4);\n    if (puVar1[3] == 6) {\n        puVar1 = *puVar1;\n    }\n    if (puVar1[3] != 4) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 125
    },
    "00c04881": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c04881(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint noname_0;\n    uint arg_8h_00;\n    int32_t iStack116;\n    uint uStack100;\n    uint uStack96;\n    uchar auStack56 [52];\n    \n    iVar6 = *(arg_8h + 8);\n    fcn.00bec3cb();\n    iStack116 = 0;\n    uVar1 = iVar6 - 2;\n    if (uVar1 < 9) {\n    // switch table (9 cases) at 0xc04c31\n        iVar6 = in_ECX;\n        switch(*(uVar1 * 4 + 0xc04c31)) {\n        case 0xc048be:\n            iStack116 = fcn.00bf89bb();\n        case 0xc048cd:\n            cVar3 = fcn.00b99dae(0x29);\n            if (cVar3 == '\\0') {\n                fcn.00b99c9c();\n            }\n        case 0xc04906:\n            cVar3 = fcn.00b99dae(0x29);\n            if (cVar3 == '\\0') {\n                fcn.00b99c9c();\n            }\n        case 0xc0492e:\n            cVar3 = fcn.00b99dae(0x29);\n            if (cVar3 == '\\0') {\n                uStack96 = fcn.00b99c9c();\n            }\n        case 0xc04953:\n            iVar4 = fcn.00b99c9c();\n            if ((-1 < iVar4) && (cVar3 = fcn.00b99dae(0x29),  cVar3 == '\\0')) {\n                fcn.00b99c9c();\n            }\n        case 0xc04987:\n            iVar4 = fcn.00b99c9c();\n            if ((-1 < iVar4) && (cVar3 = fcn.00b99dae(0x29),  cVar3 == '\\0')) {\n                fcn.00b99c9c();\n            }\n        case 0xc049bb:\n            iVar4 = *(*(arg_8h + 4) + 0xc);\n            cVar3 = fcn.00b99dae(0x29);\n            if ((cVar3 == '\\0') && (fcn.00b99997(),  ***(iVar4 + 8) != 0)) {\n                fcn.00b953b9();\n                iVar4 = 1;\n                while( true ) {\n                    iVar5 = *(*(arg_8h + 4) + 0xc);\n                    fcn.00b99997();\n                    uVar2 = *(**(iVar5 + 8) + iVar4 * 2);\n                    if (uVar2 == 0) break;\n                    if (uVar2 < 0x30) {\ncode_r0x00c04ae7:\n                        uStack100 = 0;\n                        arg_8h_00 = 3;\n                        goto code_r0x00c04af0;\n                    }\n                    if (uVar2 < 0x3a) {\n                        fcn.00b99997();\n                        while( true ) {\n                            iVar6 = *(*(arg_8h + 4) + 0xc);\n                            fcn.00b99997();\n                            iVar5 = fcn.00bb3e9f(*(**(iVar6 + 8) + 2 + iVar4 * 2));\n                            iVar6 = iStack116;\n                            if (iVar5 == 0) break;\n                            iVar4 = iVar4 + 1;\n                            fcn.00b99997();\n                        }\n                    }\n                    else if ((uVar2 != 0x4d) && (uVar2 != 0x6d)) goto code_r0x00c04ae7;\n                    iVar4 = iVar4 + 1;\n                }\n            }\n        case 0xc049d5:\n            iVar4 = *(*(arg_8h + 4) + 8);\n            cVar3 = fcn.00b99dae(0x29);\n            if (cVar3 == '\\0') {\n                fcn.00b99997();\n                fcn.00b981a7(*(iVar4 + 8));\n            }\n            else {\n                fcn.00b97eec();\n            }\n        }\n        iVar4 = *(*(arg_8h + 4) + 4);\n        cVar3 = fcn.00b99dae(0x29);\n        if (cVar3 == '\\0') {\n            fcn.00b99997();\n            fcn.00b981a7(*(iVar4 + 8));\n        }\n        else {\n            fcn.00b97eec();\n        }\n        iVar4 = **(arg_8h + 4);\n        cVar3 = fcn.00b99dae(0x29);\n        if (cVar3 == '\\0') {\n            fcn.00b99997();\n            iVar6 = *(iVar4 + 8);\n        }\n        else {\n            iVar6 = iVar6 + 0xb8;\n        }\n        fcn.00b981a7(iVar6);\n        arg_8h_00 = 0xc04ba0;\n        iVar6 = fcn.00bf4dc9(uStack100, uStack96);\n        if (iVar6 != 0) {\n            iVar6 = fcn.00bec450(noname_0, in_ECX);\n            if (iVar6 == 1) {\n                fcn.00b99b9c(&stack0xffffffc8);\n                goto code_r0x00c04c1b;\n            }\n            uStack100 = 0;\n            if (iVar6 == 2) {\n                arg_8h_00 = 1;\n            }\n            else if (iVar6 == 3) {\n                arg_8h_00 = 2;\n            }\n            else {\n                arg_8h_00 = 3;\n            }\n        }\ncode_r0x00c04af0:\n        fcn.00be6aa3(arg_8h_00, uStack100);\n        fcn.00b99bf8(0xc1f910);\n    }\n    else {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.00be6aa3(5, 0);\n    }\ncode_r0x00c04c1b:\n    fcn.00c03b97();\n    return 0;\n}\n",
        "token_count": 1509
    },
    "00c04c7d": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c04c7d(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = **(arg_8h + 4);\n    if (puVar1[3] == 6) {\n        puVar1 = *puVar1;\n    }\n    if (puVar1[3] != 9) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "00c04d29": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c04d29(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = **(arg_8h + 4);\n    if (puVar1[3] == 6) {\n        puVar1 = *puVar1;\n    }\n    if (puVar1[3] == 0xd) {\n        fcn.00b99a20();\n        *arg_ch = 2;\n    }\n    else {\n        if (puVar1[3] == 0xe) {\n            fcn.00b99a20();\n            arg_ch[3] = 1;\n            *arg_ch = 1;\n            return 0;\n        }\n        fcn.00b99a20();\n        *arg_ch = 0;\n    }\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 199
    },
    "00c04d81": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c04d81(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00b99dae(0x29);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00b99dae(0x2a);\n        if (cVar1 == '\\0') {\n            fcn.00b99a20();\n            *arg_ch = 0;\n        }\n        else {\n            fcn.00b99a20();\n            *arg_ch = 2;\n        }\n        arg_ch[3] = 1;\n    }\n    else {\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 184
    },
    "00c04deb": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c04deb(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t *arg_8h_00;\n    uint *puVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = **(arg_8h + 4);\n    if (puVar2[3] == 6) {\n        puVar2 = *puVar2;\n    }\n    arg_8h_00 = (*(arg_8h + 4))[1];\n    if (arg_8h_00[3] == 6) {\n        arg_8h_00 = *arg_8h_00;\n    }\n    if ((puVar2[3] == 0xf) && (cVar1 = fcn.00bf1be5(arg_8h_00, &var_8h),  cVar1 != '\\0')) {\n        fcn.00b99a20();\n        *arg_ch = var_8h;\n        arg_ch[3] = 2;\n        arg_ch[1] = var_4h;\n        return 0;\n    }\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    fcn.00be6aa3(1, 0);\n    return 0;\n}\n",
        "token_count": 308
    },
    "00c04e6f": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c04e6f(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t *arg_8h_00;\n    uint var_4h;\n    \n    puVar2 = **(arg_8h + 4);\n    if (puVar2[3] == 6) {\n        puVar2 = *puVar2;\n    }\n    arg_8h_00 = (*(arg_8h + 4))[1];\n    if (arg_8h_00[3] == 6) {\n        arg_8h_00 = *arg_8h_00;\n    }\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    if (puVar2[3] == 0xf) {\n        cVar1 = fcn.00bf1e24(arg_8h_00);\n        if (cVar1 != '\\0') {\n            fcn.00b99a20();\n            arg_ch[3] = 1;\n            *arg_ch = 1;\n        }\n    }\n    else {\n        fcn.00be6aa3(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 287
    },
    "00c04ee7": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c04ee7(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uStack24;\n    int32_t iStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    puVar1 = **(arg_8h + 4);\n    if (puVar1[3] == 6) {\n        puVar1 = *puVar1;\n    }\n    uStack24 = 0xc1fb84;\n    iStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    if (puVar1[3] == 0xf) {\n        fcn.00bf233c(&uStack24);\n        if (iStack20 != 0) goto code_r0x00c04f41;\n    }\n    fcn.00be6aa3(1, 0);\ncode_r0x00c04f41:\n    fcn.00bf7770(&stack0xffffffe4);\n    fcn.00be66f4();\n    return 0;\n}\n",
        "token_count": 243
    },
    "00c04f61": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c04f61(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t *arg_8h_00;\n    uint var_4h;\n    \n    puVar2 = **(arg_8h + 4);\n    if (puVar2[3] == 6) {\n        puVar2 = *puVar2;\n    }\n    arg_8h_00 = (*(arg_8h + 4))[1];\n    if (arg_8h_00[3] == 6) {\n        arg_8h_00 = *arg_8h_00;\n    }\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    if (puVar2[3] == 0xf) {\n        cVar1 = fcn.00bf2462(arg_8h_00);\n        if (cVar1 != '\\0') {\n            fcn.00b99a20();\n            arg_ch[3] = 1;\n            *arg_ch = 1;\n        }\n    }\n    else {\n        fcn.00be6aa3(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 285
    },
    "00c05c29": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c05c29(int32_t arg_8h, double *arg_ch)\n\n{\n    double *pdVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    float10 fVar5;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    double dStack20;\n    int32_t var_8h;\n    uint var_4h;\n    \n    pdVar1 = arg_ch;\n    fcn.00b99a20();\n    iVar4 = arg_8h;\n    *(pdVar1 + 0xc) = 1;\n    *pdVar1 = 0;\n    var_8h = 0;\n    if (6 < *(arg_8h + 8)) {\n        var_8h = fcn.00b99c9c();\n    }\n    arg_ch = 0x1;\n    if (4 < *(iVar4 + 8)) {\n        iVar2 = fcn.00b99c9c();\n        if (1 < iVar2) {\n            arg_ch = fcn.00b99c9c();\n        }\n    }\n    if (5 < *(iVar4 + 8)) {\n        uVar3 = fcn.00bf89bb();\n        iVar4 = (*_sym.imp.USER32.dll_IsWindow)(uVar3);\n        if (iVar4 != 0) {\n            var_4h = fcn.00bf89bb();\n            goto code_r0x00c05cb8;\n        }\n    }\n    var_4h = (*_sym.imp.USER32.dll_GetForegroundWindow)();\ncode_r0x00c05cb8:\n    iVar4 = fcn.00b99c9c();\n    var_20h = iVar4;\n    var_1ch = fcn.00b99c9c();\n    iVar2 = fcn.00b99c9c();\n    var_18h = iVar2;\n    var_14h = fcn.00b99c9c();\n    iVar4 = fcn.00bb6ccd(iVar2 - iVar4);\n    iVar2 = fcn.00c0762d(var_4h, &var_20h, &arg_8h);\n    if (iVar2 != 0) {\n        if (var_8h == 1) {\n            fVar5 = fcn.00c07590(iVar2, arg_8h, iVar4 + 1, arg_ch);\n        }\n        else {\n            fVar5 = fcn.00c074bc(iVar2, arg_8h, iVar4 + 1, arg_ch);\n        }\n        dStack20 = fVar5;\n        fcn.00b99a20();\n        *pdVar1 = dStack20;\n        *(pdVar1 + 0xc) = 3;\n        fcn.00bb106c(iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 673
    },
    "00c05e2c": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c05e2c(int32_t arg_8h, uint *arg_ch)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t *piVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    char var_2h;\n    uint var_1h;\n    \n    var_50h = fcn.00b99c9c();\n    var_4ch = fcn.00b99c9c();\n    iVar3 = fcn.00b99c9c();\n    var_48h = iVar3;\n    var_44h = fcn.00b99c9c();\n    var_18h = var_44h;\n    if (7 < *(arg_8h + 8)) {\n        uVar4 = fcn.00bf89bb();\n        iVar5 = (*_sym.imp.USER32.dll_IsWindow)(uVar4);\n        if (iVar5 != 0) {\n            uVar4 = fcn.00bf89bb();\n            goto code_r0x00c05ea9;\n        }\n    }\n    uVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\ncode_r0x00c05ea9:\n    fcn.00c03c94(*(in_ECX + 0x104), &var_40h, uVar4);\n    if ((*(arg_8h + 8) < 7) || (iVar5 = fcn.00b99c9c(),  iVar5 < 2)) {\n        var_8h = 1;\n    }\n    else {\n        var_8h = fcn.00b99c9c();\n    }\n    if (*(arg_8h + 8) < 6) {\n        arg_ch_00 = 0;\n    }\n    else {\n        arg_ch_00 = fcn.00b99c9c();\n    }\n    arg_8h_00 = fcn.00b99c9c();\n    fcn.00c03b35(arg_8h_00, arg_ch_00);\n    var_1h._0_1_ = iVar3 < var_50h;\n    var_2h = var_18h < var_4ch;\n    var_1ch = fcn.00bb6ccd(var_18h - var_4ch);\n    var_1ch = var_1ch + 1;\n    iVar3 = fcn.00bb6ccd(iVar3 - var_50h);\n    iVar3 = iVar3 + 1;\n    bVar1 = false;\n    var_2ch = iVar3;\n    var_18h = fcn.00c0762d(uVar4, &var_50h, &var_28h);\n    if (var_18h != 0) {\n        iVar8 = 0;\n        iVar7 = -var_8h;\n        var_ch = var_44h;\n        iVar5 = var_8h;\n        var_28h = iVar7;\n        do {\n            if (var_1ch <= iVar8) break;\n            iVar9 = iVar3 * 4 * iVar8;\n            var_20h = iVar3 * 4 + iVar9;\n            iVar10 = iVar9;\n            var_24h = iVar9;\n            iVar3 = var_2ch;\n            for (; (var_2ch = iVar3,  var_14h = iVar9,  !bVar1 && (iVar7 = var_28h,  iVar9 < var_20h));\n                iVar9 = iVar9 + var_8h * 4) {\n                cVar2 = fcn.00c0735e(var_18h + iVar9);\n                if (cVar2 != '\\0') {\n                    bVar1 = true;\n                    iVar3 = (iVar9 - iVar10) / 4;\n                    var_10h = fcn.00b9942e();\n                    fcn.00b991b0(var_10h, 1);\n                    if (var_1h == '\\0') {\n                        iVar3 = var_50h + iVar3;\n                    }\n                    else {\n                        iVar3 = var_48h - iVar3;\n                    }\n                    iVar3 = iVar3 - var_40h;\n                    piVar6 = fcn.00b98ea0(var_10h, 2, 1);\n                    fcn.00b99a20();\n                    *piVar6 = iVar3;\n                    piVar6[3] = 1;\n                    iVar3 = var_ch;\n                    if (var_2h == '\\0') {\n                        iVar3 = var_4ch + iVar8;\n                    }\n                    iVar3 = iVar3 - var_3ch;\n                    piVar6 = fcn.00b98ea0(var_10h, 2, 1);\n                    fcn.00b99a20();\n                    *piVar6 = iVar3;\n                    piVar6[3] = 1;\n                    iVar9 = var_14h;\n                    iVar10 = var_24h;\n                }\n                iVar5 = var_8h;\n                iVar7 = var_28h;\n                iVar3 = var_2ch;\n            }\n            var_ch = var_ch + iVar7;\n            iVar8 = iVar8 + iVar5;\n        } while (!bVar1);\n        fcn.00bb106c(var_18h);\n        if (bVar1) {\n            return 0;\n        }\n    }\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    fcn.00be6aa3(1, 0);\n    return 0;\n}\n",
        "token_count": 1479
    },
    "00c08370": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c08370(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00b993dd();\n    if (cVar1 == '\\0') {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 92
    },
    "00c08f5b": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c08f5b(int32_t *arg_8h, uint arg_ch)\n\n{\n    int16_t **ppiVar1;\n    uint uVar2;\n    bool bVar3;\n    char cVar4;\n    int16_t *piVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uint var_2a0h;\n    uint var_94h;\n    uint32_t var_44h;\n    int32_t *var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t iStack44;\n    code *var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    fcn.00b99bf8(0xc1f910);\n    piVar8 = arg_8h;\n    cVar4 = fcn.00b993dd();\n    if (cVar4 == '\\0') {\n        fcn.00be6aa3(1, 0);\n        return 0;\n    }\n    var_1ch = 1;\n    if ((1 < piVar8[2]) && ((var_1ch = fcn.00b99c9c(),  var_1ch < 1 || (7 < var_1ch)))) {\ncode_r0x00c091a9:\n        fcn.00be6aa3(1, 0);\n        return 0;\n    }\n    iVar7 = var_1ch;\n    ppiVar1 = *piVar8[1];\n    if (ppiVar1[3] == 0x8) {\n        piVar5 = *ppiVar1;\n    }\n    else {\n        piVar5 = NULL;\n    }\n    piVar8 = *(piVar5 + 4);\n    if (ppiVar1[3] == 0x8) {\n        piVar5 = *ppiVar1;\n    }\n    else {\n        piVar5 = NULL;\n    }\n    arg_8h = arg_8h & 0xffffff | (*piVar5 == 9) << 0x18;\n    if (var_1ch == 5) {\n        var_2ch = 0;\n        var_24h = NULL;\n        cVar4 = fcn.00c093f5();\n        if (cVar4 == '\\0') {\n            fcn.00be6aa3(1, 0);\n        }\n        else {\n            uVar2 = **piVar8;\n            cVar4 = fcn.00c093f5();\n            pcVar6 = var_24h;\n            if (cVar4 == '\\0') {\n                pcVar6 = 0xbcb75f;\n            }\n            (*pcVar6)(6, uVar2, &arg_8h);\n            (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(arg_8h, &var_2a0h, 0x104);\n            fcn.00b99bf8(&var_2a0h);\n        }\n        if (var_2ch == 0) {\n            return 0;\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(var_2ch);\n        return 0;\n    }\n    if (var_1ch == 7) {\n        if (((*piVar5 != 9) || (iVar7 = (**(*piVar8 + 0x10))(piVar8, 0, 0x800, &arg_8h),  iVar7 != 0)) ||\n           (arg_8h == NULL)) goto code_r0x00c091a9;\n        (**(*arg_8h + 0xc))(arg_8h, &var_4h);\n        var_30h = *var_4h;\n        var_2ch = var_4h[1];\n        iStack44 = var_4h[2];\n        var_24h = var_4h[3];\n        (**(*arg_8h + 0x4c))(arg_8h, var_4h);\n        (*_sym.imp.ole32.dll_StringFromGUID2)(&var_30h, &var_94h, 0x28);\n        fcn.00b99bf8(&var_94h);\n        piVar8 = arg_8h;\n        goto code_r0x00c090f2;\n    }\n    var_8h = NULL;\n    iVar9 = (***piVar8)(piVar8, 0xc22c7c, &var_40h);\n    if (iVar9 < 0) {\n        if (arg_8h._3_1_ == '\\0') goto code_r0x00c091a9;\n        iVar9 = (**(*piVar8 + 0x10))(piVar8, 0, 0x800, &var_8h);\n    }\n    else {\n        iVar9 = (**(*var_40h + 0xc))(var_40h, &var_8h);\n        (**(*var_40h + 8))(var_40h);\n        iVar7 = var_1ch;\n    }\n    if ((iVar9 < 0) || (var_8h == NULL)) goto code_r0x00c091a9;\n    if (iVar7 == 1) {\n        puVar12 = NULL;\n        puVar11 = &arg_8h;\n    }\n    else {\n        if (iVar7 != 2) {\n            iVar9 = (**(*var_8h + 0x48))(var_8h, &arg_8h, &var_20h);\n            if (iVar9 != 0) {\n                (**(*var_8h + 8))(var_8h);\n                goto code_r0x00c091a9;\n            }\n            if (iVar7 == 4) {\n                (**(*arg_8h + 0x1c))(arg_8h, &var_4h);\n                iVar7 = (*_sym.imp.OLEAUT32.dll_LHashValOfNameSys)\n                                  (var_4h, *(var_4h + 6), *(var_4h + 0x1a), var_4h[4], &var_10h);\n                (**(*arg_8h + 0x30))(arg_8h, var_4h);\n                if (iVar7 == 0) {\n                    fcn.00b99bf8(var_10h);\n                    (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_10h);\n                }\n            }\n            else {\n                (**(*arg_8h + 0x14))(arg_8h, var_20h, &var_14h);\n                if (var_14h != 5) {\n                    var_44h = (**(*arg_8h + 0xc))(arg_8h);\n                    var_ch = NULL;\n                    uVar10 = 0;\n                    if (var_44h != 0) {\n                        bVar3 = false;\n                        do {\n                            iVar7 = var_1ch;\n                            if (bVar3) break;\n                            var_14h = 0;\n                            (**(*arg_8h + 0x14))(arg_8h, uVar10, &var_14h);\n                            if (var_14h == 5) {\n                                (**(*arg_8h + 0x10))(arg_8h, uVar10, &var_18h);\n                                (**(*var_18h + 0xc))(var_18h, &var_3ch);\n                                var_ch = *(var_3ch + 0x30);\n                                (**(*var_18h + 0x4c))(var_18h, var_3ch);\n                                var_34h = -1;\n                                var_10h = NULL;\n                                if (var_ch != NULL) {\n                                    do {\n                                        iVar7 = (**(*var_18h + 0x20))(var_18h, var_10h, &var_38h);\n                                        if (iVar7 == 0) {\n                                            (**(*var_8h + 0x38))(var_8h, var_38h, &var_4h);\n                                            (**(*var_4h + 0x48))(var_4h, 0, &var_34h);\n                                            if (var_34h == var_20h) {\n                                                bVar3 = true;\n                                                (**(*var_4h + 8))(var_4h);\n                                                (**(*var_8h + 8))(var_8h);\n                                                var_8h = var_18h;\n                                                goto code_r0x00c09310;\n                                            }\n                                            (**(*var_4h + 8))();\n                                        }\n                                        var_10h = var_10h + 1;\n                                    } while (var_10h < var_ch);\n                                }\n                                (**(*var_18h + 8))(var_18h);\n                            }\ncode_r0x00c09310:\n                            uVar10 = uVar10 + 1;\n                            iVar7 = var_1ch;\n                        } while (uVar10 < var_44h);\n                    }\n                }\n                if (((iVar7 == 3) || (iVar7 == 6)) && (var_14h == 5)) {\n                    (**(*var_8h + 0xc))(var_8h, &var_ch);\n                    var_30h = *var_ch;\n                    var_2ch = var_ch[1];\n                    iStack44 = var_ch[2];\n                    var_24h = var_ch[3];\n                    (**(*var_8h + 0x4c))(var_8h, var_ch);\n                    iVar7 = (*_sym.imp.ole32.dll_StringFromGUID2)(&var_30h, &var_94h, 0x28);\n                    if (iVar7 == 0) {\ncode_r0x00c093d4:\n                        fcn.00be6aa3(1, 0);\n                    }\n                    else if (var_1ch == 6) {\n                        fcn.00b99bf8(&var_94h);\n                    }\n                    else if (var_1ch == 3) {\n                        iVar7 = (*_sym.imp.ole32.dll_ProgIDFromCLSID)(&var_30h, &var_4h);\n                        if ((iVar7 != 0) || (var_4h == NULL)) goto code_r0x00c093d4;\n                        fcn.00b99bf8(var_4h);\n                        (*_sym.imp.ole32.dll_CoTaskMemFree)(var_4h);\n                    }\n                }\n            }\n            (**(*arg_8h + 8))(arg_8h);\n            piVar8 = var_8h;\n            goto code_r0x00c090f2;\n        }\n        puVar12 = &arg_8h;\n        puVar11 = NULL;\n    }\n    (**(*var_8h + 0x30))(var_8h, 0xffffffff, puVar11, puVar12, 0, 0);\n    fcn.00b99bf8(arg_8h);\n    (*_sym.imp.OLEAUT32.dll_SysStringLen)(arg_8h);\n    piVar8 = var_8h;\ncode_r0x00c090f2:\n    (**(*piVar8 + 8))(piVar8);\n    return 0;\n}\n",
        "token_count": 2628
    },
    "00c09e38": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c09e38(uint32_t arg_8h, int32_t *arg_ch, uint32_t *arg_10h, uint *arg_14h, int32_t arg_18h)\n\n{\n    int16_t iVar1;\n    int64_t iVar2;\n    char cVar3;\n    uint32_t *puVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint extraout_ECX;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint *puVar10;\n    char16_t *arg_10h_00;\n    int32_t var_f4h;\n    uint32_t var_f0h;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_64h;\n    uint pvargDest;\n    uint var_34h;\n    uint var_30h;\n    uint32_t *var_2ch;\n    uint *var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_5h;\n    \n    var_30h = 0xfffffffd;\n    var_ch = *(arg_18h + 8);\n    var_2ch = NULL;\n    var_28h = NULL;\n    var_24h = 0;\n    var_20h = 0;\n    var_10h = 0;\n    var_5h._0_1_ = '\\0';\n    if ((arg_10h == NULL) || (*arg_ch == 0)) {\n        iVar9 = 1;\n        arg_10h_00 = L\"NULL Pointer assignment\";\ncode_r0x00c0a1e4:\n        uVar5 = fcn.00c096db(iVar9, 0, arg_10h_00, 1);\n        return uVar5;\n    }\n    cVar3 = fcn.00be6543();\n    if (cVar3 == '\\0') {\n        arg_10h_00 = L\"Not an Object type\";\n        iVar9 = 2;\n        goto code_r0x00c0a1e4;\n    }\n    if (arg_10h[3] == 8) {\n        iVar9 = *arg_10h;\n    }\n    else {\n        iVar9 = 0;\n    }\n    var_14h = *(iVar9 + 8);\n    if (var_14h == NULL) {\n        arg_10h_00 = L\"NULL Pointer assignment\";\n        iVar9 = 4;\n        goto code_r0x00c0a1e4;\n    }\n    puVar10 = &fcn.00c09e38::var_10h;\n    var_f4h = 0;\n    iVar9 = fcn.00be7a1e(puVar10);\n    if (iVar9 < 0) {\n        arg_10h_00 = NULL;\n        goto code_r0x00c0a1e4;\n    }\n    if (((arg_8h == 1) && (arg_8h = 3,  var_10h != 0)) &&\n       (iVar9 = fcn.00be76c5(*arg_14h, puVar10, &fcn.00c09e38::var_f4h),  -1 < iVar9)) {\n        if (((var_f0h & 1) != 0) && (var_e8h == 0)) {\n            var_5h._0_1_ = '\\x01';\n        }\n        if (var_f0h == 1) {\n            arg_8h = 1;\n        }\n    }\n    uVar8 = var_ch;\n    uVar7 = var_ch + 1;\n    iVar2 = uVar7 * 0x10;\n    uVar6 = -(iVar2 >> 0x20 != 0) | iVar2;\n    puVar4 = fcn.00bb0fa5(-(0xfffffffb < uVar6) | uVar6 + 4);\n    if (puVar4 == NULL) {\n        arg_10h = NULL;\n    }\n    else {\n        arg_10h = puVar4 + 1;\n        *puVar4 = uVar7;\n        for (; -1 < uVar8; uVar8 = uVar8 - 1) {\n            fcn.00be7096();\n        }\n    }\n    uVar8 = var_ch;\n    uVar6 = 0;\n    if (var_ch != 0) {\n        do {\n            fcn.00be70dc(*(*(arg_18h + 4) + uVar6 * 4));\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < uVar8);\n    }\n    uVar5 = 0;\n    uVar8 = var_ch;\n    if ((var_f4h != 0) && (arg_14h = NULL,  var_ch != 0)) {\n        puVar4 = arg_10h + var_ch * 4 + -4;\n        do {\n            if (*(&fcn.00c09e38::var_e4h + arg_14h * 4 + 2) == 2) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar4);\n                iVar1 = *(&fcn.00c09e38::var_e4h + arg_14h);\n                *puVar4 = iVar1;\n                if (iVar1 == 0x4008) {\n                    var_34h = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(0xc1f910);\n                    puVar4[2] = &fcn.00c09e38::var_34h;\n                }\n                uVar8 = var_ch;\n                if (*(*(*(arg_18h + 4) + arg_14h * 4) + 0xc) != 6) {\n                    puVar4[2] = puVar4;\n                }\n            }\n            arg_14h = arg_14h + 1;\n            puVar4 = puVar4 + -4;\n        } while (arg_14h < uVar8);\n    }\n    var_2ch = arg_10h;\n    if ((arg_8h & 0xc) != 0) {\n        var_28h = &fcn.00c09e38::var_30h;\n        var_20h = 1;\n    }\n    var_24h = uVar8;\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&fcn.00c09e38::pvargDest);\n    fcn.00bb3020(&fcn.00c09e38::var_64h, 0, 0x20);\n    if (var_5h == '\\0') {\n        puVar10 = &fcn.00c09e38::pvargDest;\n    }\n    else {\n        puVar10 = NULL;\n    }\n    iVar9 = (**(*var_14h + 0x18))\n                      (var_14h, var_10h, 0xc22c2c, 0x800, arg_8h, &fcn.00c09e38::var_2ch, puVar10, \n                       &fcn.00c09e38::var_64h, &fcn.00c09e38::var_1ch);\n    if (iVar9 == -0x7ffdfffd) {\n        if (var_20h == 1) {\n            iVar9 = (**(*var_14h + 0x18))\n                              (var_14h, var_10h, 0xc22c2c, 0x800, (arg_8h == 4) * '\\x04' + '\\x04', \n                               &fcn.00c09e38::var_2ch, 0, &fcn.00c09e38::var_64h, &fcn.00c09e38::var_1ch);\n            goto code_r0x00c0a103;\n        }\ncode_r0x00c0a11a:\n        puVar10 = NULL;\n    }\n    else {\ncode_r0x00c0a103:\n        if (-1 < iVar9) {\n            fcn.00be6aa3(0, 0);\n            fcn.00bf7804(0xc0a149);\n            uVar8 = 0;\n            if (var_ch != 0) {\n                puVar4 = arg_10h + var_ch * 4 + -4;\n                do {\n                    if ((*(*(*(arg_18h + 4) + uVar8 * 4) + 0xc) == 6) &&\n                       ((var_f4h == 0 ||\n                        ((*(&fcn.00c09e38::var_e4h + uVar8) != 0x4024 &&\n                         ((((*(&fcn.00c09e38::var_e4h + uVar8 * 4 + 2) & 2) != 0 ||\n                           ((*(&fcn.00c09e38::var_e4h + uVar8) & 0x4000) != 0)) || (*puVar4 == 8)))))))) {\n                        fcn.00bf7804(puVar4);\n                    }\n                    uVar8 = uVar8 + 1;\n                    puVar4 = puVar4 + -4;\n                } while (uVar8 < var_ch);\n            }\n            goto code_r0x00c0a1bc;\n        }\n        if (iVar9 != -0x7ffdfff7) goto code_r0x00c0a11a;\n        puVar10 = &fcn.00c09e38::var_64h;\n        iVar9 = -0x7ffdfff7;\n    }\n    uVar5 = fcn.00c096db(iVar9, puVar10, 0, 1);\ncode_r0x00c0a1bc:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&fcn.00c09e38::pvargDest);\n    if (arg_10h == NULL) {\n        return uVar5;\n    }\n    fcn.00bedf93(extraout_ECX);\n    return uVar5;\n}\n",
        "token_count": 2308
    },
    "00c0a5ee": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0a5ee(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    uint *puVar1;\n    char cVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h_01;\n    uint uVar6;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint lpsz;\n    uint cchLength;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uVar6 = 0;\n    var_20h = 0xc1fb84;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 0;\n    if (*(arg_8h + 8) == 1) {\n        ppiVar3 = **(arg_8h + 4);\n        if (ppiVar3[3] == 0x6) {\n            ppiVar3 = *ppiVar3;\n        }\n        if ((ppiVar3[3] == 0x5) && (arg_8h_00 = *ppiVar3,  *(*arg_8h_00 + 0x10c) == 1)) {\n            iVar4 = fcn.00b98ea0(arg_8h_00, 1, 1);\n            fcn.00b99997();\n            puVar1 = *(iVar4 + 8);\n            lpsz = *puVar1;\n            cchLength = puVar1[1];\n            var_8h = puVar1[2];\n            var_4h = puVar1[3];\n            *var_4h = *var_4h + 1;\n            fcn.00b97faf();\n            (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n            cVar2 = fcn.00bb0d27();\n            if (cVar2 != '\\0') {\n                iVar4 = 1;\n                while( true ) {\n                    iVar5 = fcn.00b98e6b(1);\n                    if (iVar5 <= iVar4) break;\n                    arg_8h_01 = fcn.00b98ea0(arg_8h_00, 2, 1);\n                    fcn.00be6665(arg_8h_01);\n                    iVar4 = iVar4 + 1;\n                }\n                *arg_ch = var_18h;\n                fcn.00bece84(&var_20h);\n                fcn.00b95a64();\n                goto code_r0x00c0a6e8;\n            }\n            fcn.00b95a64();\n        }\n    }\n    uVar6 = 0xffffffff;\ncode_r0x00c0a6e8:\n    fcn.00be66f4();\n    return uVar6;\n}\n",
        "token_count": 663
    },
    "00c0b025": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00c0b025(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_8h;\n    int32_t iVar5;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_38h;\n    uint var_28h;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    var_4h._0_1_ = '\\0';\n    var_4h._1_1_ = '\\0';\n    var_4h._2_1_ = '\\0';\n    var_4h._3_1_ = '\\0';\n    var_10h = 1;\n    fcn.00bafeac();\n    var_48h = 4;\n    var_44h = *arg_ch + -1;\n    var_14h = var_40h;\n    var_18h = var_44h;\ncode_r0x00c0b065:\n    do {\n        iVar5 = *arg_ch;\n        *arg_ch = iVar5 + 1;\n        var_ch = fcn.00b971c8(iVar5);\n        if (var_ch == 0) break;\n        if (var_4h._2_1_ != '\\0') goto code_r0x00c0b161;\n        *(in_ECX + 0xf4) = extraout_ECX + -1;\n        piVar1 = **(var_ch + 4);\n        if (*(piVar1 + 2) == 0) {\n            iVar5 = *piVar1;\n            if (iVar5 == 0x14) {\ncode_r0x00c0b143:\n                iVar4 = iVar4 + 1;\n                goto code_r0x00c0b065;\n            }\n            if (iVar5 == 0x15) {\n                if ((iVar4 == 0) && (var_4h._1_1_ == '\\0')) {\n                    piVar1 = (*(var_ch + 4))[1];\n                    var_4h._0_1_ = '\\x01';\n                    var_8h = 1;\n                    if ((*(piVar1 + 2) == 0) && (*piVar1 == 6)) {\n                        iVar5 = 2;\n                        var_4h._3_1_ = '\\x01';\n                        iVar3 = 2;\n                    }\n                    else {\n                        iVar5 = &var_4h + 3;\n                        iVar2 = fcn.00b99f6b(var_ch, &var_8h, iVar5);\n                        iVar3 = var_8h;\n                        if (iVar2 < 0) goto code_r0x00c0b19e;\n                    }\n                    if (*(*(*(var_ch + 4) + iVar3 * 4) + 8) != 0x7f) {\n                        arg_8h = 0x72;\n                        goto code_r0x00c0b197;\n                    }\n                    if (var_4h._3_1_ != '\\0') {\n                        var_10h = *arg_ch;\n                        var_4h._1_1_ = '\\x01';\n                    }\n                }\n                goto code_r0x00c0b065;\n            }\n            if (iVar5 == 0x16) {\n                if (iVar4 == 0) {\n                    var_40h = *arg_ch + -1;\n                    var_4h._2_1_ = '\\x01';\n                    var_14h = var_40h;\n                    goto code_r0x00c0b065;\n                }\n            }\n            else {\n                if (iVar5 == 0x17) goto code_r0x00c0b143;\n                if (iVar5 != 0x18) goto code_r0x00c0b065;\n            }\n            iVar4 = iVar4 + -1;\n        }\n    } while( true );\n    if (var_4h._2_1_ != '\\0') {\ncode_r0x00c0b161:\n        if (var_4h != '\\0') {\n            fcn.00bafe26(&var_48h);\n            iVar4 = var_10h;\n            if (var_4h._1_1_ == '\\0') {\n                iVar4 = var_14h;\n            }\n            *arg_ch = iVar4;\n            goto code_r0x00c0b19e;\n        }\n    }\n    iVar5 = -1;\n    *(in_ECX + 0xf4) = var_18h;\n    arg_8h = 0xa0;\ncode_r0x00c0b197:\n    fcn.00bfa0b5(arg_8h, iVar5);\ncode_r0x00c0b19e:\n    fcn.00b99a20();\n    fcn.00b99a20();\n    return;\n}\n",
        "token_count": 1177
    },
    "00c0b522": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00c0b522(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t in_stack_ffffff64;\n    uint *in_stack_ffffff68;\n    uint var_78h;\n    int32_t var_74h;\n    int32_t var_70h;\n    uint var_68h;\n    uint var_58h;\n    uint var_48h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_3h;\n    \n    var_3h._0_1_ = '\\0';\n    var_3h._1_1_ = '\\0';\n    var_14h = 1;\n    var_10h = 1;\n    var_3h._2_1_ = '\\0';\n    fcn.00bafeac();\n    var_28h = 0;\n    var_1ch = 1;\n    var_2ch = 1;\n    var_3ch = 1;\n    var_20h = 0;\n    var_38h = 0;\n    var_30h = 0;\n    var_48h = 0;\n    var_40h = 0;\n    var_78h = 5;\n    if (*(*(*(arg_8h + 4) + 4) + 8) == 0x7f) {\ncode_r0x00c0b77c:\n        fcn.00bfa0b5(in_stack_ffffff64, in_stack_ffffff68);\n    }\n    else {\n        var_74h = *arg_ch + -1;\n        in_stack_ffffff68 = &var_14h;\n        var_18h = var_74h;\n        iVar4 = fcn.00b9a000(arg_8h, in_stack_ffffff68, &var_28h, 0xffffffff);\n        if (-1 < iVar4) {\n            var_ch = 0;\n            iVar4 = var_ch;\ncode_r0x00c0b5ba:\n            do {\n                do {\n                    in_stack_ffffff64 = *arg_ch;\n                    *arg_ch = in_stack_ffffff64 + 1;\n                    uVar6 = fcn.00b971c8(in_stack_ffffff64);\n                    arg_8h_00 = uVar6;\n                    if (arg_8h_00 == 0) {\ncode_r0x00c0b76c:\n                        *(in_ECX + 0xf4) = var_18h;\n                        goto code_r0x00c0b77c;\n                    }\n                    *(in_ECX + 0xf4) = (uVar6 >> 0x20) + -1;\n                    ppiVar1 = *(arg_8h_00 + 4);\n                } while (*(*ppiVar1 + 2) != 0);\n                iVar5 = **ppiVar1;\n                if (iVar5 != 0x14) {\n                    if (iVar5 == 0x15) {\n                        if ((iVar4 == 0) && (var_3h._1_1_ == '\\0')) {\n                            var_3h._0_1_ = '\\x01';\n                            var_8h = 1;\n                            if ((*(ppiVar1[1] + 2) == 0) && (*ppiVar1[1] == 6)) {\n                                var_3h._2_1_ = '\\x01';\n                                var_8h = 2;\n                                if (*(ppiVar1[2] + 2) != 0x7f) goto code_r0x00c0b77c;\n                            }\n                            if (var_3h._2_1_ == '\\0') {\n                                do {\n                                    in_stack_ffffff64 = arg_8h_00;\n                                    iVar4 = fcn.00b9a000(arg_8h_00, &var_8h, &var_38h, 0xffffffff);\n                                    iVar5 = var_8h;\n                                    if (iVar4 < 0) goto code_r0x00c0b783;\n                                    piVar2 = *(*(arg_8h_00 + 4) + var_8h * 4);\n                                    if ((*(piVar2 + 2) == 0) && (*piVar2 == 0xf)) {\n                                        var_8h = var_8h + 1;\n                                        in_stack_ffffff68 = &var_8h;\n                                        in_stack_ffffff64 = arg_8h_00;\n                                        iVar4 = fcn.00b9a000(arg_8h_00, in_stack_ffffff68, &var_48h, 0xffffffff);\n                                        if (iVar4 < 0) goto code_r0x00c0b783;\n                                        cVar3 = fcn.00bb0740();\n                                        iVar5 = var_8h;\n                                        if (cVar3 != '\\0') {\n                                            cVar3 = fcn.00bf7939();\n                                            iVar4 = var_ch;\n                                            iVar5 = var_8h;\n                                            goto joined_r0x00c0b6d8;\n                                        }\n                                    }\n                                    else {\n                                        cVar3 = fcn.00b98bd8();\n                                        iVar4 = var_ch;\njoined_r0x00c0b6d8:\n                                        var_ch = iVar4;\n                                        if (cVar3 != '\\0') {\n                                            var_3h._2_1_ = '\\x01';\n                                            break;\n                                        }\n                                    }\n                                    if (*(*(*(arg_8h_00 + 4) + iVar5 * 4) + 8) != 0x40) goto code_r0x00c0b6f0;\n                                    var_8h = iVar5 + 1;\n                                } while( true );\n                            }\n                            var_3h._1_1_ = '\\x01';\n                            var_10h = *arg_ch;\n                        }\n                        goto code_r0x00c0b5ba;\n                    }\n                    if (iVar5 != 0x16) {\n                        if (iVar5 == 0x17) goto code_r0x00c0b71f;\n                        if (iVar5 != 0x18) goto code_r0x00c0b5ba;\n                        if (iVar4 == 0) {\n                            iVar4 = *arg_ch + -1;\n                            var_70h = iVar4;\n                            if (var_3h == '\\0') goto code_r0x00c0b76c;\n                            fcn.00bafe26(&var_78h);\n                            if (var_3h._1_1_ == '\\0') {\n                                *arg_ch = iVar4;\n                            }\n                            else {\n                                *arg_ch = var_10h;\n                            }\n                            break;\n                        }\n                    }\n                    var_ch = iVar4 + -1;\n                    iVar4 = var_ch;\n                    goto code_r0x00c0b5ba;\n                }\ncode_r0x00c0b71f:\n                var_ch = iVar4 + 1;\n                iVar4 = var_ch;\n            } while( true );\n        }\n    }\ncode_r0x00c0b783:\n    fcn.00b99a20();\n    fcn.00b99a20();\n    fcn.00b99a20();\n    fcn.00b99a20();\n    fcn.00b99a20();\n    return;\ncode_r0x00c0b6f0:\n    iVar4 = var_ch;\n    if (*(*(*(arg_8h_00 + 4) + iVar5 * 4) + 8) != 0x7f) goto code_r0x00c0b77c;\n    goto code_r0x00c0b5ba;\n}\n",
        "token_count": 1860
    },
    "00c0ec12": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0ec12(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = **(arg_8h + 4);\n    if (puVar1[3] == 6) {\n        puVar1 = *puVar1;\n    }\n    if (puVar1[3] != 0xc) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "00c13706": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c13706(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar2 = fcn.00c135ca(arg_8h);\n    if (cVar2 == '\\0') {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        uVar1 = *(arg_8h + 8);\n        var_4h = 0xffffffff;\n        arg_8h_00 = 1;\n        arg_8h = 0xffffffff;\n        var_8h = 1;\n        if (6 < uVar1) {\n            arg_8h = fcn.00b99c9c();\n        }\n        if (5 < uVar1) {\n            var_4h = fcn.00b99c9c();\n        }\n        if (4 < uVar1) {\n            var_8h = fcn.00b99c9c();\n        }\n        iVar3 = arg_8h_00;\n        if (3 < uVar1) {\n            fcn.00b99997();\n            iVar3 = fcn.00bf4e10();\n        }\n        if (iVar3 == 1) {\n            arg_8h_00 = 0;\n        }\n        else if (iVar3 == 2) {\n            arg_8h_00 = 2;\n        }\n        else if (iVar3 != 3) {\n            fcn.00b99a20();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n            return 0;\n        }\n        fcn.00be8f01(arg_8h_00, var_8h, var_4h, arg_8h);\n        fcn.00bf54e6();\n    }\n    return 0;\n}\n",
        "token_count": 463
    },
    "00c14069": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c14069(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    int32_t arg_ch_00;\n    uint *puVar5;\n    uint uStack56;\n    uint uStack52;\n    int32_t *piStack48;\n    uchar auStack40 [36];\n    \n    cVar1 = fcn.00c135ca(arg_8h);\n    if (cVar1 == '\\0') {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.00be6aa3(1, 0);\n        return 0;\n    }\n    fcn.00b977c7();\n    iVar3 = *(*(arg_8h + 4) + 0xc);\n    fcn.00b99997();\n    puVar5 = *(iVar3 + 8);\n    uVar4 = *puVar5;\n    uStack56 = puVar5[1];\n    uStack52 = puVar5[2];\n    piStack48 = puVar5[3];\n    *piStack48 = *piStack48 + 1;\n    fcn.00b97faf();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(uVar4, uStack56);\n    fcn.00b99f3a(0xc1f910);\n    while (*(arg_8h + 8) < 6) {\n        fcn.00be6665(auStack40);\n    }\n    puVar5 = *(in_ECX + 0x2fc);\n    cVar1 = fcn.00bb0d27();\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00bb0d27();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00bb0d27();\n            if (cVar1 != '\\0') {\n                puVar5 = &uStack56;\n                uVar4 = fcn.00b99c9c();\n                uVar2 = fcn.00b99c9c();\n                fcn.00be98e1(uVar2, uVar4, puVar5);\ncode_r0x00c14317:\n                fcn.00b99b9c(&uStack52);\n                goto code_r0x00c143c6;\n            }\n            cVar1 = fcn.00bb0d27();\n            if (cVar1 != '\\0') {\n                uVar4 = 0x1032;\n                goto code_r0x00c141b4;\n            }\n            cVar1 = fcn.00bb0d27();\n            if (cVar1 != '\\0') {\n                uVar4 = fcn.00b99c9c();\n                iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(*puVar5, 0x102c, uVar4, 2);\n                if (iVar3 == 0) {\n                    fcn.00b99a20();\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                }\n                else {\n                    fcn.00b99a20();\n                    arg_ch[3] = 1;\n                    *arg_ch = 1;\n                }\n                goto code_r0x00c143c6;\n            }\n            cVar1 = fcn.00bb0d27();\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.00bb0d27();\n                if (cVar1 == '\\0') {\n                    cVar1 = fcn.00bb0d27();\n                    if (cVar1 != '\\0') {\n                        arg_ch_00 = fcn.00b99c9c();\n                        iVar3 = fcn.00b99c9c();\n                        if (iVar3 == 0) {\n                            iVar3 = arg_ch_00;\n                        }\n                        goto code_r0x00c14282;\n                    }\n                    cVar1 = fcn.00bb0d27();\n                    if (cVar1 != '\\0') {\n                        fcn.00be9a1e();\n                        goto code_r0x00c143c6;\n                    }\n                    cVar1 = fcn.00bb0d27();\n                    if (cVar1 == '\\0') {\n                        cVar1 = fcn.00bb0d27();\n                        if (cVar1 == '\\0') {\n                            cVar1 = fcn.00bb0d27();\n                            if (cVar1 == '\\0') {\n                                cVar1 = fcn.00bb0d27();\n                                if (cVar1 == '\\0') {\n                                    fcn.00b99a20();\n                                    *arg_ch = 0;\n                                    arg_ch[3] = 1;\n                                    fcn.00be6aa3(1, 0);\n                                }\n                                else {\n                                    iVar3 = *(*(arg_8h + 4) + 0x10);\n                                    fcn.00b99997();\n                                    fcn.00be9645(*(iVar3 + 8));\n                                }\n                                goto code_r0x00c143c6;\n                            }\n                            iVar3 = *(*(arg_8h + 4) + 0x10);\n                            fcn.00b99997();\n                            uVar4 = *(iVar3 + 8);\n                            uVar2 = fcn.00b99c9c();\n                            uVar4 = fcn.00be9707(uVar4, uVar2);\n                            goto code_r0x00c1435e;\n                        }\n                        iVar3 = fcn.00b99c9c();\n                        fcn.00be97e9(iVar3 != 0, &uStack56);\n                        goto code_r0x00c14317;\n                    }\n                    arg_ch_00 = fcn.00b99c9c();\n                    iVar3 = fcn.00b99c9c();\n                    if (iVar3 == 0) {\n                        iVar3 = arg_ch_00;\n                    }\n                }\n                else {\n                    arg_ch_00 = -1;\n                    iVar3 = -1;\n                }\n                uVar4 = 0;\n            }\n            else {\n                arg_ch_00 = -1;\n                iVar3 = -1;\ncode_r0x00c14282:\n                uVar4 = 1;\n            }\n            fcn.00be9989(uVar4, arg_ch_00, iVar3);\n            goto code_r0x00c143c6;\n        }\n        uVar4 = fcn.00be98bf();\n    }\n    else {\n        uVar4 = 0x1004;\ncode_r0x00c141b4:\n        uVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*puVar5, uVar4, 0, 0);\n    }\ncode_r0x00c1435e:\n    fcn.00b99a20();\n    arg_ch[3] = 1;\n    *arg_ch = uVar4;\ncode_r0x00c143c6:\n    fcn.00b99a20();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1613
    },
    "00c143ec": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c143ec(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 8);\n    cVar2 = fcn.00c135ca(arg_8h);\n    if ((cVar2 == '\\0') || (cVar2 = fcn.00beaf6a(&var_14h, 1),  cVar2 == '\\0')) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        if (uVar1 < 6) {\n            var_ch = var_ch - var_14h;\n        }\n        else {\n            var_ch = fcn.00b99c9c();\n        }\n        if (uVar1 < 7) {\n            var_8h = var_8h - var_10h;\n        }\n        else {\n            var_8h = fcn.00b99c9c();\n        }\n        cVar2 = fcn.00b99dae(0x29);\n        if (cVar2 == '\\0') {\n            var_14h = fcn.00b99c9c();\n        }\n        cVar2 = fcn.00b99dae(0x29);\n        if (cVar2 == '\\0') {\n            var_10h = fcn.00b99c9c();\n        }\n        fcn.00beb122(var_14h, var_10h, var_ch, var_8h);\n    }\n    return 0;\n}\n",
        "token_count": 406
    },
    "00c14619": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c14619(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint unaff_EDI;\n    uint uVar6;\n    uchar auStack64 [4];\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t *piStack48;\n    uchar auStack40 [36];\n    \n    cVar2 = fcn.00c135ca(arg_8h);\n    if (cVar2 == '\\0') {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.00be6aa3(1, 0);\n        return 0;\n    }\n    fcn.00b977c7();\n    iVar5 = *(*(arg_8h + 4) + 0xc);\n    fcn.00b99997();\n    puVar1 = *(iVar5 + 8);\n    uStack60 = *puVar1;\n    uStack56 = puVar1[1];\n    uStack52 = puVar1[2];\n    piStack48 = puVar1[3];\n    *piStack48 = *piStack48 + 1;\n    fcn.00b97faf();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(uStack60, uStack56);\n    fcn.00b99f3a(0xc1f910);\n    while (cVar2 = unaff_EDI >> 0x18,  *(arg_8h + 8) < 6) {\n        fcn.00be6665(auStack40);\n    }\n    puVar1 = *(in_ECX + 0x2fc);\n    cVar3 = fcn.00bb0d27();\n    if (cVar3 != '\\0') {\n        uVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*puVar1, 0x1105, 0, 0);\n        goto code_r0x00c146fc;\n    }\n    cVar3 = fcn.00bb0d27();\n    if (cVar3 == '\\0') {\n        cVar3 = fcn.00bb0d27();\n        if (cVar3 == '\\0') {\n            cVar3 = fcn.00bb0d27();\n            if (cVar3 != '\\0') {\n                iVar5 = *(*(arg_8h + 4) + 0x10);\n                fcn.00b99997();\n                iVar5 = fcn.00be9e2e(*(iVar5 + 8));\n                fcn.00b99a20();\n                arg_ch[3] = 1;\n                *arg_ch = iVar5 != 0;\n                goto code_r0x00c1492f;\n            }\n            cVar3 = fcn.00bb0d27();\n            if (cVar3 == '\\0') {\n                cVar3 = fcn.00bb0d27();\n                if (cVar3 != '\\0') {\n                    iVar5 = *(*(arg_8h + 4) + 0x10);\n                    fcn.00b99997();\n                    uVar4 = fcn.00be9f21(*(iVar5 + 8));\ncode_r0x00c146fc:\n                    fcn.00b99a20();\n                    arg_ch[3] = 1;\n                    *arg_ch = uVar4;\n                    goto code_r0x00c1492f;\n                }\n                cVar3 = fcn.00bb0d27();\n                if (cVar3 == '\\0') {\n                    cVar3 = fcn.00bb0d27();\n                    if (cVar3 == '\\0') {\n                        cVar3 = fcn.00bb0d27();\n                        if (cVar3 == '\\0') {\n                            cVar3 = fcn.00bb0d27();\n                            if (cVar3 == '\\0') {\n                                cVar3 = fcn.00bb0d27();\n                                if (cVar3 != '\\0') {\n                                    iVar5 = *(*(arg_8h + 4) + 0x10);\n                                    fcn.00b99997();\n                                    uVar6 = 0;\n                                    goto code_r0x00c148f3;\n                                }\n                                fcn.00b99a20();\n                                *arg_ch = 0;\n                                arg_ch[3] = 1;\n                            }\n                            else {\n                                iVar5 = *(*(arg_8h + 4) + 0x10);\n                                fcn.00b99997();\n                                cVar2 = fcn.00bea327(*(iVar5 + 8));\n                            }\n                            goto code_r0x00c14917;\n                        }\n                        iVar5 = *(*(arg_8h + 4) + 0x10);\n                        fcn.00b99997();\n                        uVar4 = fcn.00bea2f9(*(iVar5 + 8));\n                        goto code_r0x00c146fc;\n                    }\n                    iVar5 = *(*(arg_8h + 4) + 0x10);\n                    fcn.00b99997();\n                    fcn.00bea1fe(*(iVar5 + 8), &uStack56);\n                }\n                else {\n                    uVar4 = fcn.00b99c53();\n                    fcn.00bea1a8(&uStack56, uVar4 & 0xff);\n                }\n                fcn.00b99b9c(auStack64);\n                goto code_r0x00c14917;\n            }\n            iVar5 = *(*(arg_8h + 4) + 0x10);\n            fcn.00b99997();\n            uVar6 = 1;\n        }\n        else {\n            iVar5 = *(*(arg_8h + 4) + 0x10);\n            fcn.00b99997();\n            uVar6 = 0;\n        }\n        cVar2 = fcn.00be9c98(*(iVar5 + 8), uVar6);\n    }\n    else {\n        iVar5 = *(*(arg_8h + 4) + 0x10);\n        fcn.00b99997();\n        uVar6 = 1;\ncode_r0x00c148f3:\n        cVar2 = fcn.00be9c21(*(iVar5 + 8), uVar6);\n    }\ncode_r0x00c14917:\n    if (cVar2 == '\\0') {\n        fcn.00be6aa3(1, 0);\n    }\ncode_r0x00c1492f:\n    fcn.00b99a20();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1534
    },
    "00c14b16": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c14b16(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    uchar *puVar8;\n    uchar *puVar9;\n    int32_t unaff_EBX;\n    code *pcVar10;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint uVar11;\n    int32_t iVar12;\n    uchar *puStack188;\n    int32_t in_stack_ffffff4c;\n    uchar *puVar13;\n    uint32_t uStack156;\n    uchar *puStack144;\n    char cStack140;\n    uchar auStack136 [4];\n    uint uStack132;\n    uint uStack128;\n    uchar auStack120 [16];\n    uchar auStack104 [4];\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    \n    puStack144 = NULL;\n    uVar2 = *(arg_8h + 8);\n    uStack132 = 0;\n    cStack140 = '\\0';\n    auStack136[0] = 0;\n    if (3 < uVar2) {\n        in_stack_ffffff4c = 0x29;\n        cVar1 = fcn.00b99dae(0x29);\n        if (cVar1 == '\\0') {\n            fcn.00b99997();\n        }\n    }\n    uStack156 = uVar2;\n    if (4 < uVar2) {\n        uStack156 = *(*(arg_8h + 4) + 0x10);\n        puStack188 = 0xc14b91;\n        cVar1 = fcn.00b99dae(0x29);\n        if (cVar1 == '\\0') {\n            puStack188 = 0xc14b9e;\n            cStack140 = fcn.00b99c9c();\n        }\n    }\n    if (5 < uVar2) {\n        puStack188 = 0xc14bb6;\n        cVar1 = fcn.00b99dae(0x29);\n        if (cVar1 == '\\0') {\n            puStack188 = 0xc14bc1;\n            fcn.00b99c9c();\n            puStack188 = 0xc14bd5;\n            uVar2 = fcn.00b99c9c();\n            puStack144 = uVar2 & 0xffffff00 | uVar2 >> 1 & 1;\n            puStack188 = 0xc14beb;\n            uVar2 = fcn.00b99c9c();\n            uStack156._0_1_ = uVar2 >> 2 & 1;\n        }\n    }\n    uStack100 = 0x30;\n    uStack96 = 0x1a0;\n    if (cStack140 != '\\0') {\n        uStack96 = 0x1a2;\n    }\n    uStack92 = 0;\n    uStack68 = 0;\n    uStack88 = 0;\n    iVar12 = **(arg_8h + 4);\n    fcn.00b99997();\n    uStack64 = **(iVar12 + 8);\n    uStack72 = 0;\n    uStack76 = 0;\n    uStack80 = 0;\n    uStack84 = 0;\n    puVar4 = &stack0xffffff58;\n    puStack188 = 0xc14c57;\n    (*_sym.imp.USER32.dll_GetCursorPos)();\n    puVar8 = unaff_ESI + 0x10;\n    puStack188 = &stack0xffffff78;\n    unaff_EBX = unaff_EBX + 0x10;\n    uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar3);\n    puVar6 = puVar8;\n    if (0x1 < puVar8) {\n        puVar6 = *(*(arg_8h + 4) + 4);\n        cVar1 = fcn.00b99dae(0x29);\n        if (cVar1 == '\\0') {\n            puVar4 = fcn.00b99c9c();\n        }\n    }\n    if ((0x2 < puVar8) && (cVar1 = fcn.00b99dae(0x29),  cVar1 == '\\0')) {\n        in_stack_ffffff4c = fcn.00b99c9c();\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(*(in_ECX + 0xe8), 0xfffffff0);\n    if ((uVar2 & 0x40) != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(*(in_ECX + 0xe8));\n        *(in_ECX + 0xe8) = 0;\n    }\n    iVar12 = *(in_ECX + 0xe8);\n    if (iVar12 == 0) {\n        if (uStack156 == 0) {\n            uVar3 = 3;\n        }\n        else {\n            uVar3 = 0x43;\n        }\n        uVar3 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                          (8, L\"tooltips_class32\", 0, uVar3, 0x80000000, 0x80000000, 0x80000000, 0x80000000, 0, 0, 0, 0)\n        ;\n        pcVar10 = _sym.imp.USER32.dll_SendMessageW;\n        *(in_ECX + 0xe8) = uVar3;\n        (*pcVar10)(uVar3, 0x432, 0, &stack0xffffff58);\n        uVar3 = 0x418;\n        iVar12 = *(in_ECX + 0xe8);\n    }\n    else {\n        puStack144 = &stack0xffffff88;\n        uVar3 = 0x439;\n        pcVar10 = _sym.imp.USER32.dll_SendMessageW;\n    }\n    cVar1 = '\\0';\n    (*pcVar10)(iVar12, uVar3, 0, puStack144);\n    uVar11 = 0x421;\n    uVar3 = *(in_ECX + 0xe8);\n    puVar8 = puVar4;\n    puVar13 = puVar6;\n    iVar5 = (*pcVar10)(uVar3, 0x421, puVar6);\n    if (iVar5 == 0) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        (*pcVar10)(*(in_ECX + 0xe8), 0x41d, 0, 0);\n    }\n    iVar5 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(in_ECX + 0xe8));\n    if (iVar5 == 0) {\n        (*pcVar10)(*(in_ECX + 0xe8), 0x412, 0, 0xd8f0d8f0);\n        (*pcVar10)(*(in_ECX + 0xe8), 0x411, 1, &stack0xffffff54);\n    }\n    if (cVar1 != '\\0') {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0xe8), &stack0xffffff54);\n        iVar5 = 1 - in_stack_ffffff4c;\n        puVar6 = (unaff_EBX - unaff_EDI) + 1;\n        uVar3 = (*_sym.imp.USER32.dll_MonitorFromPoint)(uVar3, uVar11, 2);\n        uStack128 = 0x28;\n        iVar7 = (*_sym.imp.USER32.dll_GetMonitorInfoW)(uVar3, &stack0xffffff80);\n        if (iVar7 != 0) {\n            (*_sym.imp.USER32.dll_CopyRect)(&stack0xffffff44, &stack0xffffff98);\n        }\n        puVar9 = puStack188;\n        if ((puVar6 < puStack188) ||\n           (puVar9 = in_stack_ffffff4c - (puVar13 + iVar5),  in_stack_ffffff4c - (puVar13 + iVar5) < puVar6)) {\n            puVar6 = puVar9;\n        }\n        if ((puVar4 < puVar8) || (puVar8 = unaff_EDI - iVar12,  puVar8 < puVar4)) {\n            puVar4 = puVar8;\n        }\n    }\n    (*pcVar10)(*(in_ECX + 0xe8), 0x412, 0, puVar4 << 0x10 | puVar6 & 0xffff);\n    return 0;\n}\n",
        "token_count": 2045
    },
    "00c17f4c": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c17f4c(uint item, uint *arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_38h;\n    uint var_34h;\n    uint var_24h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    cVar2 = fcn.00b92402(item, &var_8h, &var_4h);\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    puVar1 = **(*0xc56824 + var_4h * 4);\n    uVar3 = *(puVar1 + 0x24);\n    if (uVar3 < 0x11) {\n        if ((uVar3 != 0x10) && (10 < uVar3)) {\n            if (uVar3 != 0xc) {\n                if (uVar3 != 0xe) {\n                    return 0;\n                }\n                var_38h = 0x30;\n                var_34h = 4;\n                iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(puVar1[3], item, 0, &var_38h);\n                if (iVar4 != 0) {\n                    *arg_ch = var_24h;\n                    return 1;\n                }\n                return 0;\n            }\n            uVar5 = puVar1[3];\n            goto code_r0x00c17fee;\n        }\n    }\n    else {\n        if (uVar3 == 0x11) {\n            uVar5 = puVar1[4];\n            goto code_r0x00c17fee;\n        }\n        if (uVar3 < 0x12) {\n            return 0;\n        }\n        if ((0x13 < uVar3) && (6 < uVar3 - 0x16)) {\n            return 0;\n        }\n    }\n    uVar5 = *puVar1;\ncode_r0x00c17fee:\n    *arg_ch = uVar5;\n    return 1;\n}\n",
        "token_count": 479
    },
    "00c1b60b": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00c1b60b(int32_t nIDButton, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint *arg_8h;\n    int32_t **ppiVar2;\n    int32_t *arg_8h_00;\n    uint32_t uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint *in_stack_ffffffb0;\n    int32_t in_stack_ffffffb4;\n    uint in_stack_ffffffb8;\n    uint arg_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar3 = fcn.00b92402(nIDButton, &fcn.00c1b60b::var_ch, &fcn.00c1b60b::var_10h);\n    if (uVar3 == '\\0') {\n        return uVar3;\n    }\n    arg_8h = **(*0xc56810 + var_ch * 4);\n    ppiVar2 = *(*0xc56824 + var_10h * 4);\n    arg_8h_00 = *ppiVar2;\n    var_1h._0_1_ = *(arg_8h_00 + 0x24);\n    uVar3 = ppiVar2 & 0xffffff00;\n    if (((((arg_ch == 6) && (var_1h == 0x18)) || ((arg_ch == 4 && (var_1h == 1)))) ||\n        (((arg_ch == 3 && (var_1h == 0)) || ((arg_ch == 0x100 && ((var_1h == 2 || (var_1h == 3)))))))) &&\n       (arg_8h[7] = var_10h,  arg_8h[0x73] != 0)) {\n        uVar3 = fcn.00bebf76(arg_8h_00);\n    }\n    if (((*(arg_8h + 0xe) == '\\0') ||\n        ((((arg_ch == 0 && (*arg_8h_00 != 0)) && (iVar4 = (*_sym.imp.USER32.dll_IsWindow)(*arg_8h_00),  iVar4 != 0)) &&\n         (uVar3 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*arg_8h_00),  uVar3 == 0)))) ||\n       ((uVar1 = *(**(*0xc56824 + var_10h * 4) + 0x93),  uVar1 != 0xff && (uVar3 = uVar1,  uVar3 != arg_8h[100])))) {\n        return uVar3 & 0xffffff00;\n    }\n    fcn.00b92344(arg_8h, 0);\n    var_8h = arg_8h[0x5d];\n    var_ch = arg_8h[0x5e];\n    if (0x1c < var_1h) goto code_r0x00c1b773;\n    // switch table (29 cases) at 0xc1b86f\n    switch(*(*(var_1h + 0xc1b88f) * 4 + 0xc1b86f)) {\n    case 0xc1b71e:\n        bVar5 = arg_ch == 1;\n        goto code_r0x00c1b721;\n    case 0xc1b723:\n        goto code_r0x00c1b723;\n    case 0xc1b739:\n        if (arg_ch == 0) goto code_r0x00c1b723;\n        if (arg_ch == 0x300) {\n            iVar4 = arg_8h[0x71];\n            if ((0 < iVar4) && (iVar4 != nIDButton)) {\n                arg_8h[0x71] = 0;\n                fcn.00c1631f(iVar4, arg_8h, *arg_8h_00, var_8h, var_ch);\n            }\n            arg_8h[0x71] = nIDButton;\n        }\n        else if (arg_ch == 0x200) {\n            if (*(arg_8h_00 + 0x24) == '\\x02') {\n                (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h_00, 0xb0, arg_8h + 0x6f, arg_8h + 0x70);\n            }\n            iVar4 = arg_8h[0x71];\n            if ((0 < iVar4) && (iVar4 == nIDButton)) {\n                arg_8h[0x71] = 0;\n                fcn.00c1631f(iVar4, arg_8h, *arg_8h_00, var_8h, var_ch);\n            }\n        }\n        break;\n    case 0xc1b803:\n        arg_18h = 0xc1b80f;\n        iVar4 = (*_sym.imp.USER32.dll_IsDlgButtonChecked)(*arg_8h, nIDButton);\n        if (iVar4 != 1) break;\n        goto code_r0x00c1b72b;\n    case 0xc1b827:\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(*arg_8h_00, 0xffffffec);\n        if ((uVar3 & 0x100000) != 0) {\n            (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0xa1, 2, 0);\n        }\n    case 0xc1b84f:\n        bVar5 = arg_ch == 0;\ncode_r0x00c1b721:\n        if (bVar5) goto code_r0x00c1b723;\n        break;\n    case 0xc1b856:\n        fcn.00c1b958(arg_8h, arg_ch);\n        goto code_r0x00c1b723;\n    }\ncode_r0x00c1b773:\n    arg_ch._3_1_ = 0;\ncode_r0x00c1b776:\n    uVar3 = **(*0xc56824 + var_10h * 4);\n    if (*(uVar3 + 0x50) != 0) {\n        uVar3 = (*_sym.imp.USER32.dll_SendMessageW)(*(uVar3 + 0x50), 0x41c, 0, 0);\n    }\n    return uVar3 & 0xffffff00 | arg_ch._3_1_;\ncode_r0x00c1b723:\n    in_stack_ffffffb4 = *arg_8h_00;\n    in_stack_ffffffb0 = arg_8h;\n    in_stack_ffffffb8 = var_8h;\n    arg_18h = var_ch;\ncode_r0x00c1b72b:\n    fcn.00c1631f(nIDButton, in_stack_ffffffb0, in_stack_ffffffb4, in_stack_ffffffb8, arg_18h);\n    arg_ch._3_1_ = 1;\n    goto code_r0x00c1b776;\n}\n",
        "token_count": 1636
    },
    "00c1de29": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00c1de29(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint32_t in_ECX;\n    uint in_EDX;\n    uint32_t uVar6;\n    bool bVar7;\n    \n    uVar4 = *((*(in_ECX / 0x80 + 0xc43b40) * 0x80 + in_ECX % 0x80) * 2 + 0xc35840);\n    // switch table (9 cases) at 0xc1dfbd\n    switch(in_EDX) {\n    case 1:\n        cVar1 = *(uVar4 * 8 + 0xc32f51);\n        if (((cVar1 == '\\t') || (cVar1 == '\\x05')) || (cVar1 == '\\b')) {\n            uVar4 = 1;\n        }\n        else {\n            uVar4 = 0;\n        }\n        goto code_r0x00c1de79;\n    case 2:\n        uVar6 = arg_8h == *(*(uVar4 * 8 + 0xc32f51) * 4 + 0xc489a0);\n        break;\n    case 3:\n        uVar2 = *(uVar4 * 8 + 0xc32f51);\n        goto code_r0x00c1deac;\n    case 4:\n        uVar2 = *(uVar4 * 8 + 0xc32f50);\ncode_r0x00c1deac:\n        bVar7 = arg_8h == uVar2;\ncode_r0x00c1deb1:\n        uVar4 = bVar7;\ncode_r0x00c1de79:\n        bVar7 = uVar4 == arg_ch;\n        goto code_r0x00c1de7e;\n    case 5:\n        uVar6 = 1;\n        iVar3 = *(*(uVar4 * 8 + 0xc32f51) * 4 + 0xc489a0);\n        if (iVar3 != 1) {\n            bVar7 = iVar3 == 3;\ncode_r0x00c1ded9:\n            uVar6 = 1;\n            if (!bVar7) {\n                uVar6 = 0;\n            }\n        }\n        break;\n    case 6:\n    case 7:\n        if (in_ECX < 0x180f) {\n            if (in_ECX == 0x180e) {\n                return arg_ch;\n            }\n            if (8 < in_ECX) {\n                if (in_ECX < 0xe) {\n                    return arg_ch;\n                }\n                if (in_ECX == 0x20) {\n                    return arg_ch;\n                }\n                if (in_ECX == 0x85) {\n                    return arg_ch;\n                }\n                if (in_ECX == 0xa0) {\n                    return arg_ch;\n                }\n                if (in_ECX == 0x1680) {\n                    return arg_ch;\n                }\n            }\n        }\n        else if (0x1fff < in_ECX) {\n            if (in_ECX < 0x200b) {\n                return arg_ch;\n            }\n            if (0x2027 < in_ECX) {\n                if (in_ECX < 0x202a) {\n                    return arg_ch;\n                }\n                if (in_ECX == 0x202f) {\n                    return arg_ch;\n                }\n                if (in_ECX == 0x205f) {\n                    return arg_ch;\n                }\n                if (in_ECX == 0x3000) {\n                    return arg_ch;\n                }\n            }\n        }\n        bVar7 = *(*(uVar4 * 8 + 0xc32f51) * 4 + 0xc489a0) == 6;\n        goto code_r0x00c1deb1;\n    case 8:\n        uVar6 = 1;\n        iVar3 = *(*(uVar4 * 8 + 0xc32f51) * 4 + 0xc489a0);\n        if ((iVar3 != 1) && (iVar3 != 3)) {\n            bVar7 = in_ECX == 0x5f;\n            goto code_r0x00c1ded9;\n        }\n        break;\n    case 9:\n        puVar5 = *(uVar4 * 8 + 0xc32f53) * 4 + 0xc345d0;\n        while (uVar4 = *puVar5,  uVar4 <= in_ECX) {\n            puVar5 = puVar5 + 1;\n            if (in_ECX == uVar4) {\n                return arg_ch;\n            }\n        }\n        bVar7 = arg_ch == 0;\n        goto code_r0x00c1de7e;\n    default:\n        return 0;\n    }\n    bVar7 = uVar6 == arg_ch;\ncode_r0x00c1de7e:\n    return bVar7;\n}\n",
        "token_count": 1140
    },
    "00c1eae6": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint16_t __cdecl fcn.00c1eae6(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    uint32_t in_ECX;\n    uint32_t uVar6;\n    uint16_t *in_EDX;\n    uint32_t uVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    bool bVar10;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = *in_EDX;\n    if (in_ECX < 0x100) {\n        if ((uVar3 & 4) == 0) {\n            if ((uVar3 & 2) == 0) {\n                return uVar3 & 1;\n            }\n            return (*((in_ECX >> 3) + 2 + in_EDX) & '\\x01' << (in_ECX & 7)) != 0;\n        }\n        if (((uVar3 & 2) != 0) && ((*((in_ECX >> 3) + 2 + in_EDX) & 1 << (in_ECX & 7)) != 0)) {\ncode_r0x00c1eb40:\n            return (uVar3 & 1) == 0;\n        }\n    }\n    puVar8 = in_EDX + 1;\n    if ((uVar3 & 2) != 0) {\n        puVar8 = in_EDX + 0x11;\n    }\n    uVar5 = *puVar8;\n    if (uVar5 != 0) {\n        do {\n            puVar9 = puVar8 + 1;\n            if (uVar5 == 1) {\n                uVar6 = *puVar9;\n                puVar9 = puVar8 + 2;\n                if ((arg_8h != 0) && ((uVar6 & 0xfc00) == 0xd800)) {\n                    uVar6 = ((uVar6 & 0x3ff) << 10 | *puVar9 & 0x3ff) + 0x10000;\n                    puVar9 = puVar8 + 3;\n                }\n                if (in_ECX != uVar6) goto code_r0x00c1ee86;\n                goto code_r0x00c1eb40;\n            }\n            if (uVar5 == 2) {\n                uVar6 = *puVar9;\n                puVar9 = puVar8 + 2;\n                if (arg_8h == 0) {\n                    uVar7 = *puVar9;\ncode_r0x00c1ec48:\n                    puVar9 = puVar9 + 1;\n                }\n                else {\n                    if ((uVar6 & 0xfc00) == 0xd800) {\n                        uVar6 = ((uVar6 & 0x3ff) << 10 | *puVar9 & 0x3ff) + 0x10000;\n                        puVar9 = puVar8 + 3;\n                    }\n                    uVar7 = *puVar9;\n                    puVar9 = puVar9 + 1;\n                    if ((uVar7 & 0xfc00) == 0xd800) {\n                        uVar7 = ((uVar7 & 0x3ff) << 10 | *puVar9 & 0x3ff) + 0x10000;\n                        goto code_r0x00c1ec48;\n                    }\n                }\n                if ((in_ECX < uVar6) || (uVar7 < in_ECX)) goto code_r0x00c1ee86;\n                goto code_r0x00c1eb40;\n            }\n            uVar6 = *((*(in_ECX / 0x80 + 0xc43b40) * 0x80 + in_ECX % 0x80) * 2 + 0xc35840);\n    // switch table (14 cases) at 0xc1eef2\n            switch(*puVar9) {\n            case 0:\n                goto code_r0x00c1ec92;\n            case 1:\n                cVar1 = *(uVar6 * 8 + 0xc32f51);\n                if ((cVar1 != '\\t') && (cVar1 != '\\x05')) {\n                    bVar10 = cVar1 == '\\b';\ncode_r0x00c1eee5:\n                    if (!bVar10) goto code_r0x00c1eee7;\n                }\n                goto code_r0x00c1ee75;\n            case 2:\n                bVar10 = puVar8[2] == *(*(uVar6 * 8 + 0xc32f51) * 4 + 0xc489a0);\n                break;\n            case 3:\n                uVar2 = *(uVar6 * 8 + 0xc32f51);\n                goto code_r0x00c1ece4;\n            case 4:\n                uVar2 = *(uVar6 * 8 + 0xc32f50);\ncode_r0x00c1ece4:\n                bVar10 = puVar8[2] == uVar2;\n                break;\n            case 5:\n                iVar4 = *(*(uVar6 * 8 + 0xc32f51) * 4 + 0xc489a0);\n                if ((iVar4 != 1) && (iVar4 != 3)) goto code_r0x00c1eee7;\ncode_r0x00c1ed18:\n                bVar10 = true;\n                break;\n            case 6:\n            case 7:\n                if (in_ECX < 0x180f) {\n                    if (in_ECX != 0x180e) {\n                        if (in_ECX < 9) goto code_r0x00c1edb1;\n                        if (((0xd < in_ECX) && (in_ECX != 0x20)) && ((in_ECX != 0x85 && (in_ECX != 0xa0)))) {\n                            bVar10 = in_ECX == 0x1680;\ncode_r0x00c1edab:\n                            if (!bVar10) goto code_r0x00c1edb1;\n                        }\n                    }\n                }\n                else {\n                    if (in_ECX < 0x2000) {\ncode_r0x00c1edb1:\n                        bVar10 = *(*(uVar6 * 8 + 0xc32f51) * 4 + 0xc489a0) == 6;\n                        break;\n                    }\n                    if (0x200a < in_ECX) {\n                        if (in_ECX < 0x2028) goto code_r0x00c1edb1;\n                        if (((0x2029 < in_ECX) && (in_ECX != 0x202f)) && (in_ECX != 0x205f)) {\n                            bVar10 = in_ECX == 0x3000;\n                            goto code_r0x00c1edab;\n                        }\n                    }\n                }\ncode_r0x00c1ec92:\n                if (uVar5 != 3) goto code_r0x00c1ee80;\n                goto code_r0x00c1eb40;\n            case 8:\n                iVar4 = *(*(uVar6 * 8 + 0xc32f51) * 4 + 0xc489a0);\n                if (((iVar4 == 1) || (iVar4 == 3)) || (in_ECX == 0x5f)) goto code_r0x00c1ed18;\n                goto code_r0x00c1eee7;\n            default:\n                return 0;\n            case 10:\n                if (in_ECX < 0xa0) {\n                    if ((in_ECX != 0x24) && (in_ECX != 0x40)) {\n                        bVar10 = in_ECX == 0x60;\n                        goto code_r0x00c1eee5;\n                    }\n                    goto code_r0x00c1ee75;\n                }\n                bVar10 = 0x7ff < in_ECX - 0xd800;\n                break;\n            case 0xb:\n                uVar2 = *(uVar6 * 8 + 0xc32f51);\n                iVar4 = *(uVar2 * 4 + 0xc489a0);\n                if (iVar4 != 6) {\n                    if (iVar4 != 0) goto code_r0x00c1ee75;\n                    if ((uVar2 == 1) && (in_ECX != 0x61c)) {\n                        bVar10 = in_ECX == 0x180e;\ncode_r0x00c1ee5f:\n                        if ((!bVar10) && ((in_ECX < 0x2066 || (0x2069 < in_ECX)))) goto code_r0x00c1ee75;\n                    }\n                }\n                goto code_r0x00c1eee7;\n            case 0xc:\n                uVar2 = *(uVar6 * 8 + 0xc32f51);\n                if ((uVar2 != 0x1b) && (uVar2 != 0x1c)) {\n                    if (*(uVar2 * 4 + 0xc489a0) != 0) goto code_r0x00c1ee75;\n                    if (uVar2 == 1) {\n                        bVar10 = in_ECX == 0x61c;\n                        goto code_r0x00c1ee5f;\n                    }\n                }\ncode_r0x00c1eee7:\n                bVar10 = false;\n                break;\n            case 0xd:\n                iVar4 = *(*(uVar6 * 8 + 0xc32f51) * 4 + 0xc489a0);\n                if (iVar4 != 4) {\n                    if (in_ECX < 0x100) {\n                        bVar10 = iVar4 == 5;\n                        goto code_r0x00c1eee5;\n                    }\n                    goto code_r0x00c1eee7;\n                }\ncode_r0x00c1ee75:\n                bVar10 = true;\n            }\n            if (bVar10 == (uVar5 == 3)) goto code_r0x00c1eb40;\ncode_r0x00c1ee80:\n            puVar9 = puVar8 + 3;\ncode_r0x00c1ee86:\n            uVar5 = *puVar9;\n            puVar8 = puVar9;\n        } while (uVar5 != 0);\n    }\n    return uVar3 & 1;\n}\n",
        "token_count": 2369
    },
    "00b91db3": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00b91db3(uint *arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    int16_t iVar6;\n    uint *puVar7;\n    uint *puVar8;\n    int16_t iVar9;\n    int16_t iVar10;\n    int32_t iVar11;\n    int32_t lpRect;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t lpPoint;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    puVar8 = arg_ch;\n    puVar7 = arg_8h;\n    if (*(arg_8h + 0x3a) == '\\0') {\n        var_14h = *(arg_ch + 0x86);\n        (*_sym.imp.USER32.dll_GetClientRect)(*arg_8h, &lpRect);\n        var_8h = arg_8h[0x11];\n        iVar3 = arg_8h[0x12];\n        arg_10h = var_2ch;\n        arg_ch = var_28h;\n        if ((var_2ch == 0) && (arg_10h = 1,  var_8h != 0)) {\n            arg_10h = var_8h;\n        }\n        if ((var_28h == 0) && (arg_ch = 0x1,  iVar3 != 0)) {\n            arg_ch = iVar3;\n        }\n        piVar1 = arg_8h + 0x67;\n        arg_8h = iVar3;\n        if (*piVar1 != 0) {\n            iVar11 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xf);\n            arg_8h = iVar3 - iVar11;\n        }\n        (*_sym.imp.USER32.dll_GetWindowRect)(*puVar8, &lpRect);\n        var_ch = var_2ch - lpRect;\n        var_10h = var_28h - var_30h;\n        var_18h = var_30h;\n        lpPoint = lpRect;\n        (*_sym.imp.USER32.dll_ScreenToClient)(*puVar7, &lpPoint);\n        *(puVar8 + 0x22) = (lpPoint * var_8h) / arg_10h;\n        *(puVar8 + 0x8a) = (var_18h * arg_8h) / arg_ch;\n        *(puVar8 + 0x23) = (var_ch * var_8h) / arg_10h;\n        *(puVar8 + 0x8e) = (var_10h * arg_8h) / arg_ch;\n        if (var_14h != 0) {\n            iVar4 = lpPoint;\n            iVar9 = var_ch;\n            iVar5 = var_8h;\n            if (((var_14h & 0x100) != 0) && (*(puVar8 + 0x23) = iVar9,  (var_14h & 6) == 0)) {\n                if ((var_14h & 8) == 0) {\n                    if (arg_10h / 2 < lpPoint) {\n                        *(puVar8 + 0x22) = ((((lpPoint - arg_10h) + var_ch) * var_8h) / arg_10h - iVar9) + iVar5;\n                    }\n                }\n                else {\n                    *(puVar8 + 0x22) = iVar4 - (var_8h - arg_10h) / 2;\n                }\n            }\n            iVar6 = var_18h;\n            iVar10 = var_10h;\n            iVar2 = arg_8h;\n            if ((var_14h & 0x200) != 0) {\n                *(puVar8 + 0x8e) = iVar10;\n                if ((var_14h & 0x60) == 0) {\n                    if (var_14h < '\\0') {\n                        *(puVar8 + 0x8a) = iVar6 - (arg_8h - arg_ch) / 2;\n                    }\n                    else if (arg_ch / 2 < var_18h) {\n                        *(puVar8 + 0x8a) = ((((var_18h - arg_ch) + var_10h) * arg_8h) / arg_ch - iVar10) + iVar2;\n                    }\n                }\n            }\n            if ((var_14h & 2) != 0) {\n                *(puVar8 + 0x22) = iVar4;\n            }\n            if ((var_14h & 4) != 0) {\n                if ((var_14h & 2) == 0) {\n                    *(puVar8 + 0x22) = ((iVar4 - arg_10h) - *(puVar8 + 0x23)) + iVar5 + iVar9;\n                }\n                else {\n                    *(puVar8 + 0x23) = ((iVar4 - *(puVar8 + 0x22)) - arg_10h) + iVar5 + iVar9;\n                }\n            }\n            if ((var_14h & 0x20) != 0) {\n                *(puVar8 + 0x8a) = iVar6;\n            }\n            if ((var_14h & 0x40) != 0) {\n                if ((var_14h & 0x20) == 0) {\n                    *(puVar8 + 0x8a) = ((iVar6 - *(puVar8 + 0x8e)) - arg_ch) + iVar2 + iVar10;\n                }\n                else {\n                    *(puVar8 + 0x8e) = ((iVar6 - *(puVar8 + 0x8a)) - arg_ch) + iVar2 + iVar10;\n                }\n            }\n        }\n    }\n    else {\n        *(arg_ch + 0x22) = *(arg_8h + 0x16);\n        *(arg_ch + 0x8a) = *(arg_8h + 0x17);\n        if ((*(arg_ch + 0x24) != '\\a') || (arg_10h != '\\0')) {\n            *(arg_ch + 0x23) = *(arg_8h + 0x18);\n            *(arg_ch + 0x8e) = *(arg_8h + 0x19);\n        }\n        (*_sym.imp.USER32.dll_GetClientRect)(*arg_ch, &var_24h);\n        if (arg_8h[0x16] == -1) {\n            *(arg_ch + 0x22) = var_24h;\n        }\n        if (arg_8h[0x17] == -1) {\n            *(arg_ch + 0x8a) = var_20h;\n        }\n        (*_sym.imp.USER32.dll_GetWindowRect)(*arg_ch, &var_24h);\n        if (arg_8h[0x18] == -1) {\n            *(arg_ch + 0x23) = lpPoint - var_24h;\n        }\n        if ((arg_8h[0x19] == -1) || (*(arg_ch + 0x24) == '\\0')) {\n            *(arg_ch + 0x8e) = var_18h - var_20h;\n        }\n    }\n    return;\n}\n",
        "token_count": 1722
    },
    "00b946f9": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b946f9(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    uint16_t *puVar5;\n    uint *in_ECX;\n    int32_t in_EDX;\n    uint32_t arg_8h_00;\n    uint32_t uVar6;\n    uint var_58h;\n    uint var_48h;\n    uint var_38h;\n    uint var_28h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    \n    var_8h = in_EDX;\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    var_18h = *in_ECX;\n    var_14h = in_ECX[1];\n    var_10h = in_ECX[2];\n    var_ch = in_ECX[3];\n    *var_ch = *var_ch + 1;\n    iVar3 = fcn.00b97e2f(0xc1fac0);\n    if (iVar3 == -1) {\n        fcn.00b981a7(&var_18h);\n        fcn.00b97eec();\n    }\n    else {\n        fcn.00b979ab(&var_18h, iVar3 + 1, 0xffffffff);\n        fcn.00b97e8c(iVar3 + 1, 0xffffffff);\n    }\n    iVar3 = fcn.00b97e2f(0xc1fb80);\n    if (iVar3 != -1) {\n        fcn.00b979ab(&var_38h, iVar3, 0xffffffff);\n        fcn.00b97e8c(iVar3, 0xffffffff);\n    }\n    uVar2 = var_14h;\n    arg_8h_00 = 0;\n    if (var_14h < 2) goto code_r0x00b947e0;\n    piVar4 = fcn.00b97b20(0);\n    if ((*piVar4 != 0x5c) || (piVar4 = fcn.00b97b20(1),  *piVar4 != 0x5c)) {\n        piVar4 = fcn.00b97b52(1);\n        if (*piVar4 == 0x3a) {\n            arg_8h_00 = 2;\n            fcn.00b979ab(&var_18h, 0, 2);\n        }\n        goto code_r0x00b947e0;\n    }\n    uVar6 = 2;\n    if (uVar2 < 4) {\ncode_r0x00bcd9f4:\n        fcn.00b97d2c(0xc493dc);\n        arg_8h_00 = uVar6;\n    }\n    else {\n        piVar4 = fcn.00b97b20(2);\n        iVar1 = *piVar4;\n        if ((iVar1 == 0x3f) && (piVar4 = fcn.00b97b20(3),  *piVar4 == 0x5c)) {\n            if ((((7 < uVar2) && (piVar4 = fcn.00b97b20(4),  *piVar4 == 0x55)) &&\n                (piVar4 = fcn.00b97b20(5),  *piVar4 == 0x4e)) &&\n               ((piVar4 = fcn.00b97b20(6),  *piVar4 == 0x43 && (piVar4 = fcn.00b97b20(7),  *piVar4 == 0x5c)))) {\n                fcn.00b97d2c(L\"\\\\\\\\?\\\\UNC\\\\\");\n                arg_8h_00 = 8;\n                goto code_r0x00bcda39;\n            }\n            fcn.00b97d2c(0xc4a264);\n        }\n        else {\n            if ((iVar1 != 0x2e) || (piVar4 = fcn.00b97b20(3),  *piVar4 != 0x5c)) goto code_r0x00bcd9f4;\n            fcn.00b97d2c(0xc4a284);\n        }\n        uVar6 = 1;\n        arg_8h_00 = 4;\n    }\ncode_r0x00bcda39:\n    while ((arg_8h_00 < uVar2 && (uVar6 != 0))) {\n        piVar4 = fcn.00b97b52(arg_8h_00);\n        if (*piVar4 == 0x5c) {\n            uVar6 = uVar6 - 1;\n        }\n        if (uVar6 != 0) {\n            puVar5 = fcn.00b97b52(arg_8h_00);\n            fcn.00b97a84(*puVar5);\n            arg_8h_00 = arg_8h_00 + 1;\n        }\n    }\ncode_r0x00b947e0:\n    fcn.00b979ab(&var_18h, arg_8h_00, 0xffffffff);\n    if (var_8h != 0) {\n        fcn.00b981a7(&var_28h);\n    }\n    if (arg_8h != 0) {\n        fcn.00b981a7(&var_58h);\n    }\n    if (arg_ch != 0) {\n        fcn.00b981a7(&var_38h);\n    }\n    if (arg_10h != 0) {\n        fcn.00b981a7(&var_48h);\n    }\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return;\n}\n",
        "token_count": 1401
    },
    "00b95351": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00b95351(int32_t param_1)\n\n{\n    uint uStack4;\n    \n    if ((param_1 == 7) || (param_1 == 5)) {\n        uStack4 = 2;\n    }\n    else {\n        if (param_1 != 3) {\n            return 0;\n        }\n        uStack4 = 3;\n    }\n    return uStack4;\n}\n",
        "token_count": 94
    },
    "00b95770": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b95770(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint arg_8h_00;\n    bool bVar4;\n    uint uVar5;\n    uint arg_8h_01;\n    \n    if (((*(param_1 + 0x28) & 0x8000) == 0) && ((*(param_1 + 0x28) & 1) == 0)) {\n        return;\n    }\n    if ((*(param_1 + 0x28) & 0x10) != 0) {\n        return;\n    }\n    piVar1 = *(param_1 + 0x14);\n    arg_8h_01 = 0;\n    fcn.00b95c4e(0, 0, 0);\n    uVar5 = 0;\n    fcn.00b9538e(0);\n    if ((*(param_1 + 0x28) & 0x4000) == 0) {\n        arg_8h_00 = 0x10000;\n    }\n    else {\n        arg_8h_00 = fcn.00b95e3f();\n    }\n    arg_8h = fcn.00bb0ff6(arg_8h_00);\n    fcn.00b9538e(arg_8h);\n    fcn.00b95371();\n    *piVar1 = *piVar1 + 1;\n    fcn.00b95371();\n    iVar2 = fcn.00b95d20(unaff_EBX, arg_8h_00);\n    fcn.00b95c4e(arg_8h_01, uVar5, 0);\n    if ((iVar2 == 0) && ((*(param_1 + 0x28) & 1) != 0)) goto code_r0x00b95870;\n    iVar3 = fcn.00b9530a(unaff_EBX, iVar2);\n    if (iVar3 == 0) {\n        if ((*(param_1 + 0x28) & 0xff0) == 0) {\n            iVar2 = fcn.00b95097(unaff_EBX, iVar2);\n            *(param_1 + 0x2c) = iVar2;\n            bVar4 = iVar2 == 2;\ncode_r0x00b9585c:\n            if (bVar4) {\n                *(param_1 + 0x2c) = 4;\n            }\n        }\n        else if (*(param_1 + 0x2c) == 7) {\n            *(param_1 + 0x2c) = 8;\n        }\n        else {\n            if (*(param_1 + 0x2c) != 5) {\n                bVar4 = *(param_1 + 0x2c) == 3;\n                goto code_r0x00b9585c;\n            }\n            *(param_1 + 0x2c) = 6;\n        }\n    }\n    else {\n        *(param_1 + 0x2c) = iVar3;\n    }\n    uVar5 = fcn.00b95351();\n    *(param_1 + 0x30) = uVar5;\ncode_r0x00b95870:\n    fcn.00b95371();\n    return;\n}\n",
        "token_count": 771
    },
    "00b95956": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b95956(uint arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint lpBuffer;\n    uint nNumberOfBytesToWrite;\n    \n    fcn.00b95dcf();\n    *(in_ECX + 0x28) = arg_ch;\n    if ((arg_ch & 3) == 0) {\n        *(in_ECX + 0x28) = arg_ch | 0x8000;\n    }\n    cVar1 = fcn.00b95df9(arg_8h, *(in_ECX + 0x28));\n    if (cVar1 != '\\0') {\n        fcn.00b9588d();\n        fcn.00b95770();\n        fcn.00b953db();\n        if (((*(in_ECX + 0x28) & 3) != 0) &&\n           (((*(in_ECX + 0x28) & 1) == 0 || ((*(in_ECX + 0x10) | *(in_ECX + 0x14)) == 0)))) {\n            if (*(in_ECX + 0x2c) == 3) {\n                nNumberOfBytesToWrite = 3;\n                lpBuffer = 0xc4709c;\n            }\n            else if (*(in_ECX + 0x2c) == 5) {\n                nNumberOfBytesToWrite = 2;\n                lpBuffer = 0xc470a4;\n            }\n            else {\n                if (*(in_ECX + 0x2c) != 7) {\n                    return 1;\n                }\n                nNumberOfBytesToWrite = 2;\n                lpBuffer = 0xc470a0;\n            }\n            fcn.00bf3696(lpBuffer, nNumberOfBytesToWrite);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 416
    },
    "00b97f41": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b97f41(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *in_ECX;\n    \n    iVar1 = fcn.00bb2e3c(arg_8h);\n    in_ECX[1] = iVar1;\n    if (iVar1 + 1 == 0) {\n        uVar2 = 8;\n    }\n    else {\n        uVar2 = iVar1 + 8U & 0xfffffff8;\n    }\n    in_ECX[2] = uVar2;\n    uVar3 = fcn.00bb0fa5(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n    *in_ECX = uVar3;\n    fcn.00bb1080(uVar3, arg_8h, (iVar1 + 1) * 2);\n    puVar4 = fcn.00bb0ff6(4);\n    if (puVar4 == NULL) {\n        puVar4 = NULL;\n    }\n    else {\n        *puVar4 = 1;\n    }\n    in_ECX[3] = puVar4;\n    return;\n}\n",
        "token_count": 282
    },
    "00b97faf": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b97faf(uint *param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    iVar4 = *param_1[3];\n    if (1 < iVar4) {\n        *param_1[3] = iVar4 + -1;\n        puVar1 = fcn.00bb0ff6(4);\n        if (puVar1 == NULL) {\n            puVar1 = NULL;\n        }\n        else {\n            *puVar1 = 1;\n        }\n        param_1[3] = puVar1;\n        iVar4 = param_1[1] + 1;\n        if (iVar4 == 0) {\n            uVar2 = 8;\n        }\n        else {\n            uVar2 = param_1[1] + 8 & 0xfffffff8;\n        }\n        param_1[2] = uVar2;\n        uVar3 = fcn.00bb0fa5(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n        fcn.00bb1080(uVar3, *param_1, iVar4 * 2);\n        *param_1 = uVar3;\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "00b99687": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b99687(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    double *in_ECX;\n    int32_t iVar5;\n    float10 fVar6;\n    ulong uVar7;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0xc);\n    if (iVar4 < 8) {\n        if (iVar4 == 7) {\n            iVar4 = *in_ECX;\n            if (arg_8h[3] == 1) {\n                iVar5 = fcn.00b99c9c();\n            }\n            else {\n                iVar5 = fcn.00b99d46();\n            }\n            *in_ECX = iVar4 - iVar5;\n            goto code_r0x00b996d0;\n        }\n        if (iVar4 == 1) {\n            if (arg_8h[3] == 1) {\n                iVar4 = *in_ECX - *arg_8h;\n                uVar1 = *arg_8h;\n                uVar2 = *in_ECX;\n                iVar5 = ((uVar2 >> 0x1f) - (uVar1 >> 0x1f)) - (uVar2 < uVar1);\n                if ((iVar4 == uVar2 - uVar1) && (iVar4 >> 0x1f == iVar5)) {\n                    *in_ECX = iVar4;\n                }\n                else {\n                    *(in_ECX + 0xc) = 2;\n                    *in_ECX = uVar2 - uVar1;\n                    *(in_ECX + 4) = iVar5;\n                }\n                goto code_r0x00b996d0;\n            }\n            if (arg_8h[3] == 2) {\n                uVar1 = *in_ECX;\n                uVar2 = *arg_8h;\n                uVar3 = arg_8h[1];\n                *in_ECX = uVar1 - *arg_8h;\n                *(in_ECX + 4) = ((uVar1 >> 0x1f) - uVar3) - (uVar1 < uVar2);\n                *(in_ECX + 0xc) = 2;\n                goto code_r0x00b996d0;\n            }\n        }\n        else {\n            if (iVar4 != 2) {\n                if (iVar4 != 3) {\n                    if (iVar4 != 4) goto code_r0x00b996d0;\n                    goto code_r0x00bcf800;\n                }\n                goto code_r0x00b996c7;\n            }\n            if ((arg_8h[3] == 1) || (arg_8h[3] == 2)) {\n                uVar7 = fcn.00b99d46();\n                uVar1 = *in_ECX;\n                *in_ECX = *in_ECX - uVar7;\n                *(in_ECX + 4) = (*(in_ECX + 4) - (uVar7 >> 0x20)) - (uVar1 < uVar7);\n                goto code_r0x00b996d0;\n            }\n        }\n        fcn.00b99593();\n    }\n    else {\n        if (iVar4 != 9) {\n            if (iVar4 == 10) {\ncode_r0x00bcf800:\n                fcn.00b994da();\n                fcn.00b99687(arg_8h);\n                goto code_r0x00b996d0;\n            }\n            if (iVar4 != 0xb) goto code_r0x00b996d0;\n        }\n        fcn.00b99593();\n    }\ncode_r0x00b996c7:\n    fVar6 = fcn.00b99cf8();\n    *in_ECX = *in_ECX - fVar6;\ncode_r0x00b996d0:\n    fcn.00b9997f();\n    return;\n}\n",
        "token_count": 900
    },
    "00b99c9c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t ** __fastcall fcn.00b99c9c(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t **ppiVar3;\n    uint arg_8h;\n    int32_t **var_8h;\n    int32_t **ppiStack8;\n    \n    piVar1 = param_1[3];\n    var_8h = param_1;\n    ppiStack8 = param_1;\n    if (piVar1 < 8) {\n        if (((piVar1 == 0x7) || (piVar1 == 0x1)) || (piVar1 == 0x2)) {\n            return *param_1;\n        }\n        if (piVar1 == 0x3) {\n            ppiVar3 = fcn.00bcb5d0();\n            return ppiVar3;\n        }\n        if (piVar1 == 0x4) {\n            cVar2 = fcn.00b995c1();\n            if (cVar2 != '\\0') {\n                fcn.00bafbfb(0x10);\n                return var_8h;\n            }\n            ppiVar3 = fcn.00bb37ca(arg_8h);\n            return ppiVar3;\n        }\n    }\n    else {\n        if (piVar1 == 0x9) {\n            return *param_1 != '\\0';\n        }\n        if (piVar1 == 0xa) {\n            return (*param_1)[1];\n        }\n        if ((piVar1 == 0xb) && (**param_1 < 9)) {\n            fcn.00bf582b(&var_8h);\n            return var_8h;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 392
    },
    "00b9b93d": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b9b93d(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    fcn.00ba6154();\n    if (*(in_ECX + 0x1dc) == 7) {\n        uVar1 = fcn.00bf89bb();\n        arg_8h = uVar1;\n        iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n        if (iVar2 != 0) {\n            fcn.00ba5f57(uVar1);\n            fcn.00b934c2(&arg_8h);\n            return 1;\n        }\n    }\n    else if (*(in_ECX + 0x1dc) == 4) {\n        fcn.00b99997();\n        uVar1 = fcn.00ba5f88(*(in_ECX + 0x1d8), in_ECX + 0x1e0, in_ECX + 0x2e0, *(in_ECX + 0x2d4), *(in_ECX + 0x2dd), \n                             *(in_ECX + 0x2dc), arg_8h);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 287
    },
    "00b9d6f0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00b9d6f0(uint noname_0, int32_t *arg_ch)\n\n{\n    double *arg_8h;\n    uint32_t uVar1;\n    uint64_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint *arg_8h_00;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    int32_t in_ECX;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    uint arg_8h_01;\n    uint arg_8h_02;\n    uint arg_8h_03;\n    double *arg_8h_04;\n    float10 fVar12;\n    float10 fVar13;\n    ulong uVar14;\n    int64_t iVar15;\n    uint arg_ch_00;\n    int32_t *var_28h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    double *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    _var_28h = _var_28h & 0xffffffff00000000;\n    var_20h = 0;\n    var_1ch = 1;\n    if (*(in_ECX + 0x165) == '\\0') {\n        iVar11 = *(in_ECX + 0x160);\n    }\n    else {\n        iVar11 = *(*(in_ECX + 0x160) + 0x30);\n    }\n    arg_8h = *(iVar11 + 0xc);\n    var_ch = iVar11;\n    if (*(iVar11 + 0x2c) == 8) {\n        iVar5 = fcn.00c09428(arg_8h, iVar11 + 0x20, &var_28h);\n        if ((iVar5 < 0) || (*(iVar11 + 0x2c) != 8)) goto code_r0x00bd2e1e;\n        arg_8h_00 = &var_28h;\ncode_r0x00bd2df4:\n        fcn.00b99e9c(arg_8h_00);\n        goto code_r0x00b9d83a;\n    }\n    if (*(iVar11 + 0x1c) == 5) {\n        var_4h = *(iVar11 + 0x10);\n        iVar5 = fcn.00b98e6b(1);\n        iVar4 = fcn.00b99c9c();\n        if (iVar5 + -1 <= iVar4) goto code_r0x00bd2e1e;\n        iVar5 = fcn.00b99c9c();\n        fcn.00b99a20();\n        piVar9 = var_4h;\n        *(iVar11 + 0x20) = iVar5 + 1;\n        *(iVar11 + 0x2c) = 1;\n        *(*var_4h + 0x210) = 0;\n        uVar6 = fcn.00b99c9c();\n        fcn.00b9928c(uVar6);\n        iVar5 = fcn.00b98ea0(piVar9, 1, 0);\n        if (iVar5 != 0) {\n            uVar6 = fcn.00b98ea0(piVar9, 2, 0);\n            fcn.00b99e9c(uVar6);\n        }\n        goto code_r0x00bd3071;\n    }\n    if (*(iVar11 + 0x1c) == 0xf) {\n        iVar5 = *(*(*(iVar11 + 0x10) + 0x10) + 8);\n        iVar4 = fcn.00b99c9c();\n        if (iVar4 < iVar5 + -1) {\n            iVar5 = fcn.00b99c9c();\n            fcn.00b99a20();\n            *(iVar11 + 0x2c) = 1;\n            *(iVar11 + 0x20) = iVar5 + 1;\n            arg_ch_00 = 1;\n            uVar6 = fcn.00b99c9c();\n            arg_8h_00 = fcn.00bf1fe7(uVar6, arg_ch_00);\n            goto code_r0x00bd2df4;\n        }\n        fcn.00b99a20();\n        *(arg_8h + 0xc) = 1;\n        *arg_8h = 0;\n        goto code_r0x00bd2e1e;\n    }\n    arg_8h_04 = iVar11 + 0x20;\n    uVar2 = _var_18h & 0xffffffff;\n    _var_18h = uVar2 | ZEXT48(arg_8h_04) << 0x20;\n    var_8h = in_ECX;\n    if (*(arg_8h + 0xc) == 1) {\n        if (*(iVar11 + 0x2c) == 1) {\n            uVar8 = *arg_8h;\n            uVar1 = *arg_8h_04;\n            uVar7 = uVar1 + uVar8;\n            _var_18h = uVar2 | uVar7 << 0x20;\n            var_ch = uVar1 >> 0x1f;\n            uVar10 = var_ch + (uVar8 >> 0x1f) + CARRY4(uVar1, uVar8);\n            if (uVar7 >> 0x1f == uVar10) {\n                *arg_8h = uVar7;\n            }\n            else {\n                *(arg_8h + 0xc) = 2;\n                *arg_8h = uVar1 + uVar8;\n                *(arg_8h + 4) = uVar10;\n            }\n        }\n        else {\n            if (*(iVar11 + 0x2c) != 2) goto code_r0x00bd2f3d;\n            uVar7 = *arg_8h;\n            uVar8 = *arg_8h_04;\n            iVar5 = *(iVar11 + 0x24);\n            *arg_8h = uVar7 + *arg_8h_04;\n            *(arg_8h + 4) = (uVar7 >> 0x1f) + iVar5 + CARRY4(uVar7, uVar8);\n            *(arg_8h + 0xc) = 2;\n        }\n        goto code_r0x00b9d799;\n    }\n    // switch table (10 cases) at 0xbd3474\n    switch(*(arg_8h + 0xc)) {\n    case 2:\n        if ((*(iVar11 + 0x2c) != 1) && (*(iVar11 + 0x2c) != 2)) goto code_r0x00bd2f3d;\n        uVar14 = fcn.00b99d46();\n        uVar7 = *arg_8h;\n        *arg_8h = *arg_8h + uVar14;\n        *(arg_8h + 4) = *(arg_8h + 4) + (uVar14 >> 0x20) + CARRY4(uVar7, uVar14);\n        break;\n    case 4:\n        fcn.00b994da();\n        fcn.00b99700(arg_8h_04);\n        break;\n    default:\n        goto code_r0x00b9d79f;\n    case 7:\n        _var_18h = uVar2 | *arg_8h << 0x20;\n        if (*(iVar11 + 0x2c) == 1) {\n            iVar5 = fcn.00b99c9c();\n        }\n        else {\n            iVar5 = fcn.00b99d46();\n        }\n        *arg_8h = var_14h + iVar5;\n        break;\n    case 9:\n    case 10:\ncode_r0x00bd2f3d:\n        fcn.00b99593();\n    case 3:\n        fVar13 = fcn.00b99cf8();\n        *arg_8h = fVar13 + *arg_8h;\n        break;\n    case 0xb:\n        if (*(iVar11 + 0x2c) != 0xb) goto code_r0x00bd2f3d;\n        iVar5 = fcn.00bf89e2();\n        iVar11 = **arg_8h;\n        iVar4 = fcn.00bb0ff6(iVar5 + iVar11);\n        fcn.00bb1080(iVar4, (*arg_8h)[1], **arg_8h);\n        uVar6 = fcn.00bf89e2();\n        uVar6 = fcn.00bf899f(extraout_ECX, uVar6);\n        fcn.00bb1080(**arg_8h + iVar4, uVar6);\n        fcn.00bb106c(*(*arg_8h + 4));\n        *(*arg_8h + 4) = iVar4;\n        **arg_8h = iVar5 + iVar11;\n        arg_8h_04 = var_14h;\n        iVar11 = var_ch;\n    }\ncode_r0x00b9d799:\n    var_4h = var_28h;\ncode_r0x00b9d79f:\n    if (*(arg_8h + 1) != 0) {\n        fcn.00b97b3d(*(arg_8h + 1));\n        *(arg_8h + 1) = 0;\n        var_4h = var_28h;\n    }\n    iVar5 = var_20h;\n    if (var_20h != 0) {\n        fcn.00b97b3d(var_20h);\n        var_4h = var_28h;\n        var_20h = 0;\n        iVar5 = extraout_ECX_00;\n    }\n    if ((var_1ch < 5) || (10 < var_1ch - 5U)) goto code_r0x00b9d7c1;\n    // switch table (11 cases) at 0xbd349c\n    switch(*((var_1ch - 5U) * 4 + 0xbd349c)) {\n    case 0xbd2f97:\n        if (var_4h != NULL) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_4h);\n            goto code_r0x00bd3019;\n        }\n        break;\n    case 0xbd2fab:\n        goto joined_r0x00bd3009;\n    case 0xbd2fb8:\n        if (var_4h != NULL) {\n            fcn.00b98e34(iVar5);\n        }\n        break;\n    case 0xbd2fcd:\n        fcn.00bb106c(var_4h[1]);\n        goto code_r0x00bd3019;\n    case 0xbd2fdd:\n        if (var_4h != NULL) {\n            fcn.00be73f0(iVar5);\n        }\n        break;\n    case 0xbd2ff2:\n        if (var_4h != NULL) {\n            fcn.00be7405(iVar5);\n        }\n        break;\n    case 0xbd3007:\njoined_r0x00bd3009:\n        if (var_4h != NULL) {\n            fcn.00b95a64();\n            var_28h = var_4h;\ncode_r0x00bd3019:\n            fcn.00bb106c(var_28h);\n        }\n    }\ncode_r0x00b9d7c1:\n    fVar13 = 0;\n    _var_28h = fVar13;\n    var_1ch = 3;\n    iVar5 = *(arg_8h_04 + 0xc);\n    iVar4 = *(iVar5 * 0x40 + 0xc34f44);\n    if (iVar4 == 3) {\n        if (iVar5 == 1) {\ncode_r0x00b9d7ed:\n            fVar12 = *arg_8h_04;\n        }\n        else {\n            fVar12 = fVar13;\n    // switch table (9 cases) at 0xbd34ec\n            switch(iVar5) {\n            case 2:\n                fVar12 = *arg_8h_04;\n                break;\n            case 3:\n                fVar12 = *arg_8h_04;\n                break;\n            case 4:\n                cVar3 = fcn.00b995c1();\n                if (cVar3 == '\\0') {\n                    fVar13 = fcn.00bb3f79(arg_8h_01);\n                }\n                else {\n                    fcn.00bafbfb(8);\n                    fVar13 = _var_18h;\n                }\n                _var_18h = fVar13;\n                if (var_1ch == 3) {\n                    fVar13 = _var_28h;\n                    fVar12 = _var_18h;\n                }\n                else if (var_1ch - 1U < 10) {\n    // switch table (10 cases) at 0xbd3510\n                    switch(*((var_1ch - 1U) * 4 + 0xbd3510)) {\n                    case 0xbd313e:\n                        cVar3 = fcn.00b995c1();\n                        if (cVar3 == '\\0') {\n                            fVar13 = fcn.00bb3f79(arg_8h_02);\n                            fVar12 = _var_18h;\n                        }\n                        else {\n                            fcn.00bafbfb(8);\n                            fVar13 = CONCAT44(var_ch, var_10h);\n                            fVar12 = _var_18h;\n                        }\n                        break;\n                    case 0xbd316a:\n                        fVar13 = var_28h;\n                        fVar12 = _var_18h;\n                        break;\n                    case 0xbd3186:\n                        fVar13 = _var_28h;\n                        fVar12 = _var_18h;\n                        break;\n                    case 0xbd3191:\n                        fVar13 = *(var_28h + 4);\n                        fVar12 = _var_18h;\n                        break;\n                    case 0xbd319f:\n                        if (var_28h == '\\0') goto code_r0x00bd31af;\n                        fVar13 = 1;\n                        fVar12 = _var_18h;\n                        break;\n                    case 0xbd31af:\n                        goto code_r0x00bd31af;\n                    }\n                }\n                else {\ncode_r0x00bd31af:\n                    fVar13 = 0;\n                    fVar12 = _var_18h;\n                }\n                break;\n            case 7:\n                goto code_r0x00b9d7ed;\n            case 9:\n                if (*arg_8h_04 != '\\0') {\n                    fVar12 = 1;\n                }\n                break;\n            case 10:\n                fVar12 = *(*arg_8h_04 + 4);\n            }\n        }\n        if (fVar13 <= fVar12) goto code_r0x00b9d7fc;\ncode_r0x00bd305f:\n        cVar3 = fcn.00bb0740();\n        if (cVar3 == '\\0') {\ncode_r0x00bd2e1e:\n            fcn.00bafdcf();\n        }\n        else {\ncode_r0x00bd3071:\n            *arg_ch = *(iVar11 + 4) + 1;\n        }\n    }\n    else {\n    // switch table (9 cases) at 0xbd34c8\n        switch(iVar4) {\n        case 1:\n        case 9:\n            iVar5 = fcn.00b99c9c();\n            iVar4 = fcn.00b99c9c();\n            if (iVar5 < iVar4) goto code_r0x00bd305f;\n            break;\n        case 2:\n            iVar15 = fcn.00b99d46();\n            iVar5 = iVar15 >> 0x20;\n            _var_18h = _var_18h & 0xffffffff | iVar15 << 0x20;\n            uVar14 = fcn.00b99d46();\n            iVar4 = uVar14 >> 0x20;\n            if ((iVar5 < iVar4) || ((iVar5 <= iVar4 && (var_14h < uVar14)))) goto code_r0x00bd305f;\n            break;\n        case 4:\n            fcn.00b99997();\n            iVar5 = var_20h;\n            fcn.00b99997();\n            iVar5 = fcn.00b97a68(iVar5, 0);\n            if (iVar5 < 0) goto code_r0x00bd305f;\n            break;\n        case 7:\n            uVar7 = fcn.00bf89bb();\n            uVar8 = fcn.00bf89bb();\n            if (uVar7 < uVar8) goto code_r0x00bd305f;\n        }\ncode_r0x00b9d7fc:\n        iVar5 = *(iVar11 + 0x1c);\n        iVar4 = *((iVar5 * 0x10 + *(arg_8h + 0xc)) * 4 + 0xc34f38);\n        if (iVar4 == 1) {\ncode_r0x00b9d817:\n            if (iVar5 == 1) {\n                piVar9 = *(iVar11 + 0x10);\n                var_4h = piVar9;\n            }\n            else {\n    // switch table (10 cases) at 0xbd3538\n                switch(iVar5) {\n                case 2:\n                case 7:\n                    piVar9 = *(iVar11 + 0x10);\n                    break;\n                case 3:\n                    piVar9 = fcn.00bcb5d0();\n                    break;\n                case 4:\n                    uVar6 = **(iVar11 + 0x18);\n                    cVar3 = fcn.00b995c1();\n                    if (cVar3 == '\\0') {\n                        piVar9 = fcn.00bb37ca(uVar6);\n                    }\n                    else {\n                        fcn.00bafbfb(0x10);\n                        piVar9 = var_18h;\n                    }\n                    break;\n                default:\ncode_r0x00bd32fc:\n                    piVar9 = NULL;\n                    break;\n                case 9:\n                    piVar9 = *(iVar11 + 0x10) != '\\0';\n                    var_4h = piVar9;\n                    break;\n                case 10:\n                    piVar9 = *(*(iVar11 + 0x10) + 4);\n                    break;\n                case 0xb:\n                    if (8 < **(iVar11 + 0x10)) goto code_r0x00bd32fc;\n                    fcn.00bf582b(&var_18h);\n                    piVar9 = var_18h;\n                }\n            }\n            if (*(arg_8h + 0xc) == 1) {\ncode_r0x00b9d834:\n                var_18h = *arg_8h;\n            }\n            else {\n    // switch table (10 cases) at 0xbd3560\n                switch(*(arg_8h + 0xc)) {\n                case 2:\n                case 7:\n                    goto code_r0x00b9d834;\n                case 3:\n                    var_18h = fcn.00bcb5d0();\n                    break;\n                case 4:\n                    cVar3 = fcn.00b995c1();\n                    if (cVar3 == '\\0') {\n                        var_18h = fcn.00bb37ca(arg_8h_03);\n                    }\n                    else {\n                        fcn.00bafbfb(0x10);\n                    }\n                    break;\n                default:\ncode_r0x00bd338a:\n                    var_18h = NULL;\n                    break;\n                case 9:\n                    var_18h = *arg_8h != '\\0';\n                    break;\n                case 10:\n                    var_18h = *(*arg_8h + 4);\n                    break;\n                case 0xb:\n                    if (8 < **arg_8h) goto code_r0x00bd338a;\n                    fcn.00bf582b(&var_18h);\n                }\n            }\n            if (piVar9 < var_18h) {\ncode_r0x00b9d863:\n                if (*(var_8h + 0x165) != '\\0') {\n                    uVar6 = *(*(var_8h + 0x160) + 0x30);\n                    if (*(var_8h + 0x160) != 0) {\n                        fcn.00be6b8e();\n                    }\n                    *(var_8h + 0x160) = uVar6;\n                    *(var_8h + 0x165) = 0;\n                }\n                if (*(var_8h + 0x164) == '\\0') {\n                    iVar11 = *(var_8h + 0x160);\n                    uVar6 = *(iVar11 + 0x30);\n                    if (iVar11 != 0) {\n                        fcn.00b99a20();\n                        fcn.00b99a20();\n                        fcn.00bb106c(iVar11);\n                    }\n                    *(var_8h + 0x160) = uVar6;\n                    *(var_8h + 0x165) = 0;\n                }\n                else {\n                    *(var_8h + 0x165) = 1;\n                }\n                *(var_8h + 0x15c) = *(var_8h + 0x15c) + -1;\n                goto code_r0x00b9d843;\n            }\n        }\n        else {\n    // switch table (8 cases) at 0xb9d8e4\n            switch(iVar4) {\n            case 2:\n                iVar15 = fcn.00b99d46();\n                iVar5 = iVar15 >> 0x20;\n                _var_18h = _var_18h & 0xffffffff | iVar15 << 0x20;\n                uVar14 = fcn.00b99d46();\n                iVar4 = uVar14 >> 0x20;\n                if ((iVar4 <= iVar5) && ((iVar4 < iVar5 || (uVar14 <= var_14h)))) break;\n                goto code_r0x00b9d863;\n            case 3:\n                fVar13 = fcn.00b99cf8();\n                _var_18h = fVar13;\n                fVar13 = fcn.00b99cf8();\n                if (((fVar13 < _var_18h) << 8 | (fVar13 == _var_18h) << 0xe) == 0) goto code_r0x00b9d863;\n                break;\n            case 4:\n                fcn.00b99997();\n                uVar7 = *(arg_8h + 1);\n                fcn.00b99997();\n                iVar5 = fcn.00b97a68(uVar7, 0);\n                if (iVar5 < 0) goto code_r0x00b9d863;\n                break;\n            case 7:\n                uVar7 = fcn.00bf89bb();\n                uVar8 = fcn.00bf89bb();\n                if (uVar7 < uVar8) goto code_r0x00b9d863;\n                break;\n            case 9:\n                goto code_r0x00b9d817;\n            }\n        }\ncode_r0x00b9d83a:\n        *arg_ch = *(iVar11 + 4) + 1;\n    }\ncode_r0x00b9d843:\n    iVar11 = var_20h;\n    if (var_20h != 0) {\n        fcn.00b97b3d(var_20h);\n        var_20h = 0;\n        iVar11 = extraout_ECX_01;\n    }\n    if (var_1ch < 5) {\n        return;\n    }\n    if (10 < var_1ch - 5U) {\n        return;\n    }\n    // switch table (11 cases) at 0xbd3588\n    switch(*((var_1ch - 5U) * 4 + 0xbd3588)) {\n    case 0xbd33d2:\n        if (var_28h == NULL) {\n            return;\n        }\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_28h);\n        goto code_r0x00bd3467;\n    case 0xbd33e9:\n        goto joined_r0x00bd3459;\n    case 0xbd33f9:\n        if (var_28h != NULL) {\n            fcn.00b98e34(iVar11);\n        }\n        break;\n    case 0xbd3411:\n        fcn.00bb106c(*(var_28h + 4));\n        goto code_r0x00bd3467;\n    case 0xbd3424:\n        if (var_28h != NULL) {\n            fcn.00be73f0(iVar11);\n        }\n        break;\n    case 0xbd343c:\n        if (var_28h != NULL) {\n            fcn.00be7405(iVar11);\n        }\n        break;\n    case 0xbd3454:\njoined_r0x00bd3459:\n        if (var_28h == NULL) {\n            return;\n        }\n        fcn.00b95a64();\ncode_r0x00bd3467:\n        fcn.00bb106c(var_28h);\n    }\n    return;\n}\n",
        "token_count": 5838
    },
    "00ba878e": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00ba878e(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint arg_10h;\n    int32_t iVar2;\n    uint16_t *in_ECX;\n    uint32_t uVar3;\n    int32_t in_EDX;\n    uint16_t uVar4;\n    uint16_t *puVar5;\n    uint var_28h;\n    uint32_t var_24h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = *in_ECX;\n    do {\n        if (0xa1 < uVar4) {\n            return;\n        }\n        var_4h = uVar4;\n        if (0x40 < uVar4 - 0x21) {\n            if (((uVar4 == 0x6e) || (uVar4 == 0x6f)) || (uVar4 == 0x70)) {\n                if (uVar4 == 0x70) {\n                    puVar5 = in_ECX + in_ECX[1];\n                }\n                else {\n                    puVar5 = in_ECX + 0x11;\n                }\n                var_4h = *puVar5;\n                if (*puVar5 - 0x62 < 8) {\n                    arg_10h = fcn.00ba8d01(*(arg_8h + 4), &var_28h);\n                    var_8h = 1000;\n                    var_24h = ~var_4h & 1;\n                    iVar2 = fcn.00ba8a0e(arg_8h, &var_28h, arg_10h, &var_8h);\n                    if ((iVar2 != 0) && (uVar3 = (var_4h & 0xffff) - 0x62,  uVar3 < 8)) {\n    // switch table (8 cases) at 0xba89ee\n                        switch(*(uVar3 * 4 + 0xba89ee)) {\n                        case 0xba8911:\n                            uVar4 = 0x6a;\n                            break;\n                        case 0xba89a1:\n                            uVar4 = 0x6c;\n                            break;\n                        case 0xba89dd:\n                            uVar4 = 0x6b;\n                            break;\n                        case 0xba89e4:\n                            uVar4 = 0x6d;\n                        }\n                        *puVar5 = uVar4;\n                    }\n                }\n                goto code_r0x00ba8917;\n            }\n            goto code_r0x00ba87e2;\n        }\n        iVar1 = fcn.00ba906a();\n        uVar4 = uVar4 + (0x21 - iVar1);\n        if (uVar4 < 0x29) {\n            iVar2 = fcn.00ba8d01(*(arg_8h + 4), &var_28h);\n        }\n        else {\n            iVar2 = 0;\n        }\n        if (((uVar4 == 0x21) || (uVar4 == 0x23)) || ((uVar4 == 0x25 || (uVar4 == 0x27)))) {\n            var_24h = 1;\n        }\n        else {\n            var_24h = 0;\n        }\n        var_8h = 1000;\n        if ((iVar2 == 0) || (iVar2 = fcn.00ba8a0e(arg_8h, &var_28h, iVar2, &var_8h),  iVar2 == 0))\n        goto code_r0x00ba8917;\n    // switch table (8 cases) at 0xbe529c\n        switch(uVar4) {\n        case 0x21:\n            *in_ECX = *in_ECX + 9;\n            break;\n        case 0x22:\n        case 0x23:\n            iVar1 = 8;\n            goto code_r0x00be524f;\n        case 0x24:\n        case 0x25:\n            *in_ECX = *in_ECX + 7;\n            break;\n        case 0x26:\n        case 0x27:\n            iVar1 = 6;\ncode_r0x00be524f:\n            *in_ECX = *in_ECX + iVar1;\n            break;\n        case 0x28:\n            *in_ECX = *in_ECX + 5;\n        }\ncode_r0x00ba8917:\n        uVar4 = *in_ECX;\ncode_r0x00ba87e2:\n        uVar3 = uVar4;\n        if (uVar3 < 0x71) {\n            if (uVar3 == 0x70) goto code_r0x00be5290;\n            if (uVar3 < 0x5e) {\n                if (0x5a < uVar3) {\ncode_r0x00be5275:\n                    uVar4 = in_ECX[2];\n                    goto joined_r0x00be527f;\n                }\n                if (uVar3 == 0) {\n                    return;\n                }\n                if ((0x54 < uVar3) && (uVar3 < 0x5b)) goto code_r0x00ba89b1;\n            }\n            else {\n                if (0x60 < uVar3) {\n                    if (uVar3 != 0x61) goto code_r0x00ba8811;\n                    goto code_r0x00be5275;\n                }\ncode_r0x00ba89b1:\n                uVar4 = in_ECX[1];\njoined_r0x00be527f:\n                if ((uVar4 == 0x10) || (uVar4 == 0xf)) {\n                    in_ECX = in_ECX + 2;\n                }\n            }\n        }\n        else {\n            if ((((uVar3 != 0x95) && (uVar3 != 0x97)) && (uVar3 != 0x99)) && (uVar3 != 0x9b)) goto code_r0x00ba8811;\ncode_r0x00be5290:\n            in_ECX = in_ECX + in_ECX[1];\n        }\ncode_r0x00ba8811:\n        in_ECX = in_ECX + *(uVar3 + 0xc35750);\n        if (((in_EDX != 0) && (uVar3 - 0x1d < 0x38)) && ((in_ECX[-1] & 0xfc00) == 0xd800)) {\n            in_ECX = in_ECX + 1;\n        }\n        uVar4 = *in_ECX;\n    } while( true );\n}\n",
        "token_count": 1489
    },
    "00be655c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00be655c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = *(in_ECX + 0xc);\n    if (iVar1 < 1) {\n        return;\n    }\n    if (3 < iVar1) {\n        if (iVar1 == 4) goto code_r0x00be659d;\n        if (iVar1 != 7) {\n            if (iVar1 < 9) {\n                return;\n            }\n            if (10 < iVar1) {\n                if (iVar1 != 0xb) {\n                    return;\n                }\n                if (*(arg_8h + 0xc) == 0xb) {\n                    fcn.00b99700(arg_8h);\n                    return;\n                }\n            }\n        }\n    }\n    fcn.00b99488();\ncode_r0x00be659d:\n    fcn.00b99997();\n    fcn.00b97c8e(*(arg_8h + 8));\n    return;\n}\n",
        "token_count": 234
    },
    "00bf28a0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf28a0(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t *piVar1;\n    \n    if (0x206 < arg_8h) {\n        return;\n    }\n    piVar1 = in_ECX + (arg_8h + 0x6d) * 4;\n    if (*piVar1 != 0) {\n        fcn.00bf268b(*piVar1);\n    }\n    *piVar1 = 0;\n    if (arg_8h != *(in_ECX + 0x9d0)) {\n        return;\n    }\n    if (6 < arg_8h) {\n        do {\n            if (*piVar1 != 0) break;\n            arg_8h = arg_8h + -1;\n            piVar1 = piVar1 + -1;\n        } while (6 < arg_8h);\n        if (6 < arg_8h) goto code_r0x00bf28ea;\n    }\n    arg_8h = 0;\ncode_r0x00bf28ea:\n    *(in_ECX + 0x9d0) = arg_8h;\n    return;\n}\n",
        "token_count": 269
    },
    "00bf31da": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf31da(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t var_4h;\n    \n    var_4h = -1;\n    cVar1 = fcn.00bf2f4c(arg_8h, &var_4h);\n    if (((cVar1 == '\\0') || (var_4h < 7)) || (*0xc57260 < var_4h)) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.00b981a7(arg_ch);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 153
    },
    "00bf3436": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf3436(ushort *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    if ((*(in_ECX + 0x2c) == 7) || (*(in_ECX + 0x2c) == 8)) {\n        var_4h = in_ECX;\n        iVar1 = fcn.00b95d20(&var_4h, 2);\n        if (iVar1 == 2) {\n            *arg_8h = CONCAT31(var_4h, var_4h._1_1_);\n            return 1;\n        }\n    }\n    else {\n        iVar1 = fcn.00b95d20(arg_8h, 2);\n        if (iVar1 == 2) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 201
    },
    "00bf582b": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00bf582b(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_EDX;\n    int32_t iVar2;\n    ulong uVar3;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = 0;\n    uVar1 = in_EDX - 1;\n    if (uVar1 < 8) {\n        var_4h = 0;\n        var_8h = 1;\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        if (0 < in_EDX) {\n            do {\n                uVar3 = fcn.00bc6200();\n                uVar1 = *arg_8h;\n                *arg_8h = *arg_8h + uVar3;\n                arg_8h[1] = arg_8h[1] + (uVar3 >> 0x20) + CARRY4(uVar1, uVar3);\n                iVar2 = iVar2 + 1;\n                uVar1 = var_4h << 8 | var_8h >> 0x18;\n                var_8h = var_8h << 8;\n                var_4h = uVar1;\n            } while (iVar2 < in_EDX);\n        }\n        uVar1 = CONCAT31(uVar1 >> 8, 1);\n    }\n    else {\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        uVar1 = arg_8h & 0xffffff00;\n    }\n    return uVar1;\n}\n",
        "token_count": 377
    },
    "00bf89bb": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong * __fastcall fcn.00bf89bb(ulong *param_1)\n\n{\n    int16_t *arg_8h;\n    int32_t iVar1;\n    ulong *puVar2;\n    uint in_stack_ffffffe0;\n    uint in_stack_ffffffe4;\n    ulong *puStack12;\n    ulong *puStack8;\n    \n    iVar1 = *(param_1 + 0xc);\n    if (iVar1 < 1) {\n        return NULL;\n    }\n    if (4 < iVar1) {\n        if (iVar1 == 7) {\n            return *param_1;\n        }\n        if (iVar1 != 8) {\n            return NULL;\n        }\n        return *(*param_1 + 8);\n    }\n    iVar1 = *(param_1 + 0xc);\n    if (iVar1 != 1) {\n        if (iVar1 == 2) {\n            return *param_1;\n        }\n        puStack12 = param_1;\n        puStack8 = param_1;\n        if (iVar1 == 3) {\n            puVar2 = fcn.00bafcd4(in_stack_ffffffe0, in_stack_ffffffe4, *param_1, *param_1 >> 0x20);\n            return puVar2;\n        }\n        if (iVar1 == 4) {\n            arg_8h = **(param_1 + 1);\n            if ((*arg_8h == 0x30) && (((arg_8h[1] == 0x78 || (arg_8h[1] == 0x58)) && ((*(param_1 + 1))[1] < 0x13)))) {\n                fcn.00bafbfb(0x10);\n                return puStack12;\n            }\n            puVar2 = fcn.00bb37d3(arg_8h);\n            return puVar2;\n        }\n        if (iVar1 != 7) {\n            if (iVar1 == 9) {\n                if (*param_1 == '\\0') {\n                    return NULL;\n                }\n                return 0x1;\n            }\n            if (iVar1 == 0xb) {\n                if (**param_1 < 5) {\n                    fcn.00bf582b(&puStack12);\n                    return puStack12;\n                }\n                if (**param_1 < 9) {\n                    fcn.00bf582b(&puStack12);\n                    return puStack12;\n                }\n            }\n            return NULL;\n        }\n    }\n    return *param_1;\n}\n",
        "token_count": 554
    },
    "00bf89e2": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00bf89e2(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iStack4;\n    \n    piVar1 = param_1[3];\n    if (piVar1 < 8) {\n        if ((piVar1 == 0x7) || (piVar1 == 0x1)) {\n            iStack4 = 4;\n        }\n        else {\n            if ((piVar1 != 0x2) && (piVar1 != 0x3)) {\n                if (piVar1 != 0x4) {\n                    return 0;\n                }\n                return param_1[2][1] * 2 + 2;\n            }\n            iStack4 = 8;\n        }\n        return iStack4;\n    }\n    if (piVar1 == 0x9) {\n        return 1;\n    }\n    if (piVar1 != 0xb) {\n        if (piVar1 != 0xc) {\n            return 0;\n        }\n        return (*param_1)[3];\n    }\n    return **param_1;\n}\n",
        "token_count": 251
    },
    "00bf8d2b": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t fcn.00bf8d2b(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00bf8c8f(2);\n    iVar2 = iVar1;\n    iVar3 = 0;\n    if ((iVar1 == 3) && (iVar2 = fcn.00bf8c8f(3),  iVar3 = iVar1,  iVar2 == 7)) {\n        iVar3 = 10;\n        iVar2 = fcn.00bf8c8f(5);\n        if (iVar2 == 0x1f) {\n            iVar3 = 0x29;\n            iVar2 = fcn.00bf8c8f(8);\n            if (iVar2 == 0xff) {\n                iVar3 = 0x128;\n                while (iVar2 = fcn.00bf8c8f(8),  iVar2 == 0xff) {\n                    iVar3 = iVar3 + 0xff;\n                }\n            }\n        }\n    }\n    return iVar2 + iVar3 + 3;\n}\n",
        "token_count": 248
    },
    "00c00f6f": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c00f6f(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    uVar1 = *(arg_8h + 8);\n    fcn.00b977c7();\n    var_8h = 0xffffffff;\n    var_4h = 2;\n    arg_8h = 0;\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    if (5 < uVar1) {\n        var_4h = fcn.00b99c9c();\n    }\n    if (4 < uVar1) {\n        if (*(*(*(iVar2 + 4) + 0x10) + 0xc) != 7) goto code_r0x00c0105f;\n        arg_8h = fcn.00bf89bb();\n    }\n    if (3 < uVar1) {\n        iVar2 = *(*(iVar2 + 4) + 0xc);\n        if (*(iVar2 + 0xc) != 4) goto code_r0x00c0105f;\n        fcn.00b99997();\n        fcn.00b981a7(*(iVar2 + 8));\n    }\n    if (2 < uVar1) {\n        var_8h = fcn.00b99c9c();\n    }\n    if (uVar1 < 2) {\n        uVar3 = 0xffffffff;\n    }\n    else {\n        uVar3 = fcn.00b99c9c();\n    }\n    fcn.00b99cf8();\n    uVar3 = fcn.00c1b36f(uVar3, &var_18h, var_8h, var_4h, arg_8h);\n    fcn.00b99a20();\n    arg_ch[3] = 1;\n    *arg_ch = uVar3;\ncode_r0x00c0105f:\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 503
    },
    "00c10665": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c10665(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t arg_8h_00;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar8;\n    uchar *puVar9;\n    uchar *puStack168;\n    uchar *puStack164;\n    uint uVar10;\n    uchar *puVar11;\n    uint uVar12;\n    int32_t *piStack132;\n    int32_t *piStack104;\n    int32_t iStack84;\n    int32_t *piStack76;\n    uchar auStack60 [16];\n    uchar auStack44 [16];\n    uchar auStack28 [24];\n    \n    piStack104 = 0xc10682;\n    fcn.00b99bf8(0xc1f910);\n    piStack104 = 0xc1068b;\n    fcn.00b977c7();\n    piStack104 = 0xc10694;\n    fcn.00b977c7();\n    piStack104 = 0xc1069d;\n    fcn.00b977c7();\n    iVar5 = **(arg_8h + 4);\n    piStack104 = 0xc106ac;\n    fcn.00b99997();\n    puVar1 = *(iVar5 + 8);\n    uVar10 = *puVar1;\n    uVar12 = puVar1[1];\n    piStack104 = puVar1[3];\n    *piStack104 = *piStack104 + 1;\n    puVar9 = &stack0xffffffc4;\n    puStack164 = &stack0xffffffd4;\n    piStack132 = 0xc106e0;\n    fcn.00c11347(puStack164, puVar9, &stack0xffffffe4, uVar10, uVar12);\n    piStack132 = piStack76;\n    *piStack76 = *piStack76 + 1;\n    cVar4 = fcn.00c110a5(&stack0xffffff98, &stack0xffffffa0, unaff_EBX, iStack84);\n    if (cVar4 == '\\0') {\n        uVar10 = 2;\n    }\n    else {\n        piStack132 = NULL;\n        puVar11 = puStack164;\n        if (unaff_ESI != 0) {\n            puStack168 = 0xc1073d;\n            puStack164 = puVar9;\n            iVar5 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)();\n            if (iVar5 != 0) {\n                fcn.00baff61(iVar5, 0);\n                uVar10 = 3;\n                goto code_r0x00c1079e;\n            }\n        }\n        puStack168 = 0xc10779;\n        iVar5 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n        if (iVar5 == 0) {\n            iVar5 = *(*(arg_8h + 4) + 4);\n            fcn.00b99997();\n            puStack168 = puVar11;\n            puVar9 = &stack0xffffff7c;\n            puVar11 = &stack0xffffff8c;\n            uVar12 = 0;\n            uVar10 = 0;\n            puStack164 = **(iVar5 + 8);\n            iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)();\n            if (iVar5 == 0) {\n                fcn.00baff61(iStack84, 0);\n                if (puVar9 == NULL) {\ncode_r0x00c10a94:\n                    uVar10 = 0xfffffffe;\n                    goto code_r0x00c10a97;\n                }\n                if (puVar9 < 0x3) {\n                    iVar2 = ((puStack164 >> 1) + 1) * 2;\n                    arg_8h_00 = fcn.00bb0ff6(-(iVar2 >> 0x20 != 0) | iVar2);\n                    iVar5 = *(*(arg_8h + 4) + 4);\n                    fcn.00b99997();\n                    puVar9 = &stack0xffffff5c;\n                    iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(uVar10, **(iVar5 + 8), 0, 0, arg_8h_00, puVar9);\n                    if (iVar5 == 0) {\n                        *(arg_8h_00 + (puVar11 & 0xfffffffe)) = 0;\ncode_r0x00c10a62:\n                        iVar5 = 0xc10a6a;\n                        iVar8 = arg_8h_00;\n                        fcn.00b99bf8(arg_8h_00);\n                    }\n                    else {\ncode_r0x00c10a6c:\n                        fcn.00baff61(iVar5, 0);\n                        puVar9 = NULL;\n                        iVar8 = -2;\n                        fcn.00be6aa3(0xfffffffe, 0);\n                    }\n                    fcn.00bb106c(arg_8h_00, iVar8, puVar9, iVar5);\n                }\n                else if (puVar9 == 0x3) {\n                    uVar10 = fcn.00bf794e(puStack164);\n                    iVar5 = *(*(arg_8h + 4) + 4);\n                    fcn.00b99997();\n                    iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                                      (puStack164, **(iVar5 + 8), 0, 0, uVar10, &stack0xffffff58);\n                    if (iVar5 != 0) {\n                        fcn.00baff61(iVar5, 0);\n                        fcn.00be6aa3(0xfffffffe, 0);\n                        fcn.00b99a20();\n                        arg_ch[3] = 1;\n                        *arg_ch = 0;\n                    }\n                }\n                else if (puVar9 == 0x4) {\n                    puStack164 = 0x4;\n                    iVar5 = *(*(arg_8h + 4) + 4);\n                    fcn.00b99997();\n                    (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                              (uVar10, **(iVar5 + 8), 0, 0, &stack0xffffff70, &stack0xffffff5c);\n                    fcn.00b99a20();\n                    arg_ch[3] = 2;\n                    *arg_ch = uVar12;\n                    arg_ch[1] = 0;\n                }\n                else {\n                    if (puVar9 == 0x7) {\n                        iVar2 = ((puStack164 >> 1) + 2) * 2;\n                        arg_8h_00 = fcn.00bb0ff6(-(iVar2 >> 0x20 != 0) | iVar2);\n                        iVar5 = *(*(arg_8h + 4) + 4);\n                        fcn.00b99997();\n                        puVar9 = &stack0xffffff5c;\n                        iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                                          (uVar10, **(iVar5 + 8), 0, 0, arg_8h_00, puVar9);\n                        if (iVar5 != 0) goto code_r0x00c10a6c;\n                        uVar7 = 0;\n                        uVar6 = puVar11 >> 1;\n                        *(arg_8h_00 + (puVar11 & 0xfffffffe)) = 0;\n                        if (1 < uVar6) {\n                            if (*(arg_8h_00 + -2 + (puVar11 & 0xfffffffe)) == 0) {\n                                uVar6 = uVar6 - 1;\n                            }\n                            if (uVar6 != 0) {\n                                do {\n                                    if (*(arg_8h_00 + uVar7 * 2) == 0) {\n                                        *(arg_8h_00 + uVar7 * 2) = 10;\n                                    }\n                                    uVar7 = uVar7 + 1;\n                                } while (uVar7 < uVar6);\n                            }\n                            if (*(arg_8h_00 + -2 + uVar7 * 2) == 10) {\n                                *(arg_8h_00 + -2 + uVar7 * 2) = 0;\n                            }\n                        }\n                        goto code_r0x00c10a62;\n                    }\n                    if (puVar9 != 0xb) goto code_r0x00c10a94;\n                    puStack164 = 0x8;\n                    iVar5 = *(*(arg_8h + 4) + 4);\n                    fcn.00b99997();\n                    (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                              (uVar10, **(iVar5 + 8), 0, 0, &stack0xffffff70, &stack0xffffff5c);\n                    fcn.00b99a20();\n                    arg_ch[3] = 2;\n                    *arg_ch = uVar12;\n                    arg_ch[1] = puVar9;\n                }\n            }\n            else {\n                fcn.00baff61(iVar5, 0);\n                uVar10 = 0xffffffff;\ncode_r0x00c10a97:\n                fcn.00be6aa3(uVar10, 0);\n            }\n            pcVar3 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puStack168);\n            if (iStack84 != 0) {\n                puStack168 = 0xc10abc;\n                (*pcVar3)();\n            }\n            goto code_r0x00c10abc;\n        }\n        fcn.00baff61(iVar5, 0);\n        if (piStack132 != NULL) {\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n        }\n        uVar10 = 1;\n    }\ncode_r0x00c1079e:\n    puStack164 = 0xc107aa;\n    fcn.00be6aa3(uVar10, 0);\ncode_r0x00c10abc:\n    puStack164 = 0xc10ac5;\n    fcn.00b95a64();\n    puStack164 = 0xc10ace;\n    fcn.00b95a64();\n    puStack164 = 0xc10ad7;\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 2399
    },
    "00c135ca": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00c13642)\n\nuint32_t __cdecl fcn.00c135ca(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    char cVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint arg_ch;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint32_t uVar5;\n    uchar auStack40 [36];\n    \n    fcn.00b99e9c(**(arg_8h + 4));\n    iVar1 = *(*(arg_8h + 4) + 4);\n    fcn.00b99997();\n    fcn.00b981a7(*(iVar1 + 8));\n    uVar5 = 1;\n    uVar4 = fcn.00b9b93d(1);\n    if (uVar4 < 1) {\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        arg_8h_00 = **(in_ECX + 0x1f0);\n        fcn.00b99ac0(*(*(arg_8h + 4) + 8));\n        cVar2 = fcn.00be65fa();\n        if (cVar2 == '\\0') {\n            uVar5 = 0;\n        }\n        else {\n            cVar2 = fcn.00b99399();\n            if (cVar2 == '\\0') {\n                fcn.00b977c7();\n                cVar2 = fcn.00bea52f(arg_8h_00, auStack40);\n                if (cVar2 == '\\0') {\n                    fcn.00beade3(arg_8h_00);\n                }\n                fcn.00b95a64();\n            }\n            else {\n                cVar2 = fcn.00be65fa();\n                if (cVar2 == '\\0') {\n                    fcn.00b99997();\n                    uVar3 = fcn.00bea693(arg_8h_00, unaff_EBX);\n                }\n                else {\n                    arg_ch = fcn.00b99c9c();\n                    uVar3 = fcn.00beaa11(arg_8h_00, arg_ch);\n                }\n                uVar5 = uVar3;\n            }\n        }\n        uVar4 = fcn.00b99a20();\n        uVar4 = uVar4 & 0xffffff00 | uVar5;\n    }\n    return uVar4;\n}\n",
        "token_count": 567
    },
    "00c1c066": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1c066(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint Y;\n    uint X;\n    uint nXEnd;\n    uint nYEnd;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_10h = 0;\n    var_4h = 0;\n    if (arg_ch != 0) {\n        do {\n            iVar4 = 0;\n            if (0 < *(arg_ch + 0xc)) {\n                puVar2 = arg_ch + 0x14;\n                puVar3 = arg_ch + 0x10;\n                do {\n                    Y = *puVar2;\n                    X = *puVar3;\n                    uVar1 = *(arg_ch + 0x810 + iVar4);\n                    nYEnd = var_10h;\n                    nXEnd = var_8h;\n                    if (1 < uVar1) {\n                        if (uVar1 < 8) {\n                            fcn.00c1c19a(arg_8h, X, Y, var_4h);\n                            nYEnd = Y;\n                            nXEnd = X;\n                            if ((*(arg_ch + 0x810 + iVar4) & 0xfe) == 4) {\n                                fcn.00c1c00c(arg_8h, X, Y, var_8h, var_10h, var_4h);\n                                fcn.00c1c19a(arg_8h, puVar3[2], puVar2[2], var_4h);\n                                iVar4 = iVar4 + 2;\n                                nXEnd = puVar3[2];\n                                puVar3 = puVar3 + 4;\n                                nYEnd = puVar2[2];\n                                puVar2 = puVar2 + 4;\n                                fcn.00c1c00c(arg_8h, *puVar3, *puVar2, nXEnd, nYEnd, var_4h);\n                                fcn.00c1c19a(arg_8h, *puVar3, *puVar2, var_4h);\n                            }\n                        }\n                        else if (uVar1 == 0x14) {\n                            var_4h = X;\n                        }\n                    }\n                    var_8h = nXEnd;\n                    var_10h = nYEnd;\n                    iVar4 = iVar4 + 1;\n                    puVar2 = puVar2 + 2;\n                    puVar3 = puVar3 + 2;\n                } while (iVar4 < *(arg_ch + 0xc));\n            }\n            arg_ch = *(arg_ch + 4);\n        } while (arg_ch != 0);\n    }\n    fcn.00b913b0(arg_8h, 0xffffffff);\n    return;\n}\n",
        "token_count": 678
    },
    "00b93633": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b93633(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint in_ECX;\n    \n    if ((arg_8h == *0xc562ac) || (*0xc562ac == 0)) {\n        if (arg_ch < 0x12) {\n            if (arg_ch == 0x11) {\n                *0xc56282 = 0;\n                *0xc56270 = 4 - ((arg_14h & 0x80000000) != 0);\n                fcn.00ba11d0();\n                fcn.00ba11f3();\n                goto code_r0x00b936ca;\n            }\n            if (arg_ch == 1) {\n                (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0x2ee, 0);\n                *0xc57424 = (*_sym.imp.USER32.dll_RegisterWindowMessageW)(L\"TaskbarCreated\");\n                if (*0xc56890 == 0) {\n                    *0xc56890 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                }\n            }\n            else if (arg_ch == 2) {\n                (*_sym.imp.USER32.dll_KillTimer)(arg_8h, 1);\n                fcn.00b944cb();\n                fcn.00b93114();\n            }\n            else if (arg_ch == 5) {\n                (*_sym.imp.USER32.dll_MoveWindow)(*0xc562a8, 0, 0, arg_14h & 0xffff, arg_14h >> 0x10, 1);\n            }\n            else if (arg_ch == 7) {\n                (*_sym.imp.USER32.dll_SetFocus)(*0xc562a8);\n            }\n            else {\n                if (arg_ch != 0x10) goto code_r0x00b936be;\n                *0xc56282 = 1;\n                fcn.00ba11d0();\n            }\n        }\n        else if (arg_ch == 0x82) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        }\n        else if (arg_ch == 0x111) {\n            cVar1 = fcn.00bf2a16(in_ECX, in_ECX, arg_10h, arg_14h);\n            if (cVar1 != '\\x01') goto code_r0x00b936ca;\n        }\n        else {\n            if (arg_ch != 0x113) {\n                if (arg_ch == 0x312) {\n                    if (*0xc56287 == '\\0') {\n                        fcn.00be817e(&arg_10h);\n                    }\n                }\n                else {\n                    if (arg_ch == 0x401) {\n                        fcn.00b945df(arg_8h, in_ECX, in_ECX, arg_14h);\n                        goto code_r0x00b93711;\n                    }\ncode_r0x00b936be:\n                    if ((arg_ch == *0xc57424) && (*0xc56288 == '\\x01')) {\n                        fcn.00b944cb();\n                        fcn.00b943db();\n                    }\n                }\n                goto code_r0x00b936ca;\n            }\n            fcn.00b94531(arg_8h, arg_10h);\n        }\ncode_r0x00b93711:\n        uVar2 = 0;\n    }\n    else {\ncode_r0x00b936ca:\n        uVar2 = (*_sym.imp.USER32.dll_DefWindowProcW)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar2;\n}\n",
        "token_count": 831
    },
    "00bec8fb": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bec8fb(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint uVar1;\n    \n    if (*0xc57500 == 0) {\n        return 0;\n    }\n    if (arg_ch == 5) {\n        fcn.00bec72a(arg_10h, arg_14h & 0xffff, arg_14h >> 0x10);\n    }\n    else if (arg_ch == 0x24) {\n        *(arg_14h + 0x18) = 0xbe;\n        *(arg_14h + 0x1c) = 0x72;\n    }\n    else {\n        if (arg_ch == 0x110) {\n            if (*(*0xc57500 + 0x54) == 0) {\n                *(*0xc57500 + 0x54) = arg_8h;\n            }\n            uVar1 = fcn.00bec4c1();\n            return uVar1;\n        }\n        if (arg_ch == 0x111) {\n            if ((arg_10h & 0xffff) == 1) {\n                fcn.00bec6a6();\n            }\n            else {\n                if ((arg_10h & 0xffff) != 2) {\n                    return 0;\n                }\n                fcn.00bec4a4();\n            }\n        }\n        else {\n            if (arg_ch != 0x113) {\n                return 0;\n            }\n            fcn.00bec8cf(arg_10h);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 364
    },
    "00bf2a16": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf2a16(uint noname_0, uint noname_1, uint32_t hmenu, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_ECX;\n    int32_t iVar7;\n    uint lpmii;\n    uint var_40h;\n    uint32_t var_38h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar7 = 0;\n    lpmii = 0x30;\n    fcn.00bb3020(&var_40h, 0, 0x2c);\n    var_4h = -1;\n    var_40h = 1;\n    cVar3 = fcn.00bf2f4c(hmenu & 0xffff, &var_4h);\n    iVar4 = var_4h;\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if (var_4h == 3) {\n        *0xc56270 = 2;\n        *0xc56282 = 1;\n    }\n    else if (var_4h == 4) {\n        iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*in_ECX, 4, 0, &lpmii);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        *0xc56287 = (var_38h & 8) == 0;\n        if (*0xc56287) {\n            var_38h = var_38h | 8;\n        }\n        else {\n            var_38h = var_38h ^ 8;\n        }\n        (*_sym.imp.USER32.dll_SetMenuItemInfoW)(*in_ECX, 4, 0, &lpmii);\n        fcn.00b9410d();\n        (*_sym.imp.KERNEL32.dll_Sleep)(500);\n    }\n    else {\n        if (hmenu >> 0x10 != 0) {\n            return 0;\n        }\n        if (arg_14h != 0) {\n            return 0;\n        }\n        if (*0xc56287 != '\\0') {\n            return 0;\n        }\n        uVar1 = *in_ECX[var_4h + 0x6d];\n        if ((*(in_ECX + 7) == '\\0') || (*(in_ECX[var_4h + 0x6d] + 5) == '\\0')) {\n            if (*(in_ECX + 5) != '\\0') {\n                (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uVar1, var_4h, 0, &lpmii);\n                if ((var_38h & 8) == 0) {\n                    var_38h = var_38h | 8;\n                }\n                else {\n                    var_38h = var_38h ^ 8;\n                }\n                (*_sym.imp.USER32.dll_SetMenuItemInfoW)(uVar1, iVar4, 0, &lpmii);\n            }\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetMenuItemCount)(uVar1);\n            if (*(in_ECX + 1) != '\\0') {\n                iVar5 = iVar5 + -4;\n            }\n            if (iVar5 < 1) {\n                iVar6 = -1;\n            }\n            else {\n                do {\n                    iVar6 = (*_sym.imp.USER32.dll_GetMenuItemID)(uVar1, iVar7);\n                    iVar2 = iVar7;\n                    if (iVar6 == iVar4) goto joined_r0x00bf2b5d;\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < iVar5);\n            }\n            iVar2 = iVar7;\n            if (iVar6 == iVar4) {\njoined_r0x00bf2b5d:\n                do {\n                    var_14h = iVar2;\n                    var_8h = iVar7;\n                    iVar2 = var_14h + -1;\n                    iVar7 = var_8h;\n                    if (iVar2 < 0) break;\n                    var_ch = (*_sym.imp.USER32.dll_GetMenuItemID)(uVar1, iVar2);\n                    cVar3 = fcn.00bf2f4c(var_ch, &var_10h);\n                    iVar7 = var_8h;\n                    iVar4 = var_4h;\n                } while ((cVar3 == '\\0') || (*(in_ECX[var_ch + 0x6d] + 5) != '\\0'));\n                do {\n                    iVar6 = iVar7;\n                    iVar7 = iVar6 + 1;\n                    if (iVar5 <= iVar7) break;\n                    var_ch = (*_sym.imp.USER32.dll_GetMenuItemID)(uVar1, iVar7);\n                    cVar3 = fcn.00bf2f4c(var_ch, &var_10h);\n                    iVar4 = var_4h;\n                } while ((cVar3 == '\\0') || (*(in_ECX[var_ch + 0x6d] + 5) != '\\0'));\n                (*_sym.imp.USER32.dll_CheckMenuRadioItem)(uVar1, var_14h, iVar6, var_8h, 0x400);\n            }\n        }\n        fcn.00bf26a3(iVar4);\n    }\n    return 1;\n}\n",
        "token_count": 1234
    },
    "00bf46d6": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00bf46d6(uint arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_EDX;\n    uint lpdwHandle;\n    uint puLen;\n    uint32_t *var_10h;\n    uint32_t var_ch;\n    int32_t lplpBuffer;\n    uint pBlock;\n    \n    iVar2 = (*_sym.imp.VERSION.dll_GetFileVersionInfoSizeW)();\n    if (iVar2 == 0) {\n        var_ch = 0;\n    }\n    else {\n        pBlock = fcn.00bb0ff6(iVar2);\n        var_ch = 0;\n        (*_sym.imp.VERSION.dll_GetFileVersionInfoW)();\n        iVar2 = fcn.00bb2e3c(arg_8h);\n        iVar1 = (iVar2 + 0x1a) * 2;\n        iVar2 = fcn.00bb0ff6(-(iVar1 >> 0x20 != 0) | iVar1);\n        fcn.00bb2ffc(iVar2, 0xc1fac0);\n        iVar3 = fcn.00bb378c(arg_8h, 0xc1fac0);\n        if (iVar3 != 0) {\n            fcn.00bb2fcd(iVar2, L\"StringFileInfo\\\\\");\n            iVar3 = fcn.00bb3bba(arg_8h, 0xc1fac0);\n            if (iVar3 == 0) {\n                iVar3 = (*_sym.imp.VERSION.dll_VerQueryValueW)(pBlock, L\"\\\\VarFileInfo\\\\Translation\", &var_10h, &puLen);\n                if (iVar3 == 0) {\n                    fcn.00bb2fcd(iVar2, L\"04090000\");\n                }\n                else {\n                    arg_8h_00 = *var_10h;\n                    fcn.00bafd71(arg_8h_00, 0);\n                    fcn.00bafd71(arg_8h_00 >> 0x10, 0);\n                }\n                fcn.00bb2fcd(iVar2, 0xc1fac0);\n                fcn.00bb2fcd(iVar2, arg_8h);\n            }\n            else {\n                fcn.00bb2fcd(iVar2, arg_8h);\n            }\n        }\n        iVar3 = fcn.00bb313d(arg_8h, L\"DefaultLangCodepage\");\n        if (iVar3 == 0) {\n            fcn.00bb42ee(in_EDX, iVar2 + 0x20, 8);\n            *(in_EDX + 0x10) = 0;\n            fcn.00bb106c(pBlock);\n            fcn.00bb106c(iVar2);\n            var_ch = 1;\n        }\n        else {\n            iVar3 = (*_sym.imp.VERSION.dll_VerQueryValueW)(pBlock, iVar2, &lplpBuffer, &puLen);\n            if (iVar3 != 0) {\n                iVar3 = fcn.00bb378c(arg_8h, 0xc1fac0);\n                if (iVar3 == 0) {\n                    fcn.00bb38d8(in_EDX, L\"%u.%u.%u.%u\", *(lplpBuffer + 8) >> 0x10);\n                }\n                else {\n                    fcn.00bb42ee(in_EDX, lplpBuffer, 0x200);\n                    *(in_EDX + 0x400) = 0;\n                }\n                var_ch = CONCAT31(var_ch._1_3_, 1);\n            }\n            fcn.00bb106c(pBlock);\n            fcn.00bb106c(iVar2);\n            var_ch = var_ch & 0xff;\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 875
    },
    "00bf8c8f": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00bf8c8f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x44a) = 0;\n    do {\n        arg_8h = arg_8h + -1;\n        if (*(in_ECX + 0x44c) == 0) {\n            if (*(in_ECX + 0x14) == 1) {\n                iVar1 = *(in_ECX + 0xc);\n                *(in_ECX + 0x448) = *(in_ECX + 0x448) | *(*(in_ECX + 4) + iVar1) << 8;\n                *(in_ECX + 0xc) = iVar1 + 1;\n                *(in_ECX + 0x448) = *(in_ECX + 0x448) | *(iVar1 + 1 + *(in_ECX + 4));\n                *(in_ECX + 0xc) = iVar1 + 2;\n            }\n            else {\n                uVar2 = fcn.00bf9129();\n                *(in_ECX + 0x448) = *(in_ECX + 0x448) | (uVar2 & 0xff) << 8;\n                uVar2 = fcn.00bf9129();\n                *(in_ECX + 0x448) = *(in_ECX + 0x448) | uVar2 & 0xff;\n                *(in_ECX + 0xc) = *(in_ECX + 0xc) + 2;\n            }\n            *(in_ECX + 0x44c) = 0x10;\n        }\n        *(in_ECX + 0x448) = *(in_ECX + 0x448) << 1;\n        *(in_ECX + 0x44c) = *(in_ECX + 0x44c) + -1;\n    } while (arg_8h != 0);\n    return *(in_ECX + 0x448) >> 0x10;\n}\n",
        "token_count": 470
    },
    "00c074bc": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00c074bc(uint8_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t *puVar1;\n    double dVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint32_t uVar10;\n    uint var_4h;\n    \n    uVar5 = 1;\n    puVar3 = arg_8h + arg_ch;\n    uVar10 = 0;\n    puVar1 = arg_8h + arg_10h * 4;\n    puVar9 = arg_8h;\n    if (arg_8h < puVar1) {\n        do {\n            iVar4 = 0x15ae;\n            do {\n                iVar6 = uVar5 + puVar9[2];\n                iVar7 = iVar6 + puVar9[1];\n                puVar8 = puVar9 + arg_10h * arg_14h * 4;\n                uVar5 = iVar7 + *puVar9;\n                uVar10 = uVar10 + iVar6 + iVar7 + uVar5;\n                puVar9 = puVar8;\n                if (puVar3 <= puVar8) {\n                    arg_8h = arg_8h + arg_14h * 4;\n                    puVar9 = arg_8h;\n                }\n                iVar4 = iVar4 + -3;\n            } while ((iVar4 != 0) && (arg_8h < puVar1));\n            uVar5 = (uVar5 & 0xffff) + (uVar5 >> 0x10) * 0xf;\n            uVar10 = (uVar10 & 0xffff) + (uVar10 >> 0x10) * 0xf;\n        } while (arg_8h < puVar1);\n        if (0xfff0 < uVar5) {\n            uVar5 = uVar5 - 0xfff1;\n        }\n    }\n    uVar10 = (uVar10 >> 0x10) * 0xf + (uVar10 & 0xffff);\n    if (0xfff0 < uVar10) {\n        uVar10 = uVar10 - 0xfff1;\n    }\n    uVar5 = uVar10 << 0x10 | uVar5;\n    dVar2 = uVar5;\n    if (uVar5 < 0) {\n        dVar2 = dVar2 + *0xc4bac8;\n    }\n    return dVar2;\n}\n",
        "token_count": 604
    },
    "00b91290": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b91290(int32_t arg_8h, int32_t wParam, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t lpRect;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t lpPoint;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00b92612(arg_8h);\n    iVar1 = **(*0xc56810 + iVar1 * 4);\n    if (*(iVar1 + 0x14) == 0) {\n        if (arg_8h == wParam) {\n            (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &lpRect);\n            (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n            (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n            if ((((lpRect <= lpPoint) && (lpPoint <= var_10h)) && (var_14h <= var_4h)) && (var_4h <= var_ch))\n            goto code_r0x00b912e6;\n        }\n        uVar2 = (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x20, wParam, arg_14h << 0x10 | arg_10h & 0xffff);\n    }\n    else {\ncode_r0x00b912e6:\n        fcn.00c1a779(*(iVar1 + 0x10));\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 374
    },
    "00b9189b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b9189b(uint hDlg, uint32_t arg_ch, uint lParam, int32_t arg_14h)\n\n{\n    *0xc567d8 = fcn.00b92612(hDlg);\n    if ((arg_ch == 0) || (*(**(*0xc56810 + *0xc567d8 * 4) + 0x18) == 0)) {\n        *0xc567d8 = -1;\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 6, arg_14h << 0x10 | arg_ch & 0xffff, lParam);\n    return;\n}\n",
        "token_count": 146
    },
    "00b9201b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b9201b(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    iVar2 = **(*0xc56810 + arg_8h * 4);\n    fcn.00b91b41(iVar2, 0);\n    if (*(iVar2 + 0x18) != 0) {\n        (*_sym.imp.USER32.dll_DestroyAcceleratorTable)(*(iVar2 + 0x18));\n        *(iVar2 + 0x18) = 0;\n    }\n    var_4h = 3;\n    iVar3 = *0xc56834;\n    if (2 < *0xc56834) {\n        do {\n            arg_8h_00 = **(*0xc56824 + var_4h * 4);\n            if ((arg_8h_00 != NULL) && (arg_8h_00[1] == *(iVar2 + 4))) {\n                cVar1 = *(arg_8h_00 + 0x24);\n                if ((cVar1 == '\\n') || (cVar1 == '\\x10')) {\n                    if (arg_8h_00[0x10] != 0) {\n                        (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_00[0x10]);\n                        arg_8h_00[0x10] = 0;\n                    }\n                }\n                else if (cVar1 == '\\x13') {\n                    if (arg_8h_00[0xe] != 0) {\n                        (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_00[0xe]);\n                        arg_8h_00[0xe] = 0;\n                    }\n                    if (arg_8h_00[0xf] != 0) {\n                        (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_00[0xf]);\n                        arg_8h_00[0xf] = 0;\n                    }\n                }\n                else if (cVar1 == '\\x1b') {\n                    fcn.00b91b41(iVar2, arg_8h_00);\n                }\n                else if (cVar1 == '\\x1d') {\n                    fcn.00c1a6c4(arg_8h_00, iVar2);\n                }\n                if (arg_8h_00[0x19] != 0) {\n                    (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_00[0x19]);\n                    arg_8h_00[0x19] = 0;\n                }\n                if (arg_8h_00[0x1a] != 0) {\n                    (*_sym.imp.USER32.dll_DestroyIcon)(arg_8h_00[0x1a]);\n                    arg_8h_00[0x1a] = 0;\n                }\n                if (arg_8h_00[0x11] != 0) {\n                    (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_00[0x11]);\n                    arg_8h_00[0x11] = 0;\n                }\n                if (arg_8h_00[0x14] != 0) {\n                    (*_sym.imp.USER32.dll_DestroyWindow)(arg_8h_00[0x14]);\n                    arg_8h_00[0x14] = 0;\n                }\n                if (*arg_8h_00 != 0) {\n                    (*_sym.imp.USER32.dll_DestroyWindow)(*arg_8h_00);\n                    *arg_8h_00 = 0;\n                }\n                fcn.00b9246d(var_4h);\n                iVar3 = *0xc56834;\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h <= iVar3);\n    }\n    if (*(iVar2 + 0x20) != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(*(iVar2 + 0x20));\n    }\n    if (*(iVar2 + 0x24) != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(*(iVar2 + 0x24));\n    }\n    iVar2 = **(*0xc56810 + arg_8h * 4);\n    if (iVar2 != 0) {\n        fcn.00b910f0(iVar2);\n    }\n    **(*0xc56810 + arg_8h * 4) = 0;\n    *0xc567d0 = *0xc567d0 + -1;\n    if (arg_8h == *0xc5681c) {\n        *0xc5681c = -1;\n    }\n    if ((*0xc567d0 == 1) && (*0xc5681c = 0,  0 < *0xc56814)) {\n        do {\n            if (**(*0xc56810 + *0xc5681c * 4) != 0) break;\n            *0xc5681c = *0xc5681c + 1;\n        } while (*0xc5681c < *0xc56814);\n    }\n    if (*0xc567d0 == 0) {\n        (*_sym.imp.USER32.dll_KillTimer)(0, *0xc567d4);\n        *0xc567d4 = 0;\n    }\n    while ((*0xc56814 != 0 && (**(*0xc56810 + -4 + *0xc56814 * 4) == 0))) {\n        fcn.00b93532();\n    }\n    return;\n}\n",
        "token_count": 1270
    },
    "00b92344": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b92344(uint *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    uint uVar5;\n    int32_t lpPoint;\n    int32_t var_4h;\n    \n    uVar5 = *arg_8h;\n    lpPoint = in_ECX;\n    var_4h = in_ECX;\n    (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n    arg_8h[0x5b] = lpPoint;\n    arg_8h[0x5c] = var_4h;\n    (*_sym.imp.USER32.dll_ScreenToClient)(uVar5, &lpPoint);\n    if ((lpPoint != arg_8h[0x5d]) || (var_4h != arg_8h[0x5e])) {\n        arg_8h[0x5d] = lpPoint;\n        arg_8h[0x5e] = var_4h;\n        if (0 < arg_ch) {\n            fcn.00c163d0(0xfffffff5, arg_8h, lpPoint, var_4h);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetAsyncKeyState;\n    uVar2 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(*(in_ECX + 0x18));\n    uVar2 = (uVar2 & 0xffff) >> 0xf;\n    uVar3 = (*pcVar1)(*(in_ECX + 0x1c));\n    uVar3 = (uVar3 & 0xffff) >> 0xf;\n    if (((uVar2 == arg_8h[0x5f]) || (arg_ch < 1)) || (*(arg_8h + 0x6a) == '\\0')) goto code_r0x00b923be;\n    if (uVar2 == 0) {\n        fcn.00c163d0(0xfffffff8, arg_8h, lpPoint, var_4h);\n        if (*(arg_8h + 0x61) != '\\0') {\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(*arg_8h, 0xfffffff0);\n            if ((uVar4 & 0x1000000) == 0) {\n                uVar5 = 0xfffffff4;\n            }\n            else {\n                uVar5 = 0xfffffffa;\n            }\n            goto code_r0x00bcc256;\n        }\n    }\n    else {\n        uVar5 = 0xfffffff9;\ncode_r0x00bcc256:\n        fcn.00c163d0(uVar5, arg_8h, lpPoint, var_4h);\n    }\n    *(arg_8h + 0x61) = 0;\ncode_r0x00b923be:\n    if (arg_ch != 0) {\n        arg_8h[0x5f] = uVar2;\n    }\n    if ((uVar3 != arg_8h[0x60]) && (0 < arg_ch)) {\n        if (uVar3 == 0) {\n            uVar5 = 0xfffffff6;\n        }\n        else {\n            uVar5 = 0xfffffff7;\n        }\n        fcn.00c163d0(uVar5, arg_8h, lpPoint, var_4h);\n    }\n    if (arg_ch != 0) {\n        arg_8h[0x60] = uVar3;\n    }\n    return;\n}\n",
        "token_count": 818
    },
    "00b9246d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b9246d(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t **ppiVar2;\n    \n    if (arg_8h == *(in_ECX + 0x94)) {\n        *(in_ECX + 0x98) = 0xffffffff;\n        *(in_ECX + 0x94) = 0xffffffff;\n    }\n    iVar1 = **(*(in_ECX + 0x74) + arg_8h * 4);\n    if (iVar1 != 0) {\n        fcn.00b932fa(iVar1);\n    }\n    **(*(in_ECX + 0x74) + arg_8h * 4) = 0;\n    *(in_ECX + 0x80) = *(in_ECX + 0x80) + -1;\n    if (arg_8h == *(in_ECX + 0x84)) {\n        if (2 < arg_8h) {\n            ppiVar2 = *(in_ECX + 0x74) + arg_8h * 4;\n            do {\n                if (**ppiVar2 != 0) break;\n                arg_8h = arg_8h + -1;\n                ppiVar2 = ppiVar2 + -1;\n            } while (2 < arg_8h);\n        }\n        *(in_ECX + 0x84) = arg_8h;\n    }\n    while ((3 < *(in_ECX + 0x78) && (**(*(in_ECX + 0x74) + -4 + *(in_ECX + 0x78) * 4) == 0))) {\n        *(in_ECX + 0x78) = *(in_ECX + 0x78) + -1;\n        fcn.00bb106c(*(*(in_ECX + 0x74) + *(in_ECX + 0x78) * 4));\n        *(*(in_ECX + 0x74) + *(in_ECX + 0x78) * 4) = 0;\n    }\n    return;\n}\n",
        "token_count": 475
    },
    "00b92c18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b92c18(int32_t **arg_8h)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    uint *puVar3;\n    code *pcVar4;\n    code *pcVar5;\n    char cVar6;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    int32_t in_ECX;\n    int32_t *arg_ch;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t **arg_8h_00;\n    int32_t **ppiVar9;\n    int32_t iVar10;\n    int32_t *arg_8h_01;\n    int32_t *arg_10h;\n    int32_t **arg_ch_00;\n    int32_t *piVar11;\n    int32_t *piStack100;\n    int32_t *piStack96;\n    int32_t aiStack92 [2];\n    int32_t **ppiStack84;\n    uint uStack68;\n    uint auStack64 [4];\n    int32_t *piStack48;\n    \n    arg_10h = aiStack92;\n    ppiVar9 = &piStack96;\n    arg_8h_00 = arg_8h;\n    cVar6 = fcn.00b92402(arg_8h, ppiVar9, arg_10h);\n    pcVar5 = _sym.imp.USER32.dll_SendMessageW;\n    pcVar4 = _sym.imp.COMCTL32.dll_ImageList_Destroy;\n    if (cVar6 == '\\0') {\n        return 0;\n    }\n    piVar11 = 0xffffffff;\n    arg_ch_00 = **(*(in_ECX + 0x60) + unaff_ESI * 4);\n    arg_8h_01 = **(*(in_ECX + 0x74) + unaff_EBX * 4);\n    uVar1 = *(arg_8h_01 + 0x24);\n    piStack96 = arg_8h_01;\n    if (uVar1 < 0x12) {\n        if (uVar1 == 0x11) {\n            arg_8h_00 = ppiVar9;\n            (*_sym.imp.USER32.dll_SendMessageW)(arg_8h_01[0xd], 0x1101, 0, arg_8h_01[4]);\n            goto code_r0x00b92cac;\n        }\n        if (uVar1 < 0xd) {\n            if (uVar1 == 0xc) {\n                iVar10 = 3;\n                arg_8h_00 = ppiVar9;\n                if (2 < *(in_ECX + 0x84)) {\n                    do {\n                        iVar7 = **(*(in_ECX + 0x74) + iVar10 * 4);\n                        if ((iVar7 != 0) && (*(iVar7 + 0xc) == arg_8h_01[3])) {\n                            if ((*(iVar7 + 0x90) == '\\x0f') || (*(iVar7 + 0x90) == '\\x0e')) {\n                                fcn.00b9246d(iVar10);\n                            }\n                            else {\n                                *(iVar7 + 0xc) = 0;\n                            }\n                        }\n                        iVar10 = iVar10 + 1;\n                        arg_8h_00 = ppiVar9;\n                    } while (iVar10 <= *(in_ECX + 0x84));\n                }\n                if (arg_8h_01[3] == arg_ch_00[0x68]) {\n                    (*_sym.imp.USER32.dll_DestroyMenu)(arg_ch_00[0x68]);\n                    arg_8h_00[0x68] = NULL;\n                }\n                else {\n                    (*_sym.imp.USER32.dll_DestroyMenu)(arg_8h_01[3]);\n                }\n                goto code_r0x00b92cac;\n            }\n            if (1 < uVar1) {\n                iVar10 = 3;\n                if (uVar1 < 4) {\n                    if ((0 < arg_ch_00[0x71]) && (arg_8h == arg_ch_00[0x71])) {\n                        arg_ch_00[0x71] = NULL;\n                    }\n                }\n                else {\n                    if (uVar1 == 10) {\n                        arg_8h_00 = ppiVar9;\n                        for (iVar10 = *(in_ECX + 0x84); piStack96 = arg_8h_01,  2 < iVar10; iVar10 = iVar10 + -1) {\n                            iVar7 = **(*(in_ECX + 0x74) + iVar10 * 4);\n                            if ((iVar7 != 0) && (*(iVar7 + 0x90) == '\\v')) {\n                                fcn.00b92c18(iVar10);\n                            }\n                            arg_8h_01 = piStack96;\n                        }\n                        arg_ch_00[0x62] = NULL;\n                        arg_ch_00[99] = piVar11;\n                        arg_ch_00[100] = piVar11;\n                        arg_ch_00[0x65] = NULL;\n                        *(arg_ch_00 + 0x66) = 0;\n                        (*_sym.imp.USER32.dll_DestroyWindow)(*arg_8h_01);\n                        if (arg_8h_01[0x10] != 0) {\n                            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_01[0x10]);\n                        }\n                        goto code_r0x00b92cac;\n                    }\n                    if (uVar1 == 0xb) {\n                        arg_ch = arg_ch_00[100];\n                        (*_sym.imp.USER32.dll_SendMessageW)(arg_ch_00[0x62], 0x1308, *(arg_8h_01 + 0x93), 0);\n                        iVar7 = fcn.00b925db(piVar11[0x62]);\n                        iVar7 = *(**(*(in_ECX + 0x74) + iVar7 * 4) + 0x40);\n                        arg_8h_00 = arg_ch_00;\n                        if ((iVar7 != 0) && (*(arg_8h_01 + 0x22) != piVar11)) {\n                            (*_sym.imp.COMCTL32.dll_ImageList_Remove)(iVar7, *(arg_8h_01 + 0x22));\n                            arg_8h_00 = arg_ch_00;\n                        }\n                        if (2 < *(in_ECX + 0x84)) {\n                            do {\n                                iVar7 = **(*(in_ECX + 0x74) + iVar10 * 4);\n                                if ((iVar7 != 0) && (uVar1 = *(iVar7 + 0x93),  uVar1 != 0xff)) {\n                                    if ((uVar1 == *(arg_8h_01 + 0x93)) && (*(iVar7 + 0x90) != '\\v')) {\n                                        fcn.00b92c18(iVar10);\n                                    }\n                                    else {\n                                        if (*(arg_8h_01 + 0x93) < uVar1) {\n                                            *(iVar7 + 0x93) = uVar1 - 1;\n                                        }\n                                        iVar7 = **(*(in_ECX + 0x74) + iVar10 * 4);\n                                        if ((((*(iVar7 + 0x90) == '\\v') && (-1 < *(arg_8h_01 + 0x22))) &&\n                                            (iVar2 = *(iVar7 + 0x88),  -1 < iVar2)) && (*(arg_8h_01 + 0x22) < iVar2)) {\n                                            uStack68 = 2;\n                                            *(iVar7 + 0x88) = iVar2 + -1;\n                                            piStack48 = *(**(*(in_ECX + 0x74) + iVar10 * 4) + 0x88);\n                                            (*_sym.imp.USER32.dll_SendMessageW)\n                                                      (arg_8h_00[0x62], 0x133d, \n                                                       *(**(*(in_ECX + 0x74) + iVar10 * 4) + 0x93), &uStack68);\n                                        }\n                                    }\n                                }\n                                iVar10 = iVar10 + 1;\n                            } while (iVar10 <= *(in_ECX + 0x84));\n                        }\n                        if (*(arg_8h_01 + 0x93) == arg_ch) {\n                            if (arg_ch == arg_8h_00[99]) {\ncode_r0x00bcc7d7:\n                                arg_ch = arg_ch - 1;\n                            }\n                        }\n                        else {\n                            arg_8h_00[100] = piVar11;\n                            if (*(arg_8h_01 + 0x93) < arg_ch) goto code_r0x00bcc7d7;\n                        }\n                        *(arg_8h_01 + 0x93) = 0xff;\n                        arg_ch_00 = arg_8h_00;\n                        fcn.00c1b958(arg_8h_00, arg_ch);\n                        arg_8h_00[99] = arg_8h_00[99] + -1;\n                        arg_8h_00[0x65] = NULL;\n                        goto code_r0x00b92cac;\n                    }\n                }\n            }\n        }\n        else if (0xd < uVar1) {\n            if (uVar1 < 0x10) {\n                if (uVar1 == 0xe) {\n                    uStack68 = 0x30;\n                    fcn.00bb3020(auStack64, 0, 0x2c);\n                    auStack64[0] = 4;\n                    iVar10 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(arg_8h_01[3], arg_8h, 0, &uStack68);\n                    if (((iVar10 != 0) && (piStack96 = piStack48,  piStack48 != NULL)) &&\n                       (ppiVar9 = 0x3,  piVar11 = piStack48,  2 < *(in_ECX + 0x84))) {\n                        do {\n                            iVar10 = **(*(in_ECX + 0x74) + ppiVar9 * 4);\n                            if (((iVar10 != 0) && (*(iVar10 + 0xc) == piVar11)) && (*(iVar10 + 0x90) == '\\x0f')) {\n                                arg_8h_00 = ppiVar9;\n                                fcn.00b9246d(ppiVar9);\n                                piVar11 = piStack100;\n                            }\n                            ppiVar9 = ppiVar9 + 1;\n                        } while (ppiVar9 <= *(in_ECX + 0x84));\n                    }\n                }\n                iVar10 = (*_sym.imp.USER32.dll_DeleteMenu)(arg_8h_01[3], arg_8h, 0);\n                if (iVar10 == 0) {\n                    (*_sym.imp.USER32.dll_DeleteMenu)(arg_8h_00[0x67], arg_8h, 0);\n                }\n                if ((arg_8h_00[0x67] != NULL) &&\n                   (iVar10 = (*_sym.imp.USER32.dll_GetMenuItemCount)(arg_8h_00[0x67]),  iVar10 == 0)) {\n                    (*_sym.imp.USER32.dll_SetMenu)(*arg_8h_00, 0);\n                    (*_sym.imp.USER32.dll_DestroyMenu)(arg_8h_00[0x67]);\n                    arg_8h_00[0x67] = NULL;\n                }\n                (*_sym.imp.USER32.dll_DrawMenuBar)(*arg_8h_00);\n                goto code_r0x00b92cac;\n            }\n            if (uVar1 == 0x10) {\n                if (arg_8h_01[0x10] != 0) {\n                    (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_01[0x10]);\n                }\n                iVar10 = 3;\n                if (2 < *(in_ECX + 0x84)) {\n                    do {\n                        iVar7 = **(*(in_ECX + 0x74) + iVar10 * 4);\n                        if (((iVar7 != 0) && (*(iVar7 + 0x34) == *arg_8h_01)) && (*(iVar7 + 0x90) == '\\x11')) {\n                            fcn.00b9246d(iVar10);\n                        }\n                        iVar10 = iVar10 + 1;\n                    } while (iVar10 <= *(in_ECX + 0x84));\n                }\n            }\n        }\n    }\n    else if (uVar1 == 0x13) {\n        if (arg_8h_01[0xe] != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_01[0xe]);\n        }\n        if (arg_8h_01[0xf] != 0) {\n            (*pcVar4)(arg_8h_01[0xf]);\n        }\n        iVar10 = 3;\n        if (2 < *(in_ECX + 0x84)) {\n            do {\n                iVar7 = **(*(in_ECX + 0x74) + iVar10 * 4);\n                if ((((iVar7 != 0) && (*(iVar7 + 4) == ppiVar9[1])) && (*(iVar7 + 0x90) == '\\x14')) &&\n                   (*(iVar7 + 0x34) == *arg_8h_01)) {\n                    fcn.00b92c18(iVar10);\n                }\n                iVar10 = iVar10 + 1;\n            } while (iVar10 <= *(in_ECX + 0x84));\n        }\n    }\n    else {\n        if (uVar1 == 0x14) {\n            ppiStack84 = arg_8h;\n            aiStack92[0] = 1;\n            ppiVar8 = (*_sym.imp.USER32.dll_SendMessageW)(arg_8h_01[0xd], 0x1053, 0xffffffff, aiStack92);\n            if (ppiVar8 == arg_8h_00) {\n                return 0;\n            }\n            arg_8h_00 = ppiVar9;\n            (*pcVar5)(arg_8h_01[0xd], 0x1008, ppiVar8, 0);\n            goto code_r0x00b92cac;\n        }\n        if (uVar1 == 0x16) {\n            iVar10 = 3;\n            if (2 < *(in_ECX + 0x84)) {\n                do {\n                    piVar11 = **(*(in_ECX + 0x74) + iVar10 * 4);\n                    if (((piVar11 != NULL) && (piVar11[1] == arg_ch_00[1])) &&\n                       ((*(piVar11 + 0x24) == '\\x03' && (*piVar11 == arg_8h_01[0xd])))) {\n                        puVar3 = **(*(in_ECX + 0x74) + iVar10 * 4);\n                        (*_sym.imp.USER32.dll_MoveWindow)\n                                  (*puVar3, *(puVar3 + 0x22), *(puVar3 + 0x8a), *(puVar3 + 0x23), *(puVar3 + 0x8e), 0);\n                        break;\n                    }\n                    iVar10 = iVar10 + 1;\n                } while (iVar10 <= *(in_ECX + 0x84));\n            }\n        }\n        else if (uVar1 == 0x1b) {\n            fcn.00b91b41(arg_ch_00, arg_8h_01);\n        }\n        else if (uVar1 == 0x1d) {\n            arg_8h_00 = ppiVar9;\n            fcn.00c1a6c4(arg_8h_01, arg_ch_00);\n            goto code_r0x00b92cac;\n        }\n    }\n    arg_8h_00 = ppiVar9;\n    (*_sym.imp.USER32.dll_DestroyWindow)(*arg_8h_01);\ncode_r0x00b92cac:\n    if (arg_8h_01[0x11] != 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_01[0x11]);\n    }\n    if (arg_8h_01[0x19] != 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_01[0x19]);\n    }\n    if (arg_8h_01[0x1a] != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(arg_8h_01[0x1a]);\n    }\n    if (arg_8h_01[0x14] != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(arg_8h_01[0x14]);\n    }\n    if (arg_ch_00 == arg_8h_00[7]) {\n        arg_8h_00[7] = arg_10h;\n    }\n    fcn.00b9246d(arg_ch_00);\n    return 1;\n}\n",
        "token_count": 3829
    },
    "00b92f66": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b92f66(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (arg_8h != 0) {\n        uVar1 = fcn.00b92612(arg_8h);\n        *(in_ECX + 0x6c) = uVar1;\n    }\n    *(**(*(in_ECX + 0x60) + *(in_ECX + 0x6c) * 4) + 0x68) = 0;\n    return;\n}\n",
        "token_count": 127
    },
    "00b93114": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00b93114(void)\n\n{\n    int32_t **ppiVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    bool bVar5;\n    \n    while (*0xc56814 != 0) {\n        puVar2 = **(*0xc56810 + -4 + *0xc56814 * 4);\n        if (puVar2 == NULL) {\n            fcn.00b93532();\n        }\n        else {\n            (*_sym.imp.USER32.dll_DestroyWindow)(*puVar2);\n        }\n    }\n    fcn.00b93553();\n    while (*0xc56840 != 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(*(**0xc5683c + 8));\n        piVar4 = *0xc5683c;\n        if (*0xc5683c != NULL) {\n            ppiVar1 = *0xc5683c + 2;\n            bVar5 = *0xc5683c != NULL;\n            *0xc5683c = *ppiVar1;\n            if (bVar5) {\n                fcn.00b932af(piVar4);\n            }\n            if (*0xc5683c == NULL) {\n                *0xc56838 = 0;\n            }\n            else {\n                (*0xc5683c)[1] = 0;\n            }\n            *0xc56840 = *0xc56840 + -1;\n        }\n    }\n    while (*0xc567dc != 0) {\n        iVar3 = **0xc567e0;\n        fcn.00b9467d();\n        if (iVar3 != 0) {\n            fcn.00b94665();\n        }\n    }\n    return;\n}\n",
        "token_count": 386
    },
    "00b932fa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00b932fa(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 0x78) != 0) {\n        fcn.00b97b3d(*(param_1 + 0x78));\n        *(param_1 + 0x78) = 0;\n    }\n    iVar1 = *(param_1 + 0x7c);\n    if (iVar1 < 0xc) {\n        if (iVar1 == 0xb) {\n            fcn.00bb106c(*(*(param_1 + 0x70) + 4));\n            fcn.00bb106c(*(param_1 + 0x70));\n            goto code_r0x00b9332d;\n        }\n        if (iVar1 == 5) {\n            if (*(param_1 + 0x70) != 0) {\n                fcn.00b98e34(*(param_1 + 0x70));\n            }\n            goto code_r0x00b9332d;\n        }\n        if (iVar1 != 8) {\n            if (iVar1 != 10) goto code_r0x00b9332d;\n            iVar1 = *(param_1 + 0x70);\n            goto joined_r0x00bcd233;\n        }\n        if (*(param_1 + 0x70) == 0) goto code_r0x00b9332d;\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*(param_1 + 0x70));\n        iVar1 = *(param_1 + 0x70);\n    }\n    else {\n        if (iVar1 == 0xc) {\n            if (*(param_1 + 0x70) != 0) {\n                fcn.00be73f0(*(param_1 + 0x70));\n            }\n            goto code_r0x00b9332d;\n        }\n        if (iVar1 < 0xd) goto code_r0x00b9332d;\n        if (0xe < iVar1) {\n            if ((iVar1 == 0xf) && (*(param_1 + 0x70) != 0)) {\n                fcn.00be7405(*(param_1 + 0x70));\n            }\n            goto code_r0x00b9332d;\n        }\n        iVar1 = *(param_1 + 0x70);\njoined_r0x00bcd233:\n        if (iVar1 == 0) goto code_r0x00b9332d;\n        fcn.00b95a64();\n    }\n    fcn.00bb106c(iVar1);\ncode_r0x00b9332d:\n    *(param_1 + 0x70) = 0;\n    *(param_1 + 0x7c) = 1;\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00bb106c(param_1);\n    return param_1;\n}\n",
        "token_count": 673
    },
    "00b93416": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b93416(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar3 = 8;\n        if (7 < uVar1) {\n            uVar3 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar3;\n        uVar4 = fcn.00bb0ff6(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00bb1080(uVar4, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.00bb106c(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar4;\n    }\n    puVar2 = fcn.00bb0ff6(4);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        *puVar2 = *arg_8h;\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar2;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 378
    },
    "00b934c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b934c2(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar2 = 8;\n        if (7 < uVar1) {\n            uVar2 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar2;\n        uVar3 = fcn.00bb0ff6(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00bb1080(uVar3, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.00bb106c(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar3;\n    }\n    puVar4 = fcn.00bb0ff6(4);\n    if (puVar4 == NULL) {\n        puVar4 = NULL;\n    }\n    else {\n        *puVar4 = *arg_8h;\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar4;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 379
    },
    "00b935b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00b935b0(int32_t lpValueName, uint32_t arg_ch, ushort *arg_10h)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint in_ECX;\n    uint32_t uVar3;\n    uint phkResult;\n    uint32_t lpcbData;\n    \n    if ((lpValueName != 0) && (arg_10h != NULL)) {\n        uVar3 = 0;\n        *arg_10h = 0;\n        in_EAX = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n        if (in_EAX == 0) {\n            lpcbData = arg_ch * 2;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(in_ECX, lpValueName, 0, 0, arg_10h, &lpcbData);\n            if (iVar1 == 0) {\n                if (lpcbData >> 1 < arg_ch) {\n                    *(arg_10h + (lpcbData & 0xfffffffe)) = 0;\n                }\n                else {\n                    arg_10h[arg_ch - 1] = 0;\n                }\n                uVar3 = 1;\n                lpcbData = lpcbData >> 1;\n            }\n            uVar2 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(in_ECX);\n            return uVar2 & 0xffffff00 | uVar3;\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 352
    },
    "00b93778": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00b93778(uint arg_8h, uchar *arg_ch)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar1 = false;\n    fcn.00b977c7();\n    var_4ch = 0xc1f968;\n    var_48h = 0;\n    var_44h = 0;\n    var_40h = 0;\n    var_3ch._0_1_ = 0;\n    fcn.00b93d43(arg_8h);\n    *arg_ch = var_3ch;\n    fcn.00b94864();\n    fcn.00b97f41(L\">>>AUTOIT NO CMDEXECUTE<<<\");\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h._0_1_ = 0;\n    iVar2 = fcn.00b94f3d(*0xc562f8, 1);\n    if (iVar2 == 0) {\n        iVar2 = fcn.00bf97e5(var_20h, &arg_8h, &arg_ch);\n        if (iVar2 == 0) {\n            fcn.00bb2f95(arg_8h);\n            fcn.00b94faa();\n            bVar1 = true;\n        }\n        else {\n            fcn.00b94faa();\n        }\n    }\n    fcn.00b95a64();\n    fcn.00b981a7(0xc562f8);\n    fcn.00b993ea(&var_5ch);\n    fcn.00b97f41(L\"CMDLINERAW\");\n    fcn.00b98620(&var_20h, &var_30h, 1, 0);\n    fcn.00b95a64();\n    var_10h = 0x100;\n    var_8h = 0;\n    var_4h = 1;\n    fcn.00b97f41(L\"CMDLINE\");\n    arg_8h = fcn.00b98620(&var_20h, &var_10h, 0, 0);\n    fcn.00b95a64();\n    fcn.00b99a20();\n    iVar2 = var_44h;\n    fcn.00b977c7();\n    fcn.00b93ee2(&var_10h);\n    uVar4 = var_10h;\n    iVar3 = fcn.00bb313d(L\"/ErrorStdOut\", var_10h);\n    if (iVar3 == 0) {\n        *0xc56284 = 1;\n        iVar2 = iVar2 + -1;\n        fcn.00b93ee2(&var_10h);\n        uVar4 = var_10h;\n    }\n    iVar3 = fcn.00bb313d(L\"/AutoIt3OutputDebug\", uVar4);\n    if (iVar3 == 0) {\n        *0xc56283 = 1;\n        iVar2 = iVar2 + -1;\n        fcn.00b93ee2(&var_10h);\n        uVar4 = var_10h;\n    }\n    iVar3 = fcn.00bb313d(L\"/AutoIt3ExecuteLine\", uVar4);\n    if (iVar3 == 0) {\n        *0xc562e4 = 1;\n        *0xc562e0 = !bVar1;\n        fcn.00b94864();\n        fcn.00b93ee2(&var_10h);\n        fcn.00b981a7(&var_10h);\n        iVar2 = iVar2 + -2;\n        fcn.00b93ee2(&var_10h);\n        uVar4 = var_10h;\n    }\n    iVar3 = fcn.00bb313d(L\"/AutoIt3ExecuteScript\", uVar4);\n    if (iVar3 == 0) {\n        if (bVar1) {\n            *0xc562e0 = 0;\n        }\n        else {\n            *0xc562e0 = 3;\n        }\n        fcn.00b93ee2(&var_10h);\n        fcn.00b981a7(&var_10h);\n        iVar2 = iVar2 + -2;\n        fcn.00b93ee2(&var_10h);\n    }\n    if (*0xc562fc == 0) {\n        fcn.00b981a7(&var_10h);\n        iVar2 = iVar2 + -1;\n        fcn.00b93ee2(&var_10h);\n    }\n    if (iVar2 < 0) {\n        iVar2 = 0;\n    }\n    uVar4 = fcn.00b9942e();\n    fcn.00b991b0(uVar4, 1);\n    var_18h = 0;\n    var_14h = 1;\n    var_20h = iVar2;\n    fcn.00b99040(uVar4, &var_20h, 1);\n    fcn.00b99a20();\n    iVar3 = 0;\n    if (0 < iVar2) {\n        do {\n            fcn.00b993ea(&var_10h);\n            iVar3 = iVar3 + 1;\n            fcn.00b99040(uVar4, &var_20h, 1);\n            fcn.00b99a20();\n            fcn.00b93ee2(&var_10h);\n        } while (iVar3 < iVar2);\n    }\n    fcn.00b95a64();\n    fcn.00b99a20();\n    fcn.00b93f20();\n    var_3ch._0_1_ = 0;\n    fcn.00b94024();\n    fcn.00b95a64();\n    return;\n}\n",
        "token_count": 1445
    },
    "00b93a58": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00b93a58(void)\n\n{\n    code *pcVar1;\n    uint noname_0;\n    uint noname_0_00;\n    uint ARG_0;\n    uint var_30h;\n    code *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    char16_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = (*_sym.imp.USER32.dll_GetSysColorBrush)(0xf);\n    var_4h = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f00);\n    pcVar1 = _sym.imp.USER32.dll_LoadIconW;\n    *0xc562c0 = (*_sym.imp.USER32.dll_LoadIconW)(*0xc56278, 99);\n    *0xc562c8 = (*pcVar1)(*0xc56278, 0xa4);\n    *0xc562cc = (*pcVar1)(*0xc56278, 0xa2);\n    if (*(*0xc57428 + 0x1d) == '\\0') {\n        *0xc562c4 = fcn.00b948fe(noname_0, noname_0, 4);\n    }\n    else {\n        *0xc562c4 = (*_sym.imp.USER32.dll_LoadImageW)(*0xc56278, 99, 1, 0x10, 0x10, 0);\n    }\n    var_28h = 0;\n    var_24h = 0;\n    var_10h = 0;\n    var_20h = *0xc56278;\n    var_18h = var_4h;\n    var_1ch = *0xc562c0;\n    ARG_0 = 0x30;\n    var_30h = 0x23;\n    var_ch = L\"AutoIt v3\";\n    var_2ch = fcn.00b93633;\n    var_8h = *0xc562c4;\n    *0xc56274 = (*_sym.imp.USER32.dll_RegisterClassExW)(&ARG_0);\n    fcn.00b93041(noname_0_00, *0xc562c0, *0xc562c4);\n    return;\n}\n",
        "token_count": 539
    },
    "00b93b4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_6h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00b93b4c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint noname_2;\n    uint16_t unaff_DI;\n    uchar auStackY65584 [65500];\n    uint uStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uint uStackY72;\n    uint *puStackY68;\n    uint var_2ch;\n    uint *var_1ch;\n    uchar *lpFilePart;\n    uchar auStack12 [2];\n    uint var_6h;\n    \n    stack0xfffffff8 = 0xb93b59;\n    fcn.00bc1b90();\n    auStack12 = unaff_DI;\n    fcn.00b977c7();\n    _auStack12 = auStack12;\n    lpFilePart = &stack0xfffeffd0;\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n    fcn.00b93778(arg_8h, &stack0xfffffff5);\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 != 0) {\n        (*_sym.imp.USER32.dll_MessageBoxA)();\n        goto code_r0x00b93c87;\n    }\n    if (*0xc562e0 == 0) {\n        *0xc5627c = 0xffffffff;\n    }\n    else {\n        if (*0xc562e0 == 1) {\n            var_1ch = 0xffffffff;\n            fcn.00b97373(1, *0xc562e8, 0xffffffff);\n            *0xc57292 = *0xc56284;\n        }\n        else {\n            var_1ch = &fcn.00b93b4c::var_6h;\n            cVar1 = fcn.00b973e5(0xc562f8, 0xc562e0, noname_2, var_1ch);\n            if (cVar1 == '\\0') {\n                *0xc5627c = 1;\n                goto code_r0x00b93c7a;\n            }\n            *0xc562e4 = *0xc57290;\n            _auStack12 = _auStack12 & 0xffffff | *0xc57291 << 0x18;\n            (*_sym.imp.KERNEL32.dll_GetFullPathNameW)();\n            fcn.00b97d2c(lpFilePart);\n            lpFilePart = _auStack12 >> 0x10 & 0xff;\n        }\n        iVar2 = fcn.00ba0a8d(0xc562f8, *0xc562e0);\n        if (iVar2 != 0) {\n            fcn.00b9743b();\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)();\n            *0xc5627c = 1;\n            goto code_r0x00b93c87;\n        }\n        if (var_6h._1_1_ == '\\x01') {\n            cVar1 = fcn.00bf4c03();\n            if ((cVar1 != '\\0') || (auStack12[1] != '\\0')) goto code_r0x00b93c38;\n            fcn.00b94864();\n            fcn.00b97f41(0xc45d40);\n            if (lpFilePart == '\\0') {\n                fcn.00b97e0b(arg_8h);\n            }\n            else {\n                fcn.00b97e0b(0xc49424);\n                fcn.00b97c8e(0xc562f8);\n                puStackY68 = 0xbcd55b;\n                fcn.00b97e0b(0xc49424);\n            }\n            puStackY68 = var_1ch;\n            uStackY72 = 0xc562f8;\n            uStackY76 = 0xc49428;\n            uStackY80 = 0xbcd580;\n            uStackY80 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n            uStackY84 = 0xbcd587;\n            (*_sym.imp.SHELL32.dll_ShellExecuteW)();\n            fcn.00b95a64();\n        }\n        else {\ncode_r0x00b93c38:\n            fcn.00b93a58();\n            fcn.00b939e7();\n            if (*0xc562e4 == '\\0') {\n                fcn.00b943db();\n            }\n            fcn.00ba0b30(1);\n            if (*0xc562e4 == '\\0') {\n                fcn.00b944cb();\n            }\n        }\n        fcn.00b9743b();\n    }\ncode_r0x00b93c7a:\n    (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)();\ncode_r0x00b93c87:\n    fcn.00b95a64();\n    return;\n}\n",
        "token_count": 1150
    },
    "00b93d43": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00b93d43(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    bool bVar3;\n    int16_t *piVar4;\n    uint *extraout_ECX;\n    int32_t iVar5;\n    int32_t arg_8h_00;\n    int16_t aiStackY8240 [4100];\n    uint uStackY40;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    fcn.00bc1b90();\n    fcn.00b93f20();\n    *extraout_ECX = 0;\n    *(extraout_ECX + 9) = 0;\n    if (*arg_8h == 0x21) {\n        arg_8h = arg_8h + 1;\n        *(extraout_ECX + 9) = 1;\n    }\n    fcn.00b97d2c(arg_8h);\n    iVar5 = 0;\n    bVar3 = false;\n    while( true ) {\n        piVar4 = fcn.00b97b52(iVar5);\n        if ((*piVar4 != 0x20) && (*piVar4 != 9)) break;\n        iVar5 = iVar5 + 1;\n    }\ncode_r0x00b93db8:\n    var_8h = 0;\n    bVar2 = false;\n    arg_8h_00 = iVar5;\ncode_r0x00b93dbb:\n    do {\n        piVar4 = fcn.00b97b52(arg_8h_00);\n        iVar5 = arg_8h_00 + 1;\n        iVar1 = *piVar4;\n        if ((iVar1 == 0) || (0xfff < var_8h)) {\n            if ((var_8h != 0) || ((bVar2 || (bVar3)))) {\n                iVar5 = var_8h;\n                if (bVar3) {\n                    while (iVar5 = iVar5 + -1,  arg_8h_00 <= iVar5) {\n                        *(&stack0xffffdfd2 + iVar5 * 2) = *(&stack0xffffdfd0 + iVar5 * 2);\n                    }\n                    var_8h = var_8h + 1;\n                    *(&stack0xffffdfd0 + arg_8h_00 * 2) = 0x22;\n                }\n                *(&stack0xffffdfd0 + var_8h * 2) = 0;\n                fcn.00b97f41(&stack0xffffdfd0);\n                var_20h = 0xb93eb6;\n                fcn.00b93f84(&fcn.00b93d43::var_20h);\n                var_20h = 0xb93ebe;\n                fcn.00b95a64();\n            }\n            return;\n        }\n        if ((iVar1 == 0x20) || (iVar1 == 9)) {\n            if (!bVar3) break;\n        }\n        else if (iVar1 == 0x22) {\n            piVar4 = fcn.00b97b52(iVar5);\n            if (*piVar4 == 0x22) {\n                if (bVar3) {\n                    *(&stack0xffffdfd0 + var_8h * 2) = 0x22;\n                    var_8h = var_8h + 1;\n                }\n                else {\n                    bVar2 = true;\n                    bVar3 = false;\n                }\n                arg_8h_00 = arg_8h_00 + 2;\n            }\n            else if (bVar3) {\n                bVar3 = false;\n                arg_8h_00 = iVar5;\n            }\n            else {\n                bVar3 = true;\n                arg_8h_00 = iVar5;\n            }\n            goto code_r0x00b93dbb;\n        }\n        *(&stack0xffffdfd0 + var_8h * 2) = iVar1;\n        var_8h = var_8h + 1;\n        arg_8h_00 = iVar5;\n    } while( true );\n    *(&stack0xffffdfd0 + var_8h * 2) = 0;\n    fcn.00b97f41(&stack0xffffdfd0);\n    var_20h = 0xb93e4b;\n    fcn.00b93f84(&fcn.00b93d43::var_20h);\n    var_20h = 0xb93e53;\n    fcn.00b95a64();\n    while( true ) {\n        uStackY40 = 0xb93e65;\n        piVar4 = fcn.00b97b52(iVar5);\n        if ((*piVar4 != 0x20) && (uStackY40 = 9,  *piVar4 != 9)) break;\n        iVar5 = iVar5 + 1;\n    }\n    goto code_r0x00b93db8;\n}\n",
        "token_count": 1168
    },
    "00b93f20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b93f20(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(param_1 + 8) == 0) {\n        *(param_1 + 8) = 0;\n    }\n    else {\n        do {\n            puVar1 = *(*(param_1 + 4) + uVar2 * 4);\n            if (puVar1 != NULL) {\n                *puVar1[3] = *puVar1[3] + -1;\n                if (*puVar1[3] == 0) {\n                    fcn.00bb106c(*puVar1);\n                    fcn.00bb106c(puVar1[3]);\n                }\n                fcn.00bb106c(puVar1);\n            }\n            *(*(param_1 + 4) + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(param_1 + 8));\n        *(param_1 + 8) = 0;\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "00b93f84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b93f84(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar2 = *(in_ECX + 0xc) * 2;\n        uVar3 = 8;\n        if (7 < uVar2) {\n            uVar3 = uVar2;\n        }\n        *(in_ECX + 0xc) = uVar3;\n        uVar4 = fcn.00bb0ff6(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00bb1080(uVar4, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.00bb106c(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar4;\n    }\n    puVar5 = fcn.00bb0ff6(0x10);\n    if (puVar5 == NULL) {\n        puVar5 = NULL;\n    }\n    else {\n        *puVar5 = *arg_8h;\n        puVar5[1] = arg_8h[1];\n        puVar5[2] = arg_8h[2];\n        piVar1 = arg_8h[3];\n        puVar5[3] = piVar1;\n        *piVar1 = *piVar1 + 1;\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar5;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 458
    },
    "00b940c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00b940c7(void)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    int32_t *piVar2;\n    uint uVar3;\n    \n    piVar2 = 0xc56a44;\n    do {\n        if (*piVar2 != 0) {\n            fcn.00bf268b(*piVar2);\n            *piVar2 = 0;\n        }\n        piVar2 = piVar2 + 1;\n    } while (piVar2 < 0xc57260);\n    fcn.00b94213(0xc56a2c, 0xc56a30);\n    uVar3 = 0xc56a38;\n    fcn.00b94213(0xc56a38, 0xc56a3c);\n    while (*0xc5691c != 0) {\n        iVar1 = **0xc56920;\n        fcn.00b9467d(uVar3);\n        if (iVar1 != 0) {\n            fcn.00b94665(extraout_ECX);\n        }\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "00b9410d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b9410d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ushort auStack1220 [116];\n    uint uStack988;\n    uint uStack984;\n    uint uStack980;\n    uint uStack976;\n    uchar auStack964 [960];\n    \n    if (*0xc56288 != '\\0') {\n        fcn.00b97b76(0x104);\n        if (*0xc56287 == '\\x01') {\n            (*_sym.imp.USER32.dll_LoadStringW)(*0xc56278, 0x65, auStack1220, 0x7f);\n        }\n        else {\n            auStack1220[0] = 0;\n        }\n        fcn.00b97d2c(auStack1220);\n        if (*0xc56285 == '\\0') {\n            if (*(param_1 + 0x60) == 0) {\n                fcn.00b97c8e(0xc562d0);\n            }\n            else {\n                fcn.00b981a7(param_1 + 0x5c);\n            }\n        }\n        else {\n            fcn.00b97c8e(0xc562d0);\n            uVar2 = *0xc56404;\n            iVar1 = fcn.00b97143(*0xc56404);\n            if (iVar1 != 0) {\n                fcn.00b97e0b(L\"\\nLine: \");\n                uVar2 = fcn.00b97143(uVar2);\n                fcn.00b97e0b(uVar2);\n            }\n        }\n        fcn.00bb3020(&uStack984, 0, 0x3b4);\n        uStack988 = 0x3a8;\n        uStack984 = *0xc562ac;\n        uStack980 = 1;\n        uStack976 = 4;\n        fcn.00b9463e(0x80);\n        fcn.00bb2ffc(auStack964, &stack0xfffffb24);\n        (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, &uStack988);\n        fcn.00b95a64();\n    }\n    return;\n}\n",
        "token_count": 499
    },
    "00b94213": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b94213(int32_t *arg_8h, char *arg_ch)\n\n{\n    if ((*arg_8h != 0) && (*arg_ch != '\\0')) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(*arg_8h);\n    }\n    *arg_8h = 0;\n    *arg_ch = '\\0';\n    return;\n}\n",
        "token_count": 86
    },
    "00b943db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b943db(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    uint uStack956;\n    uint uStack952;\n    uint uStack948;\n    \n    fcn.00bb3020(&uStack956, 0);\n    if (*(param_1 + 0x198) == 0) {\n        *(param_1 + 0x198) = *0xc562c4;\n    }\n    uVar1 = *0xc562c8;\n    if (*(param_1 + 0x1a4) == 0) {\n        *(param_1 + 0x1a4) = *0xc562c8;\n        *(param_1 + 0x1a8) = uVar1;\n    }\n    if (*(param_1 + 0x1b0) == 0) {\n        *(param_1 + 0x1b0) = *0xc562cc;\n    }\n    arg_8h = param_1 + 0x19c;\n    fcn.00b94213(arg_8h, param_1 + 0x1a0);\n    uStack956 = 3;\n    uStack952 = 0x401;\n    uStack948 = 0;\n    if (*(param_1 + 0x40) != 0) {\n        iVar2 = fcn.00bf3226(*(param_1 + 0x10), *(param_1 + 0x3c), param_1 + 0x1a0);\n        *arg_8h = iVar2;\n        if ((*(param_1 + 0x40) != 0) && (iVar2 != 0)) goto code_r0x00b94497;\n    }\n    *arg_8h = *(param_1 + 0x198);\ncode_r0x00b94497:\n    if (*0xc56288 == '\\x01') {\n        (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, &stack0xfffffc2c);\n    }\n    else {\n        (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(0);\n        *0xc56288 = '\\x01';\n    }\n    fcn.00b9410d();\n    return;\n}\n",
        "token_count": 516
    },
    "00b944cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b944cb(int32_t param_1)\n\n{\n    uint lpData;\n    uint var_3b4h;\n    uint var_3b0h;\n    \n    if (*0xc56288 != '\\0') {\n        *0xc56288 = '\\0';\n        *(param_1 + 0x19c) = 0;\n        fcn.00bb3020(&var_3b4h, 0, 0x3b4);\n        var_3b4h = *0xc562ac;\n        lpData = 0x3a8;\n        var_3b0h = 1;\n        (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(2, &lpData);\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "00b94531": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b94531(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint lpData;\n    uint var_3b8h;\n    uint var_3b4h;\n    uint var_3b0h;\n    uint var_3a8h;\n    \n    if (arg_ch != 1) {\n        return;\n    }\n    lpData = 0x3a8;\n    fcn.00bb3020(&var_3b8h, 0, 0x3b4);\n    fcn.00b9410d();\n    if (*0xc56288 == '\\0') goto code_r0x00b945b3;\n    var_3b8h = arg_8h;\n    var_3b4h = 1;\n    var_3b0h = 2;\n    if (*0xc56287 == '\\0') {\n        if (*(in_ECX + 9) == '\\0') {\n            if (*(in_ECX + 0x194) != '\\x01') goto code_r0x00b945b3;\ncode_r0x00b945d3:\n            *(in_ECX + 0x194) = 0;\n        }\n        else {\n            if (*(in_ECX + 0x195) == '\\0') {\n                var_3a8h = *(in_ECX + 0x1b0);\n                *(in_ECX + 0x195) = 1;\n                goto code_r0x00bcd6c0;\n            }\n            *(in_ECX + 0x195) = 0;\n        }\n        var_3a8h = *(in_ECX + 0x19c);\n    }\n    else {\n        if (*(in_ECX + 0x194) == '\\x01') goto code_r0x00b945d3;\n        var_3a8h = *(in_ECX + 0x1a8);\n        *(in_ECX + 0x194) = 1;\n    }\ncode_r0x00bcd6c0:\n    (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, &lpData);\ncode_r0x00b945b3:\n    (*_sym.imp.USER32.dll_KillTimer)(arg_8h, 1);\n    (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0x2ee, 0);\n    return;\n}\n",
        "token_count": 544
    },
    "00b945df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpPoint\n// WARNING: Variable defined which should be unmapped: y\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: lpmii\n// WARNING: Removing unreachable block (ram,0x00bcd766)\n// WARNING: Removing unreachable block (ram,0x00bcd782)\n// WARNING: Removing unreachable block (ram,0x00bcd76e)\n\nvoid __cdecl fcn.00b945df(uint hWnd, uint noname_1, uint noname_2, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_ECX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint arg_8h;\n    uint lpmii;\n    uint var_38h;\n    uint var_30h;\n    uint lpPoint;\n    uint y;\n    int32_t var_4h;\n    \n    lpmii = 0x30;\n    fcn.00bb3020(&fcn.00b945df::var_38h, 0, 0x2c);\n    var_4h = in_ECX[0x274];\n    uVar6 = 0;\n    uVar5 = 1;\n    if (arg_14h == 0x200) {\n        arg_8h = 0xfffffff5;\n        uVar5 = 0x40;\n    }\n    else if (arg_14h == 0x201) {\n        arg_8h = 0xfffffff9;\n    }\n    else if (arg_14h == 0x202) {\n        uVar5 = 2;\n        arg_8h = 0xfffffff8;\n    }\n    else if (arg_14h == 0x203) {\n        uVar5 = 4;\n        if (*(in_ECX + 10) != '\\0') {\n            iVar4 = 7;\n            var_38h = 1;\n            if (6 < var_4h) {\n                piVar3 = in_ECX + 0x74;\n                do {\n                    if (*piVar3 != NULL) {\n                        (*_sym.imp.USER32.dll_GetMenuItemInfoW)(**piVar3, iVar4, 0, &fcn.00b945df::lpmii);\n                    }\n                    iVar4 = iVar4 + 1;\n                    piVar3 = piVar3 + 1;\n                } while (iVar4 <= in_ECX[0x274]);\n            }\n        }\n        arg_8h = 0xfffffff3;\n    }\n    else if (arg_14h == 0x204) {\n        arg_8h = 0xfffffff7;\n        uVar5 = 8;\n    }\n    else if (arg_14h == 0x205) {\n        arg_8h = 0xfffffff6;\n        uVar5 = 0x10;\n    }\n    else {\n        if (arg_14h != 0x206) goto code_r0x00b9462c;\n        arg_8h = 0xfffffff2;\n        uVar5 = 0x20;\n    }\n    fcn.00b9406f(arg_8h);\n    uVar6 = uVar5;\ncode_r0x00b9462c:\n    pcVar2 = _sym.imp.USER32.dll_GetMenuItemCount;\n    pcVar1 = _sym.imp.USER32.dll_DeleteMenu;\n    if (((in_ECX[3] & uVar6) != 0) && (*0xc56286 != '\\0')) {\n        if (*(in_ECX + 1) == '\\0') {\n            (*_sym.imp.USER32.dll_DeleteMenu)(*in_ECX, 5, 0);\n            (*pcVar1)(*in_ECX, 4, 0);\n            (*pcVar1)(*in_ECX, 6, 0);\n            (*pcVar1)(*in_ECX, 3, 0);\n            *(in_ECX + 2) = 0;\n        }\n        else if (*(in_ECX + 2) == '\\0') {\n            iVar4 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*in_ECX);\n            if (0 < iVar4) {\n                in_ECX[0x274] = 4;\n                fcn.00bf26f9(0, 0xc1f910, 0xffffffff, 0xffffffff, 0);\n            }\n            in_ECX[0x274] = 3;\n            fcn.00bf26f9(0, in_ECX[0x1f], 0xffffffff, 0xffffffff, 0);\n            var_38h = 0;\n            in_ECX[0x274] = 5;\n            lpmii = 0xbcd828;\n            fcn.00bf26f9(0, 0xc1f910, 0xffffffff, 0xffffffff, 0);\n            lpmii = 0;\n            in_ECX[0x274] = 2;\n            fcn.00bf26f9(0, in_ECX[0x1b], 0xffffffff, 0xffffffff, 0);\n            in_ECX[0x274] = var_4h;\n            *(in_ECX + 2) = 1;\n        }\n        iVar4 = (*pcVar2)(*in_ECX);\n        if (0 < iVar4) {\n            if (*(in_ECX + 1) == '\\0') {\n                *(in_ECX + 6) = 0;\n            }\n            else if (*(in_ECX + 6) != '\\0') {\n                *0xc56287 = 1;\n                var_38h = 1;\n                (*_sym.imp.USER32.dll_SetMenuItemInfoW)(*in_ECX, 4, 0, &fcn.00b945df::lpmii);\n            }\n            (*_sym.imp.USER32.dll_GetCursorPos)(&fcn.00b945df::lpPoint);\n            (*_sym.imp.USER32.dll_SetForegroundWindow)(hWnd);\n            (*_sym.imp.USER32.dll_TrackPopupMenuEx)(*in_ECX, 0, lpPoint, y, hWnd, 0);\n            (*_sym.imp.USER32.dll_PostMessageW)(hWnd, 0, 0, 0);\n            fcn.00b9410d();\n        }\n    }\n    return;\n}\n",
        "token_count": 1460
    },
    "00b9469d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b9469d(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t *in_ECX;\n    \n    puVar2 = fcn.00bb0ff6(8);\n    uVar1 = *arg_8h;\n    puVar2[1] = 0;\n    *puVar2 = uVar1;\n    if (in_ECX[1] == 0) {\n        in_ECX[1] = puVar2;\n    }\n    else {\n        *(in_ECX[2] + 4) = puVar2;\n    }\n    *in_ECX = *in_ECX + 1;\n    in_ECX[2] = puVar2;\n    return;\n}\n",
        "token_count": 171
    },
    "00b94c95": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00b94c95(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0xc1fb14);\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"GetNativeSystemInfo\");\n            param_1[2] = iVar1;\n        }\n    }\n    return param_1[2] != 0;\n}\n",
        "token_count": 136
    },
    "00b94cc8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00b94cff)\n\nvoid __fastcall fcn.00b94cc8(uint *param_1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint hLibModule;\n    uint var_4h;\n    \n    cVar1 = fcn.00b94d94();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00b94d94();\n        pcVar2 = NULL;\n        if (cVar1 == '\\0') {\n            pcVar2 = 0xbcb752;\n        }\n        (*pcVar2)(*param_1);\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "00b94d13": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00b94d4a)\n\nuint * __fastcall fcn.00b94d13(uint *param_1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint hLibModule;\n    uint var_4h;\n    \n    *param_1 = 0;\n    cVar1 = fcn.00b94d61();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00b94d61();\n        pcVar2 = NULL;\n        if (cVar1 == '\\0') {\n            pcVar2 = 0xbcb752;\n        }\n        (*pcVar2)(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 163
    },
    "00b94d61": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00b94d61(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0xc1fb14);\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"Wow64DisableWow64FsRedirection\");\n            param_1[2] = iVar1;\n        }\n    }\n    return param_1[2] != 0;\n}\n",
        "token_count": 140
    },
    "00b94d94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00b94d94(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0xc1fb14);\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"Wow64RevertWow64FsRedirection\");\n            param_1[2] = iVar1;\n        }\n    }\n    return param_1[2] != 0;\n}\n",
        "token_count": 141
    },
    "00b94dd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b94dd0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_28h;\n    char var_24h [4];\n    uchar auStack36 [8];\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    uVar1 = fcn.00bb0ff6(0x10000);\n    fcn.00b9538e(uVar1);\n    iVar3 = 0;\n    do {\n        var_24h[iVar3 + -4] = *(iVar3 + 0xc35338);\n        auStack36[iVar3] = *(iVar3 + 0xc35340);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 8);\n    fcn.00bb1080(&var_18h, str.AU3_P_, 4);\n    if (in_ECX[3] != 0) {\n        if (arg_8h == '\\0') {\n            fcn.00bf9ba5();\n        }\n        else {\n            fcn.00b94fe9();\n        }\n    }\n    arg_8h = fcn.00b95027(*in_ECX);\n    while( true ) {\n        if (*(in_ECX + 5) == '\\0') {\n            uVar1 = 0x10000;\n        }\n        else {\n            uVar1 = 0x18;\n        }\n        var_8h = fcn.00b9506b(var_14h, 1, uVar1, *in_ECX);\n        if (var_8h < 0x18) break;\n        iVar3 = 0;\n        if (0 < var_8h + -0x14) {\n            iVar4 = var_14h + 2;\n            do {\n                iVar2 = 0;\n                do {\n                    if (var_24h[iVar2 + -4] != *(iVar4 + -2 + iVar2)) break;\n                    if (var_24h[iVar2 + -3] != *(iVar4 + -1 + iVar2)) {\n                        iVar2 = iVar2 + 1;\n                        break;\n                    }\n                    if (var_24h[iVar2 + -2] != *(iVar4 + iVar2)) {\n                        iVar2 = iVar2 + 2;\n                        break;\n                    }\n                    if (var_24h[iVar2 + -1] != *(iVar4 + 1 + iVar2)) {\n                        iVar2 = iVar2 + 3;\n                        break;\n                    }\n                    if (var_24h[iVar2] != *(iVar4 + 2 + iVar2)) {\n                        iVar2 = iVar2 + 4;\n                        break;\n                    }\n                    iVar2 = iVar2 + 5;\n                } while (iVar2 < 0x14);\n                if (iVar2 == 0x14) {\n                    fcn.00b95045(*in_ECX, arg_8h + 0x14 + iVar3, 0);\n                    fcn.00b9506b(&var_ch, 4, 1, *in_ECX);\n                    if (var_ch == 0x36304145) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 4;\n                    }\n                    goto code_r0x00b94ece;\n                }\n                iVar3 = iVar3 + 1;\n                iVar4 = iVar4 + 1;\n            } while (iVar3 < var_8h + -0x14);\n        }\n        if (*(in_ECX + 5) != '\\0') break;\n        arg_8h = arg_8h + -0x14 + var_8h;\n        fcn.00b95045(*in_ECX, 0xffffffec, 1);\n    }\n    uVar1 = 3;\ncode_r0x00b94ece:\n    fcn.00b95371();\n    return uVar1;\n}\n",
        "token_count": 902
    },
    "00b94f3d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00b94f3d(uint lpLibFileName, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00b94d13();\n    iVar1 = fcn.00bb548b(lpLibFileName, 0xc1fb24);\n    *in_ECX = iVar1;\n    if (iVar1 == 0) {\n        fcn.00b94faa();\n        fcn.00b94cc8();\n        iVar1 = 1;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(lpLibFileName, 0, 2);\n        in_ECX[3] = iVar1;\n        uVar2 = fcn.00b94cc8();\n        iVar1 = fcn.00b94dd0(uVar2 & 0xffffff00 | arg_ch == 1);\n        if (iVar1 == 0) {\n            fcn.00b9506b(&var_14h, 1, 0x10, *in_ECX);\n            fcn.00bf9393(&var_14h, 0x10, 0x99f2);\n            in_ECX[2] = 0;\n            iVar1 = fcn.00b95027(*in_ECX);\n            in_ECX[1] = iVar1;\n            iVar1 = 0;\n        }\n        else {\n            fcn.00b94faa();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 362
    },
    "00b95027": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00b95027(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t var_8h;\n    \n    if (*(in_ECX + 0x14) == '\\0') {\n        var_8h = fcn.00bb5e90(arg_8h);\n    }\n    else {\n        var_8h = in_ECX;\n        (**(**(in_ECX + 0x10) + 0x14))(*(in_ECX + 0x10), 0, 0, 1, &var_8h);\n    }\n    return var_8h;\n}\n",
        "token_count": 143
    },
    "00b95045": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00b95045(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    int32_t var_8h;\n    \n    if (*(in_ECX + 0x14) == '\\0') {\n        var_8h = fcn.00bb5a7d(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        var_8h = in_ECX;\n        (**(**(in_ECX + 0x10) + 0x14))(*(in_ECX + 0x10), arg_ch, arg_ch >> 0x1f, arg_10h, &var_8h);\n    }\n    return var_8h;\n}\n",
        "token_count": 172
    },
    "00b9506b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b9506b(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (*(in_ECX + 0x14) == '\\0') {\n        var_4h = fcn.00bb5812(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        (**(**(in_ECX + 0x10) + 0xc))(*(in_ECX + 0x10), arg_8h, arg_ch * arg_10h, &var_4h);\n    }\n    return var_4h;\n}\n",
        "token_count": 174
    },
    "00b95119": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b95119(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    double dVar1;\n    double dVar2;\n    double dVar3;\n    double dVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar5 = 0;\n    uVar7 = 0;\n    var_8h = 0;\n    var_4h = 0;\n    iVar8 = 0;\n    if (arg_ch != 0) {\n        do {\n            if (*(uVar7 + arg_8h) == '\\0') {\n                iVar8 = iVar8 + 1;\n            }\n            uVar7 = uVar7 + 2;\n            var_4h = iVar8;\n        } while (uVar7 < arg_ch);\n    }\n    uVar7 = 1;\n    if (1 < arg_ch) {\n        do {\n            if (*(uVar7 + arg_8h) == '\\0') {\n                iVar5 = iVar5 + 1;\n            }\n            uVar7 = uVar7 + 2;\n            var_8h = iVar5;\n        } while (uVar7 < arg_ch);\n    }\n    dVar1 = arg_ch;\n    if (arg_ch < 0) {\n        dVar1 = dVar1 + *0xc4bac8;\n    }\n    dVar2 = (var_4h * *0xc34c08) / dVar1;\n    dVar1 = dVar1 / (var_8h * *0xc34c08);\n    dVar3 = *(in_ECX + 4) / *0xc34c00;\n    dVar4 = *(in_ECX + 8) / *0xc34c00;\n    if ((((dVar4 < dVar2) << 8 | (dVar4 == dVar2) << 0xe) == 0) &&\n       (((dVar1 < dVar3) << 8 | (dVar1 == dVar3) << 0xe) == 0)) {\n        uVar6 = 6;\n    }\n    else if ((((dVar4 < dVar1) << 8 | (dVar4 == dVar1) << 0xe) == 0) &&\n            (((dVar2 < dVar3) << 8 | (dVar2 == dVar3) << 0xe) == 0)) {\n        uVar6 = 8;\n    }\n    else {\n        uVar6 = 0;\n    }\n    return uVar6;\n}\n",
        "token_count": 607
    },
    "00b95210": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b95210(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    if (arg_ch < 2) {\n        return 0;\n    }\n    uVar3 = 0;\n    uVar4 = uVar3;\n    uVar5 = uVar3;\n    if (arg_ch != 1) {\n        do {\n            cVar1 = *(uVar4 + arg_8h);\n            cVar2 = *(uVar4 + 1 + arg_8h);\n            uVar4 = uVar4 + 2;\n            if (cVar1 == '\\0') {\n                if ((cVar2 == '\\n') || (cVar2 == '\\r')) {\n                    uVar5 = uVar5 + 1;\n                }\n            }\n            else if ((cVar2 == '\\0') && ((cVar1 == '\\n' || (cVar1 == '\\r')))) {\n                uVar3 = uVar3 + 1;\n            }\n            if ((uVar3 != 0) && (uVar5 != 0)) {\n                return 0;\n            }\n        } while (uVar4 < arg_ch - 1);\n        if (uVar3 != 0) {\n            return 6;\n        }\n        if (uVar5 != 0) {\n            return 8;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 341
    },
    "00b95280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b95280(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    uint32_t uVar4;\n    char *in_ECX;\n    int32_t iVar5;\n    uint var_4h;\n    \n    uVar4 = 0;\n    bVar3 = true;\n    if (arg_ch != 0) {\n        do {\n            uVar2 = *(uVar4 + arg_8h);\n            uVar4 = uVar4 + 1;\n            if (uVar2 == 0) {\n                if (*in_ECX != '\\0') {\n                    return 0;\n                }\n            }\n            else if (0x7f < uVar2) {\n                if (uVar2 + 0x3e < 0x1e) {\n                    iVar5 = 1;\n                }\n                else if (uVar2 + 0x20 < 0x10) {\n                    iVar5 = 2;\n                }\n                else {\n                    if (4 < uVar2 + 0x10) {\n                        return 0;\n                    }\n                    iVar5 = 3;\n                }\n                do {\n                    if (arg_ch <= uVar4) goto code_r0x00b952a9;\n                    pcVar1 = uVar4 + arg_8h;\n                    bVar3 = false;\n                    uVar4 = uVar4 + 1;\n                    if (0x3f < *pcVar1 + 0x80U) {\n                        return 0;\n                    }\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n        } while (uVar4 < arg_ch);\ncode_r0x00b952a9:\n        if (!bVar3) {\n            return 4;\n        }\n    }\n    return 2;\n}\n",
        "token_count": 418
    },
    "00b9530a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b9530a(char *arg_8h, uint32_t arg_ch)\n\n{\n    uint uStack8;\n    \n    if (1 < arg_ch) {\n        if ((*arg_8h == -1) && (arg_8h[1] == -2)) {\n            return 5;\n        }\n        if ((*arg_8h == -2) && (arg_8h[1] == -1)) {\n            return 7;\n        }\n    }\n    if ((((arg_ch < 3) || (*arg_8h != -0x11)) || (arg_8h[1] != -0x45)) || (arg_8h[2] != -0x41)) {\n        uStack8 = 0;\n    }\n    else {\n        uStack8 = 3;\n    }\n    return uStack8;\n}\n",
        "token_count": 190
    },
    "00b95400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar __cdecl fcn.00b95400(int32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    double dVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    uint32_t uVar6;\n    ulong uVar7;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t lpNumberOfBytesRead;\n    uint var_1h;\n    \n    piVar4 = arg_8h;\n    fcn.00b95a2f();\n    var_1h._0_1_ = '\\0';\n    do {\n        if (in_ECX[2] == 0) {\n            in_ECX[2] = 0;\n            in_ECX[3] = 0;\n            uVar7 = fcn.00b95dae();\n            in_ECX[4] = uVar7;\n            in_ECX[5] = uVar7 >> 0x20;\n        }\n        uVar6 = 0;\n        do {\n            if (in_ECX[3] == in_ECX[2]) {\n                iVar5 = (*_sym.imp.KERNEL32.dll_ReadFile)(*in_ECX, in_ECX[1], 0x10000, &lpNumberOfBytesRead, 0);\n                if ((iVar5 == 0) || (lpNumberOfBytesRead == 0)) break;\n                in_ECX[2] = lpNumberOfBytesRead;\n                in_ECX[3] = 0;\n            }\n            iVar5 = in_ECX[3];\n            *(&arg_8h + uVar6 + 3) = *(iVar5 + in_ECX[1]);\n            uVar6 = uVar6 + 1;\n            in_ECX[3] = iVar5 + 1;\n        } while (uVar6 == 0);\n        puVar1 = in_ECX + 4;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 + uVar6;\n        in_ECX[5] = in_ECX[5] + CARRY4(uVar2, uVar6);\n        if (uVar6 == 0) {\n            if (var_1h != '\\0') {\n                return '\\x01';\n            }\n            return var_1h;\n        }\n        var_1h._0_1_ = '\\x01';\n        if (arg_8h._3_1_ == '\\r') {\n            iVar5 = fcn.00b95d20(&arg_8h + 3, 1);\n            if (iVar5 == 0) {\n                return '\\x01';\n            }\n            if (arg_8h._3_1_ == '\\n') {\n                return '\\x01';\n            }\n            fcn.00b95c4e(0xffffffff, 0xffffffff, 1);\n            return '\\x01';\n        }\n        if (arg_8h._3_1_ == '\\n') {\n            return '\\x01';\n        }\n        iVar5 = *piVar4[3];\n        if (iVar5 < 2) {\n            uVar6 = piVar4[1] + 2;\n            if (piVar4[2] < uVar6) {\n                if (uVar6 < 0x41c2) {\n                    var_10h = uVar6 * 2;\n                }\n                else if (uVar6 < 0x2000000) {\n                    dVar3 = uVar6;\n                    if (uVar6 < 0) {\n                        dVar3 = dVar3 + *0xc4bac8;\n                    }\n                    var_10h = ROUND(dVar3 * *0xc46f10);\n                }\n                else if (uVar6 < 0x8000000) {\n                    dVar3 = uVar6;\n                    if (uVar6 < 0) {\n                        dVar3 = dVar3 + *0xc4bac8;\n                    }\n                    var_10h = ROUND(dVar3 * *0xc46f08);\n                }\n                else {\n                    dVar3 = uVar6;\n                    if (uVar6 < 0) {\n                        dVar3 = dVar3 + *0xc4bac8;\n                    }\n                    var_10h = ROUND(dVar3 * *0xc46f00);\n                }\n                piVar4[2] = var_10h;\n                if (var_10h == 0) {\n                    uVar6 = 0x10;\n                }\n                else {\n                    uVar6 = var_10h + 0xfU & 0xfffffff0;\n                }\n                piVar4[2] = uVar6;\n                iVar5 = fcn.00bb0ff6(uVar6);\n                if (*piVar4 != 0) {\n                    fcn.00bb1080(iVar5, *piVar4, piVar4[1] + 1);\n                    fcn.00bb106c(*piVar4);\n                }\n                goto code_r0x00b95512;\n            }\n        }\n        else {\n            *piVar4[3] = iVar5 + -1;\n            fcn.00be6443();\n            iVar5 = fcn.00b95a4b(piVar4[1] + 2);\n            piVar4[2] = iVar5;\n            iVar5 = fcn.00bb0ff6(iVar5);\n            fcn.00bb1080(iVar5, *piVar4, piVar4[1] + 1);\ncode_r0x00b95512:\n            *piVar4 = iVar5;\n        }\n        *(piVar4[1] + *piVar4) = arg_8h._3_1_;\n        piVar4[1] = piVar4[1] + 1;\n        *(piVar4[1] + *piVar4) = 0;\n    } while( true );\n}\n",
        "token_count": 1340
    },
    "00b95a2f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b95a2f(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = *param_1[3];\n    if (1 < iVar1) {\n        *param_1[3] = iVar1 + -1;\n        fcn.00be6443();\n        param_1[2] = 0x10;\n        uVar2 = fcn.00bb0ff6(0x10);\n        *param_1 = uVar2;\n    }\n    param_1[1] = 0;\n    **param_1 = 0;\n    return;\n}\n",
        "token_count": 145
    },
    "00b95a64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b95a64(uint *param_1)\n\n{\n    *param_1[3] = *param_1[3] + -1;\n    if (*param_1[3] == 0) {\n        fcn.00bb106c(*param_1);\n        fcn.00bb106c(param_1[3]);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00b95a87": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b95a87(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (in_ECX[2] < arg_8h + 1U) {\n        iVar1 = fcn.00b95a4b(arg_8h + 1U);\n        in_ECX[2] = iVar1;\n        if (*in_ECX != 0) {\n            fcn.00bb106c(*in_ECX);\n        }\n        iVar1 = fcn.00bb0ff6(in_ECX[2]);\n        *in_ECX = iVar1;\n        *(iVar1 + arg_8h) = 0;\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "00b95b19": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b95b19(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    uVar1 = arg_8h + 1;\n    if (in_ECX[2] < uVar1) {\n        if (uVar1 < 0x41c2) {\n            iVar2 = uVar1 * 2;\n        }\n        else {\n            iVar2 = fcn.00bcb606();\n        }\n        in_ECX[2] = iVar2;\n        iVar2 = fcn.00b95a4b(iVar2);\n        in_ECX[2] = iVar2;\n        iVar2 = fcn.00bb0ff6(iVar2);\n        if (*in_ECX != 0) {\n            fcn.00bb1080(iVar2, *in_ECX, in_ECX[1] + 1);\n            fcn.00bb106c(*in_ECX);\n        }\n        *in_ECX = iVar2;\n    }\n    return;\n}\n",
        "token_count": 242
    },
    "00b95bda": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b95bda(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = *in_ECX[3];\n    if (iVar1 < 2) {\n        fcn.00b95b19(in_ECX[1] + 1);\n    }\n    else {\n        *in_ECX[3] = iVar1 + -1;\n        fcn.00be6443();\n        iVar1 = fcn.00b95a4b(in_ECX[1] + 2);\n        in_ECX[2] = iVar1;\n        iVar1 = fcn.00bb0ff6(iVar1);\n        fcn.00bb1080(iVar1, *in_ECX, in_ECX[1] + 1);\n        *in_ECX = iVar1;\n    }\n    *(in_ECX[1] + *in_ECX) = arg_8h;\n    in_ECX[1] = in_ECX[1] + 1;\n    *(in_ECX[1] + *in_ECX) = 0;\n    return;\n}\n",
        "token_count": 253
    },
    "00b95c4e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00b95c4e(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    ulong uVar6;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if ((in_ECX[2] != 0) && ((arg_10h == 1 || (arg_10h == 0)))) {\n        var_8h = arg_ch;\n        uVar3 = arg_8h;\n        if (arg_10h == 1) {\n            uVar3 = in_ECX[4] + arg_8h;\n            var_8h = in_ECX[5] + arg_ch + CARRY4(in_ECX[4], arg_8h);\n        }\n        uVar1 = in_ECX[3];\n        uVar4 = in_ECX[4] - uVar1;\n        iVar2 = (in_ECX[5] - (uVar1 >> 0x1f)) - (in_ECX[4] < uVar1);\n        if ((iVar2 <= var_8h) && ((iVar2 < var_8h || (uVar4 <= uVar3)))) {\n            uVar1 = in_ECX[2];\n            iVar2 = ((uVar1 >> 0x1f) + iVar2 + CARRY4(uVar1, uVar4)) - (uVar1 + uVar4 == 0);\n            if ((var_8h <= iVar2) && ((var_8h < iVar2 || (uVar3 <= (uVar1 + uVar4) - 1)))) {\n                in_ECX[4] = uVar3;\n                in_ECX[3] = uVar3 - uVar4;\n                in_ECX[5] = var_8h;\n                return CONCAT31(uVar4 >> 8, 1);\n            }\n        }\n    }\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    if (arg_10h == 1) {\n        uVar6 = fcn.00b95dae();\n        uVar3 = in_ECX[4] - uVar6;\n        bVar5 = CARRY4(arg_8h, uVar3);\n        arg_8h = arg_8h + uVar3;\n        arg_ch = arg_ch + ((in_ECX[5] - (uVar6 >> 0x20)) - (in_ECX[4] < uVar6)) + bVar5;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(*in_ECX, arg_8h, arg_ch, 0, arg_10h);\n    uVar6 = fcn.00b95dae();\n    in_ECX[4] = uVar6;\n    in_ECX[5] = uVar6 >> 0x20;\n    return uVar6 & 0xffffff00 | iVar2 != 0;\n}\n",
        "token_count": 709
    },
    "00b95d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00b95d20(int32_t arg_8h, uint32_t lpNumberOfBytesRead)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    uint32_t uVar4;\n    ulong uVar5;\n    \n    if (in_ECX[2] == 0) {\n        in_ECX[2] = 0;\n        in_ECX[3] = 0;\n        uVar5 = fcn.00b95dae();\n        in_ECX[4] = uVar5;\n        in_ECX[5] = uVar5 >> 0x20;\n    }\n    uVar2 = lpNumberOfBytesRead;\n    uVar4 = 0;\n    if (lpNumberOfBytesRead != 0) {\n        do {\n            if (in_ECX[3] == in_ECX[2]) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)(*in_ECX, in_ECX[1], 0x10000, &lpNumberOfBytesRead, 0);\n                if ((iVar3 == 0) || (lpNumberOfBytesRead == 0)) break;\n                in_ECX[2] = lpNumberOfBytesRead;\n                in_ECX[3] = 0;\n            }\n            *(uVar4 + arg_8h) = *(in_ECX[1] + in_ECX[3]);\n            uVar4 = uVar4 + 1;\n            in_ECX[3] = in_ECX[3] + 1;\n        } while (uVar4 < uVar2);\n    }\n    puVar1 = in_ECX + 4;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + uVar4;\n    in_ECX[5] = in_ECX[5] + CARRY4(uVar2, uVar4);\n    return uVar4;\n}\n",
        "token_count": 434
    },
    "00b95fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b95fa0(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    int16_t iVar4;\n    int32_t extraout_ECX;\n    uint32_t extraout_EDX;\n    \n    if (*(arg_8h + 8) != 0) {\n        iVar2 = *(arg_8h + 4);\n        cVar3 = fcn.00b95e7f();\n        if (cVar3 == '\\0') {\n            if (*(extraout_ECX + 8) != 5) {\n                return 0xffffffff;\n            }\n            if (extraout_EDX < 3) {\n                return 0xffffffff;\n            }\n            iVar1 = *(*(iVar2 + -8 + extraout_EDX * 4) + 8);\n            iVar4 = *(*(iVar2 + -0xc + extraout_EDX * 4) + 8);\n            if (((iVar1 == 0x49) || (iVar1 == 0x4a)) || (iVar1 == 0x4c)) {\n                if (extraout_EDX < 4) {\n                    return 0xffffffff;\n                }\n                if ((iVar4 != 0) && (iVar4 != 0x30)) {\n                    return 0xffffffff;\n                }\n                iVar4 = *(*(iVar2 + -0x10 + extraout_EDX * 4) + 8);\n            }\n            else if ((iVar1 != 0) && (iVar1 != 0x30)) {\n                return 0xffffffff;\n            }\n            if ((iVar4 != 0) && (iVar4 != 0x30)) {\n                return 0xffffffff;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 392
    },
    "00b96a3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b96a3c(int16_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    uint arg_ch_00;\n    uchar *in_ECX;\n    uint extraout_ECX;\n    uint32_t uVar6;\n    uint in_stack_ffffffa4;\n    char16_t *arg_10h_00;\n    int16_t *piVar7;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    piVar5 = arg_8h;\n    uVar3 = fcn.00bb0ff6(0x2000);\n    fcn.00b9538e(uVar3);\n    if (*arg_8h != 0x23) goto code_r0x00b96a67;\n    iVar4 = fcn.00bb3a0b(arg_8h, L\"#pragma compile\", 0xf);\n    if (iVar4 == 0) goto code_r0x00b96bd2;\n    iVar4 = fcn.00bb3a0b(arg_8h, L\"#notrayicon\", 0xb);\n    if (iVar4 == 0) {\n        in_stack_ffffffa4 = 1;\n        *in_ECX = 1;\n        goto code_r0x00b96a67;\n    }\n    iVar4 = fcn.00bb3a0b(arg_8h, L\"#requireadmin\", 0xd);\n    if (iVar4 == 0) {\n        in_stack_ffffffa4 = 1;\n        in_ECX[1] = 1;\n        goto code_r0x00b96a67;\n    }\n    iVar4 = fcn.00bb3a0b(arg_8h, L\"#OnAutoItStartRegister\", 0x16);\n    if (iVar4 == 0) {\n        piVar5 = fcn.00bafec6();\n        fcn.00b970bd(piVar5);\n        fcn.00b9710a(piVar5);\n        iVar4 = fcn.00bb2e3c(piVar5);\n        iVar1 = piVar5[iVar4 + -1];\n        if ((iVar1 == 0x22) || (iVar1 == 0x27)) {\n            if (*piVar5 != iVar1) goto code_r0x00bce73b;\n            piVar5[iVar4 + -1] = 0;\n            (**(**(in_ECX + 4) + 8))(piVar5 + 1);\n        }\n        else {\n            if ((*piVar5 == 0x22) || (*piVar5 == 0x27)) {\ncode_r0x00bce73b:\n                fcn.00bb106c(piVar5);\n                arg_10h_00 = L\"Bad directive syntax error\";\ncode_r0x00bce831:\n                fcn.00befcb1(arg_ch, *arg_10h, arg_10h_00, arg_8h);\n                goto code_r0x00bce840;\n            }\n            (**(**(in_ECX + 4) + 8))(piVar5);\n        }\n        fcn.00bb106c(piVar5);\n    }\n    else {\n        iVar4 = fcn.00bb3a0b(arg_8h, L\"#include-once\", 0xd);\n        if (iVar4 == 0) {\n            uVar6 = 0;\n            if (*(in_ECX + 0x20) != 0) {\n                do {\n                    iVar4 = fcn.00b97a68(*(*(in_ECX + 0x1c) + uVar6 * 4), 0);\n                    if (iVar4 == 0) {\n                        in_stack_ffffffa4 = 1;\n                        if (1 < **(*(in_ECX + 0x2c) + uVar6 * 4)) {\n                            in_stack_ffffffa4 = 4;\n                        }\n                        goto code_r0x00b96a67;\n                    }\n                    uVar6 = uVar6 + 1;\n                } while (uVar6 < *(in_ECX + 0x20));\n            }\n        }\n        else {\n            iVar4 = fcn.00bb3a0b(arg_8h, L\"#include\", 8);\n            if (iVar4 == 0) {\n                cVar2 = fcn.00bf000d(arg_8h + 8, var_8h);\n                if (cVar2 != '\\x01') {\n                    arg_10h_00 = L\"Cannot parse #include\";\n                    goto code_r0x00bce831;\n                }\n                fcn.00b97f41(var_8h);\n                fcn.00b97f41(var_8h);\n                uVar3 = extraout_ECX;\n                arg_ch_00 = fcn.00b9716b(&var_28h);\n                cVar2 = fcn.00b96bec(&var_18h, arg_ch_00, uVar3, arg_ch, arg_8h);\n                fcn.00b95a64();\n                fcn.00b95a64();\n                if (cVar2 != '\\0') goto code_r0x00b96bd2;\ncode_r0x00bce840:\n                in_stack_ffffffa4 = 0;\n                goto code_r0x00b96a67;\n            }\n            piVar7 = arg_8h;\n            iVar4 = fcn.00bb3a0b(arg_8h, L\"#comments-start\", 0xf);\n            if ((iVar4 == 0) || (iVar4 = fcn.00bb3a0b(arg_8h, 0xc1fb70, 3),  piVar7 = arg_8h,  iVar4 == 0)) {\n                in_stack_ffffffa4 = 1;\n                arg_8h = 0x1;\n                do {\n                    while( true ) {\n                        cVar2 = fcn.00b959cd(piVar5);\n                        if (cVar2 == '\\0') {\n                            if (0 < arg_8h) {\n                                arg_10h_00 = L\"Unterminated group of comments\";\n                                arg_8h = piVar7;\n                                goto code_r0x00bce831;\n                            }\n                            goto code_r0x00b96a67;\n                        }\n                        *arg_10h = *arg_10h + 1;\n                        fcn.00b9710a(piVar5);\n                        fcn.00b970bd(piVar5);\n                        iVar4 = fcn.00bb3a0b(piVar5, L\"#comments-start\", 0xf);\n                        if ((iVar4 != 0) && (iVar4 = fcn.00bb3a0b(piVar5, 0xc1fb70, 3),  iVar4 != 0)) break;\n                        arg_8h = arg_8h + 1;\n                    }\n                    iVar4 = fcn.00bb3a0b(piVar5, L\"#comments-end\", 0xd);\n                } while (((iVar4 != 0) && (iVar4 = fcn.00bb3a0b(piVar5, 0xc1fb48, 3),  iVar4 != 0)) ||\n                        (arg_8h = arg_8h + -1,  0 < arg_8h));\n                goto code_r0x00b96a67;\n            }\n        }\n    }\ncode_r0x00b96bd2:\n    in_stack_ffffffa4 = 1;\ncode_r0x00b96a67:\n    *var_4h = *var_4h + -1;\n    if (*var_4h == 0) {\n        fcn.00bb106c(var_4h);\n        fcn.00bb106c(var_8h);\n    }\n    return in_stack_ffffffa4;\n}\n",
        "token_count": 1806
    },
    "00b96bec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00b96bec(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t arg_8h_00;\n    char16_t *pcVar6;\n    uint8_t uVar7;\n    uint32_t unaff_ESI;\n    uint *puVar8;\n    int32_t in_stack_fffffed4;\n    char16_t *arg_8h_01;\n    uchar *arg_ch_00;\n    uint32_t uVar9;\n    int32_t *piVar10;\n    char16_t *arg_8h_02;\n    uint32_t *arg_8h_03;\n    int64_t iVar11;\n    uint64_t uVar12;\n    uchar auStack236 [4];\n    uint *puStack232;\n    uint *puStack228;\n    uint uStack224;\n    int32_t iStack220;\n    uint32_t uStack216;\n    uint32_t uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uchar auStack192 [4];\n    uint auStack188 [2];\n    uchar auStack180 [8];\n    uint uStack172;\n    uint uStack168;\n    int32_t iStack164;\n    uint32_t auStack160 [4];\n    uchar auStack144 [8];\n    uint uStack136;\n    uint uStack76;\n    int32_t *piStack72;\n    int32_t iStack68;\n    \n    *0xc574a4 = *0xc574a4 + 1;\n    iVar11 = unaff_ESI << 0x20;\n    if (0x2f < *0xc574a4) {\n        uVar5 = fcn.00befcb1(arg_10h, arg_18h, L\"#include depth exceeded.  Make sure there are no recursive includes\", \n                             arg_14h);\n        uVar7 = 0;\n        goto code_r0x00b96e9e;\n    }\n    uVar7 = 0;\n    puStack232 = CONCAT13(1, puStack232._0_3_);\n    uStack216._0_3_ = CONCAT12(1, uStack216);\n    uStack216 = uStack216 & 0xff000000 | uStack216;\n    puStack228 = NULL;\n    uStack212 = uStack212 & 0xffffff00;\n    fcn.00b95906();\n    puVar8 = arg_8h;\n    cVar1 = fcn.00b95956(arg_8h, 0x8000);\n    if (cVar1 == '\\0') {\n        fcn.00befcb1(arg_10h, arg_18h, L\"Error opening the file\", arg_14h);\n    }\n    else {\n        fcn.00b977c7();\n        fcn.00bb0b9b();\n        fcn.00b977c7();\n        fcn.00b948ae();\n        arg_8h_03 = auStack160;\n        auStack188[0] = 0x18;\n        fcn.00b959b0(arg_8h_03, auStack188);\n        arg_8h_02 = NULL;\n        fcn.00b95c4e(piStack72, iStack68, 0);\n        if ((iStack164 == 0x21335541) && (auStack160[0] == 0x36304145)) {\n            fcn.00b95dcf();\n            uVar5 = 2;\n            uStack168 = 0;\n            iStack164 = 0;\n            auStack160[0] = auStack160[0] & 0xffffff00;\n            iVar3 = fcn.00b94f3d(*arg_8h, 2);\n            if (iVar3 == 0) {\n                arg_8h_01 = L\">>>AUTOIT SCRIPT<<<\";\n                iVar3 = fcn.00bf97e5(L\">>>AUTOIT SCRIPT<<<\", &stack0xfffffef8, &puStack228);\n                if (iVar3 == 0) {\n                    fcn.00b94faa();\n                    iVar3 = *piStack72;\n                    uStack216 = 0xc1fb78;\n                    uStack212 = 0;\n                    uStack208 = 0;\n                    uStack204 = 0;\n                    puStack232 = fcn.00bb0ff6(0x10);\n                    if (puStack232 == NULL) {\n                        puStack232 = NULL;\n                    }\n                    else {\n                        *puStack232 = 0xc1fb78;\n                        puStack232[1] = 0;\n                        puStack232[2] = 0;\n                        puStack232[3] = 0;\n                    }\n                    puVar8 = puStack232;\n                    puStack228 = puStack232;\n                    fcn.00b95f12(5);\n                    fcn.00b9766f(&stack0xfffffefc);\n                    uVar12 = 0;\n                    puStack228 = 0x1;\n                    uVar9 = uVar5;\n                    piVar10 = piStack72;\n                    if (0 < iVar3) {\ncode_r0x00bce993:\n                        do {\n                            do {\n                                iVar3 = uVar5 + 1;\n                                uVar5 = *(arg_8h_03 + uVar5);\n                                uVar12 = uVar12 & 0xffffffff00000000 | uVar5;\n                                fcn.00b95f12(uVar5);\n                                cVar1 = fcn.00bf768b();\n                                if (cVar1 == '\\0') {\n                                    cVar1 = fcn.00bf7675();\n                                    if (cVar1 == '\\0') {\n                                        cVar1 = fcn.00bf765f();\n                                        if (cVar1 == '\\0') {\n                                            cVar1 = fcn.00b95f8a();\n                                            if (cVar1 != '\\0') {\n                                                arg_ch_00 = &stack0xfffffefc;\n                                                pcVar6 = arg_8h_02;\n                                                arg_8h_00 = fcn.00befc4d(arg_8h_02, arg_ch_00);\n                                                if (iVar3 == 0x31) {\n                                                    fcn.00b97f41(arg_8h_00);\n                                                    pcVar6 = (**(*piStack72[1] + 4))(uStack76);\n                                                    fcn.00b95a64();\n                                                    uVar2 = 1;\ncode_r0x00bceaa7:\n                                                    fcn.00b95f12(uVar2);\n                                                    puVar8 = uVar12 >> 0x20;\n                                                }\n                                                else {\n                                                    if (iVar3 == 0x30) {\n                                                        fcn.00b97f41(arg_8h_00);\n                                                        pcVar6 = fcn.00b96999(auStack180);\n                                                        fcn.00b95a64();\n                                                        uVar2 = 0;\n                                                        goto code_r0x00bceaa7;\n                                                    }\n                                                    if (iVar3 == 0x37) {\n                                                        iVar3 = fcn.00befb6e(arg_8h_00);\n                                                        if (iVar3 == 0) {\n                                                            fcn.00befcb1(arg_8h, uStack224, \n                                                                         L\"Bad directive syntax error\", 0xc1f910);\n                                                            fcn.00bb106c(arg_ch_00);\n                                                            fcn.00bb2f95(arg_8h_02);\n                                                            goto code_r0x00bceba3;\n                                                        }\n                                                        uVar5 = arg_8h_00;\n                                                        fcn.00bb106c(piVar10);\n                                                        arg_8h_01 = arg_8h_02;\n                                                        arg_8h_02 = pcVar6;\n                                                        goto code_r0x00bce993;\n                                                    }\n                                                    fcn.00bf7621(arg_8h_00);\n                                                }\n                                                fcn.00bb106c(arg_8h_00);\n                                                arg_8h_01 = arg_8h_02;\n                                                arg_8h_02 = pcVar6;\n                                            }\n                                        }\n                                        else {\n                                            uVar12 = *(arg_8h_02 + arg_8h_03);\n                                        }\n                                    }\n                                    else {\n                                        uVar12 = *(arg_8h_02 + arg_8h_03);\n                                    }\n                                }\n                                else {\n                                    uVar12 = uVar12 & 0xffffffff00000000 | *(arg_8h_02 + arg_8h_03);\n                                }\n                                fcn.00b9766f(&stack0xfffffef4);\n                            } while (piVar10 != 0x7f);\n                            if ((puVar8[2] < 3) || (*(*(puVar8[1] + -8 + puVar8[2] * 4) + 8) == 0x7f)) {\n                                fcn.00bf0170();\n                                uVar5 = uVar9;\n                            }\n                            else {\n                                piVar10 = 0x3b;\n                                fcn.00b97373(piStack72[4], &stack0xfffffeec, 0xffffffff);\n                                uVar5 = uVar9;\n                            }\n                            puStack228 = puStack228 + 1;\n                            uVar9 = uVar5;\n                        } while (puStack228 <= uVar12);\n                    }\n                    fcn.00b95f12(5);\n                    fcn.00bf7581(&stack0xfffffef4);\n                    fcn.00bff835(&stack0xffffff0c);\n                    fcn.00bb2f95(arg_8h_01);\n                    uVar7 = 1;\ncode_r0x00bceba3:\n                    fcn.00b97776();\n                    fcn.00b95efb();\n                    goto code_r0x00b96e7a;\n                }\n                fcn.00b94faa();\n            }\n            fcn.00befcb1(arg_10h, arg_18h, L\"Error opening the file\", arg_14h);\n        }\n        else {\n            fcn.00b977c7();\n            fcn.00b977c7();\n            fcn.00b946f9(auStack236, 0, 0);\n            fcn.00b97c8e(auStack236);\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)();\n            fcn.00b95a64();\n            fcn.00b95a64();\n            uVar2 = fcn.00bb0ff6(0x2000);\n            fcn.00b9538e(uVar2);\n            do {\n                uVar7 = in_stack_fffffed4 >> 0x18;\n                piVar10 = iVar11 >> 0x20;\n                if (puVar8 >> 0x10 != '\\x01') break;\n                uVar7 = 0;\n                cVar1 = fcn.00b959cd(iStack220);\n                piVar10 = iVar11 >> 0x20;\n                if (cVar1 == '\\0') break;\n                in_stack_fffffed4 = iStack220;\n                fcn.00b970bd(iStack220);\n                cVar1 = fcn.00b9702c(iStack220);\n                piVar10 = iVar11 >> 0x20;\n                if (cVar1 == '\\0') {\n                    fcn.00befcb1(arg_10h, uStack200, L\"Unterminated string\", iStack220);\n                    uVar7 = in_stack_fffffed4 >> 0x18;\n                    break;\n                }\n                fcn.00b9710a(iStack220);\n                iVar3 = fcn.00bb2e3c(iStack220);\n                if (((2 < iVar3) && (iVar4 = fcn.00bb387d(*(iStack220 + -4 + iVar3 * 2) & 0x7f),  iVar4 != 0)) &&\n                   (*(iStack220 + -2 + iVar3 * 2) == 0x5f)) {\n                    *(iStack220 + -2 + iVar3 * 2) = 0;\n                }\n                if (iStack68 == '\\x01') {\n                    fcn.00befb07(iStack220);\n                }\n                else {\n                    fcn.00b97f41(uStack172);\n                    iStack68 = fcn.00b96a3c(iStack220, auStack192, &stack0xfffffee4, auStack144);\n                    fcn.00b95a64();\n                    if (((iStack68 != 0) && (1 < iStack68)) && (iStack68 < 4)) {\n                        fcn.00b97373(in_stack_fffffed4, iStack220, arg_ch);\n                    }\n                }\n                uVar7 = in_stack_fffffed4 >> 0x18;\n                piVar10 = iVar11 >> 0x20;\n            } while (iStack68 >> 0x18 == '\\x01');\n            fcn.00b95dcf();\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(uStack136);\n            *piVar10 = *piVar10 + -1;\n            if (*piVar10 == 0) {\n                fcn.00bb106c(piVar10);\n                fcn.00bb106c(iStack220);\n            }\n        }\ncode_r0x00b96e7a:\n        fcn.00b95a64();\n        fcn.00b95a64();\n    }\n    uVar5 = fcn.00b95934();\ncode_r0x00b96e9e:\n    *0xc574a4 = *0xc574a4 + -1;\n    return uVar5 & 0xffffff00 | uVar7;\n}\n",
        "token_count": 3096
    },
    "00b96ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00b96ee0(void)\n\n{\n    uint32_t *puVar1;\n    int16_t *arg_ch;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    ulong uVar7;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar5 = *0xc57298;\n    if (*0xc572dc == NULL) {\n        if (*0xc572a0 == 0) {\n            var_10h = 0;\n        }\n        else {\n            var_ch = fcn.00bb0ff6(-(*0xc572a0 * 4 >> 0x20 != 0) | *0xc572a0 * 4);\n            iVar4 = 0;\n            var_10h = 0;\n            *0xc572a4 = var_ch;\n            if (0 < *0xc572a0) {\n                do {\n                    *(*0xc572a4 + iVar4 * 4) = *puVar5;\n                    iVar4 = iVar4 + 1;\n                    puVar5 = puVar5[3];\n                } while (iVar4 < *0xc572a0);\n            }\n            var_28h = 0;\n            var_24h = 0;\n            var_4h = 1;\n            uVar6 = *0xc572a0 + 1;\n            var_8h = 1;\n            var_20h = 0;\n            var_2ch = 0xc1fb78;\n            uVar3 = -(uVar6 * 0x10 >> 0x20 != 0) | uVar6 * 0x10;\n            puVar1 = fcn.00bb0ff6(-(0xfffffffb < uVar3) | uVar3 + 4);\n            if (puVar1 == NULL) {\n                *0xc572dc = NULL;\n            }\n            else {\n                *0xc572dc = puVar1 + 1;\n                *puVar1 = uVar6;\n                puVar1 = *0xc572dc;\n                while (uVar6 = uVar6 - 1,  -1 < uVar6) {\n                    *puVar1 = 0xc1fb78;\n                    puVar1[1] = 0;\n                    puVar1[2] = 0;\n                    puVar1[3] = 0;\n                    puVar1 = puVar1 + 4;\n                }\n            }\n            iVar4 = 0;\n            var_ch = 0x10;\n            while( true ) {\n                uVar7 = fcn.00b97143(var_8h);\n                arg_ch = uVar7;\n                if (arg_ch == NULL) break;\n                if (*arg_ch == 0x3b) {\n                    fcn.00b975e0();\n                    iVar2 = **(iVar4 + *0xc572e4);\n                    uVar6 = var_4h;\n                    if (var_4h < *(iVar2 + 8)) {\n                        do {\n                            fcn.00be6ac9(*(*(iVar2 + 4) + uVar6 * 4));\n                            fcn.00b9766f(&var_1ch);\n                            if (var_14h == 0x7f) {\n                                var_4h = uVar6 + 1;\n                                if (uVar6 == *(**(iVar4 + *0xc572e4) + 8) - 1U) {\n                                    iVar4 = iVar4 + 4;\n                                    var_4h = 1;\n                                }\n                                fcn.00b95efb();\n                                break;\n                            }\n                            fcn.00b95efb();\n                            uVar6 = uVar6 + 1;\n                            iVar2 = **(iVar4 + *0xc572e4);\n                        } while (uVar6 < *(iVar2 + 8));\n                    }\n                }\n                else {\n                    iVar2 = fcn.00b963a0(uVar7 >> 0x20, arg_ch, &var_2ch);\n                    if (iVar2 < 0) goto code_r0x00b9700d;\n                }\n                fcn.00b974bd(&var_2ch);\n                var_8h = var_8h + 1;\n                var_ch = var_ch + 0x10;\n            }\n            var_10h = CONCAT31(var_10h._1_3_, 1);\ncode_r0x00b9700d:\n            fcn.00b97776();\n            var_10h = var_10h & 0xff;\n        }\n    }\n    else {\n        var_10h = 1;\n    }\n    return var_10h;\n}\n",
        "token_count": 1125
    },
    "00b9702c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b9702c(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (arg_8h != NULL) {\n        if ((*arg_8h == 0x23) && (iVar2 = fcn.00bb3a0b(arg_8h, L\"#include\", 8),  iVar2 != 0)) {\n            iVar2 = 3;\n            goto code_r0x00b9705a;\n        }\n        for (; *arg_8h != 0; arg_8h = arg_8h + 1) {\n            iVar1 = *arg_8h;\n            iVar2 = 0;\n            if (iVar1 == 0x22) {\n                if ((iVar3 != 2) && (iVar2 = iVar3,  iVar3 == 0)) {\n                    iVar2 = 2;\n                }\n            }\n            else if (iVar1 == 0x27) {\n                if ((iVar3 != 1) && (iVar2 = iVar3,  iVar3 == 0)) {\n                    iVar2 = 1;\n                }\n            }\n            else {\n                iVar2 = iVar3;\n                if ((iVar1 == 0x3b) && ((iVar3 == 0 || (iVar3 == 3)))) {\n                    *arg_8h = 0;\n                    return 1;\n                }\n            }\ncode_r0x00b9705a:\n            iVar3 = iVar2;\n        }\n        if ((iVar3 == 0) || (iVar3 == 3)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 379
    },
    "00b973e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b973e5(int32_t arg_8h, uint arg_ch, uint noname_2, uchar *arg_14h)\n\n{\n    uint arg_ch_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    ushort auStackY65628 [32768];\n    uint var_58h;\n    uint var_54h;\n    uint var_4ch;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    fcn.00bc1b90();\n    *(extraout_ECX + 2) = *0xc56284;\n    if (*(arg_8h + 4) == 0) {\n        auStackY65628[0] = 0;\n        *arg_14h = 1;\n        fcn.00bb3020();\n        iVar2 = (*_sym.imp.COMDLG32.dll_GetOpenFileNameW)();\n        if (iVar2 == 0) {\n            return 0;\n        }\n        fcn.00b97d2c(auStackY65628);\n    }\n    fcn.00b948ae();\n    fcn.00bb09d5();\n    uVar1 = extraout_ECX_00;\n    arg_ch_00 = fcn.00b9716b(arg_8h);\n    uVar1 = fcn.00b969ca(arg_8h, arg_ch_00, uVar1);\n    return uVar1;\n}\n",
        "token_count": 363
    },
    "00b974bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b974bd(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong *puVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    uint uVar7;\n    ulong *puVar8;\n    uint *puVar9;\n    int32_t in_ECX;\n    uint32_t uVar10;\n    uint32_t var_4h;\n    \n    if (in_ECX != arg_8h) {\n        fcn.00b975e0();\n        uVar2 = *(arg_8h + 8);\n        if (*(in_ECX + 0xc) < uVar2) {\n            uVar10 = 8;\n            if (7 < uVar2) {\n                uVar10 = uVar2;\n            }\n            *(in_ECX + 0xc) = uVar10;\n            uVar7 = fcn.00bb0ff6(-(uVar10 * 4 >> 0x20 != 0) | uVar10 * 4);\n            if (*(in_ECX + 4) != 0) {\n                fcn.00bb106c(*(in_ECX + 4));\n            }\n            *(in_ECX + 4) = uVar7;\n        }\n        iVar3 = *(arg_8h + 8);\n        *(in_ECX + 8) = iVar3;\n        var_4h = 0;\n        if (iVar3 != 0) {\n            do {\n                puVar8 = fcn.00bb0ff6(0xc);\n                if (puVar8 == NULL) {\n                    puVar8 = NULL;\n                }\n                else {\n                    puVar4 = *(*(arg_8h + 4) + var_4h * 4);\n                    *(puVar8 + 1) = *(puVar4 + 1);\n                    iVar1 = *(puVar8 + 1);\n                    *(puVar8 + 10) = *(puVar4 + 10);\n                    if ((iVar1 < 0x40) && (0x2f < iVar1)) {\n                        puVar9 = fcn.00bb0ff6(0x10);\n                        if (puVar9 == NULL) {\n                            puVar9 = NULL;\n                        }\n                        else {\n                            puVar5 = *puVar4;\n                            *puVar9 = *puVar5;\n                            puVar9[1] = puVar5[1];\n                            puVar9[2] = puVar5[2];\n                            piVar6 = puVar5[3];\n                            puVar9[3] = piVar6;\n                            *piVar6 = *piVar6 + 1;\n                        }\n                        *puVar8 = puVar9;\n                    }\n                    else if (iVar1 == 0x10) {\n                        *puVar8 = *puVar4;\n                        *(puVar8 + 4) = *(puVar4 + 4);\n                    }\n                    else if (iVar1 == 0x20) {\n                        *puVar8 = *puVar4;\n                    }\n                    else {\n                        *puVar8 = *puVar4;\n                    }\n                }\n                *(*(in_ECX + 4) + var_4h * 4) = puVar8;\n                var_4h = var_4h + 1;\n            } while (var_4h < *(in_ECX + 8));\n        }\n    }\n    return;\n}\n",
        "token_count": 767
    },
    "00b975e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b975e0(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar3 = 0;\n    if (*(param_1 + 8) == 0) {\n        *(param_1 + 8) = 0;\n    }\n    else {\n        do {\n            piVar1 = *(*(param_1 + 4) + uVar3 * 4);\n            if (piVar1 != NULL) {\n                if (((*(piVar1 + 2) < 0x40) && (0x2f < *(piVar1 + 2))) && (puVar2 = *piVar1,  puVar2 != NULL)) {\n                    *puVar2[3] = *puVar2[3] + -1;\n                    if (*puVar2[3] == 0) {\n                        fcn.00bb106c(*puVar2);\n                        fcn.00bb106c(puVar2[3]);\n                    }\n                    fcn.00bb106c(puVar2);\n                }\n                fcn.00bb106c(piVar1);\n            }\n            *(*(param_1 + 4) + uVar3 * 4) = 0;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *(param_1 + 8));\n        *(param_1 + 8) = 0;\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "00b9766f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b9766f(ulong *arg_8h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    ulong *puVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar4 = *(in_ECX + 0xc) * 2;\n        uVar7 = 8;\n        if (7 < uVar4) {\n            uVar7 = uVar4;\n        }\n        *(in_ECX + 0xc) = uVar7;\n        uVar8 = fcn.00bb0ff6(-(uVar7 * 4 >> 0x20 != 0) | uVar7 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00bb1080(uVar8, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.00bb106c(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar8;\n    }\n    puVar5 = fcn.00bb0ff6(0xc);\n    if (puVar5 == NULL) {\n        puVar5 = NULL;\n    }\n    else {\n        *(puVar5 + 1) = *(arg_8h + 1);\n        iVar1 = *(puVar5 + 1);\n        *(puVar5 + 10) = *(arg_8h + 10);\n        if ((iVar1 < 0x40) && (0x2f < iVar1)) {\n            puVar6 = fcn.00bb0ff6(0x10);\n            if (puVar6 == NULL) {\n                puVar6 = NULL;\n            }\n            else {\n                puVar2 = *arg_8h;\n                *puVar6 = *puVar2;\n                puVar6[1] = puVar2[1];\n                puVar6[2] = puVar2[2];\n                piVar3 = puVar2[3];\n                puVar6[3] = piVar3;\n                *piVar3 = *piVar3 + 1;\n            }\n            *puVar5 = puVar6;\n        }\n        else if (iVar1 == 0x10) {\n            *puVar5 = *arg_8h;\n            *(puVar5 + 4) = *(arg_8h + 4);\n        }\n        else if (iVar1 == 0x20) {\n            *puVar5 = *arg_8h;\n        }\n        else {\n            *puVar5 = *arg_8h;\n        }\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar5;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 702
    },
    "00b97a24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00b97a24(int32_t arg_8h, uint32_t arg_ch, uint16_t *arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    if (arg_18h == 2) {\n        uVar3 = 0;\n        uVar4 = 0;\n        if (arg_ch <= arg_14h) {\n            arg_ch = arg_14h;\n        }\n        if (arg_ch != 0) {\n            arg_8h = arg_8h - arg_10h;\n            do {\n                uVar1 = *(arg_8h + arg_10h);\n                arg_ch = arg_ch - 1;\n                if (uVar1 != *arg_10h) {\n                    uVar3 = fcn.00bb4ec8(uVar1);\n                    uVar3 = uVar3 & 0xffff;\n                    uVar4 = fcn.00bb4ec8(*arg_10h);\n                    uVar4 = uVar4 & 0xffff;\n                    if (uVar3 != uVar4) break;\n                }\n                arg_10h = arg_10h + 1;\n            } while (arg_ch != 0);\n        }\n        if (uVar3 - uVar4 < 0) {\n            uVar3 = 0xffffffff;\n        }\n        else {\n            uVar3 = uVar3 != uVar4 && -1 < uVar3 - uVar4;\n        }\n    }\n    else {\n        if (arg_18h == 0) {\n            uVar5 = 0x400;\n        }\n        else {\n            uVar5 = 0x409;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_CompareStringW)(uVar5, 1, arg_8h, arg_ch, arg_10h, arg_14h);\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = iVar2 - 2;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 501
    },
    "00b97a84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b97a84(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    iVar2 = *in_ECX[3];\n    if (iVar2 < 2) {\n        uVar1 = in_ECX[1] + 2;\n        if (uVar1 <= in_ECX[2]) goto code_r0x00b97aa8;\n        if (uVar1 < 0x41c2) {\n            iVar2 = uVar1 * 2;\n        }\n        else {\n            iVar2 = fcn.00bcb606();\n        }\n        in_ECX[2] = iVar2;\n        uVar1 = fcn.00b98170(iVar2);\n        in_ECX[2] = uVar1;\n        iVar2 = fcn.00bb0fa5(-(uVar1 * 2 >> 0x20 != 0) | uVar1 * 2);\n        if (*in_ECX != 0) {\n            fcn.00bb1080(iVar2, *in_ECX, in_ECX[1] * 2 + 2);\n            fcn.00bb30b0(*in_ECX);\n        }\n    }\n    else {\n        *in_ECX[3] = iVar2 + -1;\n        fcn.00b98189();\n        uVar1 = fcn.00b98170(in_ECX[1] + 2);\n        in_ECX[2] = uVar1;\n        iVar2 = fcn.00bb0ff6(-(uVar1 * 2 >> 0x20 != 0) | uVar1 * 2);\n        fcn.00bb1080(iVar2, *in_ECX, in_ECX[1] * 2 + 2);\n    }\n    *in_ECX = iVar2;\ncode_r0x00b97aa8:\n    *(*in_ECX + in_ECX[1] * 2) = arg_8h;\n    in_ECX[1] = in_ECX[1] + 1;\n    *(*in_ECX + in_ECX[1] * 2) = 0;\n    return;\n}\n",
        "token_count": 502
    },
    "00b97cb3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b97cb3(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    uVar1 = arg_8h + 1;\n    if (in_ECX[2] < uVar1) {\n        if (uVar1 < 0x41c2) {\n            iVar2 = uVar1 * 2;\n        }\n        else {\n            iVar2 = fcn.00bcb606();\n        }\n        in_ECX[2] = iVar2;\n        if (iVar2 == 0) {\n            uVar1 = 8;\n        }\n        else {\n            uVar1 = iVar2 + 7U & 0xfffffff8;\n        }\n        in_ECX[2] = uVar1;\n        iVar2 = fcn.00bb0fa5(-(uVar1 * 2 >> 0x20 != 0) | uVar1 * 2);\n        if (*in_ECX != 0) {\n            fcn.00bb1080(iVar2, *in_ECX, in_ECX[1] * 2 + 2);\n            fcn.00bb30b0(*in_ECX);\n        }\n        *in_ECX = iVar2;\n    }\n    return;\n}\n",
        "token_count": 293
    },
    "00b97d2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b97d2c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint *in_ECX;\n    \n    if (arg_8h == 0) {\n        fcn.00b97e8c(0, 0xffffffff);\n    }\n    else {\n        uVar2 = fcn.00bb2e3c(arg_8h);\n        in_ECX[1] = uVar2;\n        iVar1 = *in_ECX[3];\n        if (iVar1 < 2) {\n            fcn.00b98087(uVar2);\n        }\n        else {\n            *in_ECX[3] = iVar1 + -1;\n            fcn.00b98189();\n            uVar3 = fcn.00b98170(in_ECX[1] + 1);\n            in_ECX[2] = uVar3;\n            uVar2 = fcn.00bb0fa5(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n            *in_ECX = uVar2;\n        }\n        fcn.00bb1080(*in_ECX, arg_8h, in_ECX[1] * 2 + 2);\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "00b97db0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b97db0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    \n    iVar1 = fcn.00bb2e3c(arg_8h);\n    iVar3 = *in_ECX[3];\n    if (iVar3 < 2) {\n        fcn.00b97cb3(in_ECX[1] + iVar1);\n    }\n    else {\n        *in_ECX[3] = iVar3 + -1;\n        fcn.00b98189();\n        uVar2 = fcn.00b98170(in_ECX[1] + 1 + iVar1);\n        in_ECX[2] = uVar2;\n        iVar3 = fcn.00bb0fa5(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n        fcn.00bb1080(iVar3, *in_ECX, in_ECX[1] * 2 + 2);\n        *in_ECX = iVar3;\n    }\n    fcn.00bb1080(*in_ECX + in_ECX[1] * 2, arg_8h, iVar1 * 2);\n    in_ECX[1] = in_ECX[1] + iVar1;\n    *(*in_ECX + in_ECX[1] * 2) = 0;\n    return;\n}\n",
        "token_count": 328
    },
    "00b97e0b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b97e0b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *in_ECX;\n    \n    iVar1 = *in_ECX[3];\n    if (1 < iVar1) {\n        *in_ECX[3] = iVar1 + -1;\n        fcn.00b98189();\n        iVar1 = fcn.00bb2e3c(arg_8h);\n        uVar2 = fcn.00b98170(iVar1 + in_ECX[1] + 1);\n        in_ECX[2] = uVar2;\n        uVar3 = fcn.00bb0fa5(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n        fcn.00bb1080(uVar3, *in_ECX, in_ECX[1] * 2 + 2);\n        *in_ECX = uVar3;\n    }\n    fcn.00b97db0(arg_8h);\n    return;\n}\n",
        "token_count": 246
    },
    "00b97eec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b97eec(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    iVar1 = *param_1[3];\n    if (1 < iVar1) {\n        *param_1[3] = iVar1 + -1;\n        puVar2 = fcn.00bb0ff6(4);\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            *puVar2 = 1;\n        }\n        param_1[3] = puVar2;\n        param_1[2] = 8;\n        uVar3 = fcn.00bb0fa5(0x10);\n        *param_1 = uVar3;\n    }\n    param_1[1] = 0;\n    **param_1 = 0;\n    return;\n}\n",
        "token_count": 200
    },
    "00b98087": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b98087(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (in_ECX[2] < arg_8h + 1U) {\n        iVar1 = fcn.00b98170(arg_8h + 1U);\n        in_ECX[2] = iVar1;\n        if (*in_ECX != 0) {\n            fcn.00bb106c(*in_ECX);\n        }\n        iVar1 = fcn.00bb0ff6(-(in_ECX[2] * 2 >> 0x20 != 0) | in_ECX[2] * 2);\n        *in_ECX = iVar1;\n        *(iVar1 + arg_8h * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00b980d7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b980d7(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    \n    iVar1 = *in_ECX[3];\n    if (iVar1 < 2) {\n        iVar1 = arg_8h[1];\n        in_ECX[1] = iVar1;\n        if (in_ECX[2] < iVar1 + 1U) {\n            iVar3 = fcn.00b98170(iVar1 + 1U);\n            in_ECX[2] = iVar3;\n            if (*in_ECX != 0) {\n                fcn.00bb106c(*in_ECX);\n            }\n            iVar3 = fcn.00bb0ff6(-(in_ECX[2] * 2 >> 0x20 != 0) | in_ECX[2] * 2);\n            *in_ECX = iVar3;\n            *(iVar3 + iVar1 * 2) = 0;\n        }\n        fcn.00bb1080(*in_ECX, *arg_8h, in_ECX[1] * 2 + 2);\n    }\n    else {\n        *in_ECX[3] = iVar1 + -1;\n        in_ECX[1] = arg_8h[1];\n        in_ECX[2] = arg_8h[2];\n        *in_ECX = *arg_8h;\n        piVar2 = arg_8h[3];\n        in_ECX[3] = piVar2;\n        *piVar2 = *piVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 378
    },
    "00b982e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t ** __cdecl fcn.00b982e0(int16_t *lpsz, int16_t *cchLength, uint noname_2, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_ECX;\n    int16_t *piVar5;\n    int32_t iVar6;\n    int16_t *piVar7;\n    int32_t iVar8;\n    int16_t **ppiVar9;\n    uint var_4h;\n    \n    if (in_ECX[3] != 0) {\n        fcn.00b97faf();\n        (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n        iVar1 = in_ECX[2];\n        if (iVar1 == 0) {\n            for (ppiVar9 = *in_ECX; ppiVar9 != NULL; ppiVar9 = ppiVar9[9]) {\n                piVar7 = ppiVar9[1];\n                if (piVar7 == cchLength) {\n                    piVar2 = *ppiVar9;\n                    piVar5 = lpsz;\n                    while( true ) {\n                        if (piVar7 == NULL) goto code_r0x00b98332;\n                        if (*piVar2 != *piVar5) break;\n                        piVar2 = piVar2 + 1;\n                        piVar5 = piVar5 + 1;\n                        piVar7 = piVar7 + -1;\n                    }\n                }\n            }\n        }\n        else {\n            iVar6 = 0;\n            iVar8 = in_ECX[3] + -1;\n            if (-1 < iVar8) {\n                do {\n                    iVar3 = (iVar8 + iVar6) / 2;\n                    iVar4 = fcn.00b98019(*(iVar1 + iVar3 * 4));\n                    if (iVar4 < 0) {\n                        iVar8 = iVar3 + -1;\n                    }\n                    else {\n                        if (iVar4 < 1) {\n                            if (iVar6 <= iVar8) {\n                                ppiVar9 = *(iVar1 + iVar3 * 4);\n                                goto code_r0x00b98332;\n                            }\n                            break;\n                        }\n                        iVar6 = iVar3 + 1;\n                    }\n                } while (iVar6 <= iVar8);\n            }\n        }\n    }\n    ppiVar9 = NULL;\ncode_r0x00b98332:\n    *arg_14h = *arg_14h + -1;\n    if (*arg_14h == 0) {\n        fcn.00bb106c(lpsz);\n        fcn.00bb106c(arg_14h);\n    }\n    return ppiVar9;\n}\n",
        "token_count": 610
    },
    "00b983a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b983a8(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    if (in_ECX[2] == 0) {\n        puVar1 = fcn.00bb0ff6(0x28);\n        if (puVar1 == NULL) {\n            puVar1 = NULL;\n        }\n        else {\n            fcn.00b977c7();\n        }\n        fcn.00bb07c0(arg_8h);\n        fcn.00b97faf();\n        (*_sym.imp.USER32.dll_CharUpperBuffW)(*puVar1, puVar1[1]);\n        puVar1[9] = 0;\n        if (in_ECX[1] == 0) {\n            *in_ECX = puVar1;\n        }\n        else {\n            *(in_ECX[1] + 0x24) = puVar1;\n        }\n        in_ECX[3] = in_ECX[3] + 1;\n        in_ECX[1] = puVar1;\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "00b98408": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b98408(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (param_1[2] != 0) {\n        fcn.00bb106c(param_1[2]);\n    }\n    iVar2 = *param_1;\n    if (iVar2 != 0) {\n        do {\n            iVar1 = *(iVar2 + 0x24);\n            fcn.00b95a64();\n            fcn.00bb106c(iVar2);\n            iVar2 = iVar1;\n        } while (iVar1 != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "00b9843f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b9843f(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(param_1 + 9) != '\\0') {\n        iVar2 = param_1[1];\n        iVar3 = *(iVar2 + 8);\n        if (iVar2 != 0) {\n            fcn.00be671a(iVar2);\n        }\n        param_1[1] = iVar3;\n        *(param_1 + 9) = 0;\n    }\n    if (*(param_1 + 2) == '\\0') {\n        piVar1 = param_1[1];\n        iVar2 = piVar1[2];\n        if (piVar1 != NULL) {\n            iVar3 = *piVar1;\n            if (iVar3 != 0) {\n                if (*(iVar3 + 0x18) != 0) {\n                    fcn.00b98720(*(iVar3 + 0x18));\n                }\n                if (*(iVar3 + 0x1c) != 0) {\n                    fcn.00b98720(*(iVar3 + 0x1c));\n                }\n                if ((*(iVar3 + 0x10) == '\\0') && (iVar4 = *(iVar3 + 0x14),  iVar4 != 0)) {\n                    fcn.00b99df0();\n                    fcn.00bb106c(iVar4);\n                }\n                fcn.00b95a64();\n                fcn.00bb106c(iVar3);\n            }\n            fcn.00bb106c(piVar1);\n        }\n        param_1[1] = iVar2;\n        *(param_1 + 9) = 0;\n    }\n    else {\n        *(param_1 + 9) = 1;\n    }\n    *param_1 = *param_1 + -1;\n    return;\n}\n",
        "token_count": 451
    },
    "00b984dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b984dc(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 9) == '\\0') {\n        puVar2 = fcn.00bb0ff6(0xc);\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            *puVar2 = 0;\n            iVar1 = arg_8h[1];\n            puVar2[1] = iVar1;\n            if (iVar1 < 0) {\n                puVar2[1] = 0;\n            }\n            fcn.00b98794(puVar2, *arg_8h);\n        }\n        puVar2[2] = in_ECX[1];\n        in_ECX[1] = puVar2;\n    }\n    else {\n        puVar2 = in_ECX[1];\n        *puVar2 = *arg_8h;\n        puVar2[1] = arg_8h[1];\n        *(in_ECX + 9) = 0;\n    }\n    *in_ECX = *in_ECX + 1;\n    return;\n}\n",
        "token_count": 274
    },
    "00b98620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b98620(uint arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    \n    if (arg_14h == 0) {\n        if (*0xc57280 != 0) {\n            fcn.00be670d();\n        }\n    }\n    else if ((arg_14h != 1) && (arg_14h != 2)) {\n        if (arg_14h != 0x10) {\n            return 0;\n        }\n        arg_10h = arg_10h | 0x400;\n    }\n    uVar1 = fcn.00b98b13(arg_8h, arg_ch, arg_10h);\n    return uVar1;\n}\n",
        "token_count": 177
    },
    "00b98720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b98720(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h != NULL) {\n        if (arg_8h[6] != 0) {\n            fcn.00b98720(arg_8h[6]);\n        }\n        if (arg_8h[7] != 0) {\n            fcn.00b98720(arg_8h[7]);\n        }\n        if ((*(arg_8h + 4) == '\\0') && (iVar1 = arg_8h[5],  iVar1 != 0)) {\n            fcn.00b99df0();\n            fcn.00bb106c(iVar1);\n        }\n        *arg_8h[3] = *arg_8h[3] + -1;\n        if (*arg_8h[3] == 0) {\n            fcn.00bb106c(*arg_8h);\n            fcn.00bb106c(arg_8h[3]);\n        }\n        fcn.00bb106c(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "00b987c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint16_t ** __cdecl fcn.00b987c0(uint16_t **arg_8h, uint16_t **arg_ch)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    bool bVar5;\n    \n    if (arg_ch == NULL) {\n        arg_8h[7] = NULL;\n        arg_8h[6] = NULL;\n        return arg_8h;\n    }\n    fcn.00b988a0(arg_8h, &arg_ch);\n    puVar4 = arg_8h[1];\n    puVar2 = arg_ch[1];\n    if (puVar4 == NULL) {\n        if (puVar2 != NULL) goto code_r0x00b98855;\ncode_r0x00b9888d:\n        if (puVar4 != NULL) goto code_r0x00b98827;\n    }\n    else if (puVar2 == NULL) goto code_r0x00b9888d;\n    puVar3 = *arg_ch;\n    if (puVar4 < puVar2) {\n        puVar4 = *arg_8h;\n        for (; puVar2 != NULL; puVar2 = puVar2 + -1) {\n            if (*puVar4 != *puVar3) {\n                bVar5 = *puVar4 < *puVar3;\n                goto code_r0x00b9881b;\n            }\n            puVar4 = puVar4 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    else {\n        puVar2 = *arg_8h;\n        for (; puVar4 != NULL; puVar4 = puVar4 + -1) {\n            bVar5 = *puVar2 < *puVar3;\n            if (*puVar2 != *puVar3) goto code_r0x00b9881b;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    iVar1 = 0;\ncode_r0x00b98821:\n    if (iVar1 < 0) {\ncode_r0x00b98855:\n        puVar4 = arg_ch[6];\n        arg_8h[7] = arg_ch;\n        arg_8h[6] = puVar4;\n        arg_ch[6] = NULL;\n        return arg_8h;\n    }\n    if (iVar1 < 1) {\n        return arg_ch;\n    }\ncode_r0x00b98827:\n    arg_8h[7] = arg_ch[7];\n    arg_8h[6] = arg_ch;\n    arg_ch[7] = NULL;\n    return arg_8h;\ncode_r0x00b9881b:\n    iVar1 = (-bVar5 & 0xfffffffe) + 1;\n    goto code_r0x00b98821;\n}\n",
        "token_count": 654
    },
    "00b988a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00b988a0(uint16_t **arg_8h, uint16_t **arg_ch)\n\n{\n    uint32_t uVar1;\n    uint16_t *puVar2;\n    uint32_t in_EAX;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    uint16_t **ppuVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint var_10h;\n    uint16_t *var_ch;\n    uint16_t *var_8h;\n    uint16_t *var_4h;\n    \n    if (*arg_ch == NULL) {\n        return in_EAX & 0xffffff00;\n    }\n    if ((*0xc57440 & 1) == 0) {\n        *0xc57440 = *0xc57440 | 1;\n        fcn.00b977c7();\n        fcn.00bb2f80(0xbcb80a);\n    }\n    *0xc57460 = 0;\n    *0xc5745c = 0;\n    var_ch = 0xc57444;\n    var_8h = 0xc57444;\n    do {\n        while( true ) {\n            ppuVar6 = *arg_ch;\n            puVar7 = arg_8h[1];\n            puVar5 = ppuVar6[1];\n            if (puVar7 != NULL) break;\n            if (puVar5 == NULL) {\ncode_r0x00bcf327:\n                if (puVar7 == NULL) goto code_r0x00b98903;\n                goto code_r0x00b9893b;\n            }\ncode_r0x00b98984:\n            ppuVar6 = ppuVar6[6];\n            if (ppuVar6 == NULL) goto code_r0x00b98946;\n            puVar5 = ppuVar6[1];\n            if (puVar5 < puVar7) {\n                puVar7 = puVar5;\n            }\n            puVar4 = *ppuVar6;\n            puVar8 = *arg_8h;\n            var_4h = puVar7;\n            if (puVar7 != NULL) {\n                do {\n                    if (*puVar8 != *puVar4) {\n                        if (*puVar8 < *puVar4) goto code_r0x00b989be;\n                        goto code_r0x00b989d7;\n                    }\n                    puVar8 = puVar8 + 1;\n                    puVar4 = puVar4 + 1;\n                    var_4h = var_4h + -1;\n                } while (var_4h != NULL);\n                puVar5 = ppuVar6[1];\n            }\n            if (puVar7 < puVar5) {\ncode_r0x00b989be:\n                *(*arg_ch + 0xc) = ppuVar6[7];\n                ppuVar6[7] = *arg_ch;\n                *arg_ch = ppuVar6;\n                if (ppuVar6[6] == NULL) goto code_r0x00b98946;\n            }\ncode_r0x00b989d7:\n            *(var_ch + 0xc) = *arg_ch;\n            var_ch = *arg_ch;\n            *arg_ch = *(var_ch + 0xc);\n        }\n        if (puVar5 == NULL) goto code_r0x00bcf327;\ncode_r0x00b98903:\n        if (puVar7 < puVar5) {\n            puVar4 = *arg_8h;\n            puVar8 = *ppuVar6;\n            for (; puVar5 != NULL; puVar5 = puVar5 + -1) {\n                if (*puVar4 != *puVar8) {\n                    iVar3 = (-(*puVar4 < *puVar8) & 0xfffffffe) + 1;\n                    goto code_r0x00b98932;\n                }\n                puVar4 = puVar4 + 1;\n                puVar8 = puVar8 + 1;\n            }\n            iVar3 = 0;\n        }\n        else {\n            puVar5 = *ppuVar6;\n            puVar4 = *arg_8h;\n            for (puVar8 = puVar7; puVar8 != NULL; puVar8 = puVar8 + -1) {\n                if (*puVar4 != *puVar5) {\n                    iVar3 = (-(*puVar4 < *puVar5) & 0xfffffffe) + 1;\n                    goto code_r0x00b98930;\n                }\n                puVar4 = puVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            iVar3 = 0;\ncode_r0x00b98930:\n            ppuVar6 = *arg_ch;\n        }\ncode_r0x00b98932:\n        if (iVar3 < 0) goto code_r0x00b98984;\n        if (iVar3 < 1) {\n            arg_ch._3_1_ = 1;\n            goto code_r0x00b98949;\n        }\ncode_r0x00b9893b:\n        ppuVar6 = ppuVar6[7];\n        if (ppuVar6 == NULL) {\ncode_r0x00b98946:\n            arg_ch._3_1_ = 0;\ncode_r0x00b98949:\n            uVar1 = *(*arg_ch + 0xc);\n            *(var_8h + 0xe) = uVar1;\n            *(var_ch + 0xc) = *(*arg_ch + 0xe);\n            *(*arg_ch + 0xc) = *0xc57460;\n            *(*arg_ch + 0xe) = *0xc5745c;\n            return uVar1 & 0xffffff00 | arg_ch._3_1_;\n        }\n        puVar5 = ppuVar6[1];\n        if (puVar7 < ppuVar6[1]) {\n            puVar5 = puVar7;\n        }\n        puVar4 = *arg_8h;\n        puVar8 = *ppuVar6;\n        for (puVar2 = puVar5; puVar2 != NULL; puVar2 = puVar2 + -1) {\n            if (*puVar8 != *puVar4) {\n                if (*puVar8 < *puVar4) goto code_r0x00b98a92;\n                goto code_r0x00b98a24;\n            }\n            puVar8 = puVar8 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        if (puVar5 < puVar7) {\ncode_r0x00b98a92:\n            *(*arg_ch + 0xe) = ppuVar6[6];\n            ppuVar6[6] = *arg_ch;\n            *arg_ch = ppuVar6;\n            if (ppuVar6[7] == NULL) goto code_r0x00b98946;\n        }\ncode_r0x00b98a24:\n        *(var_8h + 0xe) = *arg_ch;\n        var_8h = *arg_ch;\n        *arg_ch = *(var_8h + 0xe);\n    } while( true );\n}\n",
        "token_count": 1608
    },
    "00b98d3b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b98d3b(int32_t *arg_8h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    iVar2 = fcn.00bb0ff6(0x214);\n    *(iVar2 + 8) = *(*arg_8h + 8);\n    iVar5 = 0;\n    iVar4 = *(*arg_8h + 0x10c);\n    *(iVar2 + 0x10c) = iVar4;\n    if (0 < iVar4) {\n        iVar4 = 0xc;\n        do {\n            iVar5 = iVar5 + 1;\n            *(iVar4 + iVar2) = *(iVar4 + *arg_8h);\n            iVar4 = iVar4 + 4;\n        } while (iVar5 < *(iVar2 + 0x10c));\n    }\n    iVar5 = 0;\n    iVar4 = *(*arg_8h + 0x210);\n    *(iVar2 + 0x210) = iVar4;\n    if (0 < iVar4) {\n        iVar4 = 0x110;\n        do {\n            iVar5 = iVar5 + 1;\n            *(iVar4 + iVar2) = *(iVar4 + *arg_8h);\n            iVar4 = iVar4 + 4;\n        } while (iVar5 < *(iVar2 + 0x210));\n    }\n    iVar4 = *(*arg_8h + 4);\n    *in_ECX = iVar2;\n    iVar1 = *(iVar2 + 8) * 4;\n    uVar3 = fcn.00bb0ff6(-(iVar1 >> 0x20 != 0) | iVar1);\n    iVar2 = 0;\n    *(*in_ECX + 4) = uVar3;\n    if (0 < *(*in_ECX + 8)) {\n        do {\n            if (*(iVar4 + iVar2 * 4) == 0) {\n                *(*(*in_ECX + 4) + iVar2 * 4) = 0;\n            }\n            else {\n                iVar5 = fcn.00bb0ff6(0x10);\n                if (iVar5 == 0) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = fcn.00b99dcb(*(iVar4 + iVar2 * 4));\n                }\n                *(*(*in_ECX + 4) + iVar2 * 4) = uVar3;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(*in_ECX + 8));\n    }\n    return;\n}\n",
        "token_count": 606
    },
    "00b98ea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b98ea0(int32_t **arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    uint *puVar9;\n    \n    if ((arg_ch == 2) || (arg_ch == 4)) {\n        iVar7 = **arg_8h;\n        if ((1 < iVar7) && (iVar7 != 0x7fffffff)) {\n            **arg_8h = iVar7 + -1;\n            fcn.00b98d3b(arg_8h);\n            **arg_8h = 1;\n        }\n        piVar8 = *arg_8h;\n        if (arg_ch == 2) {\n            if (*piVar8 != 0x7fffffff) {\n                *piVar8 = 1;\n            }\n        }\n        else {\n            *piVar8 = 0x7fffffff;\n        }\n    }\n    if ((arg_10h != NULL) && ((*arg_8h)[0x84] = 0,  0 < arg_10h)) {\n        puVar9 = &arg_10h;\n        piVar8 = arg_10h;\n        do {\n            puVar1 = puVar9 + 1;\n            puVar9 = puVar9 + 1;\n            fcn.00b9928c(*puVar1);\n            piVar8 = piVar8 + -1;\n        } while (piVar8 != NULL);\n    }\n    piVar8 = *arg_8h;\n    piVar3 = piVar8[2];\n    if ((piVar3 == NULL) || (iVar7 = piVar8[0x43],  iVar7 != piVar8[0x84])) {\ncode_r0x00b99038:\n        uVar4 = 0;\n    }\n    else {\n        iVar5 = 0;\n        if (0 < iVar7) {\n            piVar3 = piVar8 + 0x44;\n            do {\n                if ((*piVar3 < 0) || (piVar3[-0x41] <= *piVar3)) goto code_r0x00b99038;\n                iVar5 = iVar5 + 1;\n                piVar3 = piVar3 + 1;\n            } while (iVar5 < iVar7);\n            piVar3 = piVar8[2];\n        }\n        iVar5 = 0;\n        if (0 < iVar7) {\n            iVar6 = 0x110;\n            do {\n                arg_10h = piVar8 + iVar6 + -0x104;\n                if (*arg_10h == 5000) {\n                    piVar3 = piVar3 / 5000;\n                    arg_10h = piVar3;\n                }\n                else {\n                    piVar3 = piVar3 / *arg_10h;\n                }\n                piVar2 = iVar6 + piVar8;\n                iVar6 = iVar6 + 4;\n                iVar5 = iVar5 + *piVar2 * piVar3;\n                iVar7 = iVar7 + -1;\n            } while (iVar7 != 0);\n            if (iVar5 < 0) goto code_r0x00b99038;\n        }\n        if (*(piVar8[1] + iVar5 * 4) == 0) {\n            iVar7 = fcn.00bb0ff6(0x10);\n            if (iVar7 == 0) {\n                iVar7 = 0;\n            }\n            else {\n                iVar6 = fcn.00bb0ff6(0x10);\n                if (iVar6 == 0) {\n                    uVar4 = 0;\n                }\n                else {\n                    uVar4 = fcn.00b97f41(0xc1f910);\n                }\n                *(iVar7 + 8) = uVar4;\n                *(iVar7 + 0xc) = 4;\n            }\n            *((*arg_8h)[1] + iVar5 * 4) = iVar7;\n            return *((*arg_8h)[1] + iVar5 * 4);\n        }\n        uVar4 = *((*arg_8h)[1] + iVar5 * 4);\n    }\n    return uVar4;\n}\n",
        "token_count": 979
    },
    "00b99040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b99040(int32_t **arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_4h;\n    \n    ppiVar1 = arg_8h;\n    iVar3 = **arg_8h;\n    if ((1 < iVar3) && (iVar3 != 0x7fffffff)) {\n        **arg_8h = iVar3 + -1;\n        fcn.00b98d3b(arg_8h);\n        **arg_8h = 1;\n    }\n    if (**arg_8h != 0x7fffffff) {\n        **arg_8h = 1;\n    }\n    if (arg_10h != 0) {\n        (*arg_8h)[0x84] = 0;\n        if (0 < arg_10h) {\n            piVar5 = &arg_10h;\n            do {\n                piVar5 = piVar5 + 1;\n                iVar3 = (*arg_8h)[0x84];\n                if (iVar3 < 0x40) {\n                    (*arg_8h)[iVar3 + 0x44] = *piVar5;\n                    (*arg_8h)[0x84] = (*arg_8h)[0x84] + 1;\n                }\n                arg_10h = arg_10h + -1;\n            } while (arg_10h != 0);\n        }\n    }\n    piVar5 = *arg_8h;\n    iVar3 = piVar5[2];\n    if ((iVar3 == 0) || (iVar7 = piVar5[0x43],  iVar7 != piVar5[0x84])) {\ncode_r0x00b991aa:\n        uVar4 = 0;\n    }\n    else {\n        iVar6 = 0;\n        if (0 < iVar7) {\n            piVar2 = piVar5 + 0x44;\n            do {\n                if ((*piVar2 < 0) || (piVar2[-0x41] <= *piVar2)) goto code_r0x00b991aa;\n                iVar6 = iVar6 + 1;\n                piVar2 = piVar2 + 1;\n            } while (iVar6 < iVar7);\n        }\n        arg_10h = 0;\n        if (0 < iVar7) {\n            arg_8h = 0x110;\n            do {\n                piVar2 = arg_8h + -0x104 + piVar5;\n                if (*piVar2 == 0x3ea) {\n                    iVar3 = iVar3 / 0x3ea;\n                }\n                else {\n                    iVar3 = iVar3 / *piVar2;\n                }\n                arg_10h = arg_10h + *(arg_8h + piVar5) * iVar3;\n                arg_8h = arg_8h + 4;\n                iVar7 = iVar7 + -1;\n            } while (iVar7 != 0);\n            if (arg_10h < 0) goto code_r0x00b991aa;\n        }\n        iVar3 = arg_10h * 4;\n        if (*(iVar3 + piVar5[1]) == 0) {\n            iVar7 = fcn.00bb0ff6(0x10);\n            if (iVar7 == 0) {\n                iVar7 = 0;\n            }\n            else {\n                *(iVar7 + 8) = 0;\n                fcn.00b99ac0(arg_ch);\n            }\n            *(iVar3 + (*ppiVar1)[1]) = iVar7;\n        }\n        else {\n            fcn.00b99e9c(arg_ch);\n        }\n        uVar4 = *(iVar3 + (*ppiVar1)[1]);\n    }\n    return uVar4;\n}\n",
        "token_count": 887
    },
    "00b99399": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00b99399(double *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    \n    iVar1 = *(param_1 + 0xc);\n    piVar2 = iVar1 + -1;\n    if (piVar2 == NULL) {\n        iVar1 = *param_1;\ncode_r0x00b993c3:\n        return piVar2 & 0xffffff00 | iVar1 != 0;\n    }\n    if (iVar1 == 2) {\n        uVar3 = *param_1 | *(param_1 + 4);\n        if (uVar3 != 0) {\ncode_r0x00bcf643:\n            return CONCAT31(uVar3 >> 8, 1);\n        }\n    }\n    else {\n        if (iVar1 != 3) {\n            if (iVar1 == 4) {\n                iVar1 = *(*(param_1 + 1) + 4);\n            }\n            else {\n                if (iVar1 != 7) {\n                    if (iVar1 == 9) {\n                        return *param_1;\n                    }\n                    uVar3 = iVar1 - 0xb;\n                    if (uVar3 == 0) {\n                        piVar2 = *param_1;\n                        iVar1 = *piVar2;\n                        goto code_r0x00b993c3;\n                    }\n                    goto code_r0x00bcf64d;\n                }\n                iVar1 = *param_1;\n            }\n            return iVar1 != 0;\n        }\n        uVar3 = (0.0 < *param_1) << 8 | (*param_1 == 0.0) << 0xe;\n        if (POPCOUNT(uVar3 >> 8 & 0x44) == '\\0') goto code_r0x00bcf643;\n    }\ncode_r0x00bcf64d:\n    return uVar3 & 0xffffff00;\n}\n",
        "token_count": 438
    },
    "00b993dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00b993dd(int16_t **param_1)\n\n{\n    int16_t *in_EAX;\n    \n    if ((((param_1[3] == 0x8) && (in_EAX = *param_1,  in_EAX != NULL)) && ((*in_EAX == 9 || (*in_EAX == 0xd)))) &&\n       (*(in_EAX + 4) != 0)) {\n        return CONCAT31(in_EAX >> 8, 1);\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 126
    },
    "00b994da": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b994da(double *param_1)\n\n{\n    int16_t iVar1;\n    int16_t **ppiVar2;\n    bool bVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint unaff_ESI;\n    bool bVar6;\n    bool bVar7;\n    float10 fVar8;\n    uint64_t uVar9;\n    uint uVar11;\n    double dVar10;\n    \n    cVar4 = fcn.00b99c42();\n    if ((cVar4 != '\\0') || (*(param_1 + 0xc) == 3)) {\n        return;\n    }\n    cVar4 = fcn.00b99606();\n    if (cVar4 != '\\0') {\n        if (*(param_1 + 0xc) != 3) {\n            fVar8 = fcn.00b99cf8(unaff_ESI, param_1, param_1);\n            dVar10 = fVar8;\n            fcn.00b99a20();\n            *param_1 = dVar10;\n            *(param_1 + 0xc) = 3;\n        }\n        return;\n    }\n    if (*(param_1 + 0xc) == 1) {\n        return;\n    }\n    if (*(param_1 + 0xc) == 2) {\n        return;\n    }\n    uVar9 = fcn.00b99d46();\n    uVar11 = uVar9 >> 0x20;\n    uVar5 = uVar9;\n    bVar3 = false;\n    if (*(param_1 + 0xc) == 4) {\n        ppiVar2 = *(param_1 + 1);\n        if ((**ppiVar2 != 0x30) || (((iVar1 = (*ppiVar2)[1],  iVar1 != 0x78 && (iVar1 != 0x58)) || (0x12 < ppiVar2[1])))\n           ) goto code_r0x00b99539;\n        bVar6 = ppiVar2[1] < 0xa;\n        bVar7 = ppiVar2[1] == 0xa;\ncode_r0x00b99554:\n        if (bVar6 || bVar7) goto code_r0x00b99556;\n    }\n    else {\ncode_r0x00b99539:\n        if ((-0x100000001 < uVar9) && ((uVar9 < 0x8000000000000000 || (0x7fffffff < uVar5)))) {\n            if (uVar9 < 0) goto code_r0x00b99556;\n            if (uVar9 < 0x100000000) {\n                bVar6 = uVar5 < 0x7fffffff;\n                bVar7 = uVar5 == 0x7fffffff;\n                goto code_r0x00b99554;\n            }\n        }\n    }\n    bVar3 = true;\ncode_r0x00b99556:\n    fcn.00b99a20();\n    *param_1 = uVar5;\n    if (bVar3) {\n        *(param_1 + 4) = uVar11;\n        *(param_1 + 0xc) = 2;\n    }\n    else {\n        *(param_1 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 743
    },
    "00b99593": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b99593(double *param_1)\n\n{\n    float10 fVar1;\n    \n    if (*(param_1 + 0xc) != 3) {\n        fVar1 = fcn.00b99cf8();\n        fcn.00b99a20();\n        *param_1 = fVar1;\n        *(param_1 + 0xc) = 3;\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00b9963c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b9963c(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    double *in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    float10 fVar4;\n    ulong uVar5;\n    \n    iVar1 = *(in_ECX + 0xc);\n    if (iVar1 == 1) {\n        if (arg_8h[3] == 1) {\n            iVar3 = *in_ECX * *arg_8h >> 0x20;\n            iVar1 = *in_ECX * *arg_8h;\n            iVar2 = *in_ECX * *arg_8h;\n            if ((iVar2 - iVar1 == 0) && (iVar2 >> 0x1f == iVar3)) {\n                *in_ECX = iVar2;\n            }\n            else {\n                *(in_ECX + 0xc) = 2;\n                *in_ECX = iVar1;\n                *(in_ECX + 4) = iVar3;\n            }\n        }\n        else if (arg_8h[3] == 2) {\n            uVar5 = fcn.00bc6200(*in_ECX, *in_ECX >> 0x1f, *arg_8h, arg_8h[1]);\n            *in_ECX = uVar5;\n            *(in_ECX + 4) = uVar5 >> 0x20;\n            *(in_ECX + 0xc) = 2;\n        }\n        else {\n            fcn.00b99593();\n            fVar4 = fcn.00b99cf8();\n            *in_ECX = fVar4 * *in_ECX;\n        }\n        goto code_r0x00b99678;\n    }\n    if (iVar1 == 2) {\n        if ((arg_8h[3] == 1) || (arg_8h[3] == 2)) {\n            uVar5 = fcn.00b99d46();\n            uVar5 = fcn.00bc6200(uVar5, *in_ECX, *(in_ECX + 4));\n            *in_ECX = uVar5;\n            *(in_ECX + 4) = uVar5 >> 0x20;\n            goto code_r0x00b99678;\n        }\n        fcn.00b99593();\n    }\n    else if (iVar1 != 3) {\n        if (iVar1 == 4) {\n            fcn.00b994da();\n            fcn.00b9963c(arg_8h);\n            goto code_r0x00b99678;\n        }\n        if ((iVar1 != 9) && (iVar1 != 0xb)) goto code_r0x00b99678;\n        fcn.00b99593();\n    }\n    fVar4 = fcn.00b99cf8();\n    *in_ECX = fVar4 * *in_ECX;\ncode_r0x00b99678:\n    fcn.00b9997f();\n    return;\n}\n",
        "token_count": 673
    },
    "00b99700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b99700(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    double *in_ECX;\n    float10 fVar8;\n    ulong uVar9;\n    \n    if (*(in_ECX + 0xc) == 4) {\n        uVar7 = **(in_ECX + 1);\n        iVar4 = fcn.00bb3bba(uVar7, 0xc1fb80);\n        if ((iVar4 == 0) && (iVar4 = fcn.00bb3bba(uVar7, 0xc1fb7c),  iVar4 == 0)) {\n            fcn.00b99505();\n        }\n        else if (*(in_ECX + 0xc) != 3) {\n            fVar8 = fcn.00b99cf8();\n            fcn.00b99a20();\n            *in_ECX = fVar8;\n            *(in_ECX + 0xc) = 3;\n        }\n        fcn.00b99700(arg_8h);\n        goto code_r0x00b9978a;\n    }\n    // switch table (11 cases) at 0xb99840\n    switch(*(in_ECX + 0xc)) {\n    case 1:\n        if (arg_8h[3] == 1) {\n            uVar3 = *arg_8h;\n            uVar1 = *in_ECX;\n            iVar4 = (uVar1 >> 0x1f) + (uVar3 >> 0x1f) + CARRY4(uVar1, uVar3);\n            if (uVar1 + uVar3 >> 0x1f == iVar4) {\n                *in_ECX = uVar1 + uVar3;\n            }\n            else {\n                *(in_ECX + 0xc) = 2;\n                *in_ECX = uVar1 + uVar3;\n                *(in_ECX + 4) = iVar4;\n            }\n            goto code_r0x00b9978a;\n        }\n        if (arg_8h[3] == 2) {\n            uVar3 = *in_ECX;\n            uVar1 = *arg_8h;\n            uVar2 = arg_8h[1];\n            *in_ECX = uVar3 + *arg_8h;\n            *(in_ECX + 4) = (uVar3 >> 0x1f) + uVar2 + CARRY4(uVar3, uVar1);\n            *(in_ECX + 0xc) = 2;\n            goto code_r0x00b9978a;\n        }\n        break;\n    case 2:\n        if ((arg_8h[3] == 1) || (arg_8h[3] == 2)) {\n            uVar9 = fcn.00b99d46();\n            uVar3 = *in_ECX;\n            *in_ECX = *in_ECX + uVar9;\n            *(in_ECX + 4) = *(in_ECX + 4) + (uVar9 >> 0x20) + CARRY4(uVar3, uVar9);\n        }\n        break;\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 8:\n        goto code_r0x00b9978a;\n    case 7:\n        iVar4 = *in_ECX;\n        if (arg_8h[3] == 1) {\n            iVar5 = fcn.00b99c9c();\n        }\n        else {\n            iVar5 = fcn.00b99d46();\n        }\n        *in_ECX = iVar4 + iVar5;\n        goto code_r0x00b9978a;\n    case 9:\n    case 10:\n        fcn.00b99593();\n    default:\n        fVar8 = fcn.00b99cf8();\n        *in_ECX = fVar8 + *in_ECX;\n        goto code_r0x00b9978a;\n    case 0xb:\n        if (arg_8h[3] == 0xb) {\n            iVar5 = fcn.00bf89e2();\n            iVar4 = **in_ECX;\n            iVar6 = fcn.00bb0ff6(iVar5 + iVar4);\n            fcn.00bb1080(iVar6, (*in_ECX)[1], **in_ECX);\n            uVar7 = fcn.00bf89e2();\n            uVar7 = fcn.00bf899f(uVar7);\n            fcn.00bb1080(**in_ECX + iVar6, uVar7);\n            fcn.00bb106c(*(*in_ECX + 4));\n            *(*in_ECX + 4) = iVar6;\n            **in_ECX = iVar5 + iVar4;\n            goto code_r0x00b9978a;\n        }\n    }\n    fcn.00b99593();\n    fVar8 = fcn.00b99cf8();\n    *in_ECX = fVar8 + *in_ECX;\ncode_r0x00b9978a:\n    if (*(in_ECX + 1) != 0) {\n        fcn.00b97b3d(*(in_ECX + 1));\n        *(in_ECX + 1) = 0;\n    }\n    return;\n}\n",
        "token_count": 1229
    },
    "00b99890": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b99890(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t **in_ECX;\n    uint32_t uVar5;\n    uint var_1ch;\n    uint *var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t **var_8h;\n    \n    var_8h = in_ECX;\n    fcn.00b99458();\n    piVar1 = *in_ECX;\n    fcn.00b992c0();\n    *(*piVar1 + 0x210) = 0;\n    uVar2 = *(arg_8h + 8);\n    if (uVar2 != 0) {\n        var_ch = uVar2;\n        fcn.00b991b0(*in_ECX, 1);\n        uVar5 = 0;\n        if (uVar2 != 0) {\n            do {\n                puVar3 = *(*(arg_8h + 4) + uVar5 * 4);\n                puVar4 = fcn.00bb0ff6(0x10);\n                if (puVar4 == NULL) {\n                    puVar4 = NULL;\n                }\n                else {\n                    *puVar4 = *puVar3;\n                    puVar4[1] = puVar3[1];\n                    puVar4[2] = puVar3[2];\n                    piVar1 = puVar3[3];\n                    puVar4[3] = piVar1;\n                    *piVar1 = *piVar1 + 1;\n                }\n                var_10h = 4;\n                var_14h = puVar4;\n                fcn.00b99040(*var_8h, &var_1ch, 1);\n                if (puVar4 != NULL) {\n                    *puVar4[3] = *puVar4[3] + -1;\n                    if (*puVar4[3] == 0) {\n                        fcn.00bb106c(*puVar4);\n                        fcn.00bb106c(puVar4[3]);\n                    }\n                    fcn.00bb106c(puVar4);\n                    var_14h = NULL;\n                }\n                uVar5 = uVar5 + 1;\n                var_10h = 1;\n                var_1ch = 0;\n            } while (uVar5 < var_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 563
    },
    "00b99997": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00b99997(ulong *param_1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    ushort *arg_8h;\n    uint uVar3;\n    char16_t *arg_ch;\n    uint var_94h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uVar3 = 0;\n    if (*(param_1 + 1) == 0) {\n        iVar2 = *(param_1 + 0xc);\n        if (iVar2 == 1) {\n            fcn.00bb3700(*param_1, &var_94h, 10);\n        }\n        else if (iVar2 == 2) {\n            fcn.00bb36d0(*param_1, *(param_1 + 4), &var_94h, 10);\n        }\n        else if (iVar2 == 3) {\n            fcn.00bb38d8(&var_94h, L\"%.15g\", *param_1);\n        }\n        else if (iVar2 == 7) {\n            fcn.00bb38d8(&var_94h, L\"0x%p\", *param_1);\n        }\n        else if (iVar2 == 9) {\n            if (*param_1 == '\\0') {\n                arg_ch = L\"False\";\n            }\n            else {\n                arg_ch = L\"True\";\n            }\n            fcn.00bb2ffc(&var_94h, arg_ch);\n        }\n        else if (iVar2 == 10) {\n            iVar2 = *param_1;\n            var_ch = *(iVar2 + 0xc);\n            var_10h = *(iVar2 + 8);\n            var_8h = *(iVar2 + 0x10);\n            var_4h = *(iVar2 + 0x14);\n            *var_4h = *var_4h + 1;\n            fcn.00bb2ffc(&var_94h, var_10h);\n            fcn.00b95a64();\n        }\n        else {\n            if (iVar2 == 0xb) {\n                iVar1 = (**param_1 * 4 + 6) * 2;\n                arg_8h = fcn.00bb0ff6(-(iVar1 >> 0x20 != 0) | iVar1);\n                if (**param_1 == 0) {\n                    *arg_8h = 0;\n                }\n                else {\n                    fcn.00bf57ad(**param_1);\n                }\n                iVar2 = fcn.00bb0ff6(0x10);\n                if (iVar2 != 0) {\n                    uVar3 = fcn.00b97f41(arg_8h);\n                }\n                *(param_1 + 1) = uVar3;\n                fcn.00bb106c(arg_8h);\n                return;\n            }\n            var_94h._0_2_ = 0;\n        }\n        iVar2 = fcn.00bb0ff6(0x10);\n        if (iVar2 != 0) {\n            uVar3 = fcn.00b97f41(&var_94h);\n        }\n        *(param_1 + 1) = uVar3;\n    }\n    return;\n}\n",
        "token_count": 747
    },
    "00b99a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b99a20(int32_t *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = param_1[2];\n    if (puVar1 == NULL) {\n        iVar2 = param_1[3];\n    }\n    else {\n        *puVar1[3] = *puVar1[3] + -1;\n        if (*puVar1[3] == 0) {\n            fcn.00bb106c(*puVar1);\n            fcn.00bb106c(puVar1[3]);\n        }\n        fcn.00bb106c(puVar1);\n        param_1[2] = 0;\n        iVar2 = param_1[3];\n    }\n    if (iVar2 < 5) goto code_r0x00b99a33;\n    // switch table (11 cases) at 0xb99a8c\n    switch(iVar2) {\n    case 5:\n        if (*param_1 != 0) {\n            fcn.00b98e34(*param_1);\n        }\n        break;\n    case 8:\n        if (*param_1 == 0) break;\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*param_1);\n        iVar2 = *param_1;\n        goto code_r0x00bcfaa7;\n    case 10:\n        iVar2 = *param_1;\n        goto joined_r0x00bcfa99;\n    case 0xb:\n        fcn.00bb106c(*(*param_1 + 4));\n        fcn.00bb106c(*param_1);\n        break;\n    case 0xc:\n        if (*param_1 != 0) {\n            fcn.00be73f0(*param_1);\n        }\n        break;\n    case 0xd:\n    case 0xe:\n        iVar2 = *param_1;\njoined_r0x00bcfa99:\n        if (iVar2 != 0) {\n            fcn.00b95a64();\ncode_r0x00bcfaa7:\n            fcn.00bb106c(iVar2);\n        }\n        break;\n    case 0xf:\n        if (*param_1 != 0) {\n            fcn.00be7405(*param_1);\n        }\n    }\ncode_r0x00b99a33:\n    param_1[3] = 1;\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 552
    },
    "00b99ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b99ac0(ulong *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    ulong *in_ECX;\n    \n    iVar4 = *(arg_8h + 0xc);\n    *(in_ECX + 0xc) = iVar4;\n    if (iVar4 == 1) {\ncode_r0x00b99ad5:\n        uVar5 = *arg_8h;\n    }\n    else {\n        if (0xe < iVar4 - 1U) {\n            return;\n        }\n    // switch table (15 cases) at 0xb99b60\n        switch(*((iVar4 - 1U) * 4 + 0xb99b60)) {\n        case 0xb99ad5:\n            goto code_r0x00b99ad5;\n        case 0xb99aec:\n            *in_ECX = *arg_8h;\n            return;\n        case 0xb99af6:\n            puVar3 = fcn.00bb0ff6(0x10);\n            if (puVar3 == NULL) {\n                puVar3 = NULL;\n            }\n            else {\n                puVar1 = *(arg_8h + 1);\n                *puVar3 = *puVar1;\n                puVar3[1] = puVar1[1];\n                puVar3[2] = puVar1[2];\n                piVar2 = puVar1[3];\n                puVar3[3] = piVar2;\n                *piVar2 = *piVar2 + 1;\n            }\n            *(in_ECX + 1) = puVar3;\n            return;\n        case 0xb99b2a:\n            *in_ECX = *arg_8h;\n            return;\n        case 0xb99b34:\n            iVar4 = fcn.00bb0ff6(4);\n            if (iVar4 != 0) {\n                uVar5 = fcn.00b9933a(*arg_8h);\n                *in_ECX = uVar5;\n                return;\n            }\n            break;\n        case 0xbcfab4:\n            *in_ECX = *arg_8h;\n            *(in_ECX + 4) = *(arg_8h + 4);\n            return;\n        case 0xbcfac3:\n            if (*arg_8h == 0) {\n                return;\n            }\n            uVar5 = fcn.00bb0ff6(0x10);\n            *in_ECX = uVar5;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar5);\n            iVar4 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(*in_ECX, *arg_8h);\n            if (-1 < iVar4) {\n                return;\n            }\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(*in_ECX);\n            fcn.00bb106c(*in_ECX);\n            *in_ECX = 0;\n            return;\n        case 0xbcfb0e:\n            iVar4 = fcn.00bb0ff6(0x18);\n            if (iVar4 != 0) {\n                uVar5 = fcn.00bf6b8d(*arg_8h);\n                goto code_r0x00b99ad7;\n            }\n            break;\n        case 0xbcfb2e:\n            puVar3 = fcn.00bb0ff6(8);\n            *in_ECX = puVar3;\n            *puVar3 = **arg_8h;\n            if (**in_ECX != 0) {\n                uVar5 = fcn.00bb0ff6(**in_ECX);\n                *(*in_ECX + 4) = uVar5;\n                fcn.00bb1080((*in_ECX)[1], *(*arg_8h + 4), **in_ECX);\n                return;\n            }\n            uVar5 = fcn.00bb0ff6(1);\n            *(*in_ECX + 4) = uVar5;\n            **(*in_ECX + 4) = 0;\n            return;\n        case 0xbcfb88:\n            iVar4 = fcn.00bb0ff6(0x14);\n            if (iVar4 != 0) {\n                uVar5 = fcn.00bf5c77(*arg_8h);\n                goto code_r0x00b99ad7;\n            }\n            break;\n        case 0xbcfba8:\n            iVar4 = fcn.00bb0ff6(0x18);\n            if (iVar4 != 0) {\n                uVar5 = fcn.00bf1a84(*arg_8h);\n                goto code_r0x00b99ad7;\n            }\n            break;\n        case 0xbcfbc8:\n            iVar4 = fcn.00bb0ff6(0x14);\n            if (iVar4 == 0) {\n                iVar4 = 0;\n            }\n            else {\n                fcn.00b977c7();\n            }\n            *in_ECX = iVar4;\n            fcn.00b981a7(*arg_8h);\n            *(*in_ECX + 0x10) = *(*arg_8h + 0x10);\n            return;\n        }\n        uVar5 = 0;\n    }\ncode_r0x00b99ad7:\n    *in_ECX = uVar5;\n    return;\n}\n",
        "token_count": 1221
    },
    "00b99bf8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b99bf8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0xc) == 4) {\n        if (arg_8h != 0) {\n            fcn.00b97d2c(arg_8h);\n            return;\n        }\n        fcn.00b97eec();\n        return;\n    }\n    fcn.00b99a20();\n    *(in_ECX + 0xc) = 4;\n    iVar1 = fcn.00bb0ff6(0x10);\n    if (arg_8h == 0) {\n        if (iVar1 != 0) {\n            uVar2 = fcn.00b977c7();\n            goto code_r0x00b99c34;\n        }\n    }\n    else if (iVar1 != 0) {\n        uVar2 = fcn.00b97f41(arg_8h);\n        goto code_r0x00b99c34;\n    }\n    uVar2 = 0;\ncode_r0x00b99c34:\n    *(in_ECX + 8) = uVar2;\n    return;\n}\n",
        "token_count": 277
    },
    "00b99c42": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00b99c42(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = 1;\n    if ((*(param_1 + 0xc) != 1) && (*(param_1 + 0xc) != 2)) {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 83
    },
    "00b99c53": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00b99c53(double *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    bool bVar3;\n    \n    iVar1 = *(param_1 + 0xc);\n    piVar2 = iVar1 + -1;\n    if (piVar2 == NULL) {\n        bVar3 = *param_1 == 0;\n    }\n    else if (iVar1 == 2) {\n        piVar2 = *param_1 | *(param_1 + 4);\n        bVar3 = piVar2 == NULL;\n    }\n    else {\n        if (iVar1 == 3) {\n            piVar2 = (0.0 < *param_1) << 8 | (*param_1 == 0.0) << 0xe;\n            if (POPCOUNT(piVar2 >> 8 & 0x44) != '\\0') goto code_r0x00bcfc4e;\n            goto code_r0x00bcfc3e;\n        }\n        if (iVar1 == 4) {\n            piVar2 = *(param_1 + 1);\n            bVar3 = piVar2[1] == 0;\n        }\n        else {\n            if (iVar1 == 7) {\n                return *param_1 != 0;\n            }\n            if (iVar1 == 9) {\n                return *param_1;\n            }\n            piVar2 = iVar1 + -0xb;\n            if (piVar2 != NULL) goto code_r0x00bcfc4e;\n            piVar2 = *param_1;\n            bVar3 = *piVar2 == 0;\n        }\n    }\n    if (bVar3) {\ncode_r0x00bcfc4e:\n        return piVar2 & 0xffffff00;\n    }\ncode_r0x00bcfc3e:\n    return CONCAT31(piVar2 >> 8, 1);\n}\n",
        "token_count": 428
    },
    "00b99cf8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __fastcall fcn.00b99cf8(double *param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint arg_8h;\n    float10 fVar3;\n    uint var_10h;\n    \n    iVar1 = *(param_1 + 0xc);\n    if (iVar1 == 1) {\n        fVar3 = *param_1;\n    }\n    else if (iVar1 == 2) {\n        fVar3 = *param_1;\n    }\n    else if (iVar1 == 3) {\n        fVar3 = *param_1;\n    }\n    else if (iVar1 == 4) {\n        cVar2 = fcn.00b995c1();\n        if (cVar2 == '\\0') {\n            fVar3 = fcn.00bb3f79(arg_8h);\n        }\n        else {\n            fcn.00bafbfb(8);\n            fVar3 = _var_10h;\n        }\n    }\n    else if (iVar1 == 7) {\n        fVar3 = *param_1;\n    }\n    else {\n        if (iVar1 == 9) {\n            if (*param_1 != '\\0') {\n                return 1;\n            }\n        }\n        else if (iVar1 == 10) {\n            return *(*param_1 + 4);\n        }\n        fVar3 = 0;\n    }\n    return fVar3;\n}\n",
        "token_count": 327
    },
    "00b99df0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b99df0(int32_t *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = param_1[2];\n    if (puVar1 != NULL) {\n        *puVar1[3] = *puVar1[3] + -1;\n        if (*puVar1[3] == 0) {\n            fcn.00bb106c(*puVar1);\n            fcn.00bb106c(puVar1[3]);\n        }\n        fcn.00bb106c(puVar1);\n        param_1[2] = 0;\n    }\n    if (param_1[3] < 5) goto code_r0x00b99e32;\n    // switch table (11 cases) at 0xb99e70\n    switch(param_1[3]) {\n    case 5:\n        if (*param_1 != 0) {\n            fcn.00b98e34(*param_1);\n            param_1[3] = 1;\n            *param_1 = 0;\n            return;\n        }\n        break;\n    case 8:\n        if (*param_1 == 0) break;\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*param_1);\n        iVar2 = *param_1;\n        goto code_r0x00bcfdef;\n    case 10:\n        iVar2 = *param_1;\n        goto joined_r0x00bcfde1;\n    case 0xb:\n        fcn.00bb106c(*(*param_1 + 4));\n        fcn.00bb106c(*param_1);\n        break;\n    case 0xc:\n        if (*param_1 != 0) {\n            fcn.00be73f0(*param_1);\n        }\n        break;\n    case 0xd:\n    case 0xe:\n        iVar2 = *param_1;\njoined_r0x00bcfde1:\n        if (iVar2 != 0) {\n            fcn.00b95a64();\ncode_r0x00bcfdef:\n            fcn.00bb106c(iVar2);\n        }\n        break;\n    case 0xf:\n        if (*param_1 != 0) {\n            fcn.00be7405(*param_1);\n        }\n    }\ncode_r0x00b99e32:\n    param_1[3] = 1;\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 555
    },
    "00b99e9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b99e9c(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (in_ECX == arg_8h) {\n        return;\n    }\n    if ((in_ECX[3] == 4) && (arg_8h[3] == 4)) {\n        fcn.00b981a7(arg_8h[2]);\n        return;\n    }\n    iVar1 = in_ECX[2];\n    if (iVar1 != 0) {\n        fcn.00b95a64();\n        fcn.00bb106c(iVar1);\n        in_ECX[2] = 0;\n    }\n    iVar1 = in_ECX[3];\n    if (iVar1 < 0xc) {\n        if (iVar1 == 0xb) {\n            fcn.00bb106c(*(*in_ECX + 4));\n            fcn.00bb106c(*in_ECX);\n            goto code_r0x00b99edc;\n        }\n        if (iVar1 == 5) {\n            if (*in_ECX != 0) {\n                fcn.00b98e34(*in_ECX);\n            }\n            goto code_r0x00b99edc;\n        }\n        if (iVar1 != 8) {\n            if (iVar1 != 10) goto code_r0x00b99edc;\n            iVar1 = *in_ECX;\n            goto joined_r0x00bcfe6a;\n        }\n        if (*in_ECX == 0) goto code_r0x00b99edc;\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*in_ECX);\n    }\n    else {\n        if (iVar1 == 0xc) {\n            if (*in_ECX != 0) {\n                fcn.00be73f0(*in_ECX);\n            }\n            goto code_r0x00b99edc;\n        }\n        if (iVar1 < 0xd) goto code_r0x00b99edc;\n        if (0xe < iVar1) {\n            if ((iVar1 == 0xf) && (*in_ECX != 0)) {\n                fcn.00be7405(*in_ECX);\n            }\n            goto code_r0x00b99edc;\n        }\n        iVar1 = *in_ECX;\njoined_r0x00bcfe6a:\n        if (iVar1 == 0) goto code_r0x00b99edc;\n        fcn.00b95a64();\n    }\n    fcn.00bb106c();\ncode_r0x00b99edc:\n    *in_ECX = 0;\n    in_ECX[3] = 1;\n    fcn.00b99ac0(arg_8h);\n    return;\n}\n",
        "token_count": 625
    },
    "00b9b89c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00b9b89c(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint arg_8h_01;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = *(in_ECX + 0x15c);\n    if (arg_ch != '\\0') {\n        fcn.00b98561(arg_8h);\n    }\n    arg_8h_00 = fcn.00ba3ccb();\n    *(in_ECX + 0x448) = 0;\n    *(in_ECX + 0xf8) = 0;\n    fcn.00ba0b30(arg_8h);\n    iVar3 = fcn.00baff9a();\n    uVar1 = *(iVar3 + 0x10);\n    if (arg_10h != NULL) {\n        if (uVar1 == 0) {\n            fcn.00b99a20();\n            *arg_10h = 0;\n            arg_10h[3] = 1;\n        }\n        else {\n            arg_8h_01 = fcn.00baff9a();\n            fcn.00b99e9c(arg_8h_01);\n        }\n    }\n    uVar4 = fcn.00ba3c19(arg_8h_00);\n    if (arg_ch != '\\0') {\n        uVar4 = fcn.00b9843f();\n    }\n    while (uVar2 < *(in_ECX + 0x15c)) {\n        uVar4 = fcn.00bafdcf();\n    }\n    return uVar4 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 432
    },
    "00b9b9ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b9b9ad(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    fcn.00b99e9c(**(arg_8h + 4));\n    if (*(arg_8h + 8) < 2) {\n        fcn.00b97d2c(0xc1f910);\n    }\n    else {\n        iVar1 = *(*(arg_8h + 4) + 4);\n        fcn.00b99997();\n        fcn.00b981a7(*(iVar1 + 8));\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00b9b9f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00b9b9f2(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    iVar2 = *(arg_8h + 4);\n    do {\n        piVar3 = *(iVar2 + *arg_ch * 4);\n        iVar1 = *(piVar3 + 2);\n        if (iVar1 == 0x47) {\n            iVar4 = iVar4 + 1;\n        }\n        else {\n            if ((iVar1 == 0x48) && (iVar4 = iVar4 + -1,  iVar4 < 0)) {\n                return 0;\n            }\n            if (iVar1 == 0x7f) {\n                return -(iVar4 != 0);\n            }\n        }\n        if (iVar4 == 0) {\n            if (iVar1 == 0) {\n                if (*piVar3 != 3) {\n                    if (*piVar3 < 0x27) {\n                        return 0;\n                    }\n                    if (0x2a < *piVar3) {\n                        return 0;\n                    }\n                }\n            }\n            else if (iVar1 == 0x40) {\n                return 0;\n            }\n        }\n        *arg_ch = *arg_ch + 1;\n    } while( true );\n}\n",
        "token_count": 321
    },
    "00b9ba60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00b9ba60(int32_t *arg_8h, double **arg_ch)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    char cVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    double *pdVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint uVar12;\n    uint32_t uVar13;\n    uint extraout_ECX;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint arg_8h_02;\n    uint arg_8h_03;\n    uint arg_8h_04;\n    uint arg_8h_05;\n    double *pdVar14;\n    int32_t iVar15;\n    bool bVar16;\n    float10 fVar17;\n    float10 fVar18;\n    ulong uVar19;\n    ulong uVar20;\n    uint *puVar21;\n    uint var_30h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = arg_8h[1];\n    piVar5 = piVar1;\n    if (*(arg_8h + 9) != '\\0') {\n        piVar5 = piVar1[1];\n    }\n    iVar15 = *piVar5;\n    if (*(arg_8h + 9) != '\\0') {\n        iVar6 = piVar1[1];\n        fcn.00bb106c(piVar1);\n        arg_8h[1] = iVar6;\n        *(arg_8h + 9) = 0;\n    }\n    if (*(arg_8h + 2) == '\\0') {\n        iVar6 = *(arg_8h[1] + 4);\n        fcn.00bb106c(arg_8h[1]);\n        arg_8h[1] = iVar6;\n        *(arg_8h + 9) = 0;\n    }\n    else {\n        *(arg_8h + 9) = 1;\n    }\n    *arg_8h = *arg_8h + -1;\n    if (((iVar15 == 0x11) || (iVar15 == 10)) || (iVar15 == 0x10)) {\n        if (arg_ch[1] < 1) {\n            return 0xffffffff;\n        }\n        if (iVar15 != 10) {\n            if (iVar15 != 0x10) {\n                return 0;\n            }\n            puVar21 = &var_20h;\n            var_20h = 0xffffffff;\n            var_18h = 0;\n            var_14h = 1;\n            fcn.00bafb6d();\n            fcn.00b9963c(puVar21);\n            fcn.00b99a20();\n            return 0;\n        }\n        fcn.00bafb6d();\n        uVar4 = fcn.00bf787b();\n        arg_ch = arg_ch & 0xffffff00 | uVar4;\n        fcn.00bafb6d();\n        fcn.00b99863(arg_ch);\n        return 0;\n    }\n    pdVar8 = arg_ch[1];\n    if (pdVar8 < 2) {\n        return 0xffffffff;\n    }\n    // switch table (16 cases) at 0xb9c588\n    switch(iVar15) {\n    case 0:\n        if (pdVar8 == 0x1) {\n            pdVar14 = *arg_ch;\n        }\n        else if (*(arg_ch + 0xd) == '\\0') {\n            pdVar14 = arg_ch[2];\n        }\n        else {\n            pdVar14 = *(arg_ch[2] + 2);\n        }\n        if (pdVar8 == 0x2) {\n            pdVar8 = *arg_ch;\n        }\n        else {\n            pdVar8 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar8 = *(pdVar8 + 2);\n            }\n            pdVar8 = *(pdVar8 + 2);\n        }\n        iVar15 = *(pdVar8 + 0xc);\n        iVar6 = *((iVar15 * 0x10 + *(pdVar14 + 0xc)) * 4 + 0xc34f38);\n        if (iVar6 != 3) {\n    // switch table (9 cases) at 0xb9c6cc\n            switch(iVar6) {\n            case 1:\n            case 9:\n                iVar15 = fcn.00b99c9c();\n                iVar6 = fcn.00b99c9c();\n                if (iVar15 < iVar6) goto code_r0x00b9bf2e;\n                break;\n            case 2:\n                uVar19 = fcn.00b99d46();\n                iVar15 = uVar19 >> 0x20;\n                uVar20 = fcn.00b99d46();\n                iVar6 = uVar20 >> 0x20;\n                if (iVar15 < iVar6) goto code_r0x00b9bf2e;\n                if (iVar15 <= iVar6) {\n                    bVar16 = uVar19 < uVar20;\n                    goto code_r0x00bd1761;\n                }\n                break;\n            case 4:\n                fcn.00b99997();\n                iVar15 = *(pdVar14 + 1);\n                fcn.00b99997();\n                iVar15 = fcn.00b97a68(iVar15, 0);\n                if (iVar15 < 0) goto code_r0x00b9bf2e;\n                break;\n            case 7:\n                uVar10 = fcn.00bf89bb();\n                uVar11 = fcn.00bf89bb();\n                bVar16 = uVar10 < uVar11;\ncode_r0x00bd1761:\n                if (bVar16) goto code_r0x00b9bf2e;\n            }\ncode_r0x00b9bcb9:\n            if (arg_ch[1] == 0x2) {\n                pdVar8 = *arg_ch;\n            }\n            else {\n                pdVar8 = arg_ch[2];\n                if (*(arg_ch + 0xd) != '\\0') {\n                    pdVar8 = *(pdVar8 + 2);\n                }\n                pdVar8 = *(pdVar8 + 2);\n            }\n            if (*(pdVar8 + 1) != 0) {\n                fcn.00b97b3d();\n                *(pdVar8 + 1) = 0;\n            }\n            if (4 < *(pdVar8 + 0xc)) {\n    // switch table (11 cases) at 0xbd1a82\n                switch(*(pdVar8 + 0xc)) {\n                case 5:\n                    goto code_r0x00bd18a0;\n                case 8:\n                    goto code_r0x00bd169c;\n                case 10:\n                    goto code_r0x00bd16c0;\n                case 0xb:\n                    fcn.00bb106c(*(*pdVar8 + 4));\n                    goto code_r0x00bd16bc;\n                case 0xc:\n                    goto code_r0x00bd16cf;\n                case 0xd:\n                case 0xe:\n                    iVar15 = *pdVar8;\n                    goto joined_r0x00bd1895;\n                case 0xf:\n                    goto code_r0x00bd16e4;\n                }\n            }\n            goto code_r0x00b9bbeb;\n        }\n        fVar17 = 1;\n        if (iVar15 == 3) {\n            _var_8h = *pdVar8;\n            fVar17 = _var_8h;\n        }\n        else {\n    // switch table (10 cases) at 0xbd1a5a\n            switch(iVar15) {\n            case 1:\n            case 7:\n                fVar17 = *pdVar8;\n                _var_8h = *pdVar8;\n                break;\n            case 2:\n                fVar17 = *pdVar8;\n                _var_8h = *pdVar8;\n                break;\n            default:\ncode_r0x00bd17fe:\n                _var_8h = 0;\n                fVar17 = 0;\n                break;\n            case 4:\n                cVar3 = fcn.00b995c1();\n                if (cVar3 == '\\0') {\n                    fVar17 = fcn.00bb3f79(arg_8h_04);\n                    _var_8h = fVar17;\n                }\n                else {\n                    fcn.00bafbfb(8);\n                    fVar17 = CONCAT44(var_14h, var_18h);\n                    _var_8h = CONCAT44(var_14h, var_18h);\n                }\n                break;\n            case 9:\n                if (*pdVar8 == '\\0') goto code_r0x00bd17fe;\n                _var_8h = fVar17;\n                break;\n            case 10:\n                fVar17 = *(*pdVar8 + 4);\n                _var_8h = *(*pdVar8 + 4);\n            }\n        }\n        fVar18 = 1;\n        if (*(pdVar14 + 0xc) == 3) {\n            fVar18 = *pdVar14;\n        }\n        else {\n    // switch table (10 cases) at 0xb9c638\n            switch(*(pdVar14 + 0xc)) {\n            case 1:\n            case 7:\n                fVar18 = *pdVar14;\n                break;\n            case 2:\n                fVar18 = *pdVar14;\n                break;\n            default:\ncode_r0x00b9c56a:\n                fVar18 = 0;\n                break;\n            case 4:\n                cVar3 = fcn.00b995c1();\n                if (cVar3 == '\\0') {\n                    fVar18 = fcn.00bb3f79(arg_8h_05);\n                }\n                else {\n                    fcn.00bafbfb(8);\n                    fVar18 = CONCAT44(var_14h, var_18h);\n                }\n                fVar17 = _var_8h;\n                break;\n            case 9:\n                if (*pdVar14 == '\\0') goto code_r0x00b9c56a;\n                break;\n            case 10:\n                fVar18 = *(*pdVar14 + 4);\n            }\n        }\n        if (((fVar18 < fVar17) << 8 | (fVar18 == fVar17) << 0xe) != 0) goto code_r0x00b9bcb9;\ncode_r0x00b9bf2e:\n        if (arg_ch[1] == 0x2) {\n            pdVar8 = *arg_ch;\n        }\n        else {\n            cVar3 = *(arg_ch + 0xd);\n            pdVar8 = arg_ch[2];\njoined_r0x00bd1657:\n            if (cVar3 != '\\0') {\n                pdVar8 = *(pdVar8 + 2);\n            }\n            pdVar8 = *(pdVar8 + 2);\n        }\n        fcn.00b99a20();\n        *pdVar8 = 1;\n        goto code_r0x00b9bbf4;\n    case 1:\n        if (pdVar8 == 0x1) {\n            pdVar14 = *arg_ch;\n        }\n        else if (*(arg_ch + 0xd) == '\\0') {\n            pdVar14 = arg_ch[2];\n        }\n        else {\n            pdVar14 = *(arg_ch[2] + 2);\n        }\n        if (pdVar8 == 0x2) {\n            pdVar8 = *arg_ch;\n        }\n        else {\n            pdVar8 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar8 = *(pdVar8 + 2);\n            }\n            pdVar8 = *(pdVar8 + 2);\n        }\n        iVar15 = *(pdVar14 + 0xc);\n        iVar6 = *((iVar15 * 0x10 + *(pdVar8 + 0xc)) * 4 + 0xc34f38);\n        if (iVar6 == 3) {\n            fVar17 = 1;\n            if (iVar15 == 3) {\n                _var_8h = *pdVar14;\n                fVar17 = _var_8h;\n            }\n            else {\n    // switch table (10 cases) at 0xb9c5e8\n                switch(iVar15) {\n                case 1:\n                case 7:\n                    fVar17 = *pdVar14;\n                    _var_8h = *pdVar14;\n                    break;\n                case 2:\n                    fVar17 = *pdVar14;\n                    _var_8h = *pdVar14;\n                    break;\n                default:\ncode_r0x00b9c551:\n                    _var_8h = 0;\n                    fVar17 = 0;\n                    break;\n                case 4:\n                    cVar3 = fcn.00b995c1();\n                    if (cVar3 == '\\0') {\n                        fVar17 = fcn.00bb3f79(arg_8h_02);\n                        _var_8h = fVar17;\n                    }\n                    else {\n                        fcn.00bafbfb(8);\n                        fVar17 = _var_8h;\n                        _var_8h = _var_8h;\n                    }\n                    break;\n                case 9:\n                    if (*pdVar14 == '\\0') goto code_r0x00b9c551;\n                    _var_8h = fVar17;\n                    break;\n                case 10:\n                    fVar17 = *(*pdVar14 + 4);\n                    _var_8h = *(*pdVar14 + 4);\n                }\n            }\n            fVar18 = 1;\n            if (*(pdVar8 + 0xc) == 3) {\n                fVar18 = *pdVar8;\n            }\n            else {\n    // switch table (10 cases) at 0xbd1a06\n                switch(*(pdVar8 + 0xc)) {\n                case 1:\n                case 7:\n                    fVar18 = *pdVar8;\n                    break;\n                case 2:\n                    fVar18 = *pdVar8;\n                    break;\n                default:\ncode_r0x00bd1649:\n                    fVar18 = 0;\n                    break;\n                case 4:\n                    cVar3 = fcn.00b995c1();\n                    if (cVar3 == '\\0') {\n                        fVar18 = fcn.00bb3f79(arg_8h_03);\n                    }\n                    else {\n                        fcn.00bafbfb(8);\n                        fVar18 = CONCAT44(var_14h, var_18h);\n                    }\n                    fVar17 = _var_8h;\n                    break;\n                case 9:\n                    if (*pdVar8 == '\\0') goto code_r0x00bd1649;\n                    break;\n                case 10:\n                    fVar18 = *(*pdVar8 + 4);\n                }\n            }\n            if (((fVar18 < fVar17) << 8 | (fVar18 == fVar17) << 0xe) == 0) {\ncode_r0x00b9c067:\n                if (arg_ch[1] != 0x2) {\n                    cVar3 = *(arg_ch + 0xd);\n                    pdVar8 = arg_ch[2];\n                    goto joined_r0x00bd1657;\n                }\n                pdVar8 = *arg_ch;\n                fcn.00b99a20();\n                *pdVar8 = 1;\n                goto code_r0x00b9bbf4;\n            }\n        }\n        else {\n    // switch table (9 cases) at 0xb9c660\n            switch(iVar6) {\n            case 1:\n            case 9:\n                iVar15 = fcn.00b99c9c();\n                iVar6 = fcn.00b99c9c();\n                if (iVar6 < iVar15) goto code_r0x00b9c067;\n                break;\n            case 2:\n                uVar19 = fcn.00b99d46();\n                iVar15 = uVar19 >> 0x20;\n                uVar20 = fcn.00b99d46();\n                iVar6 = uVar20 >> 0x20;\n                if (iVar6 < iVar15) goto code_r0x00b9c067;\n                if (iVar6 <= iVar15) {\n                    bVar16 = uVar20 < uVar19;\n                    goto code_r0x00bd154d;\n                }\n                break;\n            case 4:\n                fcn.00b99997();\n                iVar15 = *(pdVar8 + 1);\n                fcn.00b99997();\n                iVar15 = fcn.00b97a68(iVar15, 0);\n                if (iVar15 < 0) goto code_r0x00b9c067;\n                break;\n            case 7:\n                uVar10 = fcn.00bf89bb();\n                uVar11 = fcn.00bf89bb();\n                bVar16 = uVar11 < uVar10;\ncode_r0x00bd154d:\n                if (bVar16) goto code_r0x00b9c067;\n            }\n        }\n        if (arg_ch[1] == 0x2) {\n            pdVar8 = *arg_ch;\n        }\n        else {\n            pdVar8 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar8 = *(pdVar8 + 2);\n            }\n            pdVar8 = *(pdVar8 + 2);\n        }\n        if (*(pdVar8 + 1) != 0) {\n            fcn.00b97b3d();\n            *(pdVar8 + 1) = 0;\n        }\n        if (*(pdVar8 + 0xc) < 5) goto code_r0x00b9bbeb;\n    // switch table (11 cases) at 0xbd1a2e\n        switch(*(pdVar8 + 0xc)) {\n        case 5:\ncode_r0x00bd18a0:\n            if (*pdVar8 != 0) {\n                fcn.00b98e34();\n            }\n            break;\n        case 8:\ncode_r0x00bd169c:\n            if (*pdVar8 != 0) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*pdVar8);\ncode_r0x00bd16bc:\n                iVar15 = *pdVar8;\n                goto code_r0x00bd170b;\n            }\n            break;\n        case 10:\ncode_r0x00bd16c0:\n            iVar15 = *pdVar8;\njoined_r0x00bd1895:\n            if (iVar15 != 0) goto code_r0x00bd1705;\n            break;\n        case 0xb:\n            fcn.00bb106c(*(*pdVar8 + 4));\n            iVar15 = *pdVar8;\n            goto code_r0x00bd170b;\n        case 0xc:\ncode_r0x00bd16cf:\n            if (*pdVar8 != 0) {\n                fcn.00be73f0();\n            }\n            break;\n        case 0xd:\n        case 0xe:\n            iVar15 = *pdVar8;\n            if (iVar15 == 0) break;\ncode_r0x00bd1705:\n            fcn.00b95a64();\ncode_r0x00bd170b:\n            fcn.00bb106c(iVar15);\n            break;\n        case 0xf:\ncode_r0x00bd16e4:\n            if (*pdVar8 != 0) {\n                fcn.00be7405();\n            }\n        }\ncode_r0x00b9bbeb:\n        *pdVar8 = 0;\n        *pdVar8 = 0;\ncode_r0x00b9bbf4:\n        *(pdVar8 + 0xc) = 9;\n        if (arg_ch[1] != 0x1) {\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar8 = arg_ch[2];\n                pdVar14 = *(pdVar8 + 2);\n                if (pdVar8 != NULL) {\n                    fcn.00bafbe6(pdVar8);\n                    arg_ch[2] = pdVar14;\ncode_r0x00b9bd82:\n                    *(arg_ch + 0xd) = 0;\n                    goto code_r0x00b9bc0b;\n                }\n                goto code_r0x00b9bfeb;\n            }\n            goto code_r0x00b9bc0b;\n        }\n        goto code_r0x00b9bc19;\n    case 2:\n        fcn.00bafb54();\n        cVar3 = fcn.00b98cd0();\n        if (cVar3 == '\\0') {\n            puVar7 = fcn.00bafb54();\n            fcn.00b99a20();\n            *(puVar7 + 0xc) = 9;\n            *puVar7 = 1;\n            goto code_r0x00b9c23e;\n        }\n        break;\n    case 3:\n        fcn.00bafb6d();\n        fcn.00bafb54();\n        cVar3 = fcn.00bb0740();\n        goto code_r0x00b9c465;\n    case 4:\n        fcn.00bafb6d();\n        fcn.00bafb54();\n        cVar3 = fcn.00b98bd8();\n        if (cVar3 != '\\0') {\n            puVar7 = fcn.00bafb54();\n            fcn.00b99a20();\n            *(puVar7 + 0xc) = 9;\n            *puVar7 = 0;\n            fcn.00bafb17();\n            return 0;\n        }\n        goto code_r0x00b9c46f;\n    case 5:\n        cVar3 = fcn.00b98bd8();\n        if (cVar3 == '\\0') {\n            if (arg_ch[1] == 0x2) {\n                pdVar8 = *arg_ch;\n            }\n            else {\n                pdVar8 = arg_ch[2];\n                if (*(arg_ch + 0xd) != '\\0') {\n                    pdVar8 = *(pdVar8 + 2);\n                }\n                pdVar8 = *(pdVar8 + 2);\n            }\n            fcn.00b99a20();\n            *pdVar8 = 0;\n        }\n        else {\n            pdVar8 = fcn.00bafb54();\n            fcn.00b99a20();\n            *pdVar8 = 1;\n        }\n        *(pdVar8 + 0xc) = 9;\n        fcn.00bafb17();\n        return 0;\n    case 6:\n        uVar12 = fcn.00bafb6d();\n        fcn.00bafb54();\n        cVar3 = fcn.00bf850c(uVar12);\n        arg_ch = CONCAT31(arg_ch._1_3_, 1);\n        if (cVar3 == '\\0') break;\n        goto code_r0x00b9c372;\n    case 7:\n        fcn.00bafb6d();\n        fcn.00bafb54();\n        cVar3 = fcn.00bb06fe();\ncode_r0x00b9c465:\n        if (cVar3 == '\\0') break;\ncode_r0x00b9c46f:\n        arg_ch = CONCAT31(arg_ch._1_3_, 1);\n        goto code_r0x00b9c372;\n    case 8:\n        fcn.00bafb6d();\n        fcn.00bafb54();\n        cVar3 = fcn.00bb06e3();\n        if (cVar3 != '\\0') goto code_r0x00b9c46f;\n        break;\n    case 9:\n        if (pdVar8 == 0x1) {\n            pdVar14 = *arg_ch;\n        }\n        else if (*(arg_ch + 0xd) == '\\0') {\n            pdVar14 = arg_ch[2];\n        }\n        else {\n            pdVar14 = *(arg_ch[2] + 2);\n        }\n        if (pdVar8 == 0x2) {\n            pdVar8 = *arg_ch;\n        }\n        else {\n            pdVar8 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar8 = *(pdVar8 + 2);\n            }\n            pdVar8 = *(pdVar8 + 2);\n        }\n    // switch table (11 cases) at 0xb9c6f0\n        switch(*(pdVar8 + 0xc)) {\n        case 1:\n        case 2:\n        case 3:\n        case 7:\n        case 9:\n        case 10:\ncode_r0x00b9c4ed:\n            fcn.00b99488();\n        default:\n            fcn.00b99997();\n            if (*(pdVar8 + 1) == *(pdVar14 + 1)) {\n                uVar12 = fcn.00be8123(&var_20h, *(pdVar8 + 1));\n                fcn.00b981a7(uVar12);\n                fcn.00b95a64();\n            }\n            else {\n                fcn.00b97bb1(*(pdVar14 + 1), 0, 0xffffffff);\n            }\n            break;\n        case 4:\n        case 5:\n        case 6:\n        case 8:\n            break;\n        case 0xb:\n            if (*(pdVar14 + 0xc) != 0xb) goto code_r0x00b9c4ed;\n            fcn.00b99700(pdVar14);\n        }\n        if (arg_ch[1] != 0x1) {\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar8 = arg_ch[2];\n                pdVar14 = *(pdVar8 + 2);\n                if (pdVar8 != NULL) {\n                    fcn.00bafbe6(pdVar8);\n                }\ncode_r0x00b9bfeb:\n                arg_ch[2] = pdVar14;\n                *(arg_ch + 0xd) = 0;\n            }\ncode_r0x00b9bc0b:\n            if (*(arg_ch + 3) == '\\0') {\ncode_r0x00bd12ea:\n                pdVar8 = arg_ch[2];\n                pdVar14 = *(pdVar8 + 2);\n                if (pdVar8 != NULL) {\n                    fcn.00bafbe6(pdVar8);\n                }\n                arg_ch[2] = pdVar14;\n                *(arg_ch + 0xd) = 0;\n            }\n            else {\n                *(arg_ch + 0xd) = 1;\n            }\n        }\ncode_r0x00b9bc19:\n        arg_ch[1] = arg_ch[1] + -1;\ncode_r0x00b9bc1c:\n        return 0;\n    default:\n        goto code_r0x00b9bc1c;\n    case 0xb:\n        if (pdVar8 == 0x1) {\n            pdVar14 = *arg_ch;\n        }\n        else if (*(arg_ch + 0xd) == '\\0') {\n            pdVar14 = arg_ch[2];\n        }\n        else {\n            pdVar14 = *(arg_ch[2] + 2);\n        }\n        if (pdVar8 == 0x2) {\n            pdVar8 = *arg_ch;\n        }\n        else {\n            pdVar8 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar8 = *(pdVar8 + 2);\n            }\n            pdVar8 = *(pdVar8 + 2);\n        }\n        iVar15 = *(pdVar8 + 0xc);\n        if (iVar15 == 3) {\n            if (*(pdVar14 + 0xc) == 3) {\n                fVar17 = *pdVar14;\n            }\n            else {\n    // switch table (10 cases) at 0xbd199e\n                switch(*(pdVar14 + 0xc)) {\n                case 1:\n                case 7:\n                    fVar17 = *pdVar14;\n                    break;\n                case 2:\n                    fVar17 = *pdVar14;\n                    break;\n                default:\ncode_r0x00bd1211:\n                    fVar17 = 0;\n                    break;\n                case 4:\n                    cVar3 = fcn.00b995c1();\n                    if (cVar3 == '\\0') {\n                        fVar17 = fcn.00bb3f79(arg_8h_00);\n                    }\n                    else {\n                        fcn.00bafbfb(8);\n                        fVar17 = _var_8h;\n                    }\n                    break;\n                case 9:\n                    if (*pdVar14 == '\\0') goto code_r0x00bd1211;\n                    fVar17 = 1;\n                    break;\n                case 10:\n                    fVar17 = *(*pdVar14 + 4);\n                }\n            }\n            fVar17 = fVar17 + *pdVar8;\ncode_r0x00b9bd27:\n            *pdVar8 = fVar17;\n        }\n        else if (iVar15 == 1) {\n            if (*(pdVar14 + 0xc) == 1) {\n                uVar10 = *pdVar14;\n                uVar11 = *pdVar8;\n                iVar15 = (uVar10 >> 0x1f) + (uVar11 >> 0x1f) + CARRY4(uVar10, uVar11);\n                if (uVar10 + uVar11 >> 0x1f == iVar15) {\n                    *pdVar8 = uVar10 + uVar11;\n                }\n                else {\n                    *(pdVar8 + 0xc) = 2;\n                    *pdVar8 = uVar10 + uVar11;\n                    *(pdVar8 + 4) = iVar15;\n                }\n            }\n            else {\n                if (*(pdVar14 + 0xc) != 2) {\n                    fVar17 = fcn.00b99cf8();\n                    _var_8h = fVar17;\n                    fcn.00b99a20();\n                    *pdVar8 = _var_8h;\n                    *(pdVar8 + 0xc) = 3;\n                    goto code_r0x00b9bf0a;\n                }\n                uVar10 = *pdVar8;\n                uVar11 = *pdVar14;\n                iVar15 = *(pdVar14 + 4);\n                *pdVar8 = uVar10 + *pdVar14;\n                *(pdVar8 + 4) = (uVar10 >> 0x1f) + iVar15 + CARRY4(uVar10, uVar11);\n                *(pdVar8 + 0xc) = 2;\n            }\n        }\n        else {\n    // switch table (10 cases) at 0xb9c6a4\n            switch(iVar15) {\n            case 2:\n                if ((*(pdVar14 + 0xc) != 1) && (*(pdVar14 + 0xc) != 2)) goto code_r0x00bd10c1;\n                uVar19 = fcn.00b99d46();\n                uVar10 = *pdVar8;\n                *pdVar8 = *pdVar8 + uVar19;\n                *(pdVar8 + 4) = *(pdVar8 + 4) + (uVar19 >> 0x20) + CARRY4(uVar10, uVar19);\n                break;\n            case 4:\n                fcn.00b994da();\n                fcn.00b99700(pdVar14);\n                break;\n            case 7:\n                iVar15 = *pdVar8;\n                if (*(pdVar14 + 0xc) == 1) {\n                    iVar6 = fcn.00b99c9c();\n                }\n                else {\n                    iVar6 = fcn.00b99d46();\n                }\n                *pdVar8 = iVar15 + iVar6;\n                break;\n            case 9:\n            case 10:\ncode_r0x00bd10c1:\n                fcn.00b99593();\ncode_r0x00b9bf0a:\n                fVar17 = fcn.00b99cf8();\n                fVar17 = fVar17 + *pdVar8;\n                goto code_r0x00b9bd27;\n            case 0xb:\n                if (*(pdVar14 + 0xc) != 0xb) goto code_r0x00bd10c1;\n                iVar6 = fcn.00bf89e2();\n                iVar15 = **pdVar8;\n                iVar9 = fcn.00bb0ff6(iVar6 + iVar15);\n                fcn.00bb1080(iVar9, (*pdVar8)[1], **pdVar8);\n                uVar12 = fcn.00bf89e2();\n                uVar12 = fcn.00bf899f(extraout_ECX, uVar12);\n                fcn.00bb1080(**pdVar8 + iVar9, uVar12);\n                fcn.00bb106c(*(*pdVar8 + 4));\n                *(*pdVar8 + 4) = iVar9;\n                **pdVar8 = iVar6 + iVar15;\n            }\n        }\n        if (*(pdVar8 + 1) != 0) {\n            fcn.00b97b3d();\n            *(pdVar8 + 1) = 0;\n        }\n        if (arg_ch[1] == 0x1) goto code_r0x00b9bc19;\n        if (*(arg_ch + 0xd) == '\\0') goto code_r0x00b9bc0b;\n        pdVar8 = arg_ch[2];\n        pdVar14 = *(pdVar8 + 2);\n        if (pdVar8 == NULL) goto code_r0x00b9bd7f;\n        if (*(pdVar8 + 1) != 0) {\n            fcn.00b97b3d();\n            *(pdVar8 + 1) = 0;\n        }\n        if ((*(pdVar8 + 0xc) < 5) || (uVar10 = *(pdVar8 + 0xc) - 5,  10 < uVar10)) goto code_r0x00b9bd69;\n    // switch table (11 cases) at 0xbd19c6\n        switch(*(uVar10 * 4 + 0xbd19c6)) {\n        case 0xbd124f:\n            if (*pdVar8 != 0) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*pdVar8);\n                iVar15 = *pdVar8;\n                goto code_r0x00bd12dd;\n            }\n            break;\n        case 0xbd1264:\n            iVar15 = *pdVar8;\n            goto joined_r0x00bd12cd;\n        case 0xbd1276:\n            if (*pdVar8 != 0) {\n                fcn.00b98e34();\n            }\n            break;\n        case 0xbd128b:\n            fcn.00bb106c(*(*pdVar8 + 4));\n            iVar15 = *pdVar8;\n            goto code_r0x00bd12dd;\n        case 0xbd129c:\n            if (*pdVar8 != 0) {\n                fcn.00be73f0();\n            }\n            break;\n        case 0xbd12b1:\n            if (*pdVar8 != 0) {\n                fcn.00be7405();\n            }\n            break;\n        case 0xbd12c6:\n            iVar15 = *pdVar8;\njoined_r0x00bd12cd:\n            if (iVar15 != 0) {\n                fcn.00b95a64();\ncode_r0x00bd12dd:\n                fcn.00bb106c(iVar15);\n            }\n        }\ncode_r0x00b9bd69:\n        *(pdVar8 + 0xc) = 1;\n        *pdVar8 = 0;\n        fcn.00bb106c(pdVar8);\ncode_r0x00b9bd7f:\n        arg_ch[2] = pdVar14;\n        goto code_r0x00b9bd82;\n    case 0xc:\n        if (pdVar8 == 0x1) {\n            pdVar14 = *arg_ch;\n        }\n        else if (*(arg_ch + 0xd) == '\\0') {\n            pdVar14 = arg_ch[2];\n        }\n        else {\n            pdVar14 = *(arg_ch[2] + 2);\n        }\n        if (pdVar8 == 0x2) {\n            pdVar8 = *arg_ch;\n        }\n        else {\n            pdVar8 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar8 = *(pdVar8 + 2);\n            }\n            pdVar8 = *(pdVar8 + 2);\n        }\n        if (*(pdVar8 + 0xc) == 3) {\ncode_r0x00b9bdc1:\n            fVar17 = fcn.00b99cf8();\n            *pdVar8 = *pdVar8 - fVar17;\n        }\n        else {\n    // switch table (10 cases) at 0xb9c684\n            switch(*(pdVar8 + 0xc)) {\n            case 2:\n                if ((*(pdVar14 + 0xc) != 1) && (*(pdVar14 + 0xc) != 2)) goto code_r0x00bd1313;\n                uVar19 = fcn.00b99d46();\n                uVar10 = *pdVar8;\n                *pdVar8 = *pdVar8 - uVar19;\n                *(pdVar8 + 4) = (*(pdVar8 + 4) - (uVar19 >> 0x20)) - (uVar10 < uVar19);\n                break;\n            case 3:\n            case 5:\n            case 6:\n            case 8:\n                break;\n            case 4:\n            case 10:\n                fcn.00b994da();\n                fcn.00b99687(pdVar14);\n                break;\n            case 7:\n                iVar15 = *pdVar8;\n                if (*(pdVar14 + 0xc) == 1) {\n                    iVar6 = fcn.00b99c9c();\n                }\n                else {\n                    iVar6 = fcn.00b99d46();\n                }\n                *pdVar8 = iVar15 - iVar6;\n                break;\n            case 9:\n            case 0xb:\ncode_r0x00bd1313:\n                fcn.00b99593();\n                goto code_r0x00b9bdc1;\n            default:\n                if (*(pdVar14 + 0xc) == 1) {\n                    uVar10 = *pdVar8;\n                    uVar11 = *pdVar14;\n                    uVar13 = uVar10 - uVar11;\n                    _var_8h = _var_8h & 0xffffffff | uVar13 << 0x20;\n                    iVar15 = ((uVar10 >> 0x1f) - (uVar11 >> 0x1f)) - (uVar10 < uVar11);\n                    if ((uVar13 == uVar10 - uVar11) && (uVar13 >> 0x1f == iVar15)) {\n                        *pdVar8 = uVar13;\n                    }\n                    else {\n                        *(pdVar8 + 0xc) = 2;\n                        *pdVar8 = uVar10 - uVar11;\n                        *(pdVar8 + 4) = iVar15;\n                    }\n                }\n                else {\n                    if (*(pdVar14 + 0xc) != 2) {\n                        fVar17 = fcn.00b99cf8();\n                        _var_8h = fVar17;\n                        fcn.00b99a20();\n                        *pdVar8 = _var_8h;\n                        *(pdVar8 + 0xc) = 3;\n                        goto code_r0x00b9bdc1;\n                    }\n                    uVar10 = *pdVar8;\n                    uVar11 = *pdVar14;\n                    iVar15 = *(pdVar14 + 4);\n                    *pdVar8 = uVar10 - *pdVar14;\n                    *(pdVar8 + 4) = ((uVar10 >> 0x1f) - iVar15) - (uVar10 < uVar11);\n                    *(pdVar8 + 0xc) = 2;\n                }\n            }\n        }\n        if (*(pdVar8 + 1) != 0) {\n            fcn.00b97b3d();\n            *(pdVar8 + 1) = 0;\n        }\n        if (arg_ch[1] == 0x1) goto code_r0x00b9bc19;\n        cVar3 = *(arg_ch + 0xd);\n        goto joined_r0x00b9bb3a;\n    case 0xd:\n        if (pdVar8 == 0x1) {\n            pdVar14 = *arg_ch;\n        }\n        else if (*(arg_ch + 0xd) == '\\0') {\n            pdVar14 = arg_ch[2];\n        }\n        else {\n            pdVar14 = *(arg_ch[2] + 2);\n        }\n        if (pdVar8 == 0x2) {\n            pdVar8 = *arg_ch;\n        }\n        else {\n            pdVar8 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar8 = *(pdVar8 + 2);\n            }\n            pdVar8 = *(pdVar8 + 2);\n        }\n    // switch table (11 cases) at 0xb9c5c8\n        switch(*(pdVar8 + 0xc)) {\n        case 1:\n            if (*(pdVar14 + 0xc) == 1) {\n                iVar2 = *pdVar8 * *pdVar14;\n                iVar6 = iVar2 >> 0x20;\n                iVar15 = iVar2;\n                iVar9 = *pdVar8 * *pdVar14;\n                if ((iVar9 - iVar15 == 0) && (iVar9 >> 0x1f == iVar6)) {\n                    *pdVar8 = iVar9;\n                }\n                else {\n                    *(pdVar8 + 0xc) = 2;\n                    *pdVar8 = iVar15;\n                    *(pdVar8 + 4) = iVar6;\n                }\n            }\n            else {\n                if (*(pdVar14 + 0xc) != 2) {\n                    if (*(pdVar8 + 0xc) != 3) {\n                        fVar17 = fcn.00b99cf8();\n                        _var_8h = fVar17;\n                        fcn.00b99a20();\n                        *pdVar8 = _var_8h;\n                        *(pdVar8 + 0xc) = 3;\n                    }\n                    fVar17 = fcn.00b99cf8();\n                    goto code_r0x00b9bb1d;\n                }\n                uVar19 = fcn.00bc6200(*pdVar8, *pdVar8 >> 0x1f, *pdVar14, *(pdVar14 + 4));\n                *pdVar8 = uVar19;\n                *(pdVar8 + 4) = uVar19 >> 0x20;\n                *(pdVar8 + 0xc) = 2;\n            }\n            break;\n        case 2:\n            if ((*(pdVar14 + 0xc) != 1) && (*(pdVar14 + 0xc) != 2)) goto code_r0x00bd13d8;\n            uVar19 = fcn.00b99d46();\n            uVar19 = fcn.00bc6200(uVar19, *pdVar8, *(pdVar8 + 4));\n            *pdVar8 = uVar19;\n            *(pdVar8 + 4) = uVar19 >> 0x20;\n            break;\n        case 3:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 10:\n            break;\n        case 4:\n            fcn.00b994da();\n            fcn.00b9963c(pdVar14);\n            break;\n        case 9:\n        case 0xb:\ncode_r0x00bd13d8:\n            fcn.00b99593();\n            fVar17 = fcn.00b99cf8();\n            goto code_r0x00b9bb1d;\n        default:\n            if (*(pdVar14 + 0xc) == 3) {\n                fVar17 = *pdVar14;\n            }\n            else {\n    // switch table (10 cases) at 0xb9c610\n                switch(*(pdVar14 + 0xc)) {\n                case 1:\n                case 7:\n                    fVar17 = *pdVar14;\n                    break;\n                case 2:\n                    fVar17 = *pdVar14;\n                    break;\n                default:\ncode_r0x00b9c51f:\n                    fVar17 = 0;\n                    break;\n                case 4:\n                    cVar3 = fcn.00b995c1();\n                    if (cVar3 == '\\0') {\n                        fVar17 = fcn.00bb3f79(arg_8h_01);\n                    }\n                    else {\n                        fcn.00bafbfb(8);\n                        fVar17 = _var_8h;\n                    }\n                    break;\n                case 9:\n                    if (*pdVar14 == '\\0') goto code_r0x00b9c51f;\n                    fVar17 = 1;\n                    break;\n                case 10:\n                    fVar17 = *(*pdVar14 + 4);\n                }\n            }\ncode_r0x00b9bb1d:\n            *pdVar8 = fVar17 * *pdVar8;\n        }\n        iVar15 = *(pdVar8 + 1);\njoined_r0x00b9bec0:\n        if (iVar15 != 0) {\n            fcn.00b97b3d();\n            *(pdVar8 + 1) = 0;\n        }\n        if (arg_ch[1] != 0x1) {\n            cVar3 = *(arg_ch + 0xd);\njoined_r0x00b9bb3a:\n            if (cVar3 != '\\0') {\n                pdVar8 = arg_ch[2];\n                pdVar14 = *(pdVar8 + 2);\n                if (pdVar8 != NULL) {\n                    fcn.00b99a20();\n                    fcn.00bb106c(pdVar8);\n                }\n                arg_ch[2] = pdVar14;\n                *(arg_ch + 0xd) = 0;\n            }\n            if (*(arg_ch + 3) != '\\0') {\n                arg_ch[1] = arg_ch[1] + -1;\n                *(arg_ch + 0xd) = 1;\n                return 0;\n            }\n            goto code_r0x00bd12ea;\n        }\n        goto code_r0x00b9bc19;\n    case 0xe:\n        if (pdVar8 == 0x2) {\n            pdVar8 = *arg_ch;\n        }\n        else {\n            pdVar8 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar8 = *(pdVar8 + 2);\n            }\n            pdVar8 = *(pdVar8 + 2);\n        }\n        iVar15 = *(pdVar8 + 0xc);\n        if (iVar15 != 3) {\n    // switch table (10 cases) at 0xbd19f2\n            switch(iVar15) {\n            default:\n                if (iVar15 != 3) {\n                    fVar17 = fcn.00b99cf8();\n                    _var_8h = fVar17;\n                    fcn.00b99a20();\n                    *pdVar8 = _var_8h;\n                    *(pdVar8 + 0xc) = 3;\n                }\n                break;\n            case 3:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 10:\n                goto code_r0x00b9bebb;\n            }\n        }\n        fVar17 = fcn.00b99cf8();\n        *pdVar8 = *pdVar8 / fVar17;\ncode_r0x00b9bebb:\n        iVar15 = *(pdVar8 + 1);\n        goto joined_r0x00b9bec0;\n    case 0xf:\n        _var_8h = _var_8h & 0xffffffff00000000;\n        uVar12 = fcn.00bafb6d();\n        fcn.00b99ac0(uVar12);\n        fcn.00bafb17();\n        var_18h = 0;\n        uVar12 = fcn.00bafb6d();\n        fcn.00b99ac0(uVar12);\n        puVar21 = &var_10h;\n        fcn.00b99ac0(puVar21);\n        uVar12 = fcn.00bf8617(&var_30h, puVar21);\n        fcn.00bafb6d();\n        fcn.00b99e9c(uVar12);\n        fcn.00b99a20();\n        fcn.00b99a20();\n        fcn.00b99a20();\n        goto code_r0x00b9bc1c;\n    }\n    arg_ch = arg_ch & 0xffffff00;\ncode_r0x00b9c372:\n    fcn.00bafb54();\n    fcn.00b99863(arg_ch);\ncode_r0x00b9c23e:\n    fcn.00bafb17();\n    return 0;\n}\n",
        "token_count": 11187
    },
    "00b9ca20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00b9ca20(int32_t *arg_8h, int32_t *arg_ch, int32_t **arg_10h, int32_t **arg_14h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    char cVar3;\n    int32_t **arg_10h_00;\n    int16_t **ppiVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    int32_t *piVar9;\n    int32_t **arg_8h_00;\n    int16_t **ppiVar10;\n    uint var_150h;\n    int16_t **var_50h;\n    uint var_48h;\n    int16_t **var_40h;\n    int16_t **var_38h;\n    int32_t var_2ch;\n    int16_t **var_28h;\n    uint var_20h;\n    int32_t var_14h;\n    int16_t **var_10h;\n    uint var_ch;\n    int16_t **var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = arg_14h;\n    arg_10h_00 = arg_10h;\n    piVar9 = arg_ch;\n    iVar7 = *arg_ch;\n    iVar8 = arg_8h[1];\n    var_14h = *(iVar8 + iVar7 * 4);\n    iVar1 = *(var_14h + 8);\n    if (iVar1 != 0x4e) {\n        if (iVar1 != 0x35) {\n            if (iVar1 != 0x47) {\n                if (arg_14h == arg_10h) goto code_r0x00b9ca9d;\n                if ((arg_14h[3] == 0x4) && (arg_10h[3] == 0x4)) {\n                    fcn.00b981a7(arg_10h[2]);\n                    goto code_r0x00b9ca9d;\n                }\n                if (arg_14h[2] != NULL) {\n                    fcn.00b97b3d(arg_14h[2]);\n                    arg_8h_00[2] = NULL;\n                }\n                if ((4 < arg_8h_00[3]) && (uVar6 = arg_8h_00[3] - 5,  uVar6 < 0xb)) {\n    // switch table (11 cases) at 0xbd28c2\n                    switch(*(uVar6 * 4 + 0xbd28c2)) {\n                    case 0xbd2587:\n                        goto code_r0x00bd2587;\n                    case 0xbd259a:\n                        fcn.00bb106c((*arg_8h_00)[1]);\n                        goto code_r0x00bd25a7;\n                    case 0xbd25ab:\n                        goto code_r0x00bd25ab;\n                    case 0xbd277a:\n                        arg_8h = *arg_8h_00;\n                        goto joined_r0x00bd25c4;\n                    case 0xbd278c:\n                        goto code_r0x00bd278c;\n                    case 0xbd27a1:\n                        goto code_r0x00bd27a1;\n                    case 0xbd27b6:\n                        goto code_r0x00bd27b6;\n                    }\n                }\n                goto code_r0x00b9ca88;\n            }\n            if (((arg_10h[3] != 0xd) && (arg_10h[3] != 0xe)) && (cVar3 = fcn.00b993dd(),  cVar3 == '\\0')) {\n                fcn.00bfa0b5(0xba, *(var_14h + 10));\n                return 0xffffffff;\n            }\n            cVar3 = fcn.00b993dd();\n            if (cVar3 == '\\0') {\n                fcn.00c0a528(arg_8h);\n                *piVar9 = *piVar9 + -1;\n                var_20h._0_2_ = 0xffff;\n                var_20h._2_2_ = 0;\n                if (arg_10h_00[3] == 0xd) {\n                    fcn.00b95f12(1);\n                    var_28h = fcn.00bf7b95();\n                    fcn.00bf7581(&fcn.00b9ca20::var_28h);\n                    arg_8h_00 = arg_14h;\n                    iVar7 = fcn.00b9f5c0(0, &fcn.00b9ca20::var_10h, arg_ch, arg_14h);\n                    if (iVar7 < 0) goto code_r0x00bd24f9;\n                    iVar7 = *(in_ECX + 0xf8);\n                }\n                else {\n                    fcn.00b95f12(0x34);\n                    uVar5 = fcn.00bf7ba4(&fcn.00b9ca20::var_48h);\n                    fcn.00b95ea1(uVar5);\n                    fcn.00b95a64();\n                    fcn.00bf7581(&fcn.00b9ca20::var_28h);\n                    arg_8h_00 = arg_14h;\n                    iVar7 = fcn.00b9fe40(0, &fcn.00b9ca20::var_10h, arg_ch, arg_14h, &fcn.00b9ca20::arg_8h + 3);\n                    if (iVar7 < 0) goto code_r0x00bd24f9;\n                    iVar7 = *(in_ECX + 0xf8);\n                }\n                if (iVar7 == 1) {\ncode_r0x00bd24f9:\n                    fcn.00b95efb();\n                    fcn.00b97776();\n                    return 0xffffffff;\n                }\n                fcn.00b95efb();\n                fcn.00b97776();\n                goto code_r0x00b9ca9d;\n            }\n        }\n        arg_8h_00 = arg_14h;\n        iVar7 = fcn.00c0c9f3(arg_8h, arg_ch, arg_10h_00, arg_14h);\n        if (iVar7 < 0) {\n            return 0xffffffff;\n        }\n        goto code_r0x00b9ca9d;\n    }\n    if (arg_10h[3] == 0x5) {\n        var_10h = NULL;\n        var_8h = NULL;\n        var_4h = 1;\n        arg_ch = NULL;\n        var_2ch = *(*(iVar8 + -4 + iVar7 * 4) + 10);\n        do {\n            *piVar9 = *piVar9 + 1;\n            var_14h = *(*(iVar8 + *piVar9 * 4) + 10);\n            iVar7 = fcn.00b9a000(0xb9cb17, piVar9, &fcn.00b9ca20::var_10h, 0xffffffff);\n            ppiVar10 = var_10h;\n            if (iVar7 < 0) goto code_r0x00bd24ef;\n            ppiVar4 = var_10h;\n            if (var_4h == 1) goto code_r0x00b9cb30;\n            if (9 < var_4h - 2U) goto code_r0x00b9cb38;\n    // switch table (10 cases) at 0xb9cd00\n            switch(*((var_4h - 2U) * 4 + 0xb9cd00)) {\n            case 0xb9cb38:\n                goto code_r0x00b9cb38;\n            case 0xb9cc4d:\n                piVar2 = *var_8h;\n                if ((((var_4h == 4) && (*piVar2 == 0x30)) && ((piVar2[1] == 0x78 || (piVar2[1] == 0x58)))) &&\n                   (var_8h[1] < 0x13)) {\n                    fcn.00bafbfb(0x10);\n                    ppiVar4 = var_50h;\n                    ppiVar10 = var_10h;\n                }\n                else {\n                    ppiVar4 = fcn.00bb37ca(piVar2);\n                    ppiVar10 = var_10h;\n                }\n                break;\n            case 0xbd2346:\n                ppiVar4 = fcn.00bcb5d0();\n                ppiVar10 = var_10h;\n                break;\n            case 0xbd2359:\n                ppiVar4 = var_10h[1];\n                break;\n            case 0xbd2364:\n                if (*var_10h < 9) {\n                    fcn.00bf582b(&fcn.00b9ca20::var_38h);\n                    ppiVar4 = var_38h;\n                    break;\n                }\n                goto code_r0x00b9cb38;\n            }\ncode_r0x00b9cb30:\n            iVar7 = var_14h;\n            if (ppiVar4 < 0) {\ncode_r0x00bd24e6:\n                uVar5 = 0x7b;\n                goto code_r0x00bd24e8;\n            }\ncode_r0x00b9cb38:\n            iVar7 = *piVar9;\n            if (*(*(arg_8h[1] + iVar7 * 4) + 8) != 0x4f) {\n                iVar7 = *(*(arg_8h[1] + -4 + iVar7 * 4) + 10);\n                goto code_r0x00bd24e6;\n            }\n            *piVar9 = iVar7 + 1;\n            if (var_4h == 1) goto code_r0x00b9cb5c;\n            if (var_4h - 2U < 10) {\n    // switch table (10 cases) at 0xb9cd28\n                switch(*((var_4h - 2U) * 4 + 0xb9cd28)) {\n                case 0xb9cc80:\n                    piVar2 = *var_8h;\n                    if (((var_4h == 4) && (*piVar2 == 0x30)) &&\n                       (((piVar2[1] == 0x78 || (piVar2[1] == 0x58)) && (var_8h[1] < 0x13)))) {\n                        fcn.00bafbfb(0x10);\n                        ppiVar10 = var_40h;\n                    }\n                    else {\n                        ppiVar10 = fcn.00bb37ca(piVar2);\n                    }\n                    break;\n                case 0xb9ccd6:\n                    ppiVar10 = ppiVar10[1];\n                    break;\n                case 0xb9ccde:\n                    goto code_r0x00b9ccde;\n                case 0xbd23b0:\n                    ppiVar10 = fcn.00bcb5d0();\n                    break;\n                case 0xbd23bf:\n                    ppiVar10 = ppiVar10 != '\\0';\n                    break;\n                case 0xbd23cd:\n                    if (8 < *ppiVar10) goto code_r0x00b9ccde;\n                    fcn.00bf582b(&fcn.00b9ca20::var_28h);\n                    ppiVar10 = var_28h;\n                }\n            }\n            else {\ncode_r0x00b9ccde:\n                ppiVar10 = NULL;\n            }\ncode_r0x00b9cb5c:\n            (&fcn.00b9ca20::var_150h)[arg_ch] = ppiVar10;\n            arg_ch = arg_ch + 1;\n            iVar8 = arg_8h[1];\n        } while (*(*(iVar8 + *piVar9 * 4) + 8) == 0x4e);\n        if (arg_10h[3] == 0x5) {\n            piVar9 = *arg_10h;\n        }\n        else {\n            piVar9 = NULL;\n        }\n        iVar7 = 0;\n        *(*piVar9 + 0x210) = 0;\n        if (0 < arg_ch) {\n            do {\n                iVar8 = *(*piVar9 + 0x210);\n                if (iVar8 < 0x40) {\n                    *(*piVar9 + 0x110 + iVar8 * 4) = (&fcn.00b9ca20::var_150h)[iVar7];\n                    *(*piVar9 + 0x210) = *(*piVar9 + 0x210) + 1;\n                }\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < arg_ch);\n        }\n        ppiVar10 = NULL;\n        arg_10h_00 = fcn.00b98ea0(piVar9, 1, 0);\n        if (arg_10h_00 == NULL) {\n            uVar5 = 0x7a;\n            iVar7 = var_2ch;\ncode_r0x00bd24e8:\n            fcn.00bfa0b5(uVar5, iVar7);\ncode_r0x00bd24ef:\n            fcn.00b99df0();\n            return 0xffffffff;\n        }\n        if (var_8h != NULL) {\n            ppiVar10 = var_8h;\n            fcn.00b97b3d(var_8h);\n            var_8h = NULL;\n        }\n        ppiVar4 = var_10h;\n        if ((4 < var_4h) && (var_4h - 5U < 0xb)) {\n    // switch table (11 cases) at 0xbd286a\n            switch(*((var_4h - 5U) * 4 + 0xbd286a)) {\n            case 0xbd2414:\n                if (var_10h != NULL) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_10h);\n                    fcn.00bb106c(var_10h);\n                }\n                break;\n            case 0xbd2436:\n                if (var_10h != NULL) {\n                    fcn.00b95a64();\n                    fcn.00bb106c(ppiVar4);\n                }\n                break;\n            case 0xbd2457:\n                if (var_10h != NULL) {\n                    ppiVar10 = var_10h;\n                    fcn.00b98e34();\n                }\n                break;\n            case 0xbd246d:\n                fcn.00bb106c(var_10h[1]);\n                fcn.00bb106c(var_10h);\n                break;\n            case 0xbd248b:\n                if (var_10h != NULL) {\n                    ppiVar10 = var_10h;\n                    fcn.00be73f0();\n                }\n                break;\n            case 0xbd24a1:\n                if (var_10h != NULL) {\n                    ppiVar10 = var_10h;\n                    fcn.00be7405();\n                }\n                break;\n            case 0xbd24b7:\n                if (var_10h != NULL) {\n                    fcn.00b95a64();\n                    fcn.00bb106c(ppiVar4);\n                }\n            }\n        }\n    }\n    else {\n        if (arg_10h[3] != 0xf) {\n            fcn.00bfa0b5(0x7c, *(var_14h + 10));\n            return 0xffffffff;\n        }\n        ppiVar10 = 0x2;\n        iVar7 = fcn.00c0c8d7(arg_8h, arg_ch, &fcn.00b9ca20::arg_10h, 2);\n        arg_10h_00 = arg_10h;\n        if (iVar7 < 0) {\n            return 0xffffffff;\n        }\n    }\n    arg_8h_00 = arg_14h;\n    if (arg_14h == arg_10h_00) goto code_r0x00b9ca9d;\n    if ((arg_14h[3] == 0x4) && (arg_10h_00[3] == 0x4)) {\n        fcn.00b981a7(arg_10h_00[2]);\n        goto code_r0x00b9ca9d;\n    }\n    ppiVar4 = arg_14h[2];\n    if (ppiVar4 != NULL) {\n        fcn.00b97b3d();\n        arg_8h_00[2] = NULL;\n        ppiVar10 = ppiVar4;\n    }\n    if ((arg_8h_00[3] < 5) || (uVar6 = arg_8h_00[3] - 5,  10 < uVar6)) goto code_r0x00b9ca88;\n    // switch table (11 cases) at 0xbd2896\n    switch(*(uVar6 * 4 + 0xbd2896)) {\n    case 0xbd2576:\n        fcn.00bb106c((*arg_8h_00)[1], ppiVar10);\n        piVar9 = *arg_8h_00;\n        goto code_r0x00bd25d4;\n    case 0xbd2587:\ncode_r0x00bd2587:\n        if (*arg_8h_00 != NULL) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(*arg_8h_00);\ncode_r0x00bd25a7:\n            piVar9 = *arg_8h_00;\n            goto code_r0x00bd25d4;\n        }\n        break;\n    case 0xbd25ab:\ncode_r0x00bd25ab:\n        arg_8h = *arg_8h_00;\n        goto joined_r0x00bd25c4;\n    case 0xbd25bd:\n        arg_8h = *arg_8h_00;\njoined_r0x00bd25c4:\n        if (arg_8h != NULL) {\n            fcn.00b95a64();\n            piVar9 = arg_8h;\ncode_r0x00bd25d4:\n            fcn.00bb106c(piVar9);\n        }\n        break;\n    case 0xbd278c:\ncode_r0x00bd278c:\n        if (*arg_8h_00 != NULL) {\n            fcn.00b98e34(*arg_8h_00);\n        }\n        break;\n    case 0xbd27a1:\ncode_r0x00bd27a1:\n        if (*arg_8h_00 != NULL) {\n            fcn.00be73f0(*arg_8h_00);\n        }\n        break;\n    case 0xbd27b6:\ncode_r0x00bd27b6:\n        if (*arg_8h_00 != NULL) {\n            fcn.00be7405(*arg_8h_00);\n        }\n    }\ncode_r0x00b9ca88:\n    arg_8h_00[3] = 0x1;\n    *arg_8h_00 = NULL;\n    fcn.00b99ac0(arg_10h_00);\ncode_r0x00b9ca9d:\n    if (((*(in_ECX + 0xfd) != '\\0') || (*(in_ECX + 0xfe) != '\\0')) && (arg_8h_00[3] == 0x4)) {\n        var_8h = NULL;\n        fcn.00b99ac0(arg_8h_00);\n        if (*(in_ECX + 0xfd) != '\\0') {\n            fcn.00c0c4a7(&fcn.00b9ca20::var_10h);\n            fcn.00b99997();\n            iVar7 = fcn.00bb2e3c(*var_8h);\n            if (iVar7 == 0) {\n                fcn.00b99e9c(arg_10h_00);\n            }\n        }\n        if (*(in_ECX + 0xfe) != '\\0') {\n            fcn.00c0c5f4(&fcn.00b9ca20::var_10h);\n            fcn.00b99997();\n            iVar7 = fcn.00bb2e3c(*var_8h);\n            if (iVar7 == 0) {\n                fcn.00b99e9c(arg_10h_00);\n            }\n        }\n        fcn.00b99e9c(&fcn.00b9ca20::var_10h);\n        fcn.00b99a20();\n    }\n    return 0;\n}\n",
        "token_count": 4686
    },
    "00b9cd50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00b9cd50(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h)\n\n{\n    uint arg_8h_00;\n    \n    if (arg_8h < 1) {\n        if (arg_ch != 0) {\ncode_r0x00b9cd92:\n            arg_8h_00 = 0x92;\n            goto code_r0x00bd28f2;\n        }\n        if (arg_10h != 0) {\ncode_r0x00b9cd9e:\n            arg_8h_00 = 0x77;\n            goto code_r0x00bd28f2;\n        }\n        if (arg_14h != 0) {\ncode_r0x00b9cda7:\n            arg_8h_00 = 0x97;\n            goto code_r0x00bd28f2;\n        }\n        if (arg_18h != 0) {\ncode_r0x00b9cdb3:\n            arg_8h_00 = 0xa0;\n            goto code_r0x00bd28f2;\n        }\n        if (arg_1ch != 0) {\ncode_r0x00b9cdbf:\n            arg_8h_00 = 0xb4;\n            goto code_r0x00bd28f2;\n        }\n        if (arg_20h != 0) {\ncode_r0x00b9cdcb:\n            arg_8h_00 = 0x73;\n            goto code_r0x00bd28f2;\n        }\n    }\n    else {\n        if (arg_ch == arg_8h) goto code_r0x00b9cd92;\n        if (arg_10h == arg_8h) goto code_r0x00b9cd9e;\n        if (arg_14h == arg_8h) goto code_r0x00b9cda7;\n        if (arg_18h == arg_8h) goto code_r0x00b9cdb3;\n        if (arg_1ch == arg_8h) goto code_r0x00b9cdbf;\n        if (arg_20h == arg_8h) goto code_r0x00b9cdcb;\n    }\n    if (arg_24h == 0) {\n        return 0;\n    }\n    arg_8h_00 = 0x6a;\ncode_r0x00bd28f2:\n    fcn.00bfa0b5(arg_8h_00, 0xffffffff);\n    return 0xffffffff;\n}\n",
        "token_count": 615
    },
    "00b9cdd4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b9cdd4(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_ch = *arg_ch + 1;\n    if (*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) == 0x7f) {\n        *0xc56270 = 1;\n        *(in_ECX + 0x144) = 1;\n        *(in_ECX + 0xf8) = 1;\n        return;\n    }\n    var_10h = 0;\n    var_8h = 0;\n    var_4h = 1;\n    iVar1 = fcn.00b9a000(arg_8h, arg_ch, &var_10h, 0xffffffff);\n    *0xc56270 = 1;\n    *(in_ECX + 0x144) = 1;\n    *(in_ECX + 0xf8) = 1;\n    if (-1 < iVar1) {\n        iVar1 = *(*(arg_8h + 4) + *arg_ch * 4);\n        if (*(iVar1 + 8) == 0x7f) {\n            *0xc5627c = fcn.00b99c9c();\n            if ((*(in_ECX + 0x118) == '\\0') || (0xfff < *0xc5627c + 0x80001000U)) goto code_r0x00bd29bc;\n            iVar1 = -1;\n            arg_8h_00 = 0xb9;\n        }\n        else {\n            iVar1 = *(iVar1 + 10);\n            arg_8h_00 = 0x72;\n        }\n        fcn.00bfa0b5(arg_8h_00, iVar1);\n    }\ncode_r0x00bd29bc:\n    fcn.00b99a20();\n    return;\n}\n",
        "token_count": 471
    },
    "00b9ce1a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b9ce1a(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX[0x3b] == 1) {\n        iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 10);\n        arg_8h_00 = 0x81;\n    }\n    else {\n        *arg_ch = *arg_ch + 1;\n        if (*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) != 0x7f) {\n            var_10h = 0;\n            var_8h = 0;\n            var_4h = 1;\n            iVar2 = fcn.00b9a000(arg_8h, arg_ch, &var_10h, 0xffffffff);\n            if (iVar2 < 0) {\n                fcn.00b99a20();\n                return;\n            }\n            iVar2 = *(*in_ECX + 4);\n            fcn.00b99e9c(&var_10h);\n            iVar3 = *(in_ECX + iVar2 + 8);\n            if (*(in_ECX + iVar2 + 0xd) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x10) = 1;\n            fcn.00b99a20();\n        }\n        iVar2 = *(*(arg_8h + 4) + *arg_ch * 4);\n        if (*(iVar2 + 8) == 0x7f) {\n            return;\n        }\n        iVar1 = *(iVar2 + 10);\n        arg_8h_00 = 0x72;\n    }\n    fcn.00bfa0b5(arg_8h_00, iVar1);\n    return;\n}\n",
        "token_count": 475
    },
    "00b9cedd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00b9cedd(int32_t arg_8h, uint32_t *arg_ch, int32_t **arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint unaff_ESI;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    uVar7 = 0;\n    var_2ch = 0;\n    *arg_ch = *arg_ch + 1;\n    uVar6 = *arg_ch;\n    var_24h = 0;\n    var_20h = 1;\n    if (arg_10h[3] == 0x5) {\n        var_ch = *arg_10h;\n    }\n    else {\n        var_ch = NULL;\n    }\n    if (uVar6 < *(arg_8h + 8)) {\n        var_14h = 0x4e;\n        var_18h = 0x4f;\n        do {\n            uVar7 = 0;\n            var_10h = *(*var_ch + 0x10c);\n            if (var_10h < arg_18h) {\n                iVar3 = 0x7d;\ncode_r0x00bd2a40:\n                uVar7 = 0;\n                fcn.00bfa0b5(iVar3, unaff_ESI);\n                break;\n            }\n            uVar1 = *(*(*(arg_8h + 4) + uVar6 * 4) + 8);\n            var_1ch = uVar1;\n            if (uVar1 == var_14h) {\n                *(arg_14h + arg_18h * 4) = 0;\n                cVar2 = fcn.00b9cedd(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                if (cVar2 == '\\0') break;\n            }\n            else {\n                if (arg_18h < var_10h) {\n                    iVar3 = 0x7e;\n                    goto code_r0x00bd2a40;\n                }\n                var_10h = *(*(*(arg_8h + 4) + uVar6 * 4) + 10);\n                if ((uVar1 != var_18h) || (*(*(*(arg_8h + 4) + -4 + uVar6 * 4) + 8) != var_14h)) {\n                    iVar3 = fcn.00b9a000(arg_8h, arg_ch, &var_2ch, 0xffffffff);\n                    if (iVar3 < 0) break;\n                    var_1ch = 0;\n                    *(*var_ch + 0x210) = 0;\n                    piVar5 = var_ch;\n                    if (0 < arg_18h) {\n                        do {\n                            unaff_ESI = *(arg_14h + uVar7 * 4);\n                            fcn.00b9928c(unaff_ESI);\n                            uVar7 = uVar7 + 1;\n                            piVar5 = extraout_ECX;\n                        } while (uVar7 < arg_18h);\n                    }\n                    iVar4 = fcn.00b98ea0(piVar5, 2, 0);\n                    iVar3 = var_10h;\n                    if (iVar4 == 0) goto code_r0x00bd2a40;\n                    fcn.00b99e9c(&var_2ch);\n                }\n            }\n            uVar7 = 0;\n            uVar6 = *arg_ch;\n            if (*(*(*(arg_8h + 4) + uVar6 * 4) + 8) != 0x40) {\n                if (*(*(*(arg_8h + 4) + uVar6 * 4) + 8) != var_18h) {\n                    iVar3 = 0x6b;\n                    goto code_r0x00bd2a40;\n                }\n                *arg_ch = uVar6 + 1;\n                uVar7 = 1;\n                break;\n            }\n            piVar5 = arg_14h + -4 + arg_18h * 4;\n            *piVar5 = *piVar5 + 1;\n            uVar6 = uVar6 + 1;\n            *arg_ch = uVar6;\n        } while (uVar6 < *(arg_8h + 8));\n    }\n    uVar6 = fcn.00b99a20();\n    return uVar6 & 0xffffff00 | uVar7;\n}\n",
        "token_count": 1149
    },
    "00b9d0dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b9d0dc(int32_t arg_8h, int32_t *arg_ch, int32_t **arg_10h, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *extraout_ECX;\n    int32_t *arg_8h_00;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    var_ch = 0xffffffff;\n    var_24h = 0;\n    var_1ch = 0;\n    *arg_18h = 0;\n    var_18h = 1;\n    iVar6 = *(*(arg_8h + 4) + *arg_ch * 4);\n    iVar4 = *(iVar6 + 10);\n    var_8h = iVar4;\n    while (*(iVar6 + 8) == 0x4e) {\n        *arg_ch = *arg_ch + 1;\n        puVar5 = *arg_ch;\n        iVar6 = *(*(arg_8h + 4) + puVar5 * 4);\n        iVar4 = *(iVar6 + 10);\n        var_10h = puVar5;\n        var_8h = iVar4;\n        if (*(iVar6 + 8) == 0x4f) {\n            iVar6 = 0;\n            uVar3 = fcn.00c0ab1f(*arg_18h, arg_8h, puVar5, 0);\n            fcn.00b99a20();\n            var_18h = 1;\n            var_24h = uVar3;\n        }\n        else {\n            iVar6 = -1;\n            puVar5 = &var_24h;\n            iVar2 = fcn.00b9a000(arg_8h, arg_ch, puVar5, 0xffffffff);\n            if (iVar2 < 0) goto code_r0x00bd2aa8;\n        }\n        if ((*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) != 0x4f) || (0x40 < *arg_18h)) goto code_r0x00bd2aa8;\n        *arg_ch = *arg_ch + 1;\n        iVar2 = fcn.00b99c9c();\n        if (iVar2 < 0) goto code_r0x00bd2aa8;\n        iVar6 = *arg_18h;\n        uVar3 = fcn.00b99c9c();\n        *(arg_14h + iVar6 * 4) = uVar3;\n        *arg_18h = iVar6 + 1;\n        iVar6 = *(*(arg_8h + 4) + *arg_ch * 4);\n    }\n    if (arg_10h[3] == 0xf) {\ncode_r0x00b9d221:\n        var_ch = 0;\n    }\n    else {\n        fcn.00b9942e();\n        if (arg_10h[3] == 0x5) {\n            arg_8h_00 = *arg_10h;\n        }\n        else {\n            arg_8h_00 = NULL;\n        }\n        iVar6 = *arg_18h;\n        if (iVar6 < 1) {\n            puVar5 = 0x7e;\n            iVar6 = iVar4;\n        }\n        else {\n            iVar2 = 0;\n            *(*arg_8h_00 + 0x210) = 0;\n            if (0 < iVar6) {\n                do {\n                    fcn.00b9928c(*(arg_14h + iVar2 * 4));\n                    iVar2 = iVar2 + 1;\n                    arg_8h_00 = extraout_ECX;\n                    iVar4 = var_8h;\n                } while (iVar2 < *arg_18h);\n            }\n            cVar1 = fcn.00b991b0(arg_8h_00, 0);\n            if (cVar1 != '\\0') goto code_r0x00b9d221;\n            puVar5 = 0x82;\n            iVar6 = iVar4;\n        }\ncode_r0x00bd2aa8:\n        fcn.00bfa0b5(puVar5, iVar6);\n    }\n    fcn.00b99a20();\n    return var_ch;\n}\n",
        "token_count": 1037
    },
    "00b9d260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_144h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00b9d260(int32_t arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t **ppiVar1;\n    int16_t iVar2;\n    int16_t **arg_8h_00;\n    int16_t *piVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    uint32_t arg_10h_00;\n    int32_t iVar7;\n    int16_t *piVar8;\n    int32_t *piVar9;\n    uint *puVar10;\n    int32_t iVar11;\n    int16_t **ppiVar12;\n    uint arg_8h_01;\n    uint var_144h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_5h;\n    \n    var_5h._0_1_ = (arg_10h & 4) != 0;\n    arg_10h_00 = arg_10h & 3;\n    *arg_ch = *arg_ch + 1;\n    ppiVar1 = *(arg_8h + 4) + *arg_ch * 4;\n    piVar9 = *ppiVar1;\n    if (*(piVar9 + 2) == 0) {\n        iVar7 = *piVar9;\n        if (iVar7 == 0x1e) {\n            fcn.00c0a6fb(arg_8h, arg_ch, arg_10h_00);\n            return;\n        }\n        if (iVar7 == 0x1f) {\n            if (((arg_10h_00 != 0) && (iVar7 = *ppiVar1[1],  iVar7 != 0x1c)) && (iVar7 != 0x1d)) {\n                fcn.00c0b1b7(arg_8h, arg_ch, arg_10h_00);\n                return;\n            }\n            uVar5 = *(piVar9 + 10);\n            arg_8h_01 = 0x6e;\n            goto code_r0x00bd2cda;\n        }\n        if (iVar7 == 0x2c) {\n            fcn.00c0ad0f(arg_8h, arg_ch, arg_10h_00);\n            return;\n        }\n    }\n    var_20h = 0;\n    var_18h = 0;\n    var_dh._0_1_ = '\\0';\n    if ((*0xc5746c & 1) == 0) {\n        *0xc5746c = *0xc5746c | 1;\n        fcn.00b99f3a(0xc1f910);\n        fcn.00bb2f80(0xbcb828);\n    }\n    puVar10 = *(*(arg_8h + 4) + *arg_ch * 4);\n    iVar2 = *(puVar10 + 2);\n    while (iVar2 == 0x33) {\n        arg_8h_00 = *puVar10;\n        stack0xfffffff0 = 0;\n        if (arg_10h_00 == 1) {\n            if (*0xc57280 == 0) goto code_r0x00b9d59e;\n            piVar9 = *0xc57284;\n            if (*0xc57289 != '\\0') {\n                piVar9 = (*0xc57284)[2];\n            }\n            cVar4 = fcn.00b988a0(arg_8h_00, piVar9);\n            if ((cVar4 == '\\0') || (iVar7 = *piVar9,  iVar7 == 0)) {\n                stack0xfffffff0 = 0;\n            }\n            else {\n                unique0x00007a00 = *(iVar7 + 0x14);\n                var_18h = *(iVar7 + 0x10) & 0xff00;\n            }\n        }\n        else {\n            if (arg_10h_00 == 0) {\n                if (*0xc57280 != 0) {\n                    puVar10 = &fcn.00b9d260::var_18h;\n                    ppiVar12 = arg_8h_00;\n                    fcn.00be670d();\n                    *NULL = fcn.00b98bb2(ppiVar12, puVar10);\n                    if (*NULL != 0) goto code_r0x00b9d348;\n                }\n            }\n            else if ((arg_10h_00 != 2) && (arg_10h_00 != 0x10)) goto code_r0x00b9d348;\ncode_r0x00b9d59e:\n            *NULL = fcn.00b98bb2(arg_8h_00, &fcn.00b9d260::var_18h);\n        }\ncode_r0x00b9d348:\n        if (stack0xfffffff0 != 0) {\n            if ((var_18h & 0x100) == 0) {\n                if ((var_18h & 0x400) == 0) {\n                    var_dh._0_1_ = '\\x01';\ncode_r0x00b9d36d:\n                    if ((((arg_10h & 1) == 0) ||\n                        (uVar5 = arg_10h_00,  cVar4 = fcn.00b986a2(arg_8h_00, &fcn.00b9d260::var_18h, arg_10h_00), \n                        cVar4 == '\\0')) || ((var_18h & 0x200) == 0)) goto code_r0x00b9d391;\ncode_r0x00bd2c65:\n                    arg_8h_01 = 0xaf;\n                }\n                else {\n                    if (var_5h != '\\0') goto code_r0x00b9d55c;\n                    uVar5 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 10);\n                    arg_8h_01 = 0x9c;\n                }\n            }\n            else {\n                uVar5 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 10);\n                arg_8h_01 = 0xae;\n            }\n            goto code_r0x00bd2cda;\n        }\n        if (var_5h != '\\0') {\n            uVar5 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 10);\n            arg_8h_01 = 0x79;\n            goto code_r0x00bd2cda;\n        }\n        *NULL = fcn.00b98620(arg_8h_00, 0xc57470, 0, arg_10h_00);\ncode_r0x00b9d55c:\n        if (var_dh != '\\0') goto code_r0x00b9d36d;\ncode_r0x00b9d391:\n        if ((arg_10h & 2) != 0) {\n            uVar5 = 1;\n            iVar7 = fcn.00b9859a(arg_8h_00, &fcn.00b9d260::var_18h, 1);\n            if ((iVar7 != 0) && ((var_18h & 0x200) != 0)) goto code_r0x00bd2c65;\n        }\n        if ((var_5h != '\\0') && (*(stack0xfffffff0 + 0xc) != 5)) {\n            uVar5 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 10);\n            arg_8h_01 = 0x71;\n            goto code_r0x00bd2cda;\n        }\n        *arg_ch = *arg_ch + 1;\n        if (*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) == 0x4e) {\n            if (var_5h == '\\0') {\n                var_dh._0_1_ = '\\0';\n            }\n            else {\n                fcn.00b99e9c(stack0xfffffff0);\n            }\n            iVar7 = fcn.00b9d0dc(arg_8h, arg_ch, stack0xfffffff0, &fcn.00b9d260::var_144h, &fcn.00b9d260::var_20h);\n            if (iVar7 < 0) {\n                fcn.00b99a20();\n                return;\n            }\n            if ((var_5h != '\\0') && (0 < *(_pe_dos_header + 0x10c))) {\n                fcn.00be6d03(0);\n            }\n            fcn.00b99a20();\n        }\n        iVar11 = stack0xfffffff0;\n        iVar7 = *(arg_8h + 4);\n        if (*(*(iVar7 + *arg_ch * 4) + 8) == 0x41) {\n            uVar5 = *arg_ch + 1;\n            *arg_ch = uVar5;\n            uVar5 = *(*(iVar7 + uVar5 * 4) + 10);\n            if (var_5h != '\\0') {\n                arg_8h_01 = 0xac;\n                goto code_r0x00bd2cda;\n            }\n            if ((var_dh != '\\0') && (stack0xfffffff0 != 0xc57470)) {\n                if ((*(stack0xfffffff0 + 0xc) == 4) && (*0xc5747c == 4)) {\n                    fcn.00b981a7(*0xc57478);\n                }\n                else {\n                    fcn.00b99a20();\n                    fcn.00b99ac0(0xc57470);\n                }\n            }\n            uVar5 = *arg_ch;\n            if (*(*(*(arg_8h + 4) + uVar5 * 4) + 8) == 0x4e) {\n                if (*(iVar11 + 0xc) != 5) {\n                    *arg_ch = uVar5 - 1;\n                    iVar7 = fcn.00c0aa66(arg_8h, arg_ch, iVar11, &fcn.00b9d260::var_144h, &fcn.00b9d260::var_20h);\n                    if (iVar7 < 0) {\n                        return;\n                    }\n                }\n                var_144h = 0xb9d673;\n                iVar7 = fcn.00b9d060(arg_8h, *arg_ch, arg_8h_00);\n                if (iVar7 < 0) {\n                    return;\n                }\n                if (0 < var_20h) {\n                    puVar10 = &fcn.00b9d260::var_144h;\n                    for (iVar7 = var_20h; iVar11 = stack0xfffffff0,  iVar7 != 0; iVar7 = iVar7 + -1) {\n                        *puVar10 = 0;\n                        puVar10 = puVar10 + 1;\n                    }\n                }\n                var_144h = 1;\n                cVar4 = fcn.00b9cedd(arg_8h, arg_ch, iVar11, &fcn.00b9d260::var_144h, 1);\n                if (cVar4 == '\\0') {\n                    return;\n                }\n            }\n            else {\n                iVar7 = 0;\n                var_1ch = 0;\n                if (uVar5 < *(arg_8h + 8)) {\n                    piVar9 = *(arg_8h + 4) + uVar5 * 4;\n                    do {\n                        iVar2 = *(*piVar9 + 2);\n                        if (iVar2 == 0x33) {\n                            ppiVar12 = **piVar9;\n                            piVar8 = ppiVar12[1];\n                            iVar7 = var_1ch;\n                            if (piVar8 == arg_8h_00[1]) {\n                                piVar6 = *ppiVar12;\n                                piVar3 = *arg_8h_00;\n                                iVar11 = *piVar9;\n                                while( true ) {\n                                    if (piVar8 == NULL) {\n                                        uVar5 = *(iVar11 + 10);\n                                        arg_8h_01 = 0xb1;\n                                        goto code_r0x00bd2cda;\n                                    }\n                                    iVar11 = *piVar9;\n                                    if (*piVar6 != *piVar3) break;\n                                    piVar3 = piVar3 + 1;\n                                    piVar6 = piVar6 + 1;\n                                    piVar8 = piVar8 + -1;\n                                }\n                            }\n                        }\n                        if (iVar2 == 0x4e) {\ncode_r0x00b9d490:\n                            iVar7 = iVar7 + 1;\n                            var_1ch = iVar7;\n                        }\n                        else if (iVar2 == 0x4f) {\ncode_r0x00b9d482:\n                            iVar7 = iVar7 + -1;\n                            var_1ch = iVar7;\n                        }\n                        else {\n                            if (iVar2 == 0x47) goto code_r0x00b9d490;\n                            if (iVar2 == 0x48) goto code_r0x00b9d482;\n                            if (((iVar2 == 0x40) && (iVar7 == 0)) || (iVar2 == 0x7f)) break;\n                        }\n                        uVar5 = uVar5 + 1;\n                        piVar9 = piVar9 + 1;\n                    } while (uVar5 < *(arg_8h + 8));\n                }\n                uVar5 = 0xffffffff;\n                iVar7 = fcn.00b9a000(arg_8h, arg_ch, stack0xfffffff0, 0xffffffff);\n                if (iVar7 < 0) {\n                    arg_8h_01 = 0x6e;\n                    goto code_r0x00bd2cda;\n                }\n            }\n        }\n        uVar5 = *arg_ch;\n        iVar7 = *(arg_8h + 4);\n        iVar2 = *(*(iVar7 + uVar5 * 4) + 8);\n        if (iVar2 == 0x7f) {\n            return;\n        }\n        if (iVar2 != 0x40) {\n            uVar5 = *(*(iVar7 + uVar5 * 4) + 10);\n            arg_8h_01 = 0x7f;\n            goto code_r0x00bd2cda;\n        }\n        *arg_ch = uVar5 + 1;\n        puVar10 = *(iVar7 + (uVar5 + 1) * 4);\n        iVar2 = *(puVar10 + 2);\n    }\n    uVar5 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 10);\n    arg_8h_01 = 0x7f;\ncode_r0x00bd2cda:\n    fcn.00bfa0b5(arg_8h_01, uVar5);\n    return;\n}\n",
        "token_count": 3488
    },
    "00b9d910": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b9d910(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    bool bVar3;\n    int32_t *piVar4;\n    char cVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    int32_t *extraout_ECX;\n    int32_t iVar11;\n    uint uVar12;\n    uint *in_stack_ffffff80;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    int32_t *var_54h;\n    uint var_50h;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    int32_t *var_20h;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    piVar4 = arg_ch;\n    iVar11 = arg_8h;\n    _var_20h = _var_20h & 0xffffffff00000000;\n    var_5ch = *arg_ch + -1;\n    var_18h = 0;\n    var_14h = 1;\n    var_30h = 0;\n    var_28h = 0;\n    var_24h = 1;\n    puVar8 = *(*(arg_8h + 4) + 4);\n    var_50h = 0;\n    var_48h = 0;\n    var_44h = 1;\n    var_40h = 0;\n    var_38h = 0;\n    var_34h = 1;\n    var_8h = NULL;\n    var_60h = 3;\n    if (*(puVar8 + 2) != 0x33) goto code_r0x00bd397c;\n    var_ch = *puVar8;\n    arg_ch = 0x2;\n    if (*0xc57280 == 0) {\n        in_stack_ffffff80 = 0xb9dd05;\n        piVar9 = fcn.00b98bb2(var_ch, &fcn.00b9d910::var_8h);\n    }\n    else {\n        piVar9 = *0xc57284;\n        if (*0xc57289 != '\\0') {\n            piVar9 = (*0xc57284)[2];\n        }\n        in_stack_ffffff80 = 0xb9d9bc;\n        cVar5 = fcn.00b988a0(var_ch, piVar9);\n        if ((cVar5 == '\\0') || (iVar6 = *piVar9,  iVar6 == 0)) {\n            piVar9 = NULL;\n            var_8h = NULL;\n        }\n        else {\n            piVar9 = *(iVar6 + 0x14);\n            var_8h = *(iVar6 + 0x10) & 0xff00;\n        }\n    }\n    if (piVar9 == NULL) {\n        var_8h = piVar9;\n        fcn.00b99a20();\n        in_stack_ffffff80 = 0x1;\n        var_14h = 1;\n        _var_20h = _var_20h & 0xffffffff00000000;\n        piVar9 = fcn.00b98620(var_ch, &fcn.00b9d910::var_20h, 0, 1);\ncode_r0x00b9d9f9:\n        iVar1 = *(*(*(arg_8h + 4) + 8) + 8);\n        arg_8h = piVar9;\n        var_8h = piVar9;\n        piVar10 = arg_ch;\n        while (iVar1 == 0x4e) {\n            if (piVar9[3] == 5) {\n                in_stack_ffffff80 = &fcn.00b9d910::arg_ch;\n                iVar6 = fcn.00be677b(iVar11, in_stack_ffffff80, &fcn.00b9d910::var_8h, 2);\n                if (iVar6 < 0) goto code_r0x00b9dc78;\ncode_r0x00bd3611:\n                arg_8h = var_8h;\n                piVar10 = arg_ch;\n                piVar9 = var_8h;\n            }\n            else if (piVar9[3] == 0xf) {\n                in_stack_ffffff80 = &fcn.00b9d910::arg_ch;\n                iVar6 = fcn.00c0c8d7(iVar11, in_stack_ffffff80, &fcn.00b9d910::var_8h, 8);\n                if (-1 < iVar6) goto code_r0x00bd3611;\n                goto code_r0x00b9dc78;\n            }\n            iVar1 = *(*(*(iVar11 + 4) + piVar10 * 4) + 8);\n        }\n        piVar2 = *(*(iVar11 + 4) + piVar10 * 4);\n        var_54h = piVar9;\n        if (*(piVar2 + 2) == 0) {\n            if (*piVar2 == 0x11) {\n                arg_ch = piVar10 + 1;\n                in_stack_ffffff80 = &fcn.00b9d910::arg_ch;\n                iVar6 = fcn.00b9a000(iVar11, in_stack_ffffff80, &fcn.00b9d910::var_20h, 0xffffffff);\n                if (iVar6 < 0) goto code_r0x00b9dc78;\n                if (var_14h == 8) {\n                    fcn.00b99e9c(&fcn.00b9d910::var_20h);\n                }\n                else if (var_14h == 5) {\n                    var_8h = var_20h;\n                    *(*var_20h + 0x210) = 0;\n                    fcn.00b9928c(0);\n                    if (((*(*extraout_ECX + 0x10c) < 1) || (iVar6 = fcn.00b98e6b(1),  iVar6 < 1)) ||\n                       (iVar6 = fcn.00b98ea0(var_8h, 1, 0),  iVar6 == 0)) {\ncode_r0x00bd370e:\n                        fcn.00b99bf8(0xc1f910);\n                        fcn.00b99a20();\n                        var_44h = 1;\n                        var_50h = 1;\n                        fcn.00b99a20();\n                        var_34h = 1;\n                        var_40h = 0xffffffff;\n                    }\n                    else {\n                        uVar12 = fcn.00b98ea0(var_8h, 2, 0);\n                        fcn.00b99e9c(uVar12);\n                        fcn.00b99e9c(&fcn.00b9d910::var_20h);\n                    }\n                }\n                else if (var_14h == 0xf) {\n                    if (*(var_20h[4] + 8) < 1) goto code_r0x00bd370e;\n                    uVar12 = fcn.00bf1fe7(0, 4);\n                    fcn.00b99e9c(uVar12);\n                    fcn.00b99e9c(&fcn.00b9d910::var_20h);\n                }\n                else {\n                    iVar6 = fcn.00c096db(0xa9, 0, L\"Variable is not of type \\'Object\\'.\", 1);\n                    if (iVar6 < 0) {\n                        uVar12 = 0xa9;\n                        goto code_r0x00bd3986;\n                    }\n                    fcn.00b99a20();\n                    var_24h = 1;\n                    var_30h = 1;\n                }\ncode_r0x00b9db21:\n                if (*(*(*(iVar11 + 4) + arg_ch * 4) + 8) != 0x7f) {\n                    uVar12 = 0x72;\n                    goto code_r0x00bd3986;\n                }\n                iVar11 = 0;\n                bVar3 = false;\n                while( true ) {\n                    iVar6 = *piVar4;\n                    *piVar4 = iVar6 + 1;\n                    if ((((*0xc572a0 < iVar6) || (iVar6 < 1)) || (iVar7 = iVar6 * 0x10 + *0xc572dc,  iVar7 == 0)) ||\n                       (bVar3)) break;\n                    piVar9 = **(iVar7 + 4);\n                    if (*(piVar9 + 2) == 0) {\n                        iVar7 = *piVar9;\n                        if (iVar7 == 0xd) {\n                            iVar11 = iVar11 + 1;\n                        }\n                        else if (iVar7 == 0xe) {\n                            if (iVar11 == 0) {\n                                bVar3 = true;\n                                var_58h = iVar6;\n                            }\n                            else {\n                                iVar11 = iVar11 + -1;\n                            }\n                        }\n                    }\n                }\n                iVar11 = fcn.00b99c9c();\n                if (iVar11 == 1) goto code_r0x00bd38f5;\n                if (arg_8h[3] == 8) {\n                    if (var_44h == 5) goto code_r0x00bd394b;\n                    if (var_44h == 0xf) goto code_r0x00b9dbac;\n                    fcn.00b99a20();\n                    var_24h = 1;\n                    var_30h = 0;\n                    fcn.00b99a20();\n                    var_14h = 1;\n                    _var_20h = _var_20h & 0xffffffff00000000;\n                    fcn.00c09428(arg_8h, &fcn.00b9d910::var_30h, &fcn.00b9d910::var_20h);\n                    cVar5 = fcn.00b993dd();\n                    if (cVar5 == '\\0') {\n                        fcn.00b99bf8(0xc1f910);\n                        fcn.00b99a20();\n                        var_24h = 1;\n                        var_30h = 0;\n                        fcn.00b99a20();\n                        var_14h = 1;\n                        _var_20h = _var_20h & 0xffffffff00000000;\n                        goto code_r0x00bd38f5;\n                    }\n                    fcn.00b99e9c(&fcn.00b9d910::var_20h);\n                    fcn.00b99e9c(&fcn.00b9d910::var_30h);\ncode_r0x00bd396a:\n                    fcn.00bafe26(&fcn.00b9d910::var_60h);\n                    iVar11 = var_5ch;\n                }\n                else {\ncode_r0x00b9dbac:\n                    if ((var_44h == 5) || (var_44h == 0xf)) {\ncode_r0x00bd394b:\n                        fcn.00b99a20();\n                        var_34h = 1;\n                        var_40h = 0;\n                        goto code_r0x00bd396a;\n                    }\n                    fcn.00b99a20();\n                    var_14h = 3;\n                    _var_20h = 0;\n                    cVar5 = fcn.00b98cd0();\n                    if (cVar5 != '\\0') {\n                        cVar5 = fcn.00bb0740();\n                        if (cVar5 != '\\0') goto code_r0x00bd396a;\ncode_r0x00bd38f5:\n                        *piVar4 = var_58h + 1;\n                        goto code_r0x00b9dc78;\n                    }\n                    cVar5 = fcn.00b98cd0();\n                    iVar11 = var_5ch;\n                    if (cVar5 != '\\0') goto code_r0x00bd38f5;\n                    if (*(var_4h + 0x165) == '\\0') {\n                        puVar8 = fcn.00bb0ff6(0x38);\n                        if (puVar8 == NULL) {\n                            puVar8 = NULL;\n                        }\n                        else {\n                            *puVar8 = var_60h;\n                            puVar8[2] = var_58h;\n                            puVar8[3] = var_54h;\n                            puVar8[1] = iVar11;\n                            puVar8[6] = 0;\n                            fcn.00b99ac0(&fcn.00b9d910::var_50h);\n                            puVar8[10] = 0;\n                            fcn.00b99ac0(&fcn.00b9d910::var_40h);\n                        }\n                        puVar8[0xc] = *(var_4h + 0x160);\n                        *(var_4h + 0x160) = puVar8;\n                    }\n                    else {\n                        fcn.00c0a5ae(&fcn.00b9d910::var_60h);\n                        *(var_4h + 0x165) = 0;\n                    }\n                    *(var_4h + 0x15c) = *(var_4h + 0x15c) + 1;\n                }\n                *piVar4 = iVar11 + 1;\n                goto code_r0x00b9dc78;\n            }\n        }\n        else {\n            arg_ch = piVar10 + 1;\n            in_stack_ffffff80 = &fcn.00b9d910::arg_ch;\n            iVar6 = fcn.00b9a000(iVar11, in_stack_ffffff80, &fcn.00b9d910::var_20h, 0xffffffff);\n            if (iVar6 < 0) goto code_r0x00b9dc78;\n            if (piVar9 != &fcn.00b9d910::var_20h) {\n                if ((piVar9[3] == 4) && (var_14h == 4)) {\n                    fcn.00b981a7(var_18h);\n                }\n                else {\n                    fcn.00b99a20();\n                    fcn.00b99ac0(&fcn.00b9d910::var_20h);\n                }\n            }\n            piVar9 = *(*(iVar11 + 4) + arg_ch * 4);\n            if ((*(piVar9 + 2) == 0) && (*piVar9 == 0xf)) {\n                arg_ch = arg_ch + 1;\n                iVar6 = fcn.00b9a000(iVar11, &fcn.00b9d910::arg_ch, &fcn.00b9d910::var_20h, 0xffffffff);\n                if (iVar6 < 0) goto code_r0x00b9dc78;\n                fcn.00b99a20();\n                fcn.00b99ac0(&fcn.00b9d910::var_20h);\n                piVar9 = *(*(iVar11 + 4) + arg_ch * 4);\n                if ((*(piVar9 + 2) == 0) && (*piVar9 == 0x10)) {\n                    arg_ch = arg_ch + 1;\n                    iVar6 = fcn.00b9a000(iVar11, &fcn.00b9d910::arg_ch, &fcn.00b9d910::var_20h, 0xffffffff);\n                    if (iVar6 < 0) goto code_r0x00b9dc78;\n                    fcn.00b99e9c(&fcn.00b9d910::var_20h);\n                }\n                else {\n                    fcn.00b99a20();\n                    var_34h = 1;\n                    var_40h = 1;\n                }\n                iVar7 = var_34h;\n                iVar6 = arg_8h[3];\n                if (((iVar6 != 1) && (iVar6 != 2)) && (iVar6 != 3)) {\n                    cVar5 = fcn.00b99606();\n                    if (cVar5 == '\\0') {\n                        fcn.00b99505();\n                    }\n                    else {\n                        fcn.00b99593();\n                    }\n                }\n                if (((var_44h != 1) && (var_44h != 3)) && (var_44h != 2)) {\n                    cVar5 = fcn.00b99606();\n                    if (cVar5 == '\\0') {\n                        fcn.00b99505();\n                        iVar7 = var_34h;\n                    }\n                    else {\n                        fcn.00b99593();\n                        iVar7 = var_34h;\n                    }\n                }\n                if (((iVar7 != 1) && (iVar7 != 2)) && (iVar7 != 3)) {\n                    cVar5 = fcn.00b99606();\n                    if (cVar5 == '\\0') {\n                        fcn.00b99505();\n                    }\n                    else {\n                        fcn.00b99593();\n                    }\n                }\n                goto code_r0x00b9db21;\n            }\n        }\ncode_r0x00bd397c:\n        uVar12 = 0x94;\n    }\n    else {\n        if ((var_8h & 0x100) == 0) goto code_r0x00b9d9f9;\n        in_stack_ffffff80 = *(*(*(arg_8h + 4) + 4) + 10);\n        uVar12 = 0xa3;\n        var_8h = piVar9;\n    }\ncode_r0x00bd3986:\n    fcn.00bfa0b5(uVar12, in_stack_ffffff80);\ncode_r0x00b9dc78:\n    fcn.00b99a20();\n    fcn.00b99a20();\n    fcn.00b99a20();\n    fcn.00b99a20();\n    return;\n}\n",
        "token_count": 4131
    },
    "00b9dd2e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00b9dd2e(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 1;\n    iVar1 = fcn.00b99f6b(arg_8h, &var_8h, &var_1h);\n    if (-1 < iVar1) {\n        iVar1 = *(*(arg_8h + 4) + var_8h * 4);\n        if (*(iVar1 + 8) == 0x7f) {\n            if (var_1h == '\\0') {\n                iVar1 = fcn.00bafe18();\n                *arg_ch = *(iVar1 + 4) + 1;\n            }\n            else {\n                fcn.00bafdcf();\n            }\n        }\n        else {\n            fcn.00bfa0b5(0x72, *(iVar1 + 10));\n        }\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "00b9de2e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b9de2e(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = 1;\n    if (*(*(*(arg_8h + 4) + 4) + 8) == 0x7f) {\n        iVar3 = 1;\ncode_r0x00b9de5e:\n        arg_8h = 0;\n        do {\n            if (*(in_ECX + 0x15c) == 0) {\n                arg_8h_00 = 0x96;\n                goto code_r0x00bd3a38;\n            }\n            piVar1 = *(in_ECX + 0x160);\n            if (*(in_ECX + 0x165) != '\\0') {\n                piVar1 = piVar1[0xc];\n            }\n            if (*piVar1 == 1) {\ncode_r0x00b9de9b:\n                iVar2 = *(in_ECX + 0x160);\n                if (*(in_ECX + 0x165) != '\\0') {\n                    iVar2 = *(iVar2 + 0x30);\n                }\n                if (*(iVar2 + 4) < *arg_ch) {\n                    iVar2 = *(in_ECX + 0x160);\n                    if (*(in_ECX + 0x165) != '\\0') {\n                        iVar2 = *(iVar2 + 0x30);\n                    }\n                    if (*arg_ch <= *(iVar2 + 8)) {\n                        iVar2 = *(in_ECX + 0x160);\n                        arg_8h = arg_8h + 1;\n                        if (*(in_ECX + 0x165) != '\\0') {\n                            iVar2 = *(iVar2 + 0x30);\n                        }\n                        *arg_ch = *(iVar2 + 8);\n                        if (arg_8h == iVar3) {\n                            return;\n                        }\n                        goto code_r0x00bd3a1a;\n                    }\n                }\n                arg_8h_00 = 0x8f;\ncode_r0x00bd3a38:\n                fcn.00bfa0b5(arg_8h_00, 0xffffffff);\n                return;\n            }\n            piVar1 = *(in_ECX + 0x160);\n            if (*(in_ECX + 0x165) != '\\0') {\n                piVar1 = piVar1[0xc];\n            }\n            if (*piVar1 == 2) goto code_r0x00b9de9b;\n            piVar1 = *(in_ECX + 0x160);\n            if (*(in_ECX + 0x165) != '\\0') {\n                piVar1 = piVar1[0xc];\n            }\n            if (*piVar1 == 3) goto code_r0x00b9de9b;\ncode_r0x00bd3a1a:\n            fcn.00bafdcf();\n        } while (arg_8h < iVar3);\n    }\n    else {\n        var_18h = 0;\n        var_10h = 0;\n        var_ch = 1;\n        iVar3 = fcn.00b9a000(arg_8h, &var_4h, &var_18h, 0xffffffff);\n        if (-1 < iVar3) {\n            iVar3 = *(*(arg_8h + 4) + var_4h * 4);\n            if (*(iVar3 + 8) == 0x7f) {\n                iVar3 = fcn.00b99c9c();\n                if (iVar3 < 0) {\n                    iVar3 = 0;\n                }\n                fcn.00b99a20();\n                if (iVar3 < 1) {\n                    return;\n                }\n                goto code_r0x00b9de5e;\n            }\n            fcn.00bfa0b5(0x72, *(iVar3 + 10));\n        }\n        fcn.00b99a20();\n    }\n    return;\n}\n",
        "token_count": 950
    },
    "00b9df0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00b9df0c(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar1 = fcn.00bafe18();\n    arg_8h_00 = fcn.00b971c8(*(iVar1 + 4));\n    var_8h = 1;\n    iVar1 = fcn.00b99f6b(arg_8h_00, &var_8h, &var_1h);\n    if (-1 < iVar1) {\n        if (var_1h == '\\0') {\n            fcn.00bafdcf();\n        }\n        else {\n            iVar1 = fcn.00bafe18();\n            *arg_8h = *(iVar1 + 4) + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "00b9df6b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00b9df6b(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    ulong uVar5;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_30h;\n    uint var_20h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 1;\n    fcn.00bafeac();\n    var_40h = 1;\n    iVar4 = fcn.00b99f6b(arg_8h, &var_8h, &var_1h);\n    if (-1 < iVar4) {\n        iVar4 = *(*(arg_8h + 4) + var_8h * 4);\n        if (*(iVar4 + 8) == 0x7f) {\n            iVar4 = *arg_ch;\n            var_3ch = iVar4 + -1;\n            bVar3 = false;\n            while( true ) {\n                arg_8h_00 = *arg_ch;\n                *arg_ch = arg_8h_00 + 1;\n                uVar5 = fcn.00b971c8(arg_8h_00);\n                arg_ch = uVar5 >> 0x20;\n                if ((uVar5 == 0) || (bVar3)) break;\n                piVar1 = **(uVar5 + 4);\n                if ((((*(piVar1 + 2) == 0) && (iVar2 = *piVar1,  iVar2 != 9)) && (iVar2 == 10)) && (extraout_ECX == 0))\n                {\n                    bVar3 = true;\n                    var_38h = arg_8h_00;\n                }\n            }\n            if (var_1h == '\\0') {\n                *arg_ch = var_38h + 1;\n            }\n            else {\n                *arg_ch = iVar4;\n                fcn.00bafe26(&var_40h);\n            }\n        }\n        else {\n            fcn.00bfa0b5(0x72, *(iVar4 + 10));\n        }\n    }\n    fcn.00b99a20();\n    fcn.00b99a20();\n    return;\n}\n",
        "token_count": 587
    },
    "00b9e060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00b9e060(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    ulong *puVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    bool bVar8;\n    int32_t iVar9;\n    ulong *puVar10;\n    uint *puVar11;\n    uint32_t uVar12;\n    uint8_t uVar13;\n    char cVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint *var_8h;\n    uint var_1h;\n    \n    piVar4 = arg_ch;\n    var_10h = 1;\n    var_20h = NULL;\n    var_18h = 0;\n    var_14h = 1;\n    iVar9 = fcn.00b9a000(arg_8h, &var_10h, &var_20h, 0xffffffff);\n    if (iVar9 < 0) {\n        fcn.00b99df0();\n        return;\n    }\n    if (var_14h == 9) {\n        if (var_20h == '\\0') goto code_r0x00b9e0bc;\n        goto code_r0x00b9e11f;\n    }\n    if (10 < var_14h - 1) goto code_r0x00b9e0bc;\n    // switch table (11 cases) at 0xb9e548\n    switch(*((var_14h - 1) * 4 + 0xb9e548)) {\n    case 0xb9e0bc:\n        goto code_r0x00b9e0bc;\n    case 0xb9e11b:\n        puVar11 = var_20h;\n        break;\n    case 0xbd3a64:\n        puVar11 = var_20h | var_1ch;\n        break;\n    case 0xbd3a6f:\n        if (CONCAT44(var_1ch, var_20h) != 0.0) goto code_r0x00b9e11f;\n        goto code_r0x00b9e0bc;\n    case 0xbd3a89:\n        puVar11 = *(var_18h + 4);\n        break;\n    case 0xbd3a9e:\n        puVar11 = *var_20h;\n    }\n    if (puVar11 == NULL) {\ncode_r0x00b9e0bc:\n        uVar13 = 0;\n    }\n    else {\ncode_r0x00b9e11f:\n        uVar13 = 1;\n    }\n    var_8h = var_20h;\n    var_1h._0_1_ = uVar13;\n    if (var_18h != 0) {\n        fcn.00b97b3d(var_14h);\n        var_18h = 0;\n    }\n    var_8h = var_20h;\n    if ((var_14h == 9) || (uVar15 = var_14h - 5,  10 < uVar15)) goto code_r0x00b9e0d2;\n    switch(*(uVar15 * 4 + 0xbd3d3b)) {\n    case 0xbd3ad0:\n        if (var_20h == NULL) break;\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_20h);\n        puVar11 = var_20h;\n        goto code_r0x00bd3b52;\n    case 0xbd3ae4:\n        goto joined_r0x00bd3b42;\n    case 0xbd3af1:\n        if (var_20h != NULL) {\n            fcn.00b98e34(uVar15);\n        }\n        break;\n    case 0xbd3b06:\n        fcn.00bb106c(var_20h[1]);\n        puVar11 = var_20h;\n        goto code_r0x00bd3b52;\n    case 0xbd3b16:\n        if (var_20h != NULL) {\n            fcn.00be73f0(uVar15);\n        }\n        break;\n    case 0xbd3b2b:\n        if (var_20h != NULL) {\n            fcn.00be7405(uVar15);\n        }\n        break;\n    case 0xbd3b40:\njoined_r0x00bd3b42:\n        if (var_20h == NULL) break;\n        fcn.00b95a64();\n        puVar11 = var_8h;\ncode_r0x00bd3b52:\n        fcn.00bb106c(puVar11);\n    }\ncode_r0x00b9e0d2:\n    iVar9 = *(arg_8h + 4);\n    piVar2 = *(iVar9 + var_10h * 4);\n    if ((*(piVar2 + 2) == 0) && (*piVar2 == 5)) {\n        iVar16 = var_10h + 1;\n        if (*(*(iVar9 + 4 + var_10h * 4) + 8) == 0x7f) {\n            uVar15 = uVar13;\n            bVar8 = false;\n            var_40h = 0;\n            var_38h = 0;\n            var_34h = 1;\n            var_30h = 0;\n            var_28h = 0;\n            var_24h = 1;\n            var_4ch = *arg_ch + -1;\n            var_8h = NULL;\n            var_50h = 0;\n            if (uVar13 != 0) {\n                var_8h = *arg_ch;\n            }\n            arg_ch = NULL;\ncode_r0x00b9e390:\n            do {\n                do {\n                    iVar9 = *piVar4;\n                    *piVar4 = iVar9 + 1;\n                    if ((((*0xc572a0 < iVar9) || (iVar9 < 1)) || (iVar16 = iVar9 * 0x10 + *0xc572dc,  iVar16 == 0)) ||\n                       (uVar15 >> 8 != '\\0')) {\n                        *piVar4 = var_8h;\n                        if (*(var_ch + 0x165) == '\\0') {\n                            puVar11 = fcn.00bb0ff6(0x38);\n                            if (puVar11 == NULL) {\n                                puVar11 = NULL;\n                            }\n                            else {\n                                puVar11[1] = var_4ch;\n                                puVar11[2] = var_48h;\n                                puVar11[3] = var_44h;\n                                *puVar11 = 0;\n                                puVar11[6] = 0;\n                                fcn.00b99ac0(&var_40h);\n                                puVar11[10] = 0;\n                                fcn.00b99ac0(&var_30h);\n                            }\n                            puVar11[0xc] = *(var_ch + 0x160);\n                            *(var_ch + 0x160) = puVar11;\n                        }\n                        else {\n                            fcn.00c0a5ae(&var_50h);\n                            *(var_ch + 0x165) = 0;\n                        }\n                        *(var_ch + 0x15c) = *(var_ch + 0x15c) + 1;\ncode_r0x00b9e466:\n                        fcn.00b99a20();\n                        fcn.00b99a20();\n                        return;\n                    }\n                    ppiVar5 = *(iVar16 + 4);\n                } while (*(*ppiVar5 + 2) != 0);\n                iVar6 = **ppiVar5;\n                cVar14 = uVar15;\n                if (iVar6 == 8) {\n                    if (arg_ch == NULL) {\n                        uVar15 = CONCAT11(1, cVar14);\n                        var_48h = iVar9;\n                        if ((cVar14 == '\\0') && (!bVar8)) {\n                            var_8h = iVar9;\n                        }\n                    }\n                    else {\n                        arg_ch = arg_ch + -1;\n                    }\n                    goto code_r0x00b9e390;\n                }\n                if (iVar6 != 4) {\n                    if (iVar6 == 6) {\n                        if (arg_ch != iVar6 + -6) goto code_r0x00b9e390;\n                        if (!bVar8) {\n                            bVar8 = true;\n                            if (cVar14 == '\\0') {\n                                var_8h = iVar9 + 1;\n                            }\n                            goto code_r0x00b9e390;\n                        }\n                    }\n                    else {\n                        if ((iVar6 + -6 != 1) || (arg_ch != NULL)) goto code_r0x00b9e390;\n                        if (!bVar8) {\n                            if (cVar14 == '\\0') {\n                                var_10h = 1;\n                                *(var_ch + 0xf4) = iVar9;\n                                iVar9 = fcn.00b99f6b(iVar16, &var_10h, &var_1h);\n                                if (iVar9 < 0) goto code_r0x00b9e466;\n                                piVar2 = *(*(iVar16 + 4) + var_10h * 4);\n                                if ((*(piVar2 + 2) != 0) || (*piVar2 != 5)) {\n                                    *(var_ch + 0xf4) = *piVar4 + -1;\n                                    fcn.00bfa0b5(0xa1, *(*(*(iVar16 + 4) + var_10h * 4) + 10));\n                                    goto code_r0x00b9e466;\n                                }\n                                if (*(*(*(iVar16 + 4) + 4 + var_10h * 4) + 8) != 0x7f) {\n                                    *(var_ch + 0xf4) = *piVar4 + -1;\n                                    fcn.00bfa0b5(0x72, *(*(*(iVar16 + 4) + var_10h * 4) + 10));\n                                    goto code_r0x00b9e466;\n                                }\n                                uVar15 = uVar15 & 0xffffff00 | var_1h;\n                                if (var_1h != 0) {\n                                    var_8h = *piVar4;\n                                }\n                            }\n                            goto code_r0x00b9e390;\n                        }\n                    }\n                    fcn.00bfa0b5(0x76, 0xffffffff);\n                    goto code_r0x00b9e466;\n                }\n                uVar12 = 1;\n                if (1 < *(iVar16 + 8)) {\n                    do {\n                        if (((*(ppiVar5[uVar12] + 2) == 0) && (*ppiVar5[uVar12] == 5)) &&\n                           (*(ppiVar5[uVar12 + 1] + 2) == 0x7f)) {\n                            arg_ch = arg_ch + 1;\n                            break;\n                        }\n                        uVar12 = uVar12 + 1;\n                    } while (uVar12 < *(iVar16 + 8));\n                }\n            } while( true );\n        }\n        if (uVar13 != 0) {\n            var_20h = 0xc1fb78;\n            var_1ch = 0;\n            var_18h = 0;\n            var_14h = 0;\n            do {\n                puVar3 = *(iVar9 + iVar16 * 4);\n                iVar16 = iVar16 + 1;\n                iVar9 = var_1ch;\n                if (var_18h == var_14h) {\n                    var_14h = var_14h * 2;\n                    if (var_14h < 8) {\n                        var_14h = 8;\n                    }\n                    iVar9 = fcn.00bb0ff6(-(var_14h * 4 >> 0x20 != 0) | var_14h * 4);\n                    if ((var_1ch != 0) && (var_18h != 0)) {\n                        fcn.00bb1080(iVar9, var_1ch, var_18h << 2);\n                        fcn.00bb106c(var_1ch);\n                    }\n                }\n                var_1ch = iVar9;\n                puVar10 = fcn.00bb0ff6(0xc);\n                if (puVar10 == NULL) {\n                    puVar10 = NULL;\n                }\n                else {\n                    *(puVar10 + 1) = *(puVar3 + 1);\n                    iVar1 = *(puVar10 + 1);\n                    *(puVar10 + 10) = *(puVar3 + 10);\n                    if ((iVar1 < 0x40) && (0x2f < iVar1)) {\n                        puVar11 = fcn.00bb0ff6(0x10);\n                        if (puVar11 == NULL) {\n                            puVar11 = NULL;\n                        }\n                        else {\n                            puVar7 = *puVar3;\n                            *puVar11 = *puVar7;\n                            puVar11[1] = puVar7[1];\n                            puVar11[2] = puVar7[2];\n                            piVar4 = puVar7[3];\n                            puVar11[3] = piVar4;\n                            *piVar4 = *piVar4 + 1;\n                        }\n                        *puVar10 = puVar11;\n                    }\n                    else if (iVar1 == 0x10) {\n                        *puVar10 = *puVar3;\n                        *(puVar10 + 4) = *(puVar3 + 4);\n                    }\n                    else if (iVar1 == 0x20) {\n                        *puVar10 = *puVar3;\n                    }\n                    else {\n                        *puVar10 = *puVar3;\n                    }\n                }\n                *(var_1ch + var_18h * 4) = puVar10;\n                iVar9 = *(arg_8h + 4);\n                var_18h = var_18h + 1;\n                puVar3 = *(iVar9 + iVar16 * 4);\n            } while (*(puVar3 + 1) != 0x7f);\n            iVar9 = var_1ch;\n            if (var_18h == var_14h) {\n                var_14h = var_14h * 2;\n                if (var_14h < 8) {\n                    var_14h = 8;\n                }\n                iVar9 = fcn.00bb0ff6(-(var_14h * 4 >> 0x20 != 0) | var_14h * 4);\n                if ((var_1ch != 0) && (var_18h != 0)) {\n                    fcn.00bb1080(iVar9, var_1ch, var_18h << 2);\n                    fcn.00bb106c(var_1ch);\n                }\n            }\n            var_1ch = iVar9;\n            puVar10 = fcn.00bb0ff6(0xc);\n            if (puVar10 == NULL) {\n                puVar10 = NULL;\n            }\n            else {\n                *(puVar10 + 1) = *(puVar3 + 1);\n                iVar1 = *(puVar10 + 1);\n                *(puVar10 + 10) = *(puVar3 + 10);\n                if ((iVar1 < 0x40) && (0x2f < iVar1)) {\n                    puVar11 = fcn.00bb0ff6(0x10);\n                    if (puVar11 == NULL) {\n                        puVar11 = NULL;\n                    }\n                    else {\n                        puVar7 = *puVar3;\n                        *puVar11 = *puVar7;\n                        puVar11[1] = puVar7[1];\n                        puVar11[2] = puVar7[2];\n                        piVar4 = puVar7[3];\n                        puVar11[3] = piVar4;\n                        *piVar4 = *piVar4 + 1;\n                    }\n                    *puVar10 = puVar11;\n                }\n                else if (iVar1 == 0x10) {\n                    *puVar10 = *puVar3;\n                    *(puVar10 + 4) = *(puVar3 + 4);\n                }\n                else if (iVar1 == 0x20) {\n                    *puVar10 = *puVar3;\n                }\n                else {\n                    *puVar10 = *puVar3;\n                }\n            }\n            *(var_1ch + var_18h * 4) = puVar10;\n            var_18h = var_18h + 1;\n            fcn.00ba180e(&var_20h, arg_ch);\n            uVar15 = 0;\n            var_20h = 0xc1fb78;\n            if (var_18h != 0) {\n                do {\n                    piVar4 = *(var_1ch + uVar15 * 4);\n                    if (piVar4 != NULL) {\n                        if (((*(piVar4 + 2) < 0x40) && (0x2f < *(piVar4 + 2))) && (puVar11 = *piVar4,  puVar11 != NULL))\n                        {\n                            *puVar11[3] = *puVar11[3] + -1;\n                            if (*puVar11[3] == 0) {\n                                fcn.00bb106c(*puVar11);\n                                fcn.00bb106c(puVar11[3]);\n                            }\n                            fcn.00bb106c(puVar11);\n                        }\n                        fcn.00bb106c(piVar4);\n                    }\n                    *(var_1ch + uVar15 * 4) = 0;\n                    uVar15 = uVar15 + 1;\n                } while (uVar15 < var_18h);\n            }\n            var_18h = 0;\n            fcn.00bb106c(var_1ch);\n            return;\n        }\n    }\n    else {\n        fcn.00bfa0b5(0xa1, *(piVar2 + 10));\n    }\n    return;\n}\n",
        "token_count": 4219
    },
    "00b9e580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b9e580(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t **ppiVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    ppiVar1 = *(arg_8h + 4);\n    iVar4 = 0;\n    var_4h = 0;\n    if (**ppiVar1 == 4) {\n        fcn.00b9e060(arg_8h, arg_ch);\n        return;\n    }\n    uVar3 = **ppiVar1 - 4;\n    if (uVar3 < 0x29) {\n    // switch table (41 cases) at 0xb9e750\n        switch(*(uVar3 * 4 + 0xb9e750)) {\n        case 0xb9e5c4:\n            fcn.00b9d6f0(0, arg_ch);\n            return;\n        case 0xb9e5d8:\n            fcn.00b9d910(arg_8h, arg_ch);\n            return;\n        case 0xb9e5ec:\n            fcn.00b9ce1a(arg_8h, &var_4h);\n        case 0xb9e5f8:\n            *(in_ECX + 0x144) = 1;\n            return;\n        case 0xb9e608:\n            fcn.00b9d260(arg_8h, &var_4h, 1);\n            return;\n        case 0xb9e61f:\n            if (*(in_ECX + 0x165) != '\\0') {\n                iVar4 = *(in_ECX + 0x160);\n                uVar2 = *(iVar4 + 0x30);\n                if (iVar4 != 0) {\n                    fcn.00be6b8e(iVar4);\n                }\n                *(in_ECX + 0x160) = uVar2;\n                *(in_ECX + 0x165) = 0;\n            }\n            if (*(in_ECX + 0x164) == '\\0') {\n                iVar4 = *(in_ECX + 0x160);\n                uVar2 = *(iVar4 + 0x30);\n                if (iVar4 != 0) {\n                    fcn.00b99a20();\n                    fcn.00b99a20();\n                    fcn.00bb106c(iVar4);\n                }\n                *(in_ECX + 0x160) = uVar2;\n                *(in_ECX + 0x165) = 0;\n            }\n            else {\n                *(in_ECX + 0x165) = 1;\n            }\n            *(in_ECX + 0x15c) = *(in_ECX + 0x15c) + -1;\n            return;\n        case 0xb9e67a:\n            fcn.00b9de2e(arg_8h, arg_ch);\n            return;\n        case 0xb9e68e:\n            if (*(in_ECX + 0x165) == '\\0') {\n                iVar4 = *(in_ECX + 0x160);\n            }\n            else {\n                iVar4 = *(*(in_ECX + 0x160) + 0x30);\n            }\n            *arg_ch = *(iVar4 + 8) + 1;\n            fcn.00bafdcf();\n            return;\n        case 0xb9e6bb:\n            fcn.00b9dd2e(arg_8h, arg_ch);\n            return;\n        case 0xb9e6cf:\n            fcn.00b9df0c(arg_ch);\n            return;\n        case 0xb9e6e2:\n            fcn.00b9dd90(0, arg_ch);\n            return;\n        case 0xb9e6f6:\n            fcn.00b9cdd4(arg_8h, &var_4h);\n            return;\n        case 0xb9e70b:\n            fcn.00b9d260(arg_8h, &var_4h, 2);\n            return;\n        case 0xb9e722:\n            fcn.00b9df6b(arg_8h, arg_ch);\n            return;\n        case 0xb9e736:\n            fcn.00b9d260(arg_8h, &var_4h, 0);\n            return;\n        case 0xbd3da3:\n            fcn.00c0af30(arg_8h, arg_ch);\n            break;\n        case 0xbd3db3:\n            fcn.00c0b025(0, arg_ch);\n            break;\n        case 0xbd3dc3:\n            iVar4 = fcn.00bafe18();\n            *arg_ch = *(iVar4 + 8);\n            break;\n        case 0xbd3ddb:\n            fcn.00bafdcf();\n            break;\n        case 0xbd3deb:\n            fcn.00c0b522(arg_8h, arg_ch);\n            break;\n        case 0xbd3dfb:\n            fcn.00c0a95d(arg_8h, &var_4h, arg_ch);\n            break;\n        case 0xbd3e0f:\n            fcn.00c0ad0f(arg_8h, &var_4h, 0);\n            break;\n        case 0xbd3e22:\n            fcn.00c0a6fb(arg_8h, &var_4h, 0);\n            break;\n        case 0xbd3e35:\n            fcn.00b9d260(arg_8h, &var_4h, 4);\n            break;\n        case 0xbd3e48:\n            fcn.00c0b1b7(arg_8h, &var_4h, 0);\n            break;\n        case 0xbd3e5b:\n            if (((*(arg_8h + 8) < 2) || (*(ppiVar1[1] + 2) != 0)) || (*ppiVar1[1] != 0x20)) {\n                fcn.00bfa0b5(0x69, 0xffffffff);\n                return;\n            }\n            iVar4 = 1;\n        case 0xbd3e74:\n            iVar4 = fcn.00b99fbd(*ppiVar1[iVar4 + 1]);\n            *arg_ch = *(iVar4 + 0x1c) + 1;\n            break;\n        case 0xbd3e9f:\n            fcn.00c0b7b4(arg_8h, &var_4h);\n            break;\n        case 0xbd3eb0:\n            fcn.00c0a456();\n            break;\n        case 0xbd3ec0:\n            goto code_r0x00bd3ec0;\n        }\n    }\n    else {\ncode_r0x00bd3ec0:\n        fcn.00bfa0b5(0x81, 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 1576
    },
    "00b9e800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_184h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00b9e800(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t *piVar7;\n    int32_t in_ECX;\n    uint16_t *puVar8;\n    uint16_t **ppuVar9;\n    int32_t iVar10;\n    uint16_t *puVar11;\n    int32_t *piVar12;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint arg_8h_02;\n    uint arg_8h_03;\n    uint16_t **ppuVar13;\n    uint16_t **ppuVar14;\n    uint16_t **ppuVar15;\n    int32_t iVar16;\n    uint16_t **ppuVar17;\n    bool bVar18;\n    uint arg_8h_04;\n    int32_t var_184h;\n    int32_t *var_84h;\n    int32_t **var_78h;\n    int32_t *var_74h;\n    uint16_t **var_70h;\n    int32_t *var_6ch;\n    uint16_t **var_68h;\n    int32_t *var_64h;\n    int32_t *var_5ch;\n    int32_t var_58h;\n    uint32_t var_54h;\n    int32_t var_50h;\n    int32_t *var_4ch;\n    int32_t **var_48h;\n    int32_t *var_44h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t *var_34h;\n    int32_t *var_2ch;\n    int32_t var_28h;\n    int32_t *var_24h;\n    uint16_t **var_20h;\n    uint16_t **var_1ch;\n    uint16_t **var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    iVar16 = 0;\n    iVar10 = 0;\n    var_ch = 0;\n    var_64h = NULL;\n    var_5ch = NULL;\n    var_58h = 1;\ncode_r0x00b9e835:\n    while( true ) {\n        iVar5 = *(iVar10 + *(arg_8h + 4));\n        iVar1 = *(iVar5 + 8);\n        if (iVar1 != 0x4e) break;\ncode_r0x00b9ea09:\n        iVar16 = iVar16 + 1;\ncode_r0x00b9e896:\n        iVar10 = iVar10 + 4;\n    }\n    if (iVar1 == 0x4f) {\ncode_r0x00b9ea00:\n        iVar16 = iVar16 + -1;\n        iVar10 = iVar10 + 4;\n        goto code_r0x00b9e835;\n    }\n    if (iVar1 == 0x47) goto code_r0x00b9ea09;\n    if (iVar1 == 0x48) goto code_r0x00b9ea00;\n    iVar2 = *(iVar5 + 8);\n    if ((((((iVar2 == 0x41) || (iVar2 == 0x52)) || (iVar2 == 0x53)) || ((iVar2 == 0x54 || (iVar2 == 0x55)))) ||\n        (iVar2 == 0x56)) && (iVar16 == 0)) {\n        var_ch = 1;\n        var_15h._0_1_ = '\\0';\n        var_78h = NULL;\n        ppuVar17 = ***(arg_8h + 4);\n        stack0xffffffe8 = ppuVar17;\n        var_50h = 0;\n        var_54h = 0;\n        var_10h = in_ECX;\n        if (*0xc57280 == 0) goto code_r0x00b9ebe4;\n        ppiVar6 = *0xc57284;\n        if (*0xc57289 != '\\0') {\n            ppiVar6 = (*0xc57284)[2];\n        }\n        if (*ppiVar6 == NULL) goto code_r0x00b9ebe4;\n        var_5h._0_1_ = '\\0';\n        if ((*0xc57440 & 1) == 0) {\n            *0xc57440 = *0xc57440 | 1;\n            fcn.00b977c7();\n            fcn.00bb2f80(0xbcb80a);\n        }\n        *0xc57460 = NULL;\n        *0xc5745c = NULL;\n        var_48h = 0xc57444;\n        var_68h = 0xc57444;\n        goto code_r0x00b9e920;\n    }\n    if (iVar1 != 0x7f) goto code_r0x00b9e896;\n    fcn.00b9a000(arg_8h, &var_ch, &var_64h, 0xffffffff);\n    iVar10 = *(*(arg_8h + 4) + var_ch * 4);\n    if (*(iVar10 + 8) != 0x7f) {\n        fcn.00bfa0b5(0x72, *(iVar10 + 10));\n    }\n    goto code_r0x00b9ebc1;\ncode_r0x00b9e920:\n    var_1ch = *ppiVar6;\n    var_20h = ppuVar17[1];\n    ppuVar9 = var_1ch[1];\n    cVar3 = var_5h;\n    if (var_20h == NULL) {\n        if (ppuVar9 == NULL) goto code_r0x00bd3f48;\ncode_r0x00b9ea15:\n        ppuVar9 = var_1ch[6];\n        if (ppuVar9 == NULL) goto code_r0x00b9ea68;\n        ppuVar14 = ppuVar9[1];\n        if (ppuVar14 < var_20h) {\n            var_20h = ppuVar14;\n        }\n        puVar8 = *ppuVar9;\n        puVar11 = *ppuVar17;\n        ppuVar17 = var_20h;\n        if (var_20h != NULL) {\n            do {\n                if (*puVar11 != *puVar8) {\n                    if (*puVar8 <= *puVar11) goto code_r0x00b9ecf3;\n                    goto code_r0x00b9ecd9;\n                }\n                puVar11 = puVar11 + 1;\n                puVar8 = puVar8 + 1;\n                ppuVar17 = ppuVar17 + -1;\n            } while (ppuVar17 != NULL);\n            ppuVar14 = ppuVar9[1];\n        }\n        if (var_20h < ppuVar14) {\ncode_r0x00b9ecd9:\n            var_1ch[6] = ppuVar9[7];\n            ppuVar9[7] = *ppiVar6;\n            *ppiVar6 = ppuVar9;\n            if (ppuVar9[6] == NULL) goto code_r0x00b9ea68;\n        }\ncode_r0x00b9ecf3:\n        var_48h[6] = *ppiVar6;\n        var_48h = *ppiVar6;\n        *ppiVar6 = var_48h[6];\n        ppuVar17 = stack0xffffffe8;\n        goto code_r0x00b9e920;\n    }\n    if (ppuVar9 == NULL) {\ncode_r0x00bd3f48:\n        if (var_20h == NULL) goto code_r0x00b9e93e;\ncode_r0x00b9e988:\n        ppuVar9 = var_1ch[7];\n        if (ppuVar9 == NULL) goto code_r0x00b9ea68;\n        ppuVar14 = ppuVar9[1];\n        if (var_20h < ppuVar9[1]) {\n            ppuVar14 = var_20h;\n        }\n        puVar8 = *ppuVar17;\n        puVar11 = *ppuVar9;\n        var_70h = ppuVar14;\n        while (var_70h != NULL) {\n            if (*puVar11 != *puVar8) {\n                if (*puVar8 <= *puVar11) goto code_r0x00b9e9e6;\n                goto code_r0x00b9e9cc;\n            }\n            puVar11 = puVar11 + 1;\n            puVar8 = puVar8 + 1;\n            var_70h = var_70h + -1;\n        }\n        if (ppuVar14 < var_20h) {\ncode_r0x00b9e9cc:\n            var_1ch[7] = ppuVar9[6];\n            ppuVar9[6] = *ppiVar6;\n            *ppiVar6 = ppuVar9;\n            if (ppuVar9[7] == NULL) goto code_r0x00b9ea68;\n        }\ncode_r0x00b9e9e6:\n        var_68h[7] = *ppiVar6;\n        var_68h = *ppiVar6;\n        *ppiVar6 = (*ppiVar6)[7];\n        ppuVar17 = stack0xffffffe8;\n        goto code_r0x00b9e920;\n    }\ncode_r0x00b9e93e:\n    if (var_20h < ppuVar9) {\n        puVar8 = *var_1ch;\n        puVar11 = *ppuVar17;\n        for (; ppuVar9 != NULL; ppuVar9 = ppuVar9 + -1) {\n            if (*puVar11 != *puVar8) {\n                bVar18 = *puVar11 < *puVar8;\n                goto code_r0x00b9e96e;\n            }\n            puVar11 = puVar11 + 1;\n            puVar8 = puVar8 + 1;\n        }\n    }\n    else {\n        puVar8 = *var_1ch;\n        puVar11 = *stack0xffffffe8;\n        ppuVar17 = var_20h;\n        if (var_20h != NULL) {\ncode_r0x00b9e953:\n            if (*puVar11 == *puVar8) goto code_r0x00b9e95b;\n            bVar18 = *puVar11 < *puVar8;\ncode_r0x00b9e96e:\n            iVar10 = (-bVar18 & 0xfffffffe) + 1;\n            goto code_r0x00b9e974;\n        }\n    }\ncode_r0x00b9e964:\n    iVar10 = 0;\ncode_r0x00b9e974:\n    ppuVar17 = stack0xffffffe8;\n    if (iVar10 < 0) goto code_r0x00b9ea15;\n    if (0 < iVar10) goto code_r0x00b9e988;\n    cVar3 = '\\x01';\ncode_r0x00b9ea68:\n    var_68h[7] = (*ppiVar6)[6];\n    var_48h[6] = (*ppiVar6)[7];\n    (*ppiVar6)[6] = *0xc57460;\n    (*ppiVar6)[7] = *0xc5745c;\n    if ((cVar3 != '\\0') && (piVar12 = *ppiVar6,  piVar12 != NULL)) {\n        ppiVar6 = piVar12[5];\n        var_54h = piVar12[4] & 0xff00U;\n        uVar4 = piVar12[4] & 0xff00U;\n        if (ppiVar6 != NULL) goto code_r0x00b9eaba;\n    }\ncode_r0x00b9ebe4:\n    ppuVar17 = stack0xffffffe8;\n    var_20h = *0xc57270;\n    if (*0xc57270 != NULL) {\n        var_5h._0_1_ = '\\0';\n        if ((*0xc57440 & 1) == 0) {\n            *0xc57440 = *0xc57440 | 1;\n            fcn.00b977c7();\n            fcn.00bb2f80(0xbcb80a);\n            var_20h = *0xc57270;\n        }\n        *0xc57460 = NULL;\n        *0xc5745c = NULL;\n        var_68h = 0xc57444;\n        var_48h = 0xc57444;\n        var_20h = *0xc57270;\ncode_r0x00b9ec28:\n        ppuVar9 = ppuVar17[1];\n        ppuVar14 = var_20h[1];\n        ppuVar17 = stack0xffffffe8;\n        *0xc57270 = var_20h;\n        if (ppuVar9 == NULL) {\n            if (ppuVar14 == NULL) goto code_r0x00bd3f8a;\n            goto code_r0x00b9f006;\n        }\n        if (ppuVar14 != NULL) {\ncode_r0x00b9ec3e:\n            if (ppuVar9 < ppuVar14) {\n                puVar8 = *var_20h;\n                puVar11 = *stack0xffffffe8;\n                for (; ppuVar14 != NULL; ppuVar14 = ppuVar14 + -1) {\n                    bVar18 = *puVar11 < *puVar8;\n                    if (*puVar11 != *puVar8) goto code_r0x00b9ed2c;\n                    puVar11 = puVar11 + 1;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            else {\n                puVar8 = *var_20h;\n                puVar11 = *stack0xffffffe8;\n                for (ppuVar14 = ppuVar9; ppuVar14 != NULL; ppuVar14 = ppuVar14 + -1) {\n                    bVar18 = *puVar11 < *puVar8;\n                    if (*puVar11 != *puVar8) goto code_r0x00b9ed2c;\n                    puVar11 = puVar11 + 1;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            iVar10 = 0;\n            goto code_r0x00b9ec6a;\n        }\ncode_r0x00bd3f8a:\n        if (ppuVar9 == NULL) goto code_r0x00b9ec3e;\n        goto code_r0x00b9f0a3;\n    }\ncode_r0x00b9f2ad:\n    ppiVar6 = NULL;\n    uVar4 = var_54h;\n    goto code_r0x00b9eaba;\ncode_r0x00b9e95b:\n    puVar11 = puVar11 + 1;\n    puVar8 = puVar8 + 1;\n    ppuVar17 = ppuVar17 + -1;\n    if (ppuVar17 == NULL) goto code_r0x00b9e964;\n    goto code_r0x00b9e953;\ncode_r0x00b9ed2c:\n    iVar10 = (-bVar18 & 0xfffffffe) + 1;\ncode_r0x00b9ec6a:\n    if (iVar10 < 0) {\ncode_r0x00b9f006:\n        ppuVar14 = var_20h[6];\n        var_1ch = var_20h + 6;\n        if (ppuVar14 == NULL) goto code_r0x00b9ec7c;\n        ppuVar15 = ppuVar14[1];\n        if (ppuVar15 < ppuVar9) {\n            ppuVar9 = ppuVar15;\n        }\n        puVar8 = *ppuVar14;\n        puVar11 = *stack0xffffffe8;\n        ppuVar13 = ppuVar9;\n        if (ppuVar9 != NULL) {\n            do {\n                if (*puVar11 != *puVar8) {\n                    if (*puVar8 <= *puVar11) goto code_r0x00b9f04b;\n                    goto code_r0x00b9f080;\n                }\n                puVar11 = puVar11 + 1;\n                puVar8 = puVar8 + 1;\n                ppuVar13 = ppuVar13 + -1;\n            } while (ppuVar13 != NULL);\n            ppuVar15 = ppuVar14[1];\n        }\n        if (ppuVar9 < ppuVar15) {\ncode_r0x00b9f080:\n            *var_1ch = ppuVar14[7];\n            ppuVar14[7] = *0xc57270;\n            *0xc57270 = ppuVar14;\n            if (ppuVar14[6] == NULL) goto code_r0x00b9ec7c;\n        }\ncode_r0x00b9f04b:\n        var_68h[6] = *0xc57270;\n        var_68h = *0xc57270;\n        var_20h = (*0xc57270)[6];\n        goto code_r0x00b9ec28;\n    }\n    if (0 < iVar10) {\ncode_r0x00b9f0a3:\n        var_70h = var_20h + 7;\n        ppuVar14 = *var_70h;\n        if (ppuVar14 == NULL) goto code_r0x00b9ec7c;\n        var_1ch = ppuVar14[1];\n        if (ppuVar9 < ppuVar14[1]) {\n            var_1ch = ppuVar9;\n        }\n        puVar8 = *stack0xffffffe8;\n        puVar11 = *ppuVar14;\n        for (ppuVar15 = var_1ch; ppuVar15 != NULL; ppuVar15 = ppuVar15 + -1) {\n            if (*puVar11 != *puVar8) {\n                if (*puVar11 < *puVar8) goto code_r0x00b9f0e8;\n                goto code_r0x00b9f10e;\n            }\n            puVar11 = puVar11 + 1;\n            puVar8 = puVar8 + 1;\n        }\n        if (var_1ch < ppuVar9) {\ncode_r0x00b9f0e8:\n            *var_70h = ppuVar14[6];\n            ppuVar14[6] = *0xc57270;\n            *0xc57270 = ppuVar14;\n            if (ppuVar14[7] == NULL) goto code_r0x00b9ec7c;\n        }\ncode_r0x00b9f10e:\n        var_48h[7] = *0xc57270;\n        var_48h = *0xc57270;\n        var_20h = (*0xc57270)[7];\n        goto code_r0x00b9ec28;\n    }\n    var_5h._0_1_ = '\\x01';\n    *0xc57270 = var_20h;\ncode_r0x00b9ec7c:\n    var_48h[7] = (*0xc57270)[6];\n    var_68h[6] = (*0xc57270)[7];\n    (*0xc57270)[6] = *0xc57460;\n    (*0xc57270)[7] = *0xc5745c;\n    if ((var_5h == '\\0') || (*0xc57270 == NULL)) goto code_r0x00b9f2ad;\n    ppiVar6 = (*0xc57270)[5];\n    uVar4 = (*0xc57270)[4] & 0xff00;\ncode_r0x00b9eaba:\n    var_48h = ppiVar6;\n    if (ppiVar6 != NULL) {\n        if ((uVar4 & 0x100) == 0) {\n            do {\n                iVar10 = *(arg_8h + 4);\n                iVar1 = *(*(iVar10 + var_ch * 4) + 8);\n                while (iVar1 == 0x4e) {\n                    if (ppiVar6[3] != 0x5) {\n                        if (ppiVar6[3] == 0xf) {\n                            var_78h = ppiVar6;\n                            iVar10 = fcn.00c0c8d7(arg_8h, &var_ch, arg_8h, 8);\n                            if (-1 < iVar10) {\n                                var_15h._0_1_ = '\\0';\n                                ppiVar6 = var_48h;\n                                goto code_r0x00b9ee9e;\n                            }\n                        }\n                        else {\n                            fcn.00bfa0b5(0x7c, *(*(*(arg_8h + 4) + var_ch * 4) + 10));\n                        }\n                        goto code_r0x00b9ebc1;\n                    }\n                    var_34h = NULL;\n                    var_2ch = NULL;\n                    var_28h = 1;\n                    var_50h = var_ch;\n                    var_78h = ppiVar6;\n                    var_48h = NULL;\n                    var_1ch = *(*(iVar10 + -4 + var_ch * 4) + 10);\n                    iVar1 = *(*(iVar10 + var_ch * 4) + 8);\n                    iVar16 = var_ch;\n                    while (iVar1 == 0x4e) {\n                        var_ch = iVar16 + 1;\n                        ppuVar17 = 0xffffffff;\n                        var_54h = *(*(iVar10 + 4 + iVar16 * 4) + 10);\n                        iVar16 = fcn.00b9a000(arg_8h, &var_ch, &var_34h, 0xffffffff);\n                        iVar10 = var_28h;\n                        piVar12 = var_34h;\n                        if (iVar16 < 0) goto code_r0x00bd4264;\n                        piVar7 = var_34h;\n                        if (var_28h == 1) goto code_r0x00b9edc2;\n                        if (9 < var_28h - 2U) goto code_r0x00b9edca;\n    // switch table (10 cases) at 0xbd46af\n                        switch(*((var_28h - 2U) * 4 + 0xbd46af)) {\n                        case 0xb9edca:\n                            goto code_r0x00b9edca;\n                        case 0xbd3fc9:\n                            cVar3 = fcn.00b995c1();\n                            if (cVar3 == '\\0') {\n                                piVar7 = fcn.00bb37ca(arg_8h_00);\n                                piVar12 = var_34h;\n                                iVar10 = var_28h;\n                            }\n                            else {\n                                fcn.00bafbfb(0x10);\n                                piVar7 = var_74h;\n                                piVar12 = var_34h;\n                                iVar10 = var_28h;\n                            }\n                            break;\n                        case 0xbd400c:\n                            piVar7 = fcn.00bcb5d0();\n                            piVar12 = var_34h;\n                            break;\n                        case 0xbd401c:\n                            piVar7 = var_34h[1];\n                            break;\n                        case 0xbd4027:\n                            if (*var_34h < 9) {\n                                fcn.00bf582b(&var_6ch);\n                                piVar7 = var_6ch;\n                                break;\n                            }\n                            goto code_r0x00b9edca;\n                        }\ncode_r0x00b9edc2:\n                        if (piVar7 < 0) {\n                            arg_8h_04 = 0x7b;\n                            goto code_r0x00bd4247;\n                        }\ncode_r0x00b9edca:\n                        if (*(*(*(arg_8h + 4) + var_ch * 4) + 8) != 0x4f) {\n                            arg_8h_04 = 0x7b;\n                            goto code_r0x00bd4247;\n                        }\n                        var_ch = var_ch + 1;\n                        if (iVar10 != 1) {\n    // switch table (10 cases) at 0xbd46d7\n                            switch(iVar10) {\n                            case 2:\n                            case 7:\n                                break;\n                            case 3:\n                                piVar12 = fcn.00bcb5d0();\n                                break;\n                            case 4:\n                                cVar3 = fcn.00b995c1();\n                                if (cVar3 == '\\0') {\n                                    piVar12 = fcn.00bb37ca(arg_8h_01);\n                                }\n                                else {\n                                    fcn.00bafbfb(0x10);\n                                    piVar12 = var_24h;\n                                }\n                                break;\n                            default:\ncode_r0x00bd40f8:\n                                piVar12 = NULL;\n                                break;\n                            case 9:\n                                piVar12 = piVar12 != '\\0';\n                                break;\n                            case 10:\n                                piVar12 = piVar12[1];\n                                break;\n                            case 0xb:\n                                if (8 < *piVar12) goto code_r0x00bd40f8;\n                                fcn.00bf582b(&var_84h);\n                                piVar12 = var_84h;\n                            }\n                        }\n                        iVar16 = var_ch;\n                        (&var_184h)[var_48h] = piVar12;\n                        iVar10 = *(arg_8h + 4);\n                        var_48h = var_48h + 1;\n                        iVar1 = *(*(iVar10 + iVar16 * 4) + 8);\n                    }\n                    if (ppiVar6[3] == 0x5) {\n                        piVar12 = *ppiVar6;\n                    }\n                    else {\n                        piVar12 = NULL;\n                    }\n                    iVar10 = 0;\n                    *(*piVar12 + 0x210) = 0;\n                    if (0 < var_48h) {\n                        do {\n                            iVar16 = *(*piVar12 + 0x210);\n                            if (iVar16 < 0x40) {\n                                *(*piVar12 + 0x110 + iVar16 * 4) = (&var_184h)[iVar10];\n                                *(*piVar12 + 0x210) = *(*piVar12 + 0x210) + 1;\n                            }\n                            iVar10 = iVar10 + 1;\n                        } while (iVar10 < var_48h);\n                    }\n                    ppiVar6 = fcn.00b98ea0(piVar12, 1, 0);\n                    var_48h = ppiVar6;\n                    if (ppiVar6 == NULL) {\n                        arg_8h_04 = 0x7a;\n                        ppuVar17 = var_1ch;\ncode_r0x00bd4247:\n                        fcn.00bfa0b5(arg_8h_04, ppuVar17);\n                        goto code_r0x00bd4264;\n                    }\n                    if (var_2ch != NULL) {\n                        fcn.00b97b3d(var_2ch);\n                        var_2ch = NULL;\n                    }\n                    piVar12 = var_34h;\n                    if ((var_28h < 5) || (10 < var_28h - 5U)) goto code_r0x00b9ee89;\n    // switch table (11 cases) at 0xbd46ff\n                    switch(*((var_28h - 5U) * 4 + 0xbd46ff)) {\n                    case 0xbd4124:\n                        if (var_34h != NULL) {\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_34h);\n                            piVar12 = var_34h;\n                            goto code_r0x00bd41b3;\n                        }\n                        break;\n                    case 0xbd413b:\n                        goto joined_r0x00bd41a5;\n                    case 0xbd414b:\n                        if (var_34h != NULL) {\n                            fcn.00b98e34(var_34h);\n                        }\n                        break;\n                    case 0xbd4161:\n                        fcn.00bb106c(var_34h[1]);\n                        piVar12 = var_34h;\n                        goto code_r0x00bd41b3;\n                    case 0xbd4174:\n                        if (var_34h != NULL) {\n                            fcn.00be73f0(var_34h);\n                        }\n                        break;\n                    case 0xbd418a:\n                        if (var_34h != NULL) {\n                            fcn.00be7405(var_34h);\n                        }\n                        break;\n                    case 0xbd41a0:\njoined_r0x00bd41a5:\n                        if (var_34h != NULL) {\n                            fcn.00b95a64();\ncode_r0x00bd41b3:\n                            fcn.00bb106c(piVar12);\n                        }\n                    }\ncode_r0x00b9ee89:\n                    var_28h = 1;\n                    var_34h = NULL;\n                    var_15h._0_1_ = '\\x01';\ncode_r0x00b9ee9e:\n                    iVar10 = *(arg_8h + 4);\n                    iVar1 = *(*(iVar10 + var_ch * 4) + 8);\n                }\n                iVar1 = *(*(*(arg_8h + 4) + var_ch * 4) + 8);\n                if ((iVar1 == 0x35) && (cVar3 = fcn.00be6543(),  cVar3 == '\\0')) {\n                    iVar10 = fcn.00c096db(0xa9, 0, 0xa9, 1);\n                    if (iVar10 < 0) {\n                        fcn.00bfa0b5(0xa9, *(*(*(arg_8h + 4) + var_ch * 4) + 10));\n                    }\n                    break;\n                }\n                piVar12 = ppiVar6[3];\n                if ((((piVar12 != 0x8) && (piVar12 != 0xc)) && (piVar12 != 0xf)) || ((iVar1 != 0x35 && (iVar1 != 0x47)))\n                   ) goto code_r0x00b9eb19;\n                iVar10 = fcn.00c0b851(arg_8h, arg_8h, ppiVar6);\n            } while (iVar10 == 1);\n        }\n        else {\n            fcn.00bfa0b5(0xa3, *(**(arg_8h + 4) + 10));\n        }\n        goto code_r0x00b9ebc1;\n    }\ncode_r0x00b9eb19:\n    iVar10 = *(*(arg_8h + 4) + var_ch * 4);\n    iVar1 = *(iVar10 + 8);\n    iVar16 = *(iVar10 + 8);\n    if (((iVar1 != 0x41) && (iVar1 != 0x52)) &&\n       ((iVar1 != 0x53 && (((iVar1 != 0x54 && (iVar1 != 0x55)) && (iVar1 != 0x56)))))) {\n        fcn.00bfa0b5(0x80, *(iVar10 + 10));\n        goto code_r0x00b9ebc1;\n    }\n    var_ch = var_ch + 1;\n    iVar10 = fcn.00b9a000(arg_8h, &var_ch, arg_8h, 0xffffffff);\n    if (iVar10 < 0) goto code_r0x00b9ebc1;\n    if (var_15h == '\\0') goto code_r0x00b9eb59;\n    iVar10 = *(arg_8h + 4);\n    var_44h = NULL;\n    var_3ch = 0;\n    var_38h = 1;\n    var_20h = NULL;\n    var_70h = *(*(iVar10 + -4 + var_50h * 4) + 10);\n    iVar1 = *(*(iVar10 + var_50h * 4) + 8);\n    iVar5 = var_50h;\n    while (iVar1 == 0x4e) {\n        var_54h = iVar5 + 1;\n        var_1ch = *(*(iVar10 + 4 + iVar5 * 4) + 10);\n        var_184h = arg_8h;\n        iVar5 = fcn.00b9a000(arg_8h, &var_54h, &var_44h, 0xffffffff);\n        iVar10 = var_38h;\n        piVar12 = var_44h;\n        if (iVar5 < 0) goto code_r0x00bd4264;\n        piVar7 = var_44h;\n        if (var_38h == 1) goto code_r0x00b9ef2b;\n        if (9 < var_38h - 2U) goto code_r0x00b9ef33;\n    // switch table (10 cases) at 0xbd472b\n        switch(*((var_38h - 2U) * 4 + 0xbd472b)) {\n        case 0xb9ef33:\n            goto code_r0x00b9ef33;\n        case 0xbd4319:\n            cVar3 = fcn.00b995c1();\n            if (cVar3 == '\\0') {\n                piVar7 = fcn.00bb37ca(arg_8h_02);\n                piVar12 = var_44h;\n                iVar10 = var_38h;\n            }\n            else {\n                fcn.00bafbfb(0x10);\n                piVar7 = var_84h;\n                piVar12 = var_44h;\n                iVar10 = var_38h;\n            }\n            break;\n        case 0xbd4362:\n            piVar7 = fcn.00bcb5d0();\n            piVar12 = var_44h;\n            break;\n        case 0xbd4372:\n            piVar7 = var_44h[1];\n            break;\n        case 0xbd437d:\n            if (*var_44h < 9) {\n                fcn.00bf582b(&var_4ch);\n                piVar7 = var_4ch;\n                break;\n            }\n            goto code_r0x00b9ef33;\n        }\ncode_r0x00b9ef2b:\n        if (piVar7 < 0) {\n            fcn.00bfa0b5(0x7b, var_1ch);\n            goto code_r0x00bd4264;\n        }\ncode_r0x00b9ef33:\n        if (*(*(*(arg_8h + 4) + var_54h * 4) + 8) != 0x4f) {\n            fcn.00bfa0b5(0x7b, *(*(*(arg_8h + 4) + -4 + var_54h * 4) + 10));\n            goto code_r0x00bd4264;\n        }\n        var_50h = var_54h + 1;\n        if (iVar10 != 1) {\n    // switch table (10 cases) at 0xbd4753\n            switch(iVar10) {\n            case 2:\n            case 7:\n                break;\n            case 3:\n                piVar12 = fcn.00bcb5d0();\n                break;\n            case 4:\n                cVar3 = fcn.00b995c1();\n                if (cVar3 == '\\0') {\n                    piVar12 = fcn.00bb37ca(arg_8h_03);\n                }\n                else {\n                    fcn.00bafbfb(0x10);\n                    piVar12 = var_6ch;\n                }\n                break;\n            default:\ncode_r0x00bd4448:\n                piVar12 = NULL;\n                break;\n            case 9:\n                piVar12 = piVar12 != '\\0';\n                break;\n            case 10:\n                piVar12 = piVar12[1];\n                break;\n            case 0xb:\n                if (8 < *piVar12) goto code_r0x00bd4448;\n                fcn.00bf582b(&var_2ch);\n                piVar12 = var_2ch;\n            }\n        }\n        iVar5 = var_50h;\n        (&var_184h)[var_20h] = piVar12;\n        var_20h = var_20h + 1;\n        iVar10 = *(arg_8h + 4);\n        iVar1 = *(*(iVar10 + iVar5 * 4) + 8);\n    }\n    if (var_78h[3] == 0x5) {\n        piVar12 = *var_78h;\n    }\n    else {\n        piVar12 = NULL;\n    }\n    *(*piVar12 + 0x210) = 0;\n    if (0 < var_20h) {\n        iVar10 = 0;\n        do {\n            iVar5 = *(*piVar12 + 0x210);\n            if (iVar5 < 0x40) {\n                *(*piVar12 + 0x110 + iVar5 * 4) = (&var_184h)[iVar10];\n                *(*piVar12 + 0x210) = *(*piVar12 + 0x210) + 1;\n            }\n            iVar10 = iVar10 + 1;\n        } while (iVar10 < var_20h);\n    }\n    ppiVar6 = fcn.00b98ea0(piVar12, 2, 0);\n    if (ppiVar6 == NULL) {\n        fcn.00bfa0b5(0x7a, var_70h);\ncode_r0x00bd4264:\n        fcn.00b99df0();\n        goto code_r0x00b9ebc1;\n    }\n    if (var_3ch != 0) {\n        fcn.00b97b3d(var_3ch);\n        var_3ch = 0;\n    }\n    piVar12 = var_44h;\n    if ((var_38h < 5) || (10 < var_38h - 5U)) goto code_r0x00b9eb59;\n    // switch table (11 cases) at 0xbd477b\n    switch(*((var_38h - 5U) * 4 + 0xbd477b)) {\n    case 0xbd44a4:\n        if (var_44h != NULL) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h);\n            piVar12 = var_44h;\n            goto code_r0x00bd4533;\n        }\n        break;\n    case 0xbd44bb:\n        goto joined_r0x00bd4525;\n    case 0xbd44cb:\n        if (var_44h != NULL) {\n            fcn.00b98e34(var_44h);\n        }\n        break;\n    case 0xbd44e1:\n        fcn.00bb106c(var_44h[1]);\n        piVar12 = var_44h;\n        goto code_r0x00bd4533;\n    case 0xbd44f4:\n        if (var_44h != NULL) {\n            fcn.00be73f0(var_44h);\n        }\n        break;\n    case 0xbd450a:\n        if (var_44h != NULL) {\n            fcn.00be7405(var_44h);\n        }\n        break;\n    case 0xbd4520:\njoined_r0x00bd4525:\n        if (var_44h != NULL) {\n            fcn.00b95a64();\ncode_r0x00bd4533:\n            fcn.00bb106c(piVar12);\n        }\n    }\ncode_r0x00b9eb59:\n    iVar10 = (*(arg_8h + 4))[var_ch];\n    if (*(iVar10 + 8) != 0x7f) {\n        fcn.00bfa0b5(0x72, *(iVar10 + 10));\n        goto code_r0x00b9ebc1;\n    }\n    if (ppiVar6 == NULL) {\n        if ((*(var_10h + 0xff) == '\\0') && (iVar16 == 0x41)) {\n            fcn.00b98620(stack0xffffffe8, &var_64h, 0, 0);\n        }\n        else {\n            fcn.00bfa0b5(0x79, *(**(arg_8h + 4) + 10));\n        }\n        goto code_r0x00b9ebc1;\n    }\n    if (iVar16 != 0x41) {\n        if (iVar16 - 0x52U < 5) {\n    // switch table (5 cases) at 0xb9f328\n            switch(*((iVar16 - 0x52U) * 4 + 0xb9f328)) {\n            case 0xb9f19f:\n                fcn.00b99700(&var_64h);\n                break;\n            case 0xbd4569:\n                fcn.00b99687(&var_64h);\n                break;\n            case 0xbd4579:\n                fcn.00be65b5(&var_64h);\n                break;\n            case 0xbd4589:\n                fcn.00b9963c(&var_64h);\n                break;\n            case 0xbd4599:\n                fcn.00be655c(&var_64h);\n            }\n        }\n        goto code_r0x00b9ebc1;\n    }\n    if (ppiVar6 == &var_64h) goto code_r0x00b9ebc1;\n    if ((ppiVar6[3] == 0x4) && (var_58h == 4)) {\n        if (ppiVar6[2] != var_5ch) {\n            fcn.00b980d7(var_5ch);\n        }\n        goto code_r0x00b9ebc1;\n    }\n    piVar12 = ppiVar6[2];\n    if (piVar12 != NULL) {\n        *piVar12[3] = *piVar12[3] + -1;\n        if (*piVar12[3] == 0) {\n            fcn.00bb106c(*piVar12);\n            fcn.00bb106c(piVar12[3]);\n        }\n        fcn.00bb106c(piVar12);\n        ppiVar6[2] = NULL;\n    }\n    if (ppiVar6[3] < 5) goto code_r0x00b9eba9;\n    // switch table (11 cases) at 0xb9f368\n    switch(ppiVar6[3]) {\n    case 0x5:\n        if (*ppiVar6 != NULL) {\n            fcn.00b98e34();\n        }\n        break;\n    case 0x8:\n        if (*ppiVar6 != NULL) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(*ppiVar6);\n            piVar12 = *ppiVar6;\n            goto code_r0x00bd461a;\n        }\n        break;\n    case 0xa:\n        piVar12 = *ppiVar6;\n        goto joined_r0x00bd460c;\n    case 0xb:\n        fcn.00bb106c((*ppiVar6)[1]);\n        piVar12 = *ppiVar6;\n        goto code_r0x00bd461a;\n    case 0xc:\n        if (*ppiVar6 != NULL) {\n            fcn.00be73f0();\n        }\n        break;\n    case 0xd:\n    case 0xe:\n        piVar12 = *ppiVar6;\njoined_r0x00bd460c:\n        if (piVar12 != NULL) {\n            fcn.00b95a64();\ncode_r0x00bd461a:\n            fcn.00bb106c(piVar12);\n        }\n        break;\n    case 0xf:\n        if (*ppiVar6 != NULL) {\n            fcn.00be7405();\n        }\n    }\ncode_r0x00b9eba9:\n    ppiVar6[3] = 0x1;\n    *ppiVar6 = NULL;\n    fcn.00b99ac0(&var_64h);\ncode_r0x00b9ebc1:\n    piVar12 = var_5ch;\n    if (var_5ch != NULL) {\n        *var_5ch[3] = *var_5ch[3] + -1;\n        if (*var_5ch[3] == 0) {\n            fcn.00bb106c(*var_5ch);\n            fcn.00bb106c(piVar12[3]);\n        }\n        fcn.00bb106c(piVar12);\n        var_5ch = NULL;\n    }\n    piVar12 = var_64h;\n    if (var_58h < 5) {\n        return;\n    }\n    if (10 < var_58h - 5U) {\n        return;\n    }\n    // switch table (11 cases) at 0xb9f33c\n    switch(*((var_58h - 5U) * 4 + 0xb9f33c)) {\n    case 0xb9f26b:\n        if (var_64h != NULL) {\n            fcn.00b98e34(var_64h);\n            return;\n        }\n        break;\n    case 0xbd4627:\n        if (var_64h == NULL) {\n            return;\n        }\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_64h);\n        piVar12 = var_64h;\n        goto code_r0x00bd46a0;\n    case 0xbd463e:\n        goto joined_r0x00bd4692;\n    case 0xbd464e:\n        fcn.00bb106c(var_64h[1]);\n        piVar12 = var_64h;\n        goto code_r0x00bd46a0;\n    case 0xbd4661:\n        if (var_64h != NULL) {\n            fcn.00be73f0(var_64h);\n        }\n        break;\n    case 0xbd4677:\n        if (var_64h != NULL) {\n            fcn.00be7405(var_64h);\n        }\n        break;\n    case 0xbd468d:\njoined_r0x00bd4692:\n        if (var_64h == NULL) {\n            return;\n        }\n        fcn.00b95a64();\ncode_r0x00bd46a0:\n        fcn.00bb106c(piVar12);\n    }\n    return;\n}\n",
        "token_count": 10586
    },
    "00b9f3f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl\nfcn.00b9f3f0(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t **arg_14h, int32_t *arg_18h, uint arg_1ch)\n\n{\n    int32_t **ppiVar1;\n    int16_t iVar2;\n    int32_t **arg_20h;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint *var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_14h = *arg_14h + 1;\n    piVar6 = *arg_14h;\n    iVar3 = *(arg_10h + 4);\n    if (*(*(iVar3 + piVar6 * 4) + 8) != 0x47) {\n        iVar3 = *(iVar3 + piVar6 * 4 + -4);\ncode_r0x00bd47c5:\n        fcn.00bfa0b5(0x6f, *(iVar3 + 10));\n        return 0xffffffff;\n    }\n    ppiVar1 = piVar6 + 1;\n    iVar7 = 0;\n    arg_20h = ppiVar1;\n    do {\n        while( true ) {\n            *arg_14h = arg_20h;\n            iVar2 = *(*(iVar3 + arg_20h * 4) + 8);\n            if (0x46 < iVar2) break;\ncode_r0x00b9f44c:\n            arg_20h = arg_20h + 1;\n        }\n        if (iVar2 == 0x47) {\n            iVar7 = iVar7 + 1;\n            goto code_r0x00b9f44c;\n        }\n        if (iVar2 != 0x48) {\n            if (iVar2 != 0x7f) goto code_r0x00b9f44c;\n            iVar3 = *(iVar3 + -4 + arg_20h * 4);\n            arg_14h = ppiVar1;\n            goto code_r0x00bd47c5;\n        }\n        if (iVar7 == 0) break;\n        iVar7 = iVar7 + -1;\n        arg_20h = arg_20h + 1;\n    } while( true );\n    *arg_18h = 0;\n    *arg_14h = arg_20h + 1;\n    arg_14h = ppiVar1;\n    piVar6 = arg_18h;\n    do {\n        if (arg_20h <= arg_14h) {\ncode_r0x00b9f53d:\n            if (arg_8h != '\\0') {\n                fcn.00c0a5ee(arg_ch, piVar6);\n            }\n            return 0;\n        }\n        var_18h = NULL;\n        if (*(arg_ch + 8) == *(arg_ch + 0xc)) {\n            uVar4 = *(arg_ch + 0xc) * 2;\n            if (uVar4 < 8) {\n                uVar4 = 8;\n            }\n            *(arg_ch + 0xc) = uVar4;\n            uVar5 = fcn.00bb0ff6(-(uVar4 * 4 >> 0x20 != 0) | uVar4 * 4);\n            if ((*(arg_ch + 4) != 0) && (*(arg_ch + 8) != 0)) {\n                fcn.00bb1080(uVar5, *(arg_ch + 4), *(arg_ch + 8) << 2);\n                fcn.00bb106c(*(arg_ch + 4));\n            }\n            *(arg_ch + 4) = uVar5;\n        }\n        iVar3 = fcn.00bb0ff6(0x10);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            *(iVar3 + 8) = 0;\n            fcn.00b99ac0(&var_18h);\n        }\n        *(*(arg_ch + 4) + *(arg_ch + 8) * 4) = iVar3;\n        *(arg_ch + 8) = *(arg_ch + 8) + 1;\n        if (arg_1ch == '\\0') {\n            var_18h = &arg_14h;\n            iVar3 = fcn.00b9a000(arg_10h, var_18h, *(*(arg_ch + 4) + -4 + *(arg_ch + 8) * 4), arg_20h);\n            piVar6 = arg_18h;\n        }\n        else {\n            var_18h = NULL;\n            iVar3 = fcn.00b9f803(arg_10h, &arg_14h, *(*(arg_ch + 4) + -4 + *(arg_ch + 8) * 4), 0x100, 0, 0, arg_20h);\n            piVar6 = arg_18h;\n        }\n        arg_18h = piVar6;\n        if (iVar3 < 0) {\ncode_r0x00bd47ea:\n            fcn.00b99a20();\n            return 0xffffffff;\n        }\n        *piVar6 = *piVar6 + 1;\n        if (arg_14h == arg_20h) {\n            fcn.00b99a20();\n            goto code_r0x00b9f53d;\n        }\n        if ((*(*(*(arg_10h + 4) + arg_14h * 4) + 8) != 0x40) || (arg_14h + 1 == arg_20h)) {\n            fcn.00bfa0b5(0x6f, *(*(*(arg_10h + 4) + arg_14h * 4) + 10));\n            goto code_r0x00bd47ea;\n        }\n        arg_14h = arg_14h + 1;\n        fcn.00b99a20();\n    } while( true );\n}\n",
        "token_count": 1429
    },
    "00b9f5c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b9f5c0(uint arg_8h, int32_t arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    uint32_t *arg_ch_00;\n    uint uVar5;\n    uint32_t auStack64 [2];\n    int32_t iStack56;\n    int32_t *piStack52;\n    int32_t *piStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack40 = 0xc1fb84;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = 0;\n    piVar1 = *(*(arg_ch + 4) + *arg_10h * 4);\n    iVar3 = *piVar1;\n    uStack44 = *(piVar1 + 10);\n    iStack56 = iVar3;\n    piStack48 = in_ECX;\n    if ((*0xc57464 & 1) == 0) {\n        *0xc57464 = *0xc57464 | 1;\n        fcn.00b97f41(L\"CALL\");\n        *0xc57468 = (**(**0xc57294 + 4))();\n        fcn.00b95a64();\n    }\n    if (iVar3 == *0xc57468) {\n        uVar5 = fcn.00c0bf80(arg_ch, arg_10h, arg_14h);\n        goto code_r0x00b9f753;\n    }\n    piStack52 = in_ECX + 0x11c;\n    iVar2 = fcn.00ba9090(iVar3);\n    auStack64[0] = auStack64[0] & 0xffffff00 | *(iVar2 + 0x20);\n    arg_ch_00 = &uStack44;\n    iVar2 = fcn.00b9f3f0(arg_8h, arg_ch_00, arg_ch, arg_10h, auStack64, auStack64[0]);\n    if (-1 < iVar2) {\n        iVar2 = fcn.00ba9090(iVar3);\n        if (*(iVar2 + 0x18) <= arg_ch) {\n            iVar3 = fcn.00ba9090(iVar3);\n            if (arg_ch_00 <= *(iVar3 + 0x1c)) {\n                fcn.00b99a20();\n                arg_14h[3] = 1;\n                *arg_14h = 1;\n                iVar3 = *(*in_ECX + 4);\n                iVar2 = *(iVar3 + 8 + in_ECX);\n                if (*(in_ECX + iVar3 + 0xd) != '\\0') {\n                    iVar2 = *(iVar2 + 0x38);\n                }\n                *(iVar2 + 0x14) = 0;\n                iVar2 = *(in_ECX + iVar3 + 8);\n                if (*(in_ECX + iVar3 + 0xd) != '\\0') {\n                    iVar2 = *(iVar2 + 0x38);\n                }\n                *(iVar2 + 0x18) = 0;\n                iVar3 = *(*in_ECX + 4);\n                if (*(in_ECX + iVar3 + 0xd) == '\\0') {\n                    iVar2 = *(in_ECX + iVar3 + 8);\n                }\n                else {\n                    iVar2 = *(*(in_ECX + iVar3 + 8) + 0x38);\n                }\n                fcn.00b99a20();\n                *(iVar2 + 0x2c) = 1;\n                *(iVar2 + 0x20) = 0;\n                iVar2 = *(in_ECX + iVar3 + 8);\n                if (*(in_ECX + iVar3 + 0xd) != '\\0') {\n                    iVar2 = *(iVar2 + 0x38);\n                }\n                *(iVar2 + 0x30) = 0;\n                iVar3 = fcn.00ba9090(arg_ch);\n                iVar3 = (**(iVar3 + 0xc))(&stack0xffffffb0, arg_14h);\n                if (-1 < iVar3) {\n                    uVar5 = 0;\n                    goto code_r0x00b9f753;\n                }\n                goto code_r0x00bd4885;\n            }\n        }\n        if (arg_8h == '\\0') {\n            fcn.00bfa0b5(0x70, iStack56);\n        }\n        else {\n            *arg_10h = *arg_10h + -2;\n        }\n    }\ncode_r0x00bd4885:\n    uVar5 = 0xffffffff;\ncode_r0x00b9f753:\n    uVar4 = 0;\n    piStack52 = 0xc1fb84;\n    if (uStack44 != 0) {\n        do {\n            iVar3 = piStack48[uVar4];\n            if (iVar3 != 0) {\n                fcn.00b99df0();\n                fcn.00bb106c(iVar3);\n            }\n            piStack48[uVar4] = 0;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < uStack44);\n    }\n    uStack44 = 0;\n    fcn.00bb106c(piStack48);\n    return uVar5;\n}\n",
        "token_count": 1240
    },
    "00b9f803": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00b9f803(uint32_t arg_8h, int32_t *arg_ch, int32_t **arg_10h, uint32_t arg_14h, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    uint32_t arg_8h_00;\n    int32_t *arg_ch_00;\n    int32_t **ppiVar3;\n    char cVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t extraout_EDX;\n    uint in_stack_ffffffc4;\n    int32_t in_stack_ffffffc8;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = arg_ch;\n    arg_8h_00 = arg_8h;\n    iVar7 = *arg_ch;\n    puVar2 = *(*(arg_8h + 4) + iVar7 * 4);\n    if (*(puVar2 + 2) == 0x33) {\n        arg_8h = 0;\n        piVar5 = fcn.00b9859a(*puVar2, &arg_8h, 0);\n        arg_ch = piVar5;\n        if (piVar5 == NULL) {\n            fcn.00b99fbd(**(*(arg_8h_00 + 4) + *arg_ch_00 * 4));\n            goto code_r0x00bd48d4;\n        }\n        if (((arg_8h & 0x100) == 0) || ((arg_14h & 0x100) != 0)) {\n            *arg_ch_00 = *arg_ch_00 + 1;\n            iVar6 = *arg_ch_00;\n            if ((piVar5[3] == 5) && (*(*(*(arg_8h_00 + 4) + iVar6 * 4) + 8) == 0x4e)) {\n                iVar6 = fcn.00be677b(arg_8h_00, arg_ch_00, &arg_ch, 4);\n                piVar5 = arg_ch;\n                if (iVar6 < 0) {\n                    return -1;\n                }\n            }\n            else {\n                if ((piVar5[3] == 0xf) && (*(*(*(arg_8h_00 + 4) + iVar6 * 4) + 8) == 0x4e)) {\n                    iVar6 = fcn.00c0c8d7(arg_8h_00, arg_ch_00, &arg_ch, 0x10);\n                }\n                else {\n                    if ((piVar5[3] != 0xf) || (*(*(*(arg_8h_00 + 4) + iVar6 * 4) + 8) != 0x35)) {\n                        cVar4 = fcn.00b993dd();\n                        if ((cVar4 != '\\0') && (*(*(*(arg_8h_00 + 4) + extraout_EDX * 4) + 8) == 0x35))\n                        goto code_r0x00bd49aa;\n                        goto code_r0x00b9f89b;\n                    }\n                    iVar6 = fcn.00c0c865(arg_8h_00, arg_ch_00, &arg_ch);\n                }\n                if (iVar6 < 0) {\n                    return -1;\n                }\n                piVar5 = arg_ch;\n                if (arg_ch == NULL) goto code_r0x00bd49aa;\n            }\ncode_r0x00b9f89b:\n            ppiVar3 = arg_10h;\n            iVar1 = *(*(*(arg_8h_00 + 4) + *arg_ch_00 * 4) + 8);\n            if (((iVar1 == 0x48) || (iVar1 == 0x7f)) || (iVar1 == 0x40)) {\n                fcn.00b99a20();\n                ppiVar3[3] = 0x6;\n                *ppiVar3 = piVar5;\n                return 0;\n            }\n        }\n        else if (arg_1ch == '\\0') goto code_r0x00bd48d4;\n    }\ncode_r0x00bd49aa:\n    *arg_ch_00 = iVar7;\n    if (arg_18h == '\\0') {\n        iVar7 = fcn.00b9a000(arg_8h_00, arg_ch_00, arg_10h, arg_20h);\n        return (-1 < iVar7) - 1;\n    }\n    in_stack_ffffffc8 = *(*(*(arg_8h_00 + 4) + iVar7 * 4) + 10);\n    in_stack_ffffffc4 = 0x91;\ncode_r0x00bd48d4:\n    fcn.00bfa0b5(in_stack_ffffffc4, in_stack_ffffffc8);\n    return -1;\n}\n",
        "token_count": 1124
    },
    "00b9fbbd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b9fbbd(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    char16_t *arg_8h;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t var_4h;\n    \n    piVar1 = param_1 + -0x48c;\n    *(*(*piVar1 + 4) + -0x48c + param_1) = 0xc21d34;\n    *(*(*piVar1 + 4) + -0x490 + param_1) = *(*piVar1 + 4) + -0x48c;\n    var_4h = param_1;\n    if (*(param_1 + -0x3a4) != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(*(param_1 + -0x3a4));\n    }\n    uVar4 = 0;\n    arg_8h = L\"close all\";\n    (*_sym.imp.WINMM.dll_mciSendStringW)(L\"close all\", 0, 0, 0);\n    if (*(param_1 + -0x2c4) != 0) {\n        do {\n            puVar6 = **(*(param_1 + -0x2c8) + uVar4 * 4);\n            if (puVar6 != NULL) {\n                uVar5 = *puVar6;\n                (*_sym.imp.USER32.dll_UnregisterHotKey)(*0xc562ac, uVar5);\n                puVar6 = **(*(param_1 + -0x2c8) + uVar4 * 4);\n                if (puVar6 != NULL) {\n                    fcn.00bb0de1(uVar5, puVar6);\n                    arg_8h = puVar6;\n                }\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + -0x2c4));\n    }\n    uVar4 = 0;\n    if (*(param_1 + -0x2f4) != 0) {\n        do {\n            piVar2 = **(*(param_1 + -0x2f8) + uVar4 * 4);\n            if (piVar2 != NULL) {\n                if (*piVar2 == 0) {\n                    fcn.00b95dcf();\n                }\n                else {\n                    (*_sym.imp.KERNEL32.dll_FindClose)(piVar2[2]);\n                }\n                iVar3 = **(*(param_1 + -0x2f8) + uVar4 * 4);\n                if (iVar3 != 0) {\n                    fcn.00bf9e34(iVar3);\n                }\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + -0x2f4));\n    }\n    fcn.00ba12ad();\n    uVar4 = 0;\n    if (*(param_1 + -0x2e4) != 0) {\n        do {\n            piVar2 = *(*(param_1 + -0x2e8) + uVar4 * 4);\n            if (*piVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(*piVar2);\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + -0x2e4));\n    }\n    uVar4 = 0;\n    if (*(param_1 + -0x2d4) != 0) {\n        do {\n            iVar3 = **(*(param_1 + -0x2d8) + uVar4 * 4);\n            if (iVar3 != 0) {\n                uVar5 = 0x8000;\n                (*_sym.imp.KERNEL32.dll_VirtualFree)(*(iVar3 + 0x10), 0, 0x8000);\n                puVar6 = **(*(param_1 + -0x2d8) + uVar4 * 4);\n                if (puVar6 != NULL) {\n                    fcn.00bf9e8e(uVar5, puVar6);\n                    arg_8h = puVar6;\n                }\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + -0x2d4));\n    }\n    fcn.00b99a20();\n    *(param_1 + -0x2b0) = 1;\n    *(param_1 + -700) = 0;\n    if (*(*(*piVar1 + 4) + param_1 + -0x488) != 0) {\n        var_4h = 0;\n        do {\n            arg_8h = &var_4h;\n            fcn.00baff13(arg_8h);\n            fcn.00baffa8();\n        } while (*(*(*piVar1 + 4) + param_1 + -0x488) != 0);\n    }\n    (*_sym.imp.ole32.dll_OleUninitialize)();\n    puVar6 = *(param_1 + -0x24);\n    if (puVar6 != NULL) {\n        piVar1 = puVar6 + 1;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            (***puVar6)(1);\n        }\n    }\n    puVar6 = *(param_1 + -0x30);\n    while (puVar7 = puVar6,  puVar7 != NULL) {\n        puVar6 = puVar7[1];\n        fcn.00bf9e68();\n        arg_8h = puVar7;\n    }\n    *(param_1 + -0x28) = 0;\n    puVar6 = *(param_1 + -0x40);\n    while (puVar7 = puVar6,  puVar7 != NULL) {\n        puVar6 = puVar7[1];\n        fcn.00bb0acc();\n        arg_8h = puVar7;\n    }\n    *(param_1 + -0x38) = 0;\n    fcn.00b95a64(arg_8h);\n    fcn.00ba61fe();\n    fcn.00ba6181();\n    fcn.00ba608e();\n    fcn.00b95a64();\n    fcn.00b99a20();\n    fcn.00bb0999();\n    fcn.00bb0b5f();\n    fcn.00bb0b5f();\n    fcn.00bb0b5f();\n    puVar6 = *(param_1 + -0x304);\n    while (puVar7 = puVar6,  puVar7 != NULL) {\n        puVar6 = puVar7[4];\n        fcn.00becf23();\n        arg_8h = puVar7;\n    }\n    fcn.00b93569(arg_8h);\n    puVar6 = *(param_1 + -800);\n    while (puVar7 = puVar6,  puVar7 != NULL) {\n        puVar6 = puVar7[4];\n        fcn.00bafbe6();\n        arg_8h = puVar7;\n    }\n    puVar6 = *(param_1 + -0x32c);\n    while (puVar7 = puVar6,  puVar7 != NULL) {\n        puVar6 = puVar7[0xc];\n        fcn.00be6b8e();\n        arg_8h = puVar7;\n    }\n    fcn.00b95a64(arg_8h);\n    fcn.00b98408();\n    puVar6 = *(param_1 + -0x364);\n    while (puVar7 = puVar6,  puVar7 != NULL) {\n        puVar6 = puVar7[1];\n        fcn.00bf9e4c();\n        arg_8h = puVar7;\n    }\n    *(param_1 + -0x35c) = 0;\n    puVar6 = *(param_1 + -0x370);\n    while (puVar7 = puVar6,  puVar7 != NULL) {\n        puVar6 = puVar7[1];\n        fcn.00bf9e4c();\n        arg_8h = puVar7;\n    }\n    *(param_1 + -0x368) = 0;\n    fcn.00b95a64(arg_8h);\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00bb01a9();\n    return;\n}\n",
        "token_count": 1952
    },
    "00ba12fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00ba179e)\n// WARNING: Removing unreachable block (ram,0x00ba1509)\n// WARNING: Removing unreachable block (ram,0x00bd61c9)\n// WARNING: Removing unreachable block (ram,0x00bd62cf)\n// WARNING: Removing unreachable block (ram,0x00bd6223)\n// WARNING: Removing unreachable block (ram,0x00bd6255)\n// WARNING: Removing unreachable block (ram,0x00ba1754)\n// WARNING: Removing unreachable block (ram,0x00ba15dc)\n// WARNING: Removing unreachable block (ram,0x00bd6277)\n\nuint fcn.00ba12fe(void)\n\n{\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    uint arg_10h;\n    int32_t **ppiVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint32_t arg_8h;\n    uint32_t uVar9;\n    uint uVar10;\n    bool bVar11;\n    ulong uVar12;\n    uint arg_8h_00;\n    uint *arg_8h_01;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 1;\n    var_18h = 0;\n    var_1ch = 0;\n    var_2ch = 0;\n    var_8h = 0;\n    var_4h = 0;\n    var_14h = 0;\n    var_20h = 0;\n    var_24h = 0;\n    arg_8h = 0;\n    iVar3 = var_ch;\ncode_r0x00ba13ae:\n    do {\n        var_ch = iVar3;\n        uVar12 = fcn.00b971c8(var_ch);\n        iVar5 = uVar12;\n        uVar10 = 0xffffffff;\n        iVar3 = var_ch + 1;\n        if (iVar5 == 0) {\n            var_ch = iVar3;\n            iVar3 = fcn.00b9cd50(0, var_14h, arg_10h, uVar12 >> 0x20, var_1ch, var_20h, var_18h, var_24h);\n            if (-1 < iVar3) {\n                uVar10 = 0;\n            }\n            goto code_r0x00ba1668;\n        }\n        *0xc56404 = var_ch;\n        var_30h = 0;\n        var_28h = 0;\n        piVar7 = **(iVar5 + 4);\n        uVar2 = *(piVar7 + 2);\n        var_10h = uVar2;\n        ppiVar6 = *(iVar5 + 4);\n        if (uVar2 != 0x7f) {\n            do {\n                iVar8 = var_28h;\n                ppiVar6 = ppiVar6 + 1;\n                var_28h = iVar8 + 1;\n            } while (*(*ppiVar6 + 2) != 0x7f);\n            ppiVar6 = *(iVar5 + 4);\n            piVar7 = *ppiVar6;\n            if (var_28h != 0) {\n                var_28h = iVar8;\n            }\n        }\n        arg_8h_01 = 0x7f;\n        uVar10 = 0xffffffff;\n    } while (uVar2 != 0);\n    iVar8 = *piVar7;\n    if (iVar8 < 0x14) {\n        uVar9 = arg_8h;\n        if (0x11 < iVar8) {\ncode_r0x00ba171e:\n            var_ch = iVar3;\n            arg_8h = uVar9;\n            iVar3 = var_ch;\n            if (((var_14h == 0) && (var_8h == 0)) && (var_4h == 0)) {\n                arg_8h_00 = 0x96;\n                goto code_r0x00bd6348;\n            }\n            goto code_r0x00ba13ae;\n        }\n    // switch table (11 cases) at 0xba17e2\n        switch(iVar8) {\n        case 4:\n            ppiVar4 = *(iVar5 + 4);\n            iVar8 = 0;\n            while( true ) {\n                arg_8h_01 = 0x7f;\n                if ((*(*(ppiVar4 + iVar8) + 2) == 0) && (**(ppiVar4 + iVar8) == 5)) break;\n                var_30h = var_30h + 1;\n                iVar8 = var_30h * 4;\n                ppiVar1 = ppiVar6 + var_30h;\n                ppiVar4 = *(iVar5 + 4);\n                ppiVar6 = ppiVar4;\n                if (*(*ppiVar1 + 2) == 0x7f) {\n                    arg_8h_01 = 0xffffffff;\n                    arg_8h_00 = 0xa1;\n                    var_ch = iVar3;\n                    goto code_r0x00bd6348;\n                }\n            }\n            var_ch = iVar3;\n            if ((*(ppiVar6[var_28h] + 2) == 0) && (*ppiVar6[var_28h] == 5)) {\n                var_18h = var_18h + 1;\n                arg_8h_01 = &var_10h;\n                uVar9 = arg_8h + 1;\n                var_10h = arg_8h;\n                fcn.00bb00a4(arg_8h_01);\n            }\n            piVar7 = *(*(iVar5 + 4) + 4 + var_30h * 4);\n            arg_8h = uVar9;\n            iVar3 = var_ch;\n            if (*(piVar7 + 2) == 0) {\n                if (0x11 < *piVar7) {\n                    if (*piVar7 < 0x14) goto code_r0x00ba171e;\n                    if ((0x18 < *piVar7) && ((*piVar7 < 0x1f || ((0x21 < *piVar7 && (*piVar7 < 0x24))))))\n                    goto code_r0x00ba13ae;\n                }\n                arg_8h_01 = *(*(*(iVar5 + 4) + 4 + var_30h * 4) + 10);\n                arg_8h_00 = 0x9f;\n                goto code_r0x00bd6348;\n            }\n            goto code_r0x00ba13ae;\n        case 5:\n            arg_8h_01 = 0xffffffff;\n            arg_8h_00 = 0x81;\n            var_ch = iVar3;\n            goto code_r0x00bd6348;\n        case 6:\n            if (*(ppiVar6[1] + 2) == 0x7f) goto code_r0x00ba16e3;\n            break;\n        case 7:\ncode_r0x00ba16e3:\n            if (var_18h == 0) {\n                arg_8h_01 = 0xffffffff;\n                arg_8h_00 = 0x74;\n                var_ch = iVar3;\n                goto code_r0x00bd6348;\n            }\n            goto code_r0x00ba13ae;\n        case 8:\n            if (*(ppiVar6[1] + 2) == 0x7f) {\n                var_18h = var_18h + -1;\n                *0xc56404 = var_ch;\n                if ((var_18h < 0) || (bVar11 = arg_8h - 1 != arg_8h,  arg_8h = arg_8h - 1,  bVar11)) {\n                    arg_8h_01 = 0xffffffff;\n                    arg_8h_00 = 0x75;\n                    var_ch = iVar3;\n                    goto code_r0x00bd6348;\n                }\n                goto code_r0x00ba13ae;\n            }\n            break;\n        case 9:\n            var_8h = var_8h + 1;\n            goto code_r0x00ba14cc;\n        case 10:\n            if (*(ppiVar6[1] + 2) == 0x7f) {\n                var_8h = var_8h + -1;\n                *0xc56404 = var_ch;\n                if ((var_8h < 0) || (bVar11 = arg_8h - 1 != arg_8h,  arg_8h = arg_8h - 1,  bVar11)) {\n                    arg_8h_01 = 0xffffffff;\n                    arg_8h_00 = 0x78;\n                    var_ch = iVar3;\n                    goto code_r0x00bd6348;\n                }\n                goto code_r0x00ba13ae;\n            }\n            break;\n        case 0xb:\n            if (*(ppiVar6[1] + 2) == 0x7f) {\n                var_14h = var_14h + 1;\n                goto code_r0x00ba14cc;\n            }\n            break;\n        case 0xc:\n            var_14h = var_14h + -1;\n            *0xc56404 = var_ch;\n            if ((var_14h < 0) || (bVar11 = arg_8h - 1 != arg_8h,  arg_8h = arg_8h - 1,  bVar11)) {\n                arg_8h_01 = 0xffffffff;\n                arg_8h_00 = 0x93;\n                var_ch = iVar3;\n                goto code_r0x00bd6348;\n            }\n            goto code_r0x00ba13ae;\n        case 0xd:\n            var_4h = var_4h + 1;\ncode_r0x00ba14cc:\n            var_10h = arg_8h;\n            var_ch = iVar3;\n            fcn.00bb00a4(&var_10h);\n            arg_8h = arg_8h + 1;\n            iVar3 = var_ch;\n            goto code_r0x00ba13ae;\n        case 0xe:\n            if (*(ppiVar6[1] + 2) == 0x7f) {\n                var_4h = var_4h + -1;\n                *0xc56404 = var_ch;\n                if ((var_4h < 0) || (bVar11 = arg_8h - 1 != arg_8h,  arg_8h = arg_8h - 1,  bVar11)) {\n                    arg_8h_01 = 0xffffffff;\n                    arg_8h_00 = 0x95;\n                    var_ch = iVar3;\n                    goto code_r0x00bd6348;\n                }\n            }\n            break;\n        default:\n            goto code_r0x00ba13ae;\n        }\n    }\n    else {\n        if (iVar8 < 0x21) {\n            if (iVar8 == 0x20) {\ncode_r0x00ba157d:\n                var_2ch = var_2ch + 1;\n                if (1 < var_2ch) {\ncode_r0x00bd6333:\n                    arg_8h_01 = 0xffffffff;\n                    arg_8h_00 = 0x83;\n                    var_ch = iVar3;\n                    goto code_r0x00bd6348;\n                }\ncode_r0x00ba158d:\n                var_ch = iVar3;\n                iVar5 = fcn.00b9cd50(arg_8h, var_14h, var_8h, var_4h, var_1ch, var_20h, var_18h, var_24h);\n                iVar3 = var_ch;\n                if (iVar5 < 0) goto code_r0x00ba1668;\n            }\n            else {\n                if (iVar8 == 0x14) {\n                    if (*(ppiVar6[1] + 2) == 0x7f) {\n                        var_1ch = var_1ch + 1;\n                        goto code_r0x00ba14cc;\n                    }\n                    goto code_r0x00bd633b;\n                }\n                if (iVar8 == 0x15) {\n                    *0xc56404 = var_ch;\n                    arg_8h_01 = 0xffffffff;\n                    arg_8h_00 = 0x98;\n                    var_ch = iVar3;\n                    goto code_r0x00bd6348;\n                }\n                if (iVar8 == 0x16) {\n                    if (*(ppiVar6[1] + 2) != 0x7f) goto code_r0x00bd633b;\n                    var_1ch = var_1ch + -1;\n                    *0xc56404 = var_ch;\n                    if ((var_1ch < 0) || (bVar11 = arg_8h - 1 != arg_8h,  arg_8h = arg_8h - 1,  bVar11)) {\n                        arg_8h_01 = 0xffffffff;\n                        arg_8h_00 = 0x99;\n                        var_ch = iVar3;\ncode_r0x00bd6348:\n                        fcn.00bfa0b5(arg_8h_00, arg_8h_01);\ncode_r0x00ba1668:\n                        fcn.00bb011e();\n                        fcn.00bb011e();\n                        fcn.00bb011e();\n                        fcn.00bb011e();\n                        fcn.00bb011e();\n                        fcn.00bb011e();\n                        fcn.00bb011e();\n                        return uVar10;\n                    }\n                }\n                else {\n                    if (iVar8 == 0x17) {\n                        var_20h = var_20h + 1;\n                        goto code_r0x00ba14cc;\n                    }\n                    if (iVar8 == 0x18) {\n                        if (*(ppiVar6[1] + 2) != 0x7f) goto code_r0x00bd633b;\n                        var_20h = var_20h + -1;\n                        *0xc56404 = var_ch;\n                        if ((var_20h < 0) || (bVar11 = arg_8h - 1 != arg_8h,  arg_8h = arg_8h - 1,  bVar11)) {\n                            arg_8h_01 = 0xffffffff;\n                            arg_8h_00 = 0xb3;\n                            var_ch = iVar3;\n                            goto code_r0x00bd6348;\n                        }\n                    }\n                }\n            }\n            goto code_r0x00ba13ae;\n        }\n        if (iVar8 == 0x21) {\n            if (*(ppiVar6[1] + 2) == 0x7f) {\n                var_2ch = var_2ch + -1;\n                if (var_2ch != 0) goto code_r0x00bd6333;\n                goto code_r0x00ba158d;\n            }\n            goto code_r0x00bd633b;\n        }\n        if (iVar8 == 0x25) {\n            var_24h = var_24h + 1;\n            goto code_r0x00ba14cc;\n        }\n        if (iVar8 != 0x26) {\n            if (iVar8 == 0x2b) goto code_r0x00ba157d;\n            goto code_r0x00ba13ae;\n        }\n        if (*(ppiVar6[1] + 2) == 0x7f) {\n            var_24h = var_24h + -1;\n            *0xc56404 = var_ch;\n            if ((var_24h < 0) || (bVar11 = arg_8h - 1 != arg_8h,  arg_8h = arg_8h - 1,  bVar11)) {\n                arg_8h_01 = 0xffffffff;\n                arg_8h_00 = 0x68;\n                var_ch = iVar3;\n                goto code_r0x00bd6348;\n            }\n            goto code_r0x00ba13ae;\n        }\n    }\ncode_r0x00bd633b:\n    arg_8h_01 = *(*(*(iVar5 + 4) + 4) + 10);\n    arg_8h_00 = 0x72;\n    var_ch = iVar3;\n    goto code_r0x00bd6348;\n}\n",
        "token_count": 3957
    },
    "00ba18c9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba18c9(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uchar *arg_8h_00;\n    uint32_t uStack84;\n    uint uStack80;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t *piStack60;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    int32_t *piStack40;\n    ushort uStack36;\n    uchar *puStack32;\n    \n    iVar6 = 0;\n    iStack72 = **(arg_8h + 4);\n    if (*(iStack72 + 0xc) == 0xe) {\n        uStack80 = 1;\n        arg_8h_00 = &stack0xffffffdc;\n        puVar4 = fcn.00bf7ba4(arg_8h_00);\n    }\n    else {\n        uStack80 = 2;\n        arg_8h_00 = 0xba18ff;\n        fcn.00b99997();\n        puVar4 = *(iStack72 + 8);\n        uStack52 = *puVar4;\n        uStack48 = puVar4[1];\n        uStack44 = puVar4[2];\n        piStack40 = puVar4[3];\n        puVar4 = &stack0xffffffcc;\n        *piStack40 = *piStack40 + 1;\n    }\n    iStack72 = *puVar4;\n    uStack68 = puVar4[1];\n    uStack64 = puVar4[2];\n    piStack60 = puVar4[3];\n    *piStack60 = *piStack60 + 1;\n    if ((uStack84 & 2) != 0) {\n        uStack84 = uStack84 & 0xfffffffd;\n        fcn.00b95a64();\n    }\n    if ((uStack84 & 1) != 0) {\n        fcn.00b95a64();\n    }\n    fcn.00b97faf();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(iStack72, uStack68);\n    iVar2 = fcn.00b99fbd(&stack0xffffffb0);\n    if (iVar2 == 0) {\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        goto code_r0x00ba1a40;\n    }\n    if (*(arg_8h + 8) == 2) {\n        iVar2 = fcn.00b99c9c();\n        if (iVar2 < 1) goto code_r0x00bd6454;\n        piVar3 = fcn.00b99c9c();\n    }\n    else {\ncode_r0x00bd6454:\n        piVar3 = 0xfa;\n    }\n    piVar7 = *(in_ECX + 0x44c);\n    while (piVar7 != NULL) {\n        cVar1 = fcn.00ba5ee9();\n        if (cVar1 != '\\0') {\n            *(*piVar7 + 0x11) = 0;\n            *(*piVar7 + 0x18) = piVar3;\n            iVar6 = *piVar7;\n            if (*(iVar6 + 0x10) == '\\0') {\n                uVar5 = (*_sym.imp.WINMM.dll_timeGetTime)();\n                *(iVar6 + 0x14) = uVar5;\n            }\n            fcn.00baff61(1, 0);\n            goto code_r0x00ba1a40;\n        }\n        piVar7 = piVar3;\n        fcn.00be6cea(&stack0xffffffa8);\n        piVar3 = piVar7;\n    }\n    fcn.00b977c7();\n    uStack36 = 0;\n    fcn.00b981a7(&stack0xffffffac);\n    puStack32 = arg_8h_00;\n    puStack32 = (*_sym.imp.WINMM.dll_timeGetTime)();\n    if (*(in_ECX + 0x450) == 0) {\n        iVar2 = fcn.00bb0ff6(0xc);\n        if (iVar2 != 0) {\n            iVar6 = fcn.00bb0af2(&stack0xffffffcc);\n        }\n        *(in_ECX + 0x44c) = iVar6;\n    }\n    else {\n        iVar2 = fcn.00bb0ff6(0xc);\n        if (iVar2 != 0) {\n            iVar6 = fcn.00bb0af2(&stack0xffffffcc);\n        }\n        *(iVar6 + 8) = *(in_ECX + 0x450);\n        *(*(in_ECX + 0x450) + 4) = iVar6;\n    }\n    *(in_ECX + 0x454) = *(in_ECX + 0x454) + 1;\n    *(in_ECX + 0x450) = iVar6;\n    fcn.00b95a64();\ncode_r0x00ba1a40:\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1208
    },
    "00ba1a96": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba1a96(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char cVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t in_ECX;\n    uint *arg_8h_00;\n    int32_t *piVar10;\n    uint *puVar11;\n    bool bVar12;\n    uint uVar13;\n    int32_t iVar14;\n    int32_t **ppiVar15;\n    int32_t iVar16;\n    int32_t *piStack456;\n    int32_t iStack452;\n    uint *puStack448;\n    uint *puStack444;\n    uint *puStack440;\n    int32_t *piStack436;\n    uint uStack432;\n    uint uStack424;\n    int32_t iStack416;\n    uint32_t *apuStack412 [3];\n    int32_t iStack400;\n    char16_t *pcStack396;\n    char16_t *pcStack392;\n    int32_t iStack388;\n    uint uStack384;\n    char16_t *pcStack380;\n    int32_t iStack376;\n    uint uStack372;\n    char16_t *pcStack368;\n    uint uStack364;\n    uint uStack360;\n    char16_t *pcStack356;\n    uint uStack352;\n    char16_t *pcStack348;\n    char16_t *pcStack344;\n    uint uStack340;\n    char16_t *pcStack336;\n    char16_t *pcStack332;\n    uint uStack328;\n    char16_t *pcStack324;\n    char16_t *pcStack320;\n    uint uStack316;\n    uint uStack312;\n    char16_t *pcStack308;\n    uint uStack304;\n    char16_t *pcStack300;\n    char16_t *pcStack296;\n    int32_t iStack292;\n    char16_t *pcStack288;\n    char16_t *pcStack284;\n    int32_t iStack280;\n    char16_t *pcStack276;\n    char16_t *pcStack272;\n    int32_t iStack268;\n    char16_t *pcStack264;\n    char16_t *pcStack260;\n    int32_t iStack256;\n    char16_t *pcStack252;\n    char16_t *pcStack248;\n    int32_t iStack244;\n    uint uStack240;\n    char16_t *pcStack236;\n    int32_t iStack232;\n    char16_t *pcStack228;\n    char16_t *pcStack224;\n    int32_t iStack220;\n    uint uStack216;\n    char16_t *pcStack212;\n    int32_t iStack208;\n    uint uStack204;\n    char16_t *pcStack200;\n    int32_t iStack196;\n    char16_t *pcStack192;\n    char16_t *pcStack188;\n    int32_t iStack184;\n    char16_t *pcStack180;\n    char16_t *pcStack176;\n    int32_t iStack172;\n    uint uStack168;\n    char16_t *pcStack164;\n    int32_t iStack160;\n    char16_t *pcStack156;\n    char16_t *pcStack152;\n    uint uStack148;\n    uint uStack144;\n    char16_t *pcStack140;\n    uint uStack136;\n    uint uStack132;\n    char16_t *pcStack128;\n    uint uStack124;\n    char16_t *pcStack120;\n    char16_t *pcStack116;\n    uint uStack112;\n    char16_t *pcStack108;\n    char16_t *pcStack104;\n    uint uStack100;\n    uint uStack96;\n    char16_t *pcStack92;\n    int32_t iStack88;\n    uint uStack84;\n    char16_t *pcStack80;\n    int32_t iStack76;\n    uint uStack72;\n    char16_t *pcStack68;\n    int32_t iStack64;\n    char16_t *pcStack60;\n    char16_t *pcStack56;\n    uint uStack52;\n    char16_t *pcStack48;\n    char16_t *pcStack44;\n    int32_t iStack40;\n    char16_t *pcStack36;\n    \n    uStack432 = *(arg_8h + 8);\n    iVar14 = **(arg_8h + 4);\n    fcn.00b99997();\n    ppiVar15 = 0xc1f910;\n    piStack436 = **(iVar14 + 8);\n    fcn.00b99f3a(0xc1f910);\n    fcn.00b99a20();\n    *arg_ch = 0;\n    iStack400 = in_ECX + 0x108;\n    uStack384 = 0xc21d2c;\n    iStack388 = in_ECX + 0xfd;\n    uStack372 = 0xc21d2c;\n    iStack376 = in_ECX + 0xfe;\n    iStack292 = in_ECX + 0x10c;\n    iStack280 = in_ECX + 0x110;\n    iStack268 = in_ECX + 0x114;\n    uStack312 = 0xc21d2c;\n    iStack256 = in_ECX + 0x100;\n    pcStack288 = L\"d10m0\";\n    pcStack276 = L\"d10m0\";\n    iStack244 = in_ECX + 0xff;\n    arg_ch[3] = 1;\n    apuStack412[2] = 0xc228fc;\n    pcStack396 = L\"d1r0,2\";\n    pcStack392 = L\"ExpandEnvStrings\";\n    pcStack380 = L\"ExpandVarStrings\";\n    pcStack368 = L\"GUICloseOnESC\";\n    uStack364 = 0xc567b0;\n    uStack360 = 0xc225ec;\n    pcStack356 = L\"GUICoordMode\";\n    uStack352 = 0xc567b4;\n    pcStack348 = L\"d1r0,2\";\n    pcStack344 = L\"GUIDataSeparatorChar\";\n    uStack340 = 0xc567c4;\n    pcStack336 = L\"d124c\";\n    pcStack332 = L\"GUIEventOptions\";\n    uStack328 = 0xc567c0;\n    pcStack324 = L\"d0r0,3\";\n    pcStack320 = L\"GUIOnEventMode\";\n    uStack316 = 0xc567bc;\n    pcStack308 = L\"GUIResizeMode\";\n    uStack304 = 0xc567b8;\n    pcStack300 = L\"d0r0,1023\";\n    pcStack296 = L\"MouseClickDelay\";\n    pcStack284 = L\"MouseClickDownDelay\";\n    pcStack272 = L\"MouseClickDragDelay\";\n    pcStack264 = L\"d250m0\";\n    pcStack260 = L\"MouseCoordMode\";\n    pcStack252 = L\"d1r0,2\";\n    pcStack248 = L\"MustDeclareVars\";\n    uStack240 = 0xc21d2c;\n    pcStack236 = L\"PixelCoordMode\";\n    iStack232 = in_ECX + 0x104;\n    pcStack228 = L\"d1r0,2\";\n    pcStack224 = L\"SendAttachMode\";\n    uStack216 = 0xc21d2c;\n    iStack220 = in_ECX + 0x91;\n    pcStack192 = L\"d5m0\";\n    iStack208 = in_ECX + 0x90;\n    pcStack180 = L\"d5m0\";\n    iStack196 = in_ECX + 0x88;\n    uStack168 = 0xc21d2c;\n    iStack184 = in_ECX + 0x8c;\n    iStack172 = in_ECX + 0x118;\n    iStack160 = in_ECX + 0x46c;\n    iStack88 = in_ECX + 0x2dc;\n    iStack76 = in_ECX + 0x2dd;\n    iStack64 = in_ECX + 0x2d8;\n    iStack40 = in_ECX + 0x2f4;\n    uStack132 = 0xc21d2c;\n    uStack96 = 0xc21d2c;\n    uStack84 = 0xc21d2c;\n    uStack72 = 0xc21d2c;\n    piStack456 = *(arg_8h + 4);\n    uStack204 = 0xc225ec;\n    uStack144 = 0xc225ec;\n    pcStack212 = L\"SendCapsLockMode\";\n    pcStack200 = L\"SendKeyDelay\";\n    pcStack188 = L\"SendKeyDownDelay\";\n    pcStack176 = L\"SetExitCode\";\n    pcStack164 = L\"TCPTimeout\";\n    pcStack156 = L\"d100m0\";\n    pcStack152 = L\"TrayAutoPause\";\n    uStack148 = 0xc56896;\n    pcStack140 = L\"TrayIconDebug\";\n    uStack136 = 0xc56285;\n    pcStack128 = L\"TrayIconHide\";\n    uStack124 = 0;\n    pcStack120 = L\"d0#1\";\n    pcStack116 = L\"TrayMenuMode\";\n    uStack112 = 0;\n    pcStack108 = L\"d0#2\";\n    pcStack104 = L\"TrayOnEventMode\";\n    uStack100 = 0xc56930;\n    pcStack92 = L\"WinDetectHiddenText\";\n    pcStack80 = L\"WinSearchChildren\";\n    pcStack68 = L\"WinTextMatchMode\";\n    pcStack60 = L\"d1r1,2\";\n    pcStack56 = L\"WinTitleMatchMode\";\n    uStack52 = 0;\n    pcStack48 = L\"d1#3\";\n    pcStack44 = L\"WinWaitDelay\";\n    pcStack36 = L\"d250m0\";\n    piVar10 = piStack456;\n    if ((*(*piStack456 + 0xc) == 4) && (iVar14 = 0x2a,  *puStack440 != 0x2a)) {\n        if (piStack436 == 0x1) {\n            puStack444 = NULL;\n            arg_8h_00 = puStack440;\n        }\n        else {\n            iVar14 = 0x29;\n            cVar5 = fcn.00b99dae(0x29);\n            if (cVar5 == '\\0') {\n                puStack448 = fcn.00b99c9c();\n                arg_8h_00 = puStack444;\n            }\n            else {\n                puStack448 = NULL;\n                arg_8h_00 = puStack444;\n            }\n        }\n        do {\n            piVar10 = NULL;\n            puVar11 = 0x1e;\n            puStack440 = 0x1e;\n            do {\n                piStack456 = puVar11 + piVar10 >> 1;\n                iVar7 = fcn.00bb313d(arg_8h_00, *(&stack0xfffffe64 + piStack456 * 0xc));\n                iVar4 = iStack416;\n                if (iVar7 < 0) {\n                    puVar11 = piStack456 + -1;\n                }\n                else {\n                    if (iVar7 < 1) break;\n                    piVar10 = piStack456 + 1;\n                }\n                arg_8h_00 = puStack448;\n            } while (piVar10 <= puVar11);\n            puStack440 = puVar11;\n            if (puVar11 < piVar10) break;\n            iVar16 = 0;\n            iVar7 = piStack456 * 0xc;\n            puStack448 = *(&stack0xfffffe6c + iVar7);\n            piStack456 = piVar10;\n            if (*puStack448 == 100) {\n                iVar16 = 1;\n                fcn.00bb0c75(&stack0xfffffe38);\n                fcn.00b99a20();\n                uStack424 = 1;\n                piStack436 = piStack456;\n            }\n            else if (*puStack448 == 0x44) {\n                uVar13 = fcn.00bb2e3c(puStack448);\n                fcn.00b97b76(uVar13);\n                iVar7 = 2;\n                uVar2 = *(iStack452 + 4);\n                while ((uVar2 != 0 && (uVar2 != 0x27))) {\n                    fcn.00b97a84(uVar2);\n                    ppiVar15 = ppiVar15 + 1;\n                    uVar2 = *(piStack456 + ppiVar15 * 2);\n                }\n                iVar7 = iVar7 + 1;\n                fcn.00b99b9c(&stack0xffffffd8);\n                fcn.00b95a64();\n            }\n            uVar8 = iVar16 + 1;\n            uVar2 = *(*(&stack0xfffffe6c + iVar7) + iVar16 * 2);\n            piVar10 = piStack456;\n            if (uVar2 < 0x6a) {\n                if (uVar2 == 0x69) {\n                    uVar9 = **(&stack0xfffffe68 + iVar7);\n                    fcn.00b99a20();\n                    arg_ch[3] = 1;\n                    *arg_ch = uVar9;\n                    if (0x1 < puStack444) {\n                        cVar5 = fcn.00b99dae(0x29);\n                        piVar10 = piStack456;\n                        if (cVar5 != '\\0') {\n                            piVar10 = fcn.00b99c9c();\n                        }\n                        *ppiVar15 = piVar10;\n                    }\n                }\n                else if (uVar2 == 0x23) {\n                    fcn.00bb0c75(&stack0xfffffe38);\n                    uVar9 = *0xc568a8;\n                    if (piStack456 == 0x1) {\n                        uVar9 = *0xc56288 == '\\0';\n                        fcn.00b99a20();\n                        *arg_ch = uVar9;\n                        arg_ch[3] = 1;\n                        if (0x1 < puStack444) {\n                            cVar5 = fcn.00b99dae(0x29);\n                            if (cVar5 != '\\0') {\n                                piStack456 = fcn.00b99c9c();\n                            }\n                            if (piStack456 == NULL) {\n                                fcn.00b943db();\n                            }\n                            else {\n                                fcn.00b944cb();\n                            }\n                        }\n                    }\n                    else if (piStack456 == 0x2) {\n                        fcn.00b99a20();\n                        arg_ch[3] = 1;\n                        *arg_ch = uVar9;\n                        if (0x1 < puStack444) {\n                            uVar13 = 0xbd66f8;\n                            cVar5 = fcn.00b99dae(0x29);\n                            if (cVar5 == '\\0') {\n                                cVar5 = fcn.00b99dae(0x29);\n                                if (cVar5 != '\\0') {\n                                    uVar8 = fcn.00b99c9c(uVar13);\n                                }\n                                *0xc56894 = 0x101;\n                                *0xc56897 = 1;\n                                bVar12 = (uVar8 & 1) != 0;\n                                if (bVar12) {\n                                    *0xc56894 = 0x100;\n                                }\n                                *0xc568a8 = bVar12;\n                                if ((uVar8 & 2) != 0) {\n                                    *0xc568a8 = bVar12 | 2;\n                                    *0xc56894 = *0xc56894 & 0xff;\n                                }\n                                bVar12 = (uVar8 & 4) != 0;\n                                if (bVar12) {\n                                    *0xc568a8 = *0xc568a8 | 4;\n                                }\n                                *0xc5689a = !bVar12;\n                                if ((uVar8 & 8) != 0) {\n                                    *0xc568a8 = *0xc568a8 | 8;\n                                    *0xc56897 = 0;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        piVar10 = piStack456;\n                        if (piStack456 != 0x3) break;\n                        uVar9 = *(iVar4 + 0x2d4);\n                        fcn.00b99a20();\n                        arg_ch[3] = 1;\n                        *arg_ch = uVar9;\n                        if (0x1 < puStack444) {\n                            cVar5 = fcn.00b99dae(0x29);\n                            if (cVar5 != '\\0') {\n                                piStack456 = fcn.00b99c9c();\n                            }\n                            piVar3 = piStack456;\n                            iVar7 = fcn.00bb6ccd(piStack456);\n                            piVar10 = piStack456;\n                            if (3 < iVar7 - 1U) break;\n                            *(iVar4 + 0x2d4) = piVar3;\n                        }\n                    }\n                }\n                else if (uVar2 == 0x53) {\n                    puStack440 = *(&stack0xfffffe68 + iVar7);\n                    fcn.00b99bf8(*puStack440);\n                    if (0x1 < puStack448) {\n                        ppiVar15 = *(*(arg_8h + 4) + 4);\n                        cVar5 = fcn.00b99dae(0x29);\n                        if (cVar5 == '\\0') {\n                            fcn.00b99997();\n                            piVar10 = *(iVar14 + 8);\n                        }\n                        else {\n                            fcn.00b99997();\n                            piVar10 = piStack436;\n                        }\n                        fcn.00b97d2c(*piVar10);\n                    }\n                }\n                else if (uVar2 == 0x62) {\n                    uVar1 = **(&stack0xfffffe68 + iVar7);\n                    fcn.00b99a20();\n                    arg_ch[3] = 1;\n                    *arg_ch = uVar1;\n                    if (0x1 < puStack444) {\n                        cVar5 = fcn.00b99dae(0x29);\n                        piVar10 = piStack456;\n                        if (cVar5 != '\\0') {\n                            piVar10 = fcn.00b99c9c();\n                        }\n                        *ppiVar15 = piVar10 != NULL;\n                    }\n                }\n                else {\n                    if (uVar2 != 99) break;\n                    puStack440 = *(&stack0xfffffe68 + iVar7);\n                    uVar13 = 0xbd657d;\n                    fcn.00b99bf8(puStack440);\n                    if (0x1 < puStack448) {\n                        ppiVar15 = *(*(arg_8h + 4) + 4);\n                        cVar5 = fcn.00b99dae(0x29);\n                        if (cVar5 == '\\0') {\n                            fcn.00b99997(uVar13);\n                            iVar6 = ***(iVar14 + 8);\n                        }\n                        else {\n                            iVar6 = fcn.00b99c9c();\n                        }\n                        *puStack448 = iVar6;\n                    }\n                }\n            }\n            else if (uVar2 == 0x6d) {\n                uVar9 = **(&stack0xfffffe68 + iVar7);\n                fcn.00b99a20();\n                arg_ch[3] = 1;\n                *arg_ch = uVar9;\n                fcn.00bb0c75(&stack0xfffffe38);\n                if (0x1 < puStack444) {\n                    cVar5 = fcn.00b99dae(0x29);\n                    if (cVar5 == '\\0') {\n                        if (uVar8 <= piStack456) {\ncode_r0x00bd6977:\n                            *ppiVar15 = piStack456;\n                            goto code_r0x00ba2024;\n                        }\n                        cVar5 = fcn.00be65fa();\n                        piVar10 = piStack456;\n                        if (cVar5 == '\\0') break;\n                    }\n                    piVar10 = fcn.00b99c9c();\ncode_r0x00bd699c:\n                    *ppiVar15 = piVar10;\n                }\n            }\n            else if (uVar2 == 0x72) {\n                uVar9 = **(&stack0xfffffe68 + iVar7);\n                fcn.00b99a20();\n                arg_ch[3] = 1;\n                *arg_ch = uVar9;\n                fcn.00bb0c75(&stack0xfffffe38);\n                uVar8 = uVar8 + 1;\n                fcn.00bb0c75(&stack0xfffffe48);\n                if (0x1 < puStack444) {\n                    cVar5 = fcn.00b99dae(0x29);\n                    if (cVar5 == '\\0') {\n                        if ((uVar8 <= piStack456) && (piStack456 <= puStack444)) goto code_r0x00bd6977;\n                        cVar5 = fcn.00be65fa();\n                        piVar10 = piStack456;\n                        if (cVar5 == '\\0') break;\n                    }\n                    piVar10 = fcn.00b99c9c();\n                    goto code_r0x00bd699c;\n                }\n            }\n            else if (uVar2 != 0x76) break;\ncode_r0x00ba2024:\n            puStack448 = puStack448 + uVar8 * 2;\n            if (*puStack448 == 0) goto code_r0x00ba203a;\n            arg_8h_00 = puStack448;\n            piVar10 = piStack456;\n        } while (*puStack448 == 0x2a);\n    }\n    piStack456 = piVar10;\n    fcn.00be6aa3(1, 0);\ncode_r0x00ba203a:\n    fcn.00b99a20();\n    return 0;\n}\n",
        "token_count": 4955
    },
    "00ba2123": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba2123(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t iVar5;\n    ulong uVar6;\n    uint var_14h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00b99bf8(0xc1f910);\n    if (*(**(arg_8h + 4) + 0xc) == 4) {\n        iVar2 = fcn.00bb0ff6(0x38);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.00b95906();\n        }\n        iVar5 = **(arg_8h + 4);\n        fcn.00b99997();\n        cVar1 = fcn.00b95956(*(iVar5 + 8), 0x8000);\n        if (cVar1 == '\\0') {\n            if (iVar2 != 0) {\n                fcn.00b95a1a(extraout_ECX);\n            }\ncode_r0x00bd69af:\n            fcn.00be6aa3(1, 0);\n            return 0;\n        }\n    }\n    else {\n        cVar1 = fcn.00bff7df(&fcn.00ba2123::var_8h, **(arg_8h + 4), 0);\n        if (cVar1 == '\\0') goto code_r0x00bd69af;\n        iVar2 = *(**(*(in_ECX + 0x194) + var_8h * 4) + 4);\n    }\n    if ((*(arg_8h + 8) < 2) || (iVar5 = fcn.00b99c9c(),  iVar5 < 0)) {\n        uVar6 = fcn.00b95e3f();\n        var_8h = uVar6 >> 0x20;\n        iVar5 = uVar6 - *(iVar2 + 0x10);\n    }\n    else {\n        iVar5 = fcn.00b99c9c();\n    }\n    var_4h = iVar5;\n    uVar3 = fcn.00b95708();\n    if ((uVar3 & 0x10) == 0) {\n        fcn.00b977c7();\n        cVar1 = fcn.00b956d2(&fcn.00ba2123::var_14h, &fcn.00ba2123::var_4h);\n        if (cVar1 == '\\0') {\n            fcn.00be6aa3(0xffffffff, 0);\n        }\n        else {\n            fcn.00b99b9c(&fcn.00ba2123::var_14h);\n            fcn.00baff61(var_4h, 0);\n        }\n        fcn.00b95a64();\n    }\n    else {\n        var_8h = fcn.00bb0ff6(iVar5);\n        if ((iVar5 == 0) || (cVar1 = fcn.00b959b0(var_8h, &fcn.00ba2123::var_4h),  iVar5 = var_4h,  cVar1 != '\\0')) {\n            uVar4 = fcn.00bf794e(iVar5);\n            fcn.00bb1080(uVar4, var_8h, iVar5);\n            fcn.00baff61(0xbd6a69, 0);\n        }\n        else {\n            fcn.00be6aa3(0xffffffff, 0);\n        }\n        fcn.00bb106c(var_8h);\n    }\n    if ((*(**(arg_8h + 4) + 0xc) == 4) && (fcn.00b95dcf(),  iVar2 != 0)) {\n        fcn.00b95a1a(extraout_ECX_00);\n    }\n    return 0;\n}\n",
        "token_count": 934
    },
    "00ba2572": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba2572(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_ch_00;\n    uint arg_10h;\n    uint arg_14h;\n    uint arg_1ch;\n    uint arg_20h;\n    \n    uVar1 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.00bf89bb();\n    }\n    arg_20h = 0xffffffff;\n    arg_1ch = 0xffffffff;\n    arg_14h = 0xffffffff;\n    arg_10h = 0;\n    arg_ch_00 = fcn.00b99c9c();\n    uVar1 = fcn.00b92b72(0, arg_ch_00, arg_10h, arg_14h, uVar1, arg_1ch, arg_20h);\n    fcn.00b99a20();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 240
    },
    "00ba25c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba25c7(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_8h_00;\n    uint *puVar3;\n    uint uVar4;\n    bool bVar5;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = 0;\n    var_8h = 0;\n    iVar1 = *(*(arg_8h + 4) + 4);\n    bVar5 = *(iVar1 + 0xc) == 0xe;\n    if (bVar5) {\n        puVar3 = fcn.00bf7ba4(&var_38h);\n    }\n    else {\n        fcn.00b99997();\n        puVar3 = *(iVar1 + 8);\n        var_28h = *puVar3;\n        var_24h = puVar3[1];\n        var_20h = puVar3[2];\n        var_1ch = puVar3[3];\n        puVar3 = &var_28h;\n        *var_1ch = *var_1ch + 1;\n    }\n    var_18h = *puVar3;\n    var_14h = puVar3[1];\n    var_10h = puVar3[2];\n    var_ch = puVar3[3];\n    *var_ch = *var_ch + 1;\n    if (bVar5) {\n        fcn.00b95a64();\n    }\n    else {\n        fcn.00b95a64();\n    }\n    iVar1 = fcn.00b99fbd(&var_18h);\n    if (iVar1 == 0) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.00be6aa3(1, 0);\n        uVar4 = 0xffffffff;\n    }\n    else {\n        uVar2 = 0;\n        if (2 < *(arg_8h + 8)) {\n            uVar2 = fcn.00bf89bb();\n        }\n        puVar3 = &var_18h;\n        arg_8h_00 = fcn.00b99c9c();\n        uVar2 = fcn.00b92b27(arg_8h_00, puVar3, uVar2);\n        fcn.00b99a20();\n        *arg_ch = uVar2;\n        arg_ch[3] = 1;\n    }\n    fcn.00b95a64();\n    return uVar4;\n}\n",
        "token_count": 651
    },
    "00ba26bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba26bd(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_ch_00;\n    uint uVar1;\n    \n    arg_ch_00 = 0;\n    uVar1 = 5;\n    if (1 < *(arg_8h + 8)) {\n        arg_ch_00 = fcn.00bf89bb();\n    }\n    if (*(arg_8h + 8) != 0) {\n        uVar1 = fcn.00b99c9c();\n    }\n    uVar1 = fcn.00b92a5b(uVar1, arg_ch_00);\n    fcn.00b99a20();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 178
    },
    "00ba2a79": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba2a79(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t arg_14h;\n    ulong uVar2;\n    uint var_10h;\n    \n    arg_14h = 0;\n    if (1 < *(arg_8h + 8)) {\n        iVar1 = fcn.00b99c9c();\n        if (iVar1 == 1) {\n            arg_14h = 1;\n        }\n        else if (iVar1 == 2) {\n            arg_14h = 2;\n            goto code_r0x00bd6ed6;\n        }\n    }\n    if (arg_14h == 0) {\n        fcn.00b99e9c(**(arg_8h + 4));\n        fcn.00b99505();\n        return 0;\n    }\ncode_r0x00bd6ed6:\n    if (arg_14h - 1U < 2) {\n        uVar2 = fcn.00b99d46();\n        arg_8h_00 = fcn.00c03aa2(&var_10h, uVar2, uVar2 >> 0x20, arg_14h);\n        fcn.00b99e9c(arg_8h_00);\n        fcn.00b99a20();\n    }\n    return 0;\n}\n",
        "token_count": 322
    },
    "00ba2cc2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba2cc2(int32_t arg_8h, double *arg_ch)\n\n{\n    int32_t iVar1;\n    float10 fVar2;\n    \n    if (1 < *(arg_8h + 8)) {\n        iVar1 = fcn.00b99c9c();\n        if ((iVar1 == 1) || (iVar1 == 2)) {\n            fcn.00ba2a79(arg_8h, arg_ch);\n            return 0;\n        }\n        if (iVar1 == 3) {\n            fVar2 = fcn.00b99cf8();\n            fcn.00b99a20();\n            *arg_ch = fVar2;\n            *(arg_ch + 0xc) = 3;\n            return 0;\n        }\n    }\n    fcn.00b99e9c(**(arg_8h + 4));\n    fcn.00b994da();\n    return 0;\n}\n",
        "token_count": 212
    },
    "00ba2d18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba2d18(int32_t arg_8h, double *arg_ch)\n\n{\n    uint uVar1;\n    float10 fVar2;\n    ulong uVar3;\n    uint var_10h;\n    double dStack12;\n    \n    if (*(arg_8h + 8) != 1) {\n        fcn.00b99c9c();\n    }\n    fVar2 = fcn.00bafca2(*0xc34be8);\n    dStack12 = fVar2;\n    fVar2 = fcn.00b99cf8();\n    if (fVar2 < *0xc34ba0) {\n        fcn.00b99cf8();\n        fVar2 = fcn.00bb6bb0();\n    }\n    else {\n        fcn.00b99cf8();\n        fVar2 = fcn.00bb6a80();\n    }\n    dStack12 = fVar2 / dStack12;\n    fcn.00b99a20();\n    *arg_ch = dStack12;\n    *(arg_ch + 0xc) = 3;\n    if (*(arg_8h + 8) == 1) {\n        uVar1 = 0;\n        uVar3 = fcn.00b99d46();\n        uVar1 = fcn.00c03aa2(&var_10h, uVar3, uVar3 >> 0x20, uVar1);\n        fcn.00b99e9c(uVar1);\n        fcn.00b99a20();\n    }\n    return 0;\n}\n",
        "token_count": 352
    },
    "00ba2e5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba2e5b(int32_t arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    uint uVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    uint16_t *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch_00;\n    int32_t **unaff_EBX;\n    int32_t arg_8h_01;\n    float10 fVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint arg_10h;\n    int32_t iStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    int32_t *piStack128;\n    int32_t iStack104;\n    int32_t *piStack100;\n    \n    arg_10h = 0x400;\n    iStack104 = *(arg_8h + 8);\n    fcn.00b97b76(0x400);\n    uVar3 = fcn.00bb0ff6(0x20000);\n    fcn.00b9538e(uVar3);\n    uVar3 = fcn.00bb0ff6(0x20000);\n    fcn.00b9538e(uVar3);\n    iVar2 = **(arg_8h + 4);\n    fcn.00b99997();\n    iVar2 = *(iVar2 + 8);\n    fcn.00b977c7();\n    fcn.00ba5bfd();\n    fcn.00b97f41(L\"\\\\\\\\[\\\\\\\\nrt]|%%|%[-+ 0#]?([0-9]*|\\\\*)?(\\\\.[0-9]*|\\\\.\\\\*)?[hlL]?[diouxXeEfgGs]\");\n    fcn.00ba5c72(&uStack132);\n    fcn.00b95a64();\n    fcn.00ba5d24(iVar2);\n    arg_8h_00 = piStack100;\n    arg_8h_01 = 0;\n    iStack144 = 0xc21cc0;\n    iStack104 = iStack104 + -1;\n    uStack140 = 0;\n    uStack136 = 0;\n    uStack132 = 0;\n    iVar10 = 0;\n    iVar9 = 0;\n    if (0 < *(iVar2 + 4)) {\n        do {\n            arg_8h_01 = iVar9;\n            iVar9 = arg_8h_01;\n            iVar4 = fcn.00ba5b8e(arg_8h_01, &iStack144);\n            if (iVar4 < 1) break;\n            iVar4 = **unaff_EBX;\n            fcn.00b97bb1(iVar2, arg_ch_00, iVar4 - arg_ch_00);\n            piVar5 = fcn.00b97b20(iVar4);\n            arg_8h_01 = iVar9;\n            if (*piVar5 == 0x25) {\n                piVar5 = fcn.00b97b20(iVar4 + 1);\n                uVar3 = 0x25;\n                arg_8h_01 = iVar9;\n                if (*piVar5 != 0x25) goto code_r0x00ba2f96;\ncode_r0x00bd6f86:\n                fcn.00b97a84(uVar3);\n            }\n            else {\ncode_r0x00ba2f96:\n                iVar9 = iVar4;\n                piVar5 = fcn.00b97b20(iVar4);\n                if (*piVar5 == 0x5c) {\n                    piVar5 = fcn.00b97b20(iVar4 + 1);\n                    uVar3 = 0x5c;\n                    iVar1 = *piVar5;\n                    if (iVar1 != 0x5c) {\n                        if (iVar1 == 0x6e) {\n                            uVar3 = 10;\n                        }\n                        else if (iVar1 == 0x72) {\n                            uVar3 = 0xd;\n                        }\n                        else {\n                            if (iVar1 != 0x74) goto code_r0x00ba303f;\n                            uVar3 = 9;\n                        }\n                    }\n                    goto code_r0x00bd6f86;\n                }\n                if (iVar10 != iStack104) {\n                    iVar10 = iVar10 + 1;\n                    fcn.00b979ab(iVar2, iVar4, arg_10h);\n                    puVar6 = fcn.00b97b52(piStack128 + -1);\n                    uVar7 = *puVar6;\n                    if (uVar7 < 0x6a) {\n                        if (uVar7 == 0x69) {\ncode_r0x00bd6fe0:\n                            iVar4 = fcn.00b99c9c();\n                            goto code_r0x00bd6ff3;\n                        }\n                        if ((uVar7 != 0x45) && (uVar7 != 0x47)) {\n                            if ((uVar7 == 0x58) || (uVar7 == 100)) goto code_r0x00bd6fe0;\n                            if (2 < uVar7 - 0x65) goto code_r0x00ba3035;\n                        }\n                        fVar8 = fcn.00b99cf8();\n                        fcn.00bb38d8(arg_8h_00, uStack136, SUB84(fVar8, 0));\n                    }\n                    else {\n                        if (uVar7 == 0x6f) goto code_r0x00bd6fe0;\n                        if (uVar7 != 0x73) {\n                            if ((uVar7 == 0x75) || (uVar7 == 0x78)) goto code_r0x00bd6fe0;\n                            goto code_r0x00ba3035;\n                        }\n                        iVar9 = *(*(arg_8h + 4) + iVar9 * 4);\n                        fcn.00b99997();\n                        iVar4 = iStack144;\n                        fcn.00bb42ee(iStack144, **(iVar9 + 8), 0xffff);\n                        *(iVar4 + 0x1fffe) = 0;\ncode_r0x00bd6ff3:\n                        fcn.00bb38d8(arg_8h_00, uStack136, iVar4);\n                    }\ncode_r0x00ba3035:\n                    fcn.00b97e0b(arg_8h_00);\n                }\n            }\ncode_r0x00ba303f:\n            iVar9 = arg_8h_01;\n        } while (arg_8h_01 < *(iVar2 + 4));\n    }\n    if (arg_8h_01 < *(iVar2 + 4)) {\n        fcn.00b97bb1(iVar2, arg_8h_01, 0xffffffff);\n    }\n    fcn.00b99b9c(&stack0xffffff60);\n    fcn.00bb0ab3();\n    fcn.00ba5c2e();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    *piStack128 = *piStack128 + -1;\n    if (*piStack128 == 0) {\n        fcn.00bb106c(piStack128);\n        fcn.00bb106c(uStack132);\n    }\n    *piStack100 = *piStack100 + -1;\n    if (*piStack100 == 0) {\n        fcn.00bb106c(piStack100);\n        fcn.00bb106c(arg_8h_00);\n    }\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1733
    },
    "00ba30dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba30dd(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_10h;\n    uint var_10h;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00b99997();\n    arg_10h = -1;\n    iVar1 = *(*(iVar2 + 8) + 4);\n    iVar2 = fcn.00b99c9c();\n    iVar2 = iVar2 + -1;\n    if (2 < *(arg_8h + 8)) {\n        arg_10h = fcn.00b99c9c();\n    }\n    fcn.00b977c7();\n    if ((iVar1 < iVar2) || (iVar2 < 0)) {\n        iVar2 = iVar1;\n    }\n    if ((arg_10h < 0) || (iVar1 - iVar2 < arg_10h)) {\n        arg_10h = iVar1 - iVar2;\n    }\n    iVar1 = **(arg_8h + 4);\n    fcn.00b99997();\n    fcn.00b979ab(*(iVar1 + 8), iVar2, arg_10h);\n    fcn.00b99b9c(&var_10h);\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 314
    },
    "00ba3723": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00ba3723(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    int32_t unaff_EBX;\n    int32_t iVar5;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint uStack108;\n    int32_t iStack104;\n    uint32_t uStack96;\n    int32_t iStack92;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint32_t uStack72;\n    int32_t iStack68;\n    uchar auStack56 [12];\n    int32_t iStack44;\n    uint uStack36;\n    uint uStack32;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.00b99997();\n    iVar1 = **(iVar1 + 8);\n    iVar8 = **(arg_8h + 4);\n    fcn.00b99997();\n    iVar4 = *(*(iVar8 + 8) + 4);\n    iVar8 = *(*(arg_8h + 4) + 4);\n    fcn.00b99997();\n    uStack88 = **(iVar8 + 8);\n    iVar8 = *(*(arg_8h + 4) + 4);\n    fcn.00b99997();\n    uStack96 = *(*(iVar8 + 8) + 4);\n    iVar8 = iVar4;\n    fcn.00b97b76(iVar4);\n    iVar5 = 0;\n    uStack72 = 0;\n    uStack108 = uStack108;\n    bVar2 = false;\n    if ((2 < *(arg_8h + 8)) && (uStack72 = fcn.00b99c9c(),  bVar2 = false,  (uStack72 & 2) != 0)) {\n        uStack72 = uStack72 & 1;\n        uStack108 = CONCAT13(1, uStack108);\n        bVar2 = true;\n    }\n    if (iVar1 == 0) {\n        uStack84 = !bVar2;\n        iStack68 = fcn.00b9942e();\n        fcn.00b991b0(iStack68, 1);\n        if (uStack108._3_1_ == '\\0') {\n            uStack36 = 0;\n            uStack32 = 1;\n            iStack44 = iVar4;\n            fcn.00b99040(iStack68, &stack0xffffffd4, 1);\n            fcn.00b99a20();\n        }\n        if (0 < iVar4) {\n            do {\n                fcn.00b978ad(unaff_EBX, iVar5, 1);\n                fcn.00b993ea(&stack0xffffffb0);\n                fcn.00b99040(iStack92, &stack0xffffffbc, 1);\n                fcn.00b99a20();\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < iVar4);\n        }\n        goto code_r0x00ba39ac;\n    }\n    if (uStack72 == 0) {\n        uVar7 = 0;\n        uStack96 = 0;\n        iStack68 = 0;\n        if (0 < iVar4) {\n            do {\n                iVar5 = fcn.00bafef6(iVar1);\n                if (iVar5 != 0) {\n                    uVar7 = uVar7 + 1;\n                }\n                iStack68 = iStack68 + 1;\n            } while (iStack68 < iVar4);\n            goto code_r0x00ba3889;\n        }\n    }\n    else if (uStack72 == 1) {\n        uStack96 = 0;\n        while (iVar6 = iVar4,  0 < iVar6) {\n            iStack68 = fcn.00bafef6(iVar6);\n            iVar4 = iVar5;\n            if ((iStack68 != 0) && (iVar6 = iVar6 - ((iStack68 - iStack104 >> 1) + iVar1),  -1 < iVar6)) {\n                iVar4 = fcn.00bb38a2(iStack68, iStack92, iVar1);\n                if (iVar4 == 0) {\n                    uStack96 = uStack96 + 1;\n                    iStack104 = iStack68 + iVar1 * 2;\n                    iVar4 = iVar6;\n                }\n                else {\n                    iStack104 = iStack68 + 2;\n                    iVar4 = iVar6 + iVar1 + -1;\n                }\n            }\n        }\n        iVar4 = **(arg_8h + 4);\n        fcn.00b99997();\n        iStack104 = **(iVar4 + 8);\n        iVar4 = **(arg_8h + 4);\n        fcn.00b99997();\n        iVar4 = *(*(iVar4 + 8) + 4);\n        uVar7 = uStack96;\ncode_r0x00ba3889:\n        uStack96 = uVar7;\n        if (0 < uStack96) {\n            iStack68 = uStack96 + 1;\n            uStack80 = fcn.00b9942e();\n            if (uStack108._3_1_ == '\\0') {\n                fcn.00b991b0(uStack80, 1);\n                iStack44 = iStack68;\n                uStack36 = 0;\n                uStack32 = 1;\n                fcn.00b99040(uStack80, &stack0xffffffd4, 1);\n                fcn.00b99a20();\n            }\n            else {\n                fcn.00b991b0(uStack80, 1);\n            }\n            uStack96 = uStack108._3_1_ == '\\0';\n            uStack84 = 0;\n            uStack76 = 0;\n            uVar7 = 0xba38d0;\n            fcn.00b97eec();\n            if (0 < iStack68) {\n                do {\n                    if (uStack96 == 0) {\n                        uStack88 = *(uVar7 + iVar1 * 2);\n                        iVar5 = fcn.00bafef6(iVar8);\n                        if ((iVar5 == 0) && (iVar1 != iVar4)) {\n                            fcn.00b97a84(uStack88);\n                        }\n                        else {\n                            fcn.00b993ea(&stack0xffffffac);\n                            fcn.00b99040(uStack108, &stack0xffffffc8, 1);\n                            iVar8 = iVar8 + 1;\n                            fcn.00b99a20();\n                            fcn.00b97eec();\n                        }\n                    }\n                    else {\n                        uVar3 = uVar7;\n                        if (uStack96 == 1) {\n                            while (uStack88 = uVar3,  iVar5 = fcn.00bafef6(iVar4),  iVar5 != 0) {\n                                iVar4 = iVar4 - ((iVar5 - uVar7 >> 1) + iVar8);\n                                if (iVar4 < 0) {\n                                    iVar5 = iVar5 + (iVar8 + iVar4) * 2;\n                                    goto code_r0x00ba3944;\n                                }\n                                iVar6 = fcn.00bb38a2(iVar5, unaff_ESI, iVar8);\n                                if (iVar6 == 0) goto code_r0x00ba3944;\n                                uVar7 = iVar5 + 2;\n                                iVar4 = iVar4 + iVar8 + -1;\n                                uVar3 = uStack88;\n                            }\n                            iVar5 = uVar7 + iVar4 * 2;\ncode_r0x00ba3944:\n                            fcn.00b978ad(uStack88, 0, iVar5 - uStack88 >> 1);\n                            fcn.00b993ea(&stack0xffffffa0);\n                            fcn.00b99040(unaff_EDI, &stack0xffffffac, 1);\n                            fcn.00b99a20();\n                            iVar8 = iVar8 + 1;\n                        }\n                    }\n                } while (uStack108 < iStack92);\n            }\n            goto code_r0x00ba39ac;\n        }\n    }\n    else {\n        uStack96 = 0xffffffff;\n    }\n    arg_8h_00 = fcn.00b9942e();\n    if (uStack108._3_1_ == '\\0') {\n        fcn.00b991b0(arg_8h_00, 1);\n        uStack36 = 0;\n        iStack44 = 1;\n        uStack32 = 1;\n        fcn.00b99040(arg_8h_00, &stack0xffffffd4, 1);\n        fcn.00b99a20();\n        iVar1 = **(arg_8h + 4);\n        fcn.00b99997();\n        fcn.00b978ad(iStack104, 0, *(*(iVar1 + 8) + 4));\n        fcn.00b993ea(&stack0xffffffb8);\n    }\n    else {\n        fcn.00b991b0(arg_8h_00, 1);\n        iVar1 = **(arg_8h + 4);\n        fcn.00b99997();\n        fcn.00b978ad(iStack104, 0, *(*(iVar1 + 8) + 4));\n        fcn.00b993ea(&stack0xffffffb8);\n    }\n    fcn.00b99040(arg_8h_00, &stack0xffffffd4, 1);\n    fcn.00b99a20();\n    fcn.00be6aa3(1 - unaff_EBX, 0);\ncode_r0x00ba39ac:\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 2251
    },
    "00ba3c19": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00ba3c19(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    uint extraout_ECX;\n    \n    fcn.00baffa8();\n    fcn.00b99e9c(arg_8h + 2);\n    fcn.00b981a7(arg_8h + 6);\n    *(in_ECX + 0x98) = arg_8h[10];\n    *(in_ECX + 0x2f0) = arg_8h[0xb];\n    fcn.00ba5f57(arg_8h[0xc]);\n    *(in_ECX + 0x2f8) = arg_8h[0xd];\n    fcn.00b981a7(arg_8h + 0xe);\n    *(in_ECX + 0x43c) = arg_8h[0x12];\n    *(in_ECX + 0x440) = arg_8h[0x13];\n    *(in_ECX + 0x448) = arg_8h[0x14];\n    if (*(in_ECX + 0xf8) != 1) {\n        *(in_ECX + 0xf8) = arg_8h[0x15];\n    }\n    *(in_ECX + 0xf4) = *arg_8h;\n    fcn.00bb0d46(extraout_ECX);\n    return;\n}\n",
        "token_count": 319
    },
    "00ba4140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00bd7ba1)\n// WARNING: Removing unreachable block (ram,0x00bd7c05)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00ba4140(uint16_t *arg_8h, int32_t arg_ch, uint16_t *arg_10h, uint32_t arg_14h, int32_t *arg_18h, int32_t arg_1ch)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    bool bVar3;\n    uint16_t uVar4;\n    uint16_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    int32_t iVar10;\n    int32_t *in_ECX;\n    int32_t *piVar11;\n    int32_t iVar12;\n    uint16_t *puVar13;\n    uint32_t *in_EDX;\n    int32_t *piVar14;\n    uint32_t uVar15;\n    uint var_11ch;\n    uint16_t *var_118h;\n    uint32_t var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint16_t *var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint32_t var_fch;\n    uint32_t var_f8h;\n    int32_t *var_f4h;\n    int32_t var_f0h;\n    int32_t var_ech;\n    int32_t var_e8h;\n    int32_t var_e4h;\n    uint32_t var_e0h;\n    uint32_t var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    int32_t var_d0h;\n    uint32_t var_cch;\n    uint16_t *var_c4h;\n    uint16_t *var_c0h;\n    uint16_t *var_bch;\n    uint32_t var_b8h;\n    uint32_t var_b4h;\n    uint32_t var_b0h;\n    uint32_t var_ach;\n    uint32_t var_a8h;\n    uint32_t var_a4h;\n    uint32_t var_a0h;\n    uint32_t var_9ch;\n    int32_t var_98h;\n    uint32_t var_94h;\n    uint32_t var_90h;\n    int32_t var_8ch;\n    uint16_t *var_88h;\n    uint16_t *var_84h;\n    uint16_t *var_80h;\n    int32_t var_7ch;\n    uint16_t *var_78h;\n    int32_t var_74h;\n    int32_t var_70h;\n    uint32_t var_6ch;\n    int32_t var_68h;\n    uint var_64h;\n    uint var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    uint32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint16_t *var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t *var_10h;\n    uint16_t *var_ch;\n    uint32_t var_8h;\n    uint16_t *var_4h;\n    \n    iVar12 = arg_10h;\n    var_30h = 0;\n    var_2ch = 0;\n    puVar5 = arg_8h + arg_10h;\n    var_118h = puVar5 + -1;\n    bVar3 = false;\n    var_10ch._0_2_ = 0;\n    uVar2 = var_10ch;\n    var_10ch._0_2_ = 0;\n    var_14h = 0;\n    var_114h = 0;\n    var_18h = 0;\n    var_38h = 0;\n    var_28h = NULL;\n    var_108h = NULL;\n    var_4h = puVar5;\n    if ((((in_ECX == NULL) && (in_EDX == NULL)) && (arg_8h == NULL)) && ((arg_ch == -999 && (arg_10h == 0xfffffc19)))) {\n        iVar12 = fcn.00ba49c0(0, 0, 0, 0, 0);\n        return iVar12;\n    }\n    if ((arg_14h & 0xe20f5a6f) != 0) {\n        return -3;\n    }\n    if (((in_ECX == NULL) || (arg_8h == NULL)) || ((arg_18h == NULL && (0 < arg_1ch)))) {\n        return -2;\n    }\n    if (arg_1ch < 0) {\n        return -0xf;\n    }\n    if (arg_ch < 0) {\n        return -0x20;\n    }\n    if ((arg_10h < 0) || (arg_ch < arg_10h)) {\n        return -0x18;\n    }\n    if (*in_ECX != 0x50435245) {\n        return (-(*in_ECX != 0x45524350) & 0x19) - 0x1d;\n    }\n    if ((*(in_ECX + 3) & 2) == 0) {\n        return -0x1c;\n    }\n    uVar15 = in_ECX[2];\n    var_b0h = (uVar15 & 0x800) != 0;\n    if ((arg_14h & 0x8000000) == 0) {\n        if ((arg_14h & 0x8000) == 0) {\n            var_74h = 0;\n        }\n        else {\n            var_74h = 1;\n        }\n    }\n    else {\n        var_74h = 2;\n    }\n    var_10h = in_EDX;\n    var_8h = var_b0h;\n    if ((var_b0h != 0) && ((arg_14h & 0x2000) == 0)) {\n        iVar10 = fcn.00c1ef60(&var_1ch);\n        if (iVar10 != 0) {\n            if (1 < arg_1ch) {\n                *arg_18h = var_1ch;\n                arg_18h[1] = iVar10;\n            }\n            if ((iVar10 < 2) && (1 < var_74h)) {\n                return -0x19;\n            }\n            return -10;\n        }\n        if (((0 < arg_10h) && (arg_10h < arg_ch)) && ((*puVar5 & 0xfc00) == 0xdc00)) {\n            return -0xb;\n        }\n    }\n    var_ch = in_ECX[0xc];\n    var_dch = *(in_ECX + 9);\n    var_d0h = in_ECX + *(in_ECX + 0x22) * 2;\n    var_e0h = *(in_ECX + 0x26);\n    var_3ch = 0;\n    var_fch = 10000000;\n    var_f8h = 10000000;\n    var_54h = 0;\n    if (var_10h != NULL) {\n        uVar6 = *var_10h;\n        if ((uVar6 & 1) != 0) {\n            var_3ch = var_10h[1];\n        }\n        if ((uVar6 & 2) != 0) {\n            var_fch = var_10h[2];\n        }\n        if ((uVar6 & 0x10) != 0) {\n            var_f8h = var_10h[5];\n        }\n        if ((uVar6 & 4) != 0) {\n            var_54h = var_10h[3];\n        }\n        if ((uVar6 & 8) != 0) {\n            var_ch = var_10h[4];\n        }\n    }\n    if (((in_ECX[3] & 0x2000U) != 0) && (in_ECX[4] < var_fch)) {\n        var_fch = in_ECX[4];\n    }\n    if (((in_ECX[3] & 0x4000U) != 0) && (in_ECX[5] < var_f8h)) {\n        var_f8h = in_ECX[5];\n    }\n    if (var_ch == NULL) {\n        var_ch = 0xc34710;\n    }\n    var_20h = ((uVar15 | arg_14h) & 0x10) != 0;\n    var_24h = (in_ECX[3] & 0x100U) != 0;\n    var_34h = (uVar15 & 0x40000) != 0;\n    var_68h = arg_10h;\n    var_8ch = in_ECX + (var_dch * *(in_ECX + 0x26) + *(in_ECX + 0x22)) * 2;\n    var_88h = arg_8h;\n    puVar1 = arg_8h + arg_ch;\n    var_a4h = (uVar15 & 0x20) != 0;\n    var_a8h = (uVar15 & 0x20000000) != 0;\n    var_ach = (uVar15 & 0x2000000) != 0;\n    var_d4h = 0;\n    var_b8h = arg_14h < '\\0';\n    var_b4h = (arg_14h & 0x100) != 0;\n    var_a0h = (arg_14h & 0x400) != 0;\n    var_9ch = (arg_14h & 0x10000000) != 0;\n    var_98h = 0;\n    var_4ch = 0;\n    var_50h = 0;\n    var_58h = 0;\n    var_90h = (in_ECX[3] & 0x1000U) != 0;\n    var_c4h = var_ch;\n    var_c0h = var_ch + 0x80;\n    var_bch = var_ch + 0x1a0;\n    uVar6 = arg_14h & 0x1800000;\n    if (uVar6 == 0) {\n        if ((uVar15 & 0x1800000) == 0) {\ncode_r0x00ba44a5:\n            var_94h = 1;\n        }\n        else {\n            var_94h = uVar15 >> 0x17 & 1;\n        }\n    }\n    else {\n        if (uVar6 == 0x800000) goto code_r0x00ba44a5;\n        if (uVar6 != 0x1000000) {\n            return -0x17;\n        }\n        var_94h = 0;\n    }\n    if ((arg_14h & 0x700000) != 0) {\n        uVar15 = arg_14h;\n    }\n    uVar15 = uVar15 & 0x700000;\n    if (uVar15 != 0) {\n        if (uVar15 < 0x300001) {\n            if (uVar15 == 0x300000) {\n                var_e4h = 2;\n                var_e8h = 0;\n                var_cch = 0xa000d;\n            }\n            else {\n                if (uVar15 == 0x100000) {\n                    uVar4 = 0xd;\n                }\n                else {\n                    if (uVar15 != 0x200000) {\n                        return -0x17;\n                    }\n                    uVar4 = 10;\n                }\n                var_e4h = 1;\n                var_e8h = 0;\n                var_cch = var_cch & 0xffff0000 | uVar4;\n            }\n            goto code_r0x00ba44d1;\n        }\n        if (uVar15 == 0x400000) {\n            var_e8h = 1;\n            goto code_r0x00ba44d1;\n        }\n        if (uVar15 != 0x500000) {\n            return -0x17;\n        }\n    }\n    var_e8h = 2;\ncode_r0x00ba44d1:\n    if ((var_74h == 0) || ((in_ECX[3] & 0x200U) == 0)) {\n        var_f0h = (arg_1ch / 3) * 3;\n        var_1ch = ((arg_1ch / 3) * 6) / 3;\n        uVar4 = *(in_ECX + 8);\n        var_f4h = arg_18h;\n        var_84h = puVar1;\n        if ((uVar4 != 0) && (var_f0h / 3 <= uVar4)) {\n            iVar10 = uVar4 + 1;\n            var_f0h = iVar10 * 3;\n            var_f4h = (**0xc3574c)(iVar10 * 0xc);\n            if (var_f4h == NULL) {\n                return -6;\n            }\n            var_30h = 1;\n        }\n        var_6ch = 0;\n        var_ech = (var_f0h * 2) / 3;\n        if (var_f4h != NULL) {\n            piVar14 = var_f4h + (var_f0h - *(in_ECX + 0x1e));\n            if (var_f4h + (var_f0h - *(in_ECX + 0x1e)) < var_f4h + 2) {\n                piVar14 = var_f4h + 2;\n            }\n            for (piVar11 = var_f4h + var_f0h + -1; piVar14 <= piVar11; piVar11 = piVar11 + -1) {\n                *piVar11 = -1;\n            }\n            var_f4h[1] = -1;\n            *var_f4h = -1;\n        }\n        if (var_20h == 0) {\n            if ((in_ECX[3] & 0x10U) == 0) {\n                if (((var_24h == 0) && (var_3ch != 0)) && (uVar2 = var_10ch,  (*(var_3ch + 4) & 1) != 0)) {\n                    var_38h = var_3ch + 8;\n                }\n            }\n            else {\n                uVar2 = *(in_ECX + 6);\n                uVar15 = uVar2;\n                var_2ch = 1;\n                var_14h = uVar15;\n                if ((in_ECX[3] & 0x20U) != 0) {\n                    if (uVar2 < 0x100) {\n                        var_14h = *(uVar15 + var_c0h);\n                    }\n                    if ((var_8h != 0) && (0x7f < uVar15)) {\n                        var_14h = *(*((*((uVar2 >> 7) + 0xc43b40) * 0x80 + (uVar15 & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                                   0xc32f54) + uVar2;\n                    }\n                }\n            }\n        }\n        var_10ch._0_2_ = uVar2;\n        if ((in_ECX[3] & 0x40U) != 0) {\n            uVar2 = *(in_ECX + 0x1a);\n            var_114h = uVar2;\n            bVar3 = true;\n            var_18h = var_114h;\n            if (in_ECX[3] < '\\0') {\n                if (uVar2 < 0x100) {\n                    var_18h = *(var_114h + var_c0h);\n                }\n                if ((var_8h != 0) && (0x7f < var_114h)) {\n                    var_18h = *(*((*((uVar2 >> 7) + 0xc43b40) * 0x80 + (var_114h & 0x8000007f)) * 2 + 0xc35840) * 8 +\n                               0xc32f54) + uVar2;\n                }\n            }\n        }\ncode_r0x00ba45d0:\n        arg_10h = puVar1;\n        if (var_34h != 0) {\n            arg_10h = var_4h;\n            if (var_8h == 0) {\n                iVar10 = var_e4h;\n                if (var_4h < var_84h) {\n                    do {\n                        if (var_e8h == 0) {\n                            if (((arg_10h <= var_84h + -iVar10) && (*arg_10h == var_cch)) &&\n                               ((iVar10 == 1 || (arg_10h[1] == var_cch._2_2_)))) break;\n                        }\n                        else {\n                            iVar7 = fcn.00ba5e9f(var_84h, &var_e4h, 0);\n                            iVar10 = var_e4h;\n                            if (iVar7 != 0) break;\n                        }\n                        arg_10h = arg_10h + 1;\n                    } while (arg_10h < var_84h);\n                }\n            }\n            else {\n                iVar10 = var_e4h;\n                if (var_4h < var_84h) {\n                    do {\n                        if (var_e8h == 0) {\n                            if (((arg_10h <= var_84h + -iVar10) && (*arg_10h == var_cch)) &&\n                               ((iVar10 == 1 || (arg_10h[1] == var_cch._2_2_)))) break;\n                        }\n                        else {\n                            iVar7 = fcn.00ba5e9f(var_84h, &var_e4h, var_8h);\n                            iVar10 = var_e4h;\n                            if (iVar7 != 0) break;\n                        }\n                        puVar13 = arg_10h + 1;\n                        if ((puVar13 < puVar1) && ((*puVar13 & 0xfc00) == 0xdc00)) {\n                            puVar13 = arg_10h + 2;\n                        }\n                        arg_10h = puVar13;\n                    } while (puVar13 < var_84h);\n                }\n            }\n        }\n        uVar15 = (in_ECX[2] | arg_14h) & 0x4000000;\n        if (uVar15 == 0) {\n            if (var_2ch == 0) {\n                if (var_24h == 0) {\n                    if (var_38h != 0) {\n                        for (; var_4h < arg_10h; var_4h = var_4h + 1) {\n                            uVar6 = *var_4h;\n                            if (0xff < uVar6) {\n                                uVar6 = 0xff;\n                            }\n                            if ((*((uVar6 >> 3) + var_38h) & 1 << (uVar6 & 7)) != 0) break;\n                        }\n                    }\n                }\n                else if (var_88h + iVar12 < var_4h) {\n                    iVar10 = var_e8h;\n                    puVar13 = var_88h;\n                    puVar8 = var_4h;\n                    if (var_8h == 0) {\n                        for (; puVar8 = var_4h,  var_4h < arg_10h; var_4h = var_4h + 1) {\n                            if (iVar10 == 0) {\n                                puVar9 = var_88h;\n                                if (puVar13 + var_e4h <= var_4h) {\n                                    iVar10 = var_e8h;\n                                    if ((var_4h[-var_e4h] == var_cch) &&\n                                       ((var_e4h == 1 ||\n                                        (var_cch._2_2_ = var_cch >> 0x10,  (var_4h + -var_e4h)[1] == var_cch._2_2_))))\n                                    break;\n                                }\n                            }\n                            else {\n                                puVar9 = puVar13;\n                                if ((puVar13 < var_4h) &&\n                                   (iVar7 = fcn.00c1ea2d(puVar13, &var_e4h, 0),  puVar9 = var_88h,  iVar10 = var_e8h, \n                                   puVar8 = var_4h,  iVar7 != 0)) break;\n                            }\n                            puVar13 = puVar9;\n                        }\n                    }\n                    else {\n                        while (var_4h = puVar8,  iVar10 = var_e8h,  puVar8 = var_4h,  var_4h < arg_10h) {\n                            if (var_e8h == 0) {\n                                if (var_88h + var_e4h <= var_4h) {\n                                    if ((var_4h[-var_e4h] == var_cch) &&\n                                       ((var_e4h == 1 ||\n                                        (var_cch._2_2_ = var_cch >> 0x10,  (var_4h + -var_e4h)[1] == var_cch._2_2_))))\n                                    break;\n                                }\n                            }\n                            else if ((var_88h < var_4h) &&\n                                    (iVar7 = fcn.00c1ea2d(var_88h, &var_e4h, var_8h),  iVar10 = var_e8h, \n                                    puVar8 = var_4h,  iVar7 != 0)) break;\n                            puVar8 = var_4h + 1;\n                            iVar10 = var_e8h;\n                            if (arg_10h <= puVar8) break;\n                            var_ch = 0xdc00;\n                            if ((*puVar8 & 0xfc00) == 0xdc00) {\n                                puVar8 = var_4h + 2;\n                            }\n                        }\n                    }\n                    var_4h = puVar8;\n                    if ((var_4h[-1] == 0xd) &&\n                       ((((iVar10 == 1 || (iVar10 == 2)) && (var_4h < arg_10h)) && (*var_4h == 10)))) {\n                        var_4h = var_4h + 1;\n                    }\n                }\n            }\n            else if (var_10ch == var_14h) {\n                for (; (var_4h < arg_10h && (*var_4h != var_10ch)); var_4h = var_4h + 1) {\n                }\n            }\n            else {\n                for (; ((var_4h < arg_10h && (*var_4h != var_10ch)) && (*var_4h != var_14h)); var_4h = var_4h + 1) {\n                }\n            }\n        }\n        if ((uVar15 == 0) && (var_74h == 0)) {\n            if ((var_3ch == 0) || (((*(var_3ch + 4) & 2) == 0 || (*(var_3ch + 0x28) <= puVar1 - var_4h >> 1)))) {\n                if ((bVar3) &&\n                   (((puVar1 - var_4h & 0xfffffffeU) < 2000 && (puVar13 = var_4h + (var_2ch != 0),  var_118h < puVar13))\n                   )) {\n                    if (var_114h == var_18h) {\n                        do {\n                            if (puVar1 <= puVar13) goto code_r0x00ba4874;\n                            uVar2 = *puVar13;\n                            puVar13 = puVar13 + 1;\n                        } while (uVar2 != var_114h);\n                    }\n                    else {\n                        do {\n                            if (puVar1 <= puVar13) goto code_r0x00ba4874;\n                            uVar2 = *puVar13;\n                            puVar13 = puVar13 + 1;\n                        } while ((uVar2 != var_114h) && (uVar2 != (var_18h & 0xffff)));\n                    }\n                    var_118h = puVar13 + -1;\n                    if (puVar1 <= var_118h) goto code_r0x00ba4874;\n                }\n                goto code_r0x00ba4644;\n            }\ncode_r0x00ba4874:\n            iVar7 = 0;\n            goto code_r0x00ba4876;\n        }\ncode_r0x00ba4644:\n        var_100h = 0;\n        var_64h = 0;\n        var_70h = 0;\n        var_d8h = 0;\n        var_80h = var_4h;\n        var_78h = var_4h;\n        iVar7 = fcn.00ba49c0(var_4h, 2, &var_100h, 0, 0);\n        iVar10 = var_1ch;\n        if ((var_98h != 0) && (var_28h == NULL)) {\n            var_28h = var_78h;\n            var_108h = var_4h;\n        }\n        if (iVar7 < 1) {\n            if (iVar7 == 0) {\ncode_r0x00bd7fd0:\n                var_ch = var_4h + 1;\n                var_d4h = 0;\n                if (((var_8h != 0) && (var_ch < puVar1)) && ((*var_ch & 0xfc00) == 0xdc00)) {\n                    var_ch = var_4h + 2;\n                }\n            }\n            else {\n    // switch table (5 cases) at 0xbd81eb\n                switch(iVar7) {\n                default:\n                    goto code_r0x00ba46a5;\n                case -0x3e4:\n                    goto code_r0x00ba4874;\n                case -0x3e3:\n                case -0x3e0:\n                    goto code_r0x00bd7fd0;\n                case -0x3e2:\n                    var_ch = var_80h;\n                    if (var_80h <= var_4h) goto code_r0x00bd7fd0;\n                    break;\n                case -0x3e1:\n                    var_d4h = var_d8h;\n                    var_ch = var_4h;\n                }\n            }\n            iVar7 = 0;\n            if (var_34h != 0) {\n                if (var_e8h == 0) {\n                    if (((var_4h <= var_84h + -var_e4h) && (*var_4h == var_cch)) &&\n                       ((var_e4h == 1 || (var_4h[1] == var_cch._2_2_)))) goto code_r0x00ba4876;\n                }\n                else if ((var_4h < var_84h) && (iVar10 = fcn.00ba5e9f(var_84h, &var_e4h, var_8h),  iVar10 != 0))\n                goto code_r0x00ba4876;\n            }\n            var_4h = var_ch;\n            if ((var_20h != 0) || (puVar1 < var_ch)) goto code_r0x00ba4876;\n            if ((((puVar5 < var_ch) && (var_ch[-1] == 0xd)) && (var_ch < puVar1)) &&\n               (((*var_ch == 10 && ((in_ECX[3] & 0x800U) == 0)) &&\n                ((var_e8h == 1 || ((var_e8h == 2 || (var_e4h == 2)))))))) {\n                var_4h = var_ch + 1;\n            }\n            var_50h = 0;\n            goto code_r0x00ba45d0;\n        }\ncode_r0x00ba46a5:\n        if ((iVar7 == 1) || (iVar7 == -999)) {\n            if (var_30h != 0) {\n                if (3 < var_1ch) {\n                    fcn.00bb1080(arg_18h + 2, var_f4h + 2, var_1ch * 4 + -8);\n                }\n                if (iVar10 < var_70h) {\n                    var_6ch = var_6ch | 0x10000;\n                }\n                (**0xc35748)(var_f4h);\n            }\n            if (((var_6ch & 0x10000) == 0) || (var_70h < iVar10)) {\n                iVar12 = var_70h / 2;\n            }\n            else {\n                iVar12 = 0;\n            }\n            if ((var_70h / 2 <= *(in_ECX + 0x1e)) && (arg_18h != NULL)) {\n                iVar10 = *(in_ECX + 0x1e) * 2 + 2;\n                if (arg_1ch < iVar10) {\n                    iVar10 = arg_1ch;\n                }\n                uVar6 = 0;\n                piVar14 = arg_18h + var_70h;\n                uVar15 = ~-(arg_18h + iVar10 < piVar14) & arg_18h + iVar10 + (3 - piVar14) >> 2;\n                if (uVar15 != 0) {\n                    do {\n                        uVar6 = uVar6 + 1;\n                        *piVar14 = -1;\n                        piVar14 = piVar14 + 1;\n                    } while (uVar6 < uVar15);\n                }\n            }\n            if (arg_1ch < 2) {\n                iVar12 = 0;\n            }\n            else {\n                *arg_18h = var_80h - var_88h >> 1;\n                arg_18h[1] = var_7ch - var_88h >> 1;\n            }\n            if (var_10h != NULL) {\n                if ((*var_10h & 0x20) != 0) {\n                    *var_10h[6] = var_50h;\n                    return iVar12;\n                }\n                return iVar12;\n            }\n            return iVar12;\n        }\ncode_r0x00ba4876:\n        if (var_30h != 0) {\n            (**0xc35748)(var_f4h);\n        }\n        if ((iVar7 == 0) || (iVar7 == -0xc)) {\n            if (var_108h == NULL) {\n                iVar7 = -1;\n            }\n            else {\n                if (1 < arg_1ch) {\n                    *arg_18h = var_28h - arg_8h >> 1;\n                    arg_18h[1] = puVar1 - arg_8h >> 1;\n                    if (2 < arg_1ch) {\n                        arg_18h[2] = var_108h - arg_8h >> 1;\n                    }\n                }\n                iVar7 = -0xc;\n            }\n            if ((var_10h != NULL) && ((*var_10h & 0x20) != 0)) {\n                *var_10h[6] = var_4ch;\n            }\n        }\n    }\n    else {\n        iVar7 = -0xd;\n    }\n    return iVar7;\n}\n",
        "token_count": 7160
    },
    "00ba5b8e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba5b8e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    iVar2 = 0;\n    if ((*(in_ECX + 0x14) != 0) && (*(in_ECX + 0x10) != '\\0')) {\n        fcn.00bb0a88();\n        iVar1 = fcn.00ba5604(&arg_8h, 1);\n        if (0 < iVar1) {\n            if (0 < *(in_ECX + 0x28)) {\n                iVar1 = 0;\n                do {\n                    var_ch = *(*(in_ECX + 0x20) + iVar1);\n                    var_8h = *(*(in_ECX + 0x20) + 4 + iVar1) - var_ch;\n                    fcn.00bb0a15(&var_ch);\n                    iVar2 = iVar2 + 1;\n                    iVar1 = iVar1 + 8;\n                } while (iVar2 < *(in_ECX + 0x28));\n            }\n            return *(in_ECX + 0x28);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 289
    },
    "00ba5c2e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00ba5c2e(int32_t param_1)\n\n{\n    if (*(param_1 + 0x20) != 0) {\n        fcn.00bb106c(*(param_1 + 0x20));\n    }\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 0x2c) = 0;\n    fcn.00b97eec();\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x30) = 0x2800;\n    *(param_1 + 0x34) = 0x2000;\n    return;\n}\n",
        "token_count": 213
    },
    "00ba5d92": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00ba5d92(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00ba5e58(arg_8h);\n    iVar2 = *(*0xc57400 * 4 + 0xc57300);\n    if (iVar2 == 0) {\n        iVar2 = fcn.00bb0ff6(0x20);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            fcn.00b977c7();\n        }\n        *(*0xc57400 * 4 + 0xc57300) = iVar2;\n    }\n    else if (*(iVar2 + 0x14) != 0) {\n        if (*(iVar2 + 0x18) != 0) {\n            (**0xc35748)(*(iVar2 + 0x18));\n        }\n        if (*(iVar2 + 0x14) != 0) {\n            (**0xc35748)(*(iVar2 + 0x14));\n        }\n    }\n    *(iVar2 + 0x10) = uVar1;\n    fcn.00b981a7(arg_8h);\n    *(iVar2 + 0x14) = arg_ch;\n    *(iVar2 + 0x18) = arg_10h;\n    *(iVar2 + 0x1c) = arg_14h;\n    iVar2 = *0xc57400 + 1;\n    *0xc57400 = iVar2 % 0x40;\n    return iVar2 / 0x40;\n}\n",
        "token_count": 373
    },
    "00ba5e9f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba5e9f(int32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t *in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = *in_ECX;\n    if ((arg_10h != 0) && ((uVar1 & 0xfc00) == 0xd800)) {\n        uVar1 = ((uVar1 & 0x3ff) << 10 | in_ECX[1] & 0x3ff) + 0x10000;\n    }\n    uVar2 = 2;\n    if (in_EDX == 2) {\n        if (uVar1 == 10) {\ncode_r0x00be0ce8:\n            *arg_ch = 1;\n            return 1;\n        }\n        if (uVar1 == 0xd) {\n            if ((arg_8h + -2 <= in_ECX) || (in_ECX[1] != 10)) {\n                uVar2 = 1;\n            }\n            *arg_ch = uVar2;\n            return 1;\n        }\n    }\n    else if (9 < uVar1) {\n        if (0xc < uVar1) {\n            if (uVar1 == 0xd) {\n                if ((arg_8h + -2 <= in_ECX) || (in_ECX[1] != 10)) {\n                    uVar2 = 1;\n                }\n                *arg_ch = uVar2;\n                return 1;\n            }\n            if ((uVar1 != 0x85) && (1 < uVar1 - 0x2028)) {\n                return 0;\n            }\n        }\n        goto code_r0x00be0ce8;\n    }\n    return 0;\n}\n",
        "token_count": 415
    },
    "00ba5f57": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba5f57(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    \n    if (*in_ECX != 0) {\n        fcn.00bb106c(*in_ECX);\n    }\n    puVar1 = fcn.00bb0ff6(4);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = arg_8h;\n    }\n    *in_ECX = puVar1;\n    return 1;\n}\n",
        "token_count": 129
    },
    "00ba5f88": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * __cdecl\nfcn.00ba5f88(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    uchar *arg_8h_00;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t **in_ECX;\n    int32_t *piVar8;\n    int32_t iVar9;\n    uchar auStack64 [16];\n    uchar auStack48 [4];\n    int32_t iStack44;\n    \n    fcn.00ba6154();\n    fcn.00ba6154();\n    *(in_ECX + 1) = arg_20h;\n    *(in_ECX + 5) = arg_1ch;\n    fcn.00b981a7(arg_8h);\n    fcn.00b981a7(arg_ch);\n    fcn.00b97d2c(0xc1f910);\n    piVar8 = NULL;\n    in_ECX[0x2d] = 0x1;\n    in_ECX[4] = arg_14h;\n    *(in_ECX + 3) = 1;\n    in_ECX[2] = NULL;\n    in_ECX[0x2e] = NULL;\n    in_ECX[0x33] = NULL;\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    if (in_ECX[4] < 0) {\n        piVar6 = fcn.00bb6ccd(in_ECX[4]);\n        in_ECX[4] = piVar6;\n        *(in_ECX + 3) = 0;\n    }\n    if (in_ECX[4] == 0x4) {\n        fcn.00beb1e0(in_ECX + 5);\n        in_ECX[4] = 0x1;\n    }\n    if ((in_ECX[6] == NULL) && (in_ECX[10] == NULL)) {\n        uVar3 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        fcn.00ba5f57(uVar3);\n        arg_8h_00 = &stack0xffffffa8;\ncode_r0x00ba605c:\n        fcn.00b934c2(arg_8h_00);\n        piVar8 = 0x1;\n    }\n    else {\n        piVar4 = fcn.00b97b52(0);\n        if ((*piVar4 == 0x5b) && (piVar4 = fcn.00b97b52(in_ECX[6] + -1),  *piVar4 == 0x5d)) {\n            uVar3 = 1;\n            iVar7 = in_ECX[6] + -2;\ncode_r0x00be0d93:\n            iVar9 = iVar7;\n            cVar2 = fcn.00bea3e6(in_ECX + 5, &stack0xffffffb0, &stack0xffffffc0, &stack0xffffffac, iVar7);\n            if (cVar2 == '\\0') goto code_r0x00be1067;\n            cVar2 = fcn.00bb0d27();\n            if (cVar2 == '\\0') {\n                cVar2 = fcn.00bb0d27();\n                if (cVar2 != '\\0') {\n                    cVar2 = fcn.00bb0d27();\n                    if (cVar2 == '\\0') goto code_r0x00be103f;\n                    uVar3 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\ncode_r0x00be1015:\n                    fcn.00ba5f57(uVar3);\n                    goto code_r0x00be1020;\n                }\n                cVar2 = fcn.00bb0d27();\n                if (cVar2 != '\\0') {\n                    fcn.00bf5a97();\n                    iVar7 = (*_sym.imp.USER32.dll_IsWindow)(iVar7);\n                    if (iVar7 != 0) goto code_r0x00be1015;\n                    goto code_r0x00ba6068;\n                }\n                cVar2 = fcn.00bb0d27();\n                if (cVar2 == '\\0') {\n                    cVar2 = fcn.00bb0d27();\n                    if (cVar2 != '\\0') {\n                        in_ECX[2] = in_ECX[2] | 8;\ncode_r0x00be0fb2:\n                        fcn.00b981a7(&stack0xffffffac);\n                        iVar7 = iVar9;\n                        goto code_r0x00be0d93;\n                    }\n                    cVar2 = fcn.00bb0d27();\n                    if (cVar2 == '\\0') {\n                        cVar2 = fcn.00bb0d27();\n                        if (cVar2 != '\\0') {\n                            in_ECX[2] = in_ECX[2] | 0x80;\n                            piVar6 = fcn.00bb37ca(uVar3);\n                            in_ECX[0x2f] = piVar6;\n                            iVar7 = iVar9;\n                            goto code_r0x00be0d93;\n                        }\n                        cVar2 = fcn.00bb0d27();\n                        if (cVar2 != '\\0') {\n                            in_ECX[2] = in_ECX[2] | 0x100;\n                            piVar6 = fcn.00bb37ca(uVar3);\n                            in_ECX[0x30] = piVar6;\n                            iVar7 = iVar9;\n                            goto code_r0x00be0d93;\n                        }\n                        cVar2 = fcn.00bb0d27();\n                        if (cVar2 != '\\0') {\n                            in_ECX[2] = in_ECX[2] | 0x200;\n                            piVar6 = fcn.00bb37ca(uVar3);\n                            in_ECX[0x31] = piVar6;\n                            iVar7 = iVar9;\n                            goto code_r0x00be0d93;\n                        }\n                        cVar2 = fcn.00bb0d27();\n                        if (cVar2 != '\\0') {\n                            in_ECX[2] = in_ECX[2] | 0x400;\n                            piVar6 = fcn.00bb37ca(uVar3);\n                            in_ECX[0x32] = piVar6;\n                            iVar7 = iVar9;\n                            goto code_r0x00be0d93;\n                        }\n                        cVar2 = fcn.00bb0d27();\n                        if (cVar2 != '\\0') {\n                            in_ECX[2] = in_ECX[2] | 0x20;\n                            piVar6 = fcn.00bb37ca(uVar3);\n                            in_ECX[0x2d] = piVar6;\n                            iVar7 = iVar9;\n                            goto code_r0x00be0d93;\n                        }\n                        cVar2 = fcn.00bb0d27();\n                        if (cVar2 != '\\0') {\n                            cVar2 = fcn.00bb0d27();\n                            if (cVar2 == '\\0') goto code_r0x00be103f;\n                            in_ECX[2] = in_ECX[2] | 0x40;\n                            iVar7 = iVar9;\n                            goto code_r0x00be0d93;\n                        }\n                        cVar2 = fcn.00bb0d27();\n                        if (cVar2 != '\\0') {\n                            if ((in_ECX[2] & 2) == 0) {\n                                in_ECX[2] = in_ECX[2] | 1;\n                                goto code_r0x00be0fb2;\n                            }\n                            piVar8 = 0xfffffffc;\n                            goto code_r0x00ba6068;\n                        }\n                        cVar2 = fcn.00bea36d();\n                        iVar7 = iVar9;\n                        if (cVar2 == '\\0') goto code_r0x00be0d93;\n                        goto code_r0x00be103f;\n                    }\n                    in_ECX[2] = in_ECX[2] | 0x10;\n                    fcn.00ba5c2e();\n                }\n                else {\n                    if ((in_ECX[2] & 1) != 0) {\n                        piVar8 = 0xfffffffd;\n                        goto code_r0x00ba6068;\n                    }\n                    in_ECX[2] = in_ECX[2] | 2;\n                    fcn.00ba5c2e();\n                }\n                iVar5 = fcn.00ba5c72(&stack0xffffffac);\n                iVar7 = iVar9;\n                if (iVar5 != 0) goto code_r0x00be0fdd;\n                goto code_r0x00be0d93;\n            }\n            cVar2 = fcn.00bb0d27();\n            if (cVar2 != '\\0') {\n                if (**in_ECX == 0) goto code_r0x00ba6068;\ncode_r0x00be1020:\n                arg_8h_00 = &stack0xffffffac;\n                goto code_r0x00ba605c;\n            }\ncode_r0x00be103f:\n            piVar8 = 0xffffffff;\n            goto code_r0x00ba6068;\n        }\ncode_r0x00be1067:\n        if (iStack44 != 0) {\n            fcn.00b981a7(&stack0xffffffd0);\n        }\n        if (in_ECX[2] == NULL) {\n            in_ECX[2] = 0x1;\n        }\n        in_ECX[2] = in_ECX[2] | 4;\n        pcVar1 = _sym.imp.USER32.dll_CharUpperBuffW;\n        if (*(in_ECX + 3) == '\\0') {\n            fcn.00b97faf();\n            (*pcVar1)(in_ECX[9], in_ECX[10]);\n        }\n        if (((*(in_ECX + 2) & 1) != 0) && (*(in_ECX + 3) == '\\0')) {\n            fcn.00b97faf();\n            (*pcVar1)(in_ECX[5], in_ECX[6]);\n        }\n        if (arg_18h == '\\0') {\n            (*_sym.imp.USER32.dll_EnumWindows)(fcn.00beb397);\n        }\n        else {\n            uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n            (*_sym.imp.USER32.dll_EnumChildWindows)(uVar3);\n        }\n        fcn.00beb144(0xbe10f0);\n        fcn.00ba6154();\n        if (0 < in_ECX[0x33]) {\n            fcn.00ba5f57(***(arg_10h + 4));\n        }\n        piVar8 = in_ECX[0x33];\n    }\ncode_r0x00ba6068:\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return piVar8;\ncode_r0x00be0fdd:\n    piVar8 = 0xfffffffe;\n    goto code_r0x00ba6068;\n}\n",
        "token_count": 2558
    },
    "00ba608e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00ba608e(int32_t *param_1)\n\n{\n    uint unaff_ESI;\n    \n    if (*param_1 != 0) {\n        fcn.00bb106c(*param_1);\n    }\n    fcn.00ba6181();\n    fcn.00b95a64();\n    fcn.00ba5c2e();\n    fcn.00b95a64();\n    fcn.00ba5c2e();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    *param_1[8] = *param_1[8] + -1;\n    if (*param_1[8] == 0) {\n        fcn.00bb106c(param_1[5], unaff_ESI);\n        fcn.00bb106c(param_1[8]);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00bb2f95": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bb2f95(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0xc54204, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00bb8d68();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.00bb8d7b(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "00ba61c3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba61c3(uint *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_ECX;\n    \n    cVar1 = fcn.00ba619a(*in_ECX);\n    if ((cVar1 == '\\0') && (iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0xc, 0, *arg_8h),  iVar2 != 0)) {\n        if (arg_ch != '\\0') {\n            uVar3 = (*_sym.imp.USER32.dll_GetParent)(*in_ECX, 0, 1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(uVar3);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 185
    },
    "00ba61fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00ba61fe(int32_t *param_1)\n\n{\n    uint unaff_ESI;\n    int32_t iVar1;\n    uint unaff_EDI;\n    \n    if (*param_1 != 0) {\n        fcn.00bb106c(*param_1);\n    }\n    fcn.00ba5c2e();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    iVar1 = 0;\n    do {\n        if (param_1[iVar1 * 2 + 3] != 0) {\n            (*_sym.imp.KERNEL32.dll_VirtualFreeEx)\n                      (param_1[iVar1 * 2 + 2], param_1[iVar1 * 2 + 3], 0, 0x8000, unaff_EDI, unaff_ESI);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(param_1[iVar1 * 2 + 2]);\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x10);\n    return;\n}\n",
        "token_count": 270
    },
    "00ba62f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00ba62f2(char **arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t *in_ECX;\n    int32_t var_bch;\n    int32_t var_b8h;\n    int32_t var_b4h;\n    int32_t var_b0h;\n    uint var_28h;\n    int32_t var_8h;\n    \n    var_8h = 0;\n    *arg_8h = NULL;\n    if ((in_ECX == NULL) || (*in_ECX != 0x50435245)) {\n        *arg_8h = \"argument is not a compiled regular expression\";\n        return NULL;\n    }\n    if ((*(in_ECX + 3) & 2) == 0) {\n        *arg_8h = \"argument not compiled in 16 bit mode\";\n        return NULL;\n    }\n    uVar1 = *(in_ECX + 9);\n    uVar2 = *(in_ECX + 0x26);\n    uVar3 = *(in_ECX + 0x22);\n    if (((*(in_ECX + 2) & 0x10) == 0) && ((in_ECX[3] & 0x110U) == 0)) {\n        var_8h = in_ECX[0xc];\n        if (var_8h == 0) {\n            fcn.00bb084d(0xb, &var_8h);\n        }\n        var_b8h = var_8h + 0x100;\n        var_b4h = var_8h + 0x200;\n        var_b0h = var_8h + 0x340;\n        var_bch = var_8h;\n        fcn.00bb3020(&var_28h, 0, 0x20);\n        iVar4 = fcn.00bb040a(in_ECX[2] >> 0xb & 1, &var_bch);\n        if (iVar4 == 1) {\n            var_8h = 1;\n        }\n        else {\n            var_8h = 0;\n            if (iVar4 == 3) goto code_r0x00ba647d;\n        }\n    }\n    iVar4 = fcn.00ba649e(in_ECX + (uVar2 * uVar1 + uVar3) * 2, in_ECX[2], 0);\n    if (iVar4 != -3) {\n        if (iVar4 == -2) {\n            *arg_8h = \"internal error: missing capturing bracket\";\n            return NULL;\n        }\n        if ((var_8h == 0) && (iVar4 < 1)) {\n            return NULL;\n        }\n        puVar5 = (**0xc3574c)(0x4c);\n        if (puVar5 == NULL) {\n            *arg_8h = \"failed to get memory\";\n            return NULL;\n        }\n        *puVar5 = 1;\n        puVar5[1] = puVar5 + 8;\n        puVar5[8] = 0x2c;\n        puVar5[9] = 0;\n        if (var_8h == 0) {\n            fcn.00bb3020(puVar5 + 10, 0, 0x20);\n        }\n        else {\n            puVar5[9] = 1;\n            fcn.00bb1080(puVar5 + 10, &var_28h);\n        }\n        if (iVar4 < 1) {\n            puVar5[0x12] = 0;\n            return puVar5;\n        }\n        puVar5[9] = puVar5[9] | 2;\n        puVar5[0x12] = iVar4;\n        return puVar5;\n    }\ncode_r0x00ba647d:\n    *arg_8h = \"internal error: opcode not recognized\";\n    return NULL;\n}\n",
        "token_count": 899
    },
    "00ba649e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00ba649e(int32_t arg_8h, uint32_t arg_ch, int32_t **arg_10h)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    uint16_t uVar6;\n    int32_t in_ECX;\n    int32_t *piVar7;\n    uint16_t *in_EDX;\n    int32_t iVar8;\n    int32_t *piVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t **var_24h;\n    int32_t *var_20h;\n    uint32_t var_1ch;\n    uint16_t *var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = -1;\n    var_8h = 0;\n    var_10h = arg_ch >> 0xb & 1;\n    iVar8 = 0;\n    uVar2 = *in_EDX;\n    var_4h = 0;\n    piVar9 = in_EDX + 2;\n    var_ch = in_ECX;\n    if (uVar2 == 0x85) goto code_r0x00ba64f1;\n    if (uVar2 == 0x8a) goto code_r0x00ba64f1;\n    if (uVar2 == 0x86) goto code_r0x00ba64f1;\n    uVar6 = 0x8b;\ncode_r0x00ba6533:\n    if (uVar2 != uVar6) goto code_r0x00ba64f4;\ncode_r0x00ba64f1:\n    piVar9 = piVar9 + 2;\ncode_r0x00ba64f4:\n    iVar11 = var_4h;\n    uVar10 = *piVar9;\n    // switch table (162 cases) at 0xba6632\n    switch(uVar10) {\n    case 0:\n    case 0x77:\n    case 0x78:\n    case 0x79:\n    case 0x7a:\n    case 0x7b:\n        if ((var_14h < 0) || ((iVar8 < var_14h && (var_8h == 0)))) {\n            var_14h = iVar8;\n        }\n        if (*piVar9 != 0x77) {\n            return var_14h;\n        }\n        iVar8 = 0;\n        piVar9 = piVar9 + 1;\n        var_8h = 0;\n        var_4h = 0;\n        goto code_r0x00ba64f4;\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x76:\n    case 0x7c:\n    case 0x8d:\n    case 0x8e:\n    case 0x8f:\n    case 0x90:\n    case 0x91:\n        goto code_r0x00be11a6;\n    case 3:\n    case 0x96:\n    case 0x98:\n    case 0x9a:\n    case 0x9c:\n    case 0x9d:\n    case 0xa0:\n        goto code_r0x00ba6605;\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n    case 0x11:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n    case 0x16:\n        goto code_r0x00ba64ed;\n    case 0xe:\n        if (var_10h != 0) {\n            return -1;\n        }\n        goto code_r0x00ba64ed;\n    case 0xf:\n    case 0x10:\n        piVar9 = piVar9 + 1;\n        goto code_r0x00ba64ed;\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n    case 0x23:\n    case 0x24:\n    case 0x2b:\n    case 0x30:\n    case 0x31:\n    case 0x38:\n    case 0x3d:\n    case 0x3e:\n    case 0x45:\n    case 0x4a:\n    case 0x4b:\n    case 0x52:\n        iVar8 = iVar8 + 1;\n        piVar9 = piVar9 + 1;\n        var_4h = iVar8;\n        break;\n    case 0x21:\n    case 0x22:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n    case 0x28:\n    case 0x2a:\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x37:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n    case 0x3c:\n    case 0x3f:\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x44:\n    case 0x46:\n    case 0x47:\n    case 0x48:\n    case 0x49:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x51:\n    case 0x53:\n    case 0x54:\n        piVar9 = piVar9 + *(uVar10 + 0xc35750) * 2;\n        break;\n    case 0x29:\n    case 0x36:\n    case 0x43:\n    case 0x50:\n        iVar8 = iVar8 + *(piVar9 + 2);\n        piVar9 = piVar9 + 6;\n        var_4h = iVar8;\n        break;\n    case 0x55:\n    case 0x56:\n    case 0x59:\n    case 0x5a:\n    case 0x5e:\n    case 0x60:\n        uVar2 = *(piVar9 + 2);\n        goto joined_r0x00be123a;\n    case 0x57:\n    case 0x58:\n    case 0x5f:\n        iVar8 = iVar8 + 1;\n        var_4h = iVar8;\n        if ((*(piVar9 + 2) == 0x10) || (*(piVar9 + 2) == 0xf)) {\n            uVar10 = 4;\n        }\n        else {\n            uVar10 = 2;\n        }\n        goto code_r0x00ba660c;\n    case 0x5b:\n    case 0x5c:\n    case 0x61:\n        uVar2 = *(piVar9 + 1);\njoined_r0x00be123a:\n        if ((uVar2 == 0x10) || (uVar2 == 0xf)) {\n            piVar9 = piVar9 + 1;\n        }\ncode_r0x00ba6605:\n        uVar10 = *(uVar10 + 0xc35750);\n        goto code_r0x00ba660c;\n    case 0x5d:\n        uVar2 = *(piVar9 + 2);\n        if ((*(piVar9 + 1) == 0x10) || (*(piVar9 + 1) == 0xf)) {\n            iVar11 = 2;\n        }\n        else {\n            iVar11 = 0;\n        }\n        piVar9 = piVar9 + iVar11 * 2;\n        goto code_r0x00be1219;\n    default:\n        return -3;\n    case 0x6e:\n    case 0x6f:\n    case 0x70:\n        if (uVar10 == 0x70) {\n            piVar9 = piVar9 + *(piVar9 + 2) * 2;\n        }\n        else {\n            piVar9 = piVar9 + 0x22;\n        }\n    // switch table (12 cases) at 0xba6736\n        switch(*piVar9) {\n        case 0x62:\n        case 99:\n        case 0x66:\n        case 0x67:\n        case 0x6a:\n        case 0x6c:\n            goto code_r0x00ba64f1;\n        case 100:\n        case 0x65:\n        case 0x6b:\n            goto code_r0x00ba64ed;\n        case 0x68:\n        case 0x69:\n        case 0x6d:\n            uVar2 = *(piVar9 + 2);\ncode_r0x00be1219:\n            iVar8 = iVar8 + uVar2;\n            piVar9 = piVar9 + 6;\n            var_4h = iVar8;\n            break;\n        default:\n            iVar8 = iVar8 + 1;\n            var_4h = iVar8;\n        }\n        goto code_r0x00ba64f4;\n    case 0x71:\n    case 0x72:\n        if ((arg_ch & 0x2000000) == 0) {\n            piVar3 = fcn.00c1db51(*(piVar9 + 2));\n            iVar8 = var_4h;\n            piVar7 = piVar3;\n            if (piVar3 == NULL) {\n                return -2;\n            }\n            do {\n                piVar7 = piVar7 + *(piVar7 + 2) * 2;\n            } while (*piVar7 == 0x77);\n            if ((piVar3 < piVar9) && (piVar9 < piVar7)) {\ncode_r0x00be1369:\n                var_8h = 1;\n                goto code_r0x00be1370;\n            }\n            ppiVar4 = arg_10h;\n            if (arg_10h != NULL) {\n                do {\n                    if (ppiVar4[1] == piVar3) break;\n                    ppiVar4 = *ppiVar4;\n                } while (ppiVar4 != NULL);\n                if (ppiVar4 != NULL) goto code_r0x00be1369;\n            }\n            var_24h = arg_10h;\n            var_20h = piVar3;\n            iVar11 = fcn.00ba649e(arg_8h, arg_ch, &var_24h);\n        }\n        else {\ncode_r0x00be1370:\n            iVar11 = 0;\n        }\n        piVar9 = piVar9 + 1;\n        goto code_r0x00be1375;\n    case 0x73:\n    case 0x74:\n        if ((arg_ch & 0x2000000) == 0) {\n            var_18h = var_ch + (*(piVar9 + 2) * *(var_ch + 0x24) + *(var_ch + 0x22)) * 2;\n            iVar11 = 0x7fffffff;\n            uVar10 = *(piVar9 + 1);\n            while (0 < uVar10) {\n                var_1ch = uVar10 - 1;\n                piVar3 = fcn.00c1db51(*var_18h);\n                iVar8 = var_4h;\n                piVar7 = piVar3;\n                if (piVar3 == NULL) {\n                    return -2;\n                }\n                do {\n                    piVar7 = piVar7 + *(piVar7 + 2) * 2;\n                } while (*piVar7 == 0x77);\n                if ((piVar3 < piVar9) && (piVar9 < piVar7)) {\ncode_r0x00be1319:\n                    var_8h = 1;\n                    goto code_r0x00be1320;\n                }\n                ppiVar4 = arg_10h;\n                if (arg_10h != NULL) {\n                    do {\n                        if (ppiVar4[1] == piVar3) break;\n                        ppiVar4 = *ppiVar4;\n                    } while (ppiVar4 != NULL);\n                    if (ppiVar4 != NULL) goto code_r0x00be1319;\n                }\n                var_24h = arg_10h;\n                var_20h = piVar3;\n                iVar5 = fcn.00ba649e(arg_8h, arg_ch, &var_24h);\n                if (iVar5 < iVar11) {\n                    iVar11 = iVar5;\n                }\n                var_18h = var_18h + *(var_ch + 0x24);\n                uVar10 = var_1ch;\n            }\n        }\n        else {\ncode_r0x00be1320:\n            iVar11 = 0;\n        }\n        piVar9 = piVar9 + 6;\ncode_r0x00be1375:\n    // switch table (12 cases) at 0xbe1481\n        switch(*piVar9) {\n        case 0x62:\n        case 99:\n        case 0x66:\n        case 0x67:\n        case 0x6a:\n        case 0x6c:\n            uVar10 = 0;\n            goto code_r0x00be13ca;\n        case 100:\n        case 0x65:\n        case 0x6b:\n            uVar10 = 1;\ncode_r0x00be13ca:\n            piVar9 = piVar9 + 2;\n            break;\n        case 0x68:\n        case 0x69:\n        case 0x6d:\n            uVar10 = *(piVar9 + 2);\n            piVar9 = piVar9 + 6;\n            break;\n        default:\n            uVar10 = 1;\n        }\n        iVar8 = iVar8 + uVar10 * iVar11;\n        var_4h = iVar8;\n        goto code_r0x00ba64f4;\n    case 0x75:\n        piVar7 = arg_8h + *(piVar9 + 2) * 2;\n        piVar3 = piVar7;\n        do {\n            piVar3 = piVar3 + *(piVar3 + 2) * 2;\n        } while (*piVar3 == 0x77);\n        if ((piVar7 < piVar9) && (piVar9 < piVar3)) {\ncode_r0x00be1423:\n            var_8h = 1;\n        }\n        else {\n            ppiVar4 = arg_10h;\n            if (arg_10h != NULL) {\n                do {\n                    if (ppiVar4[1] == piVar7) break;\n                    ppiVar4 = *ppiVar4;\n                } while (ppiVar4 != NULL);\n                if (ppiVar4 != NULL) goto code_r0x00be1423;\n            }\n            var_24h = arg_10h;\n            var_20h = piVar7;\n            var_4h = fcn.00ba649e(arg_8h, arg_ch, &var_24h);\n            var_4h = iVar11 + var_4h;\n        }\n        goto code_r0x00ba658e;\n    case 0x7d:\n    case 0x7e:\n    case 0x7f:\n    case 0x80:\n        do {\n            piVar9 = piVar9 + *(piVar9 + 2) * 2;\n            iVar8 = var_4h;\n        } while (*piVar9 == 0x77);\ncode_r0x00be11a6:\n        uVar10 = *(*piVar9 + 0xc35750);\ncode_r0x00ba660c:\n        piVar9 = piVar9 + uVar10 * 2;\n        goto code_r0x00ba64f4;\n    case 0x81:\n    case 0x82:\n    case 0x83:\n    case 0x84:\n    case 0x85:\n    case 0x86:\n    case 0x88:\n    case 0x89:\n    case 0x8a:\n    case 0x8b:\n        goto code_r0x00ba65bd;\n    case 0x87:\n    case 0x8c:\n        puVar1 = piVar9 + *(piVar9 + 2) * 2;\n        if (*puVar1 == 0x77) {\ncode_r0x00ba65bd:\n            var_4h = fcn.00ba649e(arg_8h, arg_ch, arg_10h);\n            if (var_4h < 0) {\n                return var_4h;\n            }\n            var_4h = iVar8 + var_4h;\n            do {\n                piVar9 = piVar9 + *(piVar9 + 2) * 2;\n            } while (*piVar9 == 0x77);\n            goto code_r0x00ba658e;\n        }\n        piVar9 = puVar1 + 2;\n        goto code_r0x00ba64f4;\n    case 0x92:\n    case 0x93:\n    case 0x94:\n    case 0xa1:\n        piVar9 = piVar9 + *(uVar10 + 0xc35750) * 2;\n        do {\n            piVar9 = piVar9 + *(piVar9 + 2) * 2;\n        } while (*piVar9 == 0x77);\ncode_r0x00ba658e:\n        piVar9 = piVar9 + 1;\n        iVar8 = var_4h;\n        goto code_r0x00ba64f4;\n    case 0x95:\n    case 0x97:\n    case 0x99:\n    case 0x9b:\n        goto code_r0x00be1461;\n    case 0x9e:\n    case 0x9f:\n        return -1;\n    }\n    if (var_10h != 0) {\n        uVar2 = *(piVar9 + -2) & 0xfc00;\n        uVar6 = 0xd800;\n        goto code_r0x00ba6533;\n    }\n    goto code_r0x00ba64f4;\ncode_r0x00be1461:\n    piVar9 = piVar9 + (*(uVar10 + 0xc35750) + *(piVar9 + 2)) * 2;\n    goto code_r0x00ba64f4;\ncode_r0x00ba64ed:\n    iVar8 = iVar8 + 1;\n    var_4h = iVar8;\n    goto code_r0x00ba64f1;\n}\n",
        "token_count": 4344
    },
    "00ba674e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba674e(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *in_ECX;\n    uint32_t in_EDX;\n    int32_t iVar3;\n    bool bVar4;\n    ulong uVar5;\n    uint var_4h;\n    \n    do {\n        uVar5 = fcn.00ba8673();\n        iVar3 = uVar5 >> 0x20;\n        iVar1 = *uVar5;\n        iVar2 = arg_ch;\n        if ((((((iVar1 == 0x83) || (iVar1 == 0x84)) || (iVar1 == 0x88)) ||\n             (((iVar1 == 0x89 || (iVar1 == 0x85)) || ((iVar1 == 0x86 || ((iVar1 == 0x8a || (iVar1 == 0x8b)))))))) ||\n            (iVar1 == 0x7d)) || (iVar1 == 0x87)) {\ncode_r0x00be14da:\n            iVar2 = fcn.00ba674e(arg_8h, iVar2);\n            if (iVar2 == 0) {\n                return 0;\n            }\n        }\n        else {\n            if ((iVar1 == 0x81) || (iVar1 == 0x82)) {\n                iVar2 = arg_ch + 1;\n                goto code_r0x00be14da;\n            }\n            if (((iVar1 == 0x55) || (iVar1 == 0x56)) || (iVar1 == 0x5e)) {\n                if (uVar5[1] != 0xd) {\n                    return 0;\n                }\n                if ((*(arg_8h + 0x50) & in_EDX) != 0) {\n                    return 0;\n                }\n                if (iVar3 < arg_ch) {\n                    return 0;\n                }\n                bVar4 = *(arg_8h + 0x70) == iVar3;\ncode_r0x00ba6810:\n                if (!bVar4) {\n                    return 0;\n                }\n            }\n            else if ((iVar1 != 1) && (iVar1 != 2)) {\n                bVar4 = iVar1 == 0x1b;\n                goto code_r0x00ba6810;\n            }\n        }\n        in_ECX = in_ECX + in_ECX[1];\n        if (*in_ECX != 0x77) {\n            return 1;\n        }\n    } while( true );\n}\n",
        "token_count": 569
    },
    "00ba6843": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.00ba6843(uint noname_0, uint *arg_ch, int32_t *arg_10h)\n\n{\n    int16_t iVar1;\n    ushort uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint uVar7;\n    uint *extraout_ECX;\n    int32_t iVar8;\n    uint *extraout_EDX;\n    uint *puVar9;\n    uint32_t uVar10;\n    uint *unaff_EDI;\n    int32_t iVar11;\n    bool bVar12;\n    uint var_11c0h;\n    uint var_1c0h;\n    uint var_d0h;\n    int32_t var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint *var_c0h;\n    uint *var_bch;\n    uint *var_b8h;\n    int16_t *var_b4h;\n    uint *var_b0h;\n    uint var_ach;\n    uint *var_a8h;\n    int32_t var_a4h;\n    int32_t var_a0h;\n    int32_t var_9ch;\n    int32_t var_98h;\n    int32_t var_94h;\n    uint var_90h;\n    uint var_8ch;\n    int32_t var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint *var_70h;\n    uint32_t var_6ch;\n    uint var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint uStackY72;\n    uint *var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    int32_t *var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0xba6850;\n    fcn.00bc1b90();\n    var_24h = 0xffffffff;\n    var_20h = 0xffffffff;\n    var_8h = 0;\n    var_34h = 1;\n    var_4h = 0;\n    var_18h = NULL;\n    if (arg_ch == NULL) {\n        return NULL;\n    }\n    *arg_ch = 0;\n    var_28h = extraout_ECX;\n    var_14h = extraout_EDX;\n    var_ch = unaff_EDI;\n    if (arg_10h == NULL) goto code_r0x00be19f1;\n    *arg_10h = 0;\n    var_d0h = 0xc34710;\n    var_cch = 0xc34810;\n    var_c8h = 0xc34910;\n    var_c4h = 0xc34a50;\n    if ((extraout_EDX & 0xd8008580) == 0) {\n        var_18h = (extraout_EDX & 0x10000) != 0;\n        var_6ch = 0;\n        iVar1 = *extraout_ECX;\n        var_10h = extraout_ECX;\n        puVar5 = extraout_EDX;\n        iVar8 = var_4h;\n        do {\n            puVar6 = var_10h;\n            if ((iVar1 != 0x28) || (*(var_10h + iVar8 * 2 + 2) != 0x2a)) goto code_r0x00ba68e4;\n            var_10h = 0x6;\n            var_14h = 0xbe1519;\n            var_4h = iVar8;\n            iVar11 = fcn.00ba8395(6);\n            if (iVar11 == 0) {\n                iVar8 = iVar8 + 8;\ncode_r0x00be1526:\n                puVar5 = puVar5 | 0x800;\n                var_14h = puVar5;\n            }\n            else {\n                var_10h = 0x4;\n                var_14h = 0xbe153f;\n                iVar11 = fcn.00ba8395(4);\n                if (iVar11 == 0) {\n                    iVar8 = iVar8 + 6;\n                    goto code_r0x00be1526;\n                }\n                var_10h = 0x4;\n                var_14h = 0xbe1552;\n                iVar11 = fcn.00ba8395(4);\n                if (iVar11 == 0) {\n                    iVar8 = iVar8 + 6;\n                    puVar5 = puVar5 | 0x20000000;\n                    var_14h = puVar5;\n                }\n                else {\n                    var_10h = 0x10;\n                    var_14h = 0xbe1573;\n                    iVar11 = fcn.00ba8395(0x10);\n                    if (iVar11 == 0) {\n                        iVar8 = iVar8 + 0x12;\n                        puVar5 = puVar5 | 0x20000;\n                        var_14h = puVar5;\n                    }\n                    else {\n                        var_10h = 0xd;\n                        var_14h = 0xbe1594;\n                        iVar11 = fcn.00ba8395(0xd);\n                        if (iVar11 == 0) {\n                            iVar8 = iVar8 + 0xf;\n                            puVar5 = puVar5 | 0x4000000;\n                            var_14h = puVar5;\n                        }\n                        else {\n                            var_10h = 0xc;\n                            var_14h = 0xbe15b5;\n                            puVar6 = fcn.00ba8395(0xc);\n                            if (puVar6 == NULL) {\n                                iVar8 = iVar8 + 0xe;\n                                var_10h = *(var_10h + iVar8 * 2);\n                                var_14h = 0xbe15cd;\n                                var_ch = puVar6;\n                                iVar11 = fcn.00bb3e9f(var_10h);\n                                uVar10 = var_10h;\n                                uVar4 = var_10h;\n                                for (puVar9 = var_ch; (iVar11 != 0 && (puVar5 = var_14h,  puVar9 < 0x19999999));\n                                    puVar9 = uVar3 + puVar9 * 10 + -0x30) {\n                                    uVar3 = *(uVar10 + iVar8 * 2);\n                                    iVar8 = iVar8 + 1;\n                                    var_10h = *(uVar10 + iVar8 * 2);\n                                    var_14h = 0xbe15f7;\n                                    iVar11 = fcn.00bb3e9f(var_10h);\n                                    puVar5 = var_14h;\n                                    uVar4 = var_10h;\n                                }\n                                var_10h = 0x29;\n                                puVar6 = var_10h;\n                                var_ch = puVar9;\n                                if (*(uVar4 + iVar8 * 2) != 0x29) goto code_r0x00ba68e4;\n                                if (puVar9 < var_24h) {\n                                    var_6ch = var_6ch | 0x2000;\n                                    var_24h = puVar9;\n                                }\n                            }\n                            else {\n                                var_10h = 0x10;\n                                var_14h = 0xbe1641;\n                                puVar6 = fcn.00ba8395(0x10);\n                                if (puVar6 != NULL) {\n                                    var_10h = 0x3;\n                                    var_14h = 0xbe16cc;\n                                    iVar11 = fcn.00ba8395(3);\n                                    if (iVar11 == 0) {\n                                        iVar8 = iVar8 + 5;\n                                        uVar4 = 0x100000;\ncode_r0x00be174d:\n                                        uVar10 = puVar5 & 0xff8fffff;\n                                    }\n                                    else {\n                                        var_10h = 0x3;\n                                        var_14h = 0xbe16e9;\n                                        iVar11 = fcn.00ba8395(3);\n                                        if (iVar11 == 0) {\n                                            iVar8 = iVar8 + 5;\n                                            uVar4 = 0x200000;\n                                            goto code_r0x00be174d;\n                                        }\n                                        var_10h = 0x5;\n                                        var_14h = 0xbe1706;\n                                        iVar11 = fcn.00ba8395(5);\n                                        if (iVar11 == 0) {\n                                            iVar8 = iVar8 + 7;\n                                            uVar4 = 0x300000;\n                                            goto code_r0x00be174d;\n                                        }\n                                        var_10h = 0x4;\n                                        var_14h = 0xbe1723;\n                                        iVar11 = fcn.00ba8395(4);\n                                        if (iVar11 == 0) {\n                                            iVar8 = iVar8 + 6;\n                                            uVar4 = 0x400000;\n                                            goto code_r0x00be174d;\n                                        }\n                                        var_10h = 0x8;\n                                        var_14h = 0xbe1740;\n                                        iVar11 = fcn.00ba8395(8);\n                                        if (iVar11 == 0) {\n                                            iVar8 = iVar8 + 10;\n                                            uVar4 = 0x500000;\n                                            goto code_r0x00be174d;\n                                        }\n                                        var_10h = 0xc;\n                                        var_14h = 0xbe1763;\n                                        iVar11 = fcn.00ba8395(0xc);\n                                        if (iVar11 == 0) {\n                                            uVar4 = 0x800000;\n                                        }\n                                        else {\n                                            var_10h = 0xc;\n                                            var_14h = 0xbe177d;\n                                            iVar11 = fcn.00ba8395(0xc);\n                                            puVar6 = var_10h;\n                                            if (iVar11 != 0) goto code_r0x00ba68e4;\n                                            uVar4 = 0x1000000;\n                                        }\n                                        iVar8 = iVar8 + 0xe;\n                                        uVar10 = puVar5 & 0xfe7fffff;\n                                    }\n                                    puVar5 = uVar10 | uVar4;\n                                    var_14h = puVar5;\n                                    goto code_r0x00be1795;\n                                }\n                                iVar8 = iVar8 + 0x12;\n                                var_10h = *(var_10h + iVar8 * 2);\n                                var_14h = 0xbe1659;\n                                var_ch = puVar6;\n                                iVar11 = fcn.00bb3e9f(var_10h);\n                                uVar10 = var_10h;\n                                uVar4 = var_10h;\n                                for (puVar9 = var_ch; (iVar11 != 0 && (puVar5 = var_14h,  puVar9 < 0x19999999));\n                                    puVar9 = uVar3 + puVar9 * 10 + -0x30) {\n                                    uVar3 = *(uVar10 + iVar8 * 2);\n                                    iVar8 = iVar8 + 1;\n                                    var_10h = *(uVar10 + iVar8 * 2);\n                                    var_14h = 0xbe1683;\n                                    iVar11 = fcn.00bb3e9f(var_10h);\n                                    puVar5 = var_14h;\n                                    uVar4 = var_10h;\n                                }\n                                var_10h = 0x29;\n                                puVar6 = var_10h;\n                                var_ch = puVar9;\n                                if (*(uVar4 + iVar8 * 2) != 0x29) goto code_r0x00ba68e4;\n                                if (puVar9 < var_20h) {\n                                    var_6ch = var_6ch | 0x4000;\n                                    var_20h = puVar9;\n                                }\n                            }\n                            var_10h = 0x29;\n                            iVar8 = iVar8 + 1;\n                        }\n                    }\n                }\n            }\ncode_r0x00be1795:\n            iVar1 = *(var_10h + iVar8 * 2);\n        } while( true );\n    }\n    var_10h = 0x11;\ncode_r0x00be19e4:\n    *arg_10h = var_28h - var_10h >> 1;\ncode_r0x00be19f1:\n    var_10h = 0xbe19f8;\n    uVar7 = fcn.00c1e163();\n    *arg_ch = uVar7;\n    return NULL;\ncode_r0x00ba68e4:\n    if ((puVar5 & 0x800) == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = 1;\n        if (var_18h != NULL) goto code_r0x00be19f1;\n        if ((puVar5 & 0x2000) == 0) {\n            var_14h = 0xbe17c2;\n            var_10h = arg_10h;\n            var_8h = fcn.00c1ef60(arg_10h);\n            if (var_8h != 0) goto code_r0x00be19f1;\n        }\n    }\n    if ((puVar5 & 0x1800000) == 0x1800000) {\ncode_r0x00ba6d87:\n        var_10h = 0x38;\n    }\n    else {\n        uVar4 = puVar5 & 0x700000;\n        if (uVar4 == 0) {\ncode_r0x00ba692e:\n            var_50h = 2;\n        }\n        else {\n            if (uVar4 == 0x100000) {\n                var_48h._0_2_ = 0xd;\n            }\n            else {\n                if (uVar4 != 0x200000) {\n                    if (uVar4 == 0x300000) {\n                        var_48h._0_2_ = 0xd;\n                        var_50h = 0;\n                        var_48h._2_2_ = 10;\n                        var_4ch = 2;\n                    }\n                    else {\n                        if (uVar4 != 0x400000) {\n                            if (uVar4 != 0x500000) goto code_r0x00ba6d87;\n                            goto code_r0x00ba692e;\n                        }\n                        var_50h = 1;\n                    }\n                    goto code_r0x00ba6933;\n                }\n                var_48h._0_2_ = 10;\n            }\n            var_4ch = 1;\n            var_50h = 0;\n        }\ncode_r0x00ba6933:\n        iVar8 = 0;\n        var_c0h = &fcn.00ba6843::var_11c0h;\n        var_84h = 0;\n        var_a8h = &fcn.00ba6843::var_1c0h;\n        var_80h = 0;\n        var_8ch = 0;\n        var_90h = 0;\n        var_a0h = 0;\n        var_9ch = 0;\n        var_a4h = 0;\n        var_58h = 0;\n        var_7ch = 0;\n        var_54h = 0;\n        var_94h = 0x800;\n        var_98h = 0x14;\n        iVar1 = *puVar6;\n        puVar9 = puVar6;\n        while (iVar1 != 0) {\n            puVar9 = puVar9 + 2;\n            iVar8 = iVar8 + 1;\n            iVar1 = *puVar9;\n        }\n        var_b4h = puVar6 + iVar8 * 2;\n        var_68h = 0;\n        var_78h = 0;\n        var_11c0h._0_2_ = 0x83;\n        var_10h = &fcn.00ba6843::var_34h;\n        var_14h = &fcn.00ba6843::var_d0h;\n        var_74h = 0;\n        var_18h = NULL;\n        var_1ch = &fcn.00ba6843::var_2ch;\n        var_88h = 0;\n        var_20h = &fcn.00ba6843::var_1ch;\n        var_ach = 0;\n        var_24h = &fcn.00ba6843::var_ch;\n        var_28h = &fcn.00ba6843::var_3ch;\n        var_2ch = NULL;\n        var_30h = NULL;\n        var_34h = 0;\n        var_38h = 0;\n        var_3ch = &fcn.00ba6843::var_8h;\n        uStackY72 = 0xba6a24;\n        var_bch = var_c0h;\n        var_b8h = puVar6;\n        var_b0h = var_c0h;\n        var_70h = puVar5;\n        fcn.00ba6db8(&fcn.00ba6843::var_28h, var_3ch, 0, 0, 0, 0, var_28h, var_24h, var_20h, var_1ch, 0, var_14h, \n                     var_10h);\n        if (var_8h == 0) {\n            if (var_34h < 0x10001) {\n                iVar8 = (var_9ch * var_a0h + var_34h) * 2 + 0x38;\n                var_14h = 0xba6a5d;\n                var_10h = iVar8;\n                puVar5 = (**0xc3574c)();\n                iVar11 = var_a0h;\n                if (puVar5 == NULL) {\n                    var_10h = 0x15;\n                }\n                else {\n                    puVar5[1] = iVar8;\n                    *puVar5 = 0x50435245;\n                    puVar5[2] = var_70h;\n                    puVar5[3] = var_6ch;\n                    puVar5[4] = var_24h;\n                    puVar5[5] = var_20h;\n                    puVar5[6] = 0;\n                    *(puVar5 + 0x22) = 0x1c;\n                    *(puVar5 + 9) = var_9ch;\n                    *(puVar5 + 0x26) = var_a0h;\n                    puVar5[10] = 0;\n                    puVar5[0xb] = 0;\n                    puVar5[0xc] = 0;\n                    puVar5[0xd] = 0;\n                    var_8ch = var_90h;\n                    var_78h = 0;\n                    var_74h = 0;\n                    var_90h = 0;\n                    var_88h = 0;\n                    var_a4h = puVar5 + *(puVar5 + 0x22) * 2;\n                    var_b0h = var_c0h;\n                    var_54h = 0;\n                    var_68h = 0;\n                    var_64h = 0;\n                    var_60h = 0;\n                    var_5ch = 0;\n                    puVar6 = var_a4h + *(puVar5 + 0x26) * *(puVar5 + 9) * 2;\n                    var_ach = 0;\n                    var_bch = puVar6;\n                    if (0 < var_a0h) {\n                        var_a0h = 0;\n                        puVar9 = var_a8h + 1;\n                        var_20h = puVar6;\n                        do {\n                            var_10h = puVar9[1];\n                            var_14h = *puVar9;\n                            var_18h = 0xbe1866;\n                            fcn.00c1dcfa(var_14h, var_10h);\n                            puVar6 = var_20h;\n                            iVar11 = iVar11 + -1;\n                            puVar9 = puVar9 + 3;\n                        } while (0 < iVar11);\n                        if (0x14 < var_98h) {\n                            var_10h = var_a8h;\n                            var_14h = 0xbe188e;\n                            (**0xc35748)();\n                        }\n                    }\n                    var_10h = NULL;\n                    *puVar6 = 0x83;\n                    var_14h = &fcn.00ba6843::var_d0h;\n                    var_1ch = &fcn.00ba6843::var_2ch;\n                    var_20h = &fcn.00ba6843::var_1ch;\n                    var_24h = &fcn.00ba6843::var_ch;\n                    var_28h = &fcn.00ba6843::var_3ch;\n                    var_2ch = NULL;\n                    var_30h = NULL;\n                    var_34h = 0;\n                    var_38h = 0;\n                    var_3ch = &fcn.00ba6843::var_8h;\n                    uStackY72 = 0xba6b6d;\n                    var_18h = puVar6;\n                    fcn.00ba6db8(&fcn.00ba6843::var_28h, var_3ch, 0, 0, 0, 0, var_28h, var_24h, var_20h, var_1ch, puVar6\n                                 , var_14h, 0);\n                    *(puVar5 + 0x1e) = var_90h;\n                    *(puVar5 + 8) = var_84h;\n                    *(puVar5 + 7) = var_88h;\n                    puVar5[3] = var_6ch | 2;\n                    if (var_64h == 0) {\n                        var_24h = var_2ch;\n                        var_30h = var_1ch;\n                    }\n                    else {\n                        var_30h = NULL;\n                        var_24h = 0xffffffff;\n                    }\n                    iVar8 = 0;\n                    if ((var_8h == 0) && (*var_28h != 0)) {\n                        var_8h = 0x16;\n                    }\n                    *var_18h = 0;\n                    var_18h = var_18h + 2;\n                    if (var_34h < var_18h - puVar6 >> 1) {\n                        var_8h = 0x17;\n                    }\n                    iVar11 = var_8h;\n                    if ((var_c0h < var_b0h) && (var_1ch = 0xffffffff,  var_8h == 0)) {\n                        while (var_c0h < var_b0h) {\n                            var_b0h = var_b0h + -2;\n                            var_2ch = *var_b0h;\n                            var_10h = *(puVar6 + var_2ch * 2);\n                            if (var_10h != var_1ch) {\n                                var_14h = 0xbe18f1;\n                                iVar8 = fcn.00c1db51(var_10h);\n                                var_1ch = *(puVar6 + var_2ch * 2);\n                            }\n                            if (iVar8 == 0) {\n                                var_10h = 0x35;\n                                var_8h = 0x35;\n                                iVar11 = var_10h;\n                                break;\n                            }\n                            *(puVar6 + var_2ch * 2) = iVar8 - puVar6 >> 1;\n                        }\n                    }\n                    if (0x800 < var_94h) {\n                        var_14h = 0xbe1935;\n                        var_10h = var_c0h;\n                        (**0xc35748)();\n                    }\n                    var_c0h = NULL;\n                    if ((iVar11 == 0) && (*(puVar5 + 0x1e) <= *(puVar5 + 8) && *(puVar5 + 8) != *(puVar5 + 0x1e))) {\n                        var_8h = 0xf;\n                    }\n                    if ((var_14h & 0x20000) == 0) {\n                        var_10h = &fcn.00ba6843::var_d0h;\n                        var_14h = 0xba6c3d;\n                        fcn.00ba878e(var_10h);\n                    }\n                    iVar8 = var_8h;\n                    if (var_5ch != 0) {\n                        var_10h = 0xffffffff;\n                        var_14h = 0xbe1951;\n                        var_1ch = fcn.00c1db51(0xffffffff);\n                        while (iVar8 = var_8h,  var_1ch != NULL) {\n                            if (*(var_1ch + 2) == 0) {\n                                uVar4 = *(var_1ch - 2);\n                                var_10h = NULL;\n                                uVar2 = *(var_1ch + uVar4 * 2 + -4);\n                                *(var_1ch + uVar4 * 2 + -4) = 0;\n                                var_14h = &fcn.00ba6843::var_d0h;\n                                var_18h = 0x1;\n                                var_1ch = 0xbe198f;\n                                iVar8 = fcn.00c1e183(1, var_14h, 0);\n                                *(var_1ch + uVar4 * 2 + -4) = uVar2;\n                                if (iVar8 < 0) {\n                                    if ((iVar8 == -2) || (iVar8 == -4)) goto code_r0x00be19dc;\n                                    iVar8 = 0x19;\n                                    puVar6 = var_20h;\n                                    break;\n                                }\n                                if (var_88h < iVar8) {\n                                    var_88h = iVar8;\n                                }\n                                *(var_1ch + 2) = iVar8;\n                            }\n                            var_10h = 0xffffffff;\n                            var_14h = 0xbe19c3;\n                            var_1ch = fcn.00c1db51(0xffffffff);\n                            puVar6 = var_20h;\n                        }\n                    }\n                    if (iVar8 == 0) {\n                        var_38h = puVar5[2];\n                        if ((var_38h & 0x10) == 0) {\n                            var_14h = &fcn.00ba6843::var_d0h;\n                            var_10h = NULL;\n                            var_18h = 0xba6c7b;\n                            iVar8 = fcn.00ba674e(var_14h, 0);\n                            if (iVar8 == 0) {\n                                if (var_ch < 0) {\n                                    var_10h = NULL;\n                                    var_14h = 0xba6c97;\n                                    uVar3 = fcn.00ba8eb5(0);\n                                    if (var_ch < 0) {\n                                        var_14h = &fcn.00ba6843::var_d0h;\n                                        var_10h = NULL;\n                                        var_18h = 0xba6cb2;\n                                        iVar8 = fcn.00ba8f7d(var_14h, 0);\n                                        if (iVar8 != 0) {\n                                            puVar5[3] = puVar5[3] | 0x100;\n                                        }\n                                        goto code_r0x00ba6cc4;\n                                    }\n                                }\n                                else {\n                                    uVar3 = var_3ch;\n                                }\n                                *(puVar5 + 6) = uVar3;\n                                if ((var_ch & 1) != 0) {\n                                    if (var_4h == 0) {\n                                        if (uVar3 < 0x100) goto code_r0x00be1a6f;\n                                    }\n                                    else {\n                                        if (uVar3 < 0x80) {\ncode_r0x00be1a6f:\n                                            bVar12 = *(uVar3 + var_cch) == uVar3;\n                                        }\n                                        else {\n                                            bVar12 = *(*((*((uVar3 >> 7) + 0xc43b40) * 0x80 + uVar3 % 0x80) * 2 +\n                                                        0xc35840) * 8 + 0xc32f54) == 0;\n                                        }\n                                        if (!bVar12) {\n                                            puVar5[3] = puVar5[3] | 0x20;\n                                        }\n                                    }\n                                }\n                                puVar5[3] = puVar5[3] | 0x10;\n                            }\n                            else {\n                                puVar5[2] = var_38h | 0x10;\n                            }\n                        }\ncode_r0x00ba6cc4:\n                        if ((var_24h < 0) || (((*(puVar5 + 2) & 0x10) != 0 && ((var_24h & 2) == 0))))\n                        goto code_r0x00ba6cce;\n                        uVar3 = var_30h;\n                        *(puVar5 + 0x1a) = uVar3;\n                        if ((var_24h & 1) != 0) {\n                            if (var_4h == 0) {\n                                if (uVar3 < 0x100) goto code_r0x00ba6d42;\n                            }\n                            else if (uVar3 < 0x80) {\ncode_r0x00ba6d42:\n                                if (*((var_30h & 0xffff) + var_cch) != uVar3) {\n                                    puVar5[3] = puVar5[3] | 0x80;\n                                }\n                            }\n                            else {\n                                uVar4 = var_30h & 0xffff;\n                                if (*(*((*((uVar4 >> 7) + 0xc43b40) * 0x80 + uVar4 % 0x80) * 2 + 0xc35840) * 8 +\n                                     0xc32f54) + uVar4 != uVar4) {\n                                    puVar5[3] = puVar5[3] | 0x80;\n                                }\n                            }\n                        }\n                        puVar5[3] = puVar5[3] | 0x40;\ncode_r0x00ba6cce:\n                        do {\n                            var_10h = NULL;\n                            var_14h = &fcn.00ba6843::var_d0h;\n                            var_18h = var_4h;\n                            var_1ch = 0xba6ce4;\n                            iVar8 = fcn.00ba8481(var_4h, var_14h, 0);\n                            if (iVar8 != 0) {\n                                puVar5[3] = puVar5[3] | 0x8000;\n                                return puVar5;\n                            }\n                            puVar6 = puVar6 + *(puVar6 + 2) * 2;\n                        } while (*puVar6 == 0x77);\n                        return puVar5;\n                    }\ncode_r0x00be19dc:\n                    var_14h = 0xbe19e3;\n                    var_10h = puVar5;\n                    (**0xc35748)();\n                }\n            }\n            else {\n                var_10h = 0x14;\n            }\n        }\n    }\n    goto code_r0x00be19e4;\n}\n",
        "token_count": 7418
    },
    "00ba6db8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00ba6db8(int16_t **arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, \n            int32_t *arg_20h, uint32_t *arg_24h, int32_t *arg_28h, uint32_t *arg_2ch, uint arg_30h, int32_t arg_34h, \n            int32_t *arg_38h)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t in_ECX;\n    uint32_t uVar5;\n    int16_t **in_EDX;\n    uint32_t uVar6;\n    int16_t *piVar7;\n    int32_t iStack112;\n    uint32_t uStack108;\n    int16_t *piStack104;\n    int16_t *piStack100;\n    uint32_t uStack96;\n    int32_t iStack92;\n    int16_t *piStack88;\n    uint32_t uStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    uint32_t uStack72;\n    int16_t *piStack68;\n    uint32_t uStack64;\n    uint32_t uStack60;\n    int32_t iStack56;\n    int16_t *piStack52;\n    uint32_t uStack48;\n    int16_t **ppiStack44;\n    int32_t iStack40;\n    uint32_t uStack36;\n    int32_t iStack32;\n    int16_t *piStack28;\n    uint uStack24;\n    uint16_t uStack20;\n    ushort uStack18;\n    uint uStack16;\n    int16_t *piStack12;\n    \n    piStack88 = *arg_8h;\n    piStack12 = *in_EDX;\n    piStack52 = NULL;\n    uStack48 = 0;\n    piStack104 = piStack12;\n    uStack96 = in_ECX;\n    piStack68 = piStack12;\n    ppiStack44 = in_EDX;\n    if ((*0xc57520 != NULL) && (iVar4 = (**0xc57520)(),  iVar4 != 0)) {\n        *arg_ch = 0x55;\n        return 0;\n    }\n    uStack16 = arg_30h;\n    uStack108 = 0xfffffffe;\n    iStack112 = arg_18h + 4;\n    uStack72 = 0xfffffffe;\n    iStack32 = *(arg_34h + 0x20) - *(arg_34h + 0x10) >> 1;\n    iStack92 = 0;\n    iStack76 = 0;\n    if (*piStack12 == 0x85) {\n        uStack20 = piStack12[2];\n        uStack48 = uStack20;\n        uStack24 = *(arg_34h + 0x24);\n        uStack18 = 0;\n        *(arg_34h + 0x24) = &uStack24;\n    }\n    piStack28 = piStack12 + 1;\n    *piStack28 = 0;\n    iStack40 = arg_18h * 2 + 4;\n    piStack100 = piStack12 + arg_18h + 2;\n    uStack64 = *(arg_34h + 0x40);\n    uStack36 = uStack64;\n    do {\n        if (arg_14h != 0) {\n            *(arg_34h + 0x40) = uStack36;\n        }\n        if (arg_10h != 0) {\n            *piStack100 = 0x7c;\n            piStack52 = piStack100 + 1;\n            *piStack52 = 0;\n            piStack100 = piStack100 + 2;\n            iStack112 = iStack112 + 2;\n        }\n        iVar4 = fcn.00ba710e(&piStack88, arg_ch, &iStack56, &uStack60, &iStack80, &uStack84, &uStack16, arg_1ch, arg_34h\n                             , -(arg_38h != NULL) & &iStack112);\n        piVar1 = piStack100;\n        if (iVar4 == 0) goto code_r0x00be1b7c;\n        if (uStack64 <= *(arg_34h + 0x40) && *(arg_34h + 0x40) != uStack64) {\n            uStack64 = *(arg_34h + 0x40);\n        }\n        if (arg_38h == NULL) {\n            if (*piStack104 == 0x77) {\n                if (uStack72 < 0) {\ncode_r0x00ba7066:\n                    if ((-1 < uStack60) && (uStack84 < 0)) {\n                        iStack80 = iStack56;\n                        uStack84 = uStack60;\n                    }\n                }\n                else {\n                    if ((iStack76 != iStack56) || (uStack72 != uStack60)) {\n                        if (uStack108 < 0) {\n                            iStack92 = iStack76;\n                            uStack108 = uStack72;\n                        }\n                        uStack72 = 0xffffffff;\n                    }\n                    if (uStack72 < 0) goto code_r0x00ba7066;\n                }\n                if ((((uStack84 ^ uStack108) & 0xfffffffd) == 0) && (iStack92 == iStack80)) {\n                    uStack108 = uStack108 | uStack84;\n                    iStack92 = iStack80;\n                }\n                else {\n                    uStack108 = 0xffffffff;\n                }\n            }\n            else {\n                iStack76 = iStack56;\n                uStack72 = uStack60;\n                iStack92 = iStack80;\n                uStack108 = uStack84;\n            }\n            if (arg_10h != 0) {\n                *piStack100 = 0;\n                iVar4 = fcn.00c1e183(0, arg_34h, 0);\n                if (iVar4 == -3) {\n                    *(arg_34h + 0x74) = 1;\n                }\n                else {\n                    if (iVar4 < 0) {\n                        if (iVar4 == -2) {\n                            iVar4 = 0x24;\n                        }\n                        else {\n                            iVar4 = ((iVar4 != -4) - 1 & 0x2d) + 0x19;\n                        }\n                        *arg_ch = iVar4;\ncode_r0x00be1b7c:\n                        *arg_8h = piStack88;\n                        return 0;\n                    }\n                    if (*(arg_34h + 0x48) < iVar4) {\n                        *(arg_34h + 0x48) = iVar4;\n                    }\n                    *piStack52 = iVar4;\n                }\n            }\n        }\n        piVar2 = piStack88;\n        if (*piStack88 != 0x7c) {\n            if (arg_38h == NULL) {\n                uVar6 = piVar1 - piStack104 >> 1;\n                piVar7 = piStack104;\n                do {\n                    uVar5 = piVar7[1];\n                    piVar7[1] = uVar6;\n                    piVar7 = piVar7 + -uVar5;\n                    uVar6 = uVar5;\n                } while (uVar5 != 0);\n            }\n            *piVar1 = 0x78;\n            piVar1[1] = piVar1 - piStack68 >> 1;\n            piVar7 = piVar1 + 2;\n            if (0 < uStack48) {\n                if (*(*(arg_34h + 0x24) + 6) != 0) {\n                    *piVar7 = 0;\n                    fcn.00ba86a1(uStack96 >> 0xb & 1, arg_34h, iStack32);\n                    fcn.00bb8020(piStack68 + 2, piStack68, piVar7 - piStack68 & 0xfffffffe);\n                    *piStack68 = 0x81;\n                    iVar3 = piVar1 + (8 - piStack68) >> 1;\n                    *piStack28 = iVar3;\n                    piVar1[4] = 0x78;\n                    piVar1[5] = iVar3;\n                    piVar7 = piVar1 + 6;\n                    iStack112 = iStack112 + 4;\n                }\n                *(arg_34h + 0x24) = **(arg_34h + 0x24);\n            }\n            *(arg_34h + 0x40) = uStack64;\n            *ppiStack44 = piVar7;\n            *arg_8h = piVar2;\n            *arg_20h = iStack76;\n            *arg_24h = uStack72;\n            *arg_28h = iStack92;\n            *arg_2ch = uStack108;\n            if (arg_38h != NULL) {\n                if (0x7fffffeb - *arg_38h < iStack112) {\n                    *arg_ch = 0x14;\n                    return 0;\n                }\n                *arg_38h = iStack112 + *arg_38h;\n            }\n            return 1;\n        }\n        if (arg_38h == NULL) {\n            *piVar1 = 0x77;\n            piVar1[1] = piVar1 - piStack104 >> 1;\n            piStack100 = piVar1 + 2;\n            piStack104 = piVar1;\n            piStack12 = piVar1;\n        }\n        else {\n            piStack100 = *ppiStack44 + iStack40;\n            iStack112 = iStack112 + 2;\n        }\n        piStack88 = piStack88 + 1;\n    } while( true );\n}\n",
        "token_count": 2219
    },
    "00ba83c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00ba83c4(uint *arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    bool bVar1;\n    uint16_t *puVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint16_t **in_ECX;\n    uint32_t uVar5;\n    uint16_t *puVar6;\n    uint32_t *in_EDX;\n    uint32_t uVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar9 = *in_ECX;\n    iStack52 = 0;\n    uVar5 = arg_10h >> 0xb & 1;\n    uVar10 = puVar9[1];\n    puVar8 = puVar9 + 2;\n    if ((uVar5 != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n        uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar8 & 0x3ff) + 0x10000;\n        puVar8 = puVar9 + 3;\n    }\n    puVar9 = puVar8 + -1;\n    uVar11 = uVar10;\n    if (uVar10 == 0) {\n        *arg_8h = 1;\n        goto code_r0x00ba841b;\n    }\n    if ((uVar10 < 0x30) || (0x7a < uVar10)) goto code_r0x00ba841b;\n    uVar7 = uVar10 - 0x30;\n    uVar4 = *(uVar7 * 2 + 0xc35698);\n    puVar6 = puVar9;\n    if (uVar4 == 0) {\n        if (uVar10 < 0x68) {\n            if (uVar10 == 0x67) {\n                if (arg_14h != 0) goto code_r0x00ba841b;\n                uVar3 = *puVar8;\n                if ((uVar3 == 0x3c) || (uVar3 == 0x27)) {\n                    iStack52 = 0x1b;\n                    goto code_r0x00ba841b;\n                }\n                if (uVar3 == 0x7b) {\n                    puVar6 = puVar8 + 1;\n                    uVar3 = *puVar6;\n                    if (uVar3 != 0) {\n                        do {\n                            if ((uVar3 == 0x7d) || ((uVar3 != 0x2d && ((uVar3 < 0x30 || (0x39 < uVar3)))))) break;\n                            puVar6 = puVar6 + 1;\n                            uVar3 = *puVar6;\n                        } while (uVar3 != 0);\n                        if ((*puVar6 != 0) && (*puVar6 != 0x7d)) {\n                            iStack52 = 0x1c;\n                            goto code_r0x00ba841b;\n                        }\n                    }\n                    bVar1 = true;\n                    puVar9 = puVar8;\n                }\n                else {\n                    bVar1 = false;\n                }\n                uVar7 = 0;\n                puVar8 = puVar9 + 1;\n                if (*puVar8 == 0x2d) {\n                    puVar9 = puVar9 + 1;\n                }\n                uVar3 = puVar9[1];\n                iStack52 = 0;\n                puVar6 = puVar9 + 1;\njoined_r0x00be4a6a:\n                puVar2 = puVar6;\n                if ((0x2f < uVar3) && (uVar3 < 0x3a)) {\n                    if (uVar7 < 0xccccccc) goto code_r0x00be4a7a;\n                    uVar3 = puVar9[1];\n                    puVar8 = puVar9 + 1;\n                    while ((puVar6 = puVar8,  0x2f < uVar3 && (uVar3 < 0x3a))) {\n                        puVar8 = puVar6 + 1;\n                        uVar3 = *puVar8;\n                        puVar9 = puVar6;\n                    }\n                    goto code_r0x00be499f;\n                }\n                if ((bVar1) && (puVar9 = puVar9 + 1,  *puVar9 != 0x7d)) {\n                    *arg_8h = 0x39;\n                    goto code_r0x00ba841b;\n                }\n                if (uVar7 == 0) {\n                    *arg_8h = 0x3a;\n                    goto code_r0x00ba841b;\n                }\n                puVar6 = puVar9;\n                if (*puVar8 == 0x2d) {\n                    if (arg_ch < uVar7) {\n                        *arg_8h = 0xf;\n                        goto code_r0x00ba841b;\n                    }\n                    uVar7 = (arg_ch - uVar7) + 1;\n                }\n                goto code_r0x00ba8461;\n            }\n            if (uVar10 == 0x30) {\ncode_r0x00be4944:\n                uVar11 = uVar10 - 0x30;\n                do {\n                    uVar4 = uVar4 + 1;\n                    if ((puVar9[1] < 0x30) || (0x37 < puVar9[1])) break;\n                    puVar9 = puVar9 + 1;\n                    uVar11 = (*puVar9 - 0x30) + uVar11 * 8;\n                } while (uVar4 < 2);\n                goto code_r0x00ba841b;\n            }\n            if (uVar10 < 0x31) {\ncode_r0x00be4bbe:\n                if ((arg_10h & 0x40) != 0) {\n                    *arg_8h = 3;\n                }\n                goto code_r0x00ba841b;\n            }\n            if (uVar10 < 0x3a) {\n                if (arg_14h == 0) {\n                    uVar3 = *puVar8;\n                    while ((0x2f < uVar3 && (uVar3 < 0x3a))) {\n                        if (0xccccccb < uVar7) {\n                            uVar3 = puVar6[1];\n                            puVar8 = puVar6 + 1;\n                            puVar9 = puVar6;\n                            while ((puVar6 = puVar8,  0x2f < uVar3 && (uVar3 < 0x3a))) {\n                                puVar8 = puVar6 + 1;\n                                uVar3 = *puVar8;\n                                puVar9 = puVar6;\n                            }\ncode_r0x00be499f:\n                            iStack52 = 0;\n                            *arg_8h = 0x3d;\n                            goto code_r0x00ba841b;\n                        }\n                        uVar7 = (*puVar8 - 0x30) + uVar7 * 10;\n                        uVar3 = puVar8[1];\n                        puVar6 = puVar8;\n                        puVar8 = puVar8 + 1;\n                    }\n                    if ((uVar7 < 8) || (uVar7 <= arg_ch)) goto code_r0x00ba8461;\n                }\n                uVar10 = *puVar9;\n                uVar11 = uVar10;\n                if (0x37 < uVar10) goto code_r0x00ba841b;\n                goto code_r0x00be4944;\n            }\n            if (uVar10 == 0x4c) goto code_r0x00be4ea2;\n            if (uVar10 != 0x55) {\n                if (uVar10 == 99) {\n                    uVar11 = *puVar8;\n                    if (uVar11 == 0) {\n                        *arg_8h = 2;\n                        puVar9 = puVar8;\n                    }\n                    else if (uVar11 < 0x80) {\n                        if (uVar11 - 0x61 < 0x1a) {\n                            uVar11 = uVar11 - 0x20;\n                        }\n                        puVar9 = puVar8;\n                        uVar11 = uVar11 ^ 0x40;\n                    }\n                    else {\n                        *arg_8h = 0x44;\n                        puVar9 = puVar8;\n                    }\n                    goto code_r0x00ba841b;\n                }\n                goto code_r0x00be4bbe;\n            }\n            uVar5 = arg_10h & 0x2000000;\n            goto code_r0x00be4ec7;\n        }\n        if (uVar10 == 0x6c) {\ncode_r0x00be4ea2:\n            *arg_8h = 0x25;\n            goto code_r0x00ba8463;\n        }\n        if (uVar10 == 0x6f) {\n            if (*puVar8 != 0x7b) {\n                *arg_8h = 0x51;\n                goto code_r0x00ba841b;\n            }\n            if (puVar8[1] == 0x7d) {\ncode_r0x00be4c63:\n                *arg_8h = 0x56;\n                goto code_r0x00ba841b;\n            }\n            puVar9 = puVar8 + 1;\n            uVar11 = 0;\n            uVar3 = *puVar9;\n            while ((0x2f < uVar3 && (uVar3 < 0x38))) {\n                puVar9 = puVar9 + 1;\n                if (((uVar11 != 0) || (uVar3 != 0x30)) &&\n                   (uVar11 = (uVar3 - 0x30) + uVar11 * 8,  (-(uVar5 != 0) & 0x100000) + 0xffff < uVar11))\n                goto code_r0x00be4e95;\n                uVar3 = *puVar9;\n            }\n            if (*puVar9 != 0x7d) {\n                *arg_8h = 0x50;\n                goto code_r0x00ba841b;\n            }\ncode_r0x00be4c98:\n            if ((uVar5 != 0) && (uVar11 - 0xd800 < 0x800)) {\n                *arg_8h = 0x49;\n            }\n            goto code_r0x00ba841b;\n        }\n        if (uVar10 != 0x75) {\n            if (uVar10 != 0x78) goto code_r0x00be4bbe;\n            if ((arg_10h & 0x2000000) != 0) {\n                if ((((*puVar8 < 0x100) && ((*(*puVar8 + 0xc48680) & 8) != 0)) && (puVar8[1] < 0x100)) &&\n                   ((*(puVar8[1] + 0xc48680) & 8) != 0)) {\n                    uVar11 = 0;\n                    var_14h = 2;\n                    do {\n                        puVar9 = puVar9 + 1;\n                        uVar5 = *puVar9;\n                        if (0x60 < uVar5) {\n                            uVar5 = uVar5 - 0x20;\n                        }\n                        uVar11 = (uVar11 * 0x10 - ((-(uVar5 < 0x41) & 0xfffffff9) + 0x37)) + uVar5;\n                        var_14h = var_14h + -1;\n                    } while (var_14h != 0);\n                }\n                goto code_r0x00ba841b;\n            }\n            if (*puVar8 != 0x7b) {\n                uVar11 = 0;\n                do {\n                    uVar4 = uVar4 + 1;\n                    puVar8 = puVar9 + 1;\n                    if ((0xff < *puVar8) || ((*(*puVar8 + 0xc48680) & 8) == 0)) break;\n                    uVar5 = *puVar8;\n                    if (0x60 < uVar5) {\n                        uVar5 = uVar5 - 0x20;\n                    }\n                    uVar11 = (uVar11 * 0x10 - ((-(uVar5 < 0x41) & 0xfffffff9) + 0x37)) + uVar5;\n                    puVar9 = puVar8;\n                } while (uVar4 < 2);\n                goto code_r0x00ba841b;\n            }\n            puVar9 = puVar8 + 1;\n            if (*puVar9 == 0x7d) goto code_r0x00be4c63;\n            uVar11 = 0;\n            if (*puVar9 < 0x100) {\n                uVar3 = *puVar9;\n                do {\n                    uVar10 = uVar3;\n                    if ((*(uVar10 + 0xc48680) & 8) == 0) break;\n                    puVar9 = puVar9 + 1;\n                    if ((uVar11 != 0) || (uVar10 != 0x30)) {\n                        if (0x60 < uVar10) {\n                            uVar10 = uVar10 - 0x20;\n                        }\n                        uVar11 = (uVar11 * 0x10 - ((-(uVar10 < 0x41) & 0xfffffff9) + 0x37)) + uVar10;\n                        if ((-(uVar5 != 0) & 0x100000) + 0xffff < uVar11) goto code_r0x00be4c80;\n                    }\n                    uVar3 = *puVar9;\n                } while (uVar3 < 0x100);\n            }\n            if (*puVar9 != 0x7d) {\n                *arg_8h = 0x4f;\n                goto code_r0x00ba841b;\n            }\n            goto code_r0x00be4c98;\n        }\n        if ((arg_10h & 0x2000000) != 0) {\n            if ((((0xff < *puVar8) || ((*(*puVar8 + 0xc48680) & 8) == 0)) || (0xff < puVar8[1])) ||\n               ((((*(puVar8[1] + 0xc48680) & 8) == 0 || (0xff < puVar8[2])) ||\n                (((*(puVar8[2] + 0xc48680) & 8) == 0 || ((0xff < puVar8[3] || ((*(puVar8[3] + 0xc48680) & 8) == 0)))))))\n               ) goto code_r0x00ba841b;\n            uVar11 = 0;\n            var_14h = 4;\n            do {\n                puVar9 = puVar9 + 1;\n                uVar10 = *puVar9;\n                if (0x60 < uVar10) {\n                    uVar10 = uVar10 - 0x20;\n                }\n                uVar11 = (uVar11 * 0x10 - ((-(uVar10 < 0x41) & 0xfffffff9) + 0x37)) + uVar10;\n                var_14h = var_14h + -1;\n            } while (var_14h != 0);\n            if ((-(uVar5 != 0) & 0x100000) + 0xffff < uVar11) {\n                *arg_8h = 0x4c;\n                goto code_r0x00ba841b;\n            }\n            goto code_r0x00be4c98;\n        }\n    }\n    else {\n        uVar7 = uVar4;\n        uVar11 = uVar4;\n        if (0 < uVar4) goto code_r0x00ba841b;\ncode_r0x00ba8461:\n        iStack52 = -uVar7;\n        puVar9 = puVar6;\ncode_r0x00ba8463:\n        uVar11 = uVar10;\n        if ((iStack52 != 0xc) || (puVar9[1] != 0x7b)) goto code_r0x00ba841b;\n        uVar5 = fcn.00c1e65f();\ncode_r0x00be4ec7:\n        uVar11 = uVar10;\n        if (uVar5 != 0) goto code_r0x00ba841b;\n    }\n    *arg_8h = 0x25;\n    uVar11 = uVar10;\n    goto code_r0x00ba841b;\ncode_r0x00be4a7a:\n    uVar7 = uVar7 * 10 + (*puVar2 - 0x30);\n    uVar3 = puVar2[1];\n    puVar6 = puVar2 + 1;\n    puVar9 = puVar2;\n    goto joined_r0x00be4a6a;\ncode_r0x00be4e95:\n    for (; (0x2f < *puVar9 && (*puVar9 < 0x38)); puVar9 = puVar9 + 1) {\n    }\n    goto code_r0x00be4c88;\ncode_r0x00be4c80:\n    while ((*puVar9 < 0x100 && ((*(*puVar9 + 0xc48680) & 8) != 0))) {\n        puVar9 = puVar9 + 1;\n    }\ncode_r0x00be4c88:\n    *arg_8h = 0x22;\ncode_r0x00ba841b:\n    if (((arg_10h & 0x20000000) != 0) && (iStack52 - 6U < 6)) {\n        iStack52 = iStack52 + 0x17;\n    }\n    *in_ECX = puVar9;\n    *in_EDX = uVar11;\n    return iStack52;\n}\n",
        "token_count": 4175
    },
    "00ba8481": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba8481(uint arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint16_t uVar1;\n    bool bVar2;\n    uint16_t *puVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    uint16_t *in_EDX;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint32_t uVar9;\n    int32_t *var_10h;\n    uint16_t *var_ch;\n    uint16_t *var_8h;\n    uint16_t *var_4h;\n    \n    var_4h = in_EDX;\n    puVar3 = fcn.00ba8673();\n    if (puVar3 < in_EDX) {\n        do {\n            uVar1 = *puVar3;\n            uVar9 = uVar1;\n            if (uVar9 == 0x7d) {\n                do {\n                    puVar3 = puVar3 + puVar3[1];\n                } while (*puVar3 == 0x77);\n                goto code_r0x00be50f7;\n            }\n            if (uVar9 == 0x75) {\n                puVar8 = *(arg_ch + 0x14) + puVar3[1] * 2;\n                puVar6 = *(arg_ch + 0x10);\n                puVar7 = puVar8;\n                if (puVar6 != NULL) {\n                    if (puVar6 < *(arg_ch + 0x20)) {\n                        do {\n                            if (*puVar6 == puVar3 + (2 - *(arg_ch + 0x14)) >> 1) {\n                                return 1;\n                            }\n                            puVar6 = puVar6 + 1;\n                        } while (puVar6 < *(arg_ch + 0x20));\n                    }\n                    if (puVar8[1] == 0) {\n                        return 1;\n                    }\n                }\n                do {\n                    puVar7 = puVar7 + puVar7[1];\n                } while (*puVar7 == 0x77);\n                var_8h = puVar8;\n                if ((puVar3 < puVar8) || (puVar7 < puVar3)) {\n                    piVar4 = arg_10h;\n                    if (arg_10h != NULL) {\n                        do {\n                            if (piVar4[1] == puVar8) break;\n                            piVar4 = *piVar4;\n                        } while (piVar4 != NULL);\n                        if (piVar4 != NULL) goto code_r0x00be50f7;\n                    }\n                    var_10h = arg_10h;\n                    var_ch = puVar8;\n                    while (iVar5 = fcn.00ba8481(arg_8h, arg_ch, &var_10h),  iVar5 == 0) {\n                        puVar8 = puVar8 + puVar8[1];\n                        if (*puVar8 != 0x77) {\n                            return 0;\n                        }\n                    }\n                }\n                goto code_r0x00be50f7;\n            }\n            if ((((uVar1 == 0x92) || (uVar1 == 0x93)) || (uVar1 == 0xa1)) || (uVar1 == 0x94)) {\n                puVar3 = puVar3 + *(uVar9 + 0xc35750);\n                do {\n                    puVar3 = puVar3 + puVar3[1];\n                } while (*puVar3 == 0x77);\n                goto code_r0x00be50f7;\n            }\n            if (((uVar1 == 0x88) || (uVar1 == 0x89)) || ((uVar1 == 0x8a || (uVar1 == 0x8b)))) {\n                do {\n                    puVar3 = puVar3 + puVar3[1];\n                } while (*puVar3 == 0x77);\n                goto code_r0x00be50f7;\n            }\n            if (((uVar1 == 0x83) || (uVar1 == 0x84)) ||\n               ((uVar1 == 0x85 || (((uVar1 == 0x86 || (uVar1 == 0x81)) || (uVar1 == 0x82)))))) {\ncode_r0x00be506b:\n                if (puVar3[1] == 0) {\n                    return 1;\n                }\n                if ((uVar1 != 0x87) || (puVar3[puVar3[1]] == 0x77)) {\n                    bVar2 = false;\n                    do {\n                        if ((!bVar2) && (iVar5 = fcn.00ba8481(arg_8h, arg_ch, arg_10h),  iVar5 != 0)) {\n                            bVar2 = true;\n                        }\n                        puVar3 = puVar3 + puVar3[1];\n                    } while (*puVar3 == 0x77);\n                    if (!bVar2) {\n                        return 0;\n                    }\n                }\n                goto code_r0x00be50f7;\n            }\n    // switch table (150 cases) at 0xba85b5\n            switch(uVar9) {\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xb:\n            case 0xc:\n            case 0xd:\n            case 0xe:\n            case 0xf:\n            case 0x10:\n            case 0x11:\n            case 0x12:\n            case 0x13:\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x1d:\n            case 0x1e:\n            case 0x1f:\n            case 0x20:\n            case 0x23:\n            case 0x24:\n            case 0x29:\n            case 0x2b:\n            case 0x30:\n            case 0x31:\n            case 0x36:\n            case 0x38:\n            case 0x3d:\n            case 0x3e:\n            case 0x43:\n            case 0x45:\n            case 0x4a:\n            case 0x4b:\n            case 0x50:\n            case 0x52:\n            case 0x57:\n            case 0x58:\n            case 0x5d:\n            case 0x5f:\n                goto code_r0x00ba8595;\n            case 0x17:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n            case 0x1c:\n            case 0x62:\n            case 99:\n            case 100:\n            case 0x65:\n            case 0x66:\n            case 0x67:\n            case 0x68:\n            case 0x69:\n            case 0x6a:\n            case 0x6b:\n            case 0x6c:\n            case 0x6d:\n            case 0x71:\n            case 0x72:\n            case 0x73:\n            case 0x74:\n            case 0x75:\n            case 0x76:\n            case 0x7c:\n            case 0x7d:\n            case 0x7e:\n            case 0x7f:\n            case 0x80:\n            case 0x81:\n            case 0x82:\n            case 0x83:\n            case 0x84:\n            case 0x85:\n            case 0x86:\n            case 0x87:\n            case 0x88:\n            case 0x89:\n            case 0x8a:\n            case 0x8b:\n            case 0x8c:\n            case 0x8d:\n            case 0x8e:\n            case 0x8f:\n            case 0x90:\n            case 0x91:\n            case 0x92:\n            case 0x93:\n            case 0x94:\n            case 0x96:\n            case 0x98:\n            case 0x9a:\n                break;\n            case 0x21:\n            case 0x22:\n            case 0x25:\n            case 0x26:\n            case 0x2a:\n            case 0x2c:\n            case 0x2e:\n            case 0x2f:\n            case 0x32:\n            case 0x33:\n            case 0x37:\n            case 0x39:\n            case 0x3b:\n            case 0x3c:\n            case 0x3f:\n            case 0x40:\n            case 0x44:\n            case 0x46:\n            case 0x48:\n            case 0x49:\n            case 0x4c:\n            case 0x4d:\n            case 0x51:\n            case 0x53:\n                break;\n            case 0x27:\n            case 0x28:\n            case 0x2d:\n            case 0x34:\n            case 0x35:\n            case 0x3a:\n            case 0x41:\n            case 0x42:\n            case 0x47:\n            case 0x4e:\n            case 0x4f:\n            case 0x54:\n                break;\n            case 0x55:\n            case 0x56:\n            case 0x59:\n            case 0x5a:\n            case 0x5e:\n            case 0x60:\n                break;\n            case 0x5b:\n            case 0x5c:\n            case 0x61:\n                break;\n            case 0x6e:\n            case 0x6f:\n                puVar3 = puVar3 + 0x11;\n                goto code_r0x00ba859f;\n            case 0x70:\n                puVar3 = puVar3 + puVar3[1];\ncode_r0x00ba859f:\n                switch(*puVar3) {\n                case 0x62:\n                case 99:\n                case 0x66:\n                case 0x67:\n                case 0x6a:\n                case 0x6c:\n                    break;\n                default:\ncode_r0x00ba8595:\n                    return 0;\n                case 0x68:\n                case 0x69:\n                case 0x6d:\n                    if (puVar3[1] != 0) {\n                        return 0;\n                    }\n                }\n                break;\n            case 0x77:\n            case 0x78:\n            case 0x79:\n            case 0x7a:\n            case 0x7b:\n                goto code_r0x00ba8595;\n            case 0x95:\n            case 0x97:\n            case 0x99:\n            case 0x9b:\n                break;\n            default:\n                goto code_r0x00be506b;\n            }\ncode_r0x00be50f7:\n            puVar3 = fcn.00ba8673();\n        } while (puVar3 < var_4h);\n    }\ncode_r0x00ba8595:\n    return 1;\n}\n",
        "token_count": 2533
    },
    "00ba8eb5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint32_t __cdecl fcn.00ba8eb5(int32_t arg_8h)\n\n{\n    uint16_t *puVar1;\n    int16_t *in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *in_EDX = -1;\n    iVar3 = -1;\n    uVar5 = 0;\n    do {\n        puVar1 = fcn.00ba8673();\n        uVar2 = *puVar1;\n        if (uVar2 < 0x32) {\n            if (0x2f < uVar2) goto code_r0x00ba8f67;\n            if (uVar2 != 0x1d) {\n                if (uVar2 == 0x1e) goto code_r0x00ba8f67;\n                if (uVar2 < 0x23) {\n                    return 0;\n                }\n                if (0x24 < uVar2) {\n                    if (uVar2 == 0x29) {\n                        puVar1 = puVar1 + 1;\n                    }\n                    else if (uVar2 != 0x2b) {\n                        return 0;\n                    }\n                }\n            }\n            if (arg_8h == 0) {\n                return 0;\n            }\n            if (-1 < iVar3) goto code_r0x00be5aeb;\n            iVar4 = 0;\ncode_r0x00be5a9c:\n            uVar2 = puVar1[1];\n        }\n        else if (uVar2 == 0x36) {\n            puVar1 = puVar1 + 1;\ncode_r0x00ba8f67:\n            if (arg_8h == 0) {\n                return 0;\n            }\n            if (iVar3 < 0) {\n                iVar4 = 1;\n                goto code_r0x00be5a9c;\n            }\ncode_r0x00be5aeb:\n            bVar6 = uVar5 == puVar1[1];\ncode_r0x00be5af1:\n            iVar4 = iVar3;\n            uVar2 = uVar5;\n            if (!bVar6) {\n                return 0;\n            }\n        }\n        else {\n            if (uVar2 == 0x38) goto code_r0x00ba8f67;\n            if (uVar2 != 0x7d) {\n                if (uVar2 < 0x81) {\n                    return 0;\n                }\n                if ((0x86 < uVar2) && (1 < uVar2 - 0x8a)) {\n                    return 0;\n                }\n            }\n            uVar2 = fcn.00ba8eb5(*puVar1 == 0x7d);\n            if (var_8h < 0) {\n                return 0;\n            }\n            iVar4 = var_8h;\n            if (-1 < iVar3) {\n                if (uVar5 != uVar2) {\n                    return 0;\n                }\n                bVar6 = iVar3 == var_8h;\n                goto code_r0x00be5af1;\n            }\n        }\n        in_ECX = in_ECX + in_ECX[1];\n        iVar3 = iVar4;\n        uVar5 = uVar2;\n        if (*in_ECX != 0x77) {\n            *in_EDX = iVar4;\n            return uVar2;\n        }\n    } while( true );\n}\n",
        "token_count": 822
    },
    "00ba8f7d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba8f7d(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int16_t *in_ECX;\n    uint32_t in_EDX;\n    uint16_t *puVar5;\n    bool bVar6;\n    int16_t *var_4h;\n    \n    var_4h = in_ECX;\n    do {\n        piVar3 = fcn.00ba8673();\n        iVar2 = *piVar3;\n        if (iVar2 == 0x87) {\n            puVar5 = piVar3 + 2;\n            if (*puVar5 == 0x76) {\n                puVar5 = piVar3 + 6;\n            }\n            uVar1 = *puVar5;\n            if (0x8c < uVar1) {\n                if (uVar1 < 0x92) {\n                    return 0;\n                }\n                if (uVar1 == 0x9d) {\n                    return 0;\n                }\n            }\n            iVar4 = fcn.00ba8f7d(arg_8h, arg_ch);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            do {\n                puVar5 = puVar5 + puVar5[1];\n            } while (*puVar5 == 0x77);\n            piVar3 = fcn.00ba8673();\n            iVar2 = *piVar3;\n        }\n        iVar4 = arg_ch;\n        if (((((iVar2 == 0x83) || (iVar2 == 0x84)) || (iVar2 == 0x88)) ||\n            (((iVar2 == 0x89 || (iVar2 == 0x85)) || ((iVar2 == 0x86 || ((iVar2 == 0x8a || (iVar2 == 0x8b)))))))) ||\n           (iVar2 == 0x7d)) {\ncode_r0x00be5baa:\n            iVar4 = fcn.00ba8f7d(arg_8h, iVar4);\n            if (iVar4 == 0) {\n                return 0;\n            }\n        }\n        else {\n            if ((iVar2 == 0x81) || (iVar2 == 0x82)) {\n                iVar4 = arg_ch + 1;\n                goto code_r0x00be5baa;\n            }\n            if (((iVar2 == 0x55) || (iVar2 == 0x56)) || (iVar2 == 0x5e)) {\n                if (piVar3[1] != 0xc) {\n                    return 0;\n                }\n                if ((*(arg_8h + 0x50) & in_EDX) != 0) {\n                    return 0;\n                }\n                if (0 < arg_ch) {\n                    return 0;\n                }\n                bVar6 = *(arg_8h + 0x70) == 0;\ncode_r0x00ba9032:\n                if (!bVar6) {\n                    return 0;\n                }\n            }\n            else if (iVar2 != 0x1b) {\n                bVar6 = iVar2 == 0x1c;\n                goto code_r0x00ba9032;\n            }\n        }\n        var_4h = var_4h + var_4h[1];\n        if (*var_4h != 0x77) {\n            return 1;\n        }\n    } while( true );\n}\n",
        "token_count": 786
    },
    "00bafb17": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bafb17(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 4) != 1) {\n        if (*(param_1 + 0xd) != '\\0') {\n            iVar1 = *(param_1 + 8);\n            uVar2 = *(iVar1 + 0x10);\n            if (iVar1 != 0) {\n                fcn.00bafbe6(iVar1);\n            }\n            *(param_1 + 8) = uVar2;\n            *(param_1 + 0xd) = 0;\n        }\n        if (*(param_1 + 0xc) == '\\0') {\n            iVar1 = *(param_1 + 8);\n            uVar2 = *(iVar1 + 0x10);\n            if (iVar1 != 0) {\n                fcn.00bafbe6(iVar1);\n            }\n            *(param_1 + 8) = uVar2;\n            *(param_1 + 0xd) = 0;\n        }\n        else {\n            *(param_1 + 0xd) = 1;\n        }\n    }\n    *(param_1 + 4) = *(param_1 + 4) + -1;\n    return;\n}\n",
        "token_count": 289
    },
    "00bafb54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00bafb54(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[1] == 2) {\n        iVar1 = *param_1;\n    }\n    else {\n        iVar1 = *(param_1[2] + 0x10);\n        if (*(param_1 + 0xd) != '\\0') {\n            return *(iVar1 + 0x10);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 112
    },
    "00bafb6d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00bafb6d(int32_t *param_1)\n\n{\n    if (param_1[1] == 1) {\n        return *param_1;\n    }\n    if (*(param_1 + 0xd) == '\\0') {\n        return param_1[2];\n    }\n    return *(param_1[2] + 0x10);\n}\n",
        "token_count": 88
    },
    "00bafb84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bafb84(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 4) == 0) {\n        fcn.00b99e9c(arg_8h);\n    }\n    else if (*(in_ECX + 0xd) == '\\0') {\n        iVar1 = fcn.00bb0ff6(0x18);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            *(iVar1 + 8) = 0;\n            fcn.00b99ac0(arg_8h);\n        }\n        *(iVar1 + 0x10) = *(in_ECX + 8);\n        *(in_ECX + 8) = iVar1;\n    }\n    else {\n        fcn.00b99e9c(arg_8h);\n        *(in_ECX + 0xd) = 0;\n    }\n    *(in_ECX + 4) = *(in_ECX + 4) + 1;\n    return;\n}\n",
        "token_count": 244
    },
    "00bafdcf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bafdcf(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 9) != '\\0') {\n        iVar1 = param_1[1];\n        iVar2 = *(iVar1 + 0x30);\n        if (iVar1 != 0) {\n            fcn.00be6b8e(iVar1);\n        }\n        param_1[1] = iVar2;\n        *(param_1 + 9) = 0;\n    }\n    if (*(param_1 + 2) == '\\0') {\n        iVar1 = param_1[1];\n        iVar2 = *(iVar1 + 0x30);\n        if (iVar1 != 0) {\n            fcn.00b99a20();\n            fcn.00b99a20();\n            fcn.00bb106c(iVar1);\n        }\n        param_1[1] = iVar2;\n        *(param_1 + 9) = 0;\n    }\n    else {\n        *(param_1 + 9) = 1;\n    }\n    *param_1 = *param_1 + -1;\n    return;\n}\n",
        "token_count": 270
    },
    "00bafe18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00bafe18(int32_t param_1)\n\n{\n    if (*(param_1 + 9) == '\\0') {\n        return *(param_1 + 4);\n    }\n    return *(*(param_1 + 4) + 0x30);\n}\n",
        "token_count": 66
    },
    "00bafe26": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bafe26(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 9) == '\\0') {\n        iVar1 = fcn.00bb0ff6(0x38);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            fcn.00bafe64(arg_8h);\n        }\n        *(iVar1 + 0x30) = in_ECX[1];\n        in_ECX[1] = iVar1;\n    }\n    else {\n        fcn.00c0a5ae(arg_8h);\n        *(in_ECX + 9) = 0;\n    }\n    *in_ECX = *in_ECX + 1;\n    return;\n}\n",
        "token_count": 185
    },
    "00baff9a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00baff9a(int32_t param_1)\n\n{\n    if (*(param_1 + 9) == '\\0') {\n        return *(param_1 + 4);\n    }\n    return *(*(param_1 + 4) + 0x38);\n}\n",
        "token_count": 67
    },
    "00baffa8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00baffa8(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 9) != '\\0') {\n        iVar1 = param_1[1];\n        iVar2 = *(iVar1 + 0x38);\n        if (iVar1 != 0) {\n            fcn.00bb001c(iVar1);\n        }\n        param_1[1] = iVar2;\n        *(param_1 + 9) = 0;\n    }\n    if (*(param_1 + 2) == '\\0') {\n        iVar1 = param_1[1];\n        iVar2 = *(iVar1 + 0x38);\n        if (iVar1 != 0) {\n            fcn.00bb001c(iVar1);\n        }\n        param_1[1] = iVar2;\n        *(param_1 + 9) = 0;\n    }\n    else {\n        *(param_1 + 9) = 1;\n    }\n    *param_1 = *param_1 + -1;\n    return;\n}\n",
        "token_count": 248
    },
    "00baffde": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00baffde(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 9) == '\\0') {\n        iVar1 = fcn.00bb0ff6(0x40);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            fcn.00bb003b(arg_8h);\n        }\n        *(iVar1 + 0x38) = in_ECX[1];\n        in_ECX[1] = iVar1;\n    }\n    else {\n        fcn.00bf9d71(arg_8h);\n        *(in_ECX + 9) = 0;\n    }\n    *in_ECX = *in_ECX + 1;\n    return;\n}\n",
        "token_count": 184
    },
    "00bb00a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bb00a4(uint *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 9) == '\\0') {\n        puVar1 = fcn.00bb0ff6(8);\n        if (puVar1 == NULL) {\n            puVar1 = NULL;\n        }\n        else {\n            *puVar1 = *arg_8h;\n        }\n        puVar1[1] = in_ECX[1];\n        in_ECX[1] = puVar1;\n    }\n    else {\n        *in_ECX[1] = *arg_8h;\n        *(in_ECX + 9) = 0;\n    }\n    *in_ECX = *in_ECX + 1;\n    return;\n}\n",
        "token_count": 183
    },
    "00bb00dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00bb00dd(int32_t param_1)\n\n{\n    if (*(param_1 + 9) == '\\0') {\n        return *(param_1 + 4);\n    }\n    return *(*(param_1 + 4) + 4);\n}\n",
        "token_count": 64
    },
    "00bb00eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bb00eb(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 9) != '\\0') {\n        iVar1 = *(param_1[1] + 4);\n        fcn.00bb106c(param_1[1]);\n        param_1[1] = iVar1;\n        *(param_1 + 9) = 0;\n    }\n    if (*(param_1 + 2) == '\\0') {\n        iVar1 = *(param_1[1] + 4);\n        fcn.00bb106c(param_1[1]);\n        param_1[1] = iVar1;\n        *(param_1 + 9) = 0;\n    }\n    else {\n        *(param_1 + 9) = 1;\n    }\n    *param_1 = *param_1 + -1;\n    return;\n}\n",
        "token_count": 204
    },
    "00bb0352": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00bb0352(uint arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    \n    fcn.00b97eec();\n    uVar4 = 0;\n    while( true ) {\n        puVar2 = fcn.00b97b20(*arg_14h);\n        uVar1 = *puVar2;\n        if ((uVar1 == 0) || (uVar4 != 0)) break;\n        if (uVar1 == arg_8h) {\n            uVar4 = 1;\n        }\n        else {\n            fcn.00b97a84(uVar1);\n        }\n        *arg_14h = *arg_14h + 1;\n    }\n    uVar3 = CONCAT31(uVar1 >> 8, 1);\n    if (arg_8h != 0) {\n        uVar3 = uVar1 & 0xff00 | uVar4;\n    }\n    return uVar3;\n}\n",
        "token_count": 261
    },
    "00bb0688": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.00bb0688(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint16_t *puVar4;\n    int32_t in_ECX;\n    uint16_t *in_EDX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar3 = 0xff;\n    if (*in_EDX < 0x100) {\n        var_4h = arg_8h;\n        uVar3 = *in_EDX;\n    }\n    else {\n        var_4h = 0;\n    }\n    puVar1 = (uVar3 >> 3) + in_ECX;\n    *puVar1 = *puVar1 | '\\x01' << (uVar3 & 7);\n    if ((uVar3 < 0x80) || (arg_10h == 0)) {\n        if ((var_4h != 0) && ((*(uVar3 + *(arg_ch + 0xc)) & 2) != 0)) {\n            uVar2 = *(*(arg_ch + 4) + uVar3);\n            puVar1 = (uVar2 >> 3) + in_ECX;\n            *puVar1 = *puVar1 | '\\x01' << (uVar2 & 7);\n        }\n        puVar4 = in_EDX + 1;\n    }\n    else {\n        uVar3 = *in_EDX;\n        puVar4 = in_EDX + 1;\n        if ((uVar3 & 0xfc00) == 0xd800) {\n            uVar3 = ((uVar3 & 0x3ff) << 10 | *puVar4 & 0x3ff) + 0x10000;\n            puVar4 = in_EDX + 2;\n        }\n        if (var_4h != 0) {\n            uVar3 = uVar3 + *(*((*(uVar3 / 0x80 + 0xc43b40) * 0x80 + uVar3 % 0x80) * 2 + 0xc35840) * 8 + 0xc32f54);\n            if (0xff < uVar3) {\n                uVar3 = 0xff;\n            }\n            puVar1 = (uVar3 >> 3) + in_ECX;\n            *puVar1 = *puVar1 | '\\x01' << (uVar3 & 7);\n        }\n    }\n    return puVar4;\n}\n",
        "token_count": 587
    },
    "00bb0a15": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bb0a15(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar2 = *(in_ECX + 0xc) * 2;\n        if (uVar2 < 8) {\n            uVar2 = 8;\n        }\n        *(in_ECX + 0xc) = uVar2;\n        uVar3 = fcn.00bb0ff6(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00bb1080(uVar3, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.00bb106c(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar3;\n    }\n    puVar1 = fcn.00bb0ff6(8);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = *arg_8h;\n        puVar1[1] = arg_8h[1];\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar1;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 378
    },
    "00bb0d46": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00bb0d46(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.00b95a64();\n    fcn.00b95a64();\n    if (*(param_1 + 0x10) != 0) {\n        fcn.00b97b3d(*(param_1 + 0x10));\n        *(param_1 + 0x10) = 0;\n    }\n    iVar1 = *(param_1 + 0x14);\n    if (iVar1 < 0xc) {\n        if (iVar1 == 0xb) {\n            fcn.00bb106c(*(*(param_1 + 8) + 4));\n            fcn.00bb106c(*(param_1 + 8));\n            goto code_r0x00bb0da2;\n        }\n        if (iVar1 == 5) {\n            if (*(param_1 + 8) != 0) {\n                fcn.00b98e34(*(param_1 + 8));\n            }\n            goto code_r0x00bb0da2;\n        }\n        if (iVar1 != 8) {\n            if (iVar1 != 10) goto code_r0x00bb0da2;\n            iVar1 = *(param_1 + 8);\n            goto joined_r0x00be63e3;\n        }\n        if (*(param_1 + 8) == 0) goto code_r0x00bb0da2;\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*(param_1 + 8));\n        iVar1 = *(param_1 + 8);\n    }\n    else {\n        if (iVar1 == 0xc) {\n            if (*(param_1 + 8) != 0) {\n                fcn.00be73f0(*(param_1 + 8));\n            }\n            goto code_r0x00bb0da2;\n        }\n        if (iVar1 < 0xd) goto code_r0x00bb0da2;\n        if (0xe < iVar1) {\n            if ((iVar1 == 0xf) && (*(param_1 + 8) != 0)) {\n                fcn.00be7405(*(param_1 + 8));\n            }\n            goto code_r0x00bb0da2;\n        }\n        iVar1 = *(param_1 + 8);\njoined_r0x00be63e3:\n        if (iVar1 == 0) goto code_r0x00bb0da2;\n        fcn.00b95a64();\n    }\n    fcn.00bb106c(iVar1);\ncode_r0x00bb0da2:\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x14) = 1;\n    fcn.00bb106c(param_1);\n    return param_1;\n}\n",
        "token_count": 638
    },
    "00bb0e48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl fcn.00bb0e48(code **arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint in_EDX;\n    float10 fVar3;\n    ulong uVar4;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    for (pcVar2 = arg_8h[3]; pcVar2 != NULL; pcVar2 = pcVar2 + -1) {\n    }\n    pcVar2 = NULL;\n    if (arg_8h[1] != 0x1) {\n        pcVar2 = arg_8h[2];\n    }\n    if (arg_8h[9] != 0x1) {\n        if (arg_8h[8] == 0xa) {\n            fVar3 = (**arg_8h)();\n            *(arg_8h + 6) = fVar3;\n            goto code_r0x00bb0eff;\n        }\n        if (arg_8h[8] == 0x9) {\n            fVar3 = (**arg_8h)();\n            arg_8h[6] = fVar3;\n            goto code_r0x00bb0eff;\n        }\n        if (arg_8h[10] != 0x4) {\n            uVar4 = (**arg_8h)();\n            arg_8h[7] = uVar4 >> 0x20;\n            arg_8h[6] = uVar4;\n            goto code_r0x00bb0eff;\n        }\n    }\n    pcVar1 = (**arg_8h)();\n    arg_8h[6] = pcVar1;\ncode_r0x00bb0eff:\n    var_8h = pcVar2 + &stack0xffffffc8 == &stack0xffffffc8;\n    return CONCAT44(in_EDX, var_8h);\n}\n",
        "token_count": 447
    },
    "00bb0f2e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.00bb0f2e(uint arg_8h)\n\n{\n    ulong uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0xbc615a != 0) {\n        puVar3 = 0xbc617e;\n        puVar4 = &arg_8h;\n        iVar2 = *0xbc615a;\n        while( true ) {\n            if (puVar3[4] == 4) {\n                *puVar3 = *puVar4;\n            }\n            else {\n                *puVar3 = *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar3[1] = *puVar4;\n            }\n            iVar2 = iVar2 + -1;\n            if (iVar2 == 0) break;\n            puVar4 = puVar4 + 1;\n            puVar3 = puVar3 + 6;\n        }\n    }\n    uVar1 = (*0xbc614e)(0xbc614e);\n    return uVar1;\n}\n",
        "token_count": 271
    },
    "00bb87b2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bb87b2(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.00bb2f95(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 84
    },
    "00bb3469": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00bb355e: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00bb3563)\n// WARNING: Removing unreachable block (ram,0x00bb3592)\n// WARNING: Removing unreachable block (ram,0x00bb3569)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00bb3469(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t unaff_EBP;\n    int32_t *piVar7;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00bb8b40(0xc4bb70, 0x1c);\n    fcn.00bb9e4b(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0xc541a0 != 1) {\n        *0xc541c8 = 1;\n        *0xc541c4 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0xc56250);\n            *(unaff_EBP + -0x2c) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar5)(*0xc5624c);\n                *(unaff_EBP + -0x1c) = piVar2;\n                *(unaff_EBP + -0x20) = piVar3;\n                do {\n                    *(unaff_EBP + -0x24) = piVar3;\n                    piVar7 = piVar3;\n                    do {\n                        do {\n                            piVar7 = piVar7 + -1;\n                            *(unaff_EBP + -0x24) = piVar7;\n                            if (piVar7 < piVar2) goto code_r0x00bb3535;\n                            iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        } while (*piVar7 == iVar4);\n                        if (piVar7 < piVar2) goto code_r0x00bb3535;\n                        pcVar5 = (*pcVar5)(*piVar7);\n                        iVar4 = (*_sym.imp.KERNEL32.dll_EncodePointer)(0);\n                        *piVar7 = iVar4;\n                        (*pcVar5)();\n                        pcVar5 = _sym.imp.KERNEL32.dll_DecodePointer;\n                        uVar6 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0xc56250);\n                        *(unaff_EBP + -0x28) = uVar6;\n                        piVar3 = (*pcVar5)(*0xc5624c);\n                        piVar1 = *(unaff_EBP + -0x28);\n                    } while ((*(unaff_EBP + -0x1c) == piVar1) && (*(unaff_EBP + -0x20) == piVar3));\n                    *(unaff_EBP + -0x1c) = piVar1;\n                    *(unaff_EBP + -0x2c) = piVar1;\n                    *(unaff_EBP + -0x20) = piVar3;\n                    piVar2 = piVar1;\n                } while( true );\n            }\ncode_r0x00bb3535:\n            fcn.00bb33ff(0xc1f8dc, 0xc1f8ec);\n        }\n        fcn.00bb33ff(0xc1f8f0, 0xc1f8f4);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00bb9fb5(8);\n    }\n    return;\n}\n",
        "token_count": 938
    },
    "00bb69dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00bb69dd(uint param_1, uint32_t param_2, int32_t param_3, uint32_t param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((param_4 & 0xfffff) != 0) || (param_3 != 0)) {\n            uVar1 = fcn.00bc03cc();\n            goto code_r0x00bb6a5b;\n        }\n        uVar1 = param_4 & 0x80000000;\n        if (uVar1 != 0) goto code_r0x00bb6a4e;\n    }\n    else {\n        uVar1 = param_4;\n        if (in_FPUControlWord != 0x27f) {\n            uVar1 = fcn.00bc03b5();\n        }\n        if (((uVar1 & 0x80000000) != 0) && ((((uVar1 & 0x7ff00000) != 0 || ((uVar1 & 0xfffff) != 0)) || (param_3 != 0)))\n           ) {\ncode_r0x00bb6a4e:\n            uVar1 = 1;\ncode_r0x00bb6a5b:\n            if (*0xc549d8 == 0) {\n                uVar3 = fcn.00bc0357(arg_8h, unaff_retaddr, param_3, param_4);\n                return CONCAT44(arg_8h, uVar3);\n            }\n            goto code_r0x00bc043e;\n        }\n    }\n    if (*0xc549d8 == 0) {\n        uVar2 = uVar1 & 0xffff0000 | arg_8h & 0xffff;\n        if ((arg_8h & 0xffff) != 0x27f) {\n            if (((arg_8h & 0x20) != 0) &&\n               (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                uVar3 = fcn.00bc0357(arg_8h, unaff_retaddr, param_3, param_4);\n                return CONCAT44(arg_8h, uVar3);\n            }\n            uVar2 = uVar2 & 0xffff0020;\n        }\n        return CONCAT44(arg_8h, uVar2);\n    }\ncode_r0x00bc043e:\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 651
    },
    "00bbf419": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 fcn.00bbf419(double param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    bool bVar11;\n    double dVar12;\n    double dVar13;\n    ulong in_XMM1_Qa;\n    double dVar14;\n    uchar auVar15 [16];\n    uint64_t in_XMM2_Qa;\n    int64_t iVar16;\n    uchar auVar17 [16];\n    int64_t iVar18;\n    uint64_t in_XMM3_Qa;\n    uint64_t uVar19;\n    double dVar20;\n    double dVar21;\n    double dVar22;\n    double dVar23;\n    double dVar24;\n    double dVar25;\n    double dVar26;\n    uchar auStack12 [4];\n    \n    dVar12 = param_1 >> 0x2c;\n    uVar1 = param_1 >> 0x30;\n    uVar3 = (SUB82(dVar12, 0) & 0xff) + 1 & 0x1fe;\n    dVar25 = (*0xc27b20 & param_1 | *0xc27b30) * *(uVar3 * 4 + 0xc24290);\n    dVar22 = *(uVar3 * 4 + 0xc24290);\n    dVar13 = *(uVar3 * 8 + 0xc246a0);\n    dVar24 = *(uVar3 * 8 + 0xc246a8);\n    uVar7 = 0x7fef - uVar1;\n    uVar3 = SUB84(param_1, 0);\n    uVar9 = param_1 >> 0x20;\n    dVar23 = param_1;\n    if (0x7fffffff < (uVar1 - 0x10 | uVar7)) {\n        auVar17 = CONCAT88(in_XMM2_Qa, CONCAT44(param_3, param_2));\n        uVar8 = param_3 & *0xc27b44;\n        uVar19 = in_XMM3_Qa >> 0x20;\n        if (uVar8 < 0x7ff00000) {\n            if ((param_2 | uVar8) == 0) {\n                uVar10 = 0x1a;\n                _auStack12 = *0xc27b30;\n                if ((uVar3 | uVar9 & 0x7fffffff) != 0) {\n                    uVar10 = 0x1d;\n                    if (((uVar9 & 0x7fffffff) < 0x7ff00001) && (((uVar9 & 0x7fffffff) < 0x7ff00000 || (uVar3 == 0)))) {\n                        return *0xc27b30;\n                    }\n                }\n                goto code_r0x00bbfc20;\n            }\n            if (uVar7 < 0) {\n                auVar17 = auVar17 | CONCAT88(in_XMM3_Qa << 0x34, CONCAT44(*0xc27b44, *0xc27b40) << 0x34);\n                in_XMM3_Qa = 0;\n                auVar15 = pmaxsw(ZEXT1216(CONCAT48((in_XMM1_Qa >> 0x20 & uVar19) >> 0x14, (uVar8 >> 0x14) - 0x3f3)), 0x0\n                                );\n                iVar16 = SUB168(auVar17, 0) << SUB168(auVar15, 0);\n                iVar18 = SUB168(auVar17 >> 0x40, 0) << SUB168(auVar15 >> 0x40, 0);\n                auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                    CONCAT48(-(iVar18 == 0), CONCAT44(-(iVar16 >> 0x20 == 0), -(iVar16 == 0))));\n                uVar2 = SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7;\n                uVar8 = 0x7fef - uVar7 & 0x7fff;\n                uVar19 = SUB168(auVar17 >> 0x40, 0);\n                if (0x7fef < uVar8) {\n                    auVar17 = CONCAT412(0xffffffff, \n                                        CONCAT48(0xffffffff, \n                                                 CONCAT44(-((*0xc27b20 & param_1) >> 0x20 == 0), \n                                                          -((*0xc27b20 & param_1) == 0))));\n                    if ((SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) == 0xff) {\n                        if ((param_1 & 0x8000000000000000) != 0) {\n                            if ((uVar2 != 0xff) ||\n                               (iVar16 = CONCAT44(param_3, param_2) << ((param_3 & *0xc27b44) >> 0x14) - 0x3f4, \n                               iVar18 = uVar19 << (*0xc27b4c >> 0x14), \n                               auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                                   CONCAT48(-(iVar18 == 0), \n                                                            CONCAT44(-(iVar16 >> 0x20 == 0), -(iVar16 == 0)))), \n                               (SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                                (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                                (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                                (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) == 0xff))\n                            {\n                                if ((param_3 & 0x80000000) != 0) {\n                                    return 0;\n                                }\n                                goto code_r0x00bbfba7;\n                            }\n                            if ((param_3 & 0x80000000) == 0) {\n                                return *0xc27b98;\n                            }\n                            goto code_r0x00bbfa39;\n                        }\n                        if ((param_3 & 0x80000000) != 0) {\n                            return 0;\n                        }\n                        goto code_r0x00bbfba7;\n                    }\n                    goto code_r0x00bbfa7f;\n                }\n                if (uVar2 == 0xff) {\n                    in_XMM3_Qa = 0;\n                    iVar16 = CONCAT44(param_3, param_2) << ((param_3 & *0xc27b44) >> 0x14) - 0x3f4;\n                    iVar18 = uVar19 << ((SUB164(auVar15 >> 0x60, 0) & *0xc27b4c) >> 0x14);\n                    auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                        CONCAT48(-(iVar18 == 0), \n                                                 CONCAT44(-(iVar16 >> 0x20 == SUB164(ZEXT816(*0xc27ba0) >> 0x20, 0)), \n                                                          -(iVar16 == SUB84(*0xc27ba0, 0)))));\n                    in_XMM2_Qa = SUB168(auVar17 >> 0x40, 0);\n                    uVar7 = (SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) + 0x3ff01 &\n                            0x40000;\n                    if (0xf < uVar8) {\n                        uVar8 = 0xbfe7f;\n                        in_XMM3_Qa = 0;\n                        goto code_r0x00bbf496;\n                    }\n                    goto code_r0x00bbf8b4;\n                }\n                dVar22 = param_1 >> 0x20;\n                in_XMM2_Qa = uVar19 >> 0x20;\n                uVar8 = uVar3 | uVar9 & 0x7fffffff;\n                uVar7 = 0;\n                dVar23 = dVar12;\n                if (uVar8 != 0) {\n                    uVar10 = 0x1c;\n                    _auStack12 = *0xc27bc0;\n                    goto code_r0x00bbfc20;\n                }\ncode_r0x00bbf93a:\n                if ((uVar8 & 0x7fffffff) == 0) {\n                    if ((param_3 & 0x80000000) == 0) {\n                        if ((uVar8 & uVar7 << 0xd) == 0) {\n                            return 0;\n                        }\ncode_r0x00bbfa39:\n                        return *0xc27ba0;\n                    }\n                    _auStack12 = (uVar8 & uVar7 << 0xd | 0x7ff00000) << 0x20;\n                    uVar10 = 0x1b;\n                    goto code_r0x00bbfc20;\n                }\n            }\n            else {\n                uVar7 = 0;\ncode_r0x00bbf8b4:\n                auVar17 = pinsrw(ZEXT816(0), 0x43f0, 3);\n                dVar23 = SUB168(auVar17, 0) * param_1;\n                uVar8 = uVar9;\n                dVar25 = *0xc27b20;\n                dVar22 = *0xc27b30;\n                if (uVar3 == 0) goto code_r0x00bbf93a;\n            }\n            dVar12 = (dVar23 & CONCAT44(*0xc27b44, *0xc27b40)) >> 0x2c;\n            uVar8 = (SUB82(dVar12, 0) & 0xff) + 1 & 0x1fe;\n            dVar25 = (dVar25 & dVar23 | dVar22) * *(uVar8 * 4 + 0xc24290);\n            dVar22 = *(uVar8 * 4 + 0xc24290);\n            dVar13 = *(uVar8 * 8 + 0xc246a0);\n            dVar24 = *(uVar8 * 8 + 0xc246a8);\n            uVar8 = 0x43e7f;\n            goto code_r0x00bbf496;\n        }\n        uVar7 = uVar9;\n        if ((0x7fefffff < (uVar9 & 0x7fffffff)) && ((0x7ff00000 < (uVar9 & 0x7fffffff) || (uVar3 != 0)))) {\ncode_r0x00bbfa7f:\n            _auStack12 = param_1 + param_1;\n            uVar10 = 0x3ee;\n            goto code_r0x00bbfc20;\n        }\n        goto code_r0x00bbfb35;\n    }\n    uVar7 = 0;\n    uVar8 = 0x3fe7f;\ncode_r0x00bbf496:\n    uVar4 = (dVar25 >> 0x26 & 0xff) + 1 & 0x1fe;\n    dVar25 = dVar25 * *(uVar4 * 4 + 0xc24eb0);\n    dVar20 = dVar23 & *0xc27b20 | *0xc27b30;\n    dVar14 = *0xc27b78 & dVar20;\n    dVar20 = dVar20 - dVar14;\n    uVar5 = (dVar25 >> 0x1f & 0x1ff) + 1 & 0x3fe;\n    dVar21 = dVar22 * *(uVar4 * 4 + 0xc24eb0) * *(uVar5 * 4 + 0xc25ad0);\n    dVar25 = dVar25 * *(uVar5 * 4 + 0xc25ad0);\n    dVar23 = dVar13 + *(uVar4 * 8 + 0xc252c0) + (dVar12 - uVar8 >> 8) + *(uVar5 * 8 + 0xc262e0);\n    dVar12 = dVar24 + *(uVar4 * 8 + 0xc252c8) + *(uVar5 * 8 + 0xc262e8);\n    dVar13 = *0xc27b78 & dVar21;\n    dVar21 = dVar21 - dVar13;\n    dVar26 = *0xc27b80 + dVar25;\n    dVar24 = dVar23 + dVar26;\n    dVar22 = CONCAT44(param_3, param_2);\n    uVar2 = param_3 >> 0x10;\n    dVar23 = dVar23 - dVar24;\n    uVar4 = dVar24 >> 0x30;\n    dVar13 = (((dVar25 - dVar13 * dVar14) - dVar14 * dVar21) - dVar13 * dVar20) - dVar20 * dVar21;\n    dVar14 = dVar26 - dVar13;\n    dVar25 = dVar24 - dVar13;\n    uVar8 = uVar2 & 0x7ff0;\n    if (0x7fef < uVar8) {\n        _auStack12 = CONCAT44(param_3, param_2);\n        auVar17 = CONCAT88(in_XMM2_Qa, _auStack12);\n        in_XMM3_Qa = in_XMM3_Qa >> 0x1f & in_XMM2_Qa;\n        auVar15 = CONCAT412(-(in_XMM3_Qa >> 0x20 == 0), \n                            CONCAT48(-(in_XMM3_Qa == 0), \n                                     CONCAT44(-((*0xc27b20 & _auStack12) >> 0x20 == 0), -((*0xc27b20 & _auStack12) == 0)\n                                             )));\n        if ((SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 | (SUB161(auVar15 >> 0x17, 0) & 1) << 2\n             | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar15 >> 0x27, 0) & 1) << 4 |\n             (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar15 >> 0x37, 0) & 1) << 6 |\n            (SUB161(auVar15 >> 0x3f, 0) & 1) << 7) == 0xff) {\n            bVar11 = uVar3 == 0;\n            uVar3 = uVar4;\n            if (bVar11) {\n                if (uVar9 != 0x3ff00000) {\n                    uVar3 = uVar9;\n                    if (uVar9 == 0xbff00000) {\n                        return 1;\n                    }\n                    goto code_r0x00bbfb35;\n                }\n            }\n            else {\ncode_r0x00bbfb35:\n                _auStack12 = SUB168(auVar17, 0);\n                uVar19 = in_XMM3_Qa & SUB168(auVar17 >> 0x40, 0);\n                auVar15 = CONCAT412(-(uVar19 >> 0x20 == 0), \n                                    CONCAT48(-(uVar19 == 0), \n                                             CONCAT44(-((*0xc27b20 & _auStack12) >> 0x20 == 0), \n                                                      -((*0xc27b20 & _auStack12) == 0))));\n                if ((SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7) != 0xff)\n                goto code_r0x00bbfbae;\n                if ((uVar3 | uVar7 ^ 0xbff00000) != 0) {\n                    if ((auVar17 & 0x8000000000000000) == 0x0) {\n                        if ((uVar1 & 0x7ff0) < 0x3ff0) {\n                            return 0;\n                        }\n                    }\n                    else if (0x3fef < (uVar1 & 0x7ff0)) {\n                        return 0;\n                    }\ncode_r0x00bbfba7:\n                    return *0xc27b90;\n                }\n            }\n            uVar10 = 0x1c;\n            _auStack12 = *0xc24290;\n        }\n        else {\ncode_r0x00bbfbae:\n            _auStack12 = _auStack12 + _auStack12;\n            uVar10 = 0x3ee;\n        }\n        goto code_r0x00bbfc20;\n    }\n    iVar6 = (uVar8 - 0x3ff0) + (uVar4 & 0x7ff0);\n    if ((0x40a0U - iVar6 | iVar6 - 0x3c70U) < 0x80000000) {\ncode_r0x00bbf5e8:\n        dVar20 = *0xc27b78 & dVar22;\n        dVar21 = *0xc27b78 & dVar25;\n        dVar13 = (dVar23 + dVar26) - (dVar13 - (dVar24 - dVar25));\n        auVar17 = pinsrw(ZEXT816(0), 0x4060, 3);\n        dVar24 = dVar20 * dVar21 * SUB168(auVar17, 0);\n        uVar3 = ROUND(dVar24);\n        dVar22 = dVar20 * (dVar25 - dVar21) + dVar21 * (dVar22 - dVar20) + (dVar25 - dVar21) * (dVar22 - dVar20);\n        if (0 < (0x1ff7f - uVar3 | uVar3 + 0x1e1ff)) {\n            iVar6 = (uVar3 & 0x7f) * 0x10;\n            auVar17 = pinsrw(ZEXT816(0), 0x3f80, 3);\n            uVar3 = ((uVar7 + uVar3 & 0xffffff80) + 0x1ff80 << 0x2d) >> 0x20;\n            dVar25 = *(\"\\aAiFC.\u05bf\" + iVar6 + 8) * (uVar3 << 0x20);\n            dVar22 = (dVar24 - ((dVar24 + *0xc27b10) - *0xc27b10)) * SUB168(auVar17, 0) +\n                     dVar22 + ((*0xc272f0 * dVar14 + *0xc27300 * dVar14 * dVar14) * dVar14 * dVar14 +\n                               *0xc272f8 * dVar14 + str._aAiFC.._0_8_ * dVar14 * dVar14 + dVar12 + dVar13) *\n                              CONCAT44(param_3, param_2);\n            return dVar22 * dVar22 * dVar25 * (*0xc27b60 + *0xc27b50 * dVar22) * dVar22 * dVar22 +\n                   *(iVar6 + 0xc27318) * SUB128((ZEXT412(uVar3) << 0x40) >> 0x20, 0) +\n                   (*0xc27b68 + *0xc27b58 * dVar22) * dVar22 * dVar22 * dVar25 + *0xc27b70 * dVar22 * dVar25 + dVar25;\n        }\n        if (uVar3 < 1) {\n            if (uVar3 < -0x3fdff) {\ncode_r0x00bbfe79:\n                uVar10 = 0x19;\n                _auStack12 = *0xc27bb8 * *0xc27bb8 | uVar7 << 0x2d;\n                goto code_r0x00bbfc20;\n            }\n            uVar7 = uVar7 + 0x80;\n            uVar9 = (uVar3 & 0xffffff80) + 0x3fe80;\n            uVar10 = 0;\n        }\n        else {\n            if (0x3ffff < uVar3) goto code_r0x00bbfe9c;\n            uVar7 = uVar7 + 0x3ff00;\n            uVar9 = uVar3 - 0x80 & 0xffffff80;\n            uVar10 = 0x3ff0;\n        }\n        iVar6 = (uVar3 & 0x7f) * 0x10;\n        uVar3 = (-(uVar9 - 0x1ff80) >> 7) + 2;\n        auVar17 = pinsrw(ZEXT816(0), 0x3f80, 3);\n        uVar8 = (uVar9 << 0x2d) >> 0x20;\n        dVar25 = *(\"\\aAiFC.\u05bf\" + iVar6 + 8) * (uVar8 << 0x20);\n        dVar22 = (dVar24 - ((dVar24 + *0xc27b10) - *0xc27b10)) * SUB168(auVar17, 0) +\n                 dVar22 + ((*0xc272f0 * dVar14 + *0xc27300 * dVar14 * dVar14) * dVar14 * dVar14 +\n                           *0xc272f8 * dVar14 + str._aAiFC.._0_8_ * dVar14 * dVar14 + dVar12 + dVar13) *\n                          CONCAT44(param_3, param_2);\n        _auStack12 = uVar7 << 0x2d;\n        uVar19 = uVar3 + (uVar3 & 0x20);\n        dVar13 = -1 << uVar19 & dVar25;\n        dVar22 = dVar22 * dVar22 * dVar25 * (*0xc27b60 + *0xc27b50 * dVar22) * dVar22 * dVar22 +\n                 *(iVar6 + 0xc27318) * SUB128((ZEXT412(uVar8) << 0x40) >> 0x20, 0) +\n                 (*0xc27b68 + *0xc27b58 * dVar22) * dVar22 * dVar22 * dVar25 + *0xc27b70 * dVar22 * dVar25;\n        dVar24 = dVar13 + dVar22 & -1 << uVar19;\n        auVar17 = pinsrw(ZEXT816(0), uVar10, 3);\n        dVar22 = dVar22 + (dVar13 - dVar24) + (dVar25 - dVar13);\n        if (uVar9 - 0x1ff80 < 1) {\n            _auStack12 = dVar22 * _auStack12 + dVar24 * _auStack12;\n            _auStack12 = _auStack12 + SUB168(auVar17, 0) * _auStack12;\n            uVar10 = 0x18;\n            if (((_auStack12 >> 0x30 & 0x7ff0) != 0x7ff0) && (uVar10 = 0x19,  (_auStack12 & 0x7ff0000000000000) != 0)) {\n                return _auStack12;\n            }\n        }\n        else {\n            _auStack12 = (dVar22 + dVar24) * _auStack12;\n            _auStack12 = _auStack12 + SUB168(auVar17, 0) * _auStack12;\n            uVar10 = 0x18;\n            if (((_auStack12 >> 0x30 & 0x7ff0) != 0x7ff0) && (uVar10 = 0x19,  (_auStack12 & 0x7ff0000000000000) != 0)) {\n                return _auStack12;\n            }\n        }\n    }\n    else {\n        dVar24 = dVar22 * dVar25;\n        uVar3 = dVar24 >> 0x30 & 0x7ff0;\n        uVar9 = uVar3 - 0x3c70;\n        if ((0x40a0 - uVar3 | uVar9) < 0x80000000) goto code_r0x00bbf5e8;\n        if (0x7fffffff < uVar9) {\n            return (uVar7 | 0x1ff80) << 0x2d;\n        }\n        if (((uVar2 ^ (uVar1 & 0x7ff0) + 0xc010) & 0x8000) != 0) goto code_r0x00bbfe79;\ncode_r0x00bbfe9c:\n        uVar10 = 0x18;\n        if (uVar7 == 0) {\n            _auStack12 = *0xc27bb0 * *0xc27bb0;\n        }\n        else {\n            _auStack12 = *0xc27ba8 * *0xc27bb0;\n        }\n    }\ncode_r0x00bbfc20:\n    fcn.00bc3718(&param_1, &param_2, auStack12, uVar10);\n    return _auStack12;\n}\n",
        "token_count": 6594
    },
    "00bc1ebe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00bc1ebe(void)\n\n{\n    uint unaff_EBX;\n    uint in_stack_fffffd2c;\n    uint in_stack_fffffd30;\n    uint var_2c8h;\n    \n    fcn.00bc0170();\n    fcn.00bc1f43(unaff_EBX, in_stack_fffffd2c, in_stack_fffffd30);\n    return;\n}\n",
        "token_count": 91
    },
    "00bc267e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 fcn.00bc267e(ulong param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_14h;\n    uint32_t in_XMM0_Da;\n    uint uVar4;\n    uint32_t in_XMM0_Db;\n    uint uVar5;\n    uint32_t in_XMM0_Dd;\n    double dVar6;\n    double dVar7;\n    double dVar8;\n    uint64_t in_XMM2_Qa;\n    uint32_t uVar9;\n    double dVar10;\n    double dVar11;\n    uchar auVar12 [16];\n    double dVar13;\n    uint64_t in_XMM7_Qa;\n    double dVar14;\n    uint64_t uVar15;\n    double dVar17;\n    uint64_t uVar18;\n    double dStack12;\n    uint32_t uVar16;\n    \n    dVar8 = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n    auVar12 = pinsrw(ZEXT816(0), 0x2000, 2);\n    uVar1 = in_XMM0_Db >> 0xc & 0x7ffff;\n    if (uVar1 - 0x3fb00 < 0x3bb) {\n        iVar2 = (in_XMM0_Db >> 0xc & 0xfffc) - 0xfb00;\n        auVar12 = CONCAT88(in_XMM2_Qa & in_XMM7_Qa, *0xc2a438 & dVar8) | auVar12;\n        iVar3 = iVar2 * 4;\n        dVar11 = SUB168(auVar12, 0);\n        dVar13 = dVar8 * *(iVar2 * 2 + 0xc29b70);\n        dVar10 = SQRT(*0xc2a440 - dVar8 * dVar8) * dVar11;\n        dVar6 = dVar13 - dVar10;\n        uVar1 = SUB164(auVar12 >> 0x20, 0);\n        uVar9 = uVar1 & 0x80000000;\n        dVar7 = dVar6 * dVar6;\n        return (((*0xc2a3e8 * dVar7 + *0xc2a3e0) * dVar6 * dVar7 * dVar7 +\n                (str.UUUUUU333333._0_8_ * dVar6 * dVar7 - ((*(iVar3 + 0xc28c70) ^ uVar9 << 0x20) - *0xc2a370))) -\n               ((dVar8 + dVar11) * (CONCAT44(in_XMM0_Db, in_XMM0_Da) - dVar11)) / (dVar13 + dVar10)) -\n               ((*(iVar3 + 0xc28c78) ^ SUB168(CONCAT412(uVar1, ZEXT412(uVar9) << 0x20) >> 0x40, 0)) - *0xc2a378 &\n               0xffffffff00000000);\n    }\n    if (uVar1 - 0x3febb < 0x41) {\n        dVar13 = (in_XMM0_Db >> 6) << 0x26;\n        dVar11 = *0xc2a440 - dVar13 * dVar13;\n        dVar6 = (CONCAT44(in_XMM0_Db, in_XMM0_Da) + dVar13) * (dVar8 - dVar13);\n        dVar10 = SQRT(dVar11 - dVar6);\n        uVar1 = -(SUB121(CONCAT48(in_XMM0_Dd >> 0xc, CONCAT44(in_XMM0_Db, in_XMM0_Da)) >> 0x3f, 0) & 1);\n        dVar7 = *0xc2a438 & dVar10 | SUB168(auVar12, 0) | ~*0xc2a430 & CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        iVar3 = ((dVar10 << 2) >> 0x30) - 0xfec0;\n        dVar10 = dVar10 * *(iVar3 * 8 + 0xc29b70);\n        dVar13 = (dVar13 * dVar7 - dVar10) + (dVar8 - dVar13) * dVar7;\n        dVar8 = ((dVar11 - dVar7 * dVar7) - dVar6) / (dVar10 + dVar10 + dVar13);\n        iVar3 = iVar3 * 0x10;\n        dVar7 = (SUB168(CONCAT412(uVar1, CONCAT48(uVar1, CONCAT44(uVar1, uVar1))) >> 0x40, 0) & *0xc2a388) +\n                *(iVar3 + 0xc28c78);\n        dVar11 = dVar13 * dVar13;\n        auVar12 = pinsrw(0x0, uVar1 & 0x8000, 3);\n        dVar6 = dVar8 + dVar7;\n        return (*0xc2a3e8 * dVar11 + *0xc2a3e0) * dVar13 * dVar11 * dVar11 +\n               str.UUUUUU333333._0_8_ * dVar13 * dVar11 + (CONCAT44(uVar1, uVar1) & *0xc2a380) + *(iVar3 + 0xc28c70) +\n               dVar8 + (dVar7 - dVar6) + dVar6 ^ SUB168(auVar12, 0);\n    }\n    if (uVar1 - 0x3c300 < 0x3800) {\n        dVar6 = CONCAT44(in_XMM0_Db, in_XMM0_Da) * CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        dVar7 = CONCAT44(in_XMM0_Db, in_XMM0_Da) * CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        dVar11 = dVar8 * dVar6;\n        return (*0xc2a378 - dVar8) +\n               (((*0xc2a370 - dVar11 * dVar11 * dVar11 * (*0xc2a3f0 * dVar6 + *0xc2a400 + *0xc2a410 * dVar6 * dVar6)) -\n                CONCAT44(in_XMM0_Db, in_XMM0_Da) * dVar7 * (*0xc2a3f8 * dVar7 + *0xc2a408 + *0xc2a418 * dVar7 * dVar7))\n               - (dVar8 - (*0xc2a378 - (*0xc2a378 - dVar8))));\n    }\n    if (uVar1 - 0x3fefc < 4) {\n        dVar8 = *0xc2a448 - (dVar8 & *0xc2a430) * *0xc2a448;\n        uVar16 = dVar8 >> 0x20;\n        uVar15 = dVar8 & 0xffffffff;\n        dVar14 = uVar15 | uVar16 << 0x20;\n        dVar6 = SQRT(dVar8);\n        dVar17 = SUB168(CONCAT412(uVar16, CONCAT48(SUB84(dVar8, 0), dVar14)) >> 0x40, 0);\n        dVar13 = uVar15 | uVar16 << 0x20;\n        uVar18 = -(CONCAT44(in_XMM0_Db, in_XMM0_Da) < 0.0);\n        uVar1 = SUB164(ZEXT1216(CONCAT48(in_XMM0_Dd >> 0xc, uVar18)) >> 0x20, 0);\n        dVar8 = *0xc2a3b0 & dVar6;\n        uVar9 = dVar6 >> 0x20;\n        dVar7 = dVar6 & 0xffffffff | uVar9 << 0x20;\n        dVar11 = SUB168(CONCAT412(uVar9, CONCAT48(SUB84(dVar6, 0), dVar7)) >> 0x40, 0);\n        dVar10 = SUB168(CONCAT412(uVar9, CONCAT48(SUB84(dVar6, 0), dVar11)) >> 0x40, 0);\n        auVar12 = pinsrw(ZEXT816(0), in_XMM0_Db >> 0x10 & 0x8000, 3);\n        return (uVar1 << 0x20 & *0xc2a388) +\n               (*0xc2a400 + *0xc2a3f0 * dVar14 + *0xc2a410 * dVar14 * dVar14) * dVar14 * dVar14 * dVar13 * dVar13 *\n               (dVar11 + dVar11) + ((uVar18 & 0xffffffff | uVar1 << 0x20) & *0xc2a380) +\n               (*0xc2a408 + *0xc2a3f8 * dVar17 + *0xc2a418 * dVar17 * dVar17) *\n               SUB168(CONCAT412(uVar16, CONCAT48(uVar15, dVar13)) >> 0x40, 0) * (dVar10 + dVar10) +\n               ((dVar13 - dVar8 * dVar8) - (dVar6 - dVar8) * ((dVar7 + dVar7) - (dVar6 - dVar8))) / dVar11 +\n               dVar11 + dVar11 ^ SUB168(auVar12, 0);\n    }\n    if (uVar1 < 0x3ff00) {\n        return *0xc2a378 + *0xc2a370;\n    }\n    if ((0x3ff00000 - (in_XMM0_Db & 0x7fffffff) | in_XMM0_Da) != 0) {\n        if (((param_1 >> 0x20 & 0x7fffffff) + 0x80100000) - (param_1 == 0) < 0) {\n            auVar12 = pinsrw(ZEXT816(0), 0x7ff0, 3);\n            dVar8 = SUB168(auVar12, 0) * 0.0;\n            uVar4 = SUB84(dVar8, 0);\n            uVar5 = dVar8 >> 0x20;\n            arg_14h = 0x3a;\n        }\n        else {\n            dVar8 = CONCAT44(in_XMM0_Db, in_XMM0_Da) + 0.0;\n            uVar4 = SUB84(dVar8, 0);\n            uVar5 = dVar8 >> 0x20;\n            arg_14h = 0x3f0;\n        }\n        dStack12 = CONCAT44(uVar5, uVar4);\n        fcn.00bc3718(&param_1, &param_1, &dStack12, arg_14h);\n        return dStack12;\n    }\n    iVar3 = -((in_XMM0_Db >> 0x10) >> 0xf);\n    uVar15 = CONCAT44(iVar3, iVar3);\n    return (*0xc2a398 & uVar15) + (*0xc2a390 & uVar15);\n}\n",
        "token_count": 2561
    },
    "00bc2bde": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nfloat10 fcn.00bc2bde(double param_1)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    uchar in_XMM0 [16];\n    double dVar7;\n    double dVar8;\n    uint64_t in_XMM2_Qa;\n    double dVar9;\n    uint32_t uVar11;\n    uchar auVar10 [16];\n    double dVar12;\n    ulong in_XMM6_Qa;\n    double dVar13;\n    double dVar14;\n    double dVar15;\n    double dVar16;\n    double dVar17;\n    uint in_XMM7_Dc;\n    uint in_XMM7_Dd;\n    double dStack12;\n    \n    dVar6 = SUB168(in_XMM0, 0);\n    uVar11 = SUB164(in_XMM0 >> 0x20, 0);\n    uVar3 = uVar11 >> 0xc;\n    auVar10 = pinsrw(ZEXT816(0), 0x2000, 2);\n    uVar2 = uVar3 & 0x7ffff;\n    if (uVar2 - 0x3fb00 < 0x3bb) {\n        iVar4 = (uVar3 & 0xfffc) - 0xfb00;\n        auVar10 = CONCAT88(in_XMM2_Qa & CONCAT44(in_XMM7_Dd, in_XMM7_Dc), *0xc2bc28 & dVar6) | auVar10;\n        iVar5 = iVar4 * 4;\n        dVar9 = SUB168(auVar10, 0);\n        dVar13 = dVar6 * *(iVar4 * 2 + 0xc2b390);\n        dVar1 = SQRT(*0xc2bc30 - dVar6 * dVar6) * dVar9;\n        dVar7 = dVar13 - dVar1;\n        uVar11 = SUB164(auVar10 >> 0x20, 0);\n        uVar2 = uVar11 & 0x80000000;\n        dVar8 = dVar7 * dVar7;\n        return ((dVar6 - dVar9) * (dVar6 + dVar9)) / (dVar13 + dVar1) +\n               (*0xc2bbd0 + *0xc2bbd8 * dVar8) * dVar7 * dVar8 * dVar8 +\n               *0xc2bbc8 * dVar7 * dVar8 + (*(iVar5 + 0xc2a490) ^ uVar2 << 0x20) +\n               ((*(iVar5 + 0xc2a498) ^ SUB168(CONCAT412(uVar11, ZEXT412(uVar2) << 0x20) >> 0x40, 0)) &\n               0xffffffff00000000);\n    }\n    if (uVar2 - 0x3febb < 0x43) {\n        dVar1 = SQRT(*0xc2bc30 - dVar6 * dVar6);\n        dVar7 = dVar6 & *0xc2bbc0;\n        dVar8 = (dVar6 & 0x7fffffffffffffff) - dVar7;\n        dVar9 = *0xc2bc28 & dVar1 | SUB168(auVar10, 0);\n        iVar5 = ((dVar1 << 2) >> 0x30) - 0xfec0;\n        dVar1 = dVar1 * *(iVar5 * 8 + 0xc2b390);\n        dVar13 = (dVar7 * dVar9 - dVar1) + dVar8 * dVar9;\n        iVar5 = iVar5 * 0x10;\n        dVar14 = dVar13 * dVar13;\n        auVar10 = pinsrw(0x0, (SUB161(CONCAT412(in_XMM7_Dd, CONCAT48(in_XMM7_Dc, dVar6)) >> 0x3f, 0) & 1) << 0xf, 3);\n        return (((*0xc2bbd8 * dVar14 + *0xc2bbd0) * dVar13 * dVar14 * dVar14 +\n                *0xc2bbc8 * dVar13 * dVar14 + (*0xc2bb90 - *(iVar5 + 0xc2a490))) -\n               (((*0xc2bc30 - dVar7 * dVar7) - dVar9 * dVar9) - ((dVar6 & 0x7fffffffffffffff) + dVar7) * dVar8) /\n               (dVar1 + dVar1 + dVar13)) + (*0xc2bb98 - *(iVar5 + 0xc2a498) & 0xffffffff00000000) | SUB168(auVar10, 0);\n    }\n    if (uVar2 - 0x3c300 < 0x3800) {\n        dVar1 = dVar6 * dVar6;\n        dVar7 = dVar6 * dVar6;\n        dVar8 = dVar6 * dVar1;\n        return dVar6 + dVar8 * dVar8 * dVar8 * (*0xc2bbe0 * dVar1 + *0xc2bbf0 + *0xc2bc00 * dVar1 * dVar1) +\n                       dVar6 * dVar7 * (*0xc2bbe8 * dVar7 + *0xc2bbf8 + *0xc2bc08 * dVar7 * dVar7);\n    }\n    if (uVar2 - 0x3fefe < 2) {\n        dVar1 = SQRT(*0xc2bc30 - dVar6 * dVar6);\n        dVar8 = dVar6 & *0xc2bbb0;\n        uVar11 = dVar1 >> 0x20;\n        dVar14 = dVar1 & 0xffffffff | uVar11 << 0x20;\n        dVar7 = dVar1 & *0xc2bbb0;\n        dVar6 = dVar6 - dVar8;\n        dVar12 = SUB168(CONCAT412(uVar11, CONCAT48(SUB84(dVar1, 0), dVar14)) >> 0x40, 0);\n        dVar15 = SUB128(CONCAT84(in_XMM6_Qa, uVar11), 0) << 0x20;\n        dVar1 = (uVar11 << 0x20) * (uVar11 << 0x20);\n        dVar9 = (uVar11 << 0x20) * (uVar11 << 0x20);\n        dVar16 = dVar15 * dVar1;\n        dVar17 = SUB168(CONCAT412(uVar11, ZEXT812(dVar15)) >> 0x40, 0) * dVar9;\n        dVar13 = dVar16 * dVar16 * dVar16;\n        auVar10 = pinsrw(ZEXT816(0), SUB162(in_XMM0 >> 0x30, 0) & 0x8000, 3);\n        return (((*0xc2bb90 + (*0xc2bc10 * dVar1 + *0xc2bc18) * dVar16 * dVar16 * dVar13) -\n                ((dVar1 * dVar1 * *0xc2bc00 + *0xc2bbf0 + *0xc2bbe0 * dVar1) * dVar13 +\n                 (SUB128(CONCAT84(dVar17, (dVar9 * dVar9 * *0xc2bc08 + *0xc2bbf8 + *0xc2bbe8 * dVar9) * dVar17 >> 0x20)\n                         , 0) << 0x20) +\n                (((((*0xc2bc30 - dVar8 * dVar8) - (dVar8 + dVar8) * dVar6) - dVar7 * dVar7) - dVar6 * dVar6) +\n                (dVar14 + dVar14 + (dVar7 - dVar14)) * (dVar7 - dVar14)) / (dVar12 + dVar12))) -\n               (dVar15 - (*0xc2bb98 + (dVar15 - *0xc2bb98)))) - (dVar15 - *0xc2bb98) | SUB168(auVar10, 0);\n    }\n    if (uVar2 < 0x3ff00) {\n        if (0x7fdf < (param_1 >> 0x30 & 0x7ff0) - 0x10) {\n            param_1 = param_1 | param_1 + 0.0;\n        }\n        return param_1;\n    }\n    if ((0x3ff00000 - (uVar11 & 0x7fffffff) | SUB164(in_XMM0, 0)) != 0) {\n        if (((param_1 >> 0x20 & 0x7fffffff) + 0x80100000) - (SUB84(param_1, 0) == 0) < 0) {\n            auVar10 = pinsrw(ZEXT816(0), 0x7ff0, 3);\n            dStack12 = SUB168(auVar10, 0) * 0.0;\n            arg_14h = 0x3d;\n        }\n        else {\n            dStack12 = param_1 + 0.0;\n            arg_14h = 0x3f1;\n        }\n        fcn.00bc3718(&param_1, &param_1, &dStack12, arg_14h);\n        return dStack12;\n    }\n    return *0xc2bb98 + *0xc2bb90 | ~*0xc2bc20 & dVar6;\n}\n",
        "token_count": 2209
    },
    "00bb67c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00bb67c8(uint param_1, uint32_t param_2, int32_t param_3, uint param_4)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 in_ST0;\n    float10 fVar4;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((in_EAX & 0xfffff) == 0) && (param_3 == 0)) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = fcn.00bc03cc();\n        }\n        if (*0xc549d8 == 0) {\n            uVar3 = fcn.00bc0357(arg_8h, unaff_retaddr, param_3, param_4);\n            return CONCAT44(arg_8h, uVar3);\n        }\n    }\n    else {\n        fVar4 = fcos(in_ST0);\n        uVar1 = in_EAX & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar4 = fVar4 - (fVar4 / *0xc27c6a) * *0xc27c6a;\n                uVar1 = uVar1 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fcos(fVar4);\n        }\n        if (*0xc549d8 == 0) {\n            uVar2 = uVar1 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar3 = fcn.00bc0357(arg_8h, unaff_retaddr, param_3, param_4);\n                    return CONCAT44(arg_8h, uVar3);\n                }\n                uVar2 = uVar2 & 0xffff0020;\n            }\n            return CONCAT44(arg_8h, uVar2);\n        }\n    }\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 608
    },
    "00bc4d1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bc4d1c(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        fcn.00bba730();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 197
    },
    "00bc6522": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.00bc6522(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0xc4fd50 ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    iVar14 = 0;\n    uVar10 = uVar1 & 0x7fff;\n    uVar16 = *(arg_8h + 3);\n    iVar11 = uVar10 - 0x3fff;\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar2 = *arg_8h;\n    var_8h = uVar2 << 0x10;\n    uVar3 = str.5_v_[1];\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x00bc6597;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = str.5_v_[0] + L'\\xffffffff';\n        bVar5 = false;\n        iVar15 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x00bc6697;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            bVar5 = false;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar4 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar4 = true;\n                bVar5 = true;\n            }\n            (&var_10h)[iVar12] = uVar9;\n            while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar4))) {\n                bVar4 = false;\n                bVar5 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar4 = true;\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar12] = uVar7;\n            }\n        }\ncode_r0x00bc6697:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar5) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        if (iVar15 < *0xc50114 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0xc50114 < iVar15) {\n                if (iVar15 < *0xc50110) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = str.5_v_[3] + iVar15;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = str.5_v_[3] + *0xc50110;\n                }\n                goto code_r0x00bc6a48;\n            }\n            iVar11 = *0xc50114 - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar2 << 0x10;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                (&var_10h)[iVar14] = uVar16;\n                iVar14 = iVar14 + 1;\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (str.5_v_[0] >> 0x1f & 0x1fU) + str.5_v_[0] >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x00bc6852;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar5 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar14] = uVar17;\n                while ((iVar14 = iVar14 + -1,  -1 < iVar14 && (bVar5))) {\n                    bVar5 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar5 = true;\n                    }\n                    (&var_10h)[iVar14] = uVar16;\n                }\n            }\ncode_r0x00bc6852:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = str.5_v_[1] + L'\\x01';\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x00bc6597:\n        iVar15 = 0;\n    }\ncode_r0x00bc6a48:\n    uVar16 = iVar15 << (0x1f - uVar3 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar16;\n    }\n    fcn.00bbc836(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3221
    },
    "00bc6a94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.00bc6a94(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0xc4fd50 ^ &stack0xfffffffc;\n    uVar1 = arg_8h[5];\n    iVar14 = 0;\n    uVar10 = uVar1 & 0x7fff;\n    uVar16 = *(arg_8h + 3);\n    iVar11 = uVar10 - 0x3fff;\n    var_10h = uVar16;\n    uVar17 = *(arg_8h + 1);\n    var_ch = uVar17;\n    uVar2 = *arg_8h;\n    var_8h = uVar2 << 0x10;\n    uVar3 = *0xc50134;\n    if (iVar11 == -0x3fff) {\n        iVar15 = 0;\n        iVar11 = 0;\n        do {\n            if ((&var_10h)[iVar11] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                goto code_r0x00bc6b09;\n            }\n            iVar11 = iVar11 + 1;\n        } while (iVar11 < 3);\n    }\n    else {\n        iVar6 = *0xc50130 + -1;\n        bVar5 = false;\n        iVar15 = (*0xc50130 >> 0x1f & 0x1fU) + *0xc50130 >> 5;\n        uVar8 = 0x1f - (*0xc50130 & 0x1f);\n        if (((&var_10h)[iVar15] & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar7 = (&var_10h)[iVar15] & ~(-1 << (uVar8 & 0x1f));\n            iVar12 = iVar15;\n            while (uVar7 == 0) {\n                iVar12 = iVar12 + 1;\n                if (2 < iVar12) goto code_r0x00bc6c09;\n                uVar7 = (&var_10h)[iVar12];\n            }\n            iVar12 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n            bVar5 = false;\n            uVar7 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n            uVar9 = uVar7 + (&var_10h)[iVar12];\n            bVar4 = false;\n            if ((uVar9 < (&var_10h)[iVar12]) || (uVar9 < uVar7)) {\n                bVar4 = true;\n                bVar5 = true;\n            }\n            (&var_10h)[iVar12] = uVar9;\n            while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar4))) {\n                bVar4 = false;\n                bVar5 = false;\n                uVar7 = (&var_10h)[iVar12] + 1;\n                if ((uVar7 < (&var_10h)[iVar12]) || (uVar7 == 0)) {\n                    bVar4 = true;\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar12] = uVar7;\n            }\n        }\ncode_r0x00bc6c09:\n        (&var_10h)[iVar15] = (&var_10h)[iVar15] & -1 << (uVar8 & 0x1f);\n        iVar15 = iVar15 + 1;\n        if (iVar15 < 3) {\n            puVar13 = &var_10h + iVar15;\n            for (iVar12 = 3 - iVar15; iVar12 != 0; iVar12 = iVar12 + -1) {\n                *puVar13 = 0;\n                puVar13 = puVar13 + 1;\n            }\n        }\n        iVar15 = iVar11;\n        if (bVar5) {\n            iVar15 = uVar10 - 0x3ffe;\n        }\n        if (iVar15 < *0xc5012c - *0xc50130) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0xc5012c < iVar15) {\n                if (iVar15 < *0xc50128) {\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar15 = *0xc5013c + iVar15;\n                    iVar11 = *0xc50134 + (*0xc50134 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    iVar14 = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar11 = *0xc50134 + (*0xc50134 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar3 & 0x1f;\n                    var_20h = 0;\n                    do {\n                        uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                        var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        (&var_10h)[iVar14] = uVar16;\n                        iVar14 = iVar14 + 1;\n                    } while (iVar14 < 3);\n                    puVar13 = &var_8h + -iVar11;\n                    iVar14 = 2;\n                    do {\n                        if (iVar14 < iVar11) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar13;\n                        }\n                        puVar13 = puVar13 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar15 = *0xc5013c + *0xc50128;\n                }\n                goto code_r0x00bc6fba;\n            }\n            iVar11 = *0xc5012c - iVar11;\n            var_10h = uVar16;\n            iVar15 = iVar11 + (iVar11 >> 0x1f & 0x1fU) >> 5;\n            var_ch = uVar17;\n            var_8h = uVar2 << 0x10;\n            uVar8 = iVar11 & 0x1f;\n            var_20h = 0;\n            do {\n                uVar16 = (&var_10h)[iVar14] >> uVar8 | var_20h;\n                var_20h = ((&var_10h)[iVar14] & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                (&var_10h)[iVar14] = uVar16;\n                iVar14 = iVar14 + 1;\n            } while (iVar14 < 3);\n            puVar13 = &var_8h + -iVar15;\n            iVar11 = 2;\n            do {\n                if (iVar11 < iVar15) {\n                    (&var_10h)[iVar11] = 0;\n                }\n                else {\n                    (&var_10h)[iVar11] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar11 = iVar11 + -1;\n            } while (-1 < iVar11);\n            iVar11 = (*0xc50130 >> 0x1f & 0x1fU) + *0xc50130 >> 5;\n            uVar8 = 0x1f - (*0xc50130 & 0x1f);\n            if (((&var_10h)[iVar11] & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar16 = (&var_10h)[iVar11] & ~(-1 << (uVar8 & 0x1f));\n                iVar14 = iVar11;\n                while (uVar16 == 0) {\n                    iVar14 = iVar14 + 1;\n                    if (2 < iVar14) goto code_r0x00bc6dc4;\n                    uVar16 = (&var_10h)[iVar14];\n                }\n                iVar14 = (iVar6 >> 0x1f & 0x1fU) + iVar6 >> 5;\n                uVar16 = 1 << (0x1f - (iVar6 & 0x1f) & 0x1f);\n                bVar5 = false;\n                uVar17 = uVar16 + (&var_10h)[iVar14];\n                if ((uVar17 < (&var_10h)[iVar14]) || (uVar17 < uVar16)) {\n                    bVar5 = true;\n                }\n                (&var_10h)[iVar14] = uVar17;\n                while ((iVar14 = iVar14 + -1,  -1 < iVar14 && (bVar5))) {\n                    bVar5 = false;\n                    uVar16 = (&var_10h)[iVar14] + 1;\n                    if ((uVar16 < (&var_10h)[iVar14]) || (uVar16 == 0)) {\n                        bVar5 = true;\n                    }\n                    (&var_10h)[iVar14] = uVar16;\n                }\n            }\ncode_r0x00bc6dc4:\n            (&var_10h)[iVar11] = (&var_10h)[iVar11] & -1 << (uVar8 & 0x1f);\n            iVar11 = iVar11 + 1;\n            if (iVar11 < 3) {\n                puVar13 = &var_10h + iVar11;\n                for (iVar14 = 3 - iVar11; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar13 = 0;\n                    puVar13 = puVar13 + 1;\n                }\n            }\n            iVar14 = *0xc50134 + 1;\n            iVar11 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar14 & 0x1f;\n            var_20h = 0;\n            var_34h = 0;\n            do {\n                uVar16 = (&var_10h)[var_34h];\n                (&var_10h)[var_34h] = uVar16 >> uVar8 | var_20h;\n                var_20h = (uVar16 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_34h = var_34h + 1;\n            } while (var_34h < 3);\n            puVar13 = &var_8h + -iVar11;\n            iVar14 = 2;\n            do {\n                if (iVar14 < iVar11) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar13;\n                }\n                puVar13 = puVar13 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\ncode_r0x00bc6b09:\n        iVar15 = 0;\n    }\ncode_r0x00bc6fba:\n    uVar16 = iVar15 << (0x1f - uVar3 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0xc50138 == 0x40) {\n        arg_ch[1] = uVar16;\n        *arg_ch = var_ch;\n    }\n    else if (*0xc50138 == 0x20) {\n        *arg_ch = uVar16;\n    }\n    fcn.00bbc836(uVar1 & 0x8000);\n    return;\n}\n",
        "token_count": 3191
    },
    "00bc8072": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00bc8072(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_20h;\n    \n    if (*(unaff_EBP + -0x20) != 0) {\n        if (unaff_EDI != 0) {\n            puVar1 = *((*unaff_ESI >> 5) * 4 + 0xc549e0) + 4 + (*unaff_ESI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.00bbd7ec(*unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "00be64ff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00be64ff(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **in_ECX;\n    \n    iVar1 = **in_ECX;\n    if ((1 < iVar1) && (iVar1 != 0x7fffffff)) {\n        **in_ECX = iVar1 + -1;\n        fcn.00b98d3b(in_ECX);\n        **in_ECX = 1;\n    }\n    piVar2 = *in_ECX;\n    if (arg_8h == 2) {\n        if (*piVar2 != 0x7fffffff) {\n            *piVar2 = 1;\n        }\n    }\n    else {\n        *piVar2 = 0x7fffffff;\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00be65b5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00be65b5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    double *in_ECX;\n    float10 fVar2;\n    \n    iVar1 = *(in_ECX + 0xc);\n    if (iVar1 < 1) goto code_r0x00be65ec;\n    if (iVar1 < 3) {\ncode_r0x00be65db:\n        fcn.00b99593();\n    }\n    else if (iVar1 != 3) {\n        if (((iVar1 != 4) && (iVar1 != 9)) && (iVar1 != 0xb)) goto code_r0x00be65ec;\n        goto code_r0x00be65db;\n    }\n    fVar2 = fcn.00b99cf8();\n    *in_ECX = *in_ECX / fVar2;\ncode_r0x00be65ec:\n    fcn.00b9997f();\n    return;\n}\n",
        "token_count": 215
    },
    "00be65fa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00be65fa(int32_t param_1)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00b99c42();\n    if ((cVar1 == '\\0') && (*(param_1 + 0xc) != 3)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 78
    },
    "00be6665": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00be6665(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar2 = 8;\n        if (7 < uVar1) {\n            uVar2 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar2;\n        uVar3 = fcn.00bb0ff6(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00bb1080(uVar3, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.00bb106c(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar3;\n    }\n    iVar4 = fcn.00bb0ff6(0x10);\n    if (iVar4 == 0) {\n        iVar4 = 0;\n    }\n    else {\n        *(iVar4 + 8) = 0;\n        fcn.00b99ac0(arg_8h);\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = iVar4;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 391
    },
    "00be670d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00be670d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 4);\n    if (*(param_1 + 9) != '\\0') {\n        iVar1 = *(iVar1 + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 75
    },
    "00be68bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00be68bf(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    uVar1 = *(in_ECX + 0xf4);\n    uVar2 = *(in_ECX + 0x15c);\n    if (arg_ch != '\\0') {\n        fcn.00b98561(arg_8h);\n    }\n    fcn.00ba0b30(arg_8h);\n    if (arg_ch != '\\0') {\n        fcn.00b9843f();\n    }\n    while (uVar2 < *(in_ECX + 0x15c)) {\n        fcn.00bafdcf();\n    }\n    *(in_ECX + 0xf4) = uVar1;\n    return;\n}\n",
        "token_count": 195
    },
    "00be6bf6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00be6bf6(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint uVar1;\n    \n    if (*(in_ECX + 0x2c) == 0) {\n        if (*(in_ECX + 0xc) == '\\0') {\n            if ((*0xc5691c == 0) && (*0xc57420 < 100)) {\n                *0xc57420 = *0xc57420 + 1;\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = 10;\n            }\n            (*_sym.imp.KERNEL32.dll_Sleep)(uVar1);\n        }\n        uVar1 = 0;\n    }\n    else {\n        arg_8h_00 = **(in_ECX + 0x30);\n        fcn.00c1629f(arg_8h_00);\n        fcn.00b9467d();\n        if (arg_8h_00 != 0) {\n            fcn.00b94665(extraout_ECX);\n        }\n        *0xc57420 = 0;\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 280
    },
    "00be6c62": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00be6c62(uchar *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uchar *puVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar2 = 8;\n        if (7 < uVar1) {\n            uVar2 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar2;\n        uVar3 = fcn.00bb0ff6(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00bb1080(uVar3, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.00bb106c(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar3;\n    }\n    puVar4 = fcn.00bb0ff6(1);\n    if (puVar4 == NULL) {\n        puVar4 = NULL;\n    }\n    else {\n        *puVar4 = *arg_8h;\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar4;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 380
    },
    "00be710e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.00be710e(int32_t **rgsabound)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    ulong uVar7;\n    uint pvargDest;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    ppiVar1 = rgsabound;\n    if (rgsabound[3] == 0x5) {\n        iVar3 = *(**rgsabound + 0x10c);\n        iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayCreateEx)(0xc, iVar3, &rgsabound);\n        if (-1 < iVar2) {\n            iVar6 = 0;\n            iVar2 = 0;\n            if (0 < iVar3) {\n                do {\n                    iVar4 = iVar2 + 1;\n                    rgsabound[iVar2 * 2 + 5] = NULL;\n                    var_8h = iVar4;\n                    fcn.00be6615();\n                    uVar7 = fcn.00b98e6b(iVar4);\n                    rgsabound[(uVar7 >> 0x20) * 2 + 4] = uVar7;\n                    iVar2 = var_8h;\n                } while (var_8h < iVar3);\n            }\n            *(rgsabound + 2) = 0x880;\n            rgsabound[1] = 0x10;\n            iVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayDestroyDescriptor)(rgsabound);\n            if (iVar3 < 0) {\n                (*_sym.imp.OLEAUT32.dll_SafeArrayDestroyData)(rgsabound);\n            }\n            else {\n                (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n                var_24h = 0;\n                var_20h = 0;\n                var_1ch = 0;\n                var_14h = 0;\n                var_10h = 1;\n                iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(rgsabound, &var_8h);\n                iVar3 = var_8h;\n                if (-1 < iVar2) {\n                    fcn.00b99e9c(ppiVar1);\n                    piVar5 = ~-(var_10h != 5) & var_1ch;\n                    fcn.00be64ff(2);\n                    iVar2 = *piVar5;\n                    iVar4 = *(iVar2 + 8);\n                    iVar2 = *(iVar2 + 4);\n                    var_ch = iVar2;\n                    if (0 < iVar4) {\n                        do {\n                            if (*(iVar2 + iVar6 * 4) != 0) {\n                                fcn.00be70dc(*(iVar2 + iVar6 * 4));\n                                (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(iVar3, &pvargDest);\n                                iVar2 = var_ch;\n                            }\n                            iVar6 = iVar6 + 1;\n                            iVar3 = iVar3 + 0x10;\n                        } while (iVar6 < iVar4);\n                    }\n                    (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(rgsabound);\n                    ppiVar1 = rgsabound;\n                    fcn.00b99a20();\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n                    return ppiVar1;\n                }\n                (*_sym.imp.OLEAUT32.dll_SafeArrayRedim)(rgsabound);\n                (*_sym.imp.OLEAUT32.dll_SafeArrayDestroyData)(rgsabound);\n                fcn.00b99a20();\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 914
    },
    "00be7452": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00be7452(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, ushort *arg_14h)\n\n{\n    uint uVar1;\n    \n    if ((((arg_14h == NULL) || (arg_ch != 0)) || (arg_10h != 0)) || (*(arg_8h + 8) != 0xc)) {\n        uVar1 = 0x80004001;\n    }\n    else {\n        *arg_14h = 0x16;\n        *(arg_14h + 4) = (*(*(arg_8h + 0xc) + 0xc) - 1U >> 2) + 1;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 177
    },
    "00be7492": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00be7492(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint16_t *arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((((arg_14h == NULL) || (arg_ch != 0)) || (arg_10h != 0)) || (arg_18h != 0)) {\n        uVar2 = 0x80070057;\n    }\n    else {\n        *arg_14h = 0x8000;\n        *arg_14h = *(arg_8h + 8) | 0x8000;\n        iVar1 = *(arg_8h + 8);\n        if (iVar1 == 0xc) {\n            uVar2 = *(arg_8h + 0xc);\n        }\n        else if (iVar1 == 0xd) {\n            uVar2 = *(arg_8h + 0x14);\n        }\n        else if (iVar1 == 0xe) {\n            uVar2 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*(arg_8h + 0x18));\n        }\n        else {\n            uVar2 = *(arg_8h + 0x10);\n        }\n        *(arg_14h + 4) = uVar2;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 326
    },
    "00be76c5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00be76c5(uint lpString2, uint noname_1, uint *arg_10h)\n\n{\n    ushort *puVar1;\n    code *pcVar2;\n    ushort uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int16_t iVar6;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t *piVar7;\n    uint *puVar8;\n    uint16_t uVar9;\n    int32_t iVar10;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t *lpString1;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    *arg_10h = 0;\n    arg_10h[3] = 0;\n    var_4h = NULL;\n    iVar4 = (**(*in_ECX + 0x10))();\n    if (iVar4 < 0) goto code_r0x00be7a0b;\n    if (var_4h == NULL) {\n        iVar4 = -0x7fffbfff;\n        goto code_r0x00be7a0b;\n    }\n    var_8h = NULL;\n    iVar4 = (**(*var_4h + 0xc))(var_4h, &var_ch);\n    if (iVar4 < 0) goto code_r0x00be7a0b;\n    if ((*(var_ch + 0x28) == 3) && ((*(var_ch + 0x36) & 0x40) != 0)) {\n        (**(*var_4h + 0x4c))(var_4h, var_ch);\n        iVar4 = (**(*var_4h + 0x20))(var_4h, 0xffffffff, &var_18h);\n        if (iVar4 < 0) {\n            iVar4 = -0x7fffbffb;\n            goto code_r0x00be7a0b;\n        }\n        lpString1 = NULL;\n        iVar4 = (**(*var_4h + 0x38))(var_4h, var_18h, &lpString1);\n        piVar7 = lpString1;\n        if (iVar4 < 0) {\n            iVar4 = -0x7fffbffb;\n        }\n        else {\n            if (var_4h != lpString1) {\n                piVar5 = var_4h;\n                if (lpString1 != NULL) {\n                    (**(*lpString1 + 4))(lpString1);\n                    piVar5 = var_4h;\n                }\n                var_4h = piVar7;\n                if (piVar5 != NULL) {\n                    (**(*piVar5 + 8))(piVar5);\n                }\n            }\n            iVar4 = (**(*var_4h + 0xc))(var_4h, &var_ch);\n            if (-1 < iVar4) {\n                if (lpString1 != NULL) {\n                    (**(*lpString1 + 8))(lpString1);\n                }\n                goto code_r0x00be77db;\n            }\n        }\n        if (lpString1 != NULL) {\n            (**(*lpString1 + 8))(lpString1);\n        }\n        goto code_r0x00be7a0b;\n    }\ncode_r0x00be77db:\n    var_14h = -1;\n    iVar4 = (**(*var_4h + 0x28))(var_4h, &lpString2, 1, &var_14h);\n    if (iVar4 < 0) {\n        lpString1 = NULL;\n        iVar4 = (**(*var_4h + 0x1c))(var_4h);\n        pcVar2 = _sym.imp.OLEAUT32.dll_SysStringLen;\n        if (-1 < iVar4) {\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(lpString1);\n            var_14h = in_EDX;\n            goto code_r0x00be7821;\n        }\n        uVar9 = 0;\n        if (*(var_ch + 0x2c) != 0) {\n            do {\n                iVar4 = (**(*var_4h + 0x14))(var_4h, uVar9, &var_8h);\n                if (iVar4 < 0) goto code_r0x00be792b;\n                (**(*var_4h + 0x30))(var_4h, *var_8h, &lpString1, 0, 0, 0);\n                if (((*(var_8h + 4) & 3) != 0) &&\n                   (iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(lpString1, lpString2),  iVar4 == 0)) {\n                    (*pcVar2)(lpString1);\n                    break;\n                }\n                (*pcVar2)(lpString1);\n                (**(*var_4h + 0x50))(var_4h, var_8h);\n                uVar9 = uVar9 + 1;\n                var_8h = NULL;\n            } while (uVar9 < *(var_ch + 0x2c));\n        }\n    }\n    else {\ncode_r0x00be7821:\n        uVar9 = 0;\n        if (*(var_ch + 0x2c) != 0) {\n            do {\n                iVar4 = (**(*var_4h + 0x14))(var_4h, uVar9, &var_8h);\n                if (iVar4 < 0) goto code_r0x00be792b;\n                if (((*(var_8h + 4) & 3) != 0) && (*var_8h == var_14h)) break;\n                (**(*var_4h + 0x50))(var_4h, var_8h);\n                uVar9 = uVar9 + 1;\n                var_8h = NULL;\n            } while (uVar9 < *(var_ch + 0x2c));\n        }\n    }\n    iVar4 = 0;\n    (**(*var_4h + 0x4c))(var_4h, var_ch);\n    if (var_8h != NULL) {\n        if (*(var_8h + 6) < 0x21) {\n            *arg_10h = 1;\n            piVar7 = var_8h;\n            if (0 < *(var_8h + 6)) {\n                iVar10 = 0;\n                puVar8 = arg_10h + 4;\n                do {\n                    iVar6 = *(piVar7[2] + 4 + iVar10);\n                    *puVar8 = iVar6;\n                    if (iVar6 == 0x1a) {\n                        *puVar8 = *(*(piVar7[2] + iVar10) + 4) | 0x4000;\n                    }\n                    if (*puVar8 == 0x1b) {\n                        *puVar8 = *(*(piVar7[2] + iVar10) + 4) | 0x2000;\n                    }\n                    if (*puVar8 == 0x1d) {\n                        uVar3 = fcn.00be7579();\n                        *puVar8 = uVar3;\n                        piVar7 = var_8h;\n                    }\n                    iVar4 = iVar4 + 1;\n                    puVar1 = piVar7[2] + 0xc + iVar10;\n                    iVar10 = iVar10 + 0x10;\n                    *(puVar8 + 2) = *puVar1;\n                    puVar8 = puVar8 + 1;\n                } while (iVar4 < *(piVar7 + 6));\n            }\n            iVar6 = *(piVar7 + 9);\n            if (iVar6 == 0x16) {\n                iVar6 = 3;\n            }\n            else if (iVar6 == 0x17) {\n                iVar6 = 0x13;\n            }\n            else if (iVar6 == 0x18) {\n                iVar6 = 0;\n            }\n            else if (iVar6 == 0x19) {\n                iVar6 = 10;\n            }\n            *(arg_10h + 3) = iVar6;\n            arg_10h[1] = piVar7[4];\n            arg_10h[2] = piVar7[5];\n            *(arg_10h + 0xe) = *(piVar7 + 6);\n            (**(*var_4h + 0x50))(var_4h, piVar7);\n            iVar4 = 0;\n            goto code_r0x00be7a0b;\n        }\n        (**(*var_4h + 0x50))(var_4h, var_8h);\n    }\n    iVar4 = -0x7fffbffb;\ncode_r0x00be7a0b:\n    if (var_4h != NULL) {\n        (**(*var_4h + 8))(var_4h);\n    }\n    return iVar4;\ncode_r0x00be792b:\n    (**(*var_4h + 0x4c))(var_4h, var_ch);\n    goto code_r0x00be7a0b;\n}\n",
        "token_count": 2062
    },
    "00be7a78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00be7a78(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint arg_ch;\n    uint uVar5;\n    int32_t *piVar6;\n    uint lpclsid;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint lpszProgID;\n    int32_t var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *lplpszProgID;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    lpclsid = *0xc22c2c;\n    uStack84 = *0xc22c30;\n    uStack80 = *0xc22c34;\n    uStack76 = *0xc22c38;\n    var_34h = in_EDX;\n    iVar1 = (***in_ECX)();\n    if (iVar1 < 0) {\n        piVar6 = 0x800;\n        var_28h = NULL;\n        iVar1 = (**(*in_ECX + 0x10))();\n    }\n    else {\n        piVar6 = var_28h;\n        iVar1 = (**(*var_28h + 0xc))(var_28h, &var_4h);\n        (**(*var_28h + 8))(var_28h);\n    }\n    if ((iVar1 < 0) || (var_4h == NULL)) goto code_r0x00be7c86;\n    var_8h = NULL;\n    iVar1 = (**(*var_4h + 0x48))(var_4h, &var_8h, &var_1ch, var_28h, piVar6);\n    if ((-1 < iVar1) && (var_8h != NULL)) {\n        (**(*var_8h + 0x14))(var_8h, var_1ch, &var_10h);\n        if (var_10h != 5) {\n            uVar2 = (**(*var_8h + 0xc))(var_8h);\n            puVar4 = NULL;\n            uVar3 = 0;\n            var_24h = NULL;\n            if (uVar2 != 0) {\n                do {\n                    if (puVar4 != NULL) break;\n                    var_10h = 0;\n                    (**(*var_8h + 0x14))(var_8h, uVar3, &var_10h);\n                    if (var_10h == 5) {\n                        (**(*var_8h + 0x10))(var_8h, uVar3, &var_ch);\n                        (**(*var_ch + 0xc))(var_ch, &var_2ch);\n                        var_20h = *(var_2ch + 0x30);\n                        (**(*var_ch + 0x4c))(var_ch, var_2ch);\n                        var_18h = -1;\n                        if (var_20h != NULL) {\n                            do {\n                                iVar1 = (**(*var_ch + 0x20))(var_ch, puVar4, &var_30h);\n                                if (iVar1 == 0) {\n                                    (**(*var_4h + 0x38))(var_4h, var_30h, &lplpszProgID);\n                                    (**(*lplpszProgID + 0x48))(lplpszProgID, 0, &var_18h);\n                                    if (var_18h == var_1ch) {\n                                        puVar4 = 0x1;\n                                        var_24h = 0x1;\n                                        (**(*lplpszProgID + 8))(lplpszProgID);\n                                        (**(*var_4h + 8))(var_4h);\n                                        var_4h = var_ch;\n                                        goto code_r0x00be7bea;\n                                    }\n                                    (**(*lplpszProgID + 8))();\n                                }\n                                puVar4 = puVar4 + 1;\n                            } while (puVar4 < var_20h);\n                        }\n                        (**(*var_ch + 8))(var_ch);\n                        puVar4 = var_24h;\n                    }\ncode_r0x00be7bea:\n                    uVar3 = uVar3 + 1;\n                } while (uVar3 < uVar2);\n            }\n            if (var_10h != 5) goto code_r0x00be7c7d;\n        }\n        (**(*var_4h + 0xc))(var_4h, &var_24h);\n        lpclsid = *var_24h;\n        uStack84 = var_24h[1];\n        uStack80 = var_24h[2];\n        uStack76 = var_24h[3];\n        (**(*var_4h + 0x4c))(var_4h, var_24h);\n        if (var_34h == 0) {\n            lplpszProgID = NULL;\n            iVar1 = (*_sym.imp.ole32.dll_ProgIDFromCLSID)(&lpclsid, &lplpszProgID);\n            if (-1 < iVar1) {\n                fcn.00b97f41(lplpszProgID);\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(lplpszProgID);\n                uVar5 = 0xffffffff;\n                arg_ch = 0xc1fb80;\n                arg_8h_00 = fcn.00b97e2f(0xc1fb80);\n                fcn.00b97e8c(arg_8h_00, arg_ch);\n                (*_sym.imp.ole32.dll_CLSIDFromProgID)(lpszProgID, &lpclsid, arg_8h_00, arg_ch, uVar5);\n                fcn.00b95a64();\n            }\n        }\n    }\ncode_r0x00be7c7d:\n    (**(*var_4h + 8))(var_4h);\ncode_r0x00be7c86:\n    iVar1 = fcn.00bb16c4(&arg_8h, &lpclsid, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 1485
    },
    "00be817e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00be817e(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    \n    puVar2 = fcn.00bb0ff6(8);\n    puVar2[1] = 0;\n    *puVar2 = *arg_8h;\n    puVar1 = puVar2;\n    if (*0xc574ac != NULL) {\n        *(*0xc574b0 + 4) = puVar2;\n        puVar1 = *0xc574ac;\n    }\n    *0xc574ac = puVar1;\n    *0xc574a8 = *0xc574a8 + 1;\n    *0xc574b0 = puVar2;\n    return;\n}\n",
        "token_count": 167
    },
    "00be81f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00be81f7(uint hObj, int32_t pDestinationSid, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint32_t uVar5;\n    uint in_ECX;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint32_t pAclInformation;\n    uint var_2ch;\n    uint lpbDaclDefaulted;\n    int32_t pAceList;\n    int32_t lpbDaclPresent;\n    uint var_18h;\n    uint pSIRequested;\n    uint pSecurityDescriptor;\n    uint32_t var_ch;\n    uint pSID;\n    int32_t pDacl;\n    \n    pSIRequested = 4;\n    uVar7 = 0;\n    pSecurityDescriptor = 0;\n    pSID = 0;\n    var_ch = 0;\n    cVar1 = fcn.00be874a(&pSecurityDescriptor, in_ECX, &var_18h);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00be87e7(var_18h);\n        if (cVar1 != '\\0') {\n            pDacl = 0;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_GetSecurityDescriptorDacl)\n                              (pSecurityDescriptor, &lpbDaclPresent, &pDacl, &lpbDaclDefaulted);\n            if (iVar2 != 0) {\n                fcn.00bb3020(&pAclInformation, 0, 0xc);\n                var_2ch = 8;\n                if (pDacl != 0) {\n                    iVar2 = (*_sym.imp.ADVAPI32.dll_GetAclInformation)(pDacl, &pAclInformation, 0xc, 2);\n                    if (iVar2 == 0) goto code_r0x00be83cb;\n                }\n                (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pDestinationSid);\n                cVar1 = fcn.00be87b3(var_2ch);\n                uVar5 = var_ch;\n                if (cVar1 != '\\0') {\n                    if ((lpbDaclPresent != 0) && (pAclInformation != 0)) {\n                        var_ch = 0;\n                        do {\n                            iVar2 = (*_sym.imp.ADVAPI32.dll_GetAce)(pDacl, var_ch, &pAceList);\n                            if (iVar2 == 0) goto code_r0x00be83cb;\n                            iVar2 = (*_sym.imp.ADVAPI32.dll_AddAce)(uVar5, 2, 0xffffffff, pAceList, *(pAceList + 2));\n                            if (iVar2 == 0) goto code_r0x00be83cb;\n                            var_ch = var_ch + 1;\n                        } while (var_ch < pAclInformation);\n                    }\n                    pAceList = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pDestinationSid);\n                    pAceList = pAceList + 8;\n                    uVar3 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, pAceList);\n                    puVar4 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar3);\n                    if (puVar4 != NULL) {\n                        *(puVar4 + 2) = pAceList;\n                        uVar3 = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pDestinationSid, puVar4 + 8, pDestinationSid);\n                        iVar2 = (*_sym.imp.ADVAPI32.dll_CopySid)(uVar3);\n                        if (iVar2 != 0) {\n                            puVar6 = arg_10h + 4;\n                            pDestinationSid = 0;\n                            do {\n                                *puVar4 = *(puVar6 + -1);\n                                puVar4[1] = *(puVar6 + -3);\n                                *(puVar4 + 4) = *puVar6;\n                                iVar2 = (*_sym.imp.ADVAPI32.dll_AddAce)(uVar5, 2, 0xffffffff, puVar4, *(puVar4 + 2));\n                                if (iVar2 == 0) goto code_r0x00be83cb;\n                                pDestinationSid = pDestinationSid + 1;\n                                puVar6 = puVar6 + 3;\n                            } while (pDestinationSid == 0);\n                            iVar2 = (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)(pSID, 1, uVar5, 0);\n                            if (iVar2 != 0) {\n                                iVar2 = (*_sym.imp.USER32.dll_SetUserObjectSecurity)(hObj, &pSIRequested, pSID);\n                                if (iVar2 != 0) {\n                                    uVar7 = 1;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00be83cb:\n    fcn.00be86b3();\n    fcn.00be86b3();\n    fcn.00be86b3();\n    uVar5 = fcn.00be86b3();\n    return uVar5 & 0xffffff00 | uVar7;\n}\n",
        "token_count": 1153
    },
    "00be83f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00be83f4(uint hObj, uint32_t pDestinationSid, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint32_t uVar5;\n    uint in_ECX;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint32_t pAclInformation;\n    uint var_2ch;\n    uint lpbDaclDefaulted;\n    int32_t pAceList;\n    int32_t lpbDaclPresent;\n    uint var_18h;\n    uint pSIRequested;\n    uint pSecurityDescriptor;\n    uint32_t var_ch;\n    uint pSID;\n    int32_t pDacl;\n    \n    pSIRequested = 4;\n    uVar7 = 0;\n    pSecurityDescriptor = 0;\n    pSID = 0;\n    var_ch = 0;\n    cVar1 = fcn.00be874a(&pSecurityDescriptor, in_ECX, &var_18h);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00be87e7(var_18h);\n        if (cVar1 != '\\0') {\n            pDacl = 0;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_GetSecurityDescriptorDacl)\n                              (pSecurityDescriptor, &lpbDaclPresent, &pDacl, &lpbDaclDefaulted);\n            if (iVar2 != 0) {\n                fcn.00bb3020(&pAclInformation, 0, 0xc);\n                var_2ch = 8;\n                if (pDacl != 0) {\n                    iVar2 = (*_sym.imp.ADVAPI32.dll_GetAclInformation)(pDacl, &pAclInformation, 0xc, 2);\n                    if (iVar2 == 0) goto code_r0x00be85c8;\n                }\n                (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pDestinationSid);\n                cVar1 = fcn.00be87b3(var_2ch);\n                uVar5 = var_ch;\n                if (cVar1 != '\\0') {\n                    if ((lpbDaclPresent != 0) && (pAclInformation != 0)) {\n                        var_ch = 0;\n                        do {\n                            iVar2 = (*_sym.imp.ADVAPI32.dll_GetAce)(pDacl, var_ch, &pAceList);\n                            if (iVar2 == 0) goto code_r0x00be85c8;\n                            iVar2 = (*_sym.imp.ADVAPI32.dll_AddAce)(uVar5, 2, 0xffffffff, pAceList, *(pAceList + 2));\n                            if (iVar2 == 0) goto code_r0x00be85c8;\n                            var_ch = var_ch + 1;\n                        } while (var_ch < pAclInformation);\n                    }\n                    pAceList = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pDestinationSid);\n                    pAceList = pAceList + 8;\n                    uVar3 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, pAceList);\n                    puVar4 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar3);\n                    if (puVar4 != NULL) {\n                        *(puVar4 + 2) = pAceList;\n                        uVar3 = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pDestinationSid, puVar4 + 8, pDestinationSid);\n                        iVar2 = (*_sym.imp.ADVAPI32.dll_CopySid)(uVar3);\n                        if (iVar2 != 0) {\n                            puVar6 = arg_10h + 4;\n                            pDestinationSid = 0;\n                            do {\n                                *puVar4 = *(puVar6 + -1);\n                                puVar4[1] = *(puVar6 + -3);\n                                *(puVar4 + 4) = *puVar6;\n                                iVar2 = (*_sym.imp.ADVAPI32.dll_AddAce)(uVar5, 2, 0xffffffff, puVar4, *(puVar4 + 2));\n                                if (iVar2 == 0) goto code_r0x00be85c8;\n                                pDestinationSid = pDestinationSid + 1;\n                                puVar6 = puVar6 + 3;\n                            } while (pDestinationSid < 2);\n                            iVar2 = (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)(pSID, 1, uVar5, 0);\n                            if (iVar2 != 0) {\n                                iVar2 = (*_sym.imp.USER32.dll_SetUserObjectSecurity)(hObj, &pSIRequested, pSID);\n                                if (iVar2 != 0) {\n                                    uVar7 = 1;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00be85c8:\n    fcn.00be86b3();\n    fcn.00be86b3();\n    fcn.00be86b3();\n    uVar5 = fcn.00be86b3();\n    return uVar5 & 0xffffff00 | uVar7;\n}\n",
        "token_count": 1158
    },
    "00be8713": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00be8713(uint *param_1)\n\n{\n    if (param_1[2] != 0) {\n        (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(param_1[3], 0, param_1[2], 0, 0, 0);\n        fcn.00bb106c(param_1[2]);\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(param_1[3]);\n    fcn.00bb106c(*param_1);\n    return;\n}\n",
        "token_count": 122
    },
    "00be8af9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00be8af9(uint lpUsername, uint lpDomain, uint lpPassword, uint32_t hObject, uint noname_4, uint arg_1ch, \n            uint32_t arg_20h, uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t var_4h;\n    \n    uVar4 = 0;\n    var_4h = 0;\n    uVar5 = 0;\n    if ((hObject & 1) == 0) {\n        if ((hObject & 2) != 0) {\n            uVar5 = 2;\n        }\n    }\n    else {\n        uVar5 = 1;\n    }\n    if ((hObject & 4) != 0) {\n        hObject = 0;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(10, &hObject);\n        (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n        iVar2 = (*_sym.imp.USERENV.dll_CreateEnvironmentBlock)(&var_4h, hObject, 1);\n        uVar3 = (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        if (iVar2 == 0) goto code_r0x00be8b85;\n    }\n    uVar3 = (*_sym.imp.ADVAPI32.dll_CreateProcessWithLogonW)\n                      (lpUsername, lpDomain, lpPassword, uVar5, 0, arg_1ch, arg_20h | 0x400, var_4h, arg_24h, arg_28h, \n                       arg_2ch);\n    uVar4 = uVar3 != 0;\ncode_r0x00be8b85:\n    if (var_4h != 0) {\n        uVar3 = (*_sym.imp.USERENV.dll_DestroyEnvironmentBlock)(var_4h);\n    }\n    return uVar3 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 472
    },
    "00be8b9e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00be8b9e(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint32_t *var_ch;\n    uint32_t var_8h;\n    uint32_t *var_4h;\n    \n    var_10h = 0;\n    var_4h = NULL;\n    uVar5 = 0;\n    puVar2 = fcn.00be8652(&var_4h, &var_10h, &var_10h);\n    puVar1 = var_4h;\n    if (puVar2 != '\\0') {\n        var_8h = 0;\n        puVar2 = var_ch;\n        if (var_ch[1] != 0) {\n            do {\n                uVar5 = 0;\n                puVar2 = (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, *(*var_ch + var_8h * 4), &var_1ch);\n                if ((puVar2 == NULL) || (var_14h = 0,  *puVar1 == 0)) break;\n                uVar6 = 0;\n                var_4h = puVar1 + 1;\n                do {\n                    iVar3 = fcn.00bb16c4(var_4h, &var_1ch, 8);\n                    if (iVar3 == 0) {\n                        uVar5 = 1;\n                    }\n                    uVar6 = uVar6 + 1;\n                    var_4h = var_4h + 3;\n                } while (uVar6 < *puVar1);\n                puVar2 = var_4h;\n                if (uVar5 == 0) break;\n                var_8h = var_8h + 1;\n                puVar2 = var_ch;\n            } while (var_8h < var_ch[1]);\n        }\n    }\n    if (puVar1 != NULL) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, puVar1);\n        puVar2 = (*_sym.imp.KERNEL32.dll_HeapFree)(uVar4);\n    }\n    return puVar2 & 0xffffff00 | uVar5;\n}\n",
        "token_count": 544
    },
    "00be8eb9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00be8eb9(uint arg_8h)\n\n{\n    char cVar1;\n    bool bVar2;\n    \n    cVar1 = fcn.00be8ee8();\n    if (arg_8h == '\\0') {\n        bVar2 = cVar1 == '\\x01';\n    }\n    else {\n        bVar2 = cVar1 == '\\0';\n    }\n    if (bVar2) {\n        fcn.00be8f01(0, 1, 0xffffffff, 0xffffffff);\n    }\n    return 1;\n}\n",
        "token_count": 129
    },
    "00be8ff7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00be8ff7(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    \n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x14f, arg_8h != '\\0', 0);\n    return iVar1 != 0;\n}\n",
        "token_count": 79
    },
    "00be9023": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00be9023(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_ECX;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0xb0, &var_4h, &var_10h);\n    iVar1 = var_4h;\n    var_ch = var_4h;\n    var_8h = (*pcVar2)(*in_ECX, 0xc9, var_4h, 0);\n    if (var_8h < 1) {\n        *arg_8h = var_4h + 1;\n    }\n    else {\n        iVar4 = (*pcVar2)(*in_ECX, 0xc9, var_4h, 0);\n        iVar3 = var_8h;\n        while (iVar3 == iVar4) {\n            var_4h = var_4h + -1;\n            iVar4 = (*pcVar2)(*in_ECX, 0xc9, var_4h, 0);\n            iVar1 = var_ch;\n        }\n        *arg_8h = iVar1 - var_4h;\n    }\n    return 1;\n}\n",
        "token_count": 332
    },
    "00be97e9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00be97e9(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_28h;\n    uint *hWnd;\n    \n    iVar3 = 0;\n    hWnd = in_ECX;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x1004, 0, 0);\n    fcn.00b97d2c(0xc1f910);\n    if (arg_8h == '\\0') {\n        if (0 < iVar1) {\n            do {\n                iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x102c, iVar3, 2);\n                if (iVar2 != 0) {\n                    fcn.00bb3700(iVar3, &var_28h, 10);\n                    fcn.00b97d2c(&var_28h);\n                    return 1;\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < iVar1);\n        }\n    }\n    else {\n        iVar3 = 0;\n        if (0 < iVar1) {\n            do {\n                iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x102c, iVar3, 2);\n                if (iVar2 != 0) {\n                    fcn.00bb3700(iVar3, &var_28h, 10);\n                    if (*(arg_ch + 4) != 0) {\n                        fcn.00b97e0b(0xc49588);\n                    }\n                    fcn.00b97e0b(&var_28h);\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < iVar1);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 424
    },
    "00be9c98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00be9c98(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint *in_ECX;\n    \n    iVar1 = fcn.00be9e2e(arg_8h);\n    if (iVar1 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar2 = 2;\n        if (arg_ch == '\\0') {\n            uVar2 = 1;\n        }\n        uVar3 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x1102, uVar2, iVar1);\n        uVar3 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 186
    },
    "00be9f62": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00be9f62(int32_t arg_8h, int32_t arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    uint *arg_10h_00;\n    char cVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint var_b4h;\n    int32_t iStack180;\n    uint *puStack176;\n    uint uStack172;\n    uint uStack168;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    int32_t var_8h;\n    \n    arg_10h_00 = arg_10h;\n    var_8h = 0;\n    var_28h = *arg_10h;\n    var_24h = arg_10h[1];\n    var_20h = arg_10h[2];\n    var_1ch = arg_10h[3];\n    *var_1ch = *var_1ch + 1;\n    fcn.00b977c7();\n    if (arg_8h != 0) {\n        arg_10h = 0x1;\n        do {\n            arg_8h_00 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x110a, 4, arg_8h);\n            if (arg_8h_00 != 0) {\n                if (arg_10h_00[1] != 0) {\n                    fcn.00b97e0b(0xc49588);\n                }\n                if (arg_14h == '\\0') {\n                    fcn.00bea235(arg_8h, &fcn.00be9f62::var_18h);\n                    uStack168 = 0xbea01d;\n                    fcn.00b97c8e(&fcn.00be9f62::var_18h);\n                }\n                else {\n                    uStack168 = 0xbe9fea;\n                    fcn.00bb3700(var_8h, &fcn.00be9f62::var_b4h, 10);\n                    fcn.00b97a84(0x23);\n                    fcn.00b97e0b(0xbea004);\n                }\n                uStack168 = 0;\n                uStack172 = arg_14h;\n                puStack176 = arg_10h_00;\n                iStack180 = arg_ch;\n                cVar1 = fcn.00be9f62(arg_8h_00, arg_ch, arg_10h_00, arg_14h);\n                if (cVar1 != '\\0') goto code_r0x00bea065;\n                fcn.00b981a7(&fcn.00be9f62::var_28h);\n            }\n            if (arg_8h == arg_ch) {\n                if (arg_10h_00[1] != 0) {\n                    fcn.00b97e0b(0xc49588);\n                }\n                if (arg_14h == '\\0') {\n                    fcn.00bea235(arg_8h, &fcn.00be9f62::var_18h);\n                    fcn.00b97c8e(&fcn.00be9f62::var_18h);\n                }\n                else {\n                    fcn.00bb3700(var_8h, &fcn.00be9f62::var_b4h, 10);\n                    fcn.00b97a84(0x23);\n                    fcn.00b97e0b(0xbea0c4);\n                }\n                goto code_r0x00bea065;\n            }\n            arg_8h = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x110a, 1, arg_8h);\n            var_8h = var_8h + 1;\n        } while (arg_8h != 0);\n    }\n    arg_10h = NULL;\ncode_r0x00bea065:\n    fcn.00b95a64();\n    uVar2 = fcn.00b95a64();\n    return uVar2 & 0xffffff00 | arg_10h;\n}\n",
        "token_count": 961
    },
    "00bea0df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00bea0df(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_18h;\n    uint *hWnd;\n    uint var_1h;\n    \n    iVar4 = 0;\n    var_1h._0_1_ = '\\0';\n    fcn.00b977c7();\n    piVar1 = fcn.00b97b52(0);\n    if (*piVar1 == 0x23) {\n        piVar1 = fcn.00b97b52(1);\n        if (*piVar1 != 0x23) {\n            fcn.00b97e8c(0, 1);\n            var_1h._0_1_ = '\\x01';\n            goto code_r0x00bea140;\n        }\n    }\n    piVar1 = fcn.00b97b52(0);\n    if (*piVar1 == 0x23) {\n        fcn.00b97e8c(0, 1);\n    }\ncode_r0x00bea140:\n    iVar2 = fcn.00bb37ca(*arg_ch);\n    for (; (var_1h == '\\0' || (iVar2 != iVar4)); iVar4 = iVar4 + 1) {\n        fcn.00bea235(arg_8h, &var_18h);\n        iVar3 = fcn.00b97a68(&var_18h, 0);\n        if (iVar3 == 0) break;\n        arg_8h = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x110a, 1, arg_8h);\n        if (arg_8h == 0) break;\n    }\n    fcn.00b95a64();\n    return arg_8h;\n}\n",
        "token_count": 459
    },
    "00bea37c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bea37c(uint hWnd, uint lpdwResult)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (lpdwResult == '\\x01') {\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)(hWnd, 0, 0, 0, 2, 5000, &lpdwResult);\n        if (iVar1 == 0) {\n            return;\n        }\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(hWnd, 0, uVar2);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)(uVar2);\n    (*_sym.imp.USER32.dll_AttachThreadInput)(uVar2);\n    return;\n}\n",
        "token_count": 196
    },
    "00beade3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00beade3(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    \n    if (*in_ECX != 0) {\n        fcn.00bb106c(*in_ECX);\n    }\n    puVar1 = fcn.00bb0ff6(4);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = arg_8h;\n    }\n    *in_ECX = puVar1;\n    return 1;\n}\n",
        "token_count": 128
    },
    "00beae57": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00beae57(uint hWnd, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (arg_ch == '\\x01') {\n        uVar2 = hWnd;\n        cVar1 = fcn.00ba619a(hWnd);\n        if (cVar1 != '\\0') {\n            return;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(hWnd, 0, uVar2);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)(uVar2);\n    (*_sym.imp.USER32.dll_AttachThreadInput)(uVar2);\n    return;\n}\n",
        "token_count": 165
    },
    "00beae8f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00beae8f(uint arg_8h)\n\n{\n    uint *in_ECX;\n    \n    (*_sym.imp.USER32.dll_EnableWindow)(*in_ECX, arg_8h != '\\0');\n    return 1;\n}\n",
        "token_count": 56
    },
    "00beaf6a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00beaf6a(int32_t *lpRect, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_ECX;\n    int32_t iVar5;\n    int32_t lpPoint;\n    int32_t var_4h;\n    \n    iVar3 = (*_sym.imp.USER32.dll_GetWindowRect)(*in_ECX, lpRect);\n    if (iVar3 == 0) {\ncode_r0x00beafd2:\n        uVar4 = 0;\n    }\n    else {\n        if (arg_ch != '\\0') {\n            iVar3 = fcn.00beaf13();\n            if (iVar3 == 0) goto code_r0x00beafd2;\n            lpPoint = *lpRect;\n            var_4h = lpRect[1];\n            iVar5 = lpRect[3] - var_4h;\n            iVar1 = lpRect[2];\n            iVar2 = *lpRect;\n            (*_sym.imp.USER32.dll_ScreenToClient)(iVar3, &lpPoint);\n            *lpRect = lpPoint;\n            lpRect[2] = lpPoint + (iVar1 - iVar2);\n            lpRect[1] = var_4h;\n            lpRect[3] = iVar5 + var_4h;\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 319
    },
    "00beb144": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00beb144(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    if (in_ECX != arg_8h) {\n        fcn.00ba6154();\n        uVar5 = *(arg_8h + 8);\n        if (*(in_ECX + 0xc) < uVar5) {\n            uVar4 = 8;\n            if (7 < uVar5) {\n                uVar4 = uVar5;\n            }\n            *(in_ECX + 0xc) = uVar4;\n            uVar2 = fcn.00bb0ff6(-(uVar4 * 4 >> 0x20 != 0) | uVar4 * 4);\n            if (*(in_ECX + 4) != 0) {\n                fcn.00bb106c(*(in_ECX + 4));\n            }\n            *(in_ECX + 4) = uVar2;\n        }\n        iVar1 = *(arg_8h + 8);\n        uVar5 = 0;\n        *(in_ECX + 8) = iVar1;\n        if (iVar1 != 0) {\n            do {\n                puVar3 = fcn.00bb0ff6(4);\n                if (puVar3 == NULL) {\n                    puVar3 = NULL;\n                }\n                else {\n                    *puVar3 = **(*(arg_8h + 4) + uVar5 * 4);\n                }\n                *(*(in_ECX + 4) + uVar5 * 4) = puVar3;\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < *(in_ECX + 8));\n        }\n    }\n    return;\n}\n",
        "token_count": 417
    },
    "00beb1e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00beb1e0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char16_t *pcVar3;\n    uint var_34h;\n    uint var_24h;\n    uint var_14h;\n    \n    fcn.00b977c7();\n    fcn.00b977c7();\n    if (arg_8h[1] == 0) {\ncode_r0x00beb2ec:\n        pcVar3 = L\"[LAST\";\ncode_r0x00beb2f1:\n        fcn.00b97d2c(pcVar3);\n    }\n    else {\n        iVar1 = fcn.00bb313d(*arg_8h, L\"LAST\");\n        if (iVar1 == 0) goto code_r0x00beb2ec;\n        iVar1 = fcn.00bb313d(*arg_8h, L\"ACTIVE\");\n        if (iVar1 == 0) {\n            pcVar3 = L\"[ACTIVE\";\n            goto code_r0x00beb2f1;\n        }\n        iVar1 = fcn.00bb3a0b(*arg_8h, L\"HANDLE=\", 7);\n        if (iVar1 == 0) {\n            pcVar3 = L\"[HANDLE:\";\ncode_r0x00beb26c:\n            fcn.00b97d2c(pcVar3);\n            uVar2 = 7;\n        }\n        else {\n            iVar1 = fcn.00bb3a0b(*arg_8h, L\"REGEXP=\", 7);\n            if (iVar1 == 0) {\n                pcVar3 = L\"[REGEXPTITLE:\";\n                goto code_r0x00beb26c;\n            }\n            iVar1 = fcn.00bb3a0b(*arg_8h, L\"CLASSNAME=\", 10);\n            if (iVar1 != 0) {\n                iVar1 = fcn.00bb313d(*arg_8h, 0xc49748);\n                if (iVar1 != 0) goto code_r0x00beb311;\n                pcVar3 = L\"[ALL\";\n                goto code_r0x00beb2f1;\n            }\n            fcn.00b97d2c(L\"[CLASS:\");\n            uVar2 = 10;\n        }\n        uVar2 = fcn.00be6401(&var_34h, uVar2, 0xffffffff);\n        fcn.00b981a7(uVar2);\n        fcn.00b95a64();\n        fcn.00beb328(&var_24h);\n        fcn.00b97c8e(&var_24h);\n    }\n    fcn.00b97e0b(0xc4975c);\n    fcn.00b981a7(&var_14h);\ncode_r0x00beb311:\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return;\n}\n",
        "token_count": 652
    },
    "00beb397": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00beb397(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    uint32_t uStack2084;\n    int32_t iStack2080;\n    int32_t iStack2076;\n    int32_t iStack2072;\n    int32_t iStack2068;\n    uchar auStack2064 [8];\n    uchar auStack2056 [2052];\n    \n    iVar1 = arg_ch;\n    bVar7 = (*(arg_ch + 8) & 0x40) != 0;\n    uStack2084 = bVar7;\n    uVar5 = bVar7;\n    if ((*(arg_ch + 8) & 8) != 0) {\n        (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2064, 0x400);\n        iVar3 = fcn.00bb378c(*(iVar1 + 0xa4), auStack2064);\n        if (iVar3 == 0) {\n            uVar5 = uVar5 + 1;\n        }\n        uStack2084 = bVar7 + 1;\n    }\n    uVar6 = uVar5;\n    if ((*(iVar1 + 8) & 1) != 0) {\n        (*_sym.imp.USER32.dll_GetWindowTextW)(arg_8h, auStack2064, 0x400);\n        if (*(iVar1 + 0xc) == '\\0') {\n            uVar4 = fcn.00bb2e3c(auStack2064);\n            (*_sym.imp.USER32.dll_CharUpperBuffW)(auStack2064, uVar4);\n        }\n        iVar3 = *(iVar1 + 0x10);\n        if (iVar3 == 1) {\n            iVar3 = fcn.00bb38a2(*(iVar1 + 0x14), auStack2064, *(iVar1 + 0x18));\ncode_r0x00beb480:\n            if (iVar3 == 0) {\ncode_r0x00beb484:\n                uVar6 = uVar5 + 1;\n            }\n        }\n        else if (iVar3 == 2) {\n            iVar3 = fcn.00bb3bba(auStack2064, *(iVar1 + 0x14));\n            if (iVar3 != 0) goto code_r0x00beb484;\n        }\n        else if (iVar3 == 3) {\n            iVar3 = fcn.00bb378c(auStack2064, *(iVar1 + 0x14));\n            goto code_r0x00beb480;\n        }\n        if ((*(iVar1 + 8) & 0x18) == 0) {\n            (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2064, 0x400);\n            iVar3 = fcn.00bb378c(L\"ThumbnailClass\", auStack2064);\n            if (iVar3 == 0) {\n                uVar6 = uVar5;\n            }\n        }\n        uStack2084 = uStack2084 + 1;\n    }\n    if ((*(iVar1 + 8) & 2) == 0) goto code_r0x00beb53d;\n    (*_sym.imp.USER32.dll_GetWindowTextW)(arg_8h, auStack2064, 0x400);\n    fcn.00b97f41(auStack2056);\n    fcn.00ba5d24(&iStack2076);\n    fcn.00b95a64();\n    cVar2 = fcn.00bef8b4();\n    if (cVar2 != '\\0') {\n        if ((*(iVar1 + 8) & 0x18) == 0) {\n            (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2064, 0x400);\n            iVar3 = fcn.00bb378c(L\"ThumbnailClass\", auStack2064);\n            if (iVar3 == 0) goto code_r0x00beb534;\n        }\n        uVar6 = uVar6 + 1;\n    }\ncode_r0x00beb534:\n    uStack2084 = uStack2084 + 1;\ncode_r0x00beb53d:\n    if ((*(iVar1 + 8) & 0x10) != 0) {\n        (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2064, 0x400);\n        fcn.00b97f41(auStack2056);\n        fcn.00ba5d24(&iStack2076);\n        fcn.00b95a64();\n        cVar2 = fcn.00bef8b4();\n        if (cVar2 != '\\0') {\n            uVar6 = uVar6 + 1;\n        }\n        uStack2084 = uStack2084 + 1;\n    }\n    if ((*(iVar1 + 8) & 4) != 0) {\n        if ((uVar6 == uStack2084) && (cVar2 = fcn.00beb66a(arg_8h),  cVar2 != '\\0')) {\n            uVar6 = uVar6 + 1;\n        }\n        uStack2084 = uStack2084 + 1;\n    }\n    uVar5 = *(iVar1 + 8);\n    if ((uVar5 & 0x780) != 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(arg_8h, &iStack2080);\n        uVar5 = *(iVar1 + 8);\n        if (uVar5 < '\\0') {\n            if (*(iVar1 + 0xbc) == iStack2080) {\n                uVar6 = uVar6 + 1;\n            }\n            uStack2084 = uStack2084 + 1;\n        }\n        if ((uVar5 & 0x100) != 0) {\n            if (*(iVar1 + 0xc0) == iStack2076) {\n                uVar6 = uVar6 + 1;\n            }\n            uStack2084 = uStack2084 + 1;\n        }\n        if ((uVar5 & 0x200) != 0) {\n            if (*(iVar1 + 0xc4) == iStack2072 - iStack2080) {\n                uVar6 = uVar6 + 1;\n            }\n            uStack2084 = uStack2084 + 1;\n        }\n        if ((uVar5 & 0x400) != 0) {\n            if (*(iVar1 + 200) == iStack2068 - iStack2076) {\n                uVar6 = uVar6 + 1;\n            }\n            uStack2084 = uStack2084 + 1;\n        }\n    }\n    if ((uVar5 & 0x20) != 0) {\n        if ((uVar6 == uStack2084) && (*(iVar1 + 0xb8) = *(iVar1 + 0xb8) + 1,  *(iVar1 + 0xb8) == *(iVar1 + 0xb4))) {\n            uVar6 = uVar6 + 1;\n        }\n        uStack2084 = uStack2084 + 1;\n    }\n    if (uVar6 == uStack2084) {\n        fcn.00b934c2(&arg_8h);\n        *(iVar1 + 0xcc) = *(iVar1 + 0xcc) + 1;\n        bVar7 = *(iVar1 + 4) == '\\0';\n    }\n    else {\n        bVar7 = true;\n    }\n    return bVar7;\n}\n",
        "token_count": 1726
    },
    "00beb66a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00beb66a(uint hWndParent)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x28) == 0) {\n        bVar1 = true;\n    }\n    else {\n        cVar2 = fcn.00ba619a(hWndParent);\n        if (cVar2 == '\\0') {\n            *(in_ECX + 0xd0) = 0;\n            (*_sym.imp.USER32.dll_EnumChildWindows)(hWndParent, fcn.00beb6af);\n            bVar1 = *(in_ECX + 0xd0) != '\\0';\n        }\n        else {\n            bVar1 = false;\n        }\n    }\n    return bVar1;\n}\n",
        "token_count": 174
    },
    "00beb6af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00beb6af(uint arg_8h, int32_t arg_ch)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(arg_8h);\n    if ((iVar2 == 0) && (*(arg_ch + 5) != '\\x01')) {\ncode_r0x00beb772:\n        uVar4 = 1;\n    }\n    else {\n        var_4h = (*_sym.imp.USER32.dll_SendMessageW)(arg_8h, 0xe, 0, 0);\n        if (var_4h == 0) {\n            var_4h = 0x7fff;\n        }\n        iVar1 = (var_4h + 1U) * 2;\n        iVar2 = fcn.00bb0ff6(-(iVar1 >> 0x20 != 0) | iVar1);\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(arg_8h, 0xd, var_4h + 1U, iVar2);\n        *(iVar2 + var_4h * 2) = 0;\n        if (iVar3 < 1) {\n            uVar4 = 1;\n        }\n        else {\n            if (*(arg_ch + 0xc) == '\\0') {\n                uVar4 = fcn.00bb2e3c(iVar2);\n                (*_sym.imp.USER32.dll_CharUpperBuffW)(iVar2, uVar4);\n            }\n            iVar3 = fcn.00bb3bba(iVar2, *(arg_ch + 0x24));\n            if (iVar3 == 0) {\n                fcn.00bb106c(iVar2);\n                goto code_r0x00beb772;\n            }\n            *(arg_ch + 0xd0) = 1;\n            uVar4 = 0;\n        }\n        fcn.00bb106c(iVar2);\n    }\n    return uVar4;\n}\n",
        "token_count": 464
    },
    "00bebc06": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00bebc06(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = 0;\n    if (*(in_ECX + 0x14) != 0) {\n        uVar3 = 0x40;\n        iVar1 = fcn.00bb0ff6(0x40);\n        if (iVar1 != 0) {\n            iVar2 = fcn.00beb7b6(in_ECX, arg_8h, arg_ch, arg_10h);\n            uVar3 = extraout_ECX;\n        }\n        if (iVar2 != 0) {\n            if (arg_10h != 0) {\n                return iVar2;\n            }\n            fcn.00bebb1a(uVar3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 222
    },
    "00bebe0a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00bebe0a(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    iVar2 = 0;\n    if (2 < arg_10h) {\n        ppiVar3 = *(arg_ch + 4) + 0xc;\n        arg_10h = arg_10h + -2;\n        do {\n            iVar1 = **ppiVar3;\n            if ((((iVar1 != 0) && (*(iVar1 + 4) == *(arg_8h + 4))) && (*(iVar1 + 0x90) == '\\x1d')) &&\n               (*(iVar1 + 0x80) != 0)) {\n                iVar2 = iVar2 + 1;\n            }\n            ppiVar3 = ppiVar3 + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 242
    },
    "00bebf76": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bebf76(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    \n    if ((arg_8h == NULL) || (*(arg_8h + 0x90) != '\\x1d')) {\n        piVar2 = *(in_ECX + 0x10);\n        if (piVar2 != NULL) {\n            if (*(in_ECX + 0x18) == '\\0') {\n                arg_8h = NULL;\n                (***piVar2)(piVar2, 0xc22d1c, &arg_8h);\n                if (arg_8h != NULL) {\n                    (**(*arg_8h + 0x18))(arg_8h);\n                    (**(*arg_8h + 8))(arg_8h);\n                }\n            }\n            else {\n                (**(*piVar2 + 0x1c))(piVar2, 0);\n            }\n        }\n    }\n    else {\n        iVar1 = *(arg_8h + 0x80);\n        if ((iVar1 != 0) &&\n           (((piVar2 = *(in_ECX + 0x10),  piVar2 == NULL || (*(iVar1 + 0x3c) == '\\0')) && (*(in_ECX + 0x18) == '\\0'))))\n        {\n            if (piVar2 != NULL) {\n                (**(*piVar2 + 0x1c))(piVar2, 0);\n            }\n            (**(**(iVar1 + 0xc) + 0x2c))\n                      (*(iVar1 + 0xc), 0xffffffff, 0, *(iVar1 + 0x28), 0xffffffff, *(iVar1 + 8), iVar1 + 0x10);\n        }\n    }\n    return;\n}\n",
        "token_count": 413
    },
    "00bec370": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bec370(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_10h;\n    \n    if (arg_ch != 0) {\n        (*_sym.imp.USER32.dll_GetClientRect)(*(arg_8h + 8), &var_10h);\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "00bec4c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00bec4c1(int32_t *param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t lpRect;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t nWidth;\n    int32_t var_4h;\n    \n    uVar4 = (*_sym.imp.USER32.dll_LoadIconW)(*0xc56278, 99);\n    (*_sym.imp.USER32.dll_SendMessageW)(param_1[0x15], 0x80, 0, uVar4);\n    pcVar2 = _sym.imp.USER32.dll_SetWindowTextW;\n    if (param_1[10] != 0) {\n        (*_sym.imp.USER32.dll_SetWindowTextW)(param_1[0x15], param_1[9]);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    if (param_1[0x12] != 0) {\n        uVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(param_1[0x15], 0x3ea);\n        (*pcVar2)(uVar4, param_1[0x11]);\n    }\n    if (param_1[0xe] != 0) {\n        uVar4 = (*pcVar1)(param_1[0x15], 0x3e9);\n        (*pcVar2)(uVar4, param_1[0xd]);\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendDlgItemMessageW;\n    if (*(param_1 + 8) != 0) {\n        (*_sym.imp.USER32.dll_SendDlgItemMessageW)(param_1[0x15], 0x3e9, 0xcc, *(param_1 + 8), 0);\n    }\n    if (0 < param_1[5]) {\n        (*pcVar1)(param_1[0x15], 0x3e9, 0xc5, param_1[5], 0);\n    }\n    (*_sym.imp.USER32.dll_GetWindowRect)(param_1[0x15], &lpRect);\n    fcn.00bec47f();\n    nWidth = var_14h - lpRect;\n    var_ch = lpRect;\n    var_4h = var_10h - var_18h;\n    if (param_1[2] != -0x80000000) {\n        var_ch = param_1[2];\n    }\n    iVar6 = var_18h;\n    if (param_1[3] != -0x80000000) {\n        iVar6 = param_1[3];\n    }\n    if (0 < *param_1) {\n        nWidth = *param_1;\n    }\n    if (0 < param_1[1]) {\n        var_4h = param_1[1];\n    }\n    cVar3 = fcn.00bea36d();\n    if (cVar3 != '\\0') {\n        (*pcVar2)(param_1[0x15], param_1[9]);\n    }\n    uVar4 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&lpRect);\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar4);\n    fcn.00bec47f();\n    iVar5 = var_ch;\n    if ((*(param_1 + 4) & 0x40) != 0) {\n        iVar5 = ((var_14h - nWidth) - lpRect) / 2;\n    }\n    if ((*(param_1 + 4) & 0x80) != 0) {\n        iVar6 = ((var_10h - var_4h) - var_18h) / 2;\n    }\n    (*_sym.imp.USER32.dll_MoveWindow)(param_1[0x15], iVar5, iVar6, nWidth, var_4h, 0);\n    (*_sym.imp.USER32.dll_GetClientRect)(param_1[0x15], &lpRect);\n    fcn.00bec47f();\n    (*_sym.imp.USER32.dll_PostMessageW)(param_1[0x15], 5, 0, ((var_10h - var_18h) * 0x10000 - lpRect) + var_14h);\n    if (0.0 < *(param_1 + 6)) {\n        uVar4 = fcn.00bcb606(0);\n        iVar6 = (*_sym.imp.USER32.dll_SetTimer)(param_1[0x15], 0x40a, uVar4);\n        param_1[0x16] = iVar6;\n    }\n    return 1;\n}\n",
        "token_count": 1078
    },
    "00bec6a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00bec6a6(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint lpString;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x54), 0x3e9);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_GetWindowTextW)(iVar1, &lpString, 0x100);\n        if (((*(param_1 + 0x10) & 1) == 0) || (lpString != 0)) {\n            if (0.0 < *(param_1 + 0x18)) {\n                (*_sym.imp.USER32.dll_KillTimer)(*(param_1 + 0x54), 0x40a);\n            }\n            fcn.00b97d2c(&lpString);\n            (*_sym.imp.USER32.dll_EndDialog)(*(param_1 + 0x54), 1);\n        }\n        else {\n            (*_sym.imp.USER32.dll_MessageBeep)(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "00bec72a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bec72a(int32_t hWnd, int32_t nWidth, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t lpRect;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    if (hWnd != 1) {\n        iVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 0x54), 1);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar3, &lpRect);\n            iVar1 = var_ch;\n            iVar4 = lpRect;\n            if (var_8h < lpRect) {\n                lpRect = var_8h;\n                var_8h = iVar4;\n            }\n            if (var_4h < var_ch) {\n                var_ch = var_4h;\n                var_4h = iVar1;\n            }\n            iVar4 = (arg_10h - (var_4h - var_ch)) + -10;\n            (*_sym.imp.USER32.dll_MoveWindow)\n                      (iVar3, (10 - (var_8h - lpRect)) / 2 + nWidth / 4, iVar4, var_8h - lpRect, var_4h - var_ch, 0);\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 0x54), 2);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar3, &lpRect);\n            iVar2 = var_ch;\n            iVar1 = lpRect;\n            if (var_8h < lpRect) {\n                lpRect = var_8h;\n                var_8h = iVar1;\n            }\n            if (var_4h < var_ch) {\n                var_ch = var_4h;\n                var_4h = iVar2;\n            }\n            (*_sym.imp.USER32.dll_MoveWindow)\n                      (iVar3, (nWidth * 3) / 4 - ((var_8h - lpRect) + 10) / 2, iVar4, var_8h - lpRect, var_4h - var_ch, \n                       0);\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 0x54), 0x3e9);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar3, &lpRect);\n            iVar2 = var_ch;\n            iVar1 = lpRect;\n            if (var_8h < lpRect) {\n                lpRect = var_8h;\n                var_8h = iVar1;\n            }\n            if (var_4h < var_ch) {\n                var_ch = var_4h;\n                var_4h = iVar2;\n            }\n            iVar4 = iVar4 + (-5 - (var_4h - var_ch));\n            (*_sym.imp.USER32.dll_MoveWindow)(iVar3, 10, iVar4, nWidth + -0x14, var_4h - var_ch, 0);\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 0x54), 0x3ea);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_MoveWindow)(iVar3, 10, 10, nWidth + -0x14, iVar4 + -5, 0);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x54), 0, 1);\n    }\n    return;\n}\n",
        "token_count": 851
    },
    "00becc5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00becc5b(uint32_t arg_8h, int32_t arg_ch, uint pvargSrc, uint pvarDest)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*(arg_ch + 8) == 0) {\n        if ((arg_8h & 2) == 0) {\n            uVar1 = 0x80020003;\n        }\n        else {\n            iVar2 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(pvarDest, pvargSrc);\n            if (iVar2 < 0) {\n                uVar1 = 0x80020009;\n            }\n            else {\n                uVar1 = 0;\n            }\n        }\n    }\n    else {\n        uVar1 = 0x8002000e;\n    }\n    return uVar1;\n}\n",
        "token_count": 190
    },
    "00becd07": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00becd07(uint pvargSrc)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar2 = 8;\n        if (7 < uVar1) {\n            uVar2 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar2;\n        uVar3 = fcn.00bb0ff6(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00bb1080(uVar3, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.00bb106c(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar3;\n    }\n    iVar4 = fcn.00bb0ff6(0x10);\n    if (iVar4 == 0) {\n        iVar4 = 0;\n    }\n    else {\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(iVar4);\n        (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(iVar4, pvargSrc);\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = iVar4;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 403
    },
    "00bece84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bece84(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if (in_ECX != arg_8h) {\n        fcn.00be6636();\n        uVar4 = *(arg_8h + 8);\n        if (*(in_ECX + 0xc) < uVar4) {\n            uVar3 = 8;\n            if (7 < uVar4) {\n                uVar3 = uVar4;\n            }\n            *(in_ECX + 0xc) = uVar3;\n            uVar1 = fcn.00bb0ff6(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n            if (*(in_ECX + 4) != 0) {\n                fcn.00bb106c(*(in_ECX + 4));\n            }\n            *(in_ECX + 4) = uVar1;\n        }\n        iVar2 = *(arg_8h + 8);\n        uVar4 = 0;\n        *(in_ECX + 8) = iVar2;\n        if (iVar2 != 0) {\n            do {\n                iVar2 = fcn.00bb0ff6(0x10);\n                if (iVar2 == 0) {\n                    iVar2 = 0;\n                }\n                else {\n                    uVar1 = *(*(arg_8h + 4) + uVar4 * 4);\n                    *(iVar2 + 8) = 0;\n                    fcn.00b99ac0(uVar1);\n                }\n                *(*(in_ECX + 4) + uVar4 * 4) = iVar2;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < *(in_ECX + 8));\n        }\n    }\n    return;\n}\n",
        "token_count": 435
    },
    "00becf57": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00becf57(uint *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    *param_1 = 0xc49a58;\n    fcn.00bed85d();\n    piVar1 = param_1[3];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    if (param_1[0x12] != 0) {\n        fcn.00b97b3d(param_1[0x12]);\n        param_1[0x12] = 0;\n    }\n    iVar2 = param_1[0x13];\n    if (iVar2 < 0xc) {\n        if (iVar2 == 0xb) {\n            fcn.00bb106c(*(param_1[0x10] + 4));\n            fcn.00bb106c(param_1[0x10]);\n            goto code_r0x00bed02d;\n        }\n        if (iVar2 == 5) {\n            if (param_1[0x10] != 0) {\n                fcn.00b98e34(param_1[0x10]);\n            }\n            goto code_r0x00bed02d;\n        }\n        if (iVar2 != 8) {\n            if (iVar2 != 10) goto code_r0x00bed02d;\n            iVar2 = param_1[0x10];\n            goto joined_r0x00bed01a;\n        }\n        if (param_1[0x10] == 0) goto code_r0x00bed02d;\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(param_1[0x10]);\n        iVar2 = param_1[0x10];\n    }\n    else {\n        if (iVar2 == 0xc) {\n            if (param_1[0x10] != 0) {\n                fcn.00be73f0(param_1[0x10]);\n            }\n            goto code_r0x00bed02d;\n        }\n        if (iVar2 < 0xd) goto code_r0x00bed02d;\n        if (0xe < iVar2) {\n            if ((iVar2 == 0xf) && (param_1[0x10] != 0)) {\n                fcn.00be7405(param_1[0x10]);\n            }\n            goto code_r0x00bed02d;\n        }\n        iVar2 = param_1[0x10];\njoined_r0x00bed01a:\n        if (iVar2 == 0) goto code_r0x00bed02d;\n        fcn.00b95a64();\n    }\n    fcn.00bb106c(iVar2);\ncode_r0x00bed02d:\n    param_1[0x10] = 0;\n    param_1[0x13] = 1;\n    fcn.00b95a64();\n    fcn.00bb106c(param_1);\n    return param_1;\n}\n",
        "token_count": 677
    },
    "00bed062": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00bed062(int32_t *arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *unaff_EBX;\n    uint uVar6;\n    uint32_t uVar7;\n    uint *unaff_ESI;\n    int32_t iVar8;\n    uint *puVar9;\n    int32_t unaff_EDI;\n    uint arg_ch_00;\n    int32_t in_stack_ffffff64;\n    int32_t iStack152;\n    int32_t iStack148;\n    int32_t *piStack144;\n    int32_t iStack140;\n    uint *puStack136;\n    uint32_t uStack132;\n    int32_t iStack128;\n    int32_t iStack124;\n    int32_t iStack120;\n    uint uStack116;\n    uint uStack112;\n    int32_t iStack108;\n    uint uStack104;\n    int32_t iStack100;\n    uint uStack96;\n    uint uStack92;\n    uint *puStack88;\n    int32_t iStack84;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    int16_t aiStack52 [4];\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    int32_t *piStack28;\n    uchar auStack20 [16];\n    \n    uStack40 = *(in_ECX + 0x28);\n    uStack36 = *(in_ECX + 0x2c);\n    uStack32 = *(in_ECX + 0x30);\n    piStack28 = *(in_ECX + 0x34);\n    *piStack28 = *piStack28 + 1;\n    puVar9 = &arg_ch;\n    iStack84 = in_ECX;\n    fcn.00b97c8e(puVar9);\n    fcn.00b97f41(uStack44);\n    iVar2 = fcn.00b99fbd(&puStack88);\n    iStack128 = iVar2;\n    fcn.00b95a64();\n    uVar6 = 0;\n    if (iVar2 == 0) goto code_r0x00bed6a0;\n    if (*(iVar2 + 0x20) != '\\0') {\n        iStack120 = 0;\n        *(*(in_ECX + 0x3c) + 0xf4) = *(iVar2 + 0x10);\n        iVar2 = fcn.00b971c8(*(iVar2 + 0x10));\n        iVar3 = unaff_ESI << 4;\n        uStack96 = 0xc1fb84;\n        uStack92 = 0;\n        puStack88 = NULL;\n        iStack84 = 0;\n        iVar8 = 4;\n        iStack152 = 0;\n        piStack144 = NULL;\n        iStack140 = 1;\n        uStack72 = 0xc21cc0;\n        uStack68 = 0;\n        uStack64 = 0;\n        uStack60 = 0;\n        uStack116 = 0xc1f968;\n        uVar6 = 0;\n        uStack112 = 0;\n        iStack108 = 0;\n        uStack104 = 0;\n        iStack76 = 0x47;\n        iStack128 = 0x48;\n        iStack120 = 0x40;\n        uVar4 = 0;\n        while ((uVar4 < *(uStack132 + 0x14) || (uVar4 < unaff_ESI))) {\n            puVar9 = puVar9 & 0xffffff;\n            if (uVar4 < *(uStack132 + 0x14)) {\n                in_stack_ffffff64 = *(iVar2 + 4);\n                if (*(*(in_stack_ffffff64 + iVar8 * 4) + 8) == 0) {\n                    unaff_EBX = *(iVar2 + 4);\n                    do {\n                        if ((*(unaff_EBX[iVar8 + 1] + 2) != 0x33) && (*unaff_EBX[iVar8] == *unaff_EBX[iVar8 + 1])) {\ncode_r0x00bed517:\n                            fcn.00bfa0b5(0x91, *(*(*(iVar2 + 4) + iVar8 * 4) + 10));\n                            goto code_r0x00bed533;\n                        }\n                        if (*unaff_EBX[iVar8] == 0x24) {\n                            puVar9 = CONCAT13(1, puVar9);\n                        }\n                        else if (*unaff_EBX[iVar8] != 0x1e) goto code_r0x00bed517;\n                        iVar8 = iVar8 + 1;\n                    } while (*(*(in_stack_ffffff64 + iVar8 * 4) + 8) == 0);\n                }\n                iVar8 = iVar8 + 1;\n                if (*(*(in_stack_ffffff64 + iVar8 * 4) + 8) == 0x41) {\n                    iVar5 = 0;\n                    do {\n                        while( true ) {\n                            while( true ) {\n                                iVar8 = iVar8 + 1;\n                                iVar1 = *(*(in_stack_ffffff64 + iVar8 * 4) + 8);\n                                if (iVar1 != iStack76) break;\n                                iVar5 = iVar5 + 1;\n                            }\n                            in_ECX = iStack100;\n                            if (iVar1 != iStack128) break;\n                            iVar5 = iVar5 + -1;\n                            if (iVar5 < 0) goto code_r0x00bed25b;\n                        }\n                    } while ((iVar1 != iStack120) || (iVar5 != 0));\n                }\ncode_r0x00bed25b:\n                if (unaff_ESI <= iStack124) goto code_r0x00bed27b;\n                fcn.00bf7804(*arg_8h + iVar3 + -0x10);\n                unaff_ESI = puVar9;\n            }\n            else {\ncode_r0x00bed27b:\n                unaff_ESI = puVar9;\n                fcn.00b99a20();\n                iStack152 = 0;\n                iStack140 = 1;\n            }\n            fcn.00be6c62(&stack0xffffff4f);\n            fcn.00be6665(&stack0xffffff64);\n            iVar8 = iVar8 + 1;\n            uVar4 = uStack132 + 1;\n            puVar9 = unaff_ESI;\n            uStack132 = uVar4;\n        }\n        fcn.00b98561(*(uStack132 + 0x10));\n        iVar2 = 4;\n        arg_ch_00 = uStack96;\n        if (0 < puStack136[5]) {\ncode_r0x00bed2ed:\n            in_ECX = iStack76;\n            iVar3 = 0;\n            piStack144 = *(iStack152 + 4);\n            iStack140 = iVar3;\ncode_r0x00bed315:\n            if (*(piStack144[iVar2] + 8) == 0) {\n                if (*piStack144[iVar2] != 0x24) goto code_r0x00bed306;\n                goto code_r0x00bed314;\n            }\n            iVar8 = iVar2 * 4;\n            uStack132 = 1;\n            do {\n                iVar8 = iVar8 + 4;\n                iVar1 = *(*(piStack144 + iVar8) + 8);\n                if (iVar1 == aiStack52[0]) {\n                    iVar3 = iVar3 + 1;\n                }\n                else if (iVar1 == uStack104) {\n                    iVar3 = iVar3 + -1;\n                    if (iVar3 < 0) goto code_r0x00bed349;\n                }\n                else if ((iVar1 == uStack96) && (iVar3 == 0)) goto code_r0x00bed349;\n                uStack132 = uStack132 + 1;\n            } while( true );\n        }\n        puVar9 = NULL;\n        goto code_r0x00bed429;\n    }\n    if (**(in_ECX + 0x38) == 0x40) {\n        fcn.00bed9e3();\n    }\n    piStack144 = in_ECX + 0x40;\n    uStack112 = 0xc1fb84;\n    iStack108 = 0;\n    uStack104 = 0;\n    iStack100 = 0;\n    iStack148 = 0;\n    iStack140 = 0;\n    puStack136 = 0x1;\n    if (*(in_ECX + 0x4c) == 8) {\n        iVar2 = *piStack144;\n    }\n    else {\n        iVar2 = 0;\n    }\n    (**(**(iVar2 + 8) + 4))(*(iVar2 + 8));\n    fcn.00b99a20();\n    uStack132 = 6;\n    fcn.00be6665(&piStack144);\n    fcn.00b993ea(aiStack52);\n    fcn.00be6665(&uStack40);\n    fcn.00b99a20();\n    iVar2 = unaff_EDI + -1;\n    if (-1 < iVar2) {\n        iVar3 = iVar2 * 0x10;\n        do {\n            fcn.00bf7804(*arg_8h + iVar3);\n            fcn.00be6665(&iStack152);\n            iVar3 = iVar3 + -0x10;\n            iVar2 = iVar2 + -1;\n        } while (-1 < iVar2);\n    }\n    iVar2 = puStack136[5];\n    if ((unaff_EDI < iVar2) && (iVar3 = 0,  iVar2 != unaff_EDI && -1 < iVar2 - unaff_EDI)) {\n        do {\n            uStack96 = 0;\n            puStack88 = NULL;\n            iStack84 = 1;\n            fcn.00be6665(&uStack96);\n            fcn.00b99a20();\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < puStack136[5] - unaff_EDI);\n    }\n    fcn.00beda08(&iStack120);\n    fcn.00b99a20();\n    goto code_r0x00bed69b;\ncode_r0x00bed306:\n    if (*piStack144[iVar2] == 0x1e) {\n        iStack140 = 0x100;\ncode_r0x00bed314:\n        iVar2 = iVar2 + 1;\n    }\n    goto code_r0x00bed315;\ncode_r0x00bed349:\n    if (iStack100 < iStack148) {\n        piStack144 = iVar2 + 2;\n        iVar3 = fcn.00b9a000(iStack152, &piStack144, &iStack128, uStack132 + iVar2);\n        if (iVar3 < 0) goto code_r0x00bed533;\n        fcn.00b93f84(**(unaff_EBX[1] + iVar2 * 4));\n    }\n    else {\n        fcn.00b93f84(*piStack144[iVar2]);\n    }\n    unaff_EBX = **(puStack136[1] + iVar2 * 4);\n    fcn.00b98620(unaff_EBX, arg_ch_00, uVar6, in_stack_ffffff64);\n    puStack136 = puStack136 + 1;\n    iVar2 = iVar2 + uStack132 + 1;\n    iStack148 = iStack148 + 1;\n    if (*(iStack108 + 0x14) < iStack148) goto code_r0x00bed41d;\n    goto code_r0x00bed2ed;\ncode_r0x00bed533:\n    fcn.00b94024();\n    fcn.00bb0ab3();\n    fcn.00b99a20();\n    fcn.00be66f4();\n    uVar6 = 0x80004005;\n    goto code_r0x00bed6a0;\ncode_r0x00bed41d:\n    puStack136 = puStack88;\n    puVar9 = puStack88;\ncode_r0x00bed429:\n    uVar7 = 0;\n    fcn.00b99a20();\n    iStack128 = in_ECX + 0x40;\n    uStack116 = 6;\n    fcn.00b97f41(0xc49a3c);\n    fcn.00b98620(auStack20, ~-(iStack120 != 6) & uStack132, 0, 1);\n    fcn.00b95a64();\n    fcn.00b9b89c(*(iStack128 + 0x10) + 1, 0, 0);\n    iStack128 = 0;\n    uVar4 = arg_8h[2];\n    if (uVar4 != 0) {\n        puStack136 = iStack76 - puVar9;\n        do {\n            if (**(puStack136 + puVar9) != '\\0') {\n                puVar9 = ((uVar4 - uVar7) + -1) * 0x10 + *arg_8h;\n                fcn.00bed87f(*unaff_EBX, *puVar9, puVar9[1], puVar9[2]);\n                puVar9 = unaff_EBX;\n            }\n            uVar4 = arg_8h[2];\n            uVar7 = uVar7 + 1;\n            puVar9 = puVar9 + 1;\n            unaff_EBX = puVar9;\n        } while (uVar7 < uVar4);\n    }\n    fcn.00b9843f();\n    fcn.00b94024();\n    fcn.00bb0ab3();\n    fcn.00b99a20();\ncode_r0x00bed69b:\n    uVar6 = 0;\n    fcn.00be66f4();\ncode_r0x00bed6a0:\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return uVar6;\n}\n",
        "token_count": 3198
    },
    "00bed764": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bed764(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    if (arg_ch == -999) {\n        fcn.00bed85d();\n    }\n    else {\n        piVar1 = *(arg_8h + 0xc);\n        if (piVar1 != NULL) {\n            arg_8h = 0;\n            iVar2 = (**(*piVar1 + 0x1c))(piVar1, arg_ch, &arg_8h, 1, &var_4h);\n            if ((-1 < iVar2) && (arg_8h != 0)) {\n                iVar2 = arg_8h;\n                fcn.00b97f41(arg_8h);\n                uVar3 = fcn.00bed062(arg_1ch, iVar2);\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(arg_8h);\n                return uVar3;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 275
    },
    "00beda08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00beda08(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    \n    puVar1 = fcn.00bb0ff6(0x14);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        puVar1[1] = 0;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        *puVar1 = 0xc1fb84;\n    }\n    puVar1[4] = 0;\n    fcn.00bece84(arg_8h);\n    if (in_ECX[1] == 0) {\n        in_ECX[1] = puVar1;\n    }\n    else {\n        *(in_ECX[2] + 0x10) = puVar1;\n    }\n    *in_ECX = *in_ECX + 1;\n    in_ECX[2] = puVar1;\n    return;\n}\n",
        "token_count": 229
    },
    "00beda5d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00beda5d(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t *in_ECX;\n    int32_t *var_8h;\n    int32_t ppv;\n    \n    *in_ECX = 0xc49a88;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    in_ECX[6] = *0xc22c2c;\n    in_ECX[7] = *0xc22c30;\n    in_ECX[8] = *0xc22c34;\n    in_ECX[9] = *0xc22c38;\n    in_ECX[10] = *0xc22c2c;\n    in_ECX[0xb] = *0xc22c30;\n    in_ECX[0xc] = *0xc22c34;\n    in_ECX[0xd] = *0xc22c38;\n    in_ECX[0xe] = 1;\n    var_8h = in_ECX;\n    iVar1 = fcn.00bedc20(arg_8h, arg_ch);\n    if (-1 < iVar1) {\n        ppv = 0;\n        iVar1 = (*_sym.imp.ole32.dll_CoCreateInstance)(in_ECX + 6, 0, 5, in_ECX + 10, &ppv);\n        if (iVar1 < 0) {\n            if (arg_10h == 0) {\n                in_ECX[1] = -0x7ffbfeac;\n            }\n            else {\n                uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n                in_ECX[4] = arg_10h;\n                pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(arg_10h, \"DllGetClassObject\");\n                if (pcVar3 == NULL) {\n                    in_ECX[1] = -0x7ffd7fd1;\n                }\n                else {\n                    iVar1 = fcn.00bedd22();\n                    if (-1 < iVar1) {\n                        var_8h = NULL;\n                        iVar1 = (*pcVar3)(in_ECX + 6, 0xc22bfc, &var_8h);\n                        if ((iVar1 < 0) || (var_8h == NULL)) {\n                            in_ECX[1] = -0x7ffbfeef;\n                        }\n                        else {\n                            iVar1 = (**(*var_8h + 0xc))(var_8h, 0, in_ECX + 10, &ppv);\n                            if ((-1 < iVar1) && (ppv != 0)) {\n                                fcn.00bedcc1(ppv);\n                            }\n                            if (in_ECX[2] == 0) {\n                                in_ECX[1] = -0x7fffbffe;\n                            }\n                            (**(*var_8h + 8))(var_8h);\n                        }\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar2);\n            }\n        }\n        else {\n            fcn.00bedcc1(ppv);\n            if (in_ECX[2] == 0) {\n                in_ECX[1] = -0x7fffbffe;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 792
    },
    "00bedc20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bedc20(uint arg_8h, int32_t lpsz)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00be7652(0);\n    if (iVar1 < 0) {\n        *(in_ECX + 4) = 0x800401f3;\n    }\n    else if (lpsz == 0) {\n        *(in_ECX + 0x28) = *0xc22c0c;\n        *(in_ECX + 0x2c) = *0xc22c10;\n        *(in_ECX + 0x30) = *0xc22c14;\n        *(in_ECX + 0x34) = *0xc22c18;\n    }\n    else {\n        iVar1 = (*_sym.imp.ole32.dll_IIDFromString)(lpsz, in_ECX + 0x28);\n        if (iVar1 < 0) {\n            *(in_ECX + 4) = 0x800401f4;\n        }\n    }\n    return *(in_ECX + 4);\n}\n",
        "token_count": 249
    },
    "00bede08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bede08(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t pdecIn;\n    \n    if (*(param_1 + 0x14) != 0) {\n        pdecIn = param_1;\n        iVar1 = (**(**(param_1 + 0xc) + 0x1c))(*(param_1 + 0xc), &pdecIn);\n        if (-1 < iVar1) {\n            if (*(param_1 + 0x14) == 1) {\n                (*_sym.imp.OLEAUT32.dll_OaEnablePerUserTLibRegistration)\n                          (pdecIn, *(pdecIn + 0x18), *(pdecIn + 0x1a), *(pdecIn + 0x10), *(pdecIn + 0x14));\n            }\n            else if (*(param_1 + 0x14) == 2) {\n                (*_sym.imp.OLEAUT32.dll_VarDecFix)\n                          (pdecIn, *(pdecIn + 0x18), *(pdecIn + 0x1a), *(pdecIn + 0x10), *(pdecIn + 0x14));\n            }\n            (**(**(param_1 + 0xc) + 0x30))(*(param_1 + 0xc), pdecIn);\n        }\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "00bedf22": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bedf22(uint *param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    \n    *param_1 = 0xc49df0;\n    if (param_1[1] != 0) {\n        uVar2 = 0;\n        if (*(param_1[4] + 4) != 0) {\n            do {\n                fcn.00bb106c(*(param_1[2] + uVar2 * 4));\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(param_1[4] + 4));\n        }\n        fcn.00bb106c(param_1[2]);\n        fcn.00bb106c(param_1[3]);\n        fcn.00bb106c(param_1[4]);\n        fcn.00bb106c(param_1[1]);\n    }\n    piVar1 = param_1[7];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    if (param_1[9] != 0) {\n        (**(*param_1[5] + 8))(param_1[5]);\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "00bee31d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl\nfcn.00bee31d(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint32_t arg_18h, int32_t *arg_1ch, \n            ushort *arg_20h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    ushort uVar3;\n    ushort uVar4;\n    uint16_t uVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint32_t *arg_ch_00;\n    uint32_t *arg_ch_01;\n    uint32_t uVar10;\n    uint *unaff_EBX;\n    uint *puVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t unaff_ESI;\n    int16_t *piVar14;\n    uint *puVar15;\n    ushort *pvargDest;\n    uint32_t unaff_EDI;\n    uchar *puVar16;\n    int32_t in_stack_ffffff9c;\n    int32_t iVar17;\n    uint32_t uStack80;\n    uint32_t uStack76;\n    uint *puStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint *puStack56;\n    uint *puStack52;\n    uint32_t uStack48;\n    uint uStack44;\n    uchar auStack40 [4];\n    int32_t iStack36;\n    uint uStack32;\n    uchar auStack28 [4];\n    uchar auStack24 [4];\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    if (arg_ch == 0) {\n        if ((arg_18h & 2) == 0) {\n            return 0x80020003;\n        }\n        if (arg_1ch[2] == 0) {\n            if (arg_20h == NULL) {\n                return 0x80020010;\n            }\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(arg_20h);\n            *arg_20h = 0x13;\n            *(arg_20h + 4) = *(arg_8h + 0x14);\n            return NULL;\n        }\n    }\n    else {\n        if (*(arg_8h + 0x18) == 0) {\n            return 0x80004001;\n        }\n        uStack76 = arg_ch * 0x1c;\n        puVar1 = arg_1ch[2];\n        if (puVar1 == *(uStack76 + 0x30 + *(arg_8h + 0xc))) {\n            puVar11 = NULL;\n            puVar6 = puVar1;\n            puVar15 = puVar1;\n            puStack72 = puVar1;\n            if (puVar1 != NULL) {\n                do {\n                    puVar15 = puVar1;\n                    if (*(*(uStack76 + 0x20 + *(arg_8h + 0xc)) + 4 + puVar11 * 8) == 0x24) {\n                        piVar14 = ((arg_1ch[2] - puVar11) + -1) * 0x10 + *arg_1ch;\n                        if (*piVar14 != 0x24) {\n                            return 0x80020008;\n                        }\n                        (*_sym.imp.OLEAUT32.dll_VariantClear)(auStack24);\n                        piVar2 = *(piVar14 + 6);\n                        uStack20 = 0;\n                        uStack16 = 0;\n                        (**(*piVar2 + 0x28))(piVar2, 0, 0, auStack28);\n                        if (iStack36 < 1) {\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack44);\n                            return 0x80020008;\n                        }\n                        puVar15 = unaff_EBX + iStack36 + -1;\n                        unaff_EBX = puVar15;\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack44);\n                        uStack16 = 0;\n                        uStack12 = 0;\n                        puVar6 = puStack72;\n                    }\n                    puVar11 = puVar11 + 1;\n                } while (puVar11 < puVar6);\n            }\n            uStack68 = fcn.00bb0ff6(-(ZEXT48(puVar15) * 2 >> 0x20 != 0) | ZEXT48(puVar15) * 2);\n            iStack64 = fcn.00bb0ff6(-(ZEXT48(puVar15) * 4 >> 0x20 != 0) | ZEXT48(puVar15) * 4);\n            uVar12 = -(ZEXT48(puVar15) * 0x10 >> 0x20 != 0) | ZEXT48(puVar15) * 0x10;\n            puVar6 = fcn.00bb0ff6(-(0xfffffffb < uVar12) | uVar12 + 4);\n            if (puVar6 == NULL) {\n                puVar6 = NULL;\n            }\n            else {\n                *puVar6 = puVar15;\n                puVar6 = puVar6 + 1;\n                uVar12 = puVar1 - 1;\n                uStack48 = uVar12;\n                for (; -1 < uVar12; uVar12 = uVar12 - 1) {\n                    fcn.00be7096();\n                }\n            }\n            iVar7 = fcn.00bb0ff6(-(ZEXT48(puVar1) * 4 >> 0x20 != 0) | ZEXT48(puVar1) * 4);\n            iStack60 = fcn.00bb0ff6(-(ZEXT48(puVar1) * 4 >> 0x20 != 0) | ZEXT48(puVar1) * 4);\n            puStack52 = NULL;\n            iVar17 = iVar7;\n            if (puStack72 != NULL) {\n                puVar15 = 0xffffffff;\n                do {\n                    puVar15 = puVar15 + 1;\n                    *(iStack60 + puStack52 * 4) = puVar15;\n                    *(uStack68 + puVar15 * 2) = 0xffff;\n                    *(iStack64 + puVar15 * 4) = 0;\n                    *(iVar7 + puVar15 * 4) = 0;\n                    unaff_EDI = ((arg_1ch[2] - puStack52) + -1) * 0x10 + *arg_1ch;\n                    uVar5 = *(*(uStack76 + 0x20 + *(arg_8h + 0xc)) + 4 + puStack52 * 8);\n                    uVar12 = uVar5;\n                    uStack80 = uVar12 & 0xfff;\n                    puVar11 = puVar6;\n                    uStack48 = uVar12;\n                    if ((uVar5 == 0x24) || (uStack44 = 0x4024,  uVar5 == 0x4024)) {\n                        puStack56 = puVar15;\n                        fcn.00bef3dd(unaff_EDI, &uStack48, puVar6, iVar7, uStack68, iStack64, &puStack56);\n                        uVar3 = uVar12;\n                        uVar12 = uStack76;\n                        puVar15 = puVar1;\n                        iVar7 = iVar17;\n                    }\n                    else {\n                        puStack56 = puVar6 + puVar15 * 4;\n                        iVar7 = fcn.00bef2cc(unaff_EDI, puStack56, uStack80);\n                        if (iVar7 == 0) {\n                            unaff_EDI = uStack68;\n                            if (uVar12 != 0x48) {\n                                (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n                                puStack56[2] = 0;\n                                puStack56[3] = 0;\n                                uVar3 = uVar12;\n                                *puStack56 = uVar3;\n                                iVar7 = iVar17;\n                                goto code_r0x00bee601;\n                            }\n                            unaff_EBX = (unaff_EBX & 0x4000) + 0x13;\n                            uVar8 = fcn.00bef583(uStack68);\n                            *(unaff_EDI + puVar15 * 4) = uVar8;\n                        }\n                        uVar3 = uVar12;\n                        iVar7 = iVar17;\n                    }\ncode_r0x00bee601:\n                    if (uVar12 == 0x1f) {\n                        uVar12 = 8;\n                        puVar9 = puVar6 + puVar15 * 4;\n                        uVar8 = fcn.00bef279(puVar9);\n                        puVar6 = puVar11;\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar9);\n                        puVar9[2] = uVar8;\n                        *puVar9 = 0x1f;\n                        *(iVar7 + puVar15 * 4) = uVar8;\n                        iVar17 = iVar7;\n                        puVar11 = puVar6;\ncode_r0x00bee63d:\n                        uVar3 = uVar12;\n                    }\n                    else {\n                        iVar17 = iVar7;\n                        if (uVar12 == 0x1e) {\n                            uVar12 = 8;\n                            uVar8 = fcn.00bee187(puVar6 + puVar15 * 4);\n                            iVar7 = in_stack_ffffff9c;\n                            *(iVar7 + puVar15 * 4) = uVar8;\n                            in_stack_ffffff9c = iVar7;\n                            goto code_r0x00bee63d;\n                        }\n                    }\n                    uVar4 = uVar12;\n                    if ((uVar12 & 0x4000) != 0) {\n                        uVar4 = uVar3;\n                        if (uStack80 == 8) {\n                            puVar9 = fcn.00bb0ff6(4);\n                            *puVar9 = puVar6[puVar15 * 4 + 2];\ncode_r0x00bee750:\n                            *(iVar17 + puVar15 * 4) = puVar9;\n                            iVar7 = iVar17;\n                        }\n                        else {\n                            if (uStack80 == 9) {\n                                puVar9 = fcn.00bef192(puVar6 + puVar15 * 4);\n                                goto code_r0x00bee750;\n                            }\n                            if (uStack80 == 0xc) {\n                                puVar9 = fcn.00bef244(puVar6 + puVar15 * 4);\n                                goto code_r0x00bee750;\n                            }\n                            if (uStack80 == 0x1e) {\n                                puVar9 = fcn.00bef1c7(puVar6 + puVar15 * 4);\n                                goto code_r0x00bee750;\n                            }\n                            if (uStack80 == 0x1f) {\n                                puVar9 = fcn.00bef279(puVar6 + puVar15 * 4);\n                                goto code_r0x00bee750;\n                            }\n                            if (uStack80 == 0x48) {\n                                puVar9 = fcn.00bef0f4(puVar6 + puVar15 * 4);\n                                goto code_r0x00bee750;\n                            }\n                            piVar2 = iVar7 + puVar15 * 4;\n                            iVar7 = iVar17;\n                            if (*piVar2 == 0) {\n                                puVar9 = fcn.00bef20e(puVar6 + puVar15 * 4);\n                                goto code_r0x00bee750;\n                            }\n                        }\n                        puVar6 = puVar6 + puVar15 * 4;\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar6);\n                        *puVar6 = uVar4;\n                        puVar6[2] = *(iVar7 + puVar15 * 4);\n                        iVar17 = iVar7;\n                    }\n                    if (*(uStack68 + puVar15 * 2) == -1) {\n                        *(uStack68 + puVar15 * 2) = uVar4;\n                    }\n                    if (*(iStack64 + puVar15 * 4) == 0) {\n                        *(iStack64 + puVar15 * 4) = puVar11 + puVar15 * 4;\n                    }\n                    puStack52 = puStack52 + 1;\n                    puVar6 = puVar11;\n                } while (puStack52 < puStack72);\n            }\n            puVar6 = NULL;\n            puVar16 = auStack40;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)();\n            iStack36 = 0;\n            uStack32 = 0;\n            uVar5 = *(uStack80 + 0x36 + *(arg_8h + 0xc));\n            if (((((uVar5 & 0x4000) != 0) || (uVar5 == 0x1e)) || (uVar5 == 0x1f)) || (uVar5 == 0x48)) {\n                uVar5 = 0x15;\n            }\n            puVar15 = &uStack44;\n            arg_ch_01 = arg_ch * 4 - 4;\n            puVar11 = puVar1;\n            uVar12 = uStack68;\n            arg_ch_00 = (*_sym.imp.OLEAUT32.dll_VariantChangeTypeEx)\n                                  (*(arg_8h + 0x14), arg_ch_01, *(uStack80 + 0x2c + *(arg_8h + 0xc)), uVar5, puVar1, \n                                   puStack72);\n            if (arg_20h != NULL) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(arg_20h);\n                uVar5 = *(uStack80 + 0x36 + *(arg_8h + 0xc));\n                arg_ch_01 = uVar5;\n                if (((uVar5 & 0x4000) == 0) || (iStack60 == 0)) {\n                    if ((arg_ch_01 < 0x1e) || ((0x1f < arg_ch_01 && (arg_ch_01 != 0x48)))) {\n                        arg_ch_01 = &uStack68;\n                        iVar7 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(arg_20h);\n                        if (iVar7 < 0) {\n                            *(arg_20h + 4) = 0;\n                            *(arg_20h + 6) = 0;\n                        }\n                    }\n                    else {\n                        *arg_20h = 8;\n                        uVar8 = fcn.00bedfdc(&uStack68, arg_ch_01);\n                        *(arg_20h + 4) = uVar8;\n                    }\n                }\n                else {\n                    uStack68 = uStack68 & 0xffff0000 | uVar5;\n                    arg_ch_01 = arg_ch_01 & 0xfff;\n                    fcn.00bef34a(&uStack68, &uStack68, arg_ch_01);\n                }\n            }\n            uVar13 = 0;\n            if (unaff_ESI != 0) {\n                do {\n                    uVar5 = *(*(unaff_EDI + 0x20 + *(arg_8h + 0xc)) + 4 + uVar13 * 8);\n                    uVar10 = uVar5;\n                    pvargDest = ((arg_1ch[2] - uVar13) + -1) * 0x10 + *arg_1ch;\n                    if (((uVar5 & 0x4000) == 0) || (iVar7 = *(iVar17 + uVar13 * 4) * 0x10 + uVar12,  *(iVar7 + 8) == 0))\n                    {\n                        if ((uVar5 == 0x1f) || (uVar5 == 0x1e)) {\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(pvargDest);\n                            *pvargDest = 8;\n                            arg_ch_01 = arg_ch_00;\n                            uVar8 = fcn.00bedfdc(puVar16 + *(uVar10 + uVar13 * 4) * 0x10, arg_ch_00);\n                            *(pvargDest + 4) = uVar8;\n                        }\n                    }\n                    else {\n                        fcn.00bef34a(iVar7, pvargDest, uVar10 & 0xfff);\n                        if ((in_stack_ffffff9c == 0xc) && (iVar7 = *(unaff_ESI + uVar13 * 4),  arg_ch_01[iVar7] != 0)) {\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(arg_ch_01[iVar7]);\n                        }\n                    }\n                    uVar13 = uVar13 + 1;\n                } while (uVar13 < unaff_ESI);\n            }\n            if (puVar15 != NULL) {\n                do {\n                    fcn.00bb106c(puVar11[puVar6]);\n                    puVar6 = puVar6 + 1;\n                } while (puVar6 < puVar15);\n            }\n            fcn.00bb106c(unaff_EBX);\n            fcn.00bb106c(in_stack_ffffff9c);\n            if (uVar12 != 0) {\n                fcn.00bedf93(in_stack_ffffff9c);\n            }\n            fcn.00bb106c(puVar11);\n            fcn.00bb106c(iVar17);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack76);\n            return puVar1;\n        }\n    }\n    return 0x8002000e;\n}\n",
        "token_count": 3970
    },
    "00bee9ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bee9ea(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t *var_4h;\n    \n    piVar2 = *(param_1 + 0x1c);\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 0xc))(piVar2, &var_ch);\n        uVar1 = *(var_ch + 0x30);\n        iVar3 = *(var_ch + 0x28);\n        var_8h = uVar1;\n        (**(**(param_1 + 0x1c) + 0x4c))(*(param_1 + 0x1c), var_ch);\n        if ((((iVar3 != 3) && (*(param_1 + 4) != 0)) && (uVar1 != 0)) && (uVar4 = 0,  var_8h != 0)) {\n            do {\n                iVar3 = (**(**(param_1 + 0x1c) + 0x20))(*(param_1 + 0x1c), uVar4, &var_10h);\n                if (iVar3 == 0) {\n                    var_4h = NULL;\n                    (**(**(param_1 + 0x1c) + 0x38))(*(param_1 + 0x1c), var_10h, &var_4h);\n                    (**(*var_4h + 0xc))(var_4h, &var_14h);\n                    iVar3 = *(var_14h + 0x28);\n                    (**(*var_4h + 0x4c))(var_4h, var_14h);\n                    if (iVar3 == 3) {\n                        (**(**(param_1 + 0x1c) + 8))(*(param_1 + 0x1c));\n                        *(param_1 + 0x1c) = var_4h;\n                        return;\n                    }\n                    (**(*var_4h + 8))(var_4h);\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < var_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 543
    },
    "00beeb07": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00beeb07(uint32_t lpString)\n\n{\n    int16_t iVar1;\n    int64_t iVar2;\n    bool bVar3;\n    ushort uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    char16_t **ppcVar7;\n    int16_t *piVar8;\n    int32_t in_ECX;\n    int32_t iVar9;\n    int16_t *piVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint var_30h;\n    int32_t var_2ch;\n    int16_t *var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int16_t *var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n    uVar11 = 2;\n    iVar2 = (iVar5 + 6) * 2;\n    uVar6 = fcn.00bb0ff6(-(iVar2 >> 0x20 != 0) | iVar2);\n    iVar9 = 0;\n    *(in_ECX + 4) = uVar6;\n    iVar12 = 0;\n    var_8h = 2;\n    var_4h = 0;\n    if (0 < iVar5) {\n        do {\n            for (; *(lpString + iVar9 * 2) == 0x20; iVar9 = iVar9 + 1) {\n            }\n            iVar1 = *(lpString + iVar9 * 2);\n            while (iVar1 != 0x20) {\n                iVar9 = iVar9 + 1;\n                *(*(in_ECX + 4) + iVar12 * 2) = iVar1;\n                iVar12 = iVar12 + 1;\n                uVar11 = var_8h;\n                iVar1 = *(lpString + iVar9 * 2);\n            }\n            uVar11 = uVar11 + 1;\n            *(*(in_ECX + 4) + iVar12 * 2) = 0x7c;\n            for (; *(lpString + iVar9 * 2) == 0x20; iVar9 = iVar9 + 1) {\n            }\n            while( true ) {\n                iVar13 = iVar12 + 1;\n                iVar1 = *(lpString + iVar9 * 2);\n                if ((iVar1 == 0x20) || (iVar1 == 0x28)) break;\n                iVar9 = iVar9 + 1;\n                *(*(in_ECX + 4) + iVar13 * 2) = iVar1;\n                iVar12 = iVar13;\n            }\n            *(*(in_ECX + 4) + iVar13 * 2) = 0x3b;\n            iVar12 = iVar12 + 2;\n            for (; *(lpString + iVar9 * 2) == 0x20; iVar9 = iVar9 + 1) {\n            }\n            if (*(lpString + iVar9 * 2) != 0x28) goto code_r0x00beebea;\n            do {\n                iVar9 = iVar9 + 1;\ncode_r0x00beebea:\n            } while (*(lpString + iVar9 * 2) == 0x20);\n            bVar3 = true;\n            do {\n                for (; *(lpString + iVar9 * 2) == 0x20; iVar9 = iVar9 + 1) {\n                }\n                for (; iVar1 = *(lpString + iVar9 * 2),  iVar1 != 0x3b; iVar9 = iVar9 + 1) {\n                    while (iVar1 == 0x20) {\n                        iVar9 = iVar9 + 1;\n                        iVar1 = *(lpString + iVar9 * 2);\n                    }\n                    iVar1 = *(lpString + iVar9 * 2);\n                    if (iVar1 == 0x29) {\n                        iVar9 = iVar9 + 1;\n                        bVar3 = false;\n                        break;\n                    }\n                    *(*(in_ECX + 4) + iVar12 * 2) = iVar1;\n                    iVar12 = iVar12 + 1;\n                }\n                for (; *(lpString + iVar9 * 2) == 0x20; iVar9 = iVar9 + 1) {\n                }\n                if (bVar3) {\n                    uVar4 = 0x3b;\n                }\n                else {\n                    uVar4 = 10;\n                }\n                *(*(in_ECX + 4) + iVar12 * 2) = uVar4;\n                iVar12 = iVar12 + 1;\n                if (*(lpString + iVar9 * 2) == 0x3b) {\n                    iVar9 = iVar9 + 1;\n                }\n            } while (bVar3);\n            var_8h = uVar11;\n            var_4h = iVar12;\n        } while (iVar9 < iVar5);\n    }\n    if (*(in_ECX + 0x24) != 0) {\n        var_8h = var_8h + 3;\n    }\n    uVar6 = fcn.00bb0ff6(-(var_8h * 4 >> 0x20 != 0) | var_8h * 4);\n    *(in_ECX + 8) = uVar6;\n    ppcVar7 = fcn.00bb0ff6(-(var_8h * 0x1c >> 0x20 != 0) | var_8h * 0x1c);\n    *(in_ECX + 0xc) = ppcVar7;\n    *ppcVar7 = L\"InterfaceDispatch\";\n    *(*(in_ECX + 0xc) + 4) = 0;\n    *(*(in_ECX + 0xc) + 8) = 0xffffffff;\n    *(*(in_ECX + 0xc) + 0xc) = 0xffffffff;\n    *(*(in_ECX + 0xc) + 0x10) = 4;\n    *(*(in_ECX + 0xc) + 0x14) = 0;\n    *(*(in_ECX + 0xc) + 0x18) = 1;\n    *(*(in_ECX + 0xc) + 0x1a) = 0;\n    iVar9 = 2;\n    lpString = 2;\n    *(*(in_ECX + 0xc) + 0x1c) = 0;\n    *(*(in_ECX + 0xc) + 0x20) = 0;\n    *(*(in_ECX + 0xc) + 0x24) = 0;\n    *(*(in_ECX + 0xc) + 0x28) = 0xffffffff;\n    *(*(in_ECX + 0xc) + 0x2c) = 4;\n    *(*(in_ECX + 0xc) + 0x30) = 0;\n    *(*(in_ECX + 0xc) + 0x34) = 2;\n    *(*(in_ECX + 0xc) + 0x36) = 0x13;\n    **(in_ECX + 8) = 0;\n    *(*(in_ECX + 8) + 4) = 0;\n    if (*(in_ECX + 0x24) != 0) {\n        iVar9 = 5;\n        *(*(in_ECX + 0xc) + 0x38) = L\"QueryInterface\";\n        lpString = 5;\n        *(*(in_ECX + 0xc) + 0x40) = 1;\n        *(*(in_ECX + 0xc) + 0x44) = 0;\n        *(*(in_ECX + 0xc) + 0x48) = 4;\n        *(*(in_ECX + 0xc) + 0x4c) = 2;\n        *(*(in_ECX + 0xc) + 0x50) = 1;\n        *(*(in_ECX + 0xc) + 0x52) = 3;\n        uVar6 = fcn.00bb0ff6(0x10);\n        *(*(in_ECX + 8) + 8) = uVar6;\n        *(*(*(in_ECX + 8) + 8) + 4) = 0x48;\n        *(*(*(in_ECX + 8) + 8) + 0xc) = 0x4013;\n        **(*(in_ECX + 8) + 8) = 0;\n        *(*(*(in_ECX + 8) + 8) + 8) = 0;\n        *(*(in_ECX + 0xc) + 0x3c) = *(*(in_ECX + 8) + 8);\n        *(*(in_ECX + 0xc) + 0x54) = L\"AddRef\";\n        *(*(in_ECX + 0xc) + 0x58) = 0;\n        *(*(in_ECX + 0xc) + 0x5c) = 2;\n        *(*(in_ECX + 0xc) + 0x60) = 1;\n        *(*(in_ECX + 0xc) + 100) = 4;\n        *(*(in_ECX + 0xc) + 0x68) = 0;\n        *(*(in_ECX + 0xc) + 0x6c) = 1;\n        *(*(in_ECX + 0xc) + 0x6e) = 0x13;\n        *(*(in_ECX + 8) + 0xc) = 0;\n        *(*(in_ECX + 0xc) + 0x70) = L\"Release\";\n        *(*(in_ECX + 0xc) + 0x74) = 0;\n        *(*(in_ECX + 0xc) + 0x78) = 3;\n        *(*(in_ECX + 0xc) + 0x7c) = 2;\n        *(*(in_ECX + 0xc) + 0x80) = 4;\n        *(*(in_ECX + 0xc) + 0x84) = 0;\n        *(*(in_ECX + 0xc) + 0x88) = 1;\n        *(*(in_ECX + 0xc) + 0x8a) = 0x13;\n        *(*(in_ECX + 8) + 0x10) = 0;\n    }\n    piVar10 = NULL;\n    iVar12 = *(in_ECX + 4);\n    var_28h = NULL;\n    var_2ch = 0;\n    if (0 < var_4h) {\n        var_ch = lpString << 2;\n        iVar9 = iVar9 * 0x1c;\n        var_20h = lpString + -2;\n        var_1ch = iVar12;\n        var_14h = iVar9;\n        do {\n            iVar1 = *(iVar12 + var_2ch * 2);\n            if (iVar1 == 0x7c) {\n                *(iVar12 + var_2ch * 2) = 0;\n                var_28h = iVar12 + (var_2ch + 1) * 2;\n                piVar10 = var_28h;\n            }\n            else if ((iVar1 == 10) || (iVar1 == 0)) {\n                *(iVar12 + var_2ch * 2) = 0;\n                *(iVar9 + *(in_ECX + 0xc)) = var_1ch;\n                *(iVar9 + 8 + *(in_ECX + 0xc)) = var_20h + 1;\n                *(iVar9 + 0xc + *(in_ECX + 0xc)) = var_20h;\n                *(iVar9 + 0x18 + *(in_ECX + 0xc)) = 1;\n                iVar5 = 0;\n                lpString = 0;\n                if (*piVar10 != 0) {\n                    lpString = 0;\n                    piVar8 = piVar10;\n                    do {\n                        if (*piVar8 == 0x3b) {\n                            if (piVar8[1] == 0) {\n                                *piVar8 = 0;\n                            }\n                            else {\n                                lpString = lpString + 1;\n                            }\n                        }\n                        iVar5 = iVar5 + 1;\n                        piVar8 = piVar10 + iVar5;\n                        iVar9 = var_14h;\n                    } while (*piVar8 != 0);\n                }\n                var_10h = NULL;\n                iVar13 = 0;\n                if (0 < iVar5) {\n                    do {\n                        if (piVar10[iVar13] == 0x3b) {\n                            piVar10[iVar13] = 0;\n                            if (piVar10[iVar13 + 1] != 0) {\n                                var_10h = piVar10 + iVar13 + 1;\n                            }\n                            break;\n                        }\n                        iVar13 = iVar13 + 1;\n                    } while (iVar13 < iVar5);\n                }\n                fcn.00bee1af(piVar10, *(in_ECX + 0xc) + 0x10 + iVar9, *(in_ECX + 0xc) + 0x1a + iVar9);\n                *(iVar9 + 0x14 + *(in_ECX + 0xc)) = lpString;\n                if (lpString == 0) {\n                    *(var_ch + *(in_ECX + 8)) = 0;\n                    *(iVar9 + 4 + *(in_ECX + 0xc)) = 0;\n                }\n                else {\n                    uVar6 = fcn.00bb0ff6(-(lpString * 8 >> 0x20 != 0) | lpString * 8);\n                    *(var_ch + *(in_ECX + 8)) = uVar6;\n                    if (var_10h != NULL) {\n                        iVar1 = *var_10h;\n                        lpString = 0;\n                        var_1ch = 0;\n                        piVar8 = var_10h;\n                        piVar10 = var_10h;\n                        while (iVar1 != 0) {\n                            if (*piVar8 == 0x3b) {\n                                *piVar8 = 0;\n                                uVar4 = fcn.00bef5ad(piVar10);\n                                *(*(*(in_ECX + 8) + var_ch) + 4 + lpString * 8) = uVar4;\n                                *(*(*(in_ECX + 8) + var_ch) + lpString * 8) = 0;\n                                lpString = lpString + 1;\n                                piVar10 = piVar8 + 1;\n                            }\n                            var_1ch = var_1ch + 1;\n                            piVar8 = var_10h + var_1ch;\n                            iVar1 = *piVar8;\n                        }\n                        uVar4 = fcn.00bef5ad(piVar10);\n                        *(*(*(in_ECX + 8) + var_ch) + 4 + lpString * 8) = uVar4;\n                        *(*(*(in_ECX + 8) + var_ch) + lpString * 8) = 0;\n                        iVar9 = var_14h;\n                    }\n                    *(iVar9 + 4 + *(in_ECX + 0xc)) = *(var_ch + *(in_ECX + 8));\n                }\n                var_ch = var_ch + 4;\n                iVar9 = iVar9 + 0x1c;\n                var_1ch = iVar12 + (var_2ch + 1) * 2;\n                piVar10 = var_28h;\n                var_20h = var_20h + 1;\n                var_14h = iVar9;\n            }\n            var_2ch = var_2ch + 1;\n        } while (var_2ch < var_4h);\n    }\n    iVar9 = fcn.00bb0ff6(8);\n    *(in_ECX + 0x10) = iVar9;\n    *(iVar9 + 4) = var_8h;\n    **(in_ECX + 0x10) = *(in_ECX + 0xc);\n    return;\n}\n",
        "token_count": 3655
    },
    "00bef2cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00bef2cc(int16_t *pvargSrc, int16_t *pvarDest, uint32_t arg_10h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    \n    iVar2 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(pvarDest, pvargSrc);\n    if (iVar2 < 0) {\n        bVar1 = false;\n    }\n    else {\n        if (arg_10h != 0xc) {\n            if ((arg_10h & 0xffff) - 0x1e < 2) {\n                arg_10h = 8;\n            }\n            if (*pvargSrc != arg_10h) {\n                if (*pvargSrc == 8) {\n                    fcn.00bee267(*(pvarDest + 4), 0);\n                }\n                iVar2 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(pvarDest, pvarDest, 0, arg_10h);\n                if (*pvarDest == 8) {\n                    fcn.00bee267(*(pvarDest + 4), 1);\n                }\n                return -1 < iVar2;\n            }\n        }\n        bVar1 = true;\n    }\n    return bVar1;\n}\n",
        "token_count": 284
    },
    "00bef658": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00bef658(uint16_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    int32_t *in_ECX;\n    uint16_t *puVar4;\n    int32_t iVar5;\n    bool bVar6;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    bVar6 = arg_1ch != 0x7fffffff;\n    var_4h = 0;\n    if (arg_14h < 0) {\n        arg_14h = fcn.00bb2e3c(arg_8h);\n    }\n    iVar5 = 0;\n    if (((arg_14h == 0) || (iVar1 = in_ECX[1],  iVar1 == 0)) || (arg_10h == 0)) {\n        arg_18h = in_ECX[1];\n    }\n    else {\n        if (arg_10h < 1) {\n            arg_10h = -arg_10h;\n            if ((arg_18h < 0) || (iVar1 <= arg_18h)) {\n                arg_18h = iVar1 - arg_14h;\n            }\n            else {\n                arg_18h = arg_18h + (1 - arg_14h);\n            }\n            if (arg_18h < 0) {\n                return iVar1;\n            }\n            if (arg_1ch < 0) {\n                arg_1ch = arg_18h + 1;\n            }\n            if (arg_18h + 1 < arg_1ch) {\n                arg_1ch = arg_18h + 1;\n            }\n            arg_1ch = arg_18h - arg_1ch;\n            for (; arg_1ch < arg_18h; arg_18h = arg_18h + iVar1) {\n                if (arg_10h <= iVar5) {\n                    return arg_18h;\n                }\n                puVar3 = *in_ECX + arg_18h * 2;\n                puVar4 = arg_8h;\n                iVar1 = arg_14h;\n                if (arg_ch == 1) {\n                    for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n                        if (*puVar3 != *puVar4) {\n                            iVar1 = (-(*puVar3 < *puVar4) & 0xfffffffe) + 1;\n                            goto code_r0x00bef805;\n                        }\n                        puVar3 = puVar3 + 1;\n                        puVar4 = puVar4 + 1;\n                    }\n                    iVar1 = 0;\n                }\n                else {\n                    iVar1 = fcn.00b97a24(puVar3, arg_14h, arg_8h, arg_14h, arg_ch);\n                    iVar5 = var_4h;\n                }\ncode_r0x00bef805:\n                if (iVar1 == 0) {\n                    iVar5 = iVar5 + 1;\n                    if (iVar5 == arg_10h) {\n                        return arg_18h;\n                    }\n                    iVar1 = -arg_14h;\n                    var_4h = iVar5;\n                }\n                else {\n                    iVar1 = -1;\n                }\n            }\n        }\n        else {\n            if (arg_18h < 0) {\n                arg_18h = 0;\n            }\n            if (iVar1 <= arg_18h) {\n                return iVar1;\n            }\n            if (arg_1ch < 0) {\n                arg_1ch = iVar1 - arg_18h;\n            }\n            if (iVar1 - arg_18h < arg_1ch) {\n                arg_1ch = iVar1 - arg_18h;\n            }\n            iVar1 = arg_18h - arg_14h;\n            while (arg_18h < iVar1 + 1 + arg_1ch) {\n                if (arg_10h <= iVar5) {\n                    return arg_18h;\n                }\n                puVar3 = *in_ECX + arg_18h * 2;\n                puVar4 = arg_8h;\n                iVar2 = arg_14h;\n                if (arg_ch == 1) {\n                    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                        if (*puVar3 != *puVar4) {\n                            iVar2 = (-(*puVar3 < *puVar4) & 0xfffffffe) + 1;\n                            goto code_r0x00bef74a;\n                        }\n                        puVar3 = puVar3 + 1;\n                        puVar4 = puVar4 + 1;\n                    }\n                    iVar2 = 0;\n                }\n                else {\n                    iVar2 = fcn.00b97a24(puVar3, arg_14h, arg_8h, arg_14h, arg_ch);\n                    iVar5 = var_4h;\n                }\ncode_r0x00bef74a:\n                if (iVar2 == 0) {\n                    iVar5 = iVar5 + 1;\n                    if (iVar5 == arg_10h) {\n                        return arg_18h;\n                    }\n                    arg_18h = arg_18h + arg_14h;\n                    var_4h = iVar5;\n                }\n                else {\n                    arg_18h = arg_18h + 1;\n                }\n            }\n        }\n        if ((iVar5 < arg_10h) && (arg_18h = iVar5,  bVar6)) {\n            arg_18h = in_ECX[1];\n        }\n    }\n    return arg_18h;\n}\n",
        "token_count": 1288
    },
    "00bef841": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00bef841(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint var_14h;\n    \n    arg_8h_00 = 0;\n    if ((*(in_ECX + 0x14) != 0) && (*(in_ECX + 0x10) != '\\0')) {\n        fcn.00b93f20();\n        iVar1 = fcn.00ba5604(arg_8h, arg_10h);\n        if (0 < iVar1) {\n            fcn.00b977c7();\n            if (0 < iVar1) {\n                do {\n                    fcn.00be6731(arg_8h_00, &var_14h);\n                    fcn.00b93f84(&var_14h);\n                    arg_8h_00 = arg_8h_00 + 1;\n                } while (arg_8h_00 < iVar1);\n            }\n            fcn.00b95a64();\n            return iVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 264
    },
    "00bef8b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00bef8b4(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    if ((param_1[5] != 0) && (*(param_1 + 4) != '\\0')) {\n        iVar1 = fcn.00ba4140(*param_1, param_1[7], 0, param_1[0xd], param_1[8], param_1[9]);\n        param_1[10] = iVar1;\n        if (0 < iVar1) {\n            param_1[10] = 0;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 144
    },
    "00befa04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00befa04(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    bool bVar3;\n    int16_t *piVar4;\n    uint16_t *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint var_18h;\n    uint var_8h;\n    \n    fcn.00b977c7();\n    iVar1 = *arg_ch;\n    iVar6 = iVar1 + 1;\n    *arg_ch = iVar6;\n    if (iVar6 < *(arg_8h + 4)) {\n        bVar2 = false;\n        if ((arg_10h == '\\0') || (piVar4 = fcn.00b97b20(iVar6),  *piVar4 != 0x7b)) {\n            bVar3 = false;\n        }\n        else {\n            bVar3 = true;\n            *arg_ch = iVar1 + 2;\n        }\n        fcn.00b97eec();\n        while (*arg_ch < *(arg_8h + 4)) {\n            puVar5 = fcn.00b97b20(*arg_ch);\n            iVar6 = fcn.00bb3e9f(*puVar5);\n            if (iVar6 == 0) break;\n            iVar6 = *arg_ch;\n            bVar2 = true;\n            *arg_ch = iVar6 + 1;\n            puVar5 = fcn.00b97b20(iVar6);\n            fcn.00b97a84(*puVar5);\n        }\n        uVar7 = fcn.00bb37ca(var_18h);\n        if (bVar2) {\n            if (!bVar3) goto code_r0x00befad5;\n            if ((*arg_ch != *(arg_8h + 4)) && (piVar4 = fcn.00b97b20(*arg_ch),  *piVar4 == 0x7d)) {\n                *arg_ch = *arg_ch + 1;\n                goto code_r0x00befad5;\n            }\n        }\n    }\n    uVar7 = 0xffffffff;\n    *arg_ch = iVar1;\ncode_r0x00befad5:\n    fcn.00b95a64();\n    return uVar7;\n}\n",
        "token_count": 521
    },
    "00befb07": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00befb07(uint arg_8h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x10) != 0) {\n        iVar2 = fcn.00bb2e3c(**(in_ECX + 0xc));\n        iVar3 = fcn.00bb2e3c(arg_8h);\n        iVar1 = (iVar2 + 1 + iVar3) * 2;\n        arg_8h_00 = fcn.00bb0ff6(-(iVar1 >> 0x20 != 0) | iVar1);\n        fcn.00bb2ffc(arg_8h_00, **(in_ECX + 0xc));\n        fcn.00bb2fcd(arg_8h_00, arg_8h);\n        fcn.00bb106c(**(in_ECX + 0xc));\n        **(in_ECX + 0xc) = arg_8h_00;\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "00befcb1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl fcn.00befcb1(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t extraout_ECX;\n    uchar auStackY8228 [8156];\n    uint uStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uchar *puStackY60;\n    uint var_20h;\n    uint var_10h;\n    \n    fcn.00bc1b90();\n    uVar1 = *(extraout_ECX + 0x60);\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    (*_sym.imp.USER32.dll_LoadStringW)();\n    fcn.00b97f41(&stack0xffffdfdc);\n    if (*(extraout_ECX + 2) == '\\0') {\n        if (arg_8h[1] == 0) {\n            fcn.00bb38d8(&stack0xffffdfdc, L\"Line %d:\\n\\n\", arg_ch);\n        }\n        else {\n            fcn.00bb38d8(&stack0xffffdfdc, L\"Line %d  (File \\\"%s\\\"):\\n\\n\", arg_ch);\n        }\n        puStackY60 = &stack0xffffdfdc;\n        fcn.00b97f41(puStackY60);\n        fcn.00b97e0b(arg_14h);\n        fcn.00b97e0b(L\"\\n\\nError: \");\n        fcn.00b97e0b(arg_10h);\n        fcn.00b97e0b(0xc49eb4);\n        uStackY68 = 0;\n        uStackY72 = 0xbefda3;\n        uStackY64 = uVar1;\n        (*_sym.imp.USER32.dll_MessageBoxW)();\n        fcn.00b95a64();\n    }\n    else {\n        puStackY60 = 0xbefd11;\n        fcn.00bb3eca(0xc49e20, *arg_8h);\n    }\n    fcn.00b95a64();\n    return;\n}\n",
        "token_count": 489
    },
    "00befdba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_54h\n\nvoid __cdecl fcn.00befdba(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    uint arg_8h_00;\n    uint arg_10h_00;\n    uint arg_8h_01;\n    uchar auStackY8280 [8124];\n    uint uStackY156;\n    uint var_54h;\n    int32_t var_44h;\n    uint var_34h;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uchar *var_24h;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *var_14h;\n    uint uStack20;\n    \n    fcn.00bc1b90();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    if (0 < arg_8h) {\n        var_14h = &stack0xffffdfa8;\n        uStack20 = 0xfff;\n        uStack28 = *0xc572f0;\n        uStack32 = 0;\n        uStack36 = 0xbefdf1;\n        uStack36 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n        pcVar2 = _sym.imp.USER32.dll_LoadStringW;\n        var_24h = 0xbefdfa;\n        (*_sym.imp.USER32.dll_LoadStringW)();\n        var_24h = &stack0xffffdfa8;\n        uStack44 = 0xbefe09;\n        fcn.00b97f41(var_24h);\n        uStack44 = 0xfff;\n        puStack48 = &stack0xffffdfa8;\n        uStack52 = arg_ch;\n        var_34h = 0;\n        (*pcVar1)();\n        (*pcVar2)();\n        fcn.00b97f41(&stack0xffffdfa8);\n        var_44h = 0xbefe34;\n        arg_8h_00 = fcn.00b97143(arg_8h);\n        var_44h = arg_8h;\n        arg_10h_00 = fcn.00beff75(arg_8h);\n        arg_8h_01 = fcn.00beffa7(arg_8h);\n        fcn.00b977c7();\n        cVar3 = fcn.00beffd9(arg_8h_01, &fcn.00befdba::var_34h);\n        if (cVar3 == '\\0') {\n            fcn.00bb38d8(&stack0xffffdfa8, L\"Line %d:\\n\\n\", arg_10h_00);\n        }\n        else {\n            fcn.00bb38d8(&stack0xffffdfa8, L\"Line %d  (File \\\"%s\\\"):\\n\\n\", arg_10h_00);\n        }\n        fcn.00b97f41(&stack0xffffdfa8);\n        fcn.00b97e0b(arg_8h_00);\n        fcn.00b97e0b(0xc22bb8);\n        fcn.00b977c7();\n        if (-1 < arg_10h) {\n            fcn.00b97d2c(arg_8h_00);\n            fcn.00b97e8c(arg_10h, 0xffffffff);\n            fcn.00b97e0b(L\"^ ERROR\");\n            fcn.00b97c8e(&fcn.00befdba::var_24h);\n            fcn.00b97e0b(0xc22bb8);\n        }\n        fcn.00b97e0b(L\"\\nError: \");\n        fcn.00b97c8e(&fcn.00befdba::var_44h);\n        if (*0xc57292 == '\\0') {\n            (*_sym.imp.USER32.dll_MessageBoxW)();\n        }\n        else {\n            uStackY156 = 0xbeff2c;\n            fcn.00bb3eca(L\"%s (%d) : ==> %s: \\n%s \\n%s\\n\", var_34h);\n        }\n        fcn.00b95a64();\n        fcn.00b95a64();\n        fcn.00b95a64();\n        fcn.00b95a64();\n        fcn.00b95a64();\n    }\n    return;\n}\n",
        "token_count": 1024
    },
    "00bf000d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf000d(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    int16_t iVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar6 = 0;\n    for (iVar4 = 0; (iVar1 = *(arg_8h + iVar4 * 2),  iVar1 == 0x20 || (iVar1 == 9)); iVar4 = iVar4 + 1) {\n    }\n    iVar1 = *(arg_8h + iVar4 * 2);\n    iVar5 = 0x22;\n    if ((iVar1 == 0x22) || (iVar5 = 0x27,  iVar1 == 0x27)) {\n        bVar2 = true;\n    }\n    else {\n        if (iVar1 != 0x3c) {\n            return 0;\n        }\n        iVar5 = 0x3e;\n        bVar2 = false;\n    }\n    iVar4 = iVar4 + 1;\n    iVar1 = *(arg_8h + iVar4 * 2);\n    while ((iVar1 != iVar5 && (iVar1 != 0))) {\n        *(arg_ch + iVar6 * 2) = iVar1;\n        iVar6 = iVar6 + 1;\n        iVar4 = iVar4 + 1;\n        iVar1 = *(arg_8h + iVar4 * 2);\n    }\n    iVar7 = 0;\n    if (*(arg_8h + iVar4 * 2) == iVar5) {\n        do {\n            do {\n                iVar4 = iVar4 + 1;\n                iVar1 = *(arg_8h + iVar4 * 2);\n            } while (iVar1 == 0x20);\n        } while (iVar1 == 9);\n        iVar1 = *(arg_8h + iVar4 * 2);\n        if ((iVar1 == 0) || (iVar1 == 0x3b)) {\n            *(arg_ch + iVar6 * 2) = 0;\n            fcn.00b970bd(arg_ch);\n            fcn.00b9710a(arg_ch);\n            fcn.00b977c7();\n            iVar6 = *(in_ECX + 0x40);\n            if (bVar2) {\n                cVar3 = fcn.00bf3e83();\n                if (cVar3 == '\\0') {\n                    do {\n                        iVar6 = iVar6 + -1;\n                        if (iVar6 < 0) goto code_r0x00bf0159;\n                        fcn.00b981a7(*(*(in_ECX + 0x3c) + iVar6 * 4));\n                        fcn.00b97e0b(arg_ch);\n                        cVar3 = fcn.00bf3e73();\n                    } while (cVar3 == '\\0');\ncode_r0x00bf014e:\n                    fcn.00bb2ffc(arg_ch, var_1ch);\n                }\n            }\n            else if (0 < iVar6) {\n                do {\n                    fcn.00b981a7(*(*(in_ECX + 0x3c) + iVar7 * 4));\n                    fcn.00b97e0b(arg_ch);\n                    cVar3 = fcn.00bf3e73();\n                    if (cVar3 != '\\0') goto code_r0x00bf014e;\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < iVar6);\n            }\ncode_r0x00bf0159:\n            fcn.00b95a64();\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 854
    },
    "00bf0219": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.00bf0219(uint *arg_8h)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint lpKeyState;\n    char var_f0h;\n    uint var_efh;\n    uint var_a5h;\n    uint var_60h;\n    \n    *arg_8h = 0;\n    *(arg_8h + 1) = 0;\n    if (*(in_ECX + 0x20) == 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0xa0);\n        pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n        if ((((uVar2 & 0x8000) != 0) || (uVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0xa0),  (uVar2 & 0x8000) != 0)) &&\n           (*(in_ECX + 0x1a) == '\\0')) {\n            *arg_8h = 1;\n        }\n        uVar2 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0xa1);\n        if ((((uVar2 & 0x8000) != 0) || (uVar2 = (*pcVar1)(0xa1),  (uVar2 & 0x8000) != 0)) && (*(in_ECX + 0x1b) == '\\0')\n           ) {\n            *(arg_8h + 1) = 1;\n        }\n        uVar2 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x11);\n        if ((((uVar2 & 0x8000) != 0) || (uVar2 = (*pcVar1)(0x11),  (uVar2 & 0x8000) != 0)) && (*(in_ECX + 0x1c) == '\\0')\n           ) {\n            *(arg_8h + 2) = 1;\n        }\n        uVar2 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x12);\n        if ((((uVar2 & 0x8000) != 0) || (uVar2 = (*pcVar1)(0x12),  (uVar2 & 0x8000) != 0)) && (*(in_ECX + 0x1d) == '\\0')\n           ) {\n            *(arg_8h + 3) = 1;\n        }\n        uVar2 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x5b);\n        if ((((uVar2 & 0x8000) != 0) || (uVar2 = (*pcVar1)(0x5b),  (uVar2 & 0x8000) != 0)) && (*(in_ECX + 0x1e) == '\\0')\n           ) {\n            *(arg_8h + 1) = 1;\n        }\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n        if (iVar3 != 0) {\n            if (((var_60h == -0x80) || (var_f0h == -0x80)) && (*(in_ECX + 0x1a) == '\\0')) {\n                *arg_8h = 1;\n            }\n            if ((var_60h._1_1_ == -0x80) && (*(in_ECX + 0x1b) == '\\0')) {\n                *(arg_8h + 1) = 1;\n            }\n            if ((var_efh == -0x80) && (*(in_ECX + 0x1c) == '\\0')) {\n                *(arg_8h + 2) = 1;\n            }\n            if ((var_efh._1_1_ == -0x80) && (*(in_ECX + 0x1d) == '\\0')) {\n                *(arg_8h + 3) = 1;\n            }\n            if ((var_a5h == -0x80) && (*(in_ECX + 0x1e) == '\\0')) {\n                *(arg_8h + 1) = 1;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 966
    },
    "00bf042e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00bf042e(char *param_1)\n\n{\n    char cVar1;\n    \n    if ((param_1[10] == '\\0') &&\n       ((cVar1 = *param_1,  cVar1 == -1 ||\n        (((((((((cVar1 != '-' && (cVar1 != '.')) && (cVar1 != '#')) && ((cVar1 != '(' && (cVar1 != '\\\"')))) &&\n             ((cVar1 != '%' && ((cVar1 != '\\'' && (cVar1 != '$')))))) && (cVar1 != '&')) &&\n           (((((cVar1 != '!' && (cVar1 != 'o')) && (cVar1 != ']')) &&\n             (((cVar1 != '[' && (cVar1 != '\\\\')) && ((cVar1 != -0x5b && ((cVar1 != -0x5d && (cVar1 != '_')))))))) &&\n            ((cVar1 != -0x5a && (((cVar1 != -0x59 && (cVar1 != -0x58)) && (cVar1 != -0x57)))))))) &&\n          ((((cVar1 != -0x56 && (cVar1 != -0x55)) &&\n            (((cVar1 != -0x54 && ((cVar1 != -0x53 && (cVar1 != -0x52)))) && (cVar1 != -0x51)))) &&\n           ((((cVar1 != -0x50 && (cVar1 != -0x4f)) && (cVar1 != -0x4e)) && ((cVar1 != -0x4d && (cVar1 != -0x4c))))))))\n         && ((cVar1 != -0x4b && ((cVar1 != -0x4a && (cVar1 != -0x49)))))))))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 425
    },
    "00bf04e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf04e4(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if ((*(param_1 + 0x10) != 0) && (iVar3 = 0,  *(param_1 + 0x20) == 0)) {\n        iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x10));\n        if (iVar1 == 0) {\n            *(param_1 + 0x10) = 0;\n        }\n        else {\n            do {\n                iVar1 = *(param_1 + 0x10);\n                iVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n                if (iVar2 == iVar1) {\n                    return;\n                }\n                fcn.00b94a35(iVar1);\n                fcn.00bf1652(0xf);\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < 3);\n        }\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "00bf052c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpKeyState\n// WARNING: Variable defined which should be unmapped: var_fbh\n// WARNING: Variable defined which should be unmapped: var_b1h\n\nvoid __cdecl fcn.00bf052c(char *arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint noname_1;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint noname_2;\n    uint lpKeyState;\n    uint in_stack_fffffef4;\n    uint in_stack_fffffef8;\n    uint in_stack_fffffefc;\n    uchar var_fch;\n    uint var_fbh;\n    uint in_stack_ffffff08;\n    uint in_stack_ffffff0c;\n    uint in_stack_ffffff10;\n    uint in_stack_ffffff14;\n    uint in_stack_ffffff18;\n    uint in_stack_ffffff1c;\n    uint in_stack_ffffff20;\n    uint in_stack_ffffff24;\n    uint in_stack_ffffff28;\n    uint in_stack_ffffff2c;\n    uint in_stack_ffffff30;\n    uint in_stack_ffffff34;\n    uint in_stack_ffffff38;\n    uint in_stack_ffffff3c;\n    uint in_stack_ffffff40;\n    uint in_stack_ffffff44;\n    uchar auStack184 [3];\n    uint var_b1h;\n    uint in_stack_ffffff50;\n    uint var_6ch;\n    uint var_ch;\n    \n    if (*arg_8h != '\\0') {\n        *(in_ECX + 0x14) = 1;\n    }\n    if (arg_8h[2] != '\\0') {\n        *(in_ECX + 0x16) = 1;\n    }\n    if (arg_8h[3] != '\\0') {\n        *(in_ECX + 0x17) = 1;\n    }\n    if ((*(in_ECX + 0x14) != '\\0') && (*(in_ECX + 0x1a) != '\\0')) {\n        *(in_ECX + 0x14) = 0;\n    }\n    if ((*(in_ECX + 0x15) != '\\0') && (*(in_ECX + 0x1b) != '\\0')) {\n        *(in_ECX + 0x15) = 0;\n    }\n    if ((*(in_ECX + 0x16) != '\\0') && (*(in_ECX + 0x1c) != '\\0')) {\n        *(in_ECX + 0x16) = 0;\n    }\n    if ((*(in_ECX + 0x17) != '\\0') && (*(in_ECX + 0x1d) != '\\0')) {\n        *(in_ECX + 0x17) = 0;\n    }\n    if ((*(in_ECX + 0x18) != '\\0') && (*(in_ECX + 0x1e) != '\\0')) {\n        *(in_ECX + 0x18) = 0;\n    }\n    if (*(in_ECX + 0x20) == 0) {\n        fcn.00bf0195();\n        pcVar1 = _sym.imp.USER32.dll_GetAsyncKeyState;\n        noname_2 = 0xa0;\n        uVar3 = (*_sym.imp.USER32.dll_GetAsyncKeyState)();\n        pcVar2 = _sym.imp.USER32.dll_GetKeyState;\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*_sym.imp.USER32.dll_GetKeyState)(0xa0),  (uVar3 & 0x8000) != 0)) &&\n           (*(in_ECX + 0x1a) == '\\0')) {\n            uVar8 = 0xa0;\n            fcn.00bf189f(0xa0);\n            fcn.00bf1121(&var_ch, uVar8, noname_2, unaff_EDI, unaff_EBX, unaff_ESI, lpKeyState, in_stack_fffffef4, \n                         in_stack_fffffef8, in_stack_fffffefc, _var_fch, stack0xffffff04, in_stack_ffffff08, \n                         in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, in_stack_ffffff18, in_stack_ffffff1c, \n                         in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c, in_stack_ffffff30, \n                         in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40, in_stack_ffffff44, \n                         _auStack184, stack0xffffff4c, in_stack_ffffff50);\n        }\n        uVar8 = 0xa1;\n        uVar3 = (*pcVar1)();\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*pcVar2)(0xa1),  (uVar3 & 0x8000) != 0)) && (*(in_ECX + 0x1b) == '\\0')\n           ) {\n            uVar7 = 0xa1;\n            fcn.00bf189f(0xa1);\n            fcn.00bf1121(&var_ch, uVar7, uVar8, noname_2, unaff_EDI, unaff_EBX, unaff_ESI, lpKeyState, in_stack_fffffef4\n                         , in_stack_fffffef8, in_stack_fffffefc, _var_fch, stack0xffffff04, in_stack_ffffff08, \n                         in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, in_stack_ffffff18, in_stack_ffffff1c, \n                         in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c, in_stack_ffffff30, \n                         in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40, in_stack_ffffff44, \n                         _auStack184, stack0xffffff4c);\n        }\n        uVar7 = 0x11;\n        uVar3 = (*pcVar1)();\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*pcVar2)(0x11),  (uVar3 & 0x8000) != 0)) && (*(in_ECX + 0x1c) == '\\0')\n           ) {\n            uVar6 = 0x11;\n            fcn.00bf189f(0x11);\n            fcn.00bf1121(&var_ch, uVar6, uVar7, uVar8, noname_2, unaff_EDI, unaff_EBX, unaff_ESI, lpKeyState, \n                         in_stack_fffffef4, in_stack_fffffef8, in_stack_fffffefc, _var_fch, stack0xffffff04, \n                         in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, in_stack_ffffff18, \n                         in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c, \n                         in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40, \n                         in_stack_ffffff44, _auStack184);\n        }\n        uVar6 = 0x12;\n        uVar3 = (*pcVar1)();\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*pcVar2)(0x12),  (uVar3 & 0x8000) != 0)) && (*(in_ECX + 0x1d) == '\\0')\n           ) {\n            uVar5 = 0x12;\n            fcn.00bf189f(0x12);\n            fcn.00bf1121(&var_ch, uVar5, uVar6, uVar7, uVar8, noname_2, unaff_EDI, unaff_EBX, unaff_ESI, lpKeyState, \n                         in_stack_fffffef4, in_stack_fffffef8, in_stack_fffffefc, _var_fch, stack0xffffff04, \n                         in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, in_stack_ffffff18, \n                         in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c, \n                         in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40, \n                         in_stack_ffffff44);\n        }\n        uVar5 = 0x5b;\n        uVar3 = (*pcVar1)();\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*pcVar2)(0x5b),  (uVar3 & 0x8000) != 0)) && (*(in_ECX + 0x1e) == '\\0')\n           ) {\n            noname_1 = 0x5b;\n            fcn.00bf189f(0x5b);\n            fcn.00bf1121(&var_ch, noname_1, uVar5, uVar6, uVar7, uVar8, noname_2, unaff_EDI, unaff_EBX, unaff_ESI, \n                         lpKeyState, in_stack_fffffef4, in_stack_fffffef8, in_stack_fffffefc, _var_fch, stack0xffffff04\n                         , in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, in_stack_ffffff18\n                         , in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c\n                         , in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40\n                        );\n        }\n    }\n    else {\n        iVar4 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n        if (iVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n        }\n    }\n    return;\n}\n",
        "token_count": 2390
    },
    "00bf075c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf075c(uint arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    int32_t arg_8h_01;\n    uint in_stack_ffffffb0;\n    int32_t in_stack_ffffffb8;\n    int32_t iVar4;\n    \n    *(in_ECX + 0x20) = arg_ch;\n    iVar4 = 0xbf0778;\n    fcn.00bf16de(arg_ch, 1);\n    if (*(in_ECX + 8) == '\\x01') {\n        iVar4 = 0;\n        in_stack_ffffffb8 = 0x14;\n        fcn.00bf0f7b(0x14, 0);\n        in_stack_ffffffb0 = fcn.00bf0219(&stack0xffffffc4);\n        fcn.00bf01b3(in_stack_ffffffb0);\n    }\n    arg_8h_00 = 0;\n    fcn.00b97b76(0x40);\n    while( true ) {\n        arg_8h_01 = arg_8h_00;\n        piVar3 = fcn.00b97b20(arg_8h_00);\n        iVar1 = *piVar3;\n        if (iVar1 == 0) break;\n        arg_8h_00 = arg_8h_00 + 1;\n        fcn.00bf04e4();\n        if (iVar1 == 0x21) {\n            *(in_ECX + 0x17) = 1;\n        }\n        else if (iVar1 == 0x23) {\n            *(in_ECX + 0x18) = 1;\n        }\n        else if (iVar1 == 0x2b) {\n            *(in_ECX + 0x14) = 1;\n        }\n        else if (iVar1 == 0x5e) {\n            *(in_ECX + 0x16) = 1;\n        }\n        else if ((iVar1 == 0x7b) &&\n                (cVar2 = fcn.00bb0352(0x7d, arg_8h, &stack0xffffffc8, &stack0xffffffb4),  cVar2 != '\\0')) {\n            arg_8h_00 = in_stack_ffffffb8;\n            if (iVar4 != 0) {\n                fcn.00bf09cb(&stack0xffffffb8);\n                arg_8h_00 = in_stack_ffffffb8;\n            }\n            *(in_ECX + 0x14) = 0;\n            *(in_ECX + 0x18) = 0;\n            in_stack_ffffffb8 = arg_8h_00;\n        }\n        else {\n            fcn.00bf08b6(arg_8h_01, in_stack_ffffffb0);\n            *(in_ECX + 0x14) = 0;\n            *(in_ECX + 0x18) = 0;\n        }\n    }\n    if (*(in_ECX + 8) == '\\x01') {\n        fcn.00bf1276(&stack0xffffffc0);\n        fcn.00bf0f7b(0x14, in_stack_ffffffb8);\n    }\n    fcn.00bf16de(*(in_ECX + 0x20), 0);\n    fcn.00b95a64();\n    return;\n}\n",
        "token_count": 785
    },
    "00bf091d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00bf091d(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint arg_8h_00;\n    uint16_t *puVar4;\n    int32_t in_ECX;\n    int32_t arg_8h_01;\n    uint var_eh;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = arg_ch;\n    *(in_ECX + 0x20) = arg_ch;\n    fcn.00bf16de(arg_ch, 1);\n    arg_ch = arg_ch & 0xffffff00;\n    var_8h = 0;\n    var_4h._0_2_ = 0;\n    if (*(in_ECX + 8) == '\\x01') {\n        uVar3 = fcn.00bf0f7b(0x14, 0);\n        arg_ch = uVar2 & 0xffffff00 | uVar3;\n        arg_8h_00 = fcn.00bf0219(&var_eh);\n        fcn.00bf01b3(arg_8h_00);\n    }\n    arg_8h_01 = 0;\n    while( true ) {\n        puVar4 = fcn.00b97b20(arg_8h_01);\n        uVar1 = *puVar4;\n        if (uVar1 == 0) break;\n        arg_8h_01 = arg_8h_01 + 1;\n        fcn.00bf04e4();\n        fcn.00bf08b6(uVar1, 1);\n        *(in_ECX + 0x14) = 0;\n        *(in_ECX + 0x18) = 0;\n    }\n    if (*(in_ECX + 8) == '\\x01') {\n        fcn.00bf1276(&var_8h);\n        fcn.00bf0f7b(0x14, arg_ch);\n    }\n    fcn.00bf16de(*(in_ECX + 0x20), 0);\n    return;\n}\n",
        "token_count": 491
    },
    "00bf09cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00bf09cb(uint *arg_8h)\n\n{\n    char cVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    char *pcVar5;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t iVar6;\n    uint *arg_8h_00;\n    uint uVar7;\n    uint *arg_8h_01;\n    uint *noname_3;\n    uint *arg_10h;\n    uint *arg_14h;\n    uint in_stack_ffffff94;\n    uint var_64h;\n    uint in_stack_ffffff9c;\n    uint in_stack_ffffffa0;\n    uint in_stack_ffffffa4;\n    uint in_stack_ffffffa8;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    uint in_stack_ffffffb4;\n    uint var_44h;\n    uint in_stack_ffffffbc;\n    uint in_stack_ffffffc0;\n    uint in_stack_ffffffc4;\n    uint var_34h;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint var_24h;\n    uint in_stack_ffffffdc;\n    uint32_t in_stack_ffffffe0;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    char var_8h;\n    char var_7h;\n    uint var_6h;\n    \n    var_ch = 0;\n    var_18h = 0;\n    var_6h._0_1_ = '\\0';\n    var_6h._1_1_ = '\\0';\n    var_7h = '\\0';\n    var_8h = '\\0';\n    fcn.00bf0195();\n    arg_ch = 1;\n    var_10h = 1;\n    fcn.00b977c7();\n    fcn.00b977c7();\n    arg_14h = &var_ch;\n    arg_10h = &var_44h;\n    arg_8h_01 = 0x20;\n    noname_3 = arg_8h;\n    cVar1 = fcn.00bb0352(0x20, arg_8h, arg_10h, arg_14h);\n    iVar3 = var_ch;\n    iVar6 = 0;\n    if (cVar1 != '\\0') {\n        while ((piVar2 = fcn.00b97b20(iVar3),  *piVar2 == 0x20 || (piVar2 = fcn.00b97b20(iVar3),  *piVar2 == 9))) {\n            iVar3 = iVar3 + 1;\n        }\n        arg_8h_01 = NULL;\n        var_ch = iVar3;\n        fcn.00bb0352(0, arg_8h, &var_34h, &var_ch);\n        iVar3 = fcn.00bb313d(var_34h, 0xc45e80);\n        iVar6 = 0;\n        if (iVar3 == 0) {\n            var_6h._0_1_ = '\\x01';\n            iVar6 = var_18h;\n        }\n        else {\n            iVar3 = fcn.00bb313d(var_34h, L\"DOWN\");\n            if (iVar3 == 0) {\n                var_6h._1_1_ = '\\x01';\n            }\n            else {\n                iVar3 = fcn.00bb313d(var_34h, 0xc4a174);\n                if (iVar3 == 0) {\n                    var_7h = '\\x01';\n                }\n                else {\n                    iVar3 = fcn.00bb313d(var_34h, 0xc4a17c);\n                    if (iVar3 == 0) {\n                        var_8h = '\\x01';\n                    }\n                    else {\n                        arg_8h_01 = NULL;\n                        piVar2 = fcn.00b97b52(0);\n                        if (*piVar2 == 0x30) {\n                            piVar2 = fcn.00b97b52(1);\n                            if (*piVar2 != 0x78) {\n                                arg_8h_01 = 0x1;\n                                piVar2 = fcn.00b97b52(1);\n                                if (*piVar2 != 0x58) goto code_r0x00bf0b60;\n                            }\n                            fcn.00b97e8c(0, 2);\n                            fcn.00bf03ab(&var_34h, &var_10h);\n                            piVar2 = fcn.00b97b52(0);\n                            arg_ch = var_10h;\n                            if (*piVar2 == 0x30) {\n                                uVar7 = 0xc4a184;\n                            }\n                            else {\n                                uVar7 = 0xc4a18c;\n                            }\n                            fcn.00bf18d7(&var_64h, uVar7, var_10h);\n                            arg_8h_01 = &var_64h;\n                            fcn.00b97d2c(arg_8h_01);\n                        }\n                        else {\ncode_r0x00bf0b60:\n                            arg_ch = fcn.00bb37ca(var_34h);\n                            if (arg_ch < 0) {\n                                arg_ch = 0;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    do {\n        iVar3 = fcn.00bb313d(*(iVar6 * 4 + 0xc34cf0), var_44h);\n        if (iVar3 == 0) break;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 99);\n    if (iVar6 == 99) {\n        puVar4 = fcn.00b97b52(0);\n        fcn.00bf1831(*puVar4);\n        if (var_6h._1_1_ == '\\0') {\n            if (var_6h == '\\0') {\n                fcn.00b97b52(0);\ncode_r0x00bf0e4d:\n                fcn.00bf08b6(arg_8h_01, noname_3);\n                goto code_r0x00bf0ec4;\n            }\n            goto code_r0x00bf0ebf;\n        }\n        goto code_r0x00bf0e1a;\n    }\n    if (*(iVar6 + 0xc34c88) == '\\0') {\n        fcn.00bf189f(str._f_b_b..__reepqrstuvwxyz________t__[iVar6]);\n        if (var_6h._1_1_ == '\\0') {\n            if (var_6h == '\\0') {\n                if (var_7h == '\\0') {\n                    if (var_8h == '\\0') {\n                        fcn.00bf0f1b(str._f_b_b..__reepqrstuvwxyz________t__[iVar6], arg_ch);\n                        goto code_r0x00bf0ec4;\n                    }\n                    uVar7 = 0;\n                }\n                else {\n                    uVar7 = 1;\n                }\n                fcn.00bf0f7b(str._f_b_b..__reepqrstuvwxyz________t__[iVar6], uVar7);\n                goto code_r0x00bf0ec4;\n            }\n            goto code_r0x00bf0ebf;\n        }\n        goto code_r0x00bf0e1a;\n    }\n    // switch table (15 cases) at 0xbf0edf\n    switch(str._f_b_b..__reepqrstuvwxyz________t__[iVar6]) {\n    case 0:\n        if (*(in_ECX + 0x1c) != '\\0') goto code_r0x00bf0ec4;\n        fcn.00bf189f(0x11);\n        *(in_ECX + 0x1c) = 1;\n        break;\n    case 1:\n        if (*(in_ECX + 0x1c) == '\\0') goto code_r0x00bf0ec4;\n        fcn.00bf189f(0x11);\n        *(in_ECX + 0x1c) = 0;\n        goto code_r0x00bf0ebf;\n    case 2:\n        if (*(in_ECX + 0x1d) != '\\0') goto code_r0x00bf0ec4;\n        fcn.00bf189f(0x12);\n        goto code_r0x00bf0cb8;\n    case 3:\n        if (*(in_ECX + 0x1d) == '\\0') goto code_r0x00bf0ec4;\n        fcn.00bf189f(0x12);\ncode_r0x00bf0c6e:\n        *(in_ECX + 0x1d) = 0;\n        goto code_r0x00bf0ebf;\n    case 4:\n        if (*(in_ECX + 0x1a) != '\\0') goto code_r0x00bf0ec4;\n        fcn.00bf189f(0x10);\n        goto code_r0x00bf0d72;\n    case 5:\n        if (*(in_ECX + 0x1a) == '\\0') goto code_r0x00bf0ec4;\n        fcn.00bf189f(0x10);\ncode_r0x00bf0d06:\n        *(in_ECX + 0x1a) = 0;\n        goto code_r0x00bf0ebf;\n    case 6:\n        if (*(in_ECX + 0x1e) != '\\0') goto code_r0x00bf0ec4;\n        fcn.00bf189f(0x5b);\n        *(in_ECX + 0x1e) = 1;\n        break;\n    case 7:\n        if (*(in_ECX + 0x1e) == '\\0') goto code_r0x00bf0ec4;\n        fcn.00bf189f(0x5b);\n        *(in_ECX + 0x1e) = 0;\n        goto code_r0x00bf0ebf;\n    case 8:\n        if (*(in_ECX + 0x1f) != '\\0') goto code_r0x00bf0ec4;\n        fcn.00bf189f(0x5c);\n        *(in_ECX + 0x1f) = 1;\n        break;\n    case 9:\n        if (*(in_ECX + 0x1f) == '\\0') goto code_r0x00bf0ec4;\n        fcn.00bf189f(0x5c);\n        *(in_ECX + 0x1f) = 0;\n        goto code_r0x00bf0ebf;\n    case 10:\n        if (*(in_ECX + 0x20) != 0) goto code_r0x00bf0e4d;\n        if (*(in_ECX + 0x1d) == '\\0') {\n            uVar7 = 0x12;\n            fcn.00bf189f(0x12);\n            fcn.00bf0fe6(&var_24h, uVar7, arg_8h_01, noname_3, arg_10h, arg_14h, unaff_EDI, unaff_ESI, unaff_EBX, \n                         in_stack_ffffff94, var_64h, in_stack_ffffff9c, in_stack_ffffffa0, in_stack_ffffffa4, \n                         in_stack_ffffffa8, in_stack_ffffffac, in_stack_ffffffb0, in_stack_ffffffb4, var_44h, \n                         in_stack_ffffffbc, in_stack_ffffffc0, in_stack_ffffffc4, var_34h, in_stack_ffffffcc, \n                         in_stack_ffffffd0, in_stack_ffffffd4, var_24h, in_stack_ffffffdc, in_stack_ffffffe0, 0, in_ECX)\n            ;\n        }\n        arg_8h_00 = NULL;\n        while (arg_8h_01 = arg_8h_00,  piVar2 = fcn.00b97b52(arg_8h_00),  *piVar2 != 0) {\n            pcVar5 = fcn.00b97b52(arg_8h_00);\n            fcn.00bf189f(*pcVar5 + 0x30);\n            noname_3 = &var_24h;\n            fcn.00bf1259(noname_3);\n            arg_8h_00 = arg_8h_00 + 1;\n        }\n        if (*(in_ECX + 0x1d) != '\\0') goto code_r0x00bf0ec4;\n        fcn.00bf189f(0x12);\ncode_r0x00bf0ebf:\n        fcn.00bf1121(arg_8h_01, noname_3, arg_10h, arg_14h, unaff_EDI, unaff_ESI, unaff_EBX, in_stack_ffffff94, var_64h\n                     , in_stack_ffffff9c, in_stack_ffffffa0, in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, \n                     in_stack_ffffffb0, in_stack_ffffffb4, var_44h, in_stack_ffffffbc, in_stack_ffffffc0, \n                     in_stack_ffffffc4, var_34h, in_stack_ffffffcc, in_stack_ffffffd0, in_stack_ffffffd4, var_24h, \n                     in_stack_ffffffdc, in_stack_ffffffe0, 0, in_ECX, var_10h, var_ch);\n        goto code_r0x00bf0ec4;\n    case 0xb:\n        fcn.00bf189f(0xd);\n        in_stack_ffffffe0 = in_stack_ffffffe0 & 0xff000000 | CONCAT12(1, in_stack_ffffffe0);\n        if (var_6h._1_1_ == '\\0') {\n            if (var_6h == '\\0') {\ncode_r0x00bf0d54:\n                fcn.00bf1259(&var_24h);\n                goto code_r0x00bf0ec4;\n            }\n            goto code_r0x00bf0ebf;\n        }\n        break;\n    case 0xc:\n        fcn.00bf189f(0x12);\n        if (var_6h._1_1_ == '\\0') {\n            if (var_6h == '\\0') goto code_r0x00bf0d54;\n            if (*(in_ECX + 0x1d) == '\\0') goto code_r0x00bf0ec4;\n            goto code_r0x00bf0c6e;\n        }\n        if (*(in_ECX + 0x1d) != '\\0') goto code_r0x00bf0ec4;\ncode_r0x00bf0cb8:\n        *(in_ECX + 0x1d) = 1;\n        break;\n    case 0xd:\n        fcn.00bf189f(0xa0);\n        if (var_6h._1_1_ == '\\0') {\n            if (var_6h == '\\0') goto code_r0x00bf0d54;\n            if (*(in_ECX + 0x1a) == '\\0') goto code_r0x00bf0ec4;\n            goto code_r0x00bf0d06;\n        }\n        if (*(in_ECX + 0x1a) != '\\0') goto code_r0x00bf0ec4;\ncode_r0x00bf0d72:\n        *(in_ECX + 0x1a) = 1;\n        break;\n    case 0xe:\n        fcn.00bf189f(0xa1);\n        if (var_6h._1_1_ == '\\0') {\n            if (var_6h == '\\0') goto code_r0x00bf0d54;\n            if (*(in_ECX + 0x1b) == '\\0') goto code_r0x00bf0ec4;\n            *(in_ECX + 0x1b) = 0;\n            goto code_r0x00bf0ebf;\n        }\n        if (*(in_ECX + 0x1b) != '\\0') goto code_r0x00bf0ec4;\n        *(in_ECX + 0x1b) = 1;\n        break;\n    default:\n        goto code_r0x00bf0ec4;\n    }\ncode_r0x00bf0e1a:\n    fcn.00bf0fe6(&var_24h, noname_3, arg_10h, arg_14h, unaff_EDI, unaff_ESI, unaff_EBX, in_stack_ffffff94, var_64h, \n                 in_stack_ffffff9c, in_stack_ffffffa0, in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, \n                 in_stack_ffffffb0, in_stack_ffffffb4, var_44h, in_stack_ffffffbc, in_stack_ffffffc0, in_stack_ffffffc4\n                 , var_34h, in_stack_ffffffcc, in_stack_ffffffd0, in_stack_ffffffd4, var_24h, in_stack_ffffffdc, \n                 in_stack_ffffffe0, 0, in_ECX, var_10h, var_ch);\ncode_r0x00bf0ec4:\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return;\n}\n",
        "token_count": 4130
    },
    "00bf0fe6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00bf0fe6(uint8_t *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint arg_80h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint32_t extraout_EDX;\n    uint32_t uVar5;\n    uint uVar6;\n    uint lpKeyState;\n    uint pInputs;\n    ushort var_1ch;\n    uint var_1ah;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    uVar1 = *arg_8h;\n    uVar3 = *(arg_8h + 8);\n    var_4h = var_4h & 0xffffff00 | uVar1;\n    arg_8h = arg_8h & 0xffffff00 | arg_8h[7];\n    if ((((*(in_ECX + 0x20) == 0) || (uVar1 == 0x14)) || (uVar1 == 0x90)) || (uVar1 == 0x91)) {\n        if (uVar1 == 0xff) {\n            stack0xffffffe4 = 4;\n            var_14h = 0;\n            var_10h = 0;\n            pInputs = 1;\n            var_1ch = 0;\n            var_1ah._0_2_ = uVar3;\n            (*_sym.imp.USER32.dll_SendInput)(1, &pInputs, 0x1c);\n        }\n        else {\n            cVar2 = fcn.00bf042e();\n            fcn.00bf17d7(var_4h, arg_8h, cVar2 == '\\x01');\n        }\n    }\n    else {\n        if (uVar1 == 0xff) {\n            uVar5 = 1;\n            uVar6 = 0x102;\n        }\n        else {\n            iVar4 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n            if (iVar4 != 0) {\n                *(&lpKeyState + uVar1) = *(&lpKeyState + uVar1) | 0x80;\n                (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n            }\n            cVar2 = fcn.00bf042e();\n            uVar5 = extraout_EDX;\n            if (cVar2 == '\\x01') {\n                uVar5 = extraout_EDX | 0x1000000;\n            }\n            if ((((*(in_ECX + 0x17) == '\\0') && (*(in_ECX + 0x1d) == '\\0')) && (uVar1 != 0x12)) ||\n               ((*(in_ECX + 0x16) != '\\0' || (*(in_ECX + 0x1c) != '\\0')))) {\n                uVar3 = uVar1;\n                uVar6 = 0x100;\n            }\n            else {\n                uVar5 = uVar5 | 0x20000000;\n                uVar3 = uVar1;\n                uVar6 = 0x104;\n            }\n        }\n        (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 0x20), uVar6, uVar3, uVar5);\n    }\n    fcn.00bf01fe();\n    return;\n}\n",
        "token_count": 951
    },
    "00bf1121": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00bf1121(uint8_t *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint arg_80h)\n\n{\n    ushort *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint32_t extraout_EDX;\n    uint32_t uVar5;\n    uint uVar6;\n    uint lpKeyState;\n    uint pInputs;\n    ushort var_1ch;\n    uint var_1ah;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    uVar2 = *arg_8h;\n    puVar1 = arg_8h + 8;\n    var_4h = var_4h & 0xffffff00 | uVar2;\n    arg_8h = arg_8h & 0xffffff00 | arg_8h[7];\n    if ((((*(in_ECX + 0x20) == 0) || (uVar2 == 0x14)) || (uVar2 == 0x90)) || (uVar2 == 0x91)) {\n        if (uVar2 == 0xff) {\n            stack0xffffffe4 = 6;\n            var_14h = 0;\n            var_10h = 0;\n            pInputs = 1;\n            var_1ch = 0;\n            var_1ah._0_2_ = *puVar1;\n            (*_sym.imp.USER32.dll_SendInput)(1, &pInputs, 0x1c);\n        }\n        else {\n            cVar3 = fcn.00bf042e();\n            if (cVar3 == '\\x01') {\n                uVar6 = 3;\n            }\n            else {\n                uVar6 = 2;\n            }\n            fcn.00bf17d7(var_4h, arg_8h, uVar6);\n        }\n    }\n    else if (uVar2 != 0xff) {\n        iVar4 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n        if (iVar4 != 0) {\n            *(&lpKeyState + uVar2) = *(&lpKeyState + uVar2) ^ 0x80;\n            (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n        }\n        cVar3 = fcn.00bf042e();\n        uVar5 = extraout_EDX;\n        if (cVar3 == '\\x01') {\n            uVar5 = extraout_EDX | 0x1000000;\n        }\n        if ((((*(in_ECX + 0x17) == '\\0') && (*(in_ECX + 0x1d) == '\\0')) && (uVar2 != 0x12)) ||\n           ((*(in_ECX + 0x16) != '\\0' || (*(in_ECX + 0x1c) != '\\0')))) {\n            uVar6 = 0x101;\n        }\n        else {\n            uVar5 = uVar5 | 0x20000000;\n            uVar6 = 0x105;\n        }\n        (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 0x20), uVar6, uVar2, uVar5);\n    }\n    fcn.00bf01e5();\n    return;\n}\n",
        "token_count": 936
    },
    "00bf1276": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00bf1276(char *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    uint lpKeyState;\n    uint var_f0h;\n    uint var_a5h;\n    uint8_t var_60h;\n    uint var_5fh;\n    \n    if ((((*arg_8h == '\\0') && (arg_8h[1] == '\\0')) && (arg_8h[2] == '\\0')) &&\n       ((arg_8h[3] == '\\0' && (arg_8h[4] == '\\0')))) {\n        return;\n    }\n    if ((*(in_ECX + 0x20) == 0) || (iVar2 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20)),  iVar2 == 0)) {\n        if (*arg_8h != '\\0') {\n            fcn.00bf17d7(0xa0, *(in_ECX + 0x27), 0);\n        }\n        if (arg_8h[1] != '\\0') {\n            fcn.00bf17d7(0xa1, *(in_ECX + 0x28), 0);\n        }\n        if (arg_8h[2] != '\\0') {\n            fcn.00bf17d7(0x11, *(in_ECX + 0x24), 0);\n        }\n        if (arg_8h[3] != '\\0') {\n            fcn.00bf17d7(0x12, *(in_ECX + 0x25), 0);\n        }\n        if (arg_8h[4] != '\\0') {\n            fcn.00bf17d7(0x5b, *(in_ECX + 0x29), 0);\n        }\n        goto code_r0x00bf144d;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n    if (iVar2 != 0) {\n        if (*arg_8h != '\\0') {\n            var_f0h._0_1_ = var_f0h | 0x80;\n            var_60h = var_60h | 0x80;\n        }\n        if (arg_8h[1] != '\\0') {\n            var_f0h._0_1_ = var_f0h | 0x80;\n            var_5fh._0_1_ = var_5fh | 0x80;\n        }\n        if (arg_8h[2] != '\\0') {\n            var_f0h._1_1_ = var_f0h._1_1_ | 0x80;\n        }\n        if (arg_8h[3] != '\\0') {\n            var_f0h._2_1_ = var_f0h._2_1_ | 0x80;\n        }\n        if (arg_8h[4] != '\\0') {\n            var_a5h._0_1_ = var_a5h | 0x80;\n        }\n        (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n    }\n    pcVar1 = _sym.imp.USER32.dll_PostMessageW;\n    if ((*arg_8h != '\\0') || (arg_8h[1] != '\\0')) {\n        (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 0x20), 0x100, 0x10, *(in_ECX + 0x26) << 0x10 | 1);\n    }\n    if (arg_8h[2] != '\\0') {\n        (*pcVar1)(*(in_ECX + 0x20), 0x100, 0x11, *(in_ECX + 0x24) << 0x10 | 1);\n    }\n    if (arg_8h[3] != '\\0') {\n        if ((arg_8h[2] == '\\0') && (*(in_ECX + 0x1c) == '\\0')) {\n            uVar3 = *(in_ECX + 0x25) << 0x10 | 0x20000001;\n            uVar4 = 0x104;\n        }\n        else {\n            if (arg_8h[3] == '\\0') goto code_r0x00bf13ba;\n            uVar3 = *(in_ECX + 0x25) << 0x10 | 1;\n            uVar4 = 0x100;\n        }\n        (*pcVar1)(*(in_ECX + 0x20), uVar4, 0x12, uVar3);\n    }\ncode_r0x00bf13ba:\n    if (arg_8h[4] != '\\0') {\n        (*pcVar1)(*(in_ECX + 0x20), 0x100, 0x5b, *(in_ECX + 0x29) << 0x10 | 1);\n    }\ncode_r0x00bf144d:\n    fcn.00bf01fe();\n    return;\n}\n",
        "token_count": 1167
    },
    "00bf145d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00bf145d(char *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    uint lpKeyState;\n    uint var_f0h;\n    uint var_a5h;\n    uint8_t var_60h;\n    uint var_5fh;\n    \n    if ((((*arg_8h == '\\0') && (arg_8h[1] == '\\0')) && (arg_8h[2] == '\\0')) &&\n       ((arg_8h[3] == '\\0' && (arg_8h[4] == '\\0')))) {\n        return;\n    }\n    if ((*(in_ECX + 0x20) == 0) || (iVar2 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20)),  iVar2 == 0)) {\n        if (*arg_8h != '\\0') {\n            fcn.00bf17d7(0xa0, *(in_ECX + 0x27), 2);\n        }\n        if (arg_8h[1] != '\\0') {\n            fcn.00bf17d7(0xa1, *(in_ECX + 0x28), 2);\n        }\n        if (arg_8h[2] != '\\0') {\n            fcn.00bf17d7(0x11, *(in_ECX + 0x24), 2);\n        }\n        if (arg_8h[3] != '\\0') {\n            fcn.00bf17d7(0x12, *(in_ECX + 0x25), 2);\n        }\n        if (arg_8h[4] != '\\0') {\n            fcn.00bf17d7(0x5b, *(in_ECX + 0x29), 2);\n        }\n        goto code_r0x00bf1642;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n    if (iVar2 != 0) {\n        if (*arg_8h != '\\0') {\n            var_f0h._0_1_ = var_f0h ^ 0x80;\n            var_60h = var_60h ^ 0x80;\n        }\n        if (arg_8h[1] != '\\0') {\n            var_f0h._0_1_ = var_f0h ^ 0x80;\n            var_5fh._0_1_ = var_5fh ^ 0x80;\n        }\n        if (arg_8h[2] != '\\0') {\n            var_f0h._1_1_ = var_f0h._1_1_ ^ 0x80;\n        }\n        if (arg_8h[3] != '\\0') {\n            var_f0h._2_1_ = var_f0h._2_1_ ^ 0x80;\n        }\n        if (arg_8h[4] != '\\0') {\n            var_a5h._0_1_ = var_a5h ^ 0x80;\n        }\n        (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n    }\n    pcVar1 = _sym.imp.USER32.dll_PostMessageW;\n    if ((*arg_8h != '\\0') || (arg_8h[1] != '\\0')) {\n        (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 0x20), 0x101, 0x10, *(in_ECX + 0x26) << 0x10 | 0xc0000001);\n    }\n    if (arg_8h[2] != '\\0') {\n        (*pcVar1)(*(in_ECX + 0x20), 0x101, 0x11, *(in_ECX + 0x24) << 0x10 | 0xc0000001);\n    }\n    if (arg_8h[3] != '\\0') {\n        if ((arg_8h[2] == '\\0') && (*(in_ECX + 0x1c) == '\\0')) {\n            uVar3 = *(in_ECX + 0x25) << 0x10 | 0xe0000001;\n            uVar4 = 0x105;\n        }\n        else {\n            if (arg_8h[3] == '\\0') goto code_r0x00bf15a7;\n            uVar3 = *(in_ECX + 0x25) << 0x10 | 0xc0000001;\n            uVar4 = 0x101;\n        }\n        (*pcVar1)(*(in_ECX + 0x20), uVar4, 0x12, uVar3);\n    }\ncode_r0x00bf15a7:\n    if (arg_8h[4] != '\\0') {\n        (*pcVar1)(*(in_ECX + 0x20), 0x101, 0x5b, *(in_ECX + 0x29) << 0x10 | 0xc0000001);\n    }\ncode_r0x00bf1642:\n    fcn.00bf01e5();\n    return;\n}\n",
        "token_count": 1186
    },
    "00bf16de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf16de(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    int32_t lpdwProcessId;\n    \n    iVar2 = arg_8h;\n    if ((arg_8h != 0) || (*(in_ECX + 9) != '\\0')) {\n        arg_8h = 0;\n        lpdwProcessId = 0;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        pcVar1 = _sym.imp.USER32.dll_AttachThreadInput;\n        if (arg_ch == '\\0') {\n            if ((iVar2 != 0) && ((*_sym.imp.USER32.dll_AttachThreadInput)(iVar3, *0xc57f08, 0),  *0xc57f04 != *0xc57f08)\n               ) {\n                (*pcVar1)(*0xc57f04, *0xc57f08, 0);\n            }\n            (*pcVar1)(iVar3, *0xc57f04, 0);\n        }\n        else {\n            uVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)(0);\n            *0xc57f04 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(uVar4);\n            iVar5 = (*_sym.imp.USER32.dll_AttachThreadInput)(iVar3, *0xc57f04, 1);\n            if (iVar2 != 0) {\n                *0xc57f08 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(iVar2, &lpdwProcessId);\n                if (*0xc57f04 != *0xc57f08) {\n                    arg_8h = (*_sym.imp.USER32.dll_AttachThreadInput)(*0xc57f04, *0xc57f08, 1);\n                }\n                lpdwProcessId = (*_sym.imp.USER32.dll_AttachThreadInput)(iVar3, *0xc57f08, 1);\n            }\n            if ((((iVar5 == 0) && (arg_8h == 0)) && (lpdwProcessId == 0)) &&\n               ((iVar3 == *0xc57f04 && (*0xc57f04 == *0xc57f08)))) {\n                *(in_ECX + 0x20) = 0;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 554
    },
    "00bf18ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf18ee(uint arg_8h, uint hWnd)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t lpdwProcessId;\n    \n    iVar3 = 0;\n    piVar1 = in_ECX + 4;\n    do {\n        if (*piVar1 == 0) break;\n        iVar3 = iVar3 + 1;\n        piVar1 = piVar1 + 2;\n    } while (iVar3 < 0x10);\n    if (iVar3 == 0x10) {\n        uVar2 = 0;\n    }\n    else {\n        lpdwProcessId = in_ECX;\n        (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(hWnd, &lpdwProcessId);\n        uVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x438, 0, lpdwProcessId);\n        *(in_ECX + iVar3 * 8) = uVar2;\n        uVar2 = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(uVar2, 0, arg_8h, 0x1000, 4);\n        *(in_ECX + 4 + iVar3 * 8) = uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 303
    },
    "00bf1ad8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf1ad8(uint *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    *param_1 = 0xc32ec8;\n    iVar4 = *param_1[1];\n    if ((iVar4 == 1) || (iVar4 == 0x7fffffff)) {\n        iVar4 = 0;\n        do {\n            iVar3 = *(iVar4 + param_1[5]);\n            while (iVar3 != 0) {\n                iVar1 = *(iVar3 + 4);\n                iVar2 = *(*(iVar3 + 8) + 0x20);\n                if (iVar2 != 0) {\n                    fcn.00be6621(iVar2);\n                }\n                fcn.00bb106c(iVar3);\n                iVar3 = iVar1;\n            }\n            iVar4 = iVar4 + 4;\n        } while (iVar4 < 0x1000);\n        fcn.00bb106c(param_1[5]);\n        if (param_1[4] != NULL) {\n            (***param_1[4])(1);\n        }\n        fcn.00bb106c(param_1[1]);\n    }\n    else {\n        *param_1[1] = iVar4 + -1;\n    }\n    *param_1 = 0xc32eac;\n    return;\n}\n",
        "token_count": 324
    },
    "00bf1b85": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf1b85(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if ((arg_8h != 2) && (arg_8h != 1)) {\n        iVar1 = **(in_ECX + 4);\n        if ((1 < iVar1) && (iVar1 != 0x7fffffff)) {\n            **(in_ECX + 4) = iVar1 + -1;\n            fcn.00bf1ccf(in_ECX);\n            fcn.00bf23c4();\n        }\n        if ((arg_8h == 8) || (arg_8h == 4)) {\n            if (**(in_ECX + 4) != 0x7fffffff) {\n                **(in_ECX + 4) = 1;\n            }\n        }\n        else {\n            **(in_ECX + 4) = 0x7fffffff;\n        }\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "00bf1c69": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf1c69(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    piVar2 = arg_8h;\n    if (*arg_8h == 1) {\n        uVar3 = fcn.00ba5e58(arg_8h + 1);\n    }\n    else {\n        uVar3 = arg_8h[6];\n    }\n    arg_8h = fcn.00bb0ff6(0xc);\n    *arg_8h = 0;\n    arg_8h[2] = piVar2;\n    puVar1 = *(*(in_ECX + 0x14) + (uVar3 & 0x3ff) * 4);\n    if (puVar1 == NULL) {\n        arg_8h[1] = 0;\n    }\n    else {\n        arg_8h[1] = puVar1;\n        *puVar1 = arg_8h;\n    }\n    *(*(in_ECX + 0x14) + (uVar3 & 0x3ff) * 4) = arg_8h;\n    fcn.00bff835(&arg_8h);\n    return;\n}\n",
        "token_count": 294
    },
    "00bf1ccf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf1ccf(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t in_ECX;\n    int32_t *piVar9;\n    int32_t **ppiVar10;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar3 = fcn.00bb0ff6(0x1000);\n    iVar4 = fcn.00bb0ff6(0x10);\n    if (iVar4 == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_4h = fcn.00bf1a01(*(in_ECX + 0x10));\n    }\n    iVar4 = *(var_4h + 8);\n    var_14h = 0;\n    piVar9 = piVar3;\n    do {\n        *piVar9 = 0;\n        for (iVar1 = *(var_14h + *(in_ECX + 0x14)); iVar1 != 0; iVar1 = *(iVar1 + 4)) {\n            puVar5 = fcn.00bb0ff6(0xc);\n            if (*piVar9 == 0) {\n                *piVar9 = puVar5;\n            }\n            *puVar5 = 0;\n            puVar5[1] = 0;\n            puVar6 = fcn.00bb0ff6(0x28);\n            if (puVar6 == NULL) {\n                puVar6 = NULL;\n            }\n            else {\n                fcn.00b977c7();\n            }\n            puVar5[2] = puVar6;\n            puVar2 = *(iVar1 + 8);\n            *puVar6 = *puVar2;\n            puVar6[6] = puVar2[6];\n            puVar6[7] = puVar2[7];\n            fcn.00b981a7(puVar2 + 1);\n            iVar7 = fcn.00bb0ff6(0x10);\n            if (iVar7 == 0) {\n                uVar8 = 0;\n            }\n            else {\n                uVar8 = fcn.00b99dcb(puVar2[8]);\n            }\n            iVar7 = 0;\n            puVar6[8] = uVar8;\n            if (0 < iVar4) {\n                ppiVar10 = *(var_4h + 4);\n                do {\n                    if (**ppiVar10 == iVar1) {\n                        **(*(var_4h + 4) + iVar7 * 4) = puVar5;\n                        break;\n                    }\n                    iVar7 = iVar7 + 1;\n                    ppiVar10 = ppiVar10 + 1;\n                } while (iVar7 < iVar4);\n            }\n        }\n        piVar9 = piVar9 + 1;\n        var_14h = var_14h + 4;\n        if (0xfff < var_14h) {\n            *(in_ECX + 0x14) = piVar3;\n            *(in_ECX + 0x10) = var_4h;\n            *(in_ECX + 8) = *(arg_8h + 8);\n            *(in_ECX + 0xc) = *(arg_8h + 0xc);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 831
    },
    "00bf1f32": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf1f32(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint extraout_ECX;\n    uint arg_10h;\n    \n    fcn.00bf1b85(arg_ch);\n    iVar1 = fcn.00bf1e60(arg_8h);\n    if (iVar1 == 0) {\n        if ((arg_ch == 8) || (arg_ch == 0x20)) {\n            arg_10h = 1;\n            uVar2 = fcn.00bf23e2(extraout_ECX);\n            uVar2 = fcn.00bf256c(arg_8h, uVar2, arg_10h);\n        }\n        else if (arg_ch == 2) {\n            uVar2 = fcn.00bf23e2();\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = *(iVar1 + 0x20);\n    }\n    return uVar2;\n}\n",
        "token_count": 235
    },
    "00bf1f8b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf1f8b(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint extraout_ECX;\n    \n    fcn.00bf1b85(arg_10h);\n    iVar1 = fcn.00bf1eca(arg_8h, arg_ch);\n    if (iVar1 == 0) {\n        if ((arg_10h == 8) || (arg_10h == 0x20)) {\n            uVar2 = fcn.00bf23e2(extraout_ECX, extraout_ECX);\n            uVar2 = fcn.00bf2606(arg_8h, arg_ch, uVar2);\n        }\n        else if (arg_10h == 2) {\n            uVar2 = fcn.00bf23e2();\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = *(iVar1 + 0x20);\n    }\n    return uVar2;\n}\n",
        "token_count": 239
    },
    "00bf233c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf233c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_24h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.00be6636();\n    iVar3 = 0;\n    iVar1 = *(*(in_ECX + 0x10) + 8);\n    if (0 < iVar1) {\n        do {\n            piVar2 = *(**(*(*(in_ECX + 0x10) + 4) + iVar3 * 4) + 8);\n            if (*piVar2 == 0) {\n                var_14h = piVar2[6];\n                var_ch = 0;\n                var_10h = piVar2[7];\n                var_8h = 2;\n                fcn.00be6665(&var_14h);\n            }\n            else {\n                fcn.00b993ea(piVar2 + 1);\n                fcn.00be6665(&var_24h);\n            }\n            fcn.00b99a20();\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return;\n}\n",
        "token_count": 304
    },
    "00bf256c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00bf256c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *arg_8h_00;\n    int32_t *piVar2;\n    uint var_4h;\n    \n    fcn.00bf1b85(8);\n    if (arg_10h == '\\0') {\n        iVar1 = fcn.00bf1e60(arg_8h);\n        if (iVar1 != 0) {\n            piVar2 = iVar1 + 0x20;\n            fcn.00b99e9c(arg_ch);\n            goto code_r0x00bf25fc;\n        }\n    }\n    arg_8h_00 = fcn.00bb0ff6(0x28);\n    if (arg_8h_00 == NULL) {\n        arg_8h_00 = NULL;\n    }\n    else {\n        fcn.00b977c7();\n    }\n    *arg_8h_00 = 1;\n    fcn.00b981a7(arg_8h);\n    iVar1 = fcn.00bb0ff6(0x10);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        *(iVar1 + 8) = 0;\n        fcn.00b99ac0(arg_ch);\n    }\n    piVar2 = arg_8h_00 + 8;\n    *piVar2 = iVar1;\n    fcn.00bf1c69(arg_8h_00);\ncode_r0x00bf25fc:\n    return *piVar2;\n}\n",
        "token_count": 365
    },
    "00bf28f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf28f7(uint *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint uVar2;\n    \n    if (*(in_ECX + 0x8c) == 0) {\n        if (*(in_ECX + 0xa0) == '\\0') {\n            if ((*0xc567dc == 0) && (*0xc57ef8 < 100)) {\n                *0xc57ef8 = *0xc57ef8 + 1;\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = 10;\n            }\n            (*_sym.imp.KERNEL32.dll_Sleep)(uVar2);\n        }\n        uVar2 = 0;\n    }\n    else {\n        puVar1 = **(in_ECX + 0x90);\n        *arg_8h = *puVar1;\n        fcn.00b981a7(puVar1 + 1);\n        fcn.00b9467d();\n        fcn.00b94665(extraout_ECX);\n        *0xc57ef8 = 0;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 275
    },
    "00bf2972": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00bf2972(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    iVar1 = *(param_1 + 0x9d0);\n    if (iVar1 < 0x206) {\n        puVar2 = fcn.00bb0ff6(0x18);\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            fcn.00b977c7();\n        }\n        if (*(param_1 + 0x9d0) == 0) {\n            *(param_1 + 0x9d0) = 7;\n        }\n        else {\n            *(param_1 + 0x9d0) = *(param_1 + 0x9d0) + 1;\n        }\n        iVar4 = *(param_1 + 0x9d0);\ncode_r0x00bf29fb:\n        *(param_1 + 0x1b4 + iVar4 * 4) = puVar2;\n        *puVar2 = 0;\n        *(puVar2 + 1) = 0xff;\n    }\n    else {\n        iVar4 = 7;\n        if (6 < iVar1) {\n            piVar3 = param_1 + 0x1d0;\n            do {\n                if (*piVar3 == 0) break;\n                iVar4 = iVar4 + 1;\n                piVar3 = piVar3 + 1;\n            } while (iVar4 <= iVar1);\n            if (iVar4 <= iVar1) {\n                puVar2 = fcn.00bb0ff6(0x18);\n                if (puVar2 == NULL) {\n                    puVar2 = NULL;\n                }\n                else {\n                    fcn.00b977c7();\n                }\n                goto code_r0x00bf29fb;\n            }\n        }\n        iVar4 = -1;\n    }\n    return iVar4;\n}\n",
        "token_count": 453
    },
    "00bf2c42": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf2c42(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    int32_t unaff_ESI;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint *puStack68;\n    uint uStack64;\n    uint auStack60 [4];\n    int32_t iStack44;\n    \n    puStack68 = 0xffffffff;\n    cVar3 = fcn.00bf2f4c(arg_8h, &puStack68);\n    if (((cVar3 != '\\0') && (iVar5 = 7,  6 < unaff_ESI)) && (unaff_ESI <= *(in_ECX + 0x9d0))) {\n        puStack68 = *(in_ECX + 0x1b4 + unaff_ESI * 4);\n        uVar8 = *puStack68;\n        if (*(puStack68 + 1) == '\\x01') {\n            uStack64 = 0x30;\n            iVar7 = unaff_ESI;\n            fcn.00bb3020(auStack60, 0, 0x2c);\n            auStack60[0] = 4;\n            iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uVar8, unaff_ESI, 0, &uStack64);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            if ((iStack44 != 0) && (6 < *(in_ECX + 0x9d0))) {\n                ppiVar6 = in_ECX + 0x1d0;\n                unaff_ESI = iVar7;\n                iVar7 = iStack44;\n                do {\n                    piVar1 = *ppiVar6;\n                    if ((piVar1 != NULL) && (*piVar1 == iStack44)) {\n                        if (*(piVar1 + 1) == '\\x01') {\n                            iStack44 = iVar7;\n                            fcn.00bf2c42(iVar5);\n                            iVar7 = iStack44;\n                        }\n                        else {\n                            (*_sym.imp.USER32.dll_DeleteMenu)(iStack44, iVar5, 0);\n                            *(*ppiVar6 + 1) = 0xff;\n                            **ppiVar6 = 0;\n                            *(*ppiVar6 + 5) = 0;\n                            fcn.00b97e8c(0, 0xffffffff);\n                            iStack44 = iVar7;\n                            fcn.00bf28a0(iVar5);\n                            iVar7 = iStack44;\n                        }\n                    }\n                    iVar5 = iVar5 + 1;\n                    ppiVar6 = ppiVar6 + 1;\n                } while (iVar5 <= *(in_ECX + 0x9d0));\n            }\n        }\n        puVar2 = puStack68;\n        iVar5 = (*_sym.imp.USER32.dll_DeleteMenu)(*puStack68, unaff_ESI, 0);\n        if (iVar5 != 0) {\n            *(puVar2 + 1) = 0xff;\n            *puVar2 = 0;\n            fcn.00b97e8c(0, 0xffffffff);\n            fcn.00bf28a0(unaff_ESI);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 769
    },
    "00bf331f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf331f(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    bool bVar2;\n    \n    if (*(param_1 + 0x1a4) == 0) {\n        *(param_1 + 0x1a4) = *0xc562c8;\n    }\n    arg_8h = param_1 + 0x1a8;\n    fcn.00b94213(arg_8h, param_1 + 0x1ac);\n    bVar2 = *(param_1 + 0x50) == 0;\n    if (!bVar2) {\n        iVar1 = fcn.00bf3226(*(param_1 + 0x14), *(param_1 + 0x4c), param_1 + 0x1ac);\n        bVar2 = *(param_1 + 0x50) == 0;\n        *arg_8h = iVar1;\n    }\n    if ((bVar2) || (*arg_8h == 0)) {\n        *arg_8h = *(param_1 + 0x1a4);\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "00bf3378": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf3378(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if ((arg_8h & 1) == 0) {\n        if ((arg_8h & 2) != 0) {\n            fcn.00b944cb();\n            uVar1 = 0xfffffffc;\n            goto code_r0x00bf33a6;\n        }\n    }\n    else {\n        fcn.00b943db();\n        uVar1 = 0xfffffffd;\ncode_r0x00bf33a6:\n        fcn.00b9406f(uVar1);\n    }\n    if ((arg_8h & 4) == 0) {\n        if ((arg_8h & 8) == 0) goto code_r0x00bf33e2;\n        *0xc56899 = 0;\n        if (*0xc56288 == '\\x01') {\n            fcn.00b943db();\n        }\n        uVar1 = 0xfffffffa;\n    }\n    else {\n        *0xc56899 = 1;\n        uVar1 = 0xfffffffb;\n    }\n    fcn.00b9406f(uVar1);\ncode_r0x00bf33e2:\n    if ((arg_8h & 0x10) != 0) {\n        *0xc56899 = 0;\n        fcn.00b97d2c(0xc1f910);\n    }\n    return 1;\n}\n",
        "token_count": 330
    },
    "00bf3555": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf3555(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = *param_1[3];\n    if (1 < iVar1) {\n        *param_1[3] = iVar1 + -1;\n        fcn.00be6443();\n        iVar1 = param_1[1];\n        uVar2 = fcn.00b95a4b(iVar1 + 1);\n        param_1[2] = uVar2;\n        uVar2 = fcn.00bb0ff6(uVar2);\n        fcn.00bb1080(uVar2, *param_1, iVar1 + 1);\n        *param_1 = uVar2;\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00bf387d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf387d(uint param_1, char param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (param_2 == '\\x01') {\n        cVar1 = fcn.00bf4d10();\n        if (cVar1 != '\\0') {\n            return;\n        }\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(param_1, 0, uVar2);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)(uVar2);\n    (*_sym.imp.USER32.dll_AttachThreadInput)(uVar2);\n    return;\n}\n",
        "token_count": 171
    },
    "00bf38ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar __cdecl fcn.00bf38ad(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    ushort uStack00000008;\n    uint uStack0000000a;\n    \n    fcn.00bc1b90();\n    fcn.00bf48aa(&stack0x00010028);\n    fcn.00bf48aa(&stack0x00000028);\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n    if (iVar2 == 0) {\n        if (arg_8h != '\\0') {\n            iVar2 = fcn.00bb378c(&stack0x00010020, &stack0x00000020);\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_MoveFileW)();\n            }\n            return '\\x01';\n        }\n    }\n    else {\n        cVar1 = fcn.00bf4cd3();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.00bf4cd3();\n            if (cVar1 == '\\0') {\n                fcn.00b97f41(&stack0x00000020);\n                cVar1 = fcn.00bf3c66();\n                fcn.00b95a64();\n                if (cVar1 == '\\0') {\n                    return '\\0';\n                }\n                arg_8h._0_1_ = fcn.00bf4cd3();\n            }\n            if (arg_8h != '\\0') {\n                fcn.00bb2fcd(&stack0x00010020, L\"\\\\*.*\");\n                iVar2 = fcn.00bb2e3c(&stack0x00010020);\n                *(&stack0x00010022 + iVar2 * 2) = 0;\n                iVar2 = fcn.00bb2e3c(&stack0x00000020);\n                *(&stack0x00000022 + iVar2 * 2) = 0;\n                uStack00000008 = 0;\n                uStack0000000a = 0;\n                iVar2 = (*_sym.imp.SHELL32.dll_SHFileOperationW)();\n                return '\\x01' - (iVar2 != 0);\n            }\n        }\n    }\n    return '\\0';\n}\n",
        "token_count": 507
    },
    "00bf3e91": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf3e91(char *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *piStack644;\n    uchar auStack620 [28];\n    int32_t iStack592;\n    uchar auStack584 [8];\n    uchar auStack576 [8];\n    uint uStack568;\n    uchar auStack548 [544];\n    \n    piStack644 = NULL;\n    uStack568 = 0x22c;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2);\n    (*_sym.imp.KERNEL32.dll_Process32FirstW)(uVar1, auStack576);\n    *arg_8h = '\\0';\n    iVar2 = fcn.00bf49c9();\n    while ((*arg_8h == '\\0' && (iVar3 = (*_sym.imp.KERNEL32.dll_Process32NextW)(uVar1, auStack584),  iVar3 == 1))) {\n        fcn.00b977c7();\n        fcn.00b977c7();\n        fcn.00b97f41(auStack548);\n        fcn.00b946f9(0, &stack0xfffffd84, auStack620);\n        fcn.00b95a64();\n        fcn.00b97c8e(auStack620);\n        piVar4 = piStack644;\n        iVar3 = fcn.00b97a68(0, 0);\n        if ((iVar3 == 0) || ((iVar2 != 0 && (iVar2 == iStack592)))) {\n            *arg_8h = '\\x01';\n            *piVar4 = iStack592;\n        }\n        fcn.00b95a64();\n        fcn.00b95a64();\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n    return 1;\n}\n",
        "token_count": 436
    },
    "00bf4645": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf4645(uint arg_8h)\n\n{\n    int16_t *arg_8h_00;\n    \n    arg_8h_00 = fcn.00bb0ff6(0x10000);\n    (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, arg_8h_00, 0x7fff);\n    if (*arg_8h_00 != 0) {\n        fcn.00b97e0b(arg_8h_00);\n        fcn.00b97e0b(0xc22bb8);\n    }\n    fcn.00bb106c(arg_8h_00);\n    return 1;\n}\n",
        "token_count": 154
    },
    "00bf48f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf48f3(int32_t param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint lpWSAData;\n    uint name;\n    uint in;\n    \n    iVar3 = (*_sym.imp.WSOCK32.dll_WSAStartup)(0x101, &lpWSAData);\n    if (iVar3 == 0) {\n        (*_sym.imp.WSOCK32.dll_gethostname)(&name, 0x100);\n        iVar3 = (*_sym.imp.WSOCK32.dll_gethostbyname)(&name);\n        if (iVar3 != 0) {\n            piVar2 = *(iVar3 + 0xc);\n            iVar5 = 0;\n            iVar3 = *piVar2;\n            piVar1 = piVar2;\n            while (iVar3 != 0) {\n                piVar1 = piVar1 + 1;\n                iVar5 = iVar5 + 1;\n                iVar3 = *piVar1;\n            }\n            if (iVar5 < param_1) {\n                fcn.00bb2ffc(param_2, L\"0.0.0.0\");\n            }\n            else {\n                fcn.00bb1080(&in, piVar2[param_1 + -1], 4);\n                uVar4 = (*_sym.imp.WSOCK32.dll_inet_ntoa)(in);\n                fcn.00bb4570(&name, uVar4);\n                uVar4 = fcn.00bf573e();\n                fcn.00bb2ffc(param_2, uVar4);\n                fcn.00bb106c(uVar4);\n            }\n            (*_sym.imp.WSOCK32.dll_WSACleanup)();\n            return;\n        }\n    }\n    fcn.00bb2ffc(param_2, 0xc1f910);\n    return;\n}\n",
        "token_count": 433
    },
    "00bf4b7a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf4b7a(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_10h;\n    \n    cVar1 = fcn.00bf4d10();\n    if (cVar1 == '\\0') {\n        iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(arg_8h);\n        if ((iVar2 != 0) || (*0xc562b6 == '\\x01')) {\n            fcn.00b977c7();\n            fcn.00beafdc(&var_10h);\n            fcn.00b97c8e(&var_10h);\n            fcn.00b97e0b(0xc22bb8);\n            fcn.00b95a64();\n        }\n    }\n    return 1;\n}\n",
        "token_count": 185
    },
    "00bf4be8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00bf4be8(int32_t param_1)\n\n{\n    if (param_1 < 0) {\n        param_1 = -1 - param_1;\n    }\n    else if (param_1 == 1) {\n        param_1 = 0;\n    }\n    else {\n        param_1 = -param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 91
    },
    "00bf4c03": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.00bf4c03(void)\n\n{\n    int32_t iVar1;\n    uint pIdentifierAuthority;\n    uint var_ch;\n    uint SidToCheck;\n    uint32_t IsMember;\n    \n    var_ch._0_2_ = 0x500;\n    pIdentifierAuthority = 0;\n    IsMember = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                         (&pIdentifierAuthority, 2, 0x20, 0x220, 0, 0, 0, 0, 0, 0, &SidToCheck);\n    if (IsMember != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_CheckTokenMembership)(0, SidToCheck, &IsMember);\n        IsMember = IsMember & -(iVar1 != 0);\n        (*_sym.imp.ADVAPI32.dll_FreeSid)(SidToCheck);\n    }\n    return IsMember == 1;\n}\n",
        "token_count": 217
    },
    "00bf4d35": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf4d35(uint lpCaption, uint uType, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t iVar3;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = arg_10h;\n    iVar3 = 0;\n    *0xc562b7 = '\\0';\n    if (arg_10h != 0) {\n        *0xc562b8 = 1;\n        var_4h = in_ECX;\n        var_ch = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        var_8h = iVar1;\n        iVar3 = fcn.00bb40c1(0, 0, fcn.00bf5217, &var_ch, 0, &arg_10h);\n        in_ECX = var_4h;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_MessageBoxW)(in_ECX);\n    if (iVar3 != 0) {\n        *0xc562b8 = 0;\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(iVar3, 0xffffffff);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n    }\n    if (*0xc562b7 == '\\x01') {\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 325
    },
    "00bf4e10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00bf4e10(int16_t *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    if (*param_1 == 0) {\n        return '\\x01';\n    }\n    iVar2 = fcn.00bb313d(param_1, L\"LEFT\");\n    if (iVar2 == 0) {\n        return '\\x01';\n    }\n    iVar2 = fcn.00bb313d(param_1, L\"RIGHT\");\n    if (iVar2 == 0) {\n        return '\\x02';\n    }\n    iVar2 = fcn.00bb313d(param_1, L\"MIDDLE\");\n    if (iVar2 != 0) {\n        iVar2 = fcn.00bb313d(param_1, L\"MAIN\");\n        if ((iVar2 == 0) || (iVar2 = fcn.00bb313d(param_1, L\"PRIMARY\"),  iVar2 == 0)) {\n            cVar1 = fcn.00b93582();\n            bVar3 = cVar1 != '\\0';\n        }\n        else {\n            iVar2 = fcn.00bb313d(param_1, L\"MENU\");\n            if ((iVar2 != 0) && (iVar2 = fcn.00bb313d(param_1, L\"SECONDARY\"),  iVar2 != 0)) {\n                return '\\0';\n            }\n            cVar1 = fcn.00b93582();\n            bVar3 = cVar1 == '\\0';\n        }\n        return bVar3 + '\\x01';\n    }\n    return '\\x03';\n}\n",
        "token_count": 359
    },
    "00bf4f63": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00bf4f63(char param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uStack00000012;\n    uint uStack00000016;\n    uint uStack0000001a;\n    int16_t in_stack_00000038;\n    \n    fcn.00bc1b90();\n    fcn.00bf48aa(&stack0x00010448);\n    fcn.00bf48aa(&stack0x00000448);\n    uVar2 = fcn.00bf4cd3();\n    if (uVar2 != '\\0') {\n        uVar2 = fcn.00bf4cd3();\n        if (uVar2 != '\\0') {\n            if (param_1 == '\\0') goto code_r0x00bf4faf;\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n            if (iVar3 == 0) {\n                iVar3 = fcn.00bb378c(&stack0x00010448, &stack0x00000448);\n                if (iVar3 != 0) {\n                    uVar2 = (*_sym.imp.KERNEL32.dll_MoveFileW)();\n                    return uVar2 & 0xffffff00 | uVar2 != 0;\n                }\n                return 1;\n            }\n            fcn.00bb432e(&stack0x00010448, 0, 0, &stack0x00000240, &stack0x00000038);\n            fcn.00bb2fcd(&stack0x00000448, 0xc1fac0);\n            fcn.00bb2fcd(&stack0x00000448, &stack0x00000240);\n            if (in_stack_00000038 != 0) {\n                fcn.00bb2fcd(&stack0x00000448, &stack0x00000038);\n            }\n        }\n        fcn.00b97f41(&stack0x00000448);\n        fcn.00b97f41(&stack0x00010444);\n        cVar1 = fcn.00bf4c69();\n        fcn.00b95a64();\n        fcn.00b95a64();\n        if (cVar1 == '\\0') {\n            uVar2 = fcn.00bb378c(&stack0x00010440, &stack0x00000440);\n            if (uVar2 != 0) {\n                iVar3 = fcn.00bb2e3c(&stack0x00010440);\n                *(&stack0x00010442 + iVar3 * 2) = 0;\n                iVar3 = fcn.00bb2e3c(&stack0x00000440);\n                uStack00000016 = 0;\n                uStack0000001a = 0;\n                *(&stack0x00000442 + iVar3 * 2) = 0;\n                uStack00000012 = 0;\n                iVar3 = (*_sym.imp.SHELL32.dll_SHFileOperationW)();\n                return -iVar3 & 0xffffff00U | 1 - (iVar3 != 0);\n            }\n        }\n        else {\n            uVar2 = fcn.00bf38ad(1);\n            if (uVar2 != '\\0') {\n                fcn.00b97f41(&stack0x00010440);\n                cVar1 = fcn.00bf53c5();\n                uVar2 = fcn.00b95a64();\n                return uVar2 & 0xffffff00 | cVar1 != '\\0';\n            }\n        }\n    }\ncode_r0x00bf4faf:\n    return uVar2 & 0xffffff00;\n}\n",
        "token_count": 819
    },
    "00bf5217": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf5217(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    (*_sym.imp.WINMM.dll_timeGetTime)();\n    while( true ) {\n        if (*0xc562b8 == '\\0') {\n            return 0;\n        }\n        iVar2 = fcn.00bb0719();\n        if ((0xffffffff < iVar2) || ((-1 < iVar2 && (arg_8h[1] <= iVar2)))) break;\n        (*_sym.imp.KERNEL32.dll_Sleep)(10);\n    }\n    *0xc57514 = 0;\n    (*_sym.imp.USER32.dll_EnumThreadWindows)(*arg_8h, fcn.00bf51ca, 0);\n    if (*0xc57514 == 0) {\n        return 0;\n    }\n    *0xc562b7 = 1;\n    iVar1 = (*_sym.imp.USER32.dll_FindWindowExW)(*0xc57514, 0, L\"BUTTON\", 0);\n    if (iVar1 != 0) {\n        fcn.00bf387d();\n        (*_sym.imp.USER32.dll_SetActiveWindow)(*0xc57514);\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar1, 0xf5, 0, 0);\n        fcn.00bf387d();\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(*0xc57514, 0x10, 0, 0);\n    (*_sym.imp.KERNEL32.dll_Sleep)(0xfa);\n    iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*0xc57514);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_EndDialog)(*0xc57514, 0);\n    return 0;\n}\n",
        "token_count": 414
    },
    "00bf5569": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00bf5569(int16_t *param_1, char param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char16_t *pcVar3;\n    uint var_218h;\n    uint var_10h;\n    \n    fcn.00b977c7();\n    fcn.00b97d2c(L\"open \");\n    fcn.00b97a84(0x22);\n    fcn.00b97e0b(param_1);\n    fcn.00b97a84(0x22);\n    fcn.00b97e0b(L\" alias PlayMe\");\n    pcVar1 = _sym.imp.WINMM.dll_mciSendStringW;\n    (*_sym.imp.WINMM.dll_mciSendStringW)(L\"status PlayMe mode\", &var_218h, 0x100, 0);\n    if (var_218h != 0) {\n        (*pcVar1)(L\"close PlayMe\", 0, 0, 0);\n    }\n    if (*param_1 != 0) {\n        iVar2 = (*pcVar1)(var_10h, 0, 0, 0);\n        if (iVar2 == 0) {\n            if (param_2 == '\\0') {\n                pcVar3 = L\"play PlayMe\";\n            }\n            else {\n                (*pcVar1)(L\"play PlayMe wait\", 0, 0, 0);\n                pcVar3 = L\"close PlayMe\";\n            }\n            (*pcVar1)(pcVar3, 0, 0, 0);\n        }\n    }\n    fcn.00b95a64();\n    return;\n}\n",
        "token_count": 387
    },
    "00bf589f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00bf589f(uint arg_8h, int32_t arg_ch)\n\n{\n    ushort uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int16_t *in_ECX;\n    ushort *in_EDX;\n    int16_t *piVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_GetLocalTime)();\n    if ((*in_ECX != 0) && (uVar2 = fcn.00bb2e3c(in_ECX),  3 < uVar2)) {\n        if (arg_8h != '\\0') {\n            fcn.00bb42ee(&var_ch, in_ECX, 4);\n            var_4h._0_2_ = 0;\n            uVar1 = fcn.00bb37ca(&var_ch);\n            *in_EDX = uVar1;\n            piVar4 = in_ECX + arg_ch + 4;\n            uVar2 = fcn.00bb2e3c(piVar4);\n            in_ECX = piVar4;\n            if (1 < uVar2) {\n                fcn.00bb42ee(&var_ch, piVar4, 2);\n                var_8h._0_2_ = 0;\n                uVar1 = fcn.00bb37ca(&var_ch);\n                in_EDX[1] = uVar1;\n                in_ECX = piVar4 + arg_ch + 2;\n                uVar2 = fcn.00bb2e3c(in_ECX);\n                if (1 < uVar2) {\n                    fcn.00bb42ee(&var_ch, in_ECX, 2);\n                    var_8h._0_2_ = 0;\n                    uVar1 = fcn.00bb37ca(&var_ch);\n                    in_ECX = piVar4 + arg_ch + 4;\n                    in_EDX[3] = uVar1;\n                    iVar3 = fcn.00bb2e3c(in_ECX);\n                    if (iVar3 != 0) {\n                        in_ECX = in_ECX + arg_ch;\n                    }\n                }\n            }\n        }\n        uVar2 = fcn.00bb2e3c(in_ECX);\n        if (1 < uVar2) {\n            fcn.00bb42ee(&var_ch, in_ECX, 2);\n            var_8h._0_2_ = 0;\n            uVar1 = fcn.00bb37ca(&var_ch);\n            in_EDX[4] = uVar1;\n            piVar4 = in_ECX + arg_ch + 2;\n            uVar2 = fcn.00bb2e3c(piVar4);\n            if (1 < uVar2) {\n                fcn.00bb42ee(&var_ch, piVar4, 2);\n                var_8h._0_2_ = 0;\n                uVar1 = fcn.00bb37ca(&var_ch);\n                in_EDX[5] = uVar1;\n                uVar2 = fcn.00bb2e3c(piVar4 + arg_ch + 2);\n                if (1 < uVar2) {\n                    fcn.00bb42ee(&var_ch, piVar4 + arg_ch + 2, 2);\n                    var_8h._0_2_ = 0;\n                    uVar1 = fcn.00bb37ca(&var_ch);\n                    in_EDX[6] = uVar1;\n                    in_EDX[7] = 0;\n                }\n            }\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 825
    },
    "00bf5bd9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf5bd9(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_14h == 1) {\n        if (*0xc57280 == 0) {\n            return 0;\n        }\n        if (arg_ch == 0) {\n            return 0;\n        }\n        fcn.00be670d();\n    }\n    else if (arg_14h != 2) {\n        return 0;\n    }\n    fcn.00bf76a0(arg_8h, arg_ch, arg_10h);\n    return 1;\n}\n",
        "token_count": 146
    },
    "00bf5c28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00bf5c28(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (*0xc57280 != 0) {\n        arg_ch = &var_4h;\n        arg_8h_00 = arg_8h;\n        fcn.00be670d();\n        iVar1 = fcn.00b98bb2(arg_8h_00, arg_ch);\n        if (iVar1 != 0) {\n            return 0xffffffff;\n        }\n    }\n    iVar1 = fcn.00b98bb2(arg_8h, &var_4h);\n    return iVar1 != 0;\n}\n",
        "token_count": 178
    },
    "00bf5d6f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf5d6f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = *in_ECX[3];\n    if (1 < iVar1) {\n        *in_ECX[3] = iVar1 + -1;\n        fcn.00b98189();\n        in_ECX[2] = 8;\n        iVar1 = fcn.00bb0ff6(0x10);\n        *in_ECX = iVar1;\n    }\n    in_ECX[1] = 1;\n    **in_ECX = arg_8h;\n    *(*in_ECX + 2) = 0;\n    return;\n}\n",
        "token_count": 159
    },
    "00bf5e1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nint32_t __cdecl fcn.00bf5e1c(uint32_t arg_8h, uint lpsz, uint32_t cchLength)\n\n{\n    int16_t *piVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint32_t *in_ECX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t *var_8h;\n    uint32_t var_4h;\n    \n    fcn.00b97faf();\n    (*_sym.imp.USER32.dll_CharLowerBuffW)(lpsz, cchLength);\n    fcn.00bf64a2();\n    var_4h = 0;\n    if (cchLength == 0) {\n        iVar6 = 1;\n    }\n    else {\n        *in_ECX = 0;\n        iVar6 = 0;\n        while (var_ch = iVar6,  piVar1 = fcn.00b97b52(iVar6),  *piVar1 != 0) {\n            iVar7 = iVar6 + 1;\n            piVar1 = fcn.00b97b52(iVar6);\n            iVar6 = iVar7;\n            if (*piVar1 == 0x3b) {\n                *in_ECX = *in_ECX + 1;\n            }\n        }\n        if (1 < cchLength) {\n            var_ch = iVar6 + -1;\n            piVar1 = fcn.00b97b52(var_ch);\n            if (*piVar1 != 0x3b) {\n                *in_ECX = *in_ECX + 1;\n            }\n        }\n        uVar4 = *in_ECX;\n        uVar5 = -(uVar4 * 0x20 >> 0x20 != 0) | uVar4 * 0x20;\n        var_10h = -(0xfffffffb < uVar5) | uVar5 + 4;\n        var_14h = 0xbf5ebc;\n        puVar2 = fcn.00bb0ff6(var_10h);\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            *puVar2 = uVar4;\n            puVar2 = puVar2 + 1;\n            while (uVar4 = uVar4 - 1,  -1 < uVar4) {\n                var_10h = 0xbf5ed5;\n                var_8h = puVar2;\n                fcn.00bf5d58();\n                puVar2 = var_8h;\n            }\n        }\n        var_8h = 0xffffffff;\n        in_ECX[1] = puVar2;\n        var_10h = 0;\n        var_ch = 0;\n        var_14h = 8;\n        iVar6 = fcn.00bf5f79(0, &fcn.00bf5e1c::lpsz, &fcn.00bf5e1c::var_14h, &fcn.00bf5e1c::var_10h, \n                             &fcn.00bf5e1c::var_ch, 8, 0);\n        uVar4 = var_4h;\n        if (iVar6 == 0) {\n            in_ECX[3] = var_4h;\n            if (arg_8h == 0) {\n                puVar3 = fcn.00bb0ff6(4);\n                if (puVar3 == NULL) {\n                    puVar3 = NULL;\n                }\n                else {\n                    *puVar3 = 1;\n                }\n                in_ECX[4] = puVar3;\n                uVar4 = fcn.00bb0ff6(uVar4);\n                in_ECX[2] = uVar4;\n                fcn.00bb3020(uVar4, 0, in_ECX[3]);\n            }\n            else {\n                in_ECX[4] = 0;\n                in_ECX[2] = arg_8h;\n            }\n            iVar6 = 0;\n        }\n    }\n    fcn.00b95a64();\n    return iVar6;\n}\n",
        "token_count": 996
    },
    "00bf5f79": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00bf5f79(uint arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t **arg_14h, int32_t **arg_18h, int32_t *arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int16_t *piVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t *unaff_EBX;\n    int32_t *unaff_ESI;\n    int32_t *piVar8;\n    int32_t *arg_8h_00;\n    uchar *arg_8h_01;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    uint32_t arg_8h_02;\n    uint32_t extraout_var;\n    uint32_t *arg_8h_03;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack48;\n    uint uStack40;\n    \n    arg_8h_03 = NULL;\n    iStack76 = 0;\n    uStack68 = 0;\n    fcn.00b977c7();\n    uVar5 = extraout_var;\n    fcn.00b977c7();\n    fcn.00b977c7();\ncode_r0x00bf6353:\n    piVar9 = unaff_EBX;\n    if (*arg_14h < *(arg_ch + 4)) {\n        while( true ) {\n            piVar1 = fcn.00b97b20(*arg_14h);\n            if ((*piVar1 != 0x20) && (*piVar1 != 9)) break;\n            *arg_14h = *arg_14h + 1;\n        }\n        if (*arg_14h < *(arg_ch + 4)) {\n            arg_8h_02 = 0xc1f910;\n            fcn.00b97d2c(0xc1f910);\n            do {\n                piVar7 = *arg_14h;\n                puVar2 = fcn.00b97b20(piVar7);\n                iVar4 = fcn.00bb3846(*puVar2);\n                if (iVar4 == 0) {\n                    piVar10 = *arg_14h;\n                    piVar1 = fcn.00b97b20(piVar10);\n                    if (*piVar1 != 0x5f) goto code_r0x00bf6048;\n                }\n                piVar9 = *arg_14h;\n                *arg_14h = piVar9 + 1;\n                puVar2 = fcn.00b97b20(piVar9);\n                arg_8h_02 = *puVar2;\n                fcn.00b97a84(arg_8h_02);\n            } while( true );\n        }\n    }\ncode_r0x00bf635e:\n    if (arg_8h != '\\0') {\n        iVar3 = fcn.00bf5de5(*arg_1ch, *arg_20h, *arg_10h);\n        iVar4 = *arg_1ch;\n        piVar7 = *arg_18h;\n        if (piVar7 < unaff_ESI) {\n            iVar6 = piVar7 << 5;\n            do {\n                *(iVar6 + piVar9[1]) = *(iVar6 + piVar9[1]) + iVar3 + iVar4;\n                piVar10 = iVar6 + 0x1c + piVar9[1];\n                *piVar10 = *piVar10 + iVar3 + iVar4;\n                piVar7 = piVar7 + 1;\n                iVar6 = iVar6 + 0x20;\n            } while (piVar7 < unaff_ESI);\n        }\n        arg_8h_03 = *(unaff_ESI * 0x20 + -4 + piVar9[1]);\n    }\n    iVar4 = fcn.00bf5de5(arg_8h_03, *arg_20h, *arg_10h);\n    *arg_1ch = iVar4 + arg_8h_03;\n    iVar4 = 0;\n    *arg_18h = unaff_ESI;\ncode_r0x00bf63f6:\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return iVar4;\ncode_r0x00bf6048:\n    uStack64 = 0;\n    fcn.00b97d2c(0xc1f910);\n    while( true ) {\n        unaff_ESI = *arg_14h;\n        piVar1 = fcn.00b97b20(unaff_ESI);\n        if ((*piVar1 != 0x20) && (*piVar1 != 9)) break;\n        *arg_14h = *arg_14h + 1;\n    }\n    piVar1 = fcn.00b97b20(*arg_14h);\n    if (*piVar1 != 0x5b) {\n        while( true ) {\n            puVar2 = fcn.00b97b20(0xbf6099);\n            iVar4 = fcn.00bb3846(*puVar2);\n            if ((iVar4 == 0) && (piVar1 = fcn.00b97b20(*arg_14h),  *piVar1 != 0x5f)) break;\n            piVar9 = *arg_14h;\n            *arg_14h = piVar9 + 1;\n            puVar2 = fcn.00b97b20(piVar9);\n            fcn.00b97a84(*puVar2);\n        }\n    }\n    iVar4 = 0x20;\n    while( true ) {\n        piVar1 = fcn.00b97b20(*arg_14h);\n        if ((*piVar1 != 0x20) && (*piVar1 != 9)) break;\n        *arg_14h = *arg_14h + 1;\n    }\n    piVar8 = *arg_14h;\n    piVar1 = fcn.00b97b20(piVar8);\n    piVar9 = piVar10;\n    if (*piVar1 == 0x5b) {\n        *arg_14h = *arg_14h + 1;\n        fcn.00b97d2c(0xc1f910);\n        while( true ) {\n            puVar2 = fcn.00b97b20(0xbf6123);\n            iVar3 = fcn.00bb386c(*puVar2);\n            if (iVar3 == 0) break;\n            piVar8 = *arg_14h;\n            *arg_14h = piVar8 + 1;\n            puVar2 = fcn.00b97b20(piVar8);\n            fcn.00b97a84(*puVar2);\n        }\n        iVar3 = fcn.00bb37ca(uStack48);\n        if (iVar3 < 1) goto code_r0x00bf63c0;\n        piVar8 = *arg_14h;\n        piVar1 = fcn.00b97b20(piVar8);\n        if (*piVar1 != 0x5d) goto code_r0x00bf63c0;\n        *arg_14h = *arg_14h + 1;\n    }\n    arg_8h_00 = *arg_14h;\n    piVar1 = fcn.00b97b20(arg_8h_00);\n    if (*piVar1 == 0x3b) {\n        *arg_14h = *arg_14h + 1;\n    }\n    else if (*arg_14h < *(arg_ch + 4)) {\n        iVar4 = 1;\n        goto code_r0x00bf63f6;\n    }\n    iStack76 = 0;\n    arg_8h_03 = 0xc53e28;\n    do {\n        if (iStack76 != 0) goto code_r0x00bf6207;\n        iVar3 = fcn.00bb378c(arg_8h_03 + -6, uStack40);\n        if (iVar3 == 0) {\n            uVar5 = *arg_8h_03;\n            if (((uVar5 & 0x31) != 0) && (0 < arg_8h_02)) {\n                uVar5 = uVar5 | 4;\n            }\n            piVar7 = arg_8h_03[-1];\n            iStack76 = 1;\n        }\n        arg_8h_03 = arg_8h_03 + 7;\n    } while (arg_8h_03 < 0xc541a8);\n    if (iStack76 != 0) {\ncode_r0x00bf6207:\n        if (uVar5 == 0x100) {\n            *piVar10 = *piVar10 + -1;\n            if (piVar7 == NULL) goto code_r0x00bf635e;\n            iStack76 = 0;\n            iVar3 = 1;\n            iVar4 = fcn.00bf5f79(1, arg_ch, arg_10h, arg_14h, &stack0xffffff98, &stack0xffffffa0, &stack0xffffffb4);\n            if (iVar4 != 0) goto code_r0x00bf63f6;\n            unaff_EBX = piVar9;\n            if (*arg_20h < iVar3) {\n                *arg_20h = iVar3;\n            }\n        }\n        else if (uVar5 == 0x80) {\n            iVar4 = fcn.00bb37ca(uStack72);\n            *arg_10h = iVar4;\n            if (iVar4 == 0) {\n                *arg_10h = 8;\n            }\n            else if ((((iVar4 != 1) && (iVar4 != 2)) && (iVar4 != 4)) && ((iVar4 != 8 && (iVar4 != 0x10)))) {\n                iVar4 = 2;\n                goto code_r0x00bf63f6;\n            }\n            *piVar10 = *piVar10 + -1;\n            unaff_EBX = piVar9;\n        }\n        else {\n            unaff_EBX = piVar9;\n            iVar6 = fcn.00bf5de5(piVar9, piVar7, *arg_10h);\n            iVar6 = piVar9 + iVar6;\n            *(piVar8 * 0x20 + *(iVar4 + 4)) = iVar6;\n            *(piVar8 * 0x20 + 4 + *(iVar4 + 4)) = arg_8h_00;\n            *(piVar8 * 0x20 + 8 + *(iVar4 + 4)) = unaff_EBX;\n            arg_8h_01 = &stack0xffffffac;\n            iVar3 = iVar4;\n            fcn.00b981a7(arg_8h_01);\n            *(arg_8h_01 * 0x20 + 0x1c + *(iVar4 + 4)) = iVar3 + arg_8h_01 * iVar6;\n            if (*arg_20h < iVar6) {\n                *arg_20h = iVar6;\n            }\n        }\n        goto code_r0x00bf6353;\n    }\ncode_r0x00bf63c0:\n    fcn.00bf64a2();\n    iVar4 = 2;\n    goto code_r0x00bf63f6;\n}\n",
        "token_count": 2604
    },
    "00bf641c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00bf641c(int32_t arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    uint arg_ch_00;\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (*(arg_8h + 0xc) == 4) {\n        *arg_ch = 0;\n        if (0 < *in_ECX) {\n            do {\n                arg_ch_00 = *(*arg_ch * 0x20 + 0xc + in_ECX[1]);\n                fcn.00b99997();\n                iVar1 = fcn.00bb313d(**(arg_8h + 8), arg_ch_00);\n                if (iVar1 == 0) break;\n                *arg_ch = *arg_ch + 1;\n            } while (*arg_ch < *in_ECX);\n        }\n    }\n    else {\n        iVar1 = fcn.00b99c9c();\n        *arg_ch = iVar1;\n    }\n    iVar1 = *arg_ch;\n    if ((iVar1 < *in_ECX) && (-1 < iVar1)) {\n        iVar1 = *(iVar1 * 0x20 + in_ECX[1]) + in_ECX[2];\n    }\n    else {\n        *arg_10h = 2;\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 308
    },
    "00bf69a9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00bf69a9(uint32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint32_t uStackY68;\n    int32_t var_1ch;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    \n    cVar3 = fcn.00b99399();\n    piVar5 = arg_10h;\n    uVar6 = uStackY68;\n    if (cVar3 == '\\0') {\n        if (*(arg_ch + 8) == 0) {\n            iVar4 = *(in_ECX + 8);\n            fcn.00b99a20();\n            *piVar5 = iVar4;\n            piVar5[3] = 7;\n            uVar6 = 0;\n        }\n        else if (*(arg_ch + 8) == 1) {\n            puVar1 = arg_ch + 4;\n            uVar6 = 0;\n            arg_ch = 0;\n            arg_8h = 0;\n            var_14h = 0;\n            fcn.00b99ac0(**puVar1);\n            if (var_10h != 4) {\n                var_1ch = fcn.00b99c9c();\n                var_1ch = var_1ch + -1;\n                fcn.00b99a20();\n                var_10h = 1;\n            }\n            arg_ch = fcn.00bf641c(&var_1ch, &arg_ch, &arg_8h);\n            piVar5 = arg_10h;\n            if (arg_ch == 0) {\n                fcn.00b99a20();\n                *piVar5 = 0;\n                piVar5[3] = 1;\n                uVar6 = arg_8h;\n            }\n            else {\n                fcn.00b99a20();\n                piVar5[3] = 7;\n                *piVar5 = arg_ch;\n            }\n            fcn.00b99a20();\n        }\n        goto code_r0x00bf6b7a;\n    }\n    if ((arg_8h & 3) == 0) {\n        uVar6 = 2;\n        if ((arg_8h & 0xc) == 0) goto code_r0x00bf6b7a;\n        iVar4 = -1;\n        uVar2 = *(arg_ch + 8);\n        if (2 < uVar2) {\n            fcn.00b99a20();\n            *piVar5 = 0;\n            piVar5[3] = 1;\n            goto code_r0x00bf6b7a;\n        }\n        if ((uVar2 == 2) && (cVar3 = fcn.00b99dae(0x29),  cVar3 == '\\0')) {\n            iVar4 = fcn.00b99c9c();\n            piVar5 = arg_10h;\n            iVar4 = iVar4 + -1;\n            if (iVar4 < 0) {\n                fcn.00b99a20();\n                piVar5[3] = 1;\ncode_r0x00bf6aeb:\n                *piVar5 = 0;\n                uVar6 = uStackY68;\n                goto code_r0x00bf6b7a;\n            }\n        }\n        uVar6 = fcn.00bf64ff(&arg_14h, *(*(arg_ch + 4) + -4 + uVar2 * 4), arg_10h, 1, iVar4);\n    }\n    else {\n        iVar4 = -1;\n        if (1 < *(arg_ch + 8)) {\n            fcn.00b99a20();\n            *piVar5 = 0;\n            piVar5[3] = 1;\n            goto code_r0x00bf6b7a;\n        }\n        if (*(arg_ch + 8) == 1) {\n            arg_8h = **(arg_ch + 4);\n            cVar3 = fcn.00b99dae(0x29);\n            if (cVar3 == '\\0') {\n                iVar4 = fcn.00b99c9c();\n                piVar5 = arg_10h;\n                iVar4 = iVar4 + -1;\n                if (iVar4 < 0) {\n                    fcn.00b99a20();\n                    piVar5[3] = 1;\n                    goto code_r0x00bf6aeb;\n                }\n            }\n        }\n        uVar6 = fcn.00bf64e3(&arg_14h, arg_10h, iVar4);\n    }\ncode_r0x00bf6b7a:\n    fcn.00b99a20();\n    return uVar6;\n}\n",
        "token_count": 1124
    },
    "00bf6df7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf6df7(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x14);\n    uVar1 = *(in_ECX + 0xc);\n    if (arg_ch != '\\0') {\n        fcn.00bf794e(*(in_ECX + 0xc));\n        uVar2 = fcn.00bf899f(*(in_ECX + 8), *(in_ECX + 0xc));\n        fcn.00bb1080(uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x14);\n    return uVar1;\n}\n",
        "token_count": 178
    },
    "00bf6ed7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf6ed7(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*param_1);\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00bf71d7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf71d7(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint8_t *in_ECX;\n    \n    if ((*in_ECX & 8) == 0) {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 == 0) {\n            if (arg_ch != '\\0') {\n                fcn.00b99bf8(0xc1f910);\n            }\n            return 0;\n        }\n    }\n    else {\n        iVar3 = *(in_ECX + 0x20);\n        if (iVar3 == 0) {\n            if (arg_ch != '\\0') {\n                fcn.00b99bf8(0xc1f910);\n            }\n            return 0;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar3 + 0x14);\n    uVar1 = *(iVar3 + 0xc);\n    if (arg_ch != '\\0') {\n        fcn.00bf794e(*(iVar3 + 0xc));\n        uVar2 = fcn.00bf899f(*(iVar3 + 8), *(iVar3 + 0xc));\n        fcn.00bb1080(uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar3 + 0x14);\n    return uVar1;\n}\n",
        "token_count": 320
    },
    "00bf7277": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf7277(int32_t lpBuffer, int32_t nNumberOfBytesToWrite)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint lpNumberOfBytesWritten;\n    \n    lpNumberOfBytesWritten = 0;\n    cVar1 = fcn.00bf72d1();\n    if ((((cVar1 != '\\0') && (lpBuffer != 0)) && (nNumberOfBytesToWrite != 0)) &&\n       (iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                          (*(extraout_ECX + 0x18), lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0), \n       iVar2 == 0)) {\n        fcn.00bf6ed7();\n    }\n    return lpNumberOfBytesWritten;\n}\n",
        "token_count": 185
    },
    "00bf7368": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00bf7368(int32_t param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t lpNumberOfBytesRead;\n    \n    (*_sym.imp.KERNEL32.dll_InterlockedExchange)(param_1 + 0x34, 0x1f5);\n    uVar1 = fcn.00bb0ff6(0xffff);\n    *(param_1 + 0x10) = 0xffff;\n    uVar2 = fcn.00bb0ff6(0xffff);\n    *(param_1 + 8) = uVar2;\n    iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)(*(param_1 + 0x2c), uVar1, 0xffff, &lpNumberOfBytesRead, 0);\n    while ((iVar3 != 0 && (lpNumberOfBytesRead != 0))) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 0x14);\n        if (*(param_1 + 0x10) < *(param_1 + 0xc) + lpNumberOfBytesRead) {\n            uVar2 = *(param_1 + 8);\n            uVar4 = fcn.00bcb606();\n            *(param_1 + 0x10) = uVar4;\n            uVar4 = fcn.00bb0ff6(uVar4);\n            *(param_1 + 8) = uVar4;\n            fcn.00bb1080(*(param_1 + 8), uVar2, *(param_1 + 0xc));\n            fcn.00bb106c(uVar2);\n        }\n        fcn.00bb1080(*(param_1 + 0xc) + *(param_1 + 8), uVar1, lpNumberOfBytesRead);\n        *(param_1 + 0xc) = *(param_1 + 0xc) + lpNumberOfBytesRead;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 0x14);\n        iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)(*(param_1 + 0x2c), uVar1, 0xffff, &lpNumberOfBytesRead, 0);\n    }\n    fcn.00bb106c(uVar1);\n    (*_sym.imp.KERNEL32.dll_InterlockedExchange)(param_1 + 0x34, 0x1f6);\n    return 0x1f6;\n}\n",
        "token_count": 573
    },
    "00bf74d2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf74d2(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0x30;\n    if (*piVar1 != 0) {\n        puVar2 = param_1 + 0x34;\n        iVar3 = (*_sym.imp.KERNEL32.dll_InterlockedExchange)(puVar2, *puVar2);\n        if (iVar3 != 0x1f6) {\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 0x14);\n            (*_sym.imp.KERNEL32.dll_TerminateThread)(*piVar1, 0x1f6);\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*piVar1, 1000);\n            fcn.00bf6ed7();\n            (*_sym.imp.KERNEL32.dll_InterlockedExchange)(puVar2, 0x1f6);\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 0x14);\n        }\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "00bf7534": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf7534(uint8_t *param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    int32_t iStack8;\n    \n    if (((*(param_1 + 0x20) == 0) && ((*param_1 & 2) != 0)) && (*(param_1 + 8) != 0)) {\n        iStack8 = 0xbf754e;\n        uVar1 = fcn.00bf6dda();\n        *(param_1 + 0x20) = uVar1;\n        iStack8 = 0xbf7558;\n        fcn.00bf74a9();\n    }\n    if (((*(param_1 + 0x24) == 0) && ((*param_1 & 4) != 0)) && ((*(param_1 + 0x10) != 0 && ((*param_1 & 8) == 0)))) {\n        iStack8 = 0xbf7574;\n        iVar2 = fcn.00bf6dda();\n        *(param_1 + 0x24) = iVar2;\n        if (*(iVar2 + 0x30) == 0) {\n            iStack8 = iVar2;\n            uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00bf748f, iVar2, 0, &stack0xfffffff8, unaff_ESI);\n            *(iVar2 + 0x30) = uVar1;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 350
    },
    "00bf7804": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf7804(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    \n    fcn.00b99a20();\n    if (arg_8h != 0) {\n        cVar1 = fcn.00bf7fa4(arg_8h);\n        if (cVar1 != '\\x01') {\n            cVar1 = fcn.00bf7c1a(arg_8h);\n            if (cVar1 != '\\x01') {\n                in_ECX[3] = 8;\n                uVar2 = fcn.00bb0ff6(0x10);\n                *in_ECX = uVar2;\n                (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar2);\n                iVar3 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(*in_ECX, arg_8h);\n                if (iVar3 < 0) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*in_ECX);\n                    fcn.00bb106c(*in_ECX);\n                    *in_ECX = 0;\n                    fcn.00b99a20();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 286
    },
    "00bf7fa4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00bf7fa4(uint *arg_8h)\n\n{\n    float fVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    double *in_ECX;\n    uint uVar5;\n    uint uVar6;\n    char16_t *arg_10h;\n    uint in_stack_ffffff30;\n    ulong in_stack_ffffff34;\n    uint *puVar7;\n    uint var_ach;\n    uint var_8ch;\n    uint var_84h;\n    uint var_74h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_54h;\n    uint cIn;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint pdateOut;\n    uint wVerMinor;\n    uint var_20h;\n    uint32_t pvargDest;\n    uint pbstr;\n    uint var_10h;\n    double dStack16;\n    \n    uVar3 = *arg_8h;\n    if (0x24 < uVar3) {\n        if (0x15 < uVar3 - 0x4002) {\ncode_r0x00bf82fe:\n            return 0;\n        }\n    // switch table (22 cases) at 0xbf84b4\n        switch(*((uVar3 - 0x4002) * 4 + 0xbf84b4)) {\n        case 0xbf82fc:\n            goto code_r0x00bf82fe;\n        case 0xbf8318:\n            if (arg_8h[2] == 0) {\n                return 1;\n            }\n            *(in_ECX + 0xc) = 8;\n            uVar5 = fcn.00bb0ff6(0x10);\n            *in_ECX = uVar5;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar5);\n            **in_ECX = 9;\n            *(*in_ECX + 8) = *arg_8h[2];\n            if (*(*in_ECX + 8) == NULL) {\n                return 1;\n            }\n            (**(**(*in_ECX + 8) + 4))();\n            return 1;\n        case 0xbf8364:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            uVar3 = *arg_8h[2];\n            break;\n        case 0xbf8377:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            uVar3 = *arg_8h[2];\n            break;\n        case 0xbf838a:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            uVar3 = *arg_8h[2];\n            break;\n        case 0xbf839d:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            uVar3 = *arg_8h[2];\n            break;\n        case 0xbf83b0:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            uVar3 = *arg_8h[2];\n            break;\n        case 0xbf83c2:\n            puVar7 = arg_8h[2];\n            if (puVar7 == NULL) {\n                return 1;\n            }\n            uVar5 = *puVar7;\n            uVar6 = puVar7[1];\ncode_r0x00bf8047:\n            fcn.00b99a20();\n            *(in_ECX + 0xc) = 2;\n            *in_ECX = uVar5;\n            *(in_ECX + 4) = uVar6;\n            return 1;\n        case 0xbf83d7:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            fVar1 = *arg_8h[2];\n            goto code_r0x00bf805d;\n        case 0xbf83e9:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            fVar1 = *arg_8h[2];\n            goto code_r0x00bf805d;\n        case 0xbf83fb:\n            uVar5 = 0;\n            if ((arg_8h[2] == NULL) || (*arg_8h[2] == 0)) {\ncode_r0x00bf80a8:\n                uVar5 = 0;\n                iVar4 = fcn.00bb0ff6(0x10);\n                if (iVar4 != 0) {\n                    uVar5 = fcn.00b977c7();\n                }\n                goto code_r0x00bf80bb;\n            }\n            iVar4 = fcn.00bb0ff6(0x10);\n            if (iVar4 == 0) goto code_r0x00bf80bb;\n            uVar5 = *arg_8h[2];\ncode_r0x00bf809f:\n            uVar5 = fcn.00b97f41(uVar5);\ncode_r0x00bf80bb:\n            *(in_ECX + 1) = uVar5;\n            *(in_ECX + 0xc) = 4;\n            return 1;\n        case 0xbf8429:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            iVar2 = *arg_8h[2];\ncode_r0x00bf80cf:\n            arg_8h = arg_8h & 0xffffff00 | iVar2 != 0;\n            fcn.00b99863(arg_8h);\n            return 1;\n        case 0xbf843d:\n            if (arg_8h[2] == 0) {\n                return 1;\n            }\n            fcn.00bf7804(arg_8h[2]);\n            return 1;\n        }\n        goto code_r0x00bf801a;\n    }\n    if (uVar3 == 0x24) {\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n        uVar5 = 0;\n        pbstr = 0;\n        var_10h = 0;\n        (**(*arg_8h[3] + 0x2c))(arg_8h[3], 0, 0, &pvargDest, 0);\n        if ((pvargDest & 0x8000) == 0) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n            return 0;\n        }\n        uVar3 = pvargDest & 0xfff;\n        if (uVar3 == 0xc) {\n            *(in_ECX + 0xc) = 0xc;\n            iVar4 = fcn.00bb0ff6(0x14);\n            if (iVar4 != 0) {\n                uVar5 = fcn.00bf5c77(pbstr);\n            }\n        }\n        else {\n            if (uVar3 == 0xd) {\n                *(in_ECX + 0xc) = 0xd;\n                iVar4 = fcn.00bb0ff6(0x14);\n                if (iVar4 == 0) {\n                    iVar4 = 0;\n                }\n                else {\n                    fcn.00b977c7();\n                }\n                *in_ECX = iVar4;\n                *(iVar4 + 0x10) = pbstr;\n                goto code_r0x00bf82dc;\n            }\n            if (uVar3 == 0xe) {\n                *(in_ECX + 0xc) = 0xe;\n                iVar4 = fcn.00bb0ff6(0x14);\n                if (iVar4 == 0) {\n                    iVar4 = 0;\n                }\n                else {\n                    fcn.00b977c7();\n                }\n                *in_ECX = iVar4;\n                fcn.00b97d2c(pbstr);\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                goto code_r0x00bf82dc;\n            }\n            *(in_ECX + 0xc) = 0xf;\n            iVar4 = fcn.00bb0ff6(0x18);\n            if (iVar4 != 0) {\n                uVar5 = fcn.00bf1a84(pbstr);\n            }\n        }\n        *in_ECX = uVar5;\ncode_r0x00bf82dc:\n        pvargDest = CONCAT22(pvargDest._2_2_, 0x1a);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n        return 1;\n    }\n    if (0x17 < uVar3) {\n        return 0;\n    }\n    // switch table (24 cases) at 0xbf8454\n    switch(*(uVar3 * 4 + 0xbf8454)) {\n    case 0xbf7fd7:\n        *(in_ECX + 0xc) = 8;\n        uVar5 = fcn.00bb0ff6(0x10);\n        *in_ECX = uVar5;\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar5);\n        iVar4 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(*in_ECX, arg_8h);\n        if (-1 < iVar4) {\n            return 1;\n        }\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*in_ECX);\n        fcn.00bb106c(*in_ECX);\n        *in_ECX = 0;\n        return 1;\n    case 0xbf8016:\n        uVar3 = *(arg_8h + 2);\n        break;\n    case 0xbf802a:\n        uVar3 = *(arg_8h + 2);\n        break;\n    case 0xbf8030:\n        uVar3 = *(arg_8h + 2);\n        break;\n    case 0xbf8036:\n        uVar3 = *(arg_8h + 2);\n        break;\n    case 0xbf803c:\n        uVar3 = arg_8h[2];\n        break;\n    case 0xbf8041:\n        uVar5 = arg_8h[2];\n        uVar6 = arg_8h[3];\n        goto code_r0x00bf8047;\n    case 0xbf805a:\n        fVar1 = arg_8h[2];\n        goto code_r0x00bf805d;\n    case 0xbf8073:\n        fVar1 = *(arg_8h + 2);\n        goto code_r0x00bf805d;\n    case 0xbf8078:\n        fVar1 = *(arg_8h + 2) / *0xc4bac0;\n        goto code_r0x00bf805d;\n    case 0xbf8089:\n        uVar5 = 0;\n        if (arg_8h[2] == 0) goto code_r0x00bf80a8;\n        iVar4 = fcn.00bb0ff6(0x10);\n        if (iVar4 == 0) goto code_r0x00bf80bb;\n        uVar5 = arg_8h[2];\n        goto code_r0x00bf809f;\n    case 0xbf80ca:\n        iVar2 = *(arg_8h + 2);\n        goto code_r0x00bf80cf;\n    case 0xbf80e0:\n        (*_sym.imp.OLEAUT32.dll_UnRegisterTypeLib)(*(arg_8h + 2), &wVerMinor);\n        fcn.00bb38d8(&var_ach, L\"%4d%02d%02d%02d%02d%02d\", wVerMinor);\n        puVar7 = &var_ach;\ncode_r0x00bf812d:\n        fcn.00b99bf8(puVar7);\n        return 1;\n    case 0xbf8137:\n        cIn = *arg_8h;\n        uStack68 = arg_8h[1];\n        uStack64 = arg_8h[2];\n        uStack60 = arg_8h[3];\n        (*_sym.imp.OLEAUT32.dll_VarDateFromI1)();\n        fVar1 = _pdateOut;\ncode_r0x00bf805d:\n        dStack16 = fVar1;\n        fcn.00b99a20();\n        *in_ECX = dStack16;\n        *(in_ECX + 0xc) = 3;\n        return 1;\n    case 0xbf8158:\n        puVar7 = 0xc1f910;\n        goto code_r0x00bf812d;\n    case 0xbf815f:\n        uVar5 = 0xc1f910;\n        fcn.00b97f41(0xc1f910);\n        fcn.00bf6bbd(0x2a, 0, uVar5, in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff34 >> 0x20);\n        fcn.00bf77cf(&var_8ch);\n        goto code_r0x00bf8191;\n    case 0xbf819b:\n        if (arg_8h[2] == -0x7ffdfffc) {\n            arg_10h = L\"Default\";\n            fcn.00b97f41(L\"Default\");\n            fcn.00bf6bbd(0x29, 0, arg_10h, in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff34 >> 0x20);\n            fcn.00bf77cf(&var_5ch);\n        }\n        else {\n            uVar5 = 0xc1f910;\n            fcn.00b97f41(0xc1f910);\n            fcn.00bf6bbd(0x2a, 0, uVar5, in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff34 >> 0x20);\n            fcn.00bf77cf(&var_74h);\n        }\ncode_r0x00bf8191:\n        fcn.00b95a64();\n        return 1;\n    case 0xbf82fc:\n        goto code_r0x00bf82fe;\n    }\ncode_r0x00bf801a:\n    fcn.00b99a20();\n    *(in_ECX + 0xc) = 1;\n    *in_ECX = uVar3;\n    return 1;\n}\n",
        "token_count": 3248
    },
    "00bf88e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00bf88e5(double *param_1)\n\n{\n    uint32_t uVar1;\n    double dVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if (*(param_1 + 0xc) == 3) {\n        uVar1 = fcn.00bb5048(SUB84(*param_1, 0), *param_1 >> 0x20);\n        if ((uVar1 & 0x1f8) == 0) {\n            return uVar1;\n        }\n        dVar2 = fcn.00bcb606();\n        if (*param_1 != dVar2) {\n            return uVar1;\n        }\n    }\n    else if (*(param_1 + 0xc) == 1) {\n        dVar2 = *param_1;\n    }\n    else {\n        if (*(param_1 + 0xc) != 2) {\n            return 0;\n        }\n        dVar2 = *param_1;\n    }\n    if (dVar2 == 0.0) {\n        uVar1 = uVar1 | 0x40000;\n    }\n    else {\n        if ((dVar2 & 1) == 0) {\n            uVar1 = uVar1 | 0x200000;\n        }\n        else {\n            uVar1 = uVar1 | 0x100000;\n        }\n        if ((dVar2 < 0x100000000) && (dVar2 < 0)) {\n            uVar1 = uVar1 | 0x10000;\n        }\n        else {\n            uVar1 = uVar1 | 0x20000;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 391
    },
    "00bf8b13": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop",
            "generate random numbers using a Mersenne Twister"
        ],
        "decompiled_code": "\nvoid fcn.00bf8b13(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    \n    if (*0xc57518 == 0) {\n        fcn.00bb543a(0);\n        fcn.00bf8ad6();\n    }\n    *0xc54190 = 0x270;\n    iVar3 = 0xe3;\n    *0xc57ef0 = 0xc57530;\n    puVar2 = 0xc57530;\n    do {\n        puVar1 = puVar2 + 1;\n        *puVar2 = ((*puVar2 ^ *puVar1) & 0x7ffffffe ^ *puVar2) >> 1 ^ puVar2[0x18d] ^ -((*puVar1 & 1) != 0) & 0x9908b0df\n        ;\n        iVar3 = iVar3 + -1;\n        puVar2 = puVar1;\n    } while (iVar3 != 0);\n    iVar3 = 0x18c;\n    do {\n        puVar2 = puVar1;\n        puVar1 = puVar2 + 1;\n        *puVar2 = ((*puVar2 ^ *puVar1) & 0x7ffffffe ^ *puVar2) >> 1 ^ puVar2[-0xe3] ^ -((*puVar1 & 1) != 0) & 0x9908b0df\n        ;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *puVar1 = ((*puVar1 ^ *0xc57530) & 0x7ffffffe ^ *puVar1) >> 1 ^ puVar2[-0xe2] ^ -((*0xc57530 & 1) != 0) & 0x9908b0df\n    ;\n    return;\n}\n",
        "token_count": 426
    },
    "00bf8eb5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00bf8eb5(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(param_1 + 0x10);\n    do {\n        if (uVar1 <= *(param_1 + 0x438)) {\n            fcn.00bf91bf();\n            return 0;\n        }\n        iVar3 = fcn.00bf8c8f(1);\n        if (iVar3 == 1) {\n            uVar2 = fcn.00bf8c8f(8);\n            *((*(param_1 + 0x438) & 0x1ffff) + *(param_1 + 0x434)) = uVar2;\n            *(param_1 + 0x438) = *(param_1 + 0x438) + 1;\n            *(param_1 + 0x43c) = *(param_1 + 0x43c) + 1;\n        }\n        else {\n            iVar4 = fcn.00bf8c8f(0xf);\n            iVar3 = fcn.00bf8d2b();\n            uVar6 = *(param_1 + 0x438) - iVar4;\n            for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n                uVar5 = uVar6 & 0x1ffff;\n                uVar6 = uVar6 + 1;\n                *((*(param_1 + 0x438) & 0x1ffff) + *(param_1 + 0x434)) = *(uVar5 + *(param_1 + 0x434));\n                *(param_1 + 0x438) = *(param_1 + 0x438) + 1;\n                *(param_1 + 0x43c) = *(param_1 + 0x43c) + 1;\n            }\n        }\n        fcn.00bf909c();\n        fcn.00bf8fcf();\n    } while (*(param_1 + 0x444) == '\\0');\n    return 4;\n}\n",
        "token_count": 510
    },
    "00bf901b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00bf901b(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t in_ECX;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = in_ECX;\n    if (*(in_ECX + 0x14) == 1) {\n        fcn.00bb1080(&var_8h, *(in_ECX + 0xc) + *(in_ECX + 4), 8);\n    }\n    else {\n        fcn.00bb5812(&var_8h, 1, 8, *(in_ECX + 0x1c));\n    }\n    *(in_ECX + 0xc) = *(in_ECX + 0xc) + 8;\n    var_4h = var_4h & 0xffffff00;\n    *arg_8h = CONCAT31(CONCAT21(CONCAT11(var_4h, var_4h._1_1_), var_4h._2_1_), var_4h._3_1_);\n    iVar1 = fcn.00bb58c0(&var_8h, \"EA06\");\n    return iVar1 != 0;\n}\n",
        "token_count": 279
    },
    "00bf909c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf909c(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_1[0x110];\n    if (param_1[6] == 1) {\n        if (uVar1 < param_1[0x10e]) {\n            do {\n                *(*param_1 + param_1[2]) = *((param_1[0x110] & 0x1ffffU) + param_1[0x10d]);\n                param_1[2] = param_1[2] + 1;\n                param_1[0x110] = param_1[0x110] + 1;\n            } while (param_1[0x110] < param_1[0x10e]);\n        }\n    }\n    else {\n        while (uVar1 < param_1[0x10e]) {\n            fcn.00bf9172(*((param_1[0x110] & 0x1ffffU) + param_1[0x10d]));\n            param_1[0x110] = param_1[0x110] + 1;\n            uVar1 = param_1[0x110];\n            param_1[2] = param_1[2] + 1;\n        }\n    }\n    param_1[0x10f] = 0;\n    return;\n}\n",
        "token_count": 313
    },
    "00bf93df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_5h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00bf93df(uint arg_8h, uint *lpNewFileName)\n\n{\n    uint8_t uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t arg_10h;\n    uint *extraout_ECX;\n    uint *puVar3;\n    uint unaff_ESI;\n    int32_t iVar4;\n    uint *puVar5;\n    uint32_t unaff_EDI;\n    uint var_11b4h;\n    uint var_fach;\n    uint var_da4h;\n    uint var_b9ch;\n    uint var_994h;\n    uint var_78ch;\n    uint lpExistingFileName;\n    uint var_4ach;\n    uint var_4a8h;\n    uint var_4a4h;\n    uint var_4a0h;\n    uint var_49ch;\n    uint var_498h;\n    uint var_494h;\n    uint var_490h;\n    uint var_48ch;\n    uint var_488h;\n    uint var_280h;\n    uint uStackY200;\n    uint in_stack_ffffff4c;\n    uint var_5ch;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint32_t var_20h;\n    uint *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_ch;\n    uchar auStack12 [3];\n    uint var_5h;\n    \n    stack0xfffffff8 = 0xbf93ec;\n    fcn.00bc1b90();\n    var_4ach = 0;\n    var_4a8h = 0;\n    var_4a4h = 0;\n    var_4a0h = 0;\n    var_49ch = 0;\n    var_498h = 0;\n    var_494h = 0;\n    var_490h = 0;\n    var_48ch = 0;\n    var_488h._0_2_ = 0;\n    var_280h._0_2_ = 0;\n    var_14h = 0xbf9449;\n    var_ch = unaff_EDI;\n    _auStack12 = unaff_ESI;\n    arg_8h_00 = fcn.00bb0ff6(0x10000);\n    var_14h = 0xbf9453;\n    fcn.00b9538e(arg_8h_00);\n    var_14h = 0xbf945e;\n    fcn.00bf91e9();\n    var_14h = 0;\n    var_18h = extraout_ECX[1];\n    var_1ch = 0x1;\n    var_20h = 0xbf9471;\n    fcn.00b95045(1, var_18h, 0);\n    var_20h = 0xc49e18;\n    var_24h = arg_8h;\n    var_28h = 0xbf947e;\n    iVar2 = fcn.00bb378c(arg_8h, 0xc49e18);\n    var_24h = &fcn.00bf93df::var_da4h;\n    var_28h = arg_8h;\n    if (iVar2 == 0) {\n        var_2ch = 0xbf949a;\n        iVar2 = fcn.00bf99be(arg_8h, var_24h);\n        if (iVar2 == 0) {\n            var_2ch = &fcn.00bf93df::var_b9ch;\n            var_30h = &fcn.00bf93df::var_11b4h;\n            var_34h = &fcn.00bf93df::var_fach;\n            var_38h = &fcn.00bf93df::var_28h;\n            var_3ch = lpNewFileName;\n            var_40h = 0xbf94c3;\n            fcn.00bb432e(lpNewFileName, var_38h, var_34h, var_30h, var_2ch);\n            var_2ch = &fcn.00bf93df::var_28h;\n            var_30h = &fcn.00bf93df::var_994h;\n            var_34h = 0xbf94d6;\n            fcn.00bb2ffc(var_30h, var_2ch);\n            var_34h = &fcn.00bf93df::var_fach;\n            var_38h = &fcn.00bf93df::var_994h;\n            var_3ch = 0xbf94e9;\n            fcn.00bb2fcd(var_38h, var_34h);\n            var_3ch = &fcn.00bf93df::var_b9ch;\n            var_40h = &fcn.00bf93df::var_11b4h;\n            var_44h = &fcn.00bf93df::var_fach;\n            fcn.00bb432e(&fcn.00bf93df::var_da4h, &fcn.00bf93df::var_28h, var_44h, var_40h, var_3ch);\n            var_2ch = &fcn.00bf93df::var_11b4h;\n            var_30h = &fcn.00bf93df::var_994h;\n            var_34h = 0xbf9524;\n            fcn.00bb2fcd(var_30h, var_2ch);\n            var_34h = &fcn.00bf93df::var_b9ch;\n            var_38h = &fcn.00bf93df::var_994h;\n            var_3ch = 0xbf9537;\n            fcn.00bb2fcd(var_38h, var_34h);\n            lpNewFileName = &fcn.00bf93df::var_994h;\ncode_r0x00bf9555:\n            var_2ch = *extraout_ECX;\n            var_30h = 0x1;\n            var_34h = 0x1;\n            var_38h = &fcn.00bf93df::var_5h;\n            var_3ch = 0xbf9567;\n            fcn.00b9506b(var_38h, 1, 1, var_2ch);\n            var_3ch = *extraout_ECX;\n            var_40h = 0x1;\n            var_44h = 0x4;\n            fcn.00b9506b(&fcn.00bf93df::var_ch, 4, 1, var_3ch);\n            var_20h = var_ch ^ 0x87bc;\n            fcn.00b9506b(&fcn.00bf93df::var_ch, 4, 1, *extraout_ECX);\n            fcn.00b9506b(&fcn.00bf93df::var_ch, 4, 1, *extraout_ECX);\n            var_24h = var_ch ^ 0xa685;\n            fcn.00b9506b(&fcn.00bf93df::var_38h, 4, 1, *extraout_ECX);\n            fcn.00b9506b(&fcn.00bf93df::var_3ch, 4, 1, *extraout_ECX);\n            fcn.00b9506b(&fcn.00bf93df::var_40h, 4, 1, *extraout_ECX);\n            fcn.00b9506b(&fcn.00bf93df::var_44h, 4, 1, *extraout_ECX);\n            fcn.00bf9b6d(&fcn.00bf93df::lpExistingFileName);\n            var_18h = fcn.00bb548b(&fcn.00bf93df::lpExistingFileName, 0xc4a4fc);\n            if (var_18h == 0) {\n                in_stack_ffffff4c = 9;\n            }\n            else {\n                fcn.00bf922f(extraout_ECX[2] + 0x2477);\n                iVar2 = 0;\n                puVar3 = extraout_ECX;\n                puVar5 = 0x1;\n                if (0 < var_20h) {\n                    do {\n                        if (var_20h < iVar2 + 0x10000) {\n                            arg_10h = var_20h - iVar2;\n                        }\n                        else {\n                            arg_10h = 0x10000;\n                        }\n                        var_34h = iVar2 + arg_10h;\n                        uStackY200 = 0xbf9666;\n                        fcn.00b9506b(var_14h, 1, arg_10h, *puVar3);\n                        iVar2 = var_14h;\n                        var_30h = NULL;\n                        if (0 < arg_10h) {\n                            iVar4 = 0;\n                            do {\n                                uVar1 = fcn.00bf9367();\n                                *(iVar2 + iVar4) = *(iVar2 + iVar4) ^ uVar1;\n                                iVar4 = iVar4 + 1;\n                                puVar3 = var_2ch;\n                            } while (iVar4 < arg_10h);\n                        }\n                        fcn.00bf8bdd(var_14h, arg_10h);\n                        uStackY200 = 0xbf96b3;\n                        fcn.00bb4a93(var_14h, 1, arg_10h, var_18h);\n                        iVar2 = var_34h;\n                        puVar5 = var_1ch;\n                    } while (var_34h < var_20h);\n                }\n                in_stack_ffffff4c = 0;\n                fcn.00bb55d6(var_18h);\n                if (var_24h == puVar5) {\n                    if (var_5h == '\\x01') {\n                        var_4ach = 0;\n                        var_488h._0_2_ = 0;\n                        var_280h._0_2_ = 0;\n                        var_4a8h = 0;\n                        var_4a4h = 0;\n                        var_4a0h = 0;\n                        var_49ch = 0;\n                        var_490h = 0;\n                        var_48ch = 0;\n                        var_498h = 0;\n                        var_494h = 0;\n                        fcn.00bb42ee(&fcn.00bf93df::var_488h, &fcn.00bf93df::lpExistingFileName, 0x104);\n                        var_280h._0_2_ = 0;\n                        fcn.00bf9c74(lpNewFileName);\n                        iVar2 = fcn.00bf8d90();\n                        if (iVar2 != 0) {\n                            (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n                            in_stack_ffffff4c = 0xb;\n                            goto code_r0x00bf97d2;\n                        }\n                    }\n                    else {\n                        iVar2 = (*_sym.imp.KERNEL32.dll_CopyFileW)();\n                        if (iVar2 == 0) {\n                            (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n                            in_stack_ffffff4c = 7;\n                            goto code_r0x00bf97d2;\n                        }\n                    }\n                    (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n                    fcn.00bf9b2c(lpNewFileName, &fcn.00bf93df::var_3ch, &fcn.00bf93df::var_44h);\n                }\n                else {\n                    (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n                    in_stack_ffffff4c = 10;\n                }\n            }\n            goto code_r0x00bf97d2;\n        }\n    }\n    else {\n        var_2ch = 0xbf9547;\n        iVar2 = fcn.00bf99be(arg_8h, var_24h);\n        if (iVar2 == 0) goto code_r0x00bf9555;\n    }\n    var_2ch = 0x6;\ncode_r0x00bf97d2:\n    fcn.00b95371();\n    return in_stack_ffffff4c;\n}\n",
        "token_count": 3038
    },
    "00bf97e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00bf97e5(uint arg_8h, uint *arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    uint *in_ECX;\n    uint32_t arg_8h_01;\n    uint in_stack_fffff8dc;\n    uint var_688h;\n    uint var_478h;\n    uint var_474h;\n    uint var_470h;\n    uint var_46ch;\n    uint var_468h;\n    uint var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_458h;\n    uint var_454h;\n    uint var_24ch;\n    uint var_28h;\n    uint32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_478h = 0;\n    var_474h = 0;\n    var_470h = 0;\n    var_46ch = 0;\n    var_468h = 0;\n    var_464h = 0;\n    var_460h = 0;\n    var_45ch = 0;\n    var_458h = 0;\n    var_28h = 0;\n    var_454h._0_2_ = 0;\n    var_24ch._0_2_ = 0;\n    var_10h = 1;\n    var_ch = in_ECX;\n    fcn.00b95045(*in_ECX, in_ECX[1], 0);\n    iVar1 = fcn.00bf99be(arg_8h, &var_688h);\n    if (iVar1 == 0) {\n        fcn.00b9506b(&var_1h, 1, 1, *in_ECX);\n        fcn.00b9506b(&var_8h, 4, 1, *in_ECX);\n        arg_8h_01 = var_8h ^ 0x87bc;\n        fcn.00b9506b(&var_8h, 4, 1, *in_ECX);\n        uVar2 = *in_ECX;\n        *arg_10h = var_8h ^ 0x87bc;\n        fcn.00b9506b(&var_8h, 4, 1, uVar2);\n        fcn.00b95045(*var_ch, 0x10, 1);\n        arg_8h_00 = fcn.00bb594c(*arg_10h);\n        uVar2 = fcn.00bb594c(arg_8h_01);\n        fcn.00b9506b(uVar2, arg_8h_01, 1, *var_ch);\n        fcn.00bf9393(uVar2, arg_8h_01, var_ch[2] + 0x2477);\n        fcn.00bf8bdd(uVar2, arg_8h_01);\n        if ((var_8h ^ 0xa685) == var_10h) {\n            if (var_1h == '\\x01') {\n                var_470h = 0;\n                var_454h._0_2_ = 0;\n                var_24ch._0_2_ = 0;\n                var_46ch = 0;\n                var_468h = 0;\n                var_45ch = 0;\n                var_458h = 0;\n                var_28h = 0;\n                var_464h = 1;\n                var_460h = 1;\n                var_478h = arg_8h_00;\n                var_474h = uVar2;\n                fcn.00bf8d90();\n                fcn.00bb2f95(uVar2);\n                uVar2 = arg_8h_00;\n            }\n            else {\n                fcn.00bb2f95(arg_8h_00);\n            }\n            *arg_ch = uVar2;\n            in_stack_fffff8dc = 0;\n        }\n        else {\n            fcn.00bb2f95(arg_8h_00);\n            fcn.00bb2f95(uVar2);\n            in_stack_fffff8dc = 10;\n        }\n    }\n    return in_stack_fffff8dc;\n}\n",
        "token_count": 1004
    },
    "00bf99be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00bf99be(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_14h;\n    int32_t iVar1;\n    uint *in_ECX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_224h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_5h;\n    \n    var_5h._0_1_ = '\\x01';\n    iVar2 = 0;\n    do {\n        fcn.00b9506b(&var_14h, 1, 4, *in_ECX);\n        fcn.00bf9393(&var_14h, 4, 0x18ee);\n        var_10h._0_1_ = 0;\n        iVar1 = fcn.00bb58c0(&var_14h, \"FILE\");\n        if (iVar1 == 0) {\n            var_18h = iVar2 + 1;\n            fcn.00b9506b(&var_ch, 4, 1, *in_ECX);\n            uVar3 = var_ch ^ 0xadbc;\n            iVar2 = uVar3 * 2;\n            fcn.00b9506b(&var_224h, 1, iVar2, *in_ECX);\n            fcn.00bf9393(&var_224h, iVar2, uVar3 + 0xb33f);\n            arg_14h = *in_ECX;\n            *(&var_224h + iVar2) = 0;\n            fcn.00b9506b(&var_ch, 4, 1, arg_14h);\n            uVar3 = var_ch ^ 0xf820;\n            iVar2 = uVar3 * 2;\n            fcn.00b9506b(arg_ch, 1, iVar2, *in_ECX);\n            fcn.00bf9393(arg_ch, iVar2, uVar3 + 0xf479);\n            *(iVar2 + arg_ch) = 0;\n            iVar2 = fcn.00bb378c(&var_224h, arg_8h);\n            if ((iVar2 == 0) ||\n               ((iVar1 = fcn.00bb378c(arg_8h, 0xc49e18),  iVar2 = var_18h,  iVar1 == 0 && (var_18h == 0)))) {\n                return 0;\n            }\n            fcn.00b95045(*in_ECX, 1, 1);\n            fcn.00b9506b(&var_1ch, 4, 1, *in_ECX);\n            var_1ch = var_1ch ^ 0x87bc;\n            fcn.00b95045(*in_ECX, var_1ch + 0x18, 1);\n        }\n        else {\n            var_5h._0_1_ = '\\0';\n        }\n        if (var_5h != '\\x01') {\n            return 6;\n        }\n    } while( true );\n}\n",
        "token_count": 713
    },
    "00bf9ea3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: lpCaption\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00bf9ea3(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint arg_8h;\n    int32_t extraout_ECX;\n    ulong uVar3;\n    ulong uVar4;\n    uchar auStackY8284 [8144];\n    uint uStackY140;\n    uint lpCaption;\n    uint *var_44h;\n    uchar *var_34h;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_24h;\n    uchar *var_20h;\n    uint uStack32;\n    uint uStack28;\n    uchar *lpText;\n    uint uStack20;\n    uint var_4h;\n    \n    fcn.00bc1b90();\n    pcVar1 = _sym.imp.USER32.dll_LoadStringW;\n    if ((*0xc56280 == '\\0') && (*(extraout_ECX + 0xf8) != 1)) {\n        lpText = &stack0xffffdfa4;\n        uStack20 = 0xfff;\n        uStack28 = 0x66;\n        uStack32 = *0xc56278;\n        var_20h = 0xbf9eec;\n        (*_sym.imp.USER32.dll_LoadStringW)();\n        var_20h = &stack0xffffdfa4;\n        var_24h = 0xbf9efb;\n        fcn.00b97f41(var_20h);\n        var_24h = 0xfff;\n        puStack44 = &stack0xffffdfa4;\n        uStack48 = 0x72;\n        uStack52 = *0xc56278;\n        var_34h = 0xbf9f0d;\n        (*pcVar1)();\n        var_34h = &stack0xffffdfa4;\n        fcn.00b97f41(var_34h);\n        uVar3 = fcn.00b97143(*(extraout_ECX + 0xf4));\n        uVar4 = fcn.00beff75(uVar3 >> 0x20);\n        var_44h = 0xbf9f39;\n        arg_8h = fcn.00beffa7(uVar4 >> 0x20);\n        var_44h = 0xbf9f43;\n        fcn.00b977c7();\n        var_44h = &fcn.00bf9ea3::var_24h;\n        cVar2 = fcn.00beffd9(arg_8h, var_44h);\n        if (cVar2 == '\\0') {\n            fcn.00bb38d8(&stack0xffffdfa4, L\"Line %d  (File \\\"%s\\\"):\\n\\n\", *(extraout_ECX + 0xf4));\n        }\n        else {\n            fcn.00bb38d8(&stack0xffffdfa4, L\"Line %d  (File \\\"%s\\\"):\\n\\n\", uVar4);\n        }\n        fcn.00b97f41(&stack0xffffdfa4);\n        if (uVar3 != 0) {\n            fcn.00b97e0b(uVar3);\n            fcn.00b97e0b(0xc22bb8);\n        }\n        fcn.00b977c7();\n        fcn.00b97d2c(L\"^ ERROR \");\n        fcn.00b97e0b(L\"Incorrect parameters to object property !\");\n        fcn.00b97c8e(&fcn.00bf9ea3::var_34h);\n        fcn.00b97e0b(0xc22bb8);\n        fcn.00b97e0b(L\"\\nError: \");\n        fcn.00b97c8e(&fcn.00bf9ea3::var_44h);\n        if (*0xc56284 == '\\0') {\n            (*_sym.imp.USER32.dll_MessageBoxW)();\n        }\n        else if (var_20h == NULL) {\n            fcn.00bb3eca(L\"\\\"%s\\\" (%d) : ==> %s:\\n\", *(extraout_ECX + 200));\n        }\n        else {\n            uStackY140 = 0xbfa029;\n            fcn.00bb3eca(L\"\\\"%s\\\" (%d) : ==> %s:\\n%s\\n%s\\n\", var_24h);\n        }\n        *(extraout_ECX + 0xf8) = 1;\n        *0xc5627c = ((*(extraout_ECX + 0x118) == '\\0') - 1 & 0x7ffff071) + 1;\n        fcn.00b95a64();\n        fcn.00b95a64();\n        fcn.00b95a64();\n        fcn.00b95a64();\n        fcn.00b95a64();\n    }\n    return;\n}\n",
        "token_count": 1141
    },
    "00bfa0b5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: lpCaption\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00bfa0b5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t arg_8h_00;\n    uint arg_8h_01;\n    int32_t extraout_ECX;\n    ulong uVar3;\n    uchar auStackY8284 [8160];\n    uint uStackY124;\n    uint lpCaption;\n    uint *var_44h;\n    uchar *var_34h;\n    int32_t var_30h;\n    int32_t iStack48;\n    uchar *puStack44;\n    uint var_24h;\n    uint lpText;\n    uint var_4h;\n    \n    fcn.00bc1b90();\n    pcVar1 = _sym.imp.USER32.dll_LoadStringW;\n    if ((*0xc56280 == '\\0') && (*(extraout_ECX + 0xf8) != 1)) {\n        (*_sym.imp.USER32.dll_LoadStringW)();\n        var_24h = 0xbfa10d;\n        fcn.00b97f41(&stack0xffffdfa4);\n        var_24h = 0xfff;\n        puStack44 = &stack0xffffdfa4;\n        iStack48 = arg_8h;\n        var_30h = *0xc56278;\n        var_34h = 0xbfa120;\n        (*pcVar1)();\n        var_34h = &stack0xffffdfa4;\n        fcn.00b97f41(var_34h);\n        uVar3 = fcn.00b97143(*(extraout_ECX + 0xf4));\n        arg_8h_00 = uVar3;\n        uVar3 = fcn.00beff75(uVar3 >> 0x20);\n        var_44h = 0xbfa14c;\n        arg_8h_01 = fcn.00beffa7(uVar3 >> 0x20);\n        var_44h = 0xbfa156;\n        fcn.00b977c7();\n        var_44h = &fcn.00bfa0b5::var_34h;\n        cVar2 = fcn.00beffd9(arg_8h_01, var_44h);\n        if (cVar2 == '\\0') {\n            fcn.00bb38d8(&stack0xffffdfa4, L\"Line %d  (File \\\"%s\\\"):\\n\\n\", *(extraout_ECX + 0xf4));\n        }\n        else {\n            fcn.00bb38d8(&stack0xffffdfa4, L\"Line %d  (File \\\"%s\\\"):\\n\\n\", uVar3);\n        }\n        fcn.00b97f41(&stack0xffffdfa4);\n        if (arg_8h_00 != 0) {\n            fcn.00b97e0b(arg_8h_00);\n            fcn.00b97e0b(0xc22bb8);\n        }\n        fcn.00b977c7();\n        if (-1 < arg_ch) {\n            fcn.00b97d2c(arg_8h_00);\n            fcn.00b97e8c(arg_ch, 0xffffffff);\n            fcn.00b97e0b(L\"^ ERROR\");\n            fcn.00b97c8e(&fcn.00bfa0b5::var_24h);\n            fcn.00b97e0b(0xc22bb8);\n        }\n        fcn.00b97e0b(L\"\\nError: \");\n        fcn.00b97c8e(&fcn.00bfa0b5::var_44h);\n        if (*0xc56284 == '\\0') {\n            (*_sym.imp.USER32.dll_MessageBoxW)();\n        }\n        else if (var_30h == 0) {\n            fcn.00bb3eca(L\"\\\"%s\\\" (%d) : ==> %s:\\n\", *(extraout_ECX + 200));\n        }\n        else {\n            uStackY124 = 0xbfa24b;\n            fcn.00bb3eca(L\"\\\"%s\\\" (%d) : ==> %s:\\n%s\\n%s\\n\", var_34h);\n        }\n        *0xc5627c = 1;\n        *(extraout_ECX + 0xf8) = 1;\n        if (*(extraout_ECX + 0x118) != '\\0') {\n            *0xc5627c = arg_8h + 0x7ffff000;\n        }\n        fcn.00b95a64();\n        fcn.00b95a64();\n        fcn.00b95a64();\n        fcn.00b95a64();\n        fcn.00b95a64();\n    }\n    return;\n}\n",
        "token_count": 1125
    },
    "00bfa433": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfa433(uint arg_8h, int32_t arg_ch, uint noname_2, int32_t arg_14h)\n\n{\n    if ((arg_ch == 1) && (arg_14h != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageW)(arg_8h, 0x467, 1, arg_14h);\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "00bfa783": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00bfa783(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint32_t var_4h;\n    \n    var_4h = in_ECX & 0xffffff00;\n    if (2 < *(arg_8h + 8)) {\n        iVar2 = fcn.00b99c9c();\n        if (iVar2 != 0) {\n            var_4h = CONCAT31(in_ECX >> 8, 1);\n        }\n    }\n    fcn.00b99997();\n    fcn.00b99997();\n    cVar1 = fcn.00bf38ad(var_4h);\n    if (cVar1 == '\\0') {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 224
    },
    "00bfa835": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00bfa835(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint arg_8h_00;\n    uint unaff_EBX;\n    uint uVar7;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint uVar8;\n    uint32_t uStack84;\n    uint uStack80;\n    uint32_t uStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack32;\n    int32_t iStack28;\n    \n    uVar2 = uStack84;\n    uStack68 = *(arg_8h + 8);\n    iVar1 = **(arg_8h + 4);\n    fcn.00b99997();\n    fcn.00b97f41(**(iVar1 + 8));\n    uVar7 = 0;\n    uStack80 = CONCAT31(uStack80._1_3_, 1);\n    uStack84 = uStack84 & 0xffffff00;\n    uStack68 = 0;\n    uStack64 = 0;\n    uStack60 = 0;\n    uStack56 = 0;\n    uStack52 = 0;\n    uStack48 = 0;\n    uVar5 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    if (iStack28 != 0) {\n        cVar3 = fcn.00bf4cd3();\n        if (cVar3 != '\\0') {\n            fcn.00bf4168();\n            if (1 < uStack76) {\n                uVar6 = fcn.00b99c9c();\n                if ((uVar6 & 1) != 0) {\n                    unaff_EBX = CONCAT31(unaff_EBX >> 8, 1);\n                }\n                uVar4 = fcn.00b99c9c();\n                uStack84 = uVar2 & 0xffffff00 | ~-((uVar4 & 2) != 0) & 0xffffff01;\n            }\n            uVar8 = unaff_EBX;\n            cVar3 = fcn.00bff65e(uStack32, &uStack72, &uStack64, &uStack56, unaff_EBX, uStack84);\n            if (cVar3 == '\\0') {\n                uVar7 = 0xffffffff;\n            }\n            else if (unaff_EBX == '\\0') {\n                fcn.00b99a20();\n                *arg_ch = unaff_EDI;\n                arg_ch[3] = 2;\n                arg_ch[1] = unaff_ESI;\n            }\n            else {\n                arg_8h_00 = fcn.00b9942e();\n                fcn.00b991b0(arg_8h_00, 1);\n                uStack64 = 0;\n                uStack60 = 2;\n                fcn.00b99040(arg_8h_00, &uStack72, 1);\n                fcn.00b99a20();\n                uStack68 = uStack84;\n                uStack64 = 0;\n                uStack60 = 2;\n                uStack72 = uVar8;\n                fcn.00b99040(arg_8h_00, &uStack72, 1);\n                fcn.00b99a20();\n                uStack72 = uStack80;\n                uStack68 = uStack76;\n                uStack60 = 2;\n                uStack64 = 0;\n                fcn.00b99040(arg_8h_00, &uStack72, 1);\n                fcn.00b99a20();\n            }\n            goto code_r0x00bfaa28;\n        }\n    }\n    fcn.00b99a20();\n    *arg_ch = 0xffffffff;\n    arg_ch[3] = 1;\n    fcn.00be6aa3(1, 0);\ncode_r0x00bfaa28:\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar5);\n    fcn.00b95a64();\n    return uVar7;\n}\n",
        "token_count": 985
    },
    "00bfaa43": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfaa43(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (2 < *(arg_8h + 8)) {\n        iVar2 = fcn.00b99c9c();\n        if (iVar2 != 0) {\n            var_4h = 1;\n        }\n    }\n    fcn.00b99997();\n    fcn.00b99997();\n    cVar1 = fcn.00bf4f63(var_4h);\n    if (cVar1 == '\\0') {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 191
    },
    "00bfaabb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfaabb(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    \n    if (1 < *(arg_8h + 8)) {\n        fcn.00b99c9c();\n    }\n    fcn.00b99997();\n    cVar1 = fcn.00bf53c5();\n    if (cVar1 == '\\0') {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 130
    },
    "00bfab12": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfab12(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint arg_8h_00;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t arg_8h_01;\n    uchar *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t arg_8h_02;\n    uint uStack284;\n    uint uStack280;\n    int32_t iStack276;\n    int32_t *piStack272;\n    uint uStack268;\n    uint uStack264;\n    uchar auStack236 [232];\n    \n    iVar6 = 0;\n    arg_8h_02 = 0xc1f910;\n    fcn.00b99bf8(0xc1f910);\n    iVar7 = **(arg_8h + 4);\n    fcn.00b99997();\n    puVar1 = *(iVar7 + 8);\n    uStack284 = *puVar1;\n    uStack280 = puVar1[1];\n    iStack276 = puVar1[2];\n    piStack272 = puVar1[3];\n    *piStack272 = *piStack272 + 1;\n    fcn.00b97faf();\n    arg_8h_00 = uStack280;\n    (*_sym.imp.USER32.dll_CharLowerBuffW)(uStack284);\n    cVar2 = fcn.00bb0d27();\n    if (cVar2 == '\\0') {\n        cVar2 = fcn.00bb0d27();\n        if (cVar2 != '\\0') {\n            iVar7 = 5;\n            goto code_r0x00bfac19;\n        }\n        cVar2 = fcn.00bb0d27();\n        if (cVar2 != '\\0') {\n            iVar7 = 2;\n            goto code_r0x00bfac19;\n        }\n        cVar2 = fcn.00bb0d27();\n        if (cVar2 != '\\0') {\n            iVar7 = 3;\n            goto code_r0x00bfac19;\n        }\n        cVar2 = fcn.00bb0d27();\n        if (cVar2 != '\\0') {\n            iVar7 = 4;\n            goto code_r0x00bfac19;\n        }\n        cVar2 = fcn.00bb0d27();\n        if (cVar2 != '\\0') {\n            iVar7 = 6;\n            goto code_r0x00bfac19;\n        }\n        cVar2 = fcn.00bb0d27();\n        if (cVar2 != '\\0') {\n            iVar7 = 0;\n            goto code_r0x00bfac19;\n        }\n    }\n    else {\n        iVar7 = 99;\ncode_r0x00bfac19:\n        puVar5 = auStack236;\n        arg_8h_01 = 0x61;\n        do {\n            fcn.00bf5d6f(arg_8h_01);\n            fcn.00b97e0b(0xc4a620);\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(arg_8h_02);\n            if ((iVar3 == iVar7) || ((iVar7 == 99 && (iVar3 != 1)))) {\n                fcn.00b97886(0xc1fac0);\n                fcn.00bb2ffc(arg_8h_02, puVar5);\n                iVar6 = iVar6 + 1;\n                arg_8h_02 = arg_8h_02 + 8;\n            }\n            arg_8h_01 = arg_8h_01 + 1;\n        } while (arg_8h_01 < 0x7b);\n        if (0 < iVar6) {\n            uVar4 = fcn.00b9942e();\n            iVar7 = 1;\n            fcn.00b991b0(uVar4, 1);\n            uStack268 = 0;\n            uStack264 = 1;\n            iStack276 = iVar6;\n            fcn.00b99040(uVar4, &iStack276, 1);\n            fcn.00b99a20();\n            if (0 < iVar6) {\n                puVar5 = auStack236;\n                do {\n                    uVar4 = fcn.00b97f41(puVar5);\n                    fcn.00b993ea(uVar4);\n                    fcn.00b99040(arg_8h_00, &uStack284, 1);\n                    fcn.00b99a20();\n                    fcn.00b95a64();\n                    iVar7 = iVar7 + 1;\n                    puVar5 = puVar5 + 8;\n                } while (iVar7 <= iVar6);\n            }\n            goto code_r0x00bfad31;\n        }\n    }\n    fcn.00be6aa3(1, 0);\ncode_r0x00bfad31:\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1126
    },
    "00bfaf7b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfaf7b(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    char16_t *arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    uVar3 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    fcn.00b99bf8(0xc1f910);\n    arg_ch = 1;\n    if ((1 < *(arg_8h + 8)) && ((arg_ch = fcn.00b99c9c(),  arg_ch < 1 || (3 < arg_ch)))) {\n        arg_ch = 1;\n    }\n    iVar4 = **(arg_8h + 4);\n    fcn.00b99997();\n    puVar1 = *(iVar4 + 8);\n    var_24h = *puVar1;\n    var_20h = puVar1[1];\n    var_1ch = puVar1[2];\n    var_18h = puVar1[3];\n    *var_18h = *var_18h + 1;\n    fcn.00b97f41(0xc4a284);\n    cVar2 = fcn.00b99c42();\n    if (cVar2 == '\\0') {\n        fcn.00bf4168();\n        fcn.00b97c8e(&var_24h);\n        fcn.00b97886(0xc1fac0);\n    }\n    else {\n        fcn.00b97e0b(L\"PhysicalDrive\");\n        iVar4 = **(arg_8h + 4);\n        fcn.00b99997();\n        fcn.00b97c8e(*(iVar4 + 8));\n    }\n    if (arg_ch == 1) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(var_24h);\n        if (iVar4 != 1) {\n            if (iVar4 == 2) {\n                arg_8h_00 = L\"Removable\";\n            }\n            else if (iVar4 == 3) {\n                arg_8h_00 = L\"Fixed\";\n            }\n            else if (iVar4 == 4) {\n                arg_8h_00 = L\"Network\";\n            }\n            else if (iVar4 == 5) {\n                arg_8h_00 = L\"CDROM\";\n            }\n            else if (iVar4 == 6) {\n                arg_8h_00 = L\"RAMDisk\";\n            }\n            else {\n                arg_8h_00 = L\"Unknown\";\n            }\ncode_r0x00bfb19a:\n            fcn.00b99bf8(arg_8h_00);\n            goto code_r0x00bfb1b3;\n        }\n    }\n    else if (arg_ch == 2) {\n        iVar4 = fcn.00bf4021();\n        if ((iVar4 != -0x7fffbffb) || (iVar4 = fcn.00bf40b1(),  iVar4 != -0x7fffbffb)) {\n            if (iVar4 != 0) goto code_r0x00bfb1b3;\n            arg_8h_00 = 0xc4a744;\n            goto code_r0x00bfb19a;\n        }\n    }\n    else {\n        if (arg_ch != 3) goto code_r0x00bfb1b3;\n        cVar2 = fcn.00bf3fa0();\n        if (cVar2 != '\\0') {\n            if (0xf < arg_8h) goto code_r0x00bfb1b3;\n    // switch table (16 cases) at 0xbfb1d7\n            switch(*(arg_8h * 4 + 0xbfb1d7)) {\n            case 0xbfb12a:\n                arg_8h_00 = L\"Unknown\";\n                break;\n            case 0xbfb131:\n                arg_8h_00 = L\"SCSI\";\n                break;\n            case 0xbfb138:\n                arg_8h_00 = L\"ATAPI\";\n                break;\n            case 0xbfb13f:\n                arg_8h_00 = 0xc4a764;\n                break;\n            case 0xbfb146:\n                arg_8h_00 = L\"1394\";\n                break;\n            case 0xbfb14d:\n                arg_8h_00 = 0xc4a778;\n                break;\n            case 0xbfb154:\n                arg_8h_00 = L\"Fibre\";\n                break;\n            case 0xbfb15b:\n                arg_8h_00 = 0xc4a78c;\n                break;\n            case 0xbfb162:\n                arg_8h_00 = L\"RAID\";\n                break;\n            case 0xbfb169:\n                arg_8h_00 = L\"iSCSI\";\n                break;\n            case 0xbfb170:\n                arg_8h_00 = 0xc4a7ac;\n                break;\n            case 0xbfb177:\n                arg_8h_00 = L\"SATA\";\n                break;\n            case 0xbfb17e:\n                arg_8h_00 = 0xc4a7c0;\n                break;\n            case 0xbfb185:\n                arg_8h_00 = 0xc4a7c8;\n                break;\n            case 0xbfb18c:\n                arg_8h_00 = L\"Virtual\";\n                break;\n            case 0xbfb193:\n                arg_8h_00 = L\"FileBackedVirtual\";\n            }\n            goto code_r0x00bfb19a;\n        }\n    }\n    fcn.00be6aa3(1, 0);\ncode_r0x00bfb1b3:\n    fcn.00b95a64();\n    fcn.00b95a64();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar3);\n    return 0;\n}\n",
        "token_count": 1391
    },
    "00bfb217": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfb217(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *arg_8h_00;\n    uint uVar4;\n    uint uVar5;\n    uint var_238h;\n    uint var_38h;\n    int32_t var_34h;\n    int16_t *var_28h;\n    uint var_24h;\n    uint var_1ch;\n    int16_t *var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_8h = 0x100;\n    var_10h = *(arg_8h + 8);\n    var_4h = 0;\n    fcn.00b99997();\n    piVar1 = fcn.00bafec6();\n    var_18h = piVar1;\n    fcn.00b99997();\n    var_14h = fcn.00bafec6();\n    if (2 < var_10h) {\n        var_4h = fcn.00b99c9c();\n    }\n    uVar3 = var_4h;\n    iVar2 = fcn.00bb3a0b(piVar1, 0xc4a5a8, 3);\n    var_34h = 2 - (iVar2 != 0);\n    var_1ch = 0;\n    var_24h = var_14h;\n    if ((*piVar1 == 0) || (var_28h = piVar1,  *piVar1 == 0x2a)) {\n        var_28h = NULL;\n    }\n    if (*piVar1 == 0x2a) {\n        uVar3 = uVar3 | 0x80;\n        var_4h = uVar3;\n    }\n    if (var_10h < 4) {\n        uVar5 = 0;\n        uVar4 = 0;\n    }\n    else {\n        iVar2 = *(*(arg_8h + 4) + 0xc);\n        if (var_10h == 4) {\n            fcn.00b99997();\n            uVar5 = **(iVar2 + 8);\n            uVar4 = 0;\n            uVar3 = var_4h;\n        }\n        else {\n            fcn.00b99997();\n            uVar5 = **(iVar2 + 8);\n            iVar2 = *(*(arg_8h + 4) + 0x10);\n            fcn.00b99997();\n            uVar4 = **(iVar2 + 8);\n            uVar3 = var_4h;\n        }\n    }\n    iVar2 = (*_sym.imp.MPR.dll_WNetUseConnectionW)(0, &var_38h, uVar4, uVar5, uVar3, &var_238h, &var_8h, &var_ch);\n    if (iVar2 != 0) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        if (iVar2 == 5) {\n            uVar5 = 2;\n        }\n        else if ((iVar2 == 0x55) || (iVar2 == 0x4b2)) {\n            uVar5 = 3;\n        }\n        else if (iVar2 == 0x4b0) {\n            uVar5 = 4;\n        }\n        else if (iVar2 == 0x43) {\n            uVar5 = 5;\n        }\n        else {\n            if (iVar2 != 0x56) {\n                fcn.00be6aa3(1, 0);\n                fcn.00baff61(iVar2, 0);\n                goto code_r0x00bfb3e4;\n            }\n            uVar5 = 6;\n        }\n        fcn.00be6aa3(uVar5, 0);\n    }\ncode_r0x00bfb3e4:\n    piVar1 = var_18h;\n    if (*var_18h == 0x2a) {\n        if ((var_ch & 0x100) == 0) {\n            arg_8h_00 = 0xc1f910;\n        }\n        else {\n            arg_8h_00 = &var_238h;\n        }\n        fcn.00b99bf8(arg_8h_00);\n    }\n    fcn.00bb106c(piVar1);\n    fcn.00bb106c(var_14h);\n    return 0;\n}\n",
        "token_count": 1054
    },
    "00bfb72e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfb72e(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char16_t *pcVar7;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    iVar5 = **(arg_8h + 4);\n    fcn.00b99997();\n    puVar1 = *(iVar5 + 8);\n    uVar2 = *puVar1;\n    iVar5 = puVar1[1];\n    *puVar1[3] = *puVar1[3] + 1;\n    fcn.00bf4168();\n    iVar6 = 0;\n    if (iVar5 == 3) {\n        piVar4 = fcn.00b97b52(1);\n        if (*piVar4 != 0x3a) goto code_r0x00bfb7c5;\n        piVar4 = fcn.00b97b52(2);\n        if (*piVar4 != 0x5c) goto code_r0x00bfb7c5;\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceW)(uVar2, &var_ch, &var_8h, &var_4h, &arg_8h);\n        if (iVar5 == 0) {\n            iVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n    }\n    else {\ncode_r0x00bfb7c5:\n        iVar6 = 3;\n    }\n    if (iVar6 == 0) {\n        pcVar7 = L\"READY\";\ncode_r0x00bfb806:\n        fcn.00b99bf8(pcVar7);\n        if (iVar6 == 0) goto code_r0x00bfb81f;\n    }\n    else {\n        if (iVar6 == 3) {\n            pcVar7 = L\"INVALID\";\n        }\n        else if (iVar6 == 0x13) {\n            pcVar7 = L\"READONLY\";\n        }\n        else {\n            if (iVar6 != 0x15) {\n                pcVar7 = L\"UNKNOWN\";\n                goto code_r0x00bfb806;\n            }\n            pcVar7 = L\"NOTREADY\";\n        }\n        fcn.00b99bf8(pcVar7);\n    }\n    fcn.00be6aa3(1, 0);\ncode_r0x00bfb81f:\n    fcn.00b95a64();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar3);\n    return 0;\n}\n",
        "token_count": 656
    },
    "00bfb876": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfb876(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    char cVar5;\n    int32_t in_ECX;\n    \n    cVar5 = fcn.00bff7df(&arg_8h, **(arg_8h + 4), 0xffffffff);\n    puVar4 = arg_ch;\n    iVar3 = arg_8h;\n    if (cVar5 == '\\0') {\n        fcn.00b99a20();\n        *puVar4 = 0;\n        puVar4[3] = 1;\n    }\n    else {\n        piVar1 = **(*(in_ECX + 0x194) + arg_8h * 4);\n        if (*piVar1 == 0) {\n            if (piVar1[1] != 0) {\n                fcn.00b95a1a(piVar1[1]);\n            }\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_FindClose)(piVar1[2]);\n        }\n        iVar2 = **(*(in_ECX + 0x194) + iVar3 * 4);\n        if (iVar2 != 0) {\n            fcn.00bf9e34(iVar2);\n        }\n        **(*(in_ECX + 0x194) + iVar3 * 4) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 336
    },
    "00bfb8fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00bfb8fe(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint unaff_ESI;\n    uint uStack60;\n    int32_t iStack56;\n    uchar auStack40 [36];\n    \n    uVar3 = uStack60;\n    uStack60 = uStack60 & 0xffffff00;\n    if (2 < *(arg_8h + 8)) {\n        uVar2 = fcn.00b99c9c();\n        if ((uVar2 & 1) != 0) {\n            uStack60 = CONCAT31(SUB43(uVar3, 1), 1);\n        }\n        uVar3 = fcn.00b99c9c();\n        if ((uVar3 & 8) != 0) {\n            fcn.00b977c7();\n            fcn.00b977c7();\n            fcn.00b99997();\n            fcn.00b946f9(auStack40, 0, 0);\n            fcn.00b97c8e(auStack40);\n            if ((iStack56 != 0) && (cVar1 = fcn.00bf3e73(),  cVar1 == '\\0')) {\n                fcn.00b97f41(uStack60);\n                cVar1 = fcn.00bf3c66();\n                fcn.00b95a64();\n                if (cVar1 == '\\0') {\n                    fcn.00b99a20();\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                }\n            }\n            iVar4 = fcn.00b99c9c();\n            if (iVar4 == 0) {\n                fcn.00b95a64();\n                fcn.00b95a64();\n                return 0;\n            }\n            fcn.00b95a64();\n            fcn.00b95a64();\n        }\n    }\n    fcn.00b99997();\n    fcn.00b99997();\n    cVar1 = fcn.00bf3a2b(unaff_ESI, 0);\n    if (cVar1 == '\\0') {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 555
    },
    "00bfba5f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00bfba5f(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t in_ECX;\n    uint32_t var_4h;\n    \n    var_4h = in_ECX & 0xffffff00;\n    if (2 < *(arg_8h + 8)) {\n        iVar2 = fcn.00b99c9c();\n        if (iVar2 == 1) {\n            var_4h = CONCAT31(in_ECX >> 8, 1);\n        }\n    }\n    fcn.00b99997();\n    cVar1 = fcn.00bf4cd3();\n    if (cVar1 == '\\0') {\n        iVar2 = **(arg_8h + 4);\n        fcn.00b99997();\n        uVar3 = **(iVar2 + 8);\n        iVar2 = *(*(arg_8h + 4) + 4);\n        fcn.00b99997();\n        uVar3 = (*_sym.imp.KERNEL32.dll_CreateHardLinkW)(**(iVar2 + 8), uVar3, 0);\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = uVar3;\n        iVar2 = fcn.00b99c9c();\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if ((iVar2 == 0xb7) && (var_4h != '\\0')) {\n                iVar2 = *(*(arg_8h + 4) + 4);\n                fcn.00b99997();\n                (*_sym.imp.KERNEL32.dll_DeleteFileW)(**(iVar2 + 8));\n                iVar2 = **(arg_8h + 4);\n                fcn.00b99997();\n                uVar3 = **(iVar2 + 8);\n                iVar2 = *(*(arg_8h + 4) + 4);\n                fcn.00b99997();\n                uVar3 = (*_sym.imp.KERNEL32.dll_CreateHardLinkW)(**(iVar2 + 8), uVar3, 0);\n                fcn.00b99a20();\n                arg_ch[3] = 1;\n                *arg_ch = uVar3;\n            }\n        }\n    }\n    else {\n        iVar2 = (*(arg_8h + 4))[1];\n        fcn.00b99997();\n        uVar3 = **(iVar2 + 8);\n        iVar2 = **(arg_8h + 4);\n        fcn.00b99997();\n        uVar3 = fcn.00bfa45a(**(iVar2 + 8), uVar3, var_4h);\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 675
    },
    "00bfc0cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfc0cb(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uchar *puVar5;\n    uint uVar6;\n    int32_t iStack632;\n    uchar auStack620 [4];\n    uint32_t uStack616;\n    uchar auStack612 [44];\n    uchar auStack568 [564];\n    \n    cVar3 = fcn.00bff7df(auStack620, **(arg_8h + 4), 1);\n    if (cVar3 != '\\0') {\n        bVar2 = false;\n        if ((1 < *(arg_8h + 8)) && (iVar4 = fcn.00b99c9c(),  iVar4 == 1)) {\n            bVar2 = true;\n        }\n        piVar1 = *(*(in_ECX + 0x194) + iStack632 * 4);\n        iVar4 = *piVar1;\n        if (*(iVar4 + 0x10) != 0) {\n            fcn.00b99b9c(iVar4 + 0xc);\n            if (bVar2) {\n                fcn.00b977c7();\n                fcn.00bfecc1(*(**(*(in_ECX + 0x194) + iStack632 * 4) + 0x1c), &stack0xfffffd74);\n                fcn.00b993ea(&stack0xfffffd6c);\n                puVar5 = &stack0xfffffd7c;\n                uVar6 = extraout_ECX;\n                fcn.00be6a7a(puVar5);\n                fcn.00b99a20(puVar5, uVar6);\n                fcn.00b95a64();\n            }\n            else if ((*(**(*(in_ECX + 0x194) + iStack632 * 4) + 0x1c) & 0x10) != 0) {\n                fcn.00baff61(1, 0);\n            }\n            fcn.00b97eec();\n            return 0;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(*(*piVar1 + 8), auStack612);\n        if (iVar4 != 0) {\n            fcn.00b99bf8(auStack568);\n            if (bVar2) {\n                fcn.00b977c7();\n                fcn.00bfecc1(uStack616, &stack0xfffffd74);\n                fcn.00b993ea(&stack0xfffffd6c);\n                puVar5 = &stack0xfffffd7c;\n                uVar6 = extraout_ECX_00;\n                fcn.00be6a7a(puVar5);\n                fcn.00b99a20(puVar5, uVar6);\n                fcn.00b95a64();\n                return 0;\n            }\n            if ((uStack616 & 0x10) == 0) {\n                return 0;\n            }\n            fcn.00baff61(1, 0);\n            return 0;\n        }\n    }\n    fcn.00be6aa3(1, 0);\n    fcn.00b99bf8(0xc1f910);\n    return 0;\n}\n",
        "token_count": 777
    },
    "00bfc33f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfc33f(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint32_t uVar5;\n    int32_t var_4h;\n    \n    if (*(**(arg_8h + 4) + 0xc) == 4) {\n        iVar2 = fcn.00bb0ff6(0x38);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.00b95906();\n        }\n        uVar5 = 0x4000;\n        if (1 < *(arg_8h + 8)) {\n            iVar3 = fcn.00b99c9c();\n            uVar5 = -(iVar3 != 2) & 0x4000;\n        }\n        iVar3 = **(arg_8h + 4);\n        fcn.00b99997();\n        cVar1 = fcn.00b95956(*(iVar3 + 8), uVar5 | 0x8000);\n        if (cVar1 != '\\0') {\ncode_r0x00bfc3f2:\n            uVar4 = fcn.00b95708();\n            fcn.00b99a20();\n            arg_ch[3] = 1;\n            *arg_ch = uVar4;\n            if (*(**(arg_8h + 4) + 0xc) != 4) {\n                return 0;\n            }\n            fcn.00b95dcf();\n            if (iVar2 == 0) {\n                return 0;\n            }\n            fcn.00b95a1a(extraout_ECX_00);\n            return 0;\n        }\n        if (iVar2 != 0) {\n            fcn.00b95a1a(extraout_ECX);\n        }\n    }\n    else {\n        var_4h = in_ECX;\n        cVar1 = fcn.00bff7df(&var_4h, **(arg_8h + 4), 0);\n        if (cVar1 != '\\0') {\n            iVar2 = *(**(*(in_ECX + 0x194) + var_4h * 4) + 4);\n            goto code_r0x00bfc3f2;\n        }\n    }\n    fcn.00b99a20();\n    *arg_ch = 0xffffffff;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 593
    },
    "00bfc43a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfc43a(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar3 = **(arg_8h + 4);\n    fcn.00b99997();\n    puVar1 = *(iVar3 + 8);\n    var_10h = *puVar1;\n    var_ch = puVar1[1];\n    var_8h = puVar1[2];\n    var_4h = puVar1[3];\n    *var_4h = *var_4h + 1;\n    if (1 < *(arg_8h + 8)) {\n        iVar3 = fcn.00b99c9c();\n        if (iVar3 == 1) {\n            fcn.00b948ae();\n        }\n    }\n    cVar2 = fcn.00bb09d5();\n    if (cVar2 == '\\x01') {\n        fcn.00b99b9c(&var_10h);\n    }\n    else {\n        iVar3 = **(arg_8h + 4);\n        fcn.00b99997();\n        fcn.00b99b9c(*(iVar3 + 8));\n        fcn.00be6aa3(1, 0);\n    }\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 343
    },
    "00bfc55e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfc55e(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint in_stack_ffffffd4;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = **(arg_8h + 4);\n    fcn.00b99997();\n    piVar1 = *(*(iVar3 + 8) + 0xc);\n    *piVar1 = *piVar1 + 1;\n    if ((1 < *(arg_8h + 8)) && (iVar3 = fcn.00b99c9c(),  iVar3 == 1)) {\n        fcn.00b948ae();\n    }\n    cVar2 = fcn.00bf4a31();\n    if (cVar2 == '\\0') {\n        fcn.00be6aa3(1, 0);\n        iVar3 = **(arg_8h + 4);\n        fcn.00b99997();\n        in_stack_ffffffd4 = *(iVar3 + 8);\n    }\n    fcn.00b99b9c(in_stack_ffffffd4);\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 299
    },
    "00bfcd3e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfcd3e(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    char16_t *arg_8h_01;\n    uint var_408h;\n    uint var_4h;\n    \n    if (*(arg_8h + 8) == 1) {\n        arg_8h_00 = 0xc1fac0;\n    }\n    else {\n        iVar2 = *(*(arg_8h + 4) + 4);\n        fcn.00b99997();\n        arg_8h_00 = **(iVar2 + 8);\n    }\n    fcn.00b99997();\n    cVar1 = fcn.00bf46d6(arg_8h_00);\n    if (cVar1 == '\\x01') {\n        fcn.00b99bf8(&var_408h);\n    }\n    else {\n        iVar2 = fcn.00bb378c(arg_8h_00, 0xc1fac0);\n        if (iVar2 == 0) {\n            arg_8h_01 = L\"0.0.0.0\";\n        }\n        else {\n            arg_8h_01 = 0xc1f910;\n        }\n        fcn.00b99bf8(arg_8h_01);\n        fcn.00be6aa3(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 330
    },
    "00bfd151": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00bfd151(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint unaff_ESI;\n    uint uStack76;\n    int32_t iStack56;\n    int32_t *piStack44;\n    uchar auStack40 [36];\n    \n    uVar3 = uStack76;\n    uStack76 = uStack76 & 0xffffff00;\n    if (2 < *(arg_8h + 8)) {\n        uVar2 = fcn.00b99c9c();\n        if ((uVar2 & 1) != 0) {\n            uStack76 = CONCAT31(SUB43(uVar3, 1), 1);\n        }\n        uVar3 = fcn.00b99c9c();\n        if ((uVar3 & 8) != 0) {\n            fcn.00b977c7();\n            fcn.00b977c7();\n            fcn.00b99997();\n            fcn.00b946f9(auStack40, 0, 0);\n            *piStack44 = *piStack44 + 1;\n            fcn.00b97c8e(auStack40);\n            if ((iStack56 != 0) && (cVar1 = fcn.00bf3e73(),  cVar1 == '\\0')) {\n                fcn.00b97f41(uStack76);\n                cVar1 = fcn.00bf3c66();\n                fcn.00b95a64();\n                if (cVar1 == '\\0') {\n                    fcn.00b99a20();\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                }\n            }\n            iVar4 = fcn.00b99c9c();\n            if (iVar4 == 0) {\n                fcn.00b95a64();\n                fcn.00b95a64();\n                fcn.00b95a64();\n                return 0;\n            }\n            fcn.00b95a64();\n            fcn.00b95a64();\n            fcn.00b95a64();\n        }\n    }\n    fcn.00b99997();\n    fcn.00b99997();\n    cVar1 = fcn.00bf3a2b(unaff_ESI, 1);\n    if (cVar1 == '\\0') {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 596
    },
    "00bfd57f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfd57f(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t unaff_EDI;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint uStack44;\n    uchar auStack40 [36];\n    \n    fcn.00b99a20();\n    iVar3 = 0;\n    arg_ch[3] = 1;\n    *arg_ch = 0;\n    if (*(**(arg_8h + 4) + 0xc) == 4) {\n        iVar2 = fcn.00bb0ff6(0x38);\n        if (iVar2 != 0) {\n            iVar3 = fcn.00b95906();\n        }\n        iVar2 = **(arg_8h + 4);\n        fcn.00b99997();\n        cVar1 = fcn.00b95956(*(iVar2 + 8), 0x8000);\n        if (cVar1 != '\\0') {\ncode_r0x00bfd634:\n            fcn.00b97b76(0x100);\n            arg_8h_00 = 0xc1f968;\n            iVar2 = 0;\n            uStack44 = 0;\n            while (cVar1 = fcn.00b955ec(auStack40),  cVar1 != '\\0') {\n                fcn.00b93f84(&uStack44);\n            }\n            if (iVar2 == 0) {\n                fcn.00b99a20();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n                fcn.00be6aa3(2, 0);\n            }\n            else {\n                fcn.00b99890(&stack0xffffffc4);\n                fcn.00baff61(arg_8h_00, 0);\n            }\n            if ((*(**(arg_8h + 4) + 0xc) == 4) && (fcn.00b95dcf(),  iVar3 != 0)) {\n                fcn.00b95a1a(extraout_ECX_00);\n            }\n            fcn.00b94024();\n            fcn.00b95a64();\n            return 0;\n        }\n        if (iVar3 != 0) {\n            fcn.00b95a1a(extraout_ECX);\n        }\n    }\n    else {\n        cVar1 = fcn.00bff7df(&uStack44, **(arg_8h + 4), 0);\n        if (cVar1 != '\\0') {\n            iVar3 = *(**(*(in_ECX + 0x194) + unaff_EDI * 4) + 4);\n            goto code_r0x00bfd634;\n        }\n    }\n    fcn.00be6aa3(1, 0);\n    return 0;\n}\n",
        "token_count": 671
    },
    "00bfd7f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00bfd7f8(int32_t *arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint var_250h;\n    int32_t *var_48h;\n    int32_t var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    code *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_18h;\n    int16_t *var_14h;\n    uint32_t var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_10h = arg_8h[2];\n    var_ch = NULL;\n    iVar4 = *arg_8h[1];\n    uVar6 = 0x200;\n    fcn.00b99997();\n    var_18h = **(iVar4 + 8);\n    iVar4 = *(arg_8h[1] + 4);\n    fcn.00b99997();\n    var_14h = **(iVar4 + 8);\n    fcn.00b99bf8(0xc1f910);\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    piVar2 = arg_8h;\n    if (2 < var_10h) {\n        uVar3 = fcn.00b99c9c();\n        if ((uVar3 & 1) != 0) {\n            uVar6 = 0x40;\n        }\n        uVar3 = fcn.00b99c9c();\n        if ((uVar3 & 2) != 0) {\n            uVar6 = uVar6 | 0x40;\n        }\n        uVar3 = fcn.00b99c9c();\n        if ((uVar3 & 4) != 0) {\n            uVar6 = uVar6 | 0x10;\n        }\n    }\n    fcn.00b977c7();\n    if (3 < var_10h) {\n        iVar4 = *(piVar2[1] + 0xc);\n        fcn.00b99997();\n        fcn.00b97d2c(**(iVar4 + 8));\n    }\n    if (4 < var_10h) {\n        var_ch = fcn.00bf89bb();\n    }\n    var_8h = 0;\n    (*_sym.imp.SHELL32.dll_SHGetSpecialFolderLocation)(0, 0, &var_8h);\n    if (*var_14h != 0) {\n        iVar4 = (*_sym.imp.SHELL32.dll_SHGetDesktopFolder)(&arg_8h);\n        if (iVar4 == 0) {\n            uVar5 = fcn.00bafec6();\n            (**(*arg_8h + 0xc))(arg_8h, 0, 0, uVar5, 0, &var_8h, 0);\n            fcn.00bb106c(uVar5);\n            (**(*arg_8h + 8))(arg_8h);\n        }\n    }\n    iVar4 = (*_sym.imp.ole32.dll_CoCreateInstance)(0xc22d7c, 0, 1, 0xc4a89c, &var_4h);\n    pcVar1 = _sym.imp.ole32.dll_CoTaskMemFree;\n    if (iVar4 < 0) {\n        var_250h._0_2_ = 0;\n        fcn.00bb3020(&var_250h + 2, 0, 0x206);\n        var_44h = var_8h;\n        var_40h = &var_250h;\n        var_30h = var_28h;\n        var_2ch = 0;\n        var_48h = var_ch;\n        var_3ch = var_18h;\n        var_34h = fcn.00bfa433;\n        var_38h = uVar6;\n        iVar4 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderW)(&var_48h);\n        if (iVar4 == 0) {\n            fcn.00be6aa3(1, 0);\n        }\n        else {\n            fcn.00b99bf8(&var_250h);\n            (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)(iVar4, &var_250h);\n            (*pcVar1)(iVar4);\n            if (var_250h != 0) {\n                fcn.00b99bf8(&var_250h);\n            }\n        }\n    }\n    else {\n        fcn.00be6aa3(1, 0);\n        arg_8h = NULL;\n        iVar4 = (**(*var_4h + 0x28))(var_4h, &var_14h);\n        if (-1 < iVar4) {\n            (**(*var_4h + 0x24))(var_4h, var_14h | 0x20);\n            (**(*var_4h + 0x3c))(var_4h, var_28h);\n            (**(*var_4h + 0x44))(var_4h, var_18h);\n            (*_sym.imp.SHELL32.dll_SHCreateShellItem)(0, 0, var_8h, &var_10h);\n            (**(*var_4h + 0x30))(var_4h, var_10h);\n            iVar4 = (**(*var_4h + 0xc))(var_4h, var_ch);\n            if (-1 < iVar4) {\n                iVar4 = (**(*var_4h + 0x50))(var_4h, &var_ch);\n                if (-1 < iVar4) {\n                    iVar4 = (**(*var_ch + 0x14))(var_ch, 0x80028000, &arg_8h);\n                    if (-1 < iVar4) {\n                        fcn.00b99bf8(arg_8h);\n                        (*pcVar1)(arg_8h);\n                        fcn.00be6aa3(0, 0);\n                    }\n                    (**(*var_ch + 8))(var_ch);\n                }\n            }\n        }\n        (**(*var_4h + 8))(var_4h);\n    }\n    if (var_8h != 0) {\n        (*pcVar1)(var_8h);\n    }\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1524
    },
    "00bfdb04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfdb04(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint *puVar3;\n    bool bVar4;\n    code *pcVar5;\n    char cVar6;\n    int32_t iVar7;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    int16_t *piVar8;\n    uint unaff_EDI;\n    uint *in_stack_00000008;\n    uint uStack0000000c;\n    int32_t *piStack00000010;\n    uint uStack00000014;\n    \n    fcn.00bc1b90();\n    iVar7 = *(*(arg_8h + 4) + 4);\n    fcn.00b99997();\n    uStack00000014 = 1;\n    piVar8 = **(iVar7 + 8);\n    if ((*(arg_8h + 8) < 3) || (iVar7 = fcn.00b99c9c(),  iVar7 != 1)) {\n        bVar4 = false;\n    }\n    else {\n        bVar4 = true;\n    }\n    iVar1 = *piVar8;\n    while (iVar1 != 0) {\n        if (*piVar8 == 0x2b) {\n            piVar8 = piVar8 + 1;\n        }\n        else if (*piVar8 == 0x2d) {\n            piVar8 = piVar8 + 1;\n        }\n        iVar1 = *piVar8;\n        if (((((iVar1 != 0x52) && (iVar1 != 0x72)) && (iVar1 != 0x41)) &&\n            ((((iVar1 != 0x61 && (iVar1 != 0x53)) && ((iVar1 != 0x73 && ((iVar1 != 0x48 && (iVar1 != 0x68)))))) &&\n             (iVar1 != 0x4e)))) &&\n           ((((iVar1 != 0x6e && (iVar1 != 0x4f)) && (iVar1 != 0x6f)) && ((iVar1 != 0x54 && (iVar1 != 0x74)))))) {\n            fcn.00b99a20();\n            in_stack_00000008[3] = 1;\n            *in_stack_00000008 = 0;\n            return 0;\n        }\n        piVar8 = piVar8 + 1;\n        iVar1 = *piVar8;\n    }\n    iVar7 = **(arg_8h + 4);\n    fcn.00b99997();\n    puVar2 = *(iVar7 + 8);\n    arg_8h_00 = *puVar2;\n    puVar3 = puVar2[1];\n    uStack0000000c = puVar2[2];\n    piStack00000010 = puVar2[3];\n    *piStack00000010 = *piStack00000010 + 1;\n    fcn.00b948ae();\n    fcn.00bb432e(arg_8h_00, &stack0x0001061c, &stack0x0000021c, &stack0x0000001c, &stack0x0000041c);\n    fcn.00bb2fcd(&stack0x0001061c, &stack0x0000021c);\n    fcn.00bb2fcd(&stack0x0000001c, &stack0x0000041c);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n    pcVar5 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryW;\n    iVar7 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)();\n    if (iVar7 == 0) {\ncode_r0x00bfdd14:\n        fcn.00b99a20();\n        puVar3[3] = 1;\n        *puVar3 = 0;\n    }\n    else {\n        cVar6 = fcn.00bf4cd3();\n        if (cVar6 == '\\0') {\ncode_r0x00bfdd64:\n            cVar6 = fcn.00bff200(&stack0x00000010, unaff_ESI, unaff_EDI, unaff_EBX);\n            if (cVar6 == '\\0') {\n                fcn.00b99a20();\n                puVar3[3] = 1;\n                *puVar3 = 0;\n            }\n        }\n        else {\n            unaff_ESI = unaff_EDI;\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesW)();\n            unaff_EDI = unaff_ESI;\n            iVar7 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)();\n            if (iVar7 == 0) {\n                (*pcVar5)();\n                goto code_r0x00bfdd14;\n            }\n            if (bVar4) {\n                (*pcVar5)();\n                fcn.00bb2ffc(&stack0x00000010, 0xc4a598);\n                goto code_r0x00bfdd64;\n            }\n        }\n        (*pcVar5)();\n    }\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1157
    },
    "00bfde85": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfde85(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int16_t *piVar2;\n    uint *puVar3;\n    bool bVar4;\n    code *pcVar5;\n    int32_t *piVar6;\n    char cVar7;\n    int32_t iVar8;\n    uint *extraout_ECX;\n    int32_t *piStack00000008;\n    uint *arg_8h_00;\n    uint uStack8;\n    uint arg_8h_01;\n    \n    fcn.00bc1b90();\n    uVar1 = *(arg_8h + 8);\n    iVar8 = *(*(arg_8h + 4) + 4);\n    piStack00000008 = extraout_ECX;\n    fcn.00b99997();\n    piVar2 = **(iVar8 + 8);\n    uStack8 = 0;\n    if (((2 < uVar1) && (iVar8 = fcn.00b99c9c(),  -1 < iVar8)) && (iVar8 = fcn.00b99c9c(),  iVar8 < 3)) {\n        uStack8 = fcn.00b99c9c();\n    }\n    if ((uVar1 < 4) || (iVar8 = fcn.00b99c9c(),  iVar8 != 1)) {\n        bVar4 = false;\n    }\n    else {\n        bVar4 = true;\n    }\n    if (*piVar2 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLocalTime)();\n    }\n    else {\n        cVar7 = fcn.00bf589f(1, 0);\n        if (cVar7 == '\\0') {\n            fcn.00b99a20();\n            *piStack00000008 = 0;\n            piStack00000008[3] = 1;\n            return 0;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)();\n    arg_8h_00 = &uStack8;\n    (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)();\n    iVar8 = **(arg_8h + 4);\n    fcn.00b99997();\n    puVar3 = *(iVar8 + 8);\n    arg_8h_01 = *puVar3;\n    piStack00000008 = puVar3[3];\n    *piStack00000008 = *piStack00000008 + 1;\n    fcn.00b948ae();\n    fcn.00bb432e(arg_8h_01, &stack0x0001061c, &stack0x0000041c, &stack0x0000001c, &stack0x0000021c);\n    fcn.00bb2fcd(&stack0x0001061c, &stack0x0000041c);\n    fcn.00bb2fcd(&stack0x0000001c, &stack0x0000021c);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n    pcVar5 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryW;\n    iVar8 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)();\n    if (iVar8 == 0) {\ncode_r0x00bfe048:\n        piVar6 = piStack00000008;\n        fcn.00b99a20();\n        *piVar6 = 0;\n        piVar6[3] = 1;\n    }\n    else {\n        cVar7 = fcn.00bf4cd3();\n        if (cVar7 == '\\0') {\ncode_r0x00bfe07a:\n            cVar7 = fcn.00bff35d(&stack0x00000010, &stack0xffffffe4, arg_8h_00, &uStack8);\n            piVar6 = piStack00000008;\n            if (cVar7 == '\\0') {\n                fcn.00b99a20();\n                *piVar6 = 0;\n                piVar6[3] = 1;\n            }\n        }\n        else {\n            cVar7 = fcn.00bf45c1(arg_8h_00);\n            if (cVar7 == '\\0') {\n                (*pcVar5)();\n                goto code_r0x00bfe048;\n            }\n            if (bVar4) {\n                (*pcVar5)();\n                fcn.00bb2ffc(&stack0x00000010, 0xc4a598);\n                goto code_r0x00bfe07a;\n            }\n        }\n        (*pcVar5)();\n    }\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1042
    },
    "00bfe0f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfe0f0(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uStack28;\n    uint uStack24;\n    \n    fcn.00b977c7();\n    fcn.00b99997();\n    fcn.00b948ae();\n    cVar2 = fcn.00bf3e73();\n    if (cVar2 == '\\0') {\n        fcn.00b99a20();\n        *arg_ch = 0;\n    }\n    else {\n        if (*(arg_8h + 8) == 2) {\ncode_r0x00bfe185:\n            iVar3 = *(*(arg_8h + 4) + 4);\n            fcn.00b99997();\n            uVar4 = 0;\n        }\n        else {\n            if (*(arg_8h + 8) == 3) {\n                cVar2 = fcn.00b99dae(0x29);\n                if (cVar2 != '\\0') goto code_r0x00bfe185;\n            }\n            iVar3 = *(*(arg_8h + 4) + 8);\n            fcn.00b99997();\n            uVar4 = **(iVar3 + 8);\n            iVar3 = *(*(arg_8h + 4) + 4);\n            fcn.00b99997();\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_WritePrivateProfileStringW;\n        iVar3 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(**(iVar3 + 8), uVar4, 0, uStack28);\n        if (iVar3 != 0) {\n            (*pcVar1)(0, 0, 0, uStack24);\n            goto code_r0x00bfe1c9;\n        }\n        fcn.00b99a20();\n        *arg_ch = 0;\n    }\n    arg_ch[3] = 1;\ncode_r0x00bfe1c9:\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 485
    },
    "00bfe29d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00bfe29d(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *piStack152;\n    uint uStack148;\n    uint uStack144;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t *piStack124;\n    int32_t *piStack120;\n    int32_t iStack116;\n    uchar auStack112 [4];\n    int32_t iStack108;\n    int32_t *piStack100;\n    uint uStack96;\n    uchar auStack92 [8];\n    uchar auStack84 [24];\n    uint32_t uStack60;\n    \n    fcn.00b977c7();\n    fcn.00b99997();\n    fcn.00b948ae();\n    uStack144 = 0xbfe2db;\n    uVar2 = fcn.00bb0ff6(0xfffe);\n    uStack144 = 0xbfe2e6;\n    fcn.00b9538e(uVar2);\n    iVar3 = *(*(arg_8h + 4) + 4);\n    uStack144 = 0xbfe2f3;\n    fcn.00b99997();\n    piStack124 = piStack100;\n    uStack144 = uStack60;\n    uStack148 = 0x7fff;\n    piStack152 = piStack100;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionW)(**(iVar3 + 8));\n    if (iVar3 == 0) {\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        piStack124 = fcn.00bb0ff6(0x14);\n        if (piStack124 == NULL) {\n            piStack124 = NULL;\n        }\n        else {\n            *piStack124 = 0;\n            piStack124[1] = 0;\n            piStack124[2] = 0;\n            piStack124[3] = 0;\n            piStack124[4] = 0;\n        }\n        uStack144._3_1_ = '\\0';\n        *piStack124 = 0;\n        iVar5 = 0;\n        iVar6 = 0;\n        uStack144 = uStack144 & 0xffffff;\n        piVar4 = piStack124;\n        piVar7 = piStack124;\n        if (0 < iVar3) {\n            do {\n                iVar1 = *(iStack116 + iVar5 * 2);\n                if ((iVar1 == 0x3b) && (*piVar4 == iVar5)) {\n                    uStack144._3_1_ = '\\x01';\n                    uStack144 = CONCAT13(1, uStack144);\n                }\n                else if ((iVar1 == 0x3d) && ((piVar4[1] == 0 && (uStack144._3_1_ == '\\0')))) {\n                    piVar4[1] = iVar5;\n                    piVar4[2] = iVar5 + 1;\n                }\n                else if (iVar1 == 0) {\n                    *(iStack116 + iVar5 * 2) = 0xd;\n                    if ((piVar4[2] == 0) || (uStack144._3_1_ != '\\0')) {\n                        piVar4[3] = 0;\n                        piVar4[2] = 0;\n                        piVar4[1] = 0;\ncode_r0x00bfe401:\n                        *piVar4 = iVar5 + 1;\n                    }\n                    else {\n                        iVar6 = iVar6 + 1;\n                        piVar4[3] = iVar5;\n                        if (*(iStack116 + 2 + iVar5 * 2) != 0) {\n                            piVar4 = fcn.00bb0ff6(0x14);\n                            if (piVar4 == NULL) {\n                                piVar4 = NULL;\n                            }\n                            else {\n                                *piVar4 = 0;\n                                piVar4[1] = 0;\n                                piVar4[2] = 0;\n                                piVar4[3] = 0;\n                                piVar4[4] = 0;\n                            }\n                            piVar7[4] = piVar4;\n                            piVar7 = piVar4;\n                            goto code_r0x00bfe401;\n                        }\n                    }\n                    uStack144._3_1_ = '\\0';\n                    uStack144 = uStack144 & 0xffffff;\n                    if (*(iStack116 + 2 + iVar5 * 2) == 0) break;\n                }\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < iVar3);\n            if (0 < iVar6) {\n                fcn.00b9942e();\n                if (arg_ch[3] == 5) {\n                    uVar2 = *arg_ch;\n                }\n                else {\n                    uVar2 = 0;\n                }\n                fcn.00b991b0(uVar2, 2);\n                piStack100 = NULL;\n                uStack96 = 1;\n                iStack108 = iVar6;\n                fcn.00b99040(uVar2, &stack0xffffff94, 2);\n                fcn.00b99a20();\n                fcn.00b977c7();\n                fcn.00b977c7();\n                piVar4 = piStack124;\n                if (0 < iVar6) {\n                    do {\n                        uVar2 = 0;\n                        fcn.00b97e8c(0, 0xffffffff);\n                        fcn.00b978ad(piStack124, *piVar4, piVar4[1] - *piVar4);\n                        fcn.00b993ea(&stack0xffffff90);\n                        fcn.00b99040(uVar2, &stack0xffffffac, 2);\n                        fcn.00b99a20();\n                        uVar2 = 0;\n                        fcn.00b97e8c(0, 0xffffffff);\n                        fcn.00b978ad(uStack148, piVar4[2], piVar4[3] - piVar4[2]);\n                        fcn.00b993ea(&stack0xffffff68);\n                        fcn.00b99040(uVar2, &stack0xffffffa4, 2);\n                        fcn.00b99a20();\n                        piVar7 = piVar4[4];\n                        fcn.00bb106c(piVar4);\n                        iVar6 = iVar6 + -1;\n                        piVar4 = piVar7;\n                    } while (iVar6 != 0);\n                }\n                fcn.00b95a64();\n                fcn.00b95a64();\n                goto code_r0x00bfe5a4;\n            }\n        }\n        fcn.00be6aa3(1, 0);\n    }\ncode_r0x00bfe5a4:\n    *piStack120 = *piStack120 + -1;\n    if (*piStack120 == 0) {\n        fcn.00bb106c(piStack120);\n        fcn.00bb106c(piStack124);\n    }\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1628
    },
    "00bfe7dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfe7dc(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    bool bVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    uint arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    bVar4 = false;\n    if (3 < *(arg_8h + 8)) {\n        iVar6 = fcn.00b99c9c();\n        bVar4 = 0 < iVar6;\n    }\n    iVar6 = **(arg_8h + 4);\n    fcn.00b99997();\n    puVar1 = *(iVar6 + 8);\n    uVar2 = *puVar1;\n    piVar3 = puVar1[3];\n    *piVar3 = *piVar3 + 1;\n    fcn.00b99997();\n    fcn.00b948ae();\n    arg_8h_00 = fcn.00bb0ff6(0xfffe);\n    fcn.00b9538e(arg_8h_00);\n    iVar6 = *(*(arg_8h + 4) + 4);\n    fcn.00b99997();\n    iVar6 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionW)(**(iVar6 + 8), var_14h, 0x7fff, uVar2);\n    if (iVar6 != 0) {\n        iVar6 = *(*(arg_8h + 4) + 8);\n        fcn.00b99997();\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionW)(**(iVar6 + 8), &var_ch, 3, uVar2);\n        if ((iVar6 == 0) || (bVar4)) {\n            iVar6 = *(*(arg_8h + 4) + 8);\n            fcn.00b99997();\n            (*_sym.imp.KERNEL32.dll_WritePrivateProfileSectionW)(**(iVar6 + 8), var_14h, uVar2);\n            iVar6 = *(*(arg_8h + 4) + 4);\n            fcn.00b99997();\n            pcVar5 = _sym.imp.KERNEL32.dll_WritePrivateProfileStringW;\n            (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(**(iVar6 + 8), 0, 0, uVar2);\n            (*pcVar5)(0, 0, 0, uVar2);\n            fcn.00b99a20();\n            arg_ch[3] = 1;\n            *arg_ch = 1;\n        }\n        else {\n            fcn.00be6aa3(1, 0);\n        }\n    }\n    *var_10h = *var_10h + -1;\n    if (*var_10h == 0) {\n        fcn.00bb106c(var_10h);\n        fcn.00bb106c(var_14h);\n    }\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 770
    },
    "00bff4a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bff4a5(int32_t arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t unaff_EDI;\n    ulong uVar7;\n    uint arg_8h_00;\n    uchar auStack28 [24];\n    \n    if (*(**(arg_8h + 4) + 0xc) == 4) {\n        iVar2 = fcn.00bb0ff6(0x38);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.00b95906();\n        }\n        iVar6 = **(arg_8h + 4);\n        fcn.00b99997();\n        arg_8h_00 = 1;\n        cVar1 = fcn.00b95956(*(iVar6 + 8), 1);\n        if (cVar1 == '\\0') {\n            if (iVar2 != 0) {\n                fcn.00b95a1a(extraout_ECX);\n            }\ncode_r0x00bff501:\n            fcn.00b99a20();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n            return 0;\n        }\n    }\n    else {\n        arg_8h_00 = 0;\n        cVar1 = fcn.00bff7df(&stack0xffffffe4, **(arg_8h + 4), 0);\n        if ((cVar1 == '\\0') || (iVar2 = *(**(*(in_ECX + 0x194) + unaff_EDI * 4) + 4),  (*(iVar2 + 0x28) & 3) == 0))\n        goto code_r0x00bff501;\n    }\n    iVar6 = *(*(arg_8h + 4) + 4);\n    if ((*(iVar6 + 0xc) == 0xb) || (uVar3 = fcn.00b95708(),  (uVar3 & 0x10) != 0)) {\n        fcn.00bf899f();\n        uVar7 = fcn.00bf89e2();\n        iVar6 = fcn.00bf3696(uVar7 >> 0x20, uVar7);\n        if (iVar6 == uVar7) goto code_r0x00bff633;\n        cVar1 = '\\0';\n    }\n    else {\n        fcn.00b99997();\n        iVar6 = *(iVar6 + 8);\n        if (arg_10h == '\\0') {\ncode_r0x00bff5e9:\n            cVar1 = fcn.00bf36e5(0xbff5f1);\n        }\n        else {\n            iVar5 = *(iVar6 + 4);\n            if (iVar5 != 0) {\n                piVar4 = fcn.00b97b20(iVar5 + -1);\n                if ((*piVar4 == 0xd) || (piVar4 = fcn.00b97b20(arg_8h_00),  *piVar4 == 10)) goto code_r0x00bff5e9;\n                iVar5 = *(iVar6 + 4);\n            }\n            fcn.00b97b76(iVar5 + 2);\n            fcn.00b981a7(iVar6);\n            fcn.00b97e0b(0xc4a470);\n            cVar1 = fcn.00bf36e5(&stack0xffffffd0);\n            fcn.00b95a64();\n        }\n    }\n    if (cVar1 == '\\0') {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\ncode_r0x00bff633:\n    if (*(**(arg_8h + 4) + 0xc) != 4) {\n        return 0;\n    }\n    fcn.00b95dcf();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    fcn.00b95a1a(extraout_ECX_00);\n    return 0;\n}\n",
        "token_count": 990
    },
    "00bff835": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bff835(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar2 = 8;\n        if (7 < uVar1) {\n            uVar2 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar2;\n        uVar3 = fcn.00bb0ff6(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00bb1080(uVar3, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.00bb106c(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar3;\n    }\n    puVar4 = fcn.00bb0ff6(4);\n    if (puVar4 == NULL) {\n        puVar4 = NULL;\n    }\n    else {\n        *puVar4 = *arg_8h;\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar4;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 377
    },
    "00bffb70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bffb70(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    uint item;\n    uchar auStack12 [8];\n    \n    item = 0xffffffff;\n    uVar1 = *(arg_8h + 8);\n    if (uVar1 != 0) {\n        item = fcn.00b99c9c();\n    }\n    if ((uVar1 < 2) || (iVar2 = fcn.00b99c9c(),  iVar2 != 1)) {\n        iVar2 = 0;\n    }\n    iVar2 = fcn.00c1804a(item, auStack12, iVar2);\n    if ((unaff_EDI < 1) && (iVar2 != 0)) {\n        fcn.00b99bf8(iVar2);\n        fcn.00bb106c(iVar2);\n    }\n    else {\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = unaff_EDI;\n    }\n    return 0;\n}\n",
        "token_count": 262
    },
    "00bffbf6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.00bffbf6(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint Msg;\n    uint arg_8h_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    ushort uStackY8228;\n    uint uStackY84;\n    uint var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00bc1b90();\n    iVar4 = arg_8h;\n    iVar5 = 0;\n    arg_8h = 0;\n    uVar1 = *(iVar4 + 8);\n    if (3 < uVar1) {\n        var_10h = 0xbffc26;\n        iVar5 = fcn.00b99c9c();\n    }\n    uVar3 = arg_8h;\n    if (2 < uVar1) {\n        var_10h = 0xbffc3b;\n        uVar3 = fcn.00b99c9c();\n    }\n    var_10h = &stack0xffffdfdc;\n    var_14h = &fcn.00bffbf6::var_18h;\n    uStackY8228 = 0xfff;\n    var_18h = &fcn.00bffbf6::arg_8h;\n    var_1ch = &fcn.00bffbf6::var_14h;\n    iVar4 = iVar5;\n    Msg = fcn.00b99c9c();\n    arg_8h_00 = fcn.00b99c9c();\n    iVar4 = fcn.00c18752(arg_8h_00, Msg, uVar3, iVar4, &fcn.00bffbf6::var_1ch, var_1ch, var_18h, var_14h, var_10h);\n    puVar2 = arg_ch;\n    if (iVar4 == 0) {\n        fcn.00b99a20();\n        *puVar2 = 0;\n        puVar2[3] = 1;\n        fcn.00be6aa3(1, 0);\n    }\n    else if (iVar5 == 1) {\n        fcn.00b99bf8(&stack0xffffdfdc);\n    }\n    else {\n        uVar3 = fcn.00b9942e();\n        fcn.00b991b0(uVar3, 1);\n        var_10h = var_1ch;\n        uStackY84 = 0xbffcf0;\n        fcn.00b99040(uVar3, &fcn.00bffbf6::var_10h, 1);\n        fcn.00b99a20();\n        var_10h = var_14h;\n        fcn.00b99040(uVar3, &fcn.00bffbf6::var_10h, 1);\n        fcn.00b99a20();\n        if (iVar5 == 2) {\n            var_10h = arg_8h;\n            fcn.00b99040(uVar3, &fcn.00bffbf6::var_10h, 1);\n            fcn.00b99a20();\n            var_10h = var_18h;\n            fcn.00b99040(uVar3, &fcn.00bffbf6::var_10h, 1);\n            fcn.00b99a20();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 924
    },
    "00c00158": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c00158(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint item;\n    uint uVar2;\n    uint unaff_ESI;\n    \n    fcn.00b977c7();\n    if (2 < *(arg_8h + 8)) {\n        iVar1 = *(*(arg_8h + 4) + 8);\n        fcn.00b99997();\n        fcn.00b981a7(*(iVar1 + 8));\n    }\n    iVar1 = *(*(arg_8h + 4) + 4);\n    fcn.00b99997();\n    uVar2 = **(iVar1 + 8);\n    item = fcn.00b99c9c();\n    uVar2 = fcn.00c18c44(item, uVar2, unaff_ESI);\n    fcn.00b99a20();\n    arg_ch[3] = 1;\n    *arg_ch = uVar2;\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 242
    },
    "00c001dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c001dc(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_20h;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.00bf89bb();\n    }\n    arg_20h = fcn.00b99c9c();\n    uVar1 = fcn.00b92b72(0, 0xffffffff, 0, 0xffffffff, uVar1, 0xffffffff, arg_20h);\n    fcn.00b99a20();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 168
    },
    "00c00231": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c00231(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_1ch;\n    uint uVar1;\n    uint arg_20h;\n    \n    uVar1 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.00bf89bb();\n    }\n    arg_20h = 0xffffffff;\n    arg_1ch = fcn.00b99c9c();\n    uVar1 = fcn.00b92b72(0, 0xffffffff, 0, 0xffffffff, uVar1, arg_1ch, arg_20h);\n    fcn.00b99a20();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 186
    },
    "00c00286": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c00286(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_8h_00;\n    uint var_14h;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    uVar1 = *(arg_8h + 8);\n    fcn.00b977c7();\n    var_4h = 0xffffffff;\n    arg_8h = 2;\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    if (5 < uVar1) {\n        arg_8h = fcn.00b99c9c();\n    }\n    if (4 < uVar1) {\n        iVar2 = *(*(iVar2 + 4) + 0x10);\n        if (*(iVar2 + 0xc) != 4) goto code_r0x00c0035d;\n        fcn.00b99997();\n        fcn.00b981a7(*(iVar2 + 8));\n    }\n    if (3 < uVar1) {\n        var_4h = fcn.00b99c9c();\n    }\n    if (uVar1 < 3) {\n        uVar3 = 0xffffffff;\n    }\n    else {\n        uVar3 = fcn.00b99c9c();\n    }\n    fcn.00b99cf8();\n    arg_8h_00 = fcn.00b99c9c();\n    uVar3 = fcn.00c191d1(arg_8h_00, uVar3, var_14h, var_4h, arg_8h);\n    fcn.00b99a20();\n    arg_ch[3] = 1;\n    *arg_ch = uVar3;\ncode_r0x00c0035d:\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 450
    },
    "00c00370": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c00370(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    uint lpszFile;\n    uchar *arg_8h_01;\n    uchar auStack28 [4];\n    uint uStack24;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack16 = 0;\n    uVar3 = 0xffffffff;\n    uStack24 = 0xffffffff;\n    uStack12 = 1;\n    uVar1 = *(arg_8h + 8);\n    if (3 < uVar1) {\n        uVar3 = fcn.00b99c9c();\n    }\n    if (2 < uVar1) {\n        fcn.00b99e9c(*(*(arg_8h + 4) + 8));\n    }\n    arg_8h_01 = auStack28;\n    fcn.00b99ac0(arg_8h_01);\n    iVar2 = *(*(arg_8h + 4) + 4);\n    fcn.00b99997();\n    lpszFile = **(iVar2 + 8);\n    arg_8h_00 = fcn.00b99c9c();\n    uVar3 = fcn.00c192b0(arg_8h_00, lpszFile, uVar3, arg_8h_01);\n    fcn.00b99a20();\n    arg_ch[3] = 1;\n    *arg_ch = uVar3;\n    fcn.00b99a20();\n    return 0;\n}\n",
        "token_count": 375
    },
    "00c0041c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0041c(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    \n    uVar1 = 0;\n    if (2 < *(arg_8h + 8)) {\n        uVar1 = fcn.00b99c9c();\n    }\n    arg_ch_00 = fcn.00b99c9c();\n    arg_8h_00 = fcn.00b99c9c();\n    uVar1 = fcn.00c19962(arg_8h_00, arg_ch_00, uVar1);\n    fcn.00b99a20();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 186
    },
    "00c00576": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c00576(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint X;\n    uint hWnd;\n    uint arg_10h;\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = 0xffffffff;\n    var_4h = 0xffffffff;\n    arg_10h = 0xffffffff;\n    if (4 < *(arg_8h + 8)) {\n        var_4h = fcn.00b99c9c();\n    }\n    if (3 < *(arg_8h + 8)) {\n        uVar1 = fcn.00b99c9c();\n    }\n    if (2 < *(arg_8h + 8)) {\n        arg_10h = fcn.00b99c9c();\n    }\n    X = fcn.00b99c9c();\n    hWnd = fcn.00b99c9c();\n    uVar1 = fcn.00c19a63(hWnd, X, arg_10h, uVar1, var_4h);\n    fcn.00b99a20();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 273
    },
    "00c00602": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c00602(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    \n    uVar1 = 0xffffffff;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.00b99c9c();\n    }\n    arg_8h_00 = fcn.00b99c9c();\n    uVar1 = fcn.00c19bf7(arg_8h_00, uVar1);\n    fcn.00b99a20();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 159
    },
    "00c0068c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0068c(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    \n    uVar1 = 0xffffffff;\n    if (2 < *(arg_8h + 8)) {\n        uVar1 = fcn.00b99c9c();\n    }\n    arg_ch_00 = fcn.00b99c9c();\n    arg_8h_00 = fcn.00b99c9c();\n    uVar1 = fcn.00c1a2c5(arg_8h_00, arg_ch_00, uVar1);\n    fcn.00b99a20();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 190
    },
    "00c006e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c006e1(uint32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    char cVar5;\n    uint8_t uVar6;\n    uint arg_8h_00;\n    uint uVar7;\n    uint arg_ch_00;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = var_4h;\n    uVar3 = arg_8h;\n    uVar7 = 0;\n    var_8h = 0;\n    var_4h = var_4h & 0xffffff00;\n    arg_8h = arg_8h & 0xffffff00;\n    uVar1 = *(uVar3 + 8);\n    if (2 < uVar1) {\n        iVar2 = *(*(uVar3 + 4) + 8);\n        cVar5 = fcn.00b99dae(0x29);\n        if (cVar5 == '\\0') {\n            fcn.00b99997();\n            uVar7 = **(iVar2 + 8);\n        }\n    }\n    if (3 < uVar1) {\n        cVar5 = fcn.00b99dae(0x29);\n        if (cVar5 == '\\0') {\n            var_8h = fcn.00b99c9c();\n        }\n    }\n    if (4 < uVar1) {\n        cVar5 = fcn.00b99dae(0x29);\n        if (cVar5 == '\\0') {\n            uVar6 = fcn.00b99c9c();\n            var_4h = uVar4 & 0xffffff00 | uVar6 & 0xffffff01;\n            uVar6 = fcn.00b99c9c();\n            arg_8h = uVar3 & 0xffffff00 | uVar6 >> 1 & 0xffffff01;\n        }\n    }\n    iVar2 = *(*(uVar3 + 4) + 4);\n    fcn.00b99997();\n    arg_ch_00 = **(iVar2 + 8);\n    arg_8h_00 = fcn.00b99c9c();\n    uVar7 = fcn.00c1a428(arg_8h_00, arg_ch_00, uVar7, var_8h, var_4h, arg_8h);\n    fcn.00b99a20();\n    *arg_ch = uVar7;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 596
    },
    "00c0080a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0080a(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint *var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = arg_ch;\n    var_4h = 0;\n    arg_8h_00 = fcn.00b9942e();\n    fcn.00b991b0(arg_8h_00, 1);\n    arg_8h_01 = var_4h;\n    if (*(arg_8h + 8) != 0) {\n        arg_8h_01 = fcn.00bf89bb();\n    }\n    cVar2 = fcn.00c1b057(arg_8h_01, &arg_ch, &arg_8h, &var_4h, &var_8h, &var_ch);\n    if (cVar2 == '\\0') {\n        fcn.00b99a20();\n        *puVar1 = 0;\n        puVar1[3] = 1;\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        var_1ch = arg_ch;\n        var_14h = 0;\n        var_10h = 1;\n        fcn.00b99040(arg_8h_00, &var_1ch, 1);\n        fcn.00b99a20();\n        var_1ch = arg_8h;\n        var_14h = 0;\n        var_10h = 1;\n        fcn.00b99040(arg_8h_00, &var_1ch, 1);\n        fcn.00b99a20();\n        var_1ch = var_4h;\n        var_14h = 0;\n        var_10h = 1;\n        fcn.00b99040(arg_8h_00, &var_1ch, 1);\n        fcn.00b99a20();\n        var_1ch = var_8h;\n        var_14h = 0;\n        var_10h = 1;\n        fcn.00b99040(arg_8h_00, &var_1ch, 1);\n        fcn.00b99a20();\n        var_1ch = var_ch;\n        var_14h = 0;\n        var_10h = 1;\n        fcn.00b99040(arg_8h_00, &var_1ch, 1);\n        fcn.00b99a20();\n    }\n    return 0;\n}\n",
        "token_count": 625
    },
    "00c0094f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0094f(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    uint var_34h;\n    uint var_30h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00b977c7();\n    if ((*0xc567bc == '\\x01') || (cVar3 = fcn.00be6bf6(&var_34h),  cVar3 == '\\0')) {\n        var_34h = 0;\n        fcn.00b97d2c(0xc1f910);\n        var_20h = 0;\n        var_1ch = 0;\n        var_18h = 0;\n        var_14h = 0;\n    }\n    uVar2 = var_14h;\n    uVar1 = var_18h;\n    if (*0xc567bc == '\\x01') {\n        fcn.00be6aa3(1, 0);\n    }\n    if ((*(arg_8h + 8) == 0) || (iVar4 = fcn.00b99c9c(),  iVar4 != 1)) {\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = var_34h;\n    }\n    else {\n        arg_8h_00 = fcn.00b9942e();\n        fcn.00b991b0(arg_8h_00, 1);\n        var_8h = 0;\n        var_4h = 1;\n        var_10h = var_34h;\n        fcn.00b99040(arg_8h_00, &var_10h, 1);\n        fcn.00b99a20();\n        var_8h = 0;\n        var_10h = var_20h;\n        var_4h = 7;\n        fcn.00b99040(arg_8h_00, &var_10h, 1);\n        fcn.00b99a20();\n        var_8h = 0;\n        var_10h = var_1ch;\n        var_4h = 7;\n        fcn.00b99040(arg_8h_00, &var_10h, 1);\n        fcn.00b99a20();\n        var_8h = 0;\n        var_4h = 1;\n        var_10h = uVar1;\n        fcn.00b99040(arg_8h_00, &var_10h, 1);\n        fcn.00b99a20();\n        var_8h = 0;\n        var_4h = 1;\n        var_10h = uVar2;\n        fcn.00b99040(arg_8h_00, &var_10h, 1);\n        fcn.00b99a20();\n    }\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 730
    },
    "00c00ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c00ae0(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint arg_8h_00;\n    uint arg_10h;\n    int32_t iVar2;\n    uint *var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = arg_ch;\n    var_4h = 0;\n    arg_8h_00 = fcn.00b9942e();\n    fcn.00b991b0(arg_8h_00, 1);\n    arg_10h = var_4h;\n    if (*(arg_8h + 8) != 0) {\n        arg_10h = fcn.00bf89bb();\n    }\n    iVar2 = fcn.00c1b140(&arg_ch, &arg_8h, arg_10h);\n    if (iVar2 == 0) {\n        fcn.00be6aa3(1, 0);\n        fcn.00b99a20();\n        *puVar1 = 0;\n        puVar1[3] = 1;\n    }\n    else {\n        var_14h = arg_ch;\n        var_ch = 0;\n        var_8h = 1;\n        fcn.00b99040(arg_8h_00, &var_14h, 1);\n        fcn.00b99a20();\n        var_14h = arg_8h;\n        var_ch = 0;\n        var_8h = 1;\n        fcn.00b99040(arg_8h_00, &var_14h, 1);\n        fcn.00b99a20();\n    }\n    return 0;\n}\n",
        "token_count": 395
    },
    "00c00cb3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c00cb3(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    char cVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint8_t *paccel;\n    uint unaff_ESI;\n    uint8_t *puVar5;\n    uchar *arg_18h;\n    uchar *arg_1ch;\n    uint8_t *puVar6;\n    uint uStack40;\n    uchar auStack36 [4];\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    int32_t *piStack20;\n    \n    uStack32 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uStack32 = fcn.00bf89bb();\n    }\n    if ((**(arg_8h + 4))[3] == 0x5) {\n        arg_8h_00 = ***(arg_8h + 4);\n        if (*(*arg_8h_00 + 0x10c) == 2) {\n            puVar6 = 0x2;\n            iVar3 = fcn.00b98e6b(2);\n            if (iVar3 == 2) {\n                puVar4 = fcn.00b98e6b(1);\n                paccel = fcn.00bb0ff6(-(ZEXT48(puVar4) * 6 >> 0x20 != 0) | ZEXT48(puVar4) * 6);\n                puVar5 = paccel;\n                if (0 < puVar4) {\n                    do {\n                        paccel = puVar6;\n                        iVar3 = fcn.00b98ea0(arg_8h_00, 1, 2);\n                        fcn.00b99997();\n                        puVar4 = *(iVar3 + 8);\n                        uStack32 = *puVar4;\n                        uStack28 = puVar4[1];\n                        uStack24 = puVar4[2];\n                        piStack20 = puVar4[3];\n                        *piStack20 = *piStack20 + 1;\n                        fcn.00b98ea0(arg_8h_00, 1, 2);\n                        uVar2 = fcn.00b99c9c();\n                        arg_1ch = &stack0xffffffcb;\n                        arg_18h = &stack0xffffffca;\n                        puVar4 = &uStack32;\n                        cVar1 = fcn.00bb023b(puVar4, auStack36, &stack0xffffffc8, &stack0xffffffc9, arg_18h, arg_1ch);\n                        if (cVar1 == '\\0') {\n                            fcn.00bb106c(paccel);\n                            fcn.00b99a20();\n                            *arg_ch = 0;\n                            arg_ch[3] = 1;\n                            fcn.00b95a64();\n                            return 0;\n                        }\n                        *puVar5 = 1;\n                        if (arg_18h != '\\0') {\n                            *puVar5 = 5;\n                        }\n                        if (arg_18h >> 8 != '\\0') {\n                            *puVar5 = *puVar5 | 8;\n                        }\n                        if (arg_18h >> 0x10 != '\\0') {\n                            *puVar5 = *puVar5 | 0x10;\n                        }\n                        *(puVar5 + 2) = unaff_ESI;\n                        *(puVar5 + 4) = uVar2;\n                        fcn.00b95a64();\n                        puVar5 = puVar5 + 6;\n                        puVar6 = paccel;\n                    } while (arg_1ch + 1 < puVar4);\n                }\n                fcn.00c1b236(paccel, puVar4, uStack40);\n                fcn.00bb106c(paccel);\n                return 0;\n            }\n        }\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n    }\n    else {\n        fcn.00c1b236(0, 0, uStack32);\n    }\n    return 0;\n}\n",
        "token_count": 943
    },
    "00c00e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c00e80(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_18h;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint uVar3;\n    \n    iVar2 = arg_8h;\n    uVar3 = 0xffffffff;\n    arg_8h = 0xffffffff;\n    uVar1 = *(iVar2 + 8);\n    if (2 < uVar1) {\n        uVar3 = fcn.00b99c9c();\n    }\n    if (3 < uVar1) {\n        arg_8h = fcn.00b99c9c();\n    }\n    if (uVar1 < 5) {\n        arg_18h = 0;\n    }\n    else {\n        arg_18h = fcn.00bf89bb();\n    }\n    arg_ch_00 = fcn.00b99c9c();\n    arg_8h_00 = fcn.00b99c9c();\n    uVar3 = fcn.00c1b2bc(arg_8h_00, arg_ch_00, uVar3, arg_8h, arg_18h);\n    fcn.00b99a20();\n    *arg_ch = uVar3;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 316
    },
    "00c00f09": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c00f09(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_10h;\n    uint arg_ch;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    arg_ch = 0;\n    arg_8h = 2;\n    uVar1 = *(iVar2 + 8);\n    if (uVar1 != 0) {\n        arg_8h = fcn.00b99c9c();\n    }\n    if (1 < uVar1) {\n        arg_ch = fcn.00b99c9c();\n    }\n    if (uVar1 < 3) {\n        arg_10h = 0;\n    }\n    else {\n        arg_10h = fcn.00bf89bb();\n    }\n    fcn.00c1b31c(arg_8h, arg_ch, arg_10h);\n    return 0;\n}\n",
        "token_count": 218
    },
    "00c01072": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c01072(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uVar2 = fcn.00bf89bb();\n    }\n    iVar1 = **(arg_8h + 4);\n    fcn.00b99997();\n    uVar2 = fcn.00b92b72(**(iVar1 + 8), 0xffffffff, 0, 0xffffffff, uVar2, 0xffffffff, 0xffffffff);\n    fcn.00b99a20();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 179
    },
    "00c010cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c010cc(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_14h;\n    \n    uVar2 = 0;\n    arg_14h = 0xffffffff;\n    if (2 < *(arg_8h + 8)) {\n        uVar2 = fcn.00bf89bb();\n    }\n    if (1 < *(arg_8h + 8)) {\n        arg_14h = fcn.00b99c9c();\n    }\n    iVar1 = **(arg_8h + 4);\n    fcn.00b99997();\n    uVar2 = fcn.00b92b72(0, 0xffffffff, **(iVar1 + 8), arg_14h, uVar2, 0xffffffff, 0xffffffff);\n    fcn.00b99a20();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 230
    },
    "00c0113e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0113e(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    uint dwNewLong;\n    \n    uVar1 = 0;\n    dwNewLong = 0xffffffff;\n    if (2 < *(arg_8h + 8)) {\n        uVar1 = fcn.00bf89bb();\n    }\n    if (1 < *(arg_8h + 8)) {\n        dwNewLong = fcn.00b99c9c();\n    }\n    arg_8h_00 = fcn.00b99c9c();\n    uVar1 = fcn.00c1b405(arg_8h_00, dwNewLong, uVar1);\n    fcn.00b99a20();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 208
    },
    "00c011a2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c011a2(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = 0;\n    if (*(arg_8h + 8) != 0) {\n        arg_8h_00 = fcn.00bf89bb();\n    }\n    if (*0xc567d0 == 0) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        fcn.00b92f66(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 151
    },
    "00c011ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c011ed(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    \n    uVar1 = 0xffffffff;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.00b99c9c();\n    }\n    arg_8h_00 = fcn.00bf89bb();\n    uVar1 = fcn.00c1b4e1(arg_8h_00, uVar1);\n    fcn.00b99a20();\n    *arg_ch = uVar1;\n    arg_ch[3] = 7;\n    return 0;\n}\n",
        "token_count": 159
    },
    "00c013cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c013cb(uint arg_8h, uint *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t noname_4;\n    int32_t unaff_EBX;\n    uint uVar4;\n    int32_t iVar5;\n    char cVar6;\n    uint *puStack64;\n    int32_t aiStack60 [2];\n    uint uStack52;\n    uint uStack48;\n    uint auStack44 [2];\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    iVar3 = *0xc56408;\n    aiStack60[0] = *0xc56408;\n    if ((*0xc56408 != 1) && (*0xc56287 == '\\0')) {\n        uVar4 = 0;\n        *0xc56408 = 0;\n        iVar2 = fcn.00b99fbd(arg_8h);\n        if (*(iVar2 + 0x14) < 5) {\n            auStack44[0] = 0;\n            uStack36 = 0;\n            uStack32 = 1;\n            aiStack60[0] = 0;\n            uStack52 = 0;\n            uStack48 = 1;\n            uStack28 = 0xc1fb84;\n            uStack24 = 0;\n            uStack20 = 0;\n            uStack16 = 0;\n            noname_4 = iVar2;\n            if (0 < *(iVar2 + 0x14)) {\n                iVar5 = 0;\n                do {\n                    if (iVar5 == 0) {\n                        fcn.00b99a20();\n                        aiStack60[0] = arg_10h;\ncode_r0x00c0149a:\n                        uStack48 = 7;\n                    }\n                    else {\n                        if (iVar5 != 1) {\n                            if (iVar5 == 2) {\n                                fcn.00b99a20();\n                                aiStack60[0] = arg_18h;\n                            }\n                            else {\n                                if (iVar5 != 3) goto code_r0x00c014a6;\n                                fcn.00b99a20();\n                                aiStack60[0] = arg_1ch;\n                            }\n                            goto code_r0x00c0149a;\n                        }\n                        fcn.00b99a20();\n                        uStack48 = 1;\n                        aiStack60[0] = arg_14h;\n                    }\ncode_r0x00c014a6:\n                    fcn.00be6665(aiStack60);\n                    iVar5 = iVar5 + 1;\n                    noname_4 = extraout_ECX;\n                    iVar3 = iVar2;\n                } while (iVar5 < *(unaff_EBX + 0x14));\n            }\n            cVar6 = '\\0';\n            cVar1 = fcn.00c03bb3(arg_8h, &uStack28, auStack44, 0, noname_4, &stack0xffffffbb);\n            if ((cVar1 != '\\0') && (*0xc56408 != 1)) {\n                *0xc56408 = iVar3;\n                if (aiStack60[0] == 4) {\n                    fcn.00b99997();\n                    iVar3 = fcn.00bb313d(*puStack64, L\"GUI_RUNDEFMSG\");\n                    if (iVar3 == 0) {\n                        uVar4 = 2;\n                        goto code_r0x00c01522;\n                    }\n                }\n                if (cVar6 == '\\0') {\n                    fcn.00be66f4();\n                    fcn.00b99a20();\n                    fcn.00b99a20();\n                    return 0;\n                }\n                uVar4 = fcn.00b99c9c();\n                *arg_ch = uVar4;\n                uVar4 = 1;\n            }\ncode_r0x00c01522:\n            fcn.00be66f4();\n            fcn.00b99a20();\n            fcn.00b99a20();\n            return uVar4;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 978
    },
    "00c01a5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00c01a5b(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    uint arg_8h_01;\n    uint *arg_ch_00;\n    uint *arg_10h_00;\n    \n    if (arg_ch != '\\0') {\n        uVar1 = fcn.00c01b21(arg_8h, arg_10h);\n        return uVar1;\n    }\n    iVar3 = in_ECX[0x15];\n    iVar2 = (*_sym.imp.WININET.dll_InternetConnectW)\n                      (in_ECX[1], *(arg_8h + 0x10), *(arg_8h + 0x78), *(arg_8h + 0x20), *(arg_8h + 0x30), \n                       *(arg_8h + 0x70), 0, 0);\n    *in_ECX = iVar2;\n    if (iVar2 == 0) {\n        uVar1 = fcn.00c02777(0x15, 0xdeadbeef, 0);\n        return uVar1;\n    }\n    arg_8h_00 = (*_sym.imp.WININET.dll_FtpOpenFileW)(iVar2, *(arg_8h + 0x60), 0x80000000, iVar3);\n    if (arg_8h_00 == NULL) {\n        arg_ch_00 = 0xdeadbeef;\n        arg_8h_01 = 0x16;\n        arg_10h_00 = arg_8h_00;\n    }\n    else {\n        arg_10h_00 = &arg_ch;\n        arg_ch_00 = arg_8h_00;\n        iVar3 = (*_sym.imp.WININET.dll_FtpGetFileSize)();\n        in_ECX[4] = iVar3;\n        in_ECX[5] = arg_ch;\n        if (arg_10h != '\\0') {\n            uVar1 = fcn.00c025e2(arg_8h_00);\n            goto code_r0x00c01b0b;\n        }\n        arg_8h_01 = 0;\n    }\n    uVar1 = fcn.00c02777(arg_8h_01, arg_ch_00, arg_10h_00);\ncode_r0x00c01b0b:\n    uVar4 = uVar1;\n    if (arg_8h_00 != NULL) {\n        uVar4 = (*_sym.imp.WININET.dll_InternetCloseHandle)(arg_8h_00);\n    }\n    return uVar4 & 0xffffff00 | uVar1 & 0xff;\n}\n",
        "token_count": 648
    },
    "00c01c02": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00c01c02(uint arg_8h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint in_stack_ffffff58;\n    uint in_stack_ffffff5c;\n    uint arg_10h;\n    int32_t iVar4;\n    uint var_7ch;\n    int32_t var_ch;\n    \n    fcn.00c01875();\n    cVar1 = fcn.00c02882(*(in_ECX + 0x20), &var_7ch);\n    if (cVar1 == '\\0') {\n        arg_10h = 1;\n    }\n    else if ((var_ch == 3) || (var_ch == 1)) {\n        cVar1 = fcn.00c024ca(var_ch);\n        if (cVar1 == '\\0') {\n            arg_10h = 0xdeadbeef;\n            in_stack_ffffff5c = 3;\n        }\n        else {\n            if (var_ch == 1) {\n                iVar4 = in_ECX + 0x8c;\n                uVar3 = fcn.00c0257b(iVar4);\n                uVar2 = fcn.00c01a5b(&var_7ch, uVar3 & 0xff, iVar4);\n                goto code_r0x00c01cb3;\n            }\n            if (var_ch == 3) {\n                iVar4 = in_ECX + 0x58;\n                uVar3 = fcn.00c0257b(iVar4);\n                uVar2 = fcn.00c01d09(&var_7ch, uVar3 & 0xff, iVar4);\n                goto code_r0x00c01cb3;\n            }\n            arg_10h = 0xdeadbeef;\n            in_stack_ffffff5c = 4;\n        }\n    }\n    else {\n        arg_10h = 2;\n    }\n    uVar2 = fcn.00c02777(in_stack_ffffff58, in_stack_ffffff5c, arg_10h);\ncode_r0x00c01cb3:\n    uVar3 = fcn.00c018ff();\n    return uVar3 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 511
    },
    "00c01d09": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00c01d09(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    ulong uVar5;\n    uint arg_8h_00;\n    uint *arg_ch_00;\n    int32_t iVar6;\n    uint var_24h;\n    ushort var_6h;\n    uint32_t var_4h;\n    \n    iVar6 = arg_8h;\n    uVar4 = in_ECX[0x15];\n    if (*(arg_8h + 0x74) == 4) {\n        uVar4 = uVar4 | 0x800000;\n    }\n    var_4h = uVar4;\n    iVar1 = (*_sym.imp.WININET.dll_InternetConnectW)\n                      (in_ECX[1], *(arg_8h + 0x10), *(arg_8h + 0x78), *(arg_8h + 0x20), *(arg_8h + 0x30), \n                       *(arg_8h + 0x70), 0, 0);\n    *in_ECX = iVar1;\n    if (iVar1 == 0) {\n        uVar4 = fcn.00c02777(0xb, 0xdeadbeef, 0);\n        return uVar4;\n    }\n    iVar1 = (*_sym.imp.WININET.dll_HttpOpenRequestW)(iVar1, 0, *(iVar6 + 0x60), 0, 0, 0, uVar4, 0);\n    if (iVar1 == 0) {\n        arg_8h_00 = 0xc;\n        iVar6 = iVar1;\ncode_r0x00c01e3d:\n        arg_ch_00 = 0xdeadbeef;\n    }\n    else {\n        if (arg_ch != '\\0') {\n            fcn.00c027ae(iVar1, iVar6);\n        }\n        if ((var_4h & 0x1000) != 0) {\n            arg_8h = 4;\n            (*_sym.imp.WININET.dll_InternetQueryOptionW)(iVar1, 0x1f, &arg_ch, &arg_8h);\n            arg_ch = arg_ch | 0x100;\n            (*_sym.imp.WININET.dll_InternetSetOptionW)(iVar1, 0x1f, &arg_ch, 4);\n        }\n        iVar6 = 0;\n        iVar2 = (*_sym.imp.WININET.dll_HttpSendRequestW)(iVar1, 0, 0, 0);\n        if ((iVar2 == 0) || (iVar2 = fcn.00c01cc8(iVar1),  iVar2 != 200)) {\n            iVar6 = 0;\n            arg_8h_00 = 0xd;\n            goto code_r0x00c01e3d;\n        }\n        arg_ch_00 = &arg_ch;\n        arg_ch = 0;\n        arg_8h = 0x20;\n        (*_sym.imp.WININET.dll_HttpQueryInfoW)(iVar1, 5, &var_24h, &arg_8h);\n        var_6h = 0;\n        uVar5 = fcn.00bb37d3(&var_24h);\n        in_ECX[4] = uVar5;\n        in_ECX[5] = uVar5 >> 0x20;\n        if (arg_10h != '\\0') {\n            uVar4 = fcn.00c025e2(iVar1);\n            goto code_r0x00c01e44;\n        }\n        arg_8h_00 = 0;\n    }\n    uVar4 = fcn.00c02777(arg_8h_00, arg_ch_00, iVar6);\ncode_r0x00c01e44:\n    uVar3 = uVar4;\n    if (iVar1 != 0) {\n        uVar3 = (*_sym.imp.WININET.dll_InternetCloseHandle)(iVar1);\n    }\n    return uVar3 & 0xffffff00 | uVar4 & 0xff;\n}\n",
        "token_count": 955
    },
    "00c01e70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c01e70(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    \n    fcn.00b99b9c(in_ECX + 0x78);\n    iVar1 = **(arg_8h + 4);\n    cVar2 = fcn.00b99dae(0x29);\n    if ((cVar2 == '\\0') && (fcn.00b99997(),  *(*(iVar1 + 8) + 4) != 0)) {\n        iVar1 = **(arg_8h + 4);\n        fcn.00b99997();\n        fcn.00b981a7(*(iVar1 + 8));\n        return 0;\n    }\n    fcn.00b97d2c(L\"AutoIt\");\n    return 0;\n}\n",
        "token_count": 201
    },
    "00c01f45": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c01f45(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint uVar3;\n    char cVar4;\n    int32_t iVar5;\n    \n    if (2 < *(arg_8h + 8)) {\n        fcn.00b99c9c();\n    }\n    if (3 < *(arg_8h + 8)) {\n        fcn.00b99c53();\n    }\n    iVar5 = *(*(arg_8h + 4) + 4);\n    fcn.00b99997();\n    uVar2 = **(iVar5 + 8);\n    iVar5 = **(arg_8h + 4);\n    fcn.00b99997();\n    uVar3 = **(iVar5 + 8);\n    iVar5 = in_ECX + 0x10;\n    fcn.00c017a3(iVar5);\n    uVar2 = fcn.00c016ce(uVar3, uVar2, unaff_EBX, in_ECX + 4, iVar5);\n    fcn.00c02af4(uVar2);\n    cVar4 = uVar2;\n    fcn.00c018ca();\n    piVar1 = *(in_ECX + 8);\n    fcn.00c02990(1);\n    uVar2 = 0;\n    fcn.00be6aa3(*(*piVar1 + 0x18), 0);\n    fcn.00baff61(*(*piVar1 + 0x1c), 0);\n    iVar5 = *piVar1;\n    if (cVar4 == '\\0') {\n        uVar3 = *(iVar5 + 8);\n        uVar2 = *(iVar5 + 0xc);\n    }\n    else {\n        uVar3 = *(iVar5 + 0xd8);\n    }\n    fcn.00b99a20();\n    arg_ch[3] = 2;\n    *arg_ch = uVar3;\n    arg_ch[1] = uVar2;\n    if (cVar4 == '\\0') {\n        fcn.00c02ac9();\n    }\n    return 0;\n}\n",
        "token_count": 512
    },
    "00c02309": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c02309(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_8h_00;\n    uint arg_10h;\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint uStack360;\n    uint uStack356;\n    uint uStack352;\n    \n    if (*(arg_8h + 8) < 2) {\n        arg_10h = 0;\n    }\n    else {\n        arg_10h = fcn.00b99c9c();\n    }\n    iVar1 = **(arg_8h + 4);\n    fcn.00b99997();\n    arg_8h_00 = **(iVar1 + 8);\n    iVar1 = in_ECX + 0x10;\n    fcn.00c017a3(iVar1);\n    fcn.00c016ce(arg_8h_00, 0xc1f910, arg_10h, 0, iVar1);\n    fcn.00c01c02(0);\n    fcn.00b99a20();\n    arg_ch[1] = uStack356;\n    arg_ch[3] = 2;\n    *arg_ch = uStack360;\n    fcn.00be6aa3(uStack352, 0);\n    fcn.00baff61(uStack356, 0);\n    fcn.00c018ca();\n    return 0;\n}\n",
        "token_count": 319
    },
    "00c023d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c023d1(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uchar *arg_8h_01;\n    int32_t iVar2;\n    uint uStack356;\n    int32_t iStack352;\n    \n    if (*(arg_8h + 8) < 2) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00b99c9c();\n    }\n    iVar2 = **(arg_8h + 4);\n    fcn.00b99997();\n    arg_8h_00 = **(iVar2 + 8);\n    iVar2 = in_ECX + 0x10;\n    fcn.00c017a3(iVar2);\n    fcn.00c016ce(arg_8h_00, 0xc1f910, uVar1, 0, iVar2);\n    fcn.00c02990(1);\n    if (iStack352 == 0) {\n        fcn.00c019c8(arg_ch);\n        arg_8h_01 = &stack0xfffffe74;\n        uVar1 = extraout_ECX;\n        fcn.00be6a7a(arg_8h_01);\n        fcn.00b99a20(arg_8h_01, uVar1);\n    }\n    else {\n        fcn.00be6aa3(iStack352, 0);\n        fcn.00baff61(uStack356, 0);\n        fcn.00b99bf8(0xc1f910);\n    }\n    fcn.00c018ca();\n    return 0;\n}\n",
        "token_count": 395
    },
    "00c024ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00c024ca(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint *puVar3;\n    uint uVar4;\n    uint uVar5;\n    char16_t *pcVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 1) {\n        iVar1 = *(in_ECX + 0x8c);\n    }\n    else {\n        iVar1 = *(in_ECX + 0x58);\n    }\n    puVar3 = in_ECX + 0xb0;\n    if (arg_8h != 1) {\n        puVar3 = in_ECX + 0x7c;\n    }\n    if (iVar1 == 1) {\n        pcVar6 = NULL;\n        uVar5 = 0;\n        uVar4 = 1;\n    }\n    else if (iVar1 == 2) {\n        pcVar6 = L\"<local>\";\n        uVar5 = *puVar3;\n        uVar4 = 3;\n    }\n    else {\n        pcVar6 = NULL;\n        uVar5 = 0;\n        uVar4 = 0;\n    }\n    uVar2 = (*_sym.imp.WININET.dll_InternetOpenW)(*(in_ECX + 0xc0), uVar4, uVar5, pcVar6, 0);\n    *(in_ECX + 4) = uVar2;\n    if (uVar2 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if (*(in_ECX + 0xdc) != '\\0') {\n            var_8h = 1;\n            var_4h = 0;\n            uVar2 = (*_sym.imp.WININET.dll_InternetSetOptionW)(0, 0x32, &var_8h, 8);\n        }\n        uVar2 = uVar2 & 0xffffff00 | 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 460
    },
    "00c025e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00c026e2)\n// WARNING: Removing unreachable block (ram,0x00c026f3)\n\nuint32_t __cdecl fcn.00c025e2(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    uint var_404h;\n    uint uStack60;\n    uint uStack56;\n    uint uVar6;\n    uint uVar7;\n    uint arg_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (*(in_ECX + 0x30) == '\\0') {\n        iVar4 = fcn.00bb548b(*(in_ECX + 0x34), 0xc4a4fc);\n        if (iVar4 == 0) {\n            uVar6 = 0x1f;\n            iVar2 = iVar4;\ncode_r0x00c02693:\n            uVar7 = 0xdeadbeef;\n        }\n        else {\n            var_4h = 1;\n            do {\n                iVar2 = (*_sym.imp.WININET.dll_InternetReadFile)\n                                  (arg_8h, &fcn.00c025e2::var_404h, 0x400, &fcn.00c025e2::var_4h);\n                if (iVar2 == 0) {\n                    iVar2 = 0;\n                    uVar6 = 0x20;\n                    goto code_r0x00c02693;\n                }\n                if (var_4h == 0) break;\n                fcn.00bb4a93(&fcn.00c025e2::var_404h, var_4h, 1, iVar4);\n                puVar1 = in_ECX + 8;\n                uVar5 = *puVar1;\n                *puVar1 = *puVar1 + var_4h;\n                *(in_ECX + 0xc) = *(in_ECX + 0xc) + CARRY4(uVar5, var_4h);\n            } while (var_4h != 0);\n            if ((*(in_ECX + 8) | *(in_ECX + 0xc)) == 0) {\n                iVar2 = 0;\n                uVar7 = 0xdeadbeef;\n                uVar6 = 0x21;\n            }\n            else {\n                iVar2 = 1;\n                uVar7 = 0;\n                uVar6 = 0;\n            }\n        }\n        uVar3 = fcn.00c02777(uVar6, uVar7, iVar2);\n        uVar5 = uVar3;\n        if (iVar4 != 0) {\n            uVar5 = fcn.00bb55d6(iVar4);\n        }\n        return uVar5 & 0xffffff00 | uVar3 & 0xff;\n    }\n    var_4h = 1;\n    (*_sym.imp.WININET.dll_InternetQueryDataAvailable)();\n    do {\n        if (var_4h == 0) {\ncode_r0x00c02740:\n            if ((*(in_ECX + 8) | *(in_ECX + 0xc)) == 0) {\n                arg_10h = 0;\n                uVar7 = 0xdeadbeef;\n                uVar6 = 0x21;\n            }\n            else {\n                arg_10h = 1;\n                uVar7 = 0;\n                uVar6 = 0;\n            }\ncode_r0x00c02767:\n            uStack56 = 0xc0276e;\n            uVar5 = fcn.00c02777(uVar6, uVar7, arg_10h);\n            return uVar5;\n        }\n        uVar6 = fcn.00bb0ff6(1);\n        uStack56 = arg_8h;\n        uStack60 = 0xc02712;\n        iVar4 = (*_sym.imp.WININET.dll_InternetReadFile)();\n        if (iVar4 == 0) {\n            fcn.00bb106c();\n            arg_10h = 0;\n            uVar7 = 0xdeadbeef;\n            uVar6 = 0x20;\n            goto code_r0x00c02767;\n        }\n        if (var_4h == 0) {\n            fcn.00bb106c();\n            goto code_r0x00c02740;\n        }\n        fcn.00c02a07(uVar6, var_4h);\n        puVar1 = in_ECX + 8;\n        uVar5 = *puVar1;\n        *puVar1 = *puVar1 + var_4h;\n        *(in_ECX + 0xc) = *(in_ECX + 0xc) + CARRY4(uVar5, var_4h);\n    } while( true );\n}\n",
        "token_count": 1103
    },
    "00c027ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c027ae(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint *puVar1;\n    uint *puVar2;\n    \n    puVar1 = in_ECX + 0x90;\n    if (*(arg_ch + 0x70) != 1) {\n        puVar1 = in_ECX + 0x5c;\n    }\n    puVar2 = in_ECX + 0xa0;\n    if (*(arg_ch + 0x70) != 1) {\n        puVar2 = in_ECX + 0x6c;\n    }\n    if (puVar1[1] != 0) {\n        (*_sym.imp.WININET.dll_InternetSetOptionW)(arg_8h, 0x2b, *puVar1, puVar1[1] + 1);\n        (*_sym.imp.WININET.dll_InternetSetOptionW)(arg_8h, 0x2c, *puVar2, puVar2[1] + 1);\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "00c02990": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00c02990(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0xd0) == '\\0') || (arg_8h == '\\0')) {\n        uVar1 = fcn.00c01c02(arg_8h);\n    }\n    else {\n        fcn.00c01a2e();\n        fcn.00bb5efc(fcn.00c02a60, 0, in_ECX);\n        uVar1 = *(in_ECX + 0x18) == 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 152
    },
    "00c02a6f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00c02a6f(uint dwMilliseconds)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    bool bVar2;\n    \n    if (*in_ECX == 0) {\n        bVar2 = false;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*in_ECX, dwMilliseconds);\n        bVar2 = iVar1 == 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 109
    },
    "00c02b4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c02b4c(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        if (uVar1 < 8) {\n            uVar1 = 8;\n        }\n        *(in_ECX + 0xc) = uVar1;\n        uVar2 = fcn.00bb0ff6(-(uVar1 * 4 >> 0x20 != 0) | uVar1 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00bb1080(uVar2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.00bb106c(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar2;\n    }\n    puVar3 = fcn.00bb0ff6(8);\n    if (puVar3 == NULL) {\n        puVar3 = NULL;\n    }\n    else {\n        *puVar3 = *arg_8h;\n        puVar3[1] = arg_8h[1];\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar3;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 379
    },
    "00c02e23": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c02e23(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    ulong uVar11;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar8 = 0;\n    uVar10 = 0x10;\n    iVar7 = arg_8h;\n    if (*(arg_8h + 8) < 3) goto code_r0x00c02edb;\n    iVar3 = *(*(arg_8h + 4) + 8);\n    if (*(iVar3 + 0xc) == 10) {\n        uVar11 = fcn.00bf8991();\n        iVar7 = uVar11 >> 0x20;\n        if (uVar11 == 0x29) goto code_r0x00c02edb;\n    }\n    fcn.00b99997();\n    iVar7 = arg_8h;\n    if (**(iVar3 + 8) == 0) goto code_r0x00c02edb;\n    iVar7 = *(*(arg_8h + 4) + 8);\n    fcn.00b99997();\n    iVar1 = ***(iVar7 + 8);\n    if (iVar1 == 0x42) {\ncode_r0x00c02ed2:\n        uVar10 = 8;\n        iVar7 = arg_8h;\n    }\n    else {\n        if (iVar1 != 0x44) {\n            iVar7 = arg_8h;\n            if (iVar1 == 0x57) goto code_r0x00c02edb;\n            if (iVar1 == 0x62) goto code_r0x00c02ed2;\n            if (iVar1 != 100) {\n                if (iVar1 != 0x77) {\n                    fcn.00b99a20();\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                    fcn.00be6aa3(1, 0);\n                    return 0xffffffff;\n                }\n                goto code_r0x00c02edb;\n            }\n        }\n        uVar10 = 0x20;\n        iVar7 = arg_8h;\n    }\ncode_r0x00c02edb:\n    iVar3 = 1;\n    if (1 < *(iVar7 + 8)) {\n        iVar3 = fcn.00b99c9c();\n    }\n    uVar4 = fcn.00b99c9c();\n    uVar5 = uVar10;\n    if (uVar10 < 0x20) {\n        uVar8 = -1 << (uVar5 & 0x1f);\n    }\n    for (; iVar3 < 0; iVar3 = iVar3 + uVar10) {\n    }\n    for (; uVar10 <= iVar3; iVar3 = iVar3 - uVar10) {\n    }\n    if (iVar3 == 0) {\n        fcn.00b99a20();\n    }\n    else {\n        uVar2 = iVar3;\n        uVar6 = uVar5 - uVar2;\n        uVar9 = (1 << (uVar6 & 0x1f)) - 1;\n        if (uVar10 < 0x20) {\n            arg_8h = (uVar9 & uVar4) << (uVar2 & 0x1f) & (1 << (uVar5 & 0x1f)) - 1U;\n            uVar9 = ((1 << (uVar5 & 0x1f)) - uVar9) - 1;\n        }\n        else {\n            arg_8h = (uVar9 & uVar4) << (uVar2 & 0x1f);\n            uVar9 = ~uVar9;\n        }\n        arg_8h = uVar8 & uVar4 | arg_8h;\n        fcn.00b99a20();\n        uVar4 = 0x7fffffff >> (uVar6 - 1 & 0x1f) & (uVar9 & uVar4) >> (uVar6 & 0x1f) | arg_8h;\n    }\n    *arg_ch = uVar4;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 1022
    },
    "00c0320b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c0320b(int32_t arg_8h, ulong *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = 0;\n    iVar2 = **(arg_8h + 4);\n    fcn.00b99997();\n    iVar2 = *(iVar2 + 8);\n    cVar1 = fcn.00bafbfb(0x10);\n    if (cVar1 == '\\0') {\n        fcn.00be6aa3(1, 0);\n    }\n    if (*(arg_8h + 8) < 2) {\n        if (*(iVar2 + 4) < 9) {\n            fcn.00b99a20();\n            *(arg_ch + 0xc) = 1;\n            *arg_ch = var_ch;\n        }\n        else {\n            fcn.00b99a20();\n            *arg_ch = var_ch;\n            *(arg_ch + 0xc) = 2;\n            *(arg_ch + 4) = var_8h;\n        }\n    }\n    else {\n        iVar2 = fcn.00b99c9c();\n        if (iVar2 == 1) {\n            uVar3 = 1;\n        }\n        else if (iVar2 == 2) {\n            uVar3 = 2;\n        }\n        else if (iVar2 == 3) {\n            fcn.00c03aa2(&var_1ch, var_ch, var_8h, 2);\n            _var_ch = fcn.00b99d46();\n            fcn.00b99a20();\n            fcn.00b99a20();\n            *arg_ch = _var_ch;\n            *(arg_ch + 0xc) = 3;\n            return 0;\n        }\n        uVar3 = fcn.00c03aa2(&var_1ch, var_ch, var_8h, uVar3);\n        fcn.00b99e9c(uVar3);\n        fcn.00b99a20();\n    }\n    return 0;\n}\n",
        "token_count": 505
    },
    "00c03837": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00c03837(int32_t arg_8h, double *arg_ch)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    double dStack24;\n    uint var_1h;\n    \n    bVar1 = false;\n    if ((*(arg_8h + 8) == 3) && (iVar2 = fcn.00b99c9c(),  iVar2 == 1)) {\n        bVar1 = true;\n    }\n    fcn.00b99a20();\n    *arg_ch = 0;\n    *(arg_ch + 0xc) = 1;\n    iVar2 = *(arg_8h + 8);\n    if (iVar2 == 0) {\n        fVar5 = fcn.00bf8a71();\ncode_r0x00c039bb:\n        dStack24 = fVar5;\n    }\n    else {\n        if (iVar2 == 1) {\n            fVar6 = fcn.00b99cf8();\n            if (0 == fVar6) {\n                fcn.00b99a20();\n                dStack24 = 0.0;\n                goto code_r0x00c039c8;\n            }\n            if (fVar6 <= 0) goto code_r0x00c0396e;\n            fVar5 = fcn.00bf8a71();\n            fVar5 = fVar5 * fVar6;\n            goto code_r0x00c039bb;\n        }\n        if (1 < iVar2 - 2U) {\n            return 0;\n        }\n        if ((*(**(arg_8h + 4) + 0xc) == 5) || (*((*(arg_8h + 4))[1] + 0xc) == 5)) {\ncode_r0x00c0396e:\n            fcn.00be6aa3(1, 0);\n            return 0;\n        }\n        if (bVar1) {\n            iVar2 = fcn.00b99c9c();\n            iVar3 = fcn.00b99c9c();\n            if (iVar3 == iVar2) {\n                fcn.00b99a20();\n                *(arg_ch + 0xc) = 1;\n                *arg_ch = iVar3;\n                return 0;\n            }\n            iVar4 = iVar2 - iVar3;\n            if ((iVar3 < iVar2) && (0 < iVar4)) {\n                if (iVar4 < 0x7ffffff) {\n                    iVar4 = iVar4 + 1;\n                }\n                iVar2 = fcn.00bf8a2c();\n                fcn.00b99a20();\n                *(arg_ch + 0xc) = 1;\n                *arg_ch = iVar3 + iVar2 % iVar4;\n                return 0;\n            }\n            goto code_r0x00c0396e;\n        }\n        fVar5 = fcn.00b99cf8();\n        fVar6 = fcn.00b99cf8();\n        dStack24 = fVar6;\n        fVar7 = fVar5;\n        if (fVar7 != fVar6) {\n            if (fVar7 < fVar6 != (fVar7 == fVar6)) goto code_r0x00c0396e;\n            fVar6 = fcn.00bf8a71();\n            fVar5 = fVar6 * (fVar5 - dStack24) + dStack24;\n            goto code_r0x00c039bb;\n        }\n    }\n    fcn.00b99a20();\ncode_r0x00c039c8:\n    *arg_ch = dStack24;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 872
    },
    "00c03bb3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00c03bb3(uint arg_8h, uint arg_ch, uint *arg_10h, uint32_t arg_14h, uint noname_4, uint arg_1ch)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uStack44;\n    uchar auStack28 [24];\n    \n    fcn.00b99a20();\n    uVar4 = 0;\n    arg_10h[3] = 1;\n    *arg_10h = 0;\n    fcn.00b98561(0);\n    fcn.00b977c7();\n    cVar1 = fcn.00c03cdd(arg_8h, arg_ch, auStack28, arg_14h);\n    if (cVar1 == '\\0') goto code_r0x00c03c76;\n    fcn.00b963a0(0, uStack44, &stack0xffffffc4);\n    if (arg_14h < 2) {\ncode_r0x00c03c6b:\n        uVar4 = 1;\n    }\n    else {\n        arg_8h_00 = fcn.00ba3ccb();\n        iVar2 = fcn.00b9fe40(0, &stack0xffffffb8, &stack0xffffffb4, arg_10h, arg_1ch);\n        if (-1 < iVar2) {\n            if (arg_8h_00 != 0) {\n                fcn.00ba3c19(arg_8h_00);\n            }\n            goto code_r0x00c03c6b;\n        }\n        if (arg_8h_00 != 0) {\n            fcn.00ba3c19(arg_8h_00);\n        }\n    }\n    fcn.00b97776();\ncode_r0x00c03c76:\n    fcn.00b95a64();\n    uVar3 = fcn.00b9843f();\n    return uVar3 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 482
    },
    "00c03c94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c03c94(int32_t arg_8h, uint *arg_ch, uint hWnd)\n\n{\n    uint lpRect;\n    uint var_ch;\n    \n    if (arg_8h == 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n        *arg_ch = lpRect;\n        arg_ch[1] = var_ch;\n    }\n    else {\n        *arg_ch = 0;\n        arg_ch[1] = 0;\n        if (arg_8h == 2) {\n            (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00c03de3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c03de3(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    int32_t *unaff_EBX;\n    int32_t iVar5;\n    bool bVar6;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t *piStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    int32_t *piStack28;\n    uchar auStack24 [20];\n    \n    iVar5 = 0;\n    if (*(in_ECX + 0x454) != 0) {\n        if (*(arg_8h + 8) == 0) {\n            *(**(in_ECX + 0x450) + 0x11) = 1;\n        }\n        else {\n            iVar1 = **(arg_8h + 4);\n            bVar6 = *(iVar1 + 0xc) != 0xe;\n            if (bVar6) {\n                fcn.00b99997();\n                puVar3 = *(iVar1 + 8);\n                uStack40 = *puVar3;\n                uStack36 = puVar3[1];\n                uStack32 = puVar3[2];\n                piStack28 = puVar3[3];\n                puVar3 = &uStack40;\n                *piStack28 = *piStack28 + 1;\n            }\n            else {\n                puVar3 = fcn.00bf7ba4(auStack24);\n            }\n            uStack60 = *puVar3;\n            uStack56 = puVar3[1];\n            uStack52 = puVar3[2];\n            piStack48 = puVar3[3];\n            *piStack48 = *piStack48 + 1;\n            if (bVar6) {\n                fcn.00b95a64();\n            }\n            else {\n                fcn.00b95a64();\n            }\n            fcn.00b97faf();\n            (*_sym.imp.USER32.dll_CharUpperBuffW)(uStack60, uStack56);\n            piVar4 = *(in_ECX + 0x44c);\n            while (piVar4 != NULL) {\n                cVar2 = fcn.00ba5ee9();\n                if (cVar2 != '\\0') {\n                    *(*piVar4 + 0x11) = 1;\n                    break;\n                }\n                piVar4 = unaff_EBX;\n                fcn.00be6cea(&uStack60);\n                unaff_EBX = piVar4;\n            }\n            fcn.00b95a64();\n        }\n        piVar4 = *(in_ECX + 0x44c);\n        while (piVar4 != NULL) {\n            if (*(*piVar4 + 0x11) == '\\0') {\n                iVar5 = iVar5 + 1;\n            }\n            piVar4 = unaff_EBX;\n            fcn.00be6cea(&uStack60);\n            unaff_EBX = piVar4;\n        }\n    }\n    fcn.00b99a20();\n    *arg_ch = iVar5;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 738
    },
    "00c03f54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c03f54(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint arg_8h_00;\n    char cVar5;\n    uint in_stack_ffffff64;\n    uchar *arg_8h_01;\n    char16_t *arg_10h;\n    uint uStack136;\n    uint uStack132;\n    uchar auStack116 [4];\n    uint32_t uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    int32_t *piStack84;\n    \n    cVar5 = in_stack_ffffff64 >> 0x10;\n    uStack108 = 0;\n    uStack104 = 0;\n    uStack112._0_3_ = CONCAT12(1, uStack112);\n    uStack112 = uStack112 & 0xff000000 | uStack112;\n    iVar3 = **(arg_8h + 4);\n    uStack132 = 0xc03f80;\n    fcn.00b99997();\n    puVar1 = *(iVar3 + 8);\n    uStack96 = *puVar1;\n    uStack92 = puVar1[1];\n    uStack88 = puVar1[2];\n    piStack84 = puVar1[3];\n    *piStack84 = *piStack84 + 1;\n    uStack132 = 0xc03fa9;\n    fcn.00b97faf();\n    uStack132 = uStack92;\n    uStack136 = uStack96;\n    (*_sym.imp.USER32.dll_CharUpperBuffW)();\n    fcn.00ba5bfd();\n    arg_10h = L\"^[A-Z\\\\d_]+$\";\n    fcn.00b97f41(L\"^[A-Z\\\\d_]+$\");\n    uStack112 = 0;\n    arg_8h_01 = &stack0xffffffa4;\n    iVar3 = fcn.00ba5c72(arg_8h_01);\n    if (iVar3 == 0) {\n        fcn.00ba5d24(&stack0xffffff8c);\n        cVar5 = '\\0';\n        iVar3 = fcn.00ba5604(&stack0xffffff84, 0);\n        bVar2 = false;\n        if (iVar3 < 1) goto code_r0x00c0400d;\n    }\n    else {\ncode_r0x00c0400d:\n        bVar2 = true;\n    }\n    fcn.00b95a64();\n    if (bVar2) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        if (*(arg_8h + 8) == 3) {\n            uVar4 = fcn.00b99c9c();\n            if ((uVar4 & 1) != 0) {\n                arg_10h = 0x1;\n            }\n            uVar4 = fcn.00b99c9c();\n            if ((uVar4 & 2) != 0) {\n                arg_10h = 0x2;\n            }\n            fcn.00b99c9c();\n        }\n        iVar3 = fcn.00b9859a(&stack0xffffff80, &stack0xffffff78, arg_10h);\n        if (iVar3 == 0) {\n            if (cVar5 != '\\0') {\n                fcn.00b98620(&stack0xffffff74, *(*(arg_8h + 4) + 4), 0, arg_10h);\n                goto code_r0x00c04107;\n            }\n            arg_8h_00 = 2;\n        }\n        else {\n            if ((arg_8h_01 & 0x100) == 0) {\n                fcn.00b99e9c(*(*(arg_8h + 4) + 4));\n                goto code_r0x00c04107;\n            }\n            arg_8h_00 = 1;\n        }\n        fcn.00be6aa3(arg_8h_00, 0);\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\ncode_r0x00c04107:\n    fcn.00ba5c2e();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1053
    },
    "00c041af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c041af(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = arg_8h;\n    uVar3 = 1000;\n    arg_8h = 500;\n    uVar1 = *(iVar2 + 8);\n    if (uVar1 != 0) {\n        arg_8h = fcn.00b99c9c();\n    }\n    if (1 < uVar1) {\n        uVar3 = fcn.00b99c9c();\n    }\n    (*_sym.imp.KERNEL32.dll_Beep)(arg_8h, uVar3);\n    return 0;\n}\n",
        "token_count": 165
    },
    "00c045f1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c045f1(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*(arg_8h + 8) < 2) {\n        iVar2 = **(arg_8h + 4);\n        fcn.00b99997();\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = (*(arg_8h + 4))[1];\n        fcn.00b99997();\n        uVar1 = **(iVar2 + 8);\n        iVar2 = **(arg_8h + 4);\n        fcn.00b99997();\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(**(iVar2 + 8), uVar1);\n    fcn.00b99a20();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 218
    },
    "00c0474d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0474d(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack24 = 0xc1fb78;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    iVar1 = **(arg_8h + 4);\n    *0xc56280 = 1;\n    fcn.00b99997();\n    iVar1 = fcn.00b963a0(0, **(iVar1 + 8), &uStack24);\n    if ((-1 < iVar1) && (1 < uStack28)) {\n        iVar1 = fcn.00b9a000(&stack0xffffffdc, &stack0xffffffd8, arg_ch, 0xffffffff);\n        if (-1 < iVar1) {\n            *0xc56280 = 0;\n            goto code_r0x00c047ea;\n        }\n    }\n    *0xc56280 = 0;\n    fcn.00be6aa3(1, 0);\n    fcn.00b99bf8(0xc1f910);\ncode_r0x00c047ea:\n    fcn.00b97776();\n    return 0;\n}\n",
        "token_count": 311
    },
    "00c04fd9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c04fd9(int32_t arg_8h, uint *arg_ch)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint arg_10h;\n    int32_t iVar4;\n    uint uStack32;\n    uint uStack28;\n    uint32_t uStack24;\n    uint auStack16 [3];\n    \n    uStack28 = *(arg_8h + 8);\n    (*_sym.imp.USER32.dll_GetCursorPos)(auStack16);\n    bVar1 = false;\n    uStack32 = auStack16[0];\n    iVar4 = 1;\n    fcn.00b99997();\n    iVar3 = fcn.00bf4e10();\n    if (iVar3 == 0) {\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        return 0;\n    }\n    if (uStack24 != 2) {\n        if (1 < uStack24) {\n            cVar2 = fcn.00b99dae(0x29);\n            if (cVar2 == '\\0') {\n                uStack32 = fcn.00b99c9c();\n            }\n            uStack28 = *(*(arg_8h + 4) + 8);\n            cVar2 = fcn.00b99dae(0x29);\n            if (cVar2 == '\\0') {\n                iVar4 = fcn.00b99c9c();\n            }\n            cVar2 = fcn.00b99dae(0x29);\n            if ((cVar2 == '\\0') || (cVar2 = fcn.00b99dae(0x29),  cVar2 == '\\0')) {\n                bVar1 = true;\n            }\n        }\n        if ((3 < uStack24) && (iVar4 = fcn.00b99c9c(),  iVar4 < 1)) {\n            return 0;\n        }\n        if (uStack24 < 5) {\n            arg_10h = 0xffffffff;\n        }\n        else {\n            arg_10h = fcn.00b99c9c();\n        }\n        if (bVar1) {\n            fcn.00c073b1(uStack28, uStack32, arg_10h, 1);\n        }\n        if (0 < iVar4) {\n            do {\n                fcn.00b99997();\n                fcn.00bf4ec9();\n                fcn.00bf54e6();\n                fcn.00b99997();\n                fcn.00bf4ef5();\n                fcn.00bf54e6();\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        return 0;\n    }\n    fcn.00b99a20();\n    arg_ch[3] = 1;\n    *arg_ch = 0;\n    fcn.00be6aa3(5, 0);\n    return 0;\n}\n",
        "token_count": 670
    },
    "00c0543a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0543a(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetCursorPos)(&var_8h);\n    uVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    fcn.00c03c94(*(in_ECX + 0x100), &var_10h, uVar2);\n    var_8h = var_8h - var_10h;\n    var_4h = var_4h - var_ch;\n    if (*(arg_8h + 8) == 0) {\n        uVar2 = fcn.00b9942e();\n        fcn.00b991b0(uVar2, 1);\n        var_18h = 0;\n        var_20h = var_8h;\n        var_14h = 1;\n        fcn.00b99040(uVar2, &var_20h, 1);\n        fcn.00b99a20();\n        var_18h = 0;\n        var_20h = var_4h;\n        var_14h = 1;\n        fcn.00b99040(uVar2, &var_20h, 1);\n        fcn.00b99a20();\n    }\n    else {\n        cVar1 = fcn.00be65fa();\n        if (cVar1 == '\\0') {\n            fcn.00be6aa3(1, 0);\n        }\n        else {\n            iVar3 = fcn.00b99c9c();\n            iVar4 = var_8h;\n            if (iVar3 == 0) {\n                fcn.00b99a20();\n                arg_ch[3] = 1;\n            }\n            else {\n                iVar3 = fcn.00b99c9c();\n                iVar4 = var_4h;\n                if (iVar3 != 1) {\n                    return 0;\n                }\n                fcn.00b99a20();\n                arg_ch[3] = 1;\n            }\n            *arg_ch = iVar4;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 566
    },
    "00c0554c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0554c(int32_t arg_8h)\n\n{\n    uint arg_10h;\n    uint arg_ch;\n    uint arg_8h_00;\n    uint arg_14h;\n    \n    arg_10h = 0xffffffff;\n    if (*(arg_8h + 8) == 3) {\n        arg_10h = fcn.00b99c9c();\n    }\n    arg_14h = 0;\n    arg_ch = fcn.00b99c9c();\n    arg_8h_00 = fcn.00b99c9c();\n    fcn.00c073b1(arg_8h_00, arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 170
    },
    "00c055ce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c055ce(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 1;\n    if (((*(arg_8h + 8) < 2) || (iVar3 = fcn.00b99c9c(),  0 < iVar3)) && (iVar2 = 0,  0 < iVar3)) {\n        do {\n            fcn.00b99997();\n            cVar1 = fcn.00bf4f21();\n            if (cVar1 == '\\0') {\n                fcn.00b99a20();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n                return 0;\n            }\n            fcn.00bf54e6();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < iVar3);\n    }\n    return 0;\n}\n",
        "token_count": 224
    },
    "00c05d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c05d60(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (2 < *(arg_8h + 8)) {\n        uVar1 = fcn.00bf89bb();\n        iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n        if (iVar2 != 0) {\n            uVar1 = fcn.00bf89bb();\n            goto code_r0x00c05d9e;\n        }\n    }\n    uVar1 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\ncode_r0x00c05d9e:\n    iVar2 = fcn.00b99c9c();\n    iVar3 = fcn.00b99c9c();\n    fcn.00c03c94(*(var_4h + 0x104), &var_ch, uVar1);\n    uVar1 = (*_sym.imp.USER32.dll_GetDC)(0);\n    uVar4 = (*_sym.imp.GDI32.dll_GetPixel)(uVar1, iVar2 + var_ch, iVar3 + var_8h);\n    fcn.00b99a20();\n    arg_ch[3] = 1;\n    *arg_ch = uVar4 >> 0x10 & 0xffU | (uVar4 & 0xff) << 0x10 | uVar4 & 0xff00;\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar1);\n    return 0;\n}\n",
        "token_count": 388
    },
    "00c060ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c060ec(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar1 = *(arg_8h + 8);\n    if (*0xc56294 != 0) {\n        iVar2 = fcn.00b99c9c();\n        if ((-1 < iVar2) && (iVar2 = fcn.00b99c9c(),  iVar2 < 0x65)) {\n            uVar3 = fcn.00b99c9c(0);\n            (*_sym.imp.USER32.dll_SendMessageW)(*0xc56294, 0x402, uVar3);\n        }\n        if (1 < uVar1) {\n            iVar2 = *(*(arg_8h + 4) + 4);\n            fcn.00b99997();\n            if (***(iVar2 + 8) != 0) {\n                iVar2 = *(*(arg_8h + 4) + 4);\n                fcn.00b99997();\n                (*_sym.imp.USER32.dll_SendMessageW)(*0xc5628c, 0xc, 0, **(iVar2 + 8));\n            }\n            if (2 < uVar1) {\n                iVar2 = *(*(arg_8h + 4) + 8);\n                fcn.00b99997();\n                (*_sym.imp.USER32.dll_SendMessageW)(*0xc56290, 0xc, 0, **(iVar2 + 8));\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 356
    },
    "00c061b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c061b3(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(arg_8h + 8) == 2) {\n        iVar1 = fcn.00b99c9c();\n        iVar2 = **(arg_8h + 4);\n        if (iVar1 != 0) {\n            fcn.00b99997();\n            fcn.00bf091d(*(iVar2 + 8), 0);\n            return 0;\n        }\n    }\n    else {\n        iVar2 = **(arg_8h + 4);\n    }\n    fcn.00b99997();\n    fcn.00bf075c(*(iVar2 + 8), 0);\n    return 0;\n}\n",
        "token_count": 178
    },
    "00c06216": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c06216(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    uVar2 = 1;\n    uVar1 = fcn.00b99c9c();\n    fcn.00be6aa3(uVar1, uVar2);\n    if (1 < *(arg_8h + 8)) {\n        uVar2 = 1;\n        uVar1 = fcn.00b99c9c();\n        fcn.00baff61(uVar1, uVar2);\n    }\n    if (2 < *(arg_8h + 8)) {\n        fcn.00b99e9c(*(*(arg_8h + 4) + 8));\n    }\n    return 0;\n}\n",
        "token_count": 180
    },
    "00c06275": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c06275(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint arg_ch_00;\n    \n    arg_ch_00 = 1;\n    arg_8h_00 = fcn.00b99c9c();\n    fcn.00baff61(arg_8h_00, arg_ch_00);\n    if (1 < *(arg_8h + 8)) {\n        fcn.00b99e9c(*(*(arg_8h + 4) + 4));\n    }\n    return 0;\n}\n",
        "token_count": 135
    },
    "00c062b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c062b4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*(arg_8h + 8) == 2) {\n        iVar1 = fcn.00b99c9c();\n        if (iVar1 == 1) {\n            fcn.00b99997();\n            goto code_r0x00c062f3;\n        }\n    }\n    fcn.00b99997();\ncode_r0x00c062f3:\n    fcn.00bf5569();\n    return 0;\n}\n",
        "token_count": 128
    },
    "00c06975": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c06975(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uStack960;\n    uint uStack956;\n    uint uStack952;\n    uint uStack948;\n    uchar auStack672 [510];\n    ushort uStack162;\n    int32_t iStack160;\n    uchar auStack156 [126];\n    ushort uStack30;\n    uint uStack28;\n    \n    uStack956 = *0xc562ac;\n    uStack960 = 0x3a8;\n    uStack948 = 0x10;\n    uStack952 = 1;\n    iVar1 = **(arg_8h + 4);\n    uVar2 = *(arg_8h + 8);\n    fcn.00b99997();\n    fcn.00bb42ee(auStack156, **(iVar1 + 8), 0x3f);\n    uStack30 = 0;\n    iVar1 = *(*(arg_8h + 4) + 4);\n    fcn.00b99997();\n    fcn.00bb42ee(auStack672, **(iVar1 + 8), 0xff);\n    uStack162 = 0;\n    iStack160 = fcn.00b99c9c();\n    iStack160 = iStack160 * 1000;\n    if (uVar2 < 4) {\n        uStack28 = 0;\n    }\n    else {\n        uStack28 = fcn.00b99c9c();\n    }\n    (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, &uStack960);\n    return 0;\n}\n",
        "token_count": 373
    },
    "00c073b1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c073b1(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t unaff_EBX;\n    int32_t iStack52;\n    int32_t iStack48;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    fcn.00c03c94(*(in_ECX + 0x100), &iStack40, uVar2);\n    arg_8h = arg_8h + iStack52;\n    uVar2 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&iStack36);\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar2);\n    if (arg_10h == 0) {\n        (*_sym.imp.USER32.dll_mouse_event)\n                  (0x8001, ((arg_8h + 1) * 0x10000) / iStack36 + -1, ((arg_ch + iStack48 + 1) * 0x10000) / iStack32 + -1\n                   , 0, 0);\n        if (arg_14h != '\\0') {\n            fcn.00bf54e6();\n        }\n    }\n    else {\n        if ((arg_10h < 1) || (100 < arg_10h)) {\n            arg_10h = 10;\n        }\n        (*_sym.imp.USER32.dll_GetCursorPos)(&iStack52);\n        iVar3 = (unaff_EBX * 0xffff) / (iStack40 + -1) + 1;\n        iVar4 = (iStack52 * 0xffff) / (iStack36 + -1) + 1;\n        while( true ) {\n            cVar1 = fcn.00bf5310(arg_10h, 0x20, &stack0xffffffbc, &stack0xffffffb8);\n            if (cVar1 == '\\0') break;\n            (*_sym.imp.USER32.dll_mouse_event)(0x8001, iVar3, iVar4, 0, 0);\n            fcn.00bf54e6();\n        }\n    }\n    return;\n}\n",
        "token_count": 539
    },
    "00c0823e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c0823e(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_ECX;\n    \n    if (arg_8h == 0) {\n        fcn.00bf3408();\n    }\n    else {\n        uVar2 = fcn.00bb3980(arg_8h);\n        in_ECX[1] = uVar2;\n        iVar1 = *in_ECX[3];\n        if (iVar1 < 2) {\n            fcn.00b95a87(uVar2);\n        }\n        else {\n            *in_ECX[3] = iVar1 + -1;\n            fcn.00be6443();\n            uVar2 = fcn.00b95a4b(in_ECX[1] + 1);\n            in_ECX[2] = uVar2;\n            uVar2 = fcn.00bb0ff6(uVar2);\n            *in_ECX = uVar2;\n        }\n        fcn.00bb1080(*in_ECX, arg_8h, in_ECX[1] + 1);\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "00c083a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c083a8(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    uint arg_ch_00;\n    bool bVar5;\n    uint uVar6;\n    int32_t iStack76;\n    ushort auStack64 [2];\n    uint uStack60;\n    int32_t iStack56;\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack28;\n    \n    uStack60 = 0;\n    fcn.00b99a20();\n    arg_ch[3] = 1;\n    *arg_ch = 0;\n    iVar2 = (*_sym.imp.ole32.dll_CoInitialize)(0);\n    if (iVar2 == 1) {\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&uStack60);\n    iStack56 = 0;\n    uStack52 = 0;\n    auStack64[0] = 9;\n    iVar2 = *(arg_8h + 8);\n    if (iVar2 == 1) {\n        iVar2 = fcn.00bb0ff6(0x3c);\n        if (iVar2 == 0) {\n            iStack56 = 0;\n        }\n        else {\n            iVar2 = **(arg_8h + 4);\n            fcn.00b99997();\n            iStack56 = fcn.00beda5d(**(iVar2 + 8), 0, 0);\n        }\n        iVar2 = *(iStack56 + 4);\n        bVar5 = iVar2 < 0;\n        if (bVar5) {\n            uStack40 = 0;\n            uStack36 = 1;\n            iStack48 = iVar2;\n            fcn.00b99a20();\n        }\n        else {\n            uVar4 = fcn.00bf7804(auStack64);\n            uStack28 = 0;\n            fcn.00b99ac0(uVar4);\n            iVar2 = iStack76;\n        }\n        cVar1 = !bVar5;\n        iStack76 = iVar2;\ncode_r0x00c08699:\n        if (cVar1 != '\\0') {\n            fcn.00b99a20();\n        }\ncode_r0x00c086a4:\n        if (iStack76 < 0) {\n            fcn.00c096db(iStack76, 0, 0, 0);\n        }\n    }\n    else {\n        if (iVar2 == 2) {\n            iVar2 = *(*(arg_8h + 4) + 4);\n            fcn.00b99997();\n            arg_ch_00 = **(iVar2 + 8);\n            iVar2 = **(arg_8h + 4);\n            fcn.00b99997();\n            uVar4 = 0;\n            uVar6 = 0;\n        }\n        else {\n            if (iVar2 == 3) {\n                iVar2 = *(*(arg_8h + 4) + 8);\n                cVar1 = fcn.00b99c42();\n                if (cVar1 != '\\0') {\n                    iVar2 = fcn.00b99c9c();\n                    if ((0 < iVar2) && (iVar2 = *(in_ECX + 0x1a8),  iVar3 = fcn.00b99c9c(),  iVar3 <= iVar2)) {\n                        fcn.00b99c9c();\n                    }\n                    iVar2 = fcn.00bb0ff6(0x3c);\n                    if (iVar2 == 0) {\n                        iStack56 = 0;\n                    }\n                    else {\n                        iVar2 = *(*(arg_8h + 4) + 4);\n                        cVar1 = fcn.00b99dae(0x29);\n                        if (cVar1 == '\\0') {\n                            fcn.00b99997();\n                            uVar4 = **(iVar2 + 8);\n                        }\n                        else {\n                            uVar4 = 0;\n                        }\n                        iVar2 = **(arg_8h + 4);\n                        fcn.00b99997();\n                        iStack56 = fcn.00beda5d(**(iVar2 + 8), uVar4, iStack76);\n                    }\n                    iVar2 = *(iStack56 + 4);\n                    if (iVar2 < 0) {\n                        uStack40 = 0;\n                        uStack36 = 1;\n                        cVar1 = '\\0';\n                        iStack48 = iVar2;\n                        fcn.00b99a20();\n                        iStack76 = iVar2;\n                    }\n                    else {\n                        cVar1 = '\\x04';\n                        uVar4 = fcn.00bf7804(auStack64);\n                        uStack28 = 0;\n                        fcn.00b99ac0(uVar4);\n                    }\n                    goto code_r0x00c08699;\n                }\n                fcn.00b99997();\n                uVar4 = **(iVar2 + 8);\n                iVar2 = *(*(arg_8h + 4) + 4);\n                fcn.00b99997();\n                uVar6 = **(iVar2 + 8);\n                iVar2 = **(arg_8h + 4);\n                fcn.00b99997();\n                fcn.00c09a72(**(iVar2 + 8), uVar6, uVar4, 0, arg_ch);\n                goto code_r0x00c086a4;\n            }\n            if (iVar2 != 4) goto code_r0x00c086ba;\n            iVar2 = *(*(arg_8h + 4) + 0xc);\n            fcn.00b99997();\n            uVar4 = **(iVar2 + 8);\n            iVar2 = *(*(arg_8h + 4) + 8);\n            fcn.00b99997();\n            uVar6 = **(iVar2 + 8);\n            iVar2 = *(*(arg_8h + 4) + 4);\n            fcn.00b99997();\n            arg_ch_00 = **(iVar2 + 8);\n            iVar2 = **(arg_8h + 4);\n            fcn.00b99997();\n        }\n        fcn.00c09a72(**(iVar2 + 8), arg_ch_00, uVar6, uVar4, arg_ch);\n    }\ncode_r0x00c086ba:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack64);\n    return 0;\n}\n",
        "token_count": 1504
    },
    "00c086d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c086d0(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint32_t pdwRegister;\n    uint uVar4;\n    char16_t *arg_10h;\n    int32_t *arg_ch_00;\n    uint uStack84;\n    int32_t *piStack80;\n    int32_t iStack76;\n    uint uStack68;\n    uint32_t uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar auStack44 [16];\n    uchar auStack28 [24];\n    \n    cVar1 = unaff_EBX >> 0x18;\n    iVar3 = **(arg_8h + 4);\n    fcn.00b99997();\n    uStack68 = **(iVar3 + 8);\n    iVar3 = *(*(arg_8h + 4) + 4);\n    fcn.00b99997();\n    uStack60 = 0;\n    piStack80 = CONCAT13(1, piStack80._0_3_);\n    uStack64 = **(iVar3 + 8);\n    iVar3 = (*_sym.imp.ole32.dll_CoInitialize)(0);\n    if (iVar3 == 1) {\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    iStack76 = 0;\n    if (3 < *(arg_8h + 8)) {\n        cVar1 = fcn.00b99dae(0x29);\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00b99c53();\n        }\n        else {\n            cVar1 = '\\x01';\n        }\n    }\n    iVar3 = fcn.00be7652(0);\n    if (iVar3 < 0) {\n        arg_ch_00 = fcn.00bf89bb();\n        if (arg_ch_00 == NULL) {\n            arg_10h = L\"NULL Pointer assignment\";\n            uVar4 = 3;\n            goto code_r0x00c08796;\n        }\n        cVar2 = fcn.00b993dd();\n        if (cVar2 != '\\0') {\n            (**(*arg_ch_00 + 4))(arg_ch_00);\n        }\ncode_r0x00c087e6:\n        if (uStack84._3_1_ == '\\0') {\ncode_r0x00c0885c:\n            piStack80 = arg_ch_00;\n            pdwRegister = uStack64;\n            if (2 < *(arg_8h + 8)) {\n                iVar3 = *(*(arg_8h + 4) + 8);\n                cVar2 = fcn.00b99dae(0x29);\n                if (cVar2 == '\\0') {\n                    fcn.00b99997();\n                    pdwRegister = **(iVar3 + 8);\n                }\n                else {\n                    pdwRegister = 0;\n                }\n            }\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(&uStack60);\n            uStack56 = 0;\n            uStack52 = 0;\n            uStack64 = uStack64 & 0xffff0000 | 9;\n            uVar4 = uStack84;\n            if (pdwRegister != 0) {\n                iVar3 = fcn.00bb0ff6(0x28);\n                if (iVar3 == 0) {\n                    uStack56 = 0;\n                    uVar4 = uStack56;\n                }\n                else {\n                    uVar4 = fcn.00bede79(uStack84, pdwRegister, cVar1 != '\\0');\n                }\n            }\n            uStack56 = uVar4;\n            fcn.00bf7804(&uStack64);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack68);\n            return 0;\n        }\n        iVar3 = (*_sym.imp.ole32.dll_IIDFromString)(uStack68, auStack28);\n        if (iVar3 < 0) {\n            if (iStack76 != 0) {\n                (**(*arg_ch_00 + 8))(arg_ch_00);\n            }\n            arg_ch_00 = NULL;\n            arg_10h = L\"Invalid parameter\";\n            uVar4 = 2;\n            goto code_r0x00c08796;\n        }\n        piStack80 = NULL;\n        iVar3 = (***arg_ch_00)(arg_ch_00, auStack28, &piStack80);\n        if (-1 < iVar3) {\n            (**(*arg_ch_00 + 8))(arg_ch_00);\n            arg_ch_00 = piStack80;\n            goto code_r0x00c0885c;\n        }\n        if (iStack76 != 0) {\n            (**(*arg_ch_00 + 8))(arg_ch_00);\n        }\n    }\n    else {\n        piStack80 = NULL;\n        iVar3 = (*_sym.imp.ole32.dll_CoCreateInstance)(auStack44, 0, 0x17, 0xc22bec, &piStack80);\n        arg_ch_00 = piStack80;\n        if (-1 < iVar3) {\n            fcn.00be7cc1();\n            iStack76 = 1;\n            goto code_r0x00c087e6;\n        }\n    }\n    arg_ch_00 = NULL;\n    arg_10h = L\"Failed to create object\";\n    uVar4 = 1;\ncode_r0x00c08796:\n    uVar4 = fcn.00c096db(uVar4, arg_ch_00, arg_10h, arg_ch_00);\n    return uVar4;\n}\n",
        "token_count": 1285
    },
    "00c08902": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c08902(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint unaff_EDI;\n    uint uVar4;\n    uint arg_8h_00;\n    int32_t iVar5;\n    uchar *arg_ch_00;\n    uint uVar6;\n    uint32_t uStack76;\n    uint32_t uStack72;\n    int32_t *piStack68;\n    ushort auStack64 [2];\n    uchar auStack60 [4];\n    int32_t *piStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    int32_t *piStack40;\n    uchar auStack36 [32];\n    \n    uVar4 = 0;\n    uVar6 = 0xc1f910;\n    uStack76 = 0;\n    fcn.00b99bf8(0xc1f910);\n    arg_ch_00 = auStack60;\n    (*_sym.imp.OLEAUT32.dll_VariantClear)();\n    auStack64[0] = 9;\n    piStack56 = NULL;\n    uStack52 = 0;\n    iVar5 = **(arg_8h + 4);\n    cVar1 = fcn.00b993dd();\n    if (cVar1 != '\\0') {\n        if (*(arg_8h + 8) < 2) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = fcn.00bb0ff6(0x50);\n            if (iVar5 == 0) {\n                piVar2 = NULL;\n            }\n            else {\n                if (*(arg_8h + 8) < 3) {\n                    uVar6 = 0;\n                }\n                else {\n                    iVar5 = *(*(arg_8h + 4) + 8);\n                    fcn.00b99997();\n                    uVar6 = **(iVar5 + 8);\n                }\n                iVar5 = *(*(arg_8h + 4) + 4);\n                fcn.00b99997();\n                piVar2 = fcn.00becd99(**(arg_8h + 4), *(iVar5 + 8), uVar6, in_ECX, in_ECX + 0x184);\n            }\n            iVar5 = piVar2[1];\n            if (-1 < iVar5) {\ncode_r0x00c08b9d:\n                piStack56 = piVar2;\n                fcn.00bf7804(auStack64);\n                goto code_r0x00c08baa;\n            }\n            (**(*piVar2 + 8))(piVar2);\n            unaff_EDI = 0;\n            uVar6 = 0;\n            arg_ch_00 = NULL;\n        }\n        uVar4 = fcn.00c096db(iVar5, arg_ch_00, uVar6, unaff_EDI);\n        goto code_r0x00c08baa;\n    }\n    fcn.00b99997();\n    puVar3 = *(iVar5 + 8);\n    uVar6 = *puVar3;\n    uStack76 = puVar3[1];\n    uStack72 = puVar3[2];\n    piStack68 = puVar3[3];\n    *piStack68 = *piStack68 + 1;\n    fcn.00b97faf();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(uVar6, uStack76);\n    cVar1 = fcn.00bea36d();\n    if (cVar1 == '\\0') {\n        if (*(arg_8h + 8) != 1) {\n            iVar5 = *(*(arg_8h + 4) + 4);\n            if (*(iVar5 + 0xc) == 0xe) {\n                puVar3 = fcn.00bf7ba4(auStack36);\n            }\n            else {\n                fcn.00b99997();\n                puVar3 = *(iVar5 + 8);\n                uStack52 = *puVar3;\n                uStack48 = puVar3[1];\n                uStack44 = puVar3[2];\n                piStack40 = puVar3[3];\n                *piStack40 = *piStack40 + 1;\n                puVar3 = &uStack52;\n            }\n            iVar5 = fcn.00b99fbd(puVar3);\n            uStack72 = -iVar5 & 0xffffff00U | 1 - (iVar5 != 0);\n            if ((uStack76 & 2) != 0) {\n                uStack76 = uStack76 & 0xfffffffd;\n                fcn.00b95a64();\n            }\n            if ((uStack76 & 1) != 0) {\n                fcn.00b95a64();\n            }\n            if (uStack72 == '\\0') {\n                uStack72 = fcn.00bb0ff6(0x30);\n                if (uStack72 == 0) {\n                    uStack76 = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(arg_8h + 4) + 4);\n                    fcn.00b99ac0(arg_8h_00);\n                    fcn.00bec9ae(in_ECX + 0x174, arg_8h_00);\n                }\n                fcn.00c0a49f(&uStack76);\n                uStack48 = uVar6;\n                fcn.00b95a64();\n                piVar2 = piStack56;\n                goto code_r0x00c08b9d;\n            }\n            goto code_r0x00c08b21;\n        }\n        if (*(in_ECX + 0x17c) != 0) {\n            fcn.00b99e9c(**(*(in_ECX + 0x178) + -4 + *(in_ECX + 0x17c) * 4) + 8);\n        }\n    }\n    else {\ncode_r0x00c08b21:\n        uVar4 = fcn.00c096db(1, 0, L\"Incorrect Parameter format\", 0);\n    }\n    fcn.00b95a64();\ncode_r0x00c08baa:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&piStack68);\n    return uVar4;\n}\n",
        "token_count": 1438
    },
    "00c08bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00c08c53)\n// WARNING: Removing unreachable block (ram,0x00c08c7c)\n// WARNING: Removing unreachable block (ram,0x00c08ce5)\n// WARNING: Removing unreachable block (ram,0x00c08cf8)\n// WARNING: Removing unreachable block (ram,0x00c08d04)\n// WARNING: Removing unreachable block (ram,0x00c08d15)\n\nuint __cdecl fcn.00c08bc0(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *unaff_EBX;\n    uint uVar5;\n    int32_t *unaff_EDI;\n    int32_t *piVar6;\n    int32_t iStack164;\n    int32_t *piStack160;\n    int32_t *piVar7;\n    int32_t *arg_10h;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    uint uStack108;\n    int32_t iStack104;\n    int32_t aiStack100 [2];\n    int32_t iStack92;\n    uint32_t uStack88;\n    uint uStack84;\n    int32_t *piStack80;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t *piStack48;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack88 = *(arg_8h + 8);\n    uStack24 = *0xc22c2c;\n    uStack20 = *0xc22c30;\n    uStack16 = *0xc22c34;\n    uStack12 = *0xc22c38;\n    (*_sym.imp.OLEAUT32.dll_VariantClear)();\n    uVar5 = 0;\n    iStack52 = 0;\n    piStack48 = NULL;\n    piVar11 = 0xc1f910;\n    uStack84 = 0;\n    piStack80 = 0x1;\n    fcn.00b99bf8(0xc1f910);\n    iVar3 = (*_sym.imp.ole32.dll_CoInitialize)();\n    if (iVar3 == 1) {\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    piVar10 = 0x29;\n    piVar9 = 0xc08c3a;\n    cVar2 = fcn.00b99dae(0x29);\n    if (cVar2 != '\\0') {\n        piVar9 = 0xc1f910;\n        fcn.00b99bf8(0xc1f910);\n    }\n    iVar3 = **(arg_8h + 4);\n    fcn.00b99997();\n    piVar8 = *(iVar3 + 8);\n    iStack92 = *piVar8;\n    iStack56 = piVar8[1];\n    iStack52 = piVar8[2];\n    piStack48 = piVar8[3];\n    *piStack48 = *piStack48 + 1;\n    iStack60 = iStack92;\n    cVar2 = fcn.00bb0d27();\n    pcVar1 = _sym.imp.KERNEL32.dll_SetErrorMode;\n    if (cVar2 == '\\0') {\n        piVar8 = 0x1;\n        uVar4 = (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n        iStack92 = 0xc22c0c;\n        uStack88 = 0;\n        uStack84 = 0;\n        arg_10h = &stack0xffffffa4;\n        uStack108 = 1;\n        piStack160 = 0x2;\n        iStack164 = 0x15;\n        iVar3 = (*_sym.imp.ole32.dll_CoGetInstanceFromFile)(0, -(iStack104 != 0) & &stack0xffffffd0, 0);\n        if (iVar3 < 0) {\n            unaff_EDI = NULL;\n            iVar3 = (*_sym.imp.ole32.dll_CoGetObject)(piVar11, 0, 0xc22c0c, &stack0xffffff74);\n            if (iVar3 < 0) {\n                uVar5 = fcn.00c096db(iVar3, 0, 0, 0);\n                (*pcVar1)(uVar4);\n                goto code_r0x00c08f3c;\n            }\n        }\n        piStack160 = unaff_EDI;\n        (*pcVar1)(uVar4);\ncode_r0x00c08ec0:\n        if (piVar10 != NULL) {\n            if (unaff_EBX != NULL) {\n                iStack164 = iStack52;\n                piStack160 = piStack48;\n                iVar3 = fcn.00be7a78(iStack56);\n                if (iVar3 == 0) {\n                    piStack160 = 0xc08ef5;\n                    (**(*piVar10 + 8))();\n                    piVar8 = NULL;\n                    arg_10h = NULL;\n                    uStack108 = 0;\n                    uVar5 = 0x80028ca0;\n                    goto code_r0x00c08d52;\n                }\n            }\n            uStack88 = uStack88 & 0xffff0000 | 9;\n            piStack160 = 0xc08f1b;\n            piStack80 = piVar10;\n            fcn.00bf7804(&stack0xffffffa8);\n            goto code_r0x00c08f3c;\n        }\n        uVar5 = 0;\n        iStack164 = 0;\n    }\n    else {\n        uStack108 = 0;\n        arg_10h = unaff_EBX;\n        iVar3 = (*_sym.imp.ole32.dll_GetRunningObjectTable)();\n        if (-1 < iVar3) {\n            piVar8 = &stack0xffffff9c;\n            piVar6 = arg_10h;\n            iVar3 = (**(*arg_10h + 0x24))();\n            if (-1 < iVar3) {\n                aiStack100[0] = 1;\n                (**(_pe_dos_header + 0x14))();\ncode_r0x00c08d7c:\n                piStack160 = &stack0xffffff80;\n                piVar7 = NULL;\n                iStack164 = 1;\n                piVar12 = piVar6;\n                iVar3 = (**(*piVar6 + 0xc))();\n                if ((iVar3 != 0) || (piVar8 == NULL)) goto code_r0x00c08e30;\n                iVar3 = (**(*piVar9 + 0x18))(piVar9, piVar8, &stack0xffffff78);\n                if ((iVar3 < 0) || (iVar3 = (***arg_10h)(arg_10h, 0xc22c0c, &stack0xffffff5c),  iVar3 < 0))\n                goto code_r0x00c08e17;\n                (**(*arg_10h + 8))(arg_10h);\n                iVar3 = fcn.00be7a78(uStack88);\n                if (iVar3 == 1) {\n                    if (piVar10 == arg_10h) {\n                        (**(*piStack160 + 8))(piStack160);\ncode_r0x00c08e30:\n                        (**(*piVar11 + 8))(piVar11);\n                        (**(*piVar8 + 8))(piVar8);\n                        unaff_EBX = NULL;\n                        goto code_r0x00c08ec0;\n                    }\n                    piVar10 = piVar10 + 1;\n                }\n                (**(*piVar6 + 8))(piVar6);\n                iStack164 = 0;\ncode_r0x00c08e17:\n                (**(*piVar7 + 8))(piVar7);\n                piVar6 = piVar12;\n                goto code_r0x00c08d7c;\n            }\n            (**(*unaff_EDI + 8))();\n        }\n        piVar8 = NULL;\n        arg_10h = NULL;\n        uStack108 = 0;\n        uVar5 = 0x80004005;\n    }\ncode_r0x00c08d52:\n    piStack160 = 0xc08d5b;\n    uVar5 = fcn.00c096db(uVar5, uStack108, arg_10h, piVar8);\ncode_r0x00c08f3c:\n    piStack160 = 0xc08f45;\n    fcn.00b95a64();\n    piStack160 = &stack0xffffffa4;\n    iStack164 = 0xc08f50;\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n    return uVar5;\n}\n",
        "token_count": 1997
    },
    "00c093f5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00c093f5(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0xc1fb14);\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0xc4ac58);\n            param_1[2] = iVar1;\n        }\n    }\n    return param_1[2] != 0;\n}\n",
        "token_count": 137
    },
    "00c096db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00c096db(uint32_t arg_8h, uint16_t *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint noname_4;\n    uint noname_4_00;\n    uint var_58h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t *var_2ch;\n    uint pvargDest;\n    int32_t *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    var_8h = 0;\n    if (*(in_ECX + 0x17c) == 0) {\n        fcn.00be6aa3(arg_8h, 0);\n        iVar2 = (arg_14h == '\\0') - 1;\n    }\n    else {\n        if (*0xc57f00 == '\\0') {\n            var_20h = **(*(in_ECX + 0x178) + -4 + *(in_ECX + 0x17c) * 4);\n            fcn.00becae3();\n            var_40h = 0;\n            var_48h = arg_8h;\n            var_3ch = 1;\n            fcn.00be70dc(&var_48h);\n            fcn.00b99a20();\n            if (arg_10h == 0) {\n                arg_8h_00 = fcn.00bfa2d5(&var_48h, arg_8h);\n            }\n            else {\n                arg_8h_00 = fcn.00b97f41(arg_10h);\n            }\n            fcn.00b993ea(arg_8h_00);\n            fcn.00be70dc(&var_58h);\n            fcn.00b99a20();\n            if (arg_10h == 0) {\n                fcn.00b95a64();\n            }\n            else {\n                fcn.00b95a64();\n            }\n            if (arg_ch != NULL) {\n                if (*(arg_ch + 4) != 0) {\n                    fcn.00b99f3a(*(arg_ch + 4));\n                    fcn.00be70dc(&var_58h);\n                    fcn.00b99a20();\n                }\n                if (*(arg_ch + 2) != 0) {\n                    fcn.00b99f3a(*(arg_ch + 2));\n                    fcn.00be70dc(&var_58h);\n                    fcn.00b99a20();\n                }\n                if (*(arg_ch + 6) != 0) {\n                    fcn.00b99f3a(*(arg_ch + 6));\n                    fcn.00be70dc(&var_58h);\n                    fcn.00b99a20();\n                }\n                var_48h = *(arg_ch + 8);\n                var_40h = 0;\n                var_3ch = 1;\n                fcn.00be70dc(&var_48h);\n                fcn.00b99a20();\n                var_48h = *arg_ch;\n                if (*arg_ch == 0) {\n                    var_48h = *(arg_ch + 0xe);\n                }\n                var_40h = 0;\n                var_3ch = 1;\n                fcn.00be70dc(&var_48h);\n                fcn.00b99a20();\n            }\n            var_48h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            var_40h = 0;\n            var_3ch = 1;\n            fcn.00be70dc(&var_48h);\n            fcn.00b99a20();\n            var_48h = fcn.00beff75(*(in_ECX + 0xf4));\n            var_40h = 0;\n            var_3ch = 1;\n            fcn.00be70dc(&var_48h);\n            fcn.00b99a20();\n            iVar2 = var_20h[5];\n            if (iVar2 != 0xe) {\n                fcn.00b99997();\n                puVar3 = var_20h[4];\n                var_18h = *puVar3;\n                var_14h = puVar3[1];\n                var_10h = puVar3[2];\n                var_ch = puVar3[3];\n                puVar3 = &var_18h;\n                *var_ch = *var_ch + 1;\n            }\n            else {\n                puVar3 = fcn.00bf7ba4(&var_58h);\n            }\n            var_38h = *puVar3;\n            var_34h = puVar3[1];\n            var_30h = puVar3[2];\n            var_2ch = puVar3[3];\n            *var_2ch = *var_2ch + 1;\n            if (iVar2 != 0xe) {\n                fcn.00b95a64();\n            }\n            else {\n                fcn.00b95a64();\n            }\n            var_18h = 0xc1fb84;\n            var_14h = 0;\n            var_10h = 0;\n            var_ch = NULL;\n            var_48h = 0;\n            var_40h = 0;\n            var_3ch = 1;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n            var_1ch = 0;\n            pvargDest._0_2_ = 9;\n            (**(*var_20h + 4))(var_20h);\n            var_58h = 0;\n            var_50h = 0;\n            var_4ch = 1;\n            fcn.00be6665(&var_58h);\n            fcn.00b99a20();\n            fcn.00bf7804(&pvargDest);\n            *0xc57f00 = 1;\n            cVar1 = fcn.00c03bb3(&var_38h, &var_18h, &var_48h, 0, noname_4, &arg_14h + 3);\n            if (cVar1 == '\\0') {\n                fcn.00c03bb3(&var_38h, &var_18h, &var_48h, 1, noname_4_00, &arg_14h + 3);\n            }\n            fcn.00be6aa3(arg_8h, 0);\n            *0xc57f00 = '\\0';\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n            var_20h = NULL;\n            var_1ch = 0;\n            fcn.00b99a20();\n            fcn.00be66f4();\n            fcn.00b95a64();\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 1655
    },
    "00c09d4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c09d4c(uint32_t arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code **ppcVar1;\n    char cVar2;\n    uint uVar3;\n    char16_t *arg_10h_00;\n    uint var_14h;\n    \n    if ((arg_10h == NULL) || (*arg_ch == 0)) {\n        arg_10h_00 = L\"NULL Pointer assignment\";\n        uVar3 = 1;\n    }\n    else {\n        cVar2 = fcn.00be6543();\n        if (cVar2 != '\\0') {\n            cVar2 = fcn.00b993dd();\n            if (cVar2 != '\\0') {\n                uVar3 = fcn.00c09e38(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n                return uVar3;\n            }\n            if (arg_10h[3] == 0xc) {\n                fcn.00b993ea(arg_14h);\n                uVar3 = fcn.00bf69a9(arg_8h, arg_18h, *arg_ch, arg_14h);\n            }\n            else {\n                if (arg_10h[3] != 0xf) {\n                    return 0xffffffff;\n                }\n                ppcVar1 = **arg_10h;\n                uVar3 = fcn.00b993ea(arg_14h);\n                uVar3 = (**ppcVar1)(arg_8h & 0xffff, uVar3, arg_14h, arg_18h, arg_ch);\n                fcn.00b99a20();\n            }\n            fcn.00be6aa3(uVar3, 0);\n            return 0;\n        }\n        arg_10h_00 = L\"Not an Object type\";\n        uVar3 = 2;\n    }\n    uVar3 = fcn.00c096db(uVar3, 0, arg_10h_00, 1);\n    return uVar3;\n}\n",
        "token_count": 477
    },
    "00c0a1f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0a1f2(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint uVar1;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint var_1ch;\n    uint var_14h;\n    \n    if (*arg_18h == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = 0xc1f910;\n        fcn.00b97f41(0xc1f910);\n        fcn.00bf6bbd(0x2a, 0, uVar1, in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0);\n        fcn.00bf77cf(&var_1ch);\n        if (arg_8h == 0) {\n            uVar1 = 3;\n        }\n        else {\n            uVar1 = 1;\n        }\n        uVar1 = fcn.00c09d4c(uVar1, arg_18h, arg_ch, arg_10h, arg_14h);\n        fcn.00b95a64();\n    }\n    return uVar1;\n}\n",
        "token_count": 295
    },
    "00c0a456": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00c0a456(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 9) != '\\0') {\n        iVar1 = param_1[1];\n        iVar2 = *(iVar1 + 0x10);\n        if (iVar1 != 0) {\n            fcn.00bafbe6(iVar1);\n        }\n        param_1[1] = iVar2;\n        *(param_1 + 9) = 0;\n    }\n    if (*(param_1 + 2) == '\\0') {\n        iVar1 = param_1[1];\n        iVar2 = *(iVar1 + 0x10);\n        if (iVar1 != 0) {\n            fcn.00bafbe6(iVar1);\n        }\n        param_1[1] = iVar2;\n        *(param_1 + 9) = 0;\n    }\n    else {\n        *(param_1 + 9) = 1;\n    }\n    *param_1 = *param_1 + -1;\n    return;\n}\n",
        "token_count": 250
    },
    "00c0a49f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c0a49f(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar2 = 8;\n        if (7 < uVar1) {\n            uVar2 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar2;\n        uVar3 = fcn.00bb0fa5(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00bb1080(uVar3, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.00bb30b0(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar3;\n    }\n    puVar4 = fcn.00bb0ff6(4);\n    if (puVar4 == NULL) {\n        puVar4 = NULL;\n    }\n    else {\n        *puVar4 = *arg_8h;\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar4;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 381
    },
    "00c0af30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c0af30(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = 1;\n    if (*(*(*(arg_8h + 4) + 4) + 8) == 0x7f) {\n        arg_8h = 1;\ncode_r0x00c0afc4:\n        iVar3 = 0;\n        do {\n            if (*(in_ECX + 0x15c) == 0) {\n                fcn.00bfa0b5(0x96, 0xffffffff);\n                return;\n            }\n            piVar1 = fcn.00bafe18();\n            if (((*piVar1 == 1) || (piVar1 = fcn.00bafe18(),  *piVar1 == 2)) || (piVar1 = fcn.00bafe18(),  *piVar1 == 3)\n               ) {\n                iVar3 = iVar3 + 1;\n                iVar2 = fcn.00bafe18();\n                *arg_ch = *(iVar2 + 8) + 1;\n            }\n            fcn.00bafdcf();\n        } while (iVar3 < arg_8h);\n    }\n    else {\n        var_18h = 0;\n        var_10h = 0;\n        var_ch = 1;\n        iVar3 = fcn.00b9a000(arg_8h, &var_4h, &var_18h, 0xffffffff);\n        if (-1 < iVar3) {\n            iVar3 = *(*(arg_8h + 4) + var_4h * 4);\n            if (*(iVar3 + 8) == 0x7f) {\n                arg_8h = fcn.00b99c9c();\n                fcn.00b99a20();\n                if (arg_8h < 1) {\n                    return;\n                }\n                goto code_r0x00c0afc4;\n            }\n            fcn.00bfa0b5(0x72, *(iVar3 + 10));\n        }\n        fcn.00b99a20();\n    }\n    return;\n}\n",
        "token_count": 541
    },
    "00c0b1b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00c0b1b7(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    char cVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    uint *puVar9;\n    int32_t iVar10;\n    uint arg_8h_00;\n    uint *var_1bch;\n    uint *puStack444;\n    int32_t iStack436;\n    uint uStack432;\n    int32_t iStack428;\n    uint var_bch;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_18h = 0;\n    var_8h = 0;\n    var_3ch = 0;\n    var_34h = 0;\n    var_30h = 1;\n    var_14h = in_ECX;\n    if ((*0xc57f14 & 1) == 0) {\n        *0xc57f14 = *0xc57f14 | 1;\n        fcn.00b99f3a(0xc1f910);\n        fcn.00bb2f80(0xbcb814);\n    }\n    iVar7 = *arg_ch;\n    iVar10 = *(arg_8h + 4);\n    iVar8 = iVar7 + 1;\n    *arg_ch = iVar8;\n    piVar2 = *(iVar10 + iVar8 * 4);\n    if (*(piVar2 + 2) == 0) {\n        iVar10 = *piVar2;\n        if (iVar10 == 0x1a) {\n            fcn.00bfa0b5(0x6e, *(piVar2 + 10));\n        }\n        else {\n            if (iVar10 == 0x1c) {\n                arg_10h = 1;\n            }\n            else {\n                if (iVar10 != 0x1d) {\n                    iVar7 = *(piVar2 + 10);\n                    arg_8h_00 = 0x7f;\n                    goto code_r0x00c0b50a;\n                }\n                arg_10h = 2;\n            }\n            *arg_ch = iVar7 + 2;\n        }\n    }\n    if (*0xc57280 == 0) {\n        arg_10h = 2;\n    }\n    else if (arg_10h == 0) {\n        arg_10h = 1;\n    }\n    iVar7 = *(arg_8h + 4);\n    var_ch = 0x7f;\n    iVar1 = *(*(iVar7 + *arg_ch * 4) + 8);\n    iVar10 = var_14h;\n    while (iVar1 == 0x33) {\n        bVar5 = true;\n        var_10h = **(iVar7 + *arg_ch * 4);\n        iVar7 = arg_10h;\n        iVar8 = fcn.00b9859a(var_10h, &fcn.00c0b1b7::var_8h, arg_10h);\n        if (iVar8 != 0) {\n            arg_8h_00 = 0x9b;\n            goto code_r0x00c0b50a;\n        }\n        fcn.00bb6f24(*(iVar10 + 0xf4), &fcn.00c0b1b7::var_bch, 8, 10);\n        fcn.00b97f41(&fcn.00c0b1b7::var_bch);\n        fcn.00b97a84(0x2e);\n        fcn.00b97c8e(**(*(arg_8h + 4) + *arg_ch * 4));\n        iVar8 = fcn.00b98bb2(&fcn.00c0b1b7::var_28h, &fcn.00c0b1b7::var_8h);\n        if (iVar8 == 0) {\n            fcn.00b98620(&fcn.00c0b1b7::var_28h, 0xc574d8, var_8h, 0x10);\n            iVar8 = fcn.00b98bb2(&fcn.00c0b1b7::var_28h, &fcn.00c0b1b7::var_8h);\n            if (iVar8 == 0) {\n                fcn.00bfa0b5(0x79, *(*(*(arg_8h + 4) + *arg_ch * 4) + 10));\n                fcn.00b95a64();\n                goto code_r0x00c0b511;\n            }\n            bVar5 = false;\n        }\n        uStack432 = 0x400;\n        puStack444 = 0xc0b354;\n        iStack436 = iVar8;\n        iStack428 = arg_10h;\n        fcn.00bf5bd9(var_10h, iVar8, 0x400, arg_10h);\n        puStack444 = 0xc0b35c;\n        fcn.00b95a64();\n        *arg_ch = *arg_ch + 1;\n        puStack444 = 0x4e;\n        if (*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) == 0x4e) {\n            puStack444 = &fcn.00c0b1b7::var_18h;\n            var_1bch = &fcn.00c0b1b7::var_1bch;\n            iVar7 = fcn.00b9d0dc(arg_8h, arg_ch, &fcn.00c0b1b7::var_3ch, var_1bch, puStack444);\n            if (iVar7 < 0) goto code_r0x00c0b511;\n            if (!bVar5) {\n                fcn.00b99e9c(&fcn.00c0b1b7::var_3ch);\n            }\n        }\n        iVar3 = *arg_ch;\n        if (*(*(*(arg_8h + 4) + iVar3 * 4) + 8) == 0x41) {\n            iVar7 = iVar3 + 1;\n            iVar4 = *(arg_8h + 4);\n            *arg_ch = iVar7;\n            iVar10 = var_14h;\n            if (bVar5) {\n                fcn.00c0acb6(arg_8h, arg_ch);\n            }\n            else if (*(*(iVar4 + iVar7 * 4) + 8) == 0x4e) {\n                if (*(iVar8 + 0xc) != 5) {\n                    *arg_ch = iVar3;\n                    iVar7 = fcn.00c0aa66(arg_8h, arg_ch, arg_8h, &fcn.00c0b1b7::var_1bch, &fcn.00c0b1b7::var_18h);\n                    if (iVar7 < 0) goto code_r0x00c0b511;\n                }\n                iVar7 = fcn.00b9d060(arg_8h, *arg_ch, var_10h);\n                if (iVar7 < 0) goto code_r0x00c0b511;\n                if (0 < var_18h) {\n                    puVar9 = &fcn.00c0b1b7::var_1bch;\n                    for (iVar7 = var_18h; iVar10 = var_14h,  iVar7 != 0; iVar7 = iVar7 + -1) {\n                        *puVar9 = 0;\n                        puVar9 = puVar9 + 1;\n                    }\n                }\n                cVar6 = fcn.00b9cedd(arg_8h, arg_ch, iVar8, &fcn.00c0b1b7::var_1bch, 1);\n                if (cVar6 == '\\0') goto code_r0x00c0b511;\n            }\n            else {\n                iVar8 = fcn.00b9d060(arg_8h, iVar7, var_10h);\n                if (iVar8 < 0) goto code_r0x00c0b511;\n                iVar8 = fcn.00b9a000(arg_8h, arg_ch, &fcn.00c0b1b7::var_3ch, 0xffffffff);\n                if (iVar8 < 0) {\n                    arg_8h_00 = 0x6e;\n                    goto code_r0x00c0b50a;\n                }\n                fcn.00b99e9c(&fcn.00c0b1b7::var_3ch);\n            }\n        }\n        iVar8 = *arg_ch;\n        iVar7 = *(arg_8h + 4);\n        iVar1 = *(*(iVar7 + iVar8 * 4) + 8);\n        if (iVar1 == var_ch) goto code_r0x00c0b511;\n        if (iVar1 != 0x40) goto code_r0x00c0b4fc;\n        *arg_ch = iVar8 + 1;\n        iVar1 = *(*(iVar7 + (iVar8 + 1) * 4) + 8);\n    }\n    iVar8 = *arg_ch;\ncode_r0x00c0b4fc:\n    iVar7 = *(*(*(arg_8h + 4) + iVar8 * 4) + 10);\n    arg_8h_00 = var_ch;\ncode_r0x00c0b50a:\n    fcn.00bfa0b5(arg_8h_00, iVar7);\ncode_r0x00c0b511:\n    fcn.00b99a20();\n    return;\n}\n",
        "token_count": 2268
    },
    "00c0bbe3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_64h\n\nuint __cdecl fcn.00c0bbe3(int32_t arg_8h, int32_t *arg_ch, int32_t **arg_10h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    uint arg_8h_00;\n    int32_t **ppiVar5;\n    uint unaff_EDI;\n    uint uVar6;\n    int32_t *piVar7;\n    uint var_64h;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint *var_8h;\n    \n    ppiVar5 = arg_10h;\n    if (arg_10h[3] == 0xf) {\n        var_ch = *arg_10h;\n    }\n    else {\n        var_ch = NULL;\n    }\n    var_40h = 0;\n    var_3ch = 0;\n    var_38h = 0;\n    var_54h = 0;\n    var_4ch = 0;\n    var_8h = &fcn.00c0bbe3::var_54h;\n    var_44h = 0xc1fb84;\n    var_48h = 1;\n    fcn.00b977c7();\n    var_10h = 0;\n    cVar2 = fcn.00be6543();\n    if (cVar2 == '\\0') {\n        iVar3 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 10);\n    }\n    else {\n        iVar3 = 0x35;\n        piVar7 = *(*(arg_8h + 4) + *arg_ch * 4);\n        if (*(piVar7 + 2) == 0x35) {\n            iVar3 = *piVar7;\n            fcn.00b981a7(iVar3);\n            *arg_ch = *arg_ch + 1;\n        }\n        iVar4 = *(*(arg_8h + 4) + *arg_ch * 4);\n        if (*(iVar4 + 8) != 0x47) {\n            if ((*(iVar4 + 8) == 0x4e) && (ppiVar5[3] == 0xf)) {\n                piVar7 = 0x8;\n                arg_10h = ppiVar5;\n                iVar4 = fcn.00c0c8d7(arg_8h, arg_ch, &fcn.00c0bbe3::arg_10h, 8);\n                arg_ch = piVar7;\njoined_r0x00c0bd78:\n                if (-1 < iVar4) {\n                    uVar6 = fcn.00c0b851(arg_8h, arg_ch, iVar3);\n                    goto code_r0x00c0bf5d;\n                }\n            }\n            else {\n                if (var_30h == 0) {\n                    iVar1 = *(iVar4 + 10);\ncode_r0x00c0bd91:\n                    uVar6 = 0x80;\n                }\n                else {\n                    cVar2 = (**(*var_ch + 8))(&fcn.00c0bbe3::var_34h);\n                    if (cVar2 != '\\0') goto code_r0x00c0bd17;\n                    iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 10);\n                    uVar6 = 0x85;\n                }\n                fcn.00bfa0b5(uVar6, iVar1);\n            }\n            uVar6 = 0xffffffff;\n            goto code_r0x00c0bf5d;\n        }\n        if (var_30h != 0) {\n            cVar2 = (**(*var_ch + 4))(&fcn.00c0bbe3::var_34h);\n            if (cVar2 != '\\0') {\n                *arg_ch = *arg_ch + -1;\n                iVar3 = arg_8h;\n                iVar4 = fcn.00c0a2d2(arg_8h, arg_ch, &fcn.00c0bbe3::var_44h);\n                if (iVar4 < 0) goto code_r0x00c0bc5c;\n                var_10h = 1;\ncode_r0x00c0bd17:\n                iVar4 = *(*(arg_8h + 4) + *arg_ch * 4);\n                if (((*(iVar4 + 8) == 0x35) || (*(iVar4 + 8) == 0x4e)) || (*(iVar4 + 8) == 0x47)) {\n                    fcn.00b97f41(var_34h);\n                    iVar4 = fcn.00c0a1f2(var_10h, ppiVar5, &fcn.00c0bbe3::var_64h, &fcn.00c0bbe3::var_44h, var_10h);\n                    fcn.00b95a64();\n                    goto joined_r0x00c0bd78;\n                }\n                cVar2 = fcn.00be6b5f();\n                if (cVar2 == '\\0') {\n                    iVar1 = *(extraout_ECX + 10);\n                    goto code_r0x00c0bd91;\n                }\n                iVar1 = *(extraout_ECX + 8);\n                uVar6 = 0xffffffff;\n                *arg_ch = *arg_ch + 1;\n                var_24h = 0;\n                var_1ch = 0;\n                var_18h = 1;\n                iVar3 = fcn.00b9a000(arg_8h_00, arg_ch, arg_8h_00, 0xffffffff);\n                if (-1 < iVar3) {\n                    iVar3 = *(*(arg_8h + 4) + *arg_ch * 4);\n                    if (*(iVar3 + 8) == 0x7f) {\n                        ppiVar5 = arg_10h;\n                        if (iVar1 != 0x41) {\n                            fcn.00b97f41(var_34h);\n                            ppiVar5 = arg_10h;\n                            iVar3 = fcn.00c0a1f2(0, arg_10h, &fcn.00c0bbe3::var_64h, &fcn.00c0bbe3::var_44h, \n                                                 &fcn.00c0bbe3::var_8h);\n                            fcn.00b95a64();\n                            if (-1 < iVar3) {\n                                if (iVar1 == 0x52) {\n                                    fcn.00b99700(var_8h);\n                                }\n                                else {\n                                    if (iVar1 == 0x53) {\n                                        fcn.00b99687(&fcn.00c0bbe3::var_24h);\n                                    }\n                                    else if (iVar1 == 0x54) {\n                                        fcn.00be65b5(&fcn.00c0bbe3::var_24h);\n                                    }\n                                    else {\n                                        if (iVar1 == 0x55) {\n                                            fcn.00b9963c(var_8h);\n                                            goto code_r0x00c0bec8;\n                                        }\n                                        fcn.00be655c(&fcn.00c0bbe3::var_24h);\n                                    }\n                                    fcn.00b99e9c(var_8h);\n                                }\n                            }\n                        }\ncode_r0x00c0bec8:\n                        fcn.00be6665(0xc0bed4);\n                        if (ppiVar5[3] == 0xf) {\n                            fcn.00bf1b85(8);\n                        }\n                        fcn.00b97f41(var_34h);\n                        uVar6 = fcn.00c0a260(ppiVar5, &fcn.00c0bbe3::var_64h, &fcn.00c0bbe3::var_44h);\n                        fcn.00b95a64();\n                    }\n                    else {\n                        fcn.00bfa0b5(0x72, *(iVar3 + 10));\n                    }\n                }\n                fcn.00b99a20();\ncode_r0x00c0bf5d:\n                fcn.00b95a64();\n                fcn.00b99a20();\n                fcn.00be66f4();\n                return uVar6;\n            }\n            iVar3 = 0x85;\n        }\n    }\n    fcn.00bfa0b5(iVar3, unaff_EDI);\ncode_r0x00c0bc5c:\n    fcn.00b95a64();\n    fcn.00b99a20();\n    fcn.00be66f4();\n    return 0xffffffff;\n}\n",
        "token_count": 2042
    },
    "00c0c2a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c0c2a8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 9) == '\\0') {\n        iVar1 = fcn.00bb0ff6(0x18);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            *(iVar1 + 8) = 0;\n            fcn.00b99ac0(arg_8h);\n        }\n        *(iVar1 + 0x10) = in_ECX[1];\n        in_ECX[1] = iVar1;\n    }\n    else {\n        fcn.00b99e9c(arg_8h);\n        *(in_ECX + 9) = 0;\n    }\n    *in_ECX = *in_ECX + 1;\n    return;\n}\n",
        "token_count": 201
    },
    "00c0c2f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00c0c2f7(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 4);\n    if (*(param_1 + 9) != '\\0') {\n        iVar1 = *(iVar1 + 0x10);\n    }\n    return iVar1;\n}\n",
        "token_count": 80
    },
    "00c0c304": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00c0c304(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0xc1fb14);\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"GetSystemWow64DirectoryW\");\n            param_1[2] = iVar1;\n        }\n    }\n    iVar1 = param_1[2];\n    if (iVar1 == 0) {\n        iVar1 = 0xbcb79f;\n    }\n    return iVar1;\n}\n",
        "token_count": 166
    },
    "00c0c33b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c0c33b(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_stack_fffffed0;\n    uint var_124h;\n    uint var_24h;\n    \n    if (arg_ch != 0) {\n        fcn.00c0c3b7(&var_24h);\n        iVar1 = fcn.00bb7e34(&var_124h, 0x80, arg_ch, &var_24h);\n        if (iVar1 == 0) {\n            var_124h._0_2_ = 0;\n        }\n        in_stack_fffffed0 = &var_124h;\n    }\n    fcn.00b97f41(in_stack_fffffed0);\n    return arg_8h;\n}\n",
        "token_count": 193
    },
    "00c0c3b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00c0c3b7(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_24h;\n    \n    if (arg_8h == NULL) {\n        fcn.00be7631(0x80004005);\n        in_ECX = extraout_ECX;\n    }\n    iVar1 = fcn.00bb7040(&var_24h, in_ECX);\n    if (iVar1 == 0) {\n        puVar2 = &var_24h;\n        puVar3 = arg_8h;\n        for (iVar1 = 9; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    else {\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 240
    },
    "00c0c9f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c0c9f3(int32_t arg_8h, int32_t *arg_ch, int32_t **arg_10h, uint arg_14h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint *puVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint uVar6;\n    uint in_stack_ffffff70;\n    int32_t in_stack_ffffff74;\n    uint uVar7;\n    uint in_stack_ffffffa4;\n    uint in_stack_ffffffa8;\n    uint in_stack_ffffffac;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint *var_8h;\n    uint *var_4h;\n    \n    uVar6 = 0;\n    var_28h = 0xc1fb84;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    fcn.00b977c7();\n    if ((*0xc57f18 & 1) == 0) {\n        *0xc57f18 = *0xc57f18 | 1;\n        uVar7 = 0xc1f910;\n        fcn.00b97f41(0xc1f910);\n        fcn.00bf6bbd(0x2a, 0, uVar7, in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac);\n        fcn.00bb2f80(0xbcb832);\n    }\n    var_4h = &var_38h;\n    var_2ch = 1;\n    var_38h = 0;\n    var_30h = 0;\n    var_8h = *(*(arg_8h + 4) + *arg_ch * 4);\n    iVar1 = *(var_8h + 10);\n    cVar4 = fcn.00be6543();\n    puVar3 = var_8h;\n    if (cVar4 == '\\0') {\n        iVar5 = fcn.00c096db(0xa9, 0, L\"Variable must be of type \\'Object\\'.\", 1);\n        if (-1 < iVar5) {\n            fcn.00c0c40d(arg_8h, arg_ch, 0);\ncode_r0x00c0cbed:\n            fcn.00bf77cf(0xc574e8);\n            fcn.00be6aa3(1, 0);\n            goto code_r0x00c0cc1e;\n        }\ncode_r0x00c0cb89:\n        fcn.00bfa0b5(in_stack_ffffff70, in_stack_ffffff74);\n    }\n    else {\n        var_8h = 0x35;\n        iVar2 = *(puVar3 + 2);\n        if (iVar2 != 0x35) {\n            if (iVar2 == 0x47) {\n                *arg_ch = *arg_ch + -1;\n                fcn.00b97d2c(0xc1f910);\n                goto code_r0x00c0cafd;\n            }\ncode_r0x00c0cbb8:\n            fcn.00b99e9c(in_stack_ffffff70);\n            goto code_r0x00c0cc1e;\n        }\n        fcn.00b981a7(*puVar3);\ncode_r0x00c0cafd:\n        if (*(*(*(arg_8h + 4) + 4 + *arg_ch * 4) + 8) != 0x47) {\n            if ((arg_10h[3] != 0xf) || (cVar4 = (**(**arg_10h + 8))(&var_18h),  cVar4 != '\\0')) {\n                *arg_ch = *arg_ch + 1;\n                uVar7 = 0;\ncode_r0x00c0cb66:\n                iVar5 = fcn.00c0a1f2(uVar7, arg_10h, &var_18h, &var_28h, &var_4h);\n                if (-1 < iVar5) {\n                    iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 8);\n                    if ((iVar1 == var_8h) || (iVar1 == 0x47)) {\n                        cVar4 = fcn.00be6543();\n                        if (cVar4 != '\\0') {\n                            uVar6 = fcn.00c0c9f3(arg_8h, arg_ch, var_4h, arg_14h);\n                            goto code_r0x00c0cc1e;\n                        }\n                        arg_10h = CONCAT13(1, arg_10h._0_3_);\n                        if (*(in_ECX + 0x484) != '\\0') goto code_r0x00c0cc1e;\n                        fcn.00c0c40d(arg_8h, arg_ch, &arg_10h + 3);\n                        if (arg_10h._3_1_ != '\\0') goto code_r0x00c0cc1e;\n                        goto code_r0x00c0cbed;\n                    }\n                    goto code_r0x00c0cbb8;\n                }\n            }\ncode_r0x00c0cb81:\n            in_stack_ffffff70 = 0xaa;\n            in_stack_ffffff74 = iVar1;\n            goto code_r0x00c0cb89;\n        }\n        if ((arg_10h[3] == 0xf) && (cVar4 = (**(**arg_10h + 4))(&var_18h),  cVar4 == '\\0')) goto code_r0x00c0cb81;\n        iVar5 = fcn.00c0a2d2(arg_8h, arg_ch, &var_28h);\n        if (-1 < iVar5) {\n            uVar7 = 1;\n            goto code_r0x00c0cb66;\n        }\n        fcn.00bf9ea3();\n    }\n    uVar6 = 0xffffffff;\ncode_r0x00c0cc1e:\n    fcn.00b99a20();\n    fcn.00b95a64();\n    fcn.00be66f4();\n    return uVar6;\n}\n",
        "token_count": 1472
    },
    "00c0cdf1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0cdf1(int32_t *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t **ppiVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uchar *puVar9;\n    uint *puVar10;\n    uchar *puVar11;\n    int32_t *piVar12;\n    uint *puVar13;\n    ulong uVar14;\n    uint uVar15;\n    int32_t iVar16;\n    int32_t *piVar17;\n    uchar *puStack924;\n    uchar *puStack920;\n    uint *puStack916;\n    int32_t iStack912;\n    uint32_t uStack908;\n    int32_t iStack904;\n    int32_t *piStack900;\n    int32_t iStack896;\n    int32_t iStack892;\n    int32_t iStack888;\n    int32_t iStack884;\n    uint uStack880;\n    uint uStack872;\n    uint uStack868;\n    uint uStack864;\n    uint uStack860;\n    uint uStack856;\n    uint uStack852;\n    uint uStack848;\n    int32_t *piStack844;\n    int32_t *piStack840;\n    int32_t *piStack836;\n    int32_t *piStack832;\n    int32_t *piStack828;\n    int32_t iStack824;\n    int32_t iStack820;\n    uint32_t uStack812;\n    uchar auStack808 [8];\n    int32_t aiStack800 [4];\n    uint auStack784 [2];\n    int32_t aiStack776 [193];\n    \n    iStack896 = arg_10h != '\\0';\n    uStack880 = 0;\n    iVar6 = *(arg_8h[1] + iStack896 * -4 + 4);\n    fcn.00b99997();\n    ppiVar1 = *(iVar6 + 8);\n    piStack840 = *ppiVar1;\n    piStack836 = ppiVar1[1];\n    piStack832 = ppiVar1[2];\n    piStack828 = ppiVar1[3];\n    *piStack828 = *piStack828 + 1;\n    uStack812 = iStack896 + -3 + arg_8h[2];\n    uStack908 = uStack812 / 2;\n    if (uStack908 * 2 != uStack812) {\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        fcn.00be6aa3(4, 0);\n        goto code_r0x00c0d2df;\n    }\n    uStack872 = 0xc4b08c;\n    uStack868 = 0;\n    puVar9 = 0xffffffff;\n    uStack864 = 0;\n    uStack860 = 0;\n    uStack812 = uStack908;\n    cVar2 = fcn.00c0dab9(&stack0xfffffcb8, &stack0xfffffcc8);\n    if (cVar2 == '\\0') {\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        fcn.00be6aa3(2, 0);\n    }\n    else {\n        uVar15 = 3;\n        iStack892 = 3 - iStack904;\n        iStack824 = 0;\n        puStack924 = NULL;\n        if (0 < iStack820) {\n            do {\n                puStack920 = puVar9 + 1;\n                fcn.00bff835(&stack0xfffffc68);\n                iVar6 = *(iStack912 + arg_8h[1]);\n                fcn.00b99997();\n                puVar7 = *(iVar6 + 8);\n                uStack856 = *puVar7;\n                uStack852 = puVar7[1];\n                uStack848 = puVar7[2];\n                piStack844 = puVar7[3];\n                *piStack844 = *piStack844 + 1;\n                iStack888 = puStack924 * 0x18;\n                puVar9 = &stack0xfffffca8;\n                cVar2 = fcn.00c0d2f3(puVar9, &stack0xfffffcf8 + iStack888);\n                if (cVar2 == '\\0') {\n                    fcn.00b99a20();\n                    arg_ch[3] = 1;\n                    uVar15 = 1;\ncode_r0x00c0d222:\n                    *arg_ch = 0;\n                    fcn.00be6aa3(uVar15, 0);\n                    fcn.00b95a64();\n                    goto code_r0x00c0d2d6;\n                }\n                piStack900 = &stack0xfffffcf8 + iStack896;\n                if ((*piStack900 == 0x10) && (*(&stack0xfffffcfc + iStack896) == 0)) {\n                    iVar6 = arg_8h[1];\n                    if (*(*(puStack920 + iVar6 + 4) + 0xc) != 0xc) {\n                        fcn.00b99a20();\n                        arg_ch[3] = 1;\n                        uVar15 = 5;\n                        goto code_r0x00c0d222;\n                    }\n                    uVar14 = fcn.00bf89e2();\n                    uStack908 = uVar14 - 1U >> 2;\n                    puStack916 = puStack916 + uStack908;\n                    iStack824 = iStack824 + (uStack908 + 1) * *(&stack0xfffffd00 + iStack896);\n                    iVar5 = puStack916 - uStack908;\n                    piVar17 = uVar14 >> 0x20;\n                    puVar11 = puStack924;\n                    if (puStack924 < iVar5) {\n                        iStack884 = iVar5 - puStack924;\n                        iVar3 = iStack884;\n                        puVar7 = &stack0xfffffcf0 + (uStack908 + iVar5) * 0x18;\n                        puVar8 = &stack0xfffffcf0 + iVar5 * 0x18;\n                        do {\n                            puVar10 = puVar8;\n                            puVar13 = puVar7;\n                            for (iVar5 = 6; iVar5 != 0; iVar5 = iVar5 + -1) {\n                                *puVar13 = *puVar10;\n                                puVar10 = puVar10 + 1;\n                                puVar13 = puVar13 + 1;\n                            }\n                            iVar3 = iVar3 + -1;\n                            piVar17 = piStack900;\n                            puVar7 = puVar7 + -6;\n                            puVar8 = puVar8 + -6;\n                            puVar11 = puVar9;\n                        } while (iVar3 != 0);\n                    }\n                    if ((*(puStack920 + iVar6 + 4))[3] == 0xc) {\n                        iVar6 = **(puStack920 + iVar6 + 4);\n                    }\n                    else {\n                        iVar6 = 0;\n                    }\n                    piVar12 = *(iVar6 + 8);\n                    if (puVar11 < puVar11 + uStack908 + 1) {\n                        iVar6 = (puVar11 + uStack908 + 1) - puVar11;\n                        puVar11 = puVar11 + iVar6;\n                        do {\n                            iVar5 = *piVar12;\n                            piVar12 = piVar12 + 1;\n                            piVar17[-2] = iVar5;\n                            *piVar17 = 0x10;\n                            piVar17[1] = 0;\n                            piVar17[2] = *(&stack0xfffffd00 + iStack896);\n                            iVar6 = iVar6 + -1;\n                            piVar17 = piVar17 + 6;\n                        } while (iVar6 != 0);\n                    }\n                    puVar9 = puVar11 + -1;\n                }\n                else {\n                    iStack824 = iStack824 + *(&stack0xfffffd00 + iStack896);\n                    puVar9 = puStack924;\n                }\n                puStack920 = puStack920 + 8;\n                uVar15 = 0xc0d0ba;\n                fcn.00b95a64();\n                puStack924 = puStack924 + 1;\n            } while (puStack924 < iStack820);\n        }\n        if (arg_10h == '\\0') {\n            piVar17 = arg_8h;\n            iStack884 = fcn.00c0dbdc(&stack0xfffffccc, arg_8h);\n            if (iStack884 == 0) {\n                fcn.00b99a20();\n                arg_ch[3] = 1;\n                *arg_ch = 0;\n                goto code_r0x00c0d2d6;\n            }\n        }\n        else {\n            piVar17 = 0xc0d0e9;\n            iStack820 = fcn.00bf89bb();\n        }\n        puVar9 = &stack0xfffffc9c;\n        fcn.00c0cc82(puVar9);\n        fcn.00c0dd64(&stack0xfffffcc8, arg_8h, 4 - iStack896, puVar9, uVar15);\n        piVar12 = piStack840;\n        piStack840 = piVar17;\n        iVar6 = fcn.00bb0e48(&stack0xfffffcac);\n        if (iVar6 == 0) {\n            fcn.00bfa0b5(0x67, 0xffffffff);\n            uVar15 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0);\n            (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar15);\n        }\n        piStack844 = piVar12;\n        uVar4 = fcn.00b9942e();\n        uVar15 = uVar4;\n        fcn.00b991b0(uVar4, 1);\n        if (piStack840 == 0x1) {\n            uVar4 = fcn.00b98ea0(uVar4, 2, 1);\n            fcn.00c0d95d(&stack0xfffffcc0, uVar4);\n        }\n        if (0 < piStack844) {\n            iVar5 = puStack916 << 2;\n            iVar6 = 0;\n            do {\n                iVar3 = iVar6 + 1;\n                iVar16 = iVar5;\n                puStack916 = fcn.00b98ea0(uVar15, 2, 1);\n                if (*(&stack0xfffffce0 + *piStack900[iVar6] * 0x18) == 0x10) {\n                    iVar6 = *(arg_8h[1] + 4 + iVar5);\n                    if (*(iVar6 + 0xc) == 0xc) {\n                        fcn.00b99e9c(iVar6);\n                    }\n                    else {\n                        uVar4 = fcn.00bf89bb();\n                        puVar7 = puStack916;\n                        iVar5 = iVar16;\n                        fcn.00b99a20();\n                        *puVar7 = uVar4;\n                        puVar7[3] = 7;\n                    }\n                }\n                else {\n                    fcn.00c0d95d(&stack0xfffffcd8 + *piStack900[iVar6] * 0x18, puStack916);\n                }\n                iVar5 = iVar5 + 8;\n                iVar6 = iVar3;\n            } while (iVar3 < piStack844);\n        }\n        if ((arg_10h == '\\0') && (*(*arg_8h[1] + 0xc) == 4)) {\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iStack896);\n        }\n    }\ncode_r0x00c0d2d6:\n    fcn.00c0cd60();\ncode_r0x00c0d2df:\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 2689
    },
    "00c0d95d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00c0d95d(double *arg_8h, double *arg_ch)\n\n{\n    float fVar1;\n    uint uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_18h;\n    uint var_10h;\n    double dStack12;\n    \n    if (0xf < *(arg_8h + 1)) goto code_r0x00c0da5e;\n    // switch table (16 cases) at 0xc0da79\n    switch(*(*(arg_8h + 1) * 4 + 0xc0da79)) {\n    case 0xc0d97c:\n        uVar3 = fcn.00bf573e();\n        fcn.00b99bf8(uVar3);\n        fcn.00bb106c(uVar3);\n        break;\n    case 0xc0d99d:\n        fcn.00b99bf8(*arg_8h);\n        break;\n    default:\n        uVar4 = *arg_8h;\ncode_r0x00c0d9ae:\n        fcn.00b99a20();\n        *(arg_ch + 0xc) = 1;\ncode_r0x00c0d9bf:\n        *arg_ch = uVar4;\n        break;\n    case 0xc0d9c6:\n        uVar3 = *arg_8h;\n        fcn.00b99a20();\n        *(arg_ch + 4) = 0;\n        *(arg_ch + 0xc) = 2;\n        *arg_ch = uVar3;\n        break;\n    case 0xc0d9e1:\n        uVar4 = *arg_8h;\n        goto code_r0x00c0d9ae;\n    case 0xc0d9e6:\n        uVar4 = *arg_8h;\n        goto code_r0x00c0d9ae;\n    case 0xc0d9eb:\n        uVar4 = *arg_8h;\n        goto code_r0x00c0d9ae;\n    case 0xc0d9f0:\n        fVar1 = *arg_8h;\n        goto code_r0x00c0d9f2;\n    case 0xc0da0d:\n        fVar1 = *arg_8h;\ncode_r0x00c0d9f2:\n        dStack12 = fVar1;\n        fcn.00b99a20();\n        *arg_ch = dStack12;\n        *(arg_ch + 0xc) = 3;\n        break;\n    case 0xc0da11:\n        uVar4 = *arg_8h;\n        fcn.00b99a20();\n        *(arg_ch + 0xc) = 7;\n        goto code_r0x00c0d9bf;\n    case 0xc0da26:\n        uVar3 = *arg_8h;\n        uVar2 = *(arg_8h + 4);\n        fcn.00b99a20();\n        *(arg_ch + 4) = uVar2;\n        *(arg_ch + 0xc) = 2;\n        *arg_ch = uVar3;\n        break;\n    case 0xc0da46:\n        var_18h._0_2_ = 9;\n        var_10h = *arg_8h;\n        fcn.00bf7804(&var_18h);\n    }\ncode_r0x00c0da5e:\n    if (*(arg_8h + 0x14) != 0) {\n        fcn.00bb2f95(*(arg_8h + 0x14));\n    }\n    return;\n}\n",
        "token_count": 830
    },
    "00c0e054": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ndouble __cdecl fcn.00c0e054(int32_t arg_8h)\n\n{\n    uchar uVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    float10 fVar3;\n    double dVar4;\n    int32_t iVar5;\n    int32_t iStack36;\n    int32_t aiStack32 [2];\n    uint uStack24;\n    uint uStack20;\n    \n    uVar1 = *0xc56455;\n    if (*0xc56408 == 1) {\n        dVar4 = 0.0;\n    }\n    else {\n        *0xc56281 = 1;\n        aiStack32[0] = CONCAT13(*0xc56455, aiStack32[0]);\n        aiStack32[0] = fcn.00b99fbd(**(arg_8h + 4));\n        *0xc56455 = *(aiStack32[0] + 0x20);\n        fcn.00b98561(*(aiStack32[0] + 0x10));\n        uStack20 = 1;\n        iVar2 = 0;\n        aiStack32[0] = 0;\n        uStack24 = 0;\n        if (0 < *(arg_8h + 0x1c)) {\n            arg_8h_00 = arg_8h + 0x40;\n            do {\n                iVar5 = arg_8h_00;\n                fcn.00c0d95d(arg_8h_00, aiStack32);\n                uVar1 = iVar5 >> 0x18;\n                fcn.00b98620(*(*(arg_8h + 4) + 4 + iVar2 * 4), &stack0xffffffd8, 0x200, 1);\n                iVar2 = iVar2 + 1;\n                arg_8h_00 = arg_8h_00 + 0x18;\n            } while (iVar2 < *(arg_8h + 0x1c));\n        }\n        fcn.00b9b89c(*(iStack36 + 0x10) + 1, 0, aiStack32);\n        fcn.00b9843f();\n        if ((*(arg_8h + 0x30) == 9) || (*(arg_8h + 0x30) == 10)) {\n            fVar3 = fcn.00b99cf8();\n            *0xc56788 = fVar3;\n            dVar4 = *0xc56788;\n        }\n        else {\n            dVar4 = fcn.00b99d46();\n        }\n        *0xc56281 = 0;\n        *0xc56455 = uVar1;\n        fcn.00b99a20();\n    }\n    return dVar4;\n}\n",
        "token_count": 628
    },
    "00c0e177": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0e177(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_10h;\n    \n    iVar2 = fcn.00b99fbd(arg_8h);\n    if ((iVar2 == 0) || (*(iVar2 + 0x18) != *(iVar2 + 0x14))) {\ncode_r0x00c0e18e:\n        uVar3 = 0;\n    }\n    else {\n        fcn.00b93f84(arg_8h);\n        iVar4 = fcn.00b971c8(*(iVar2 + 0x10));\n        iVar6 = 3;\n        if (*(iVar2 + 0x20) != '\\0') {\n            iVar6 = 4;\n        }\n        iVar5 = 0;\n        if (0 < *(iVar2 + 0x14)) {\n            iVar6 = iVar6 << 2;\n            do {\n                fcn.00b977c7();\n                if (iVar5 != 0) {\n                    if (*(*(*(iVar4 + 4) + iVar6) + 8) == 0x40) {\n                        iVar6 = iVar6 + 4;\n                        goto code_r0x00c0e1e8;\n                    }\ncode_r0x00c0e22a:\n                    fcn.00b95a64();\n                    goto code_r0x00c0e18e;\n                }\ncode_r0x00c0e1e8:\n                puVar1 = *(iVar6 + *(iVar4 + 4));\n                if (*(puVar1 + 2) != 0x33) goto code_r0x00c0e22a;\n                fcn.00b981a7(*puVar1);\n                fcn.00b93f84(&var_10h);\n                iVar6 = iVar6 + 4;\n                fcn.00b95a64();\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < *(iVar2 + 0x14));\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 503
    },
    "00c0e33e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0e33e(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    char cVar4;\n    uint8_t uVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    int16_t *piVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t *piVar11;\n    int32_t **ppiVar12;\n    int32_t unaff_ESI;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint in_stack_ffffff68;\n    uint in_stack_ffffff6c;\n    uint32_t uStack124;\n    int32_t *piVar15;\n    int32_t *piVar16;\n    int32_t arg_ch_00;\n    int32_t iStack100;\n    int32_t *piStack96;\n    int32_t *piStack92;\n    int32_t *piStack88;\n    int32_t iStack80;\n    uint32_t uStack76;\n    int32_t iStack72;\n    int32_t *piStack68;\n    uint32_t uStack56;\n    int32_t *piStack52;\n    uint32_t uStack48;\n    int32_t *piStack44;\n    uchar auStack40 [36];\n    \n    uStack76 = 0;\n    piStack92 = fcn.00bb0ff6(0x340);\n    if (piStack92 == NULL) {\n        piStack92 = NULL;\n    }\n    else {\n        *piStack92 = 0xc1f968;\n        piStack92[1] = 0;\n        piStack92[2] = 0;\n        piStack92[3] = 0;\n    }\n    piVar11 = piStack92;\n    piStack88 = piStack92 + 4;\n    iVar1 = *(*(arg_8h + 4) + 4);\n    piStack96 = piStack92;\n    fcn.00b99997();\n    puVar6 = *(iVar1 + 8);\n    uStack56 = *puVar6;\n    piStack52 = puVar6[1];\n    uStack48 = puVar6[2];\n    piStack44 = puVar6[3];\n    *piStack44 = *piStack44 + 1;\n    fcn.00b97faf();\n    uVar7 = uStack56;\n    pcVar2 = _sym.imp.USER32.dll_CharLowerBuffW;\n    piVar15 = piStack52;\n    (*_sym.imp.USER32.dll_CharLowerBuffW)();\n    iVar1 = *(*(arg_8h + 4) + 8);\n    fcn.00b99997();\n    piVar16 = *(iVar1 + 8);\n    iStack80 = *piVar16;\n    uStack76 = piVar16[1];\n    iStack72 = piVar16[2];\n    piStack68 = piVar16[3];\n    *piStack68 = *piStack68 + 1;\n    fcn.00b97faf();\n    uVar3 = uStack76;\n    iVar1 = iStack80;\n    (*pcVar2)();\n    uVar10 = 0;\n    piStack92 = NULL;\n    uVar14 = *(iStack100 + 0x1b8);\n    if (uVar14 != 0) {\n        ppiVar12 = *(iStack100 + 0x1b4);\n        do {\n            piStack92 = uVar10;\n            if (**ppiVar12 == 0) break;\n            uVar10 = uVar10 + 1;\n            ppiVar12 = ppiVar12 + 1;\n            piStack92 = uVar10;\n        } while (uVar10 < uVar14);\n    }\n    if (piStack92 == uVar14) {\n        piVar11 = piVar15;\n        fcn.00bff835(&stack0xffffff90);\n        piVar15 = piVar11;\n    }\n    else {\n        **(*(iStack100 + 0x1b4) + piStack92 * 4) = piVar11;\n    }\n    iVar13 = **(arg_8h + 4);\n    if (*(iVar13 + 0xc) == 0xe) {\n        arg_ch_00 = 1;\n        puVar6 = fcn.00bf7ba4(auStack40);\n    }\n    else {\n        arg_ch_00 = 2;\n        fcn.00b99997();\n        puVar6 = *(iVar13 + 8);\n        uStack56 = *puVar6;\n        piStack52 = puVar6[1];\n        uStack48 = puVar6[2];\n        piStack44 = puVar6[3];\n        *piStack44 = *piStack44 + 1;\n        puVar6 = &uStack56;\n    }\n    cVar4 = fcn.00c0e177(puVar6, piVar11);\n    uVar5 = 1 - (cVar4 != '\\0');\n    uStack124 = uVar3 & 0xffffff | uVar5 << 0x18;\n    if ((uVar7 & 2) != 0) {\n        uVar7 = uVar7 & 0xfffffffd;\n        fcn.00b95a64();\n    }\n    if ((uVar7 & 1) != 0) {\n        fcn.00b95a64();\n    }\n    if (uVar5 == 0) {\n        cVar4 = fcn.00c0dab9(&iStack80, arg_ch_00);\n        if (cVar4 != '\\0') {\n            iVar13 = 0;\n            uVar14 = 0;\n            while (piVar8 = fcn.00b97b52(iVar13),  *piVar8 != 0) {\n                piVar8 = fcn.00b97b52(iVar13);\n                iVar13 = iVar13 + 1;\n                if (*piVar8 == 0x3b) {\n                    uVar14 = uVar14 + 1;\n                }\n            }\n            piVar16 = piVar15;\n            iVar9 = arg_ch_00;\n            if ((1 < piStack92) && (piVar8 = fcn.00b97b52(iVar13 + -1),  uVar14 = uStack124,  *piVar8 != 0x3b)) {\n                uVar14 = uStack124 + 1;\n            }\n            *(arg_ch_00 + 0xc) = uVar14;\n            *(arg_ch_00 + 8) = 0;\n            piVar11 = piVar16;\n            if (0 < uVar14) {\n                piVar11 = arg_ch_00 + 0x40;\n                do {\n                    cVar4 = fcn.00c0d2f3(&piStack96, piVar11 + -4);\n                    if (cVar4 == '\\0') {\n                        fcn.00b99a20();\n                        in_stack_ffffff6c = 0;\n                        in_stack_ffffff68 = 2;\n                        goto code_r0x00c0e69d;\n                    }\n                    piVar11 = piVar16 + 6;\n                    *(arg_ch_00 + 8) = *(arg_ch_00 + 8) + *piVar16;\n                    iVar9 = iVar9 + 1;\n                    piVar16 = piVar11;\n                } while (iVar9 < iVar1);\n            }\n            iVar13 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x77, 0x3000, 0x40);\n            fcn.00bb1080(iVar13, fcn.00bb0f2e, 0x77);\n            *(**(*(unaff_ESI + 0x1b4) + piVar11 * 4) + 0x10) = iVar13;\n            *(iVar13 + 0x51) = fcn.00c0e054;\n            *(iVar13 + 10) = piVar15;\n            *(iVar13 + 0x12) = iVar1;\n            if ((*(iVar1 + 0xc) == 0) || (*(iVar1 + 4) == 1)) {\n                *(iVar13 + 0x74) = 0xc3;\n            }\n            else {\n                *(iVar13 + 0x74) = 0xc2;\n                *(iVar13 + 0x75) = *(iVar1 + 8);\n            }\n            fcn.00b99a20();\n            arg_ch[3] = 1;\n            *arg_ch = piVar11 + 1;\n            goto code_r0x00c0e6cd;\n        }\n        fcn.00b99a20();\n        in_stack_ffffff6c = 0;\n        arg_ch[3] = 1;\n        in_stack_ffffff68 = 1;\n    }\n    else {\n        fcn.00b99a20();\ncode_r0x00c0e69d:\n        arg_ch[3] = 1;\n    }\n    *arg_ch = 0;\n    fcn.00be6aa3(in_stack_ffffff68, in_stack_ffffff6c);\ncode_r0x00c0e6cd:\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 2088
    },
    "00c0e6ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0e6ea(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar2 = fcn.00b99c9c();\n    iVar2 = iVar2 + -1;\n    if (((iVar2 < 0) || (*(in_ECX + 0x1a8) <= iVar2)) || (piVar1 = *(*(in_ECX + 0x1a4) + iVar2 * 4),  *piVar1 == 0)) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(*piVar1);\n        **(*(in_ECX + 0x1a4) + iVar2 * 4) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 218
    },
    "00c0e74b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0e74b(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.00b99997();\n    arg_8h = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(**(iVar1 + 8));\n    piVar4 = arg_ch;\n    if (arg_8h == 0) {\n        fcn.00b99a20();\n        *piVar4 = -1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0x1a8);\n        uVar5 = 0;\n        if (uVar2 != 0) {\n            ppiVar3 = *(in_ECX + 0x1a4);\n            do {\n                if (**ppiVar3 == 0) break;\n                uVar5 = uVar5 + 1;\n                ppiVar3 = ppiVar3 + 1;\n            } while (uVar5 < uVar2);\n        }\n        if (uVar5 == uVar2) {\n            fcn.00bff835(&arg_8h);\n        }\n        else {\n            **(*(in_ECX + 0x1a4) + uVar5 * 4) = arg_8h;\n        }\n        piVar4 = arg_ch;\n        fcn.00b99a20();\n        *piVar4 = uVar5 + 1;\n    }\n    piVar4[3] = 1;\n    return 0;\n}\n",
        "token_count": 390
    },
    "00c0e7e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0e7e5(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint arg_10h;\n    uint arg_14h;\n    uint arg_18h;\n    int32_t *arg_1ch;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_ch_00;\n    uint *puVar4;\n    int32_t in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    \n    iVar3 = arg_8h;\n    arg_ch_00 = 0;\n    if (1 < *(arg_8h + 8)) {\n        iVar2 = fcn.00bf89bb();\n        puVar4 = arg_ch;\n        if (iVar2 == 0) {\n            fcn.00b99a20();\n            *puVar4 = 0;\n            goto code_r0x00c0e877;\n        }\n        arg_ch_00 = fcn.00bf89bb();\n    }\n    arg_8h = 0;\n    iVar3 = **(iVar3 + 4);\n    fcn.00b99997();\n    puVar4 = arg_ch;\n    puVar1 = *(iVar3 + 8);\n    arg_10h = *puVar1;\n    arg_14h = puVar1[1];\n    arg_18h = puVar1[2];\n    arg_1ch = puVar1[3];\n    *arg_1ch = *arg_1ch + 1;\n    iVar3 = fcn.00bf79b3(&arg_8h, arg_ch_00, arg_10h, arg_14h, arg_18h, arg_1ch);\n    if (iVar3 != 0) {\n        return 0;\n    }\n    fcn.00b99a20();\n    *puVar4 = 0;\n    in_stack_ffffffd4 = 0;\n    in_stack_ffffffd0 = arg_8h;\ncode_r0x00c0e877:\n    puVar4[3] = 1;\n    fcn.00be6aa3(in_stack_ffffffd0, in_stack_ffffffd4);\n    return 0;\n}\n",
        "token_count": 493
    },
    "00c0e893": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0e893(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uint in_stack_ffffffcc;\n    uint uVar3;\n    \n    if (*(**(arg_8h + 4) + 0xc) == 0xc) {\n        if (((*(arg_8h + 8) < 3) || (cVar1 = fcn.00b99dae(0x29),  cVar1 != '\\0')) ||\n           (iVar2 = fcn.00b99c9c(),  -1 < iVar2 + -1)) {\n            fcn.00b99ac0(*(*(arg_8h + 4) + 4));\n            fcn.00b99c9c();\n            fcn.00b99a20();\n            uVar3 = fcn.00bf64e3(&stack0xffffffe0, arg_ch, unaff_ESI);\n            fcn.00be6aa3(uVar3, arg_ch);\n            fcn.00b99a20();\n            return 0;\n        }\n        fcn.00b99a20();\n        uVar3 = 0;\n        arg_ch[3] = 1;\n        in_stack_ffffffcc = 5;\n    }\n    else {\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        uVar3 = 1;\n    }\n    *arg_ch = 0;\n    fcn.00be6aa3(in_stack_ffffffcc, uVar3);\n    return 0;\n}\n",
        "token_count": 365
    },
    "00c0e99b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0e99b(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = arg_ch;\n    ppiVar1 = arg_8h + 4;\n    piVar2 = **ppiVar1;\n    if (piVar2[3] == 0xc) {\n        if (*(arg_8h + 8) < 2) {\n            if (piVar2[3] == 0xc) {\n                iVar4 = *piVar2;\n            }\n            else {\n                iVar4 = 0;\n            }\n            iVar4 = *(iVar4 + 8);\n            fcn.00b99a20();\n            piVar3[3] = 7;\n            *piVar3 = iVar4;\n        }\n        else {\n            var_8h = 0;\n            arg_8h = 0;\n            var_10h = 0;\n            fcn.00b99ac0((*ppiVar1)[1]);\n            if (var_ch != 4) {\n                var_18h = fcn.00b99c9c();\n                var_18h = var_18h + -1;\n                fcn.00b99a20();\n                var_ch = 1;\n            }\n            iVar4 = fcn.00bf641c(&var_18h, &var_8h, &arg_8h);\n            piVar2 = arg_ch;\n            fcn.00b99a20();\n            if (iVar4 == 0) {\n                piVar2[3] = 1;\n                *piVar2 = 0;\n                fcn.00be6aa3(arg_8h, 0);\n            }\n            else {\n                piVar2[3] = 7;\n                *piVar2 = iVar4;\n            }\n            fcn.00b99a20();\n        }\n    }\n    else {\n        fcn.00b99a20();\n        piVar3[3] = 1;\n        *piVar3 = 0;\n        fcn.00be6aa3(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 541
    },
    "00c0f313": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0f313(uint arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint in_ECX;\n    uint var_4h;\n    \n    puVar1 = arg_ch;\n    fcn.00b99a20();\n    *puVar1 = 0;\n    puVar1[3] = 1;\n    fcn.00be6aa3(1, 0);\n    fcn.00b99997();\n    fcn.00bf3e91(&arg_ch + 3);\n    if (arg_ch._3_1_ == '\\0') {\n        return 0;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x200, 0, in_ECX);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = fcn.00b99c9c();\n    if (iVar3 == 0) {\n        uVar4 = 0x40;\n    }\n    else if (iVar3 == 1) {\n        uVar4 = 0x4000;\n    }\n    else if (iVar3 == 2) {\n        uVar4 = 0x20;\n    }\n    else if (iVar3 == 3) {\n        uVar4 = 0x8000;\n    }\n    else if (iVar3 == 4) {\n        uVar4 = 0x80;\n    }\n    else {\n        if (iVar3 != 5) goto code_r0x00c0f3e9;\n        uVar4 = 0x100;\n    }\n    (*_sym.imp.KERNEL32.dll_SetPriorityClass)(iVar2, uVar4);\n    fcn.00b99a20();\n    puVar1[3] = 1;\n    *puVar1 = 1;\n    fcn.00be6aa3(0, 0);\ncode_r0x00c0f3e9:\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    return 0;\n}\n",
        "token_count": 473
    },
    "00c0f593": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0f593(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    fcn.00c0f9a8(1, 1, arg_8h, arg_ch);\n    iVar1 = fcn.00baff9a();\n    if (*(iVar1 + 0x14) == 0) {\n        *(in_ECX + 0xf8) = 7;\n        fcn.00ba0b30(0);\n        arg_8h_00 = fcn.00baff9a();\n        fcn.00b99e9c(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 171
    },
    "00c0f5ef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0f5ef(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    fcn.00c0f9a8(1, 0, arg_8h, arg_ch);\n    iVar1 = fcn.00baff9a();\n    if (*(iVar1 + 0x14) == 0) {\n        *(in_ECX + 0xf8) = 7;\n        fcn.00ba0b30(0);\n        arg_8h_00 = fcn.00baff9a();\n        fcn.00b99e9c(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 172
    },
    "00c0f663": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0f663(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    fcn.00c0f732(1, arg_8h, *(arg_8h + 8), arg_ch);\n    iVar1 = fcn.00baff9a();\n    if (*(iVar1 + 0x14) == 0) {\n        *(in_ECX + 0xf8) = 7;\n        fcn.00ba0b30(0);\n        arg_8h_00 = fcn.00baff9a();\n        fcn.00b99e9c(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 177
    },
    "00c0f6c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0f6c1(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t arg_ch_00;\n    uint arg_8h_00;\n    \n    if (1 < *(arg_8h + 8)) {\n        fcn.00b99c9c();\n    }\n    fcn.00b99c9c();\n    arg_ch_00 = fcn.00bf545f();\n    if (arg_ch_00 == 0) {\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00be6aa3(arg_8h_00, arg_ch_00);\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 188
    },
    "00c0f732": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c0f732(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, double *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint in_ECX;\n    uint pExecInfo;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint32_t var_44h;\n    int32_t hObject;\n    uint var_24h;\n    uint uStack24;\n    int32_t var_10h;\n    double dStack24;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    dStack24 = CONCAT44(in_ECX, uStack24);\n    fcn.00b977c7();\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 0;\n    fcn.00bb3020(&pExecInfo, 0, 0x3c);\n    if ((1 < arg_10h) && (iVar4 = *(*(arg_ch + 4) + 4),  fcn.00b99997(),  ***(iVar4 + 8) != 0)) {\n        fcn.00b99997();\n        var_4h = fcn.00bafec6();\n    }\n    if (2 < arg_10h) {\n        fcn.00b99997();\n        var_8h = fcn.00bafec6();\n    }\n    if ((3 < arg_10h) && (iVar4 = *(*(arg_ch + 4) + 0xc),  fcn.00b99997(),  ***(iVar4 + 8) != 0)) {\n        iVar4 = *(*(arg_ch + 4) + 0xc);\n        cVar3 = fcn.00b99dae(0x29);\n        if (cVar3 == '\\0') {\n            fcn.00b99997();\n            fcn.00b981a7(*(iVar4 + 8));\n        }\n    }\n    if (4 < arg_10h) {\n        var_ch = fcn.00b99c9c();\n        var_ch = var_ch & 0xffff;\n    }\n    fcn.00bb3020(&pExecInfo, 0, 0x3c);\n    var_54h = var_24h;\n    pExecInfo = 0x3c;\n    var_5ch = 0x40;\n    var_58h = 0;\n    iVar4 = **(arg_ch + 4);\n    fcn.00b99997();\n    iVar2 = var_4h;\n    iVar1 = var_8h;\n    var_50h = **(iVar4 + 8);\n    var_44h = var_ch;\n    var_4ch = var_4h;\n    var_48h = var_8h;\n    iVar4 = (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n    if (iVar2 != 0) {\n        fcn.00bb106c(iVar2);\n    }\n    if (iVar1 != 0) {\n        fcn.00bb106c(iVar1);\n    }\n    if (iVar4 == 0) {\n        fcn.00be6aa3(1, 0);\n        fcn.00b99a20();\n        *(arg_14h + 0xc) = 1;\n        *arg_14h = 0;\n    }\n    else if (arg_8h == '\\0') {\n        fcn.00b99a20();\n        *arg_14h = 0xffffffff;\n        *(arg_14h + 0xc) = 1;\n        if (hObject != 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetProcessId)(hObject);\n            dStack24 = iVar4;\n            if (iVar4 < 0) {\n                dStack24 = dStack24 + *0xc4bac8;\n            }\n            fcn.00b99a20();\n            *arg_14h = dStack24;\n            *(arg_14h + 0xc) = 3;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        }\n    }\n    else {\n        *(var_10h + 0x444) = hObject;\n    }\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1038
    },
    "00c0f929": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0f929(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    cVar1 = fcn.00be65fa();\n    if ((cVar1 != '\\0') && (iVar2 = fcn.00b99c9c(),  iVar2 == 0)) {\n        return 0;\n    }\n    iVar2 = **(arg_8h + 4);\n    fcn.00b99997();\n    fcn.00b981a7(*(iVar2 + 8));\n    if (arg_ch == 2) {\n        iVar2 = fcn.00b99c9c();\n        *(in_ECX + 0x43c) = iVar2 * 1000;\n    }\n    else {\n        *(in_ECX + 0x43c) = 0;\n    }\n    uVar3 = (*_sym.imp.WINMM.dll_timeGetTime)();\n    *(in_ECX + 0x440) = uVar3;\n    return 1;\n}\n",
        "token_count": 253
    },
    "00c0fee2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c0fee2(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar2 = *(in_ECX + 0xc) * 2;\n        uVar3 = 8;\n        if (7 < uVar2) {\n            uVar3 = uVar2;\n        }\n        *(in_ECX + 0xc) = uVar3;\n        uVar4 = fcn.00bb0ff6(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00bb1080(uVar4, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.00bb106c(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar4;\n    }\n    puVar5 = fcn.00bb0ff6(0x14);\n    if (puVar5 == NULL) {\n        puVar5 = NULL;\n    }\n    else {\n        *puVar5 = *arg_8h;\n        puVar5[1] = arg_8h[1];\n        puVar5[2] = arg_8h[2];\n        puVar5[3] = arg_8h[3];\n        piVar1 = arg_8h[4];\n        puVar5[4] = piVar1;\n        *piVar1 = *piVar1 + 1;\n    }\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar5;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 473
    },
    "00c0ff9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0ff9c(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint unaff_EBX;\n    int32_t *arg_8h_00;\n    uint unaff_EDI;\n    uchar *puVar6;\n    uchar *arg_ch_00;\n    uint uVar7;\n    uint in_stack_ffffff80;\n    uchar auStack124 [4];\n    uchar auStack120 [4];\n    uint uStack116;\n    uint uStack96;\n    int32_t *piStack92;\n    uchar auStack76 [16];\n    uchar auStack60 [16];\n    int32_t aiStack44 [10];\n    \n    iVar4 = *(arg_8h + 8);\n    uStack116 = 0xc0ffbd;\n    fcn.00b977c7();\n    uStack116 = 0xc0ffc6;\n    fcn.00b977c7();\n    uStack116 = 0xc0ffcf;\n    fcn.00b977c7();\n    uStack116 = 0xc0ffd8;\n    fcn.00b977c7();\n    iVar2 = **(arg_8h + 4);\n    uStack116 = 0xc0ffe4;\n    fcn.00b99997();\n    uVar7 = **(iVar2 + 8);\n    fcn.00b97f41(uVar7);\n    arg_ch_00 = &stack0xffffffb4;\n    arg_8h_00 = &stack0xffffffd4;\n    fcn.00c11347(arg_8h_00, arg_ch_00, &stack0xffffffc4, uVar7, in_stack_ffffff80);\n    *piStack92 = *piStack92 + 1;\n    uVar7 = unaff_EBX;\n    cVar1 = fcn.00c110a5(&stack0xffffff88, &stack0xffffff84, unaff_EBX, 0);\n    if (cVar1 == '\\0') {\n        fcn.00be6aa3(2, 0);\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else if ((piStack92 == NULL) ||\n            (iVar2 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(uStack96, arg_8h_00, &stack0xffffff64), \n            arg_8h_00 = piStack92,  iVar2 == 0)) {\n        puVar6 = &stack0xffffff70;\n        uVar3 = arg_ch_00 | 0x2001f;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(arg_8h_00, uVar7, 0);\n        if (iVar2 == 0) {\n            if (iVar4 == 1) {\n                cVar1 = fcn.00c1122d();\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(unaff_EBX);\n                if (cVar1 == '\\0') {\n                    fcn.00be6aa3(0xfffffffe, 0);\n                    fcn.00b99a20();\n                    arg_ch[3] = 1;\n                    *arg_ch = 2;\n                }\n                else {\n                    cVar1 = fcn.00c11072();\n                    if (cVar1 == '\\0') {\n                        iVar4 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(arg_8h_00, unaff_EDI);\n                    }\n                    else {\n                        pcVar5 = fcn.00c0ff84(arg_8h_00, unaff_EDI, piStack92, 0);\n                        iVar4 = (*pcVar5)();\n                    }\n                    if (iVar4 != 0) {\n                        fcn.00baff61(iVar4, 0);\n                        fcn.00be6aa3(0xfffffffe, 0);\n                        fcn.00b99a20();\n                        arg_ch[3] = 1;\n                        *arg_ch = 2;\n                    }\n                    if (piStack92 != NULL) {\n                        (*_sym.imp.KERNEL32.dll_FreeLibrary)(piStack92);\n                    }\n                }\n            }\n            else if (iVar4 == 2) {\n                iVar4 = *(*(arg_8h + 4) + 4);\n                fcn.00b99997();\n                iVar4 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(unaff_EBX, **(iVar4 + 8));\n                if (iVar4 != 0) {\n                    if (iVar4 == 2) {\n                        fcn.00b99a20();\n                        *arg_ch = 0;\n                    }\n                    else {\n                        fcn.00baff61(iVar4, 0);\n                        fcn.00be6aa3(0xfffffffe, 0);\n                        fcn.00b99a20();\n                        *arg_ch = 2;\n                    }\n                    arg_ch[3] = 1;\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uVar3);\n            }\n        }\n        else {\n            fcn.00baff61(iVar2, 0);\n            fcn.00be6aa3(1, 0);\n            fcn.00b99a20();\n            arg_ch[3] = 1;\n            if (uVar3 == 2) {\n                *arg_ch = 0;\n            }\n            else {\n                *arg_ch = 2;\n            }\n        }\n        if (puVar6 != NULL) {\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puVar6);\n        }\n    }\n    else {\n        fcn.00baff61(iVar2, 0);\n        fcn.00be6aa3(3, 0);\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n    }\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1398
    },
    "00c102c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c102c2(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t *unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint uVar5;\n    uchar *arg_ch_00;\n    int32_t *piStack656;\n    uchar *arg_ch_01;\n    uint in_stack_fffffd84;\n    uint uStack628;\n    int32_t iStack624;\n    uint lpsz;\n    uchar auStack596 [4];\n    uint uStack592;\n    uchar auStack588 [12];\n    uchar auStack576 [16];\n    uchar auStack560 [556];\n    \n    uStack592 = 0xff;\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    lpsz = 0xc1f910;\n    iStack624 = 0xc10307;\n    fcn.00b99bf8(0xc1f910);\n    iVar4 = **(arg_8h + 4);\n    iStack624 = 0xc10316;\n    fcn.00b99997();\n    uVar5 = **(iVar4 + 8);\n    fcn.00b97f41(uVar5);\n    arg_ch_01 = &stack0xfffffdb0;\n    piStack656 = 0xc10339;\n    piVar2 = unaff_EBX;\n    fcn.00c11347(&stack0xfffffdc0, arg_ch_01, &stack0xfffffdd0, uVar5, in_stack_fffffd84);\n    piStack656 = piVar2;\n    *piStack656 = *piStack656 + 1;\n    arg_ch_00 = &stack0xfffffd90;\n    uVar5 = unaff_ESI;\n    cVar3 = fcn.00c110a5(&stack0xfffffd84, arg_ch_00, lpsz, unaff_EDI);\n    if (cVar3 == '\\0') {\n        uVar5 = 2;\n    }\n    else {\n        if ((iStack624 == 0) ||\n           (iVar4 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(uStack628, unaff_ESI, &stack0xfffffd68), \n           unaff_ESI = unaff_EDI,  iVar4 == 0)) {\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(unaff_ESI, uVar5, 0, arg_ch_01 | 0x20019, &stack0xfffffd70);\n            pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n            if (iVar4 == 0) {\n                uVar5 = 0;\n                iVar4 = fcn.00b99c9c(&stack0xfffffdb4, &stack0xfffffd74, 0, 0, 0, &stack0xfffffdac);\n                iVar4 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)(piStack656, iVar4 + -1);\n                if (iVar4 == 0) {\n                    fcn.00b99bf8(&stack0xfffffd94);\n                }\n                else {\n                    fcn.00be6aa3(0xffffffff, 0);\n                }\n                (*pcVar1)(uVar5);\n            }\n            else {\n                fcn.00be6aa3(1, 0);\n            }\n            if (arg_ch_00 != NULL) {\n                (*pcVar1)(arg_ch_00);\n            }\n            goto code_r0x00c10449;\n        }\n        uVar5 = 3;\n    }\n    fcn.00be6aa3(uVar5, 0);\ncode_r0x00c10449:\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 900
    },
    "00c1046f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1046f(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uchar *arg_8h_00;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uchar *arg_8h_01;\n    uchar *puStack152;\n    int32_t *piStack148;\n    uchar *arg_ch_00;\n    uchar *arg_10h;\n    int32_t *arg_8h_02;\n    uint in_stack_ffffff80;\n    uchar auStack120 [4];\n    uint uStack116;\n    uint uStack92;\n    int32_t *piStack84;\n    uchar auStack68 [16];\n    uchar auStack52 [16];\n    uchar auStack36 [32];\n    \n    uVar3 = fcn.00bb0ff6(0x8002);\n    fcn.00b9538e(uVar3);\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    uStack116 = 0xc104c7;\n    fcn.00b99bf8(0xc1f910);\n    iVar4 = **(arg_8h + 4);\n    uStack116 = 0xc104d6;\n    fcn.00b99997();\n    arg_8h_02 = **(iVar4 + 8);\n    fcn.00b97f41(arg_8h_02);\n    arg_10h = &stack0xffffffdc;\n    arg_ch_00 = &stack0xffffffbc;\n    arg_8h_00 = &stack0xffffffcc;\n    piStack148 = 0xc104f9;\n    fcn.00c11347(arg_8h_00, arg_ch_00, arg_10h, arg_8h_02, in_stack_ffffff80);\n    puStack152 = NULL;\n    piStack148 = piStack84;\n    *piStack84 = *piStack84 + 1;\n    arg_8h_01 = &stack0xffffff88;\n    cVar2 = fcn.00c110a5(arg_8h_01, &stack0xffffff8c, unaff_EBX, uStack92);\n    if (cVar2 == '\\0') {\n        uVar3 = 2;\n    }\n    else {\n        if ((unaff_ESI == 0) ||\n           (iVar4 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(unaff_EDI, arg_8h_00, &stack0xffffff68), \n           arg_8h_00 = puStack152,  iVar4 == 0)) {\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(arg_8h_00, 0, 0, arg_ch_00 | 0x20019, &stack0xffffff6c);\n            if (iVar4 == 0) {\n                iVar4 = fcn.00b99c9c(in_stack_ffffff80, &stack0xffffff78, 0, &stack0xffffff7c, 0);\n                iVar4 = (*_sym.imp.ADVAPI32.dll_RegEnumValueW)(piStack148, iVar4 + -1);\n                if (iVar4 == 0) {\n                    fcn.00bf7738(&stack0xffffff60);\n                    fcn.00baff61(arg_8h_01, 0);\n                }\n                else {\n                    fcn.00be6aa3(0xffffffff, 0);\n                }\n                pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(in_stack_ffffff80);\n                if (unaff_EBX != 0) {\n                    (*pcVar1)(unaff_EBX);\n                }\n            }\n            else {\n                fcn.00be6aa3(1, 0);\n                if (unaff_EBX != 0) {\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(unaff_EBX);\n                }\n            }\n            goto code_r0x00c10626;\n        }\n        uVar3 = 3;\n    }\n    fcn.00be6aa3(uVar3, 0);\ncode_r0x00c10626:\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    *arg_8h_02 = *arg_8h_02 + -1;\n    if (*arg_8h_02 == 0) {\n        fcn.00bb106c(arg_8h_02);\n        fcn.00bb106c(arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 1077
    },
    "00c10ae2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00c10bd1)\n// WARNING: Removing unreachable block (ram,0x00c10be8)\n// WARNING: Removing unreachable block (ram,0x00c10c1f)\n\nuint __cdecl fcn.00c10ae2(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t in_ECX;\n    uint32_t uVar8;\n    ulong uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    int32_t *piStack136;\n    uchar *arg_8h_00;\n    uint32_t uVar13;\n    int32_t *piStack108;\n    uint uStack80;\n    uint uStack68;\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    uchar auStack24 [20];\n    \n    piStack108 = 0xc10b02;\n    fcn.00b977c7();\n    piStack108 = 0xc10b0b;\n    fcn.00b977c7();\n    piStack108 = 0xc10b14;\n    fcn.00b977c7();\n    piVar1 = *(arg_8h + 8);\n    if ((piVar1 == 0x1) || (piVar1 == 0x4)) {\n        iVar5 = **(arg_8h + 4);\n        piStack108 = 0xc10b38;\n        fcn.00b99997();\n        puVar2 = *(iVar5 + 8);\n        uVar13 = *puVar2;\n        uVar7 = puVar2[1];\n        piStack108 = puVar2[3];\n        *piStack108 = *piStack108 + 1;\n        arg_8h_00 = &stack0xffffffd8;\n        piStack136 = 0xc10b6c;\n        fcn.00c11347(arg_8h_00, &stack0xffffffc8, &stack0xffffffe8, uVar13, uVar7);\n        *piVar1 = *piVar1 + 1;\n        piStack136 = piVar1;\n        cVar4 = fcn.00c110a5(&stack0xffffff94, &stack0xffffff98, in_ECX, uStack80);\n        if (cVar4 != '\\0') {\n            iVar5 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)\n                              (arg_8h_00, uStack68, 0, 0xc1f910, 0, uVar13 | 0x20006, 0, &stack0xffffff78, \n                               &stack0xffffff98);\n            if (iVar5 != 0) {\n                fcn.00baff61(iVar5, 0);\n                fcn.00be6aa3(1, 0);\n                fcn.00b99a20();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n                if (in_ECX != 0) {\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(in_ECX);\n                }\n                goto code_r0x00c1104c;\n            }\n            if (1 < uVar7) {\n                iVar5 = *(*(arg_8h + 4) + 8);\n                fcn.00b99997();\n                iVar5 = fcn.00bb313d(**(iVar5 + 8), L\"REG_EXPAND_SZ\");\n                if (iVar5 == 0) {\n                    iVar5 = *(*(arg_8h + 4) + 0xc);\n                    fcn.00b99997();\n                    iVar5 = fcn.00bb2e3c(**(iVar5 + 8));\n                    iVar5 = iVar5 * 2 + 2;\n                    iVar6 = *(*(arg_8h + 4) + 0xc);\n                    fcn.00b99997();\n                    uVar11 = **(iVar6 + 8);\n                    iVar6 = *(*(arg_8h + 4) + 4);\n                    fcn.00b99997();\n                    uVar10 = 2;\n                    uVar12 = **(iVar6 + 8);\ncode_r0x00c10d19:\n                    iVar5 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(piStack136, uVar12, 0, uVar10, uVar11, iVar5);\n                    if (iVar5 != 0) {\n                        fcn.00baff61(iVar5, 0);\n                        fcn.00b99a20();\n                        *arg_ch = 0;\ncode_r0x00c1102c:\n                        arg_ch[3] = 1;\n                    }\n                }\n                else {\n                    iVar5 = *(*(arg_8h + 4) + 8);\n                    fcn.00b99997();\n                    iVar5 = fcn.00bb313d(**(iVar5 + 8), L\"REG_SZ\");\n                    if (iVar5 == 0) {\n                        iVar5 = *(*(arg_8h + 4) + 0xc);\n                        fcn.00b99997();\n                        iVar6 = fcn.00bb2e3c(**(iVar5 + 8));\n                        iVar5 = *(*(arg_8h + 4) + 0xc);\n                        fcn.00b99997();\n                        uVar11 = **(iVar5 + 8);\n                        iVar5 = *(*(arg_8h + 4) + 4);\n                        fcn.00b99997();\n                        iVar5 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)\n                                          (piStack136, **(iVar5 + 8), 0, 1, uVar11, iVar6 * 2 + 2);\n                        if (iVar5 != 0) {\n                            fcn.00baff61(iVar5, 0);\n                            fcn.00b99a20();\n                            arg_ch[3] = 1;\n                            *arg_ch = 0;\n                            in_ECX = iVar5;\n                        }\n                    }\n                    else {\n                        iVar5 = *(*(arg_8h + 4) + 8);\n                        fcn.00b99997();\n                        iVar5 = fcn.00bb313d(**(iVar5 + 8), L\"REG_MULTI_SZ\");\n                        if (iVar5 == 0) {\n                            iVar5 = *(*(arg_8h + 4) + 0xc);\n                            fcn.00b99997();\n                            uVar13 = *(*(iVar5 + 8) + 4);\n                            uVar7 = uVar13 + 2;\n                            iVar6 = fcn.00bb0ff6(-(uVar7 * 2 >> 0x20 != 0) | uVar7 * 2);\n                            fcn.00b99997();\n                            iVar5 = iVar6;\n                            fcn.00b9463e(uVar13 + 1);\n                            uVar8 = 0;\n                            *(iVar6 + uVar13 * 2) = 0;\n                            if (uVar13 != 0) {\n                                do {\n                                    if (*(iVar6 + uVar8 * 2) == 10) {\n                                        *(iVar6 + uVar8 * 2) = 0;\n                                    }\n                                    uVar8 = uVar8 + 1;\n                                } while (uVar8 < uVar13);\n                                if (uVar13 != 0) {\n                                    uVar13 = uVar7;\n                                }\n                            }\n                            iVar6 = *(*(arg_8h + 4) + 4);\n                            fcn.00b99997();\n                            iVar6 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)\n                                              (piStack136, **(iVar6 + 8), 0, 7, iVar5, uVar13 * 2);\n                            if (iVar6 != 0) {\n                                fcn.00baff61(iVar6, 0);\n                                fcn.00b99a20();\n                                *arg_ch = 0;\n                                arg_ch[3] = 1;\n                                in_ECX = iVar6;\n                            }\n                            fcn.00bb106c(iVar5);\n                        }\n                        else {\n                            iVar5 = *(*(arg_8h + 4) + 8);\n                            fcn.00b99997();\n                            iVar5 = fcn.00bb313d(**(iVar5 + 8), L\"REG_DWORD\");\n                            if (iVar5 == 0) {\n                                fcn.00b99c9c();\n                                iVar5 = *(*(arg_8h + 4) + 4);\n                                fcn.00b99997();\n                                uVar12 = 4;\n                                uVar11 = 4;\n                            }\n                            else {\n                                iVar5 = *(*(arg_8h + 4) + 8);\n                                fcn.00b99997();\n                                iVar5 = fcn.00bb313d(**(iVar5 + 8), L\"REG_QWORD\");\n                                if (iVar5 != 0) {\n                                    iVar5 = *(*(arg_8h + 4) + 8);\n                                    fcn.00b99997();\n                                    iVar5 = fcn.00bb313d(**(iVar5 + 8), L\"REG_BINARY\");\n                                    if (iVar5 == 0) {\n                                        uVar11 = fcn.00bf899f();\n                                        fcn.00b99997();\n                                        uVar9 = fcn.00bf89e2();\n                                        iVar5 = uVar9;\n                                        uVar10 = 3;\n                                        uVar12 = *(uVar9 >> 0x20);\n                                        goto code_r0x00c10d19;\n                                    }\n                                    fcn.00b99a20();\n                                    *arg_ch = 0;\n                                    goto code_r0x00c1102c;\n                                }\n                                fcn.00b99d46();\n                                iVar5 = *(*(arg_8h + 4) + 4);\n                                fcn.00b99997();\n                                uVar12 = 8;\n                                uVar11 = 0xb;\n                            }\n                            iVar5 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)\n                                              (piStack136, **(iVar5 + 8), 0, uVar11, &stack0xffffff8c, uVar12);\n                            if (iVar5 != 0) {\n                                fcn.00baff61(iVar5, 0);\n                                fcn.00b99a20();\n                                *arg_ch = 0;\n                                goto code_r0x00c1102c;\n                            }\n                        }\n                    }\n                }\n            }\n            pcVar3 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(piStack136);\n            if (in_ECX != 0) {\n                (*pcVar3)(in_ECX);\n            }\n            goto code_r0x00c1104c;\n        }\n        fcn.00be6aa3(2, 0);\n    }\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\ncode_r0x00c1104c:\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 2555
    },
    "00c11072": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00c11072(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"advapi32.dll\");\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RegDeleteKeyExW\");\n            param_1[2] = iVar1;\n        }\n    }\n    return param_1[2] != 0;\n}\n",
        "token_count": 135
    },
    "00c110a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00c110a5(uint *arg_8h, uint *arg_ch, uint lpsz, uint32_t cchLength)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint var_10h;\n    \n    fcn.00b97faf();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n    *arg_ch = 0;\n    uVar2 = 2;\n    if (cchLength < 2) {\n        uVar2 = cchLength;\n    }\n    fcn.00b977c7();\n    fcn.00b979ab(&lpsz, cchLength - uVar2, uVar2);\n    cVar1 = fcn.00bb0d27();\n    fcn.00b95a64();\n    if (cVar1 != '\\0') {\n        fcn.00b97886(0xc4b094);\n        if (*(*0xc57428 + 0x34) != '\\0') {\n            *arg_ch = 0x100;\n        }\n    }\n    cVar1 = fcn.00bb0d27();\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00bb0d27();\n        if (cVar1 != '\\0') goto code_r0x00c1120f;\n        cVar1 = fcn.00bb0d27();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00bb0d27();\n            if (cVar1 != '\\0') goto code_r0x00c11204;\n            cVar1 = fcn.00bb0d27();\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.00bb0d27();\n                if (cVar1 != '\\0') goto code_r0x00c111f9;\n                cVar1 = fcn.00bb0d27();\n                if (cVar1 == '\\0') {\n                    cVar1 = fcn.00bb0d27();\n                    if (cVar1 != '\\0') goto code_r0x00c111ee;\n                    cVar1 = fcn.00bb0d27();\n                    if (cVar1 == '\\0') {\n                        cVar1 = fcn.00bb0d27();\n                        if (cVar1 == '\\0') {\n                            uVar3 = 0;\n                            goto code_r0x00c1121a;\n                        }\n                    }\n                    *arg_8h = 0x80000003;\n                }\n                else {\ncode_r0x00c111ee:\n                    *arg_8h = 0x80000001;\n                }\n            }\n            else {\ncode_r0x00c111f9:\n                *arg_8h = 0x80000005;\n            }\n        }\n        else {\ncode_r0x00c11204:\n            *arg_8h = 0x80000000;\n        }\n    }\n    else {\ncode_r0x00c1120f:\n        *arg_8h = 0x80000002;\n    }\n    uVar3 = 1;\ncode_r0x00c1121a:\n    uVar2 = fcn.00b95a64();\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 748
    },
    "00c1122d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00c1122d(uint param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint lpSubKey;\n    uint var_24h;\n    uint32_t var_1ch;\n    int32_t hLibModule;\n    uint var_10h;\n    uint32_t var_ch;\n    uint hKey;\n    uint var_4h;\n    \n    var_4h = 0xff;\n    var_ch = param_2;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)(param_1, 0, &lpSubKey, &var_4h, 0, 0, 0, &var_24h);\n    if (iVar2 != 0x103) {\n        var_1ch = param_2 | 0x20019;\n        do {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(param_1, &lpSubKey, 0, var_1ch, &hKey);\n            if (iVar2 != 0) {\n                return 0;\n            }\n            cVar1 = fcn.00c1122d();\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            hLibModule = 0;\n            var_10h = 0;\n            cVar1 = fcn.00c11072();\n            if (cVar1 == '\\0') {\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(param_1, &lpSubKey);\n            }\n            else {\n                pcVar3 = fcn.00c0ff84(param_1, &lpSubKey, var_ch, 0);\n                iVar2 = (*pcVar3)();\n            }\n            if (iVar2 != 0) {\n                if (hLibModule == 0) {\n                    return 0;\n                }\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n                return 0;\n            }\n            if (hLibModule != 0) {\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n            }\n            var_4h = 0xff;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)(param_1, 0, &lpSubKey, &var_4h, 0, 0, 0, &var_24h);\n        } while (iVar2 != 0x103);\n    }\n    return 1;\n}\n",
        "token_count": 583
    },
    "00c11425": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c11425(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    char cVar3;\n    char cVar4;\n    char cVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    int32_t extraout_EDX;\n    uint var_10h;\n    \n    fcn.00b99bf8(0xc1f910);\n    if (*(arg_8h + 8) == 0) {\n        cVar3 = '\\0';\n    }\n    else {\n        cVar3 = fcn.00b99c53();\n        arg_8h = extraout_EDX;\n    }\n    if (*(arg_8h + 8) < 2) {\n        cVar4 = '\\0';\n    }\n    else {\n        cVar4 = fcn.00b99c53();\n    }\n    if (*(in_ECX + 0x468) == 0) {\n        uVar6 = 2;\n    }\n    else {\n        cVar5 = fcn.00bf6e44();\n        puVar2 = *(in_ECX + 0x468);\n        if (cVar5 != '\\0') {\n            if (cVar3 == '\\0') {\n                arg_ch = fcn.00bf6e7c(arg_ch);\n            }\n            else {\n                arg_ch = fcn.00bf6df7(arg_ch, 1);\n            }\n            if (cVar4 == '\\0') {\n                fcn.00b977c7();\n                fcn.00bf899f();\n                uVar6 = fcn.00bf573e();\n                fcn.00b978ad(uVar6, 0, arg_ch);\n                fcn.00bb106c(uVar6);\n                fcn.00b99b9c(&var_10h);\n                fcn.00b95a64();\n            }\n            fcn.00baff61(arg_ch, 0);\n            return 0;\n        }\n        piVar1 = puVar2 + 1;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            (***puVar2)(1);\n        }\n        *(in_ECX + 0x468) = 0;\n        uVar6 = 1;\n    }\n    fcn.00be6aa3(uVar6, 0);\n    return 0;\n}\n",
        "token_count": 545
    },
    "00c11560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c11560(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint32_t lpBuffer;\n    uint uVar2;\n    int32_t in_ECX;\n    uint *arg_8h_00;\n    int32_t arg_ch_00;\n    double dVar3;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    double dStack16;\n    uint var_1h;\n    \n    var_10h = fcn.00b99c9c();\n    arg_ch_00 = in_ECX + 0x45c;\n    dVar3 = var_10h;\n    if (var_10h < 0) {\n        dVar3 = dVar3 + *0xc4bac8;\n    }\n    arg_8h_00 = &var_10h;\n    dStack16 = dVar3;\n    fcn.00c11702(arg_8h_00, arg_ch_00);\n    if (var_10h == 0) {\n        fcn.00be6aa3(2, 0);\n    }\n    else {\n        if (*(arg_8h + 8) < 2) {\n            fcn.00bf6ed7(arg_8h_00, arg_ch_00, dVar3);\n        }\n        else {\n            cVar1 = fcn.00bf72d1();\n            if (cVar1 == '\\0') {\n                fcn.00be6aa3(1, 0);\n            }\n            else {\n                var_1h._0_1_ = '\\0';\n                if (*(*(*(arg_8h + 4) + 4) + 0xc) == 0xb) {\n                    lpBuffer = fcn.00bf899f();\n                    dStack16 = dStack16 & 0xffffffff | lpBuffer << 0x20;\n                    uVar2 = fcn.00bf89e2();\n                }\n                else {\n                    fcn.00b99997();\n                    lpBuffer = fcn.00bf5b29();\n                    dStack16 = dStack16 & 0xffffffff | lpBuffer << 0x20;\n                    var_1h._0_1_ = '\\x01';\n                    uVar2 = fcn.00bb3980(lpBuffer);\n                }\n                uVar2 = fcn.00bf7277(lpBuffer, uVar2);\n                fcn.00b99a20();\n                arg_ch[3] = 1;\n                *arg_ch = uVar2;\n                if (var_1h != '\\0') {\n                    fcn.00bb106c(var_8h);\n                }\n            }\n        }\n        cVar1 = fcn.00bf6f36();\n        if (cVar1 == '\\0') {\n            fcn.00c118b8(&var_10h);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 676
    },
    "00c11691": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c11691(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t in_ECX;\n    \n    fcn.00b99cf8();\n    fcn.00c11702(&arg_8h, in_ECX + 0x45c);\n    if (arg_8h != 0) {\n        fcn.00c118b8(&arg_8h);\n        puVar1 = arg_ch;\n        fcn.00b99a20();\n        puVar1[3] = 1;\n        *puVar1 = 1;\n    }\n    return 0;\n}\n",
        "token_count": 148
    },
    "00c11764": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c11764(int32_t arg_8h, uint arg_ch, code *arg_10h, code *arg_14h, code *arg_18h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    float10 fVar3;\n    uint *arg_8h_01;\n    int32_t arg_ch_00;\n    double dVar4;\n    uint var_20h;\n    int32_t var_10h;\n    int32_t var_8h;\n    double dStack16;\n    uint var_1h;\n    \n    fcn.00b99bf8(0xc1f910);\n    fVar3 = fcn.00b99cf8();\n    dStack16 = fVar3;\n    if (*(arg_8h + 8) < 2) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.00b99c53();\n    }\n    if (*(arg_8h + 8) < 3) {\n        var_1h._0_1_ = '\\0';\n    }\n    else {\n        var_1h._0_1_ = fcn.00b99c53();\n    }\n    arg_ch_00 = in_ECX + 0x45c;\n    arg_8h_01 = &var_8h;\n    dVar4 = dStack16;\n    var_10h = arg_ch_00;\n    fcn.00c11702(arg_8h_01, arg_ch_00);\n    if (var_8h == 0) {\n        fcn.00be6aa3(2, 0);\n    }\n    else {\n        cVar2 = (*arg_18h)(arg_8h_01, arg_ch_00, dVar4);\n        if (cVar2 == '\\0') {\n            fcn.00be6aa3(1, 0);\n        }\n        else {\n            if (cVar1 == '\\0') {\n                arg_8h = (*arg_14h)(arg_ch);\n            }\n            else {\n                arg_8h = (*arg_10h)(arg_ch, 1);\n            }\n            if (var_1h == '\\0') {\n                fcn.00b977c7();\n                fcn.00bf899f();\n                arg_8h_00 = fcn.00bf573e();\n                fcn.00b978ad(arg_8h_00, 0, arg_8h);\n                fcn.00bb106c(arg_8h_00);\n                fcn.00b99b9c(&var_20h);\n                fcn.00b95a64();\n            }\n            fcn.00baff61(arg_8h, 0);\n        }\n        cVar1 = fcn.00bf6f36();\n        if (cVar1 == '\\0') {\n            fcn.00c118b8(&var_8h);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 704
    },
    "00c11950": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c11950(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t arg_8h_00;\n    uint var_4h;\n    \n    iVar1 = fcn.00bf899f();\n    iVar2 = fcn.00bf89e2();\n    arg_8h_00 = -1;\n    iVar3 = fcn.00b99c9c();\n    iVar3 = iVar3 + -1;\n    if (2 < *(arg_8h + 8)) {\n        arg_8h_00 = fcn.00b99c9c();\n    }\n    if ((iVar2 < iVar3) || (iVar3 < 0)) {\n        iVar3 = iVar2;\n    }\n    if ((arg_8h_00 < 0) || (iVar2 - iVar3 < arg_8h_00)) {\n        arg_8h_00 = iVar2 - iVar3;\n    }\n    uVar4 = fcn.00bf794e(arg_8h_00);\n    fcn.00bb1080(uVar4, iVar1 + iVar3, arg_8h_00);\n    return 0;\n}\n",
        "token_count": 287
    },
    "00c119d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c119d5(uint arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    uchar *arg_8h_00;\n    int32_t iVar2;\n    uint noname_1;\n    uint unaff_EBX;\n    int32_t iVar3;\n    ulong uVar4;\n    uint arg_8h_01;\n    int32_t arg_8h_02;\n    int32_t iStack44;\n    uchar auStack40 [36];\n    \n    arg_8h_00 = fcn.00bf899f();\n    uVar4 = fcn.00bf89e2();\n    arg_8h_02 = uVar4;\n    if (arg_8h_02 == 0) {\n        fcn.00b99bf8(0xc1f910);\n        arg_8h_01 = 1;\n    }\n    else {\n        if (*((uVar4 >> 0x20) + 8) < 2) {\n            iVar2 = 1;\n        }\n        else {\n            iVar2 = fcn.00b99c9c();\n        }\n        if ((iVar2 < 1) || (4 < iVar2)) {\n            iVar2 = 1;\n        }\n        if (((iVar2 != 2) && (iVar2 != 3)) || (arg_8h_02 % 2 == 0)) {\n            if ((iVar2 != 1) && (iVar2 != 4)) {\n                if (iVar2 == 2) {\n                    fcn.00b97b76(arg_8h_02 / 2);\n                    fcn.00b978ad(arg_8h_00, 0, arg_8h_02 / 2);\n                    fcn.00b99b9c(auStack40);\n                }\n                else {\n                    iStack44 = fcn.00bb0ff6(arg_8h_02);\n                    iVar2 = 0;\n                    if (0 < arg_8h_02) {\n                        iVar3 = iStack44 - arg_8h_00;\n                        do {\n                            arg_8h_00[iVar3] = arg_8h_00[1];\n                            uVar1 = *arg_8h_00;\n                            arg_8h_00 = arg_8h_00 + 2;\n                            *(iStack44 + 1 + iVar2) = uVar1;\n                            iVar2 = iVar2 + 2;\n                        } while (iVar2 < arg_8h_02);\n                    }\n                    fcn.00b97b76(arg_8h_02 / 2);\n                    fcn.00b978ad(unaff_EBX, 0, arg_8h_02 / 2);\n                    fcn.00b99b9c(auStack40);\n                    fcn.00bb106c(unaff_EBX);\n                }\n                fcn.00b95a64();\n                return 0;\n            }\n            fcn.00bf770d(arg_8h_02);\n            fcn.00b95ac4(arg_8h_00, noname_1, arg_8h_02);\n            fcn.00b97b76(arg_8h_02);\n            if (iVar2 == 1) {\n                fcn.00b9793a(&iStack44, &stack0xffffffc4);\n            }\n            else {\n                fcn.00b981c1(&iStack44, &stack0xffffffc4);\n            }\n            fcn.00b99b9c(&stack0xffffffbc);\n            fcn.00b95a64();\n            fcn.00b95a64();\n            return 0;\n        }\n        fcn.00b99bf8(0xc1f910);\n        arg_8h_02 = 0;\n        arg_8h_01 = 2;\n    }\n    fcn.00be6aa3(arg_8h_01, arg_8h_02);\n    return 0;\n}\n",
        "token_count": 875
    },
    "00c11c02": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c11c02(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.00b99997();\n    iVar1 = *(*(arg_8h + 4) + 4);\n    fcn.00b99997();\n    uVar2 = *(iVar1 + 8);\n    iVar1 = 0;\n    if (2 < *(arg_8h + 8)) {\n        iVar1 = fcn.00b99c9c();\n        if ((iVar1 < 0) || (3 < iVar1)) {\n            iVar1 = 0;\n        }\n        if (iVar1 == 1) {\n            uVar2 = fcn.00b98019(uVar2);\n            goto code_r0x00c11c60;\n        }\n    }\n    uVar2 = fcn.00b97a68(uVar2, iVar1);\ncode_r0x00c11c60:\n    fcn.00b99a20();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 257
    },
    "00c11e1a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c11e1a(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t arg_ch_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = -1;\n    var_4h = -1;\n    var_ch = 1;\n    arg_ch_00 = 0;\n    iVar1 = **(arg_8h + 4);\n    fcn.00b99997();\n    iVar1 = *(iVar1 + 8);\n    iVar3 = *(*(arg_8h + 4) + 4);\n    fcn.00b99997();\n    puVar2 = *(iVar3 + 8);\n    iVar3 = *(arg_8h + 8);\n    if (iVar3 != 2) {\n        if (iVar3 != 3) {\n            if (iVar3 != 4) {\n                if (iVar3 != 5) {\n                    if (iVar3 != 6) {\n                        iVar3 = 0;\n                        goto code_r0x00c11f1d;\n                    }\n                    var_4h = fcn.00b99c9c();\n                    if (var_4h < 1) goto code_r0x00c11e96;\n                }\n                var_8h = fcn.00b99c9c();\n                var_8h = var_8h + -1;\n                if (var_8h < 0) goto code_r0x00c11e96;\n            }\n            var_ch = fcn.00b99c9c();\n            if (var_ch == 0) {\ncode_r0x00c11e96:\n                fcn.00b99a20();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n                fcn.00be6aa3(1, 0);\n                return 0;\n            }\n        }\n        arg_ch_00 = fcn.00b99c9c();\n        if ((arg_ch_00 < 0) || (3 < arg_ch_00)) {\n            arg_ch_00 = 0;\n        }\n    }\n    iVar3 = fcn.00bef658(*puVar2, arg_ch_00, var_ch, puVar2[1], var_8h, var_4h);\ncode_r0x00c11f1d:\n    if (iVar3 == *(iVar1 + 4)) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = iVar3 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 664
    },
    "00c123c9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c123c9(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint32_t uVar3;\n    uint unaff_EBX;\n    int32_t iVar4;\n    int32_t unaff_EDI;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    \n    fcn.00b977c7();\n    iVar4 = **(arg_8h + 4);\n    fcn.00b99997();\n    iStack52 = *(iVar4 + 8);\n    fcn.00b97b76(*(iStack52 + 4));\n    iVar4 = *(*(arg_8h + 4) + 8);\n    fcn.00b99997();\n    iVar4 = *(iVar4 + 8);\n    iVar2 = *(*(arg_8h + 4) + 4);\n    cVar1 = fcn.00be65fa();\n    if (cVar1 == '\\0') {\n        fcn.00b99997();\n        iStack48 = *(iVar2 + 8);\n        iVar4 = 0;\n        if (*(iStack48 + 4) == 0) {\n            fcn.00b99bf8(0xc1f910);\n            goto code_r0x00c124be;\n        }\n        iStack52 = 0;\n        if (3 < *(arg_8h + 8)) {\n            iStack52 = fcn.00b99c9c();\n        }\n        if (4 < *(arg_8h + 8)) {\n            iVar4 = fcn.00b99c9c();\n            if ((iVar4 < 0) || (3 < iVar4)) {\n                iVar4 = 0;\n            }\n        }\n        fcn.00b980d7(iStack56);\n        arg_8h_00 = fcn.00bef8f2(iStack52, unaff_EBX, iStack56, iVar4);\n        fcn.00baff61(arg_8h_00, 0);\n    }\n    else {\n        iVar2 = fcn.00b99c9c();\n        iVar2 = iVar2 + -1;\n        if ((iVar2 < 0) || (uVar3 = *(iVar4 + 4) + iVar2,  *(iStack56 + 4) <= uVar3 && uVar3 != *(iStack56 + 4))) {\n            fcn.00b99bf8(0xc1f910);\ncode_r0x00c124be:\n            fcn.00be6aa3(1, 0);\n            goto code_r0x00c12545;\n        }\n        fcn.00b979ab(iStack56, 0, iVar2);\n        fcn.00b97c8e(unaff_EDI);\n        fcn.00b979ab(iStack56, *(unaff_EDI + 4) + iVar2, (*(iStack56 + 4) - *(unaff_EDI + 4)) - iVar2);\n        fcn.00b97c8e(&iStack56);\n    }\n    fcn.00b99b9c(&stack0xffffffb8);\ncode_r0x00c12545:\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 761
    },
    "00c12562": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c12562(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    uchar *arg_8h_00;\n    uint uVar3;\n    int32_t iVar4;\n    uchar auStack116 [8];\n    uchar auStack108 [20];\n    uchar auStack88 [84];\n    \n    iVar4 = **(arg_8h + 4);\n    fcn.00b99997();\n    iVar4 = *(iVar4 + 8);\n    fcn.00b97b76(*(iVar4 + 4));\n    if ((*(arg_8h + 8) < 2) || (iVar1 = fcn.00b99c9c(),  iVar1 != 1)) {\n        fcn.00ba5bfd();\n        fcn.00b97f41(0xc4b25c);\n        arg_8h_00 = auStack88;\n        uVar3 = extraout_ECX;\n        fcn.00ba5c72(arg_8h_00);\n        fcn.00b95a64(arg_8h_00, uVar3);\n        fcn.00ba5d24(iVar4);\n        iVar4 = 0xc1f968;\n        fcn.00b977c7();\n        iVar1 = 0;\n        while (iVar2 = fcn.00ba5604(&stack0xffffff78, 1),  iVar2 != 0) {\n            fcn.00be6731(0, auStack108);\n            fcn.00b93f84(auStack116);\n        }\n        while (iVar4 = iVar4 + -1,  -1 < iVar4) {\n            fcn.00b97c8e(*(iVar1 + iVar4 * 4));\n        }\n        fcn.00b95a64();\n        fcn.00b94024();\n        fcn.00ba5c2e();\n        fcn.00b95a64();\n    }\n    else {\n        fcn.00b981a7(iVar4);\n        fcn.00c12e84();\n    }\n    fcn.00b99b9c(&stack0xffffff84);\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 512
    },
    "00c12946": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c12946(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint unaff_EDI;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t auStack56 [2];\n    uint uStack48;\n    uint uStack44;\n    \n    fcn.00b99bf8(0xc1f910);\n    iVar5 = **(arg_8h + 4);\n    fcn.00b99997();\n    iVar5 = *(iVar5 + 8);\n    if ((*(arg_8h + 8) < 3) || (cVar2 = fcn.00b99dae(0x29),  cVar2 != '\\0')) {\n        uVar3 = *(iVar5 + 4);\n    }\n    else {\n        uVar3 = fcn.00b99c9c();\n    }\n    if (*(iVar5 + 4) <= uVar3 && uVar3 != *(iVar5 + 4)) {\n        uVar3 = *(iVar5 + 4);\n    }\n    if ((*(arg_8h + 8) < 2) || (cVar2 = fcn.00b99dae(0x29),  cVar2 != '\\0')) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = fcn.00b99c9c();\n    }\n    if (uVar4 <= uVar3) {\n        if (uVar4 == uVar3) {\n            uVar3 = uVar3 + 1;\n        }\n        uVar3 = uVar3 - uVar4;\n        uVar8 = uVar3;\n        fcn.00b97b76(uVar3);\n        uVar7 = uVar3;\n        fcn.00b979ab(unaff_EDI, uVar4, uVar3);\n        if (*(arg_8h + 8) < 4) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = fcn.00b99c9c();\n        }\n        if ((iVar5 == 1) || (iVar5 == 2)) {\n            fcn.00b95c18();\n            if (iVar5 == 1) {\n                fcn.00c0830b(&stack0xffffffc0, &stack0xffffffb0);\n            }\n            else {\n                fcn.00bf3629(&stack0xffffffc0, &stack0xffffffb0);\n            }\n            uVar3 = uVar8;\n            uVar6 = fcn.00b9942e();\n            fcn.00b991b0(uVar6, 1);\n            uVar4 = 0;\n            if (uVar8 != 0) {\n                do {\n                    fcn.00bf3555();\n                    uVar1 = uVar3;\n                    if (uVar4 < uVar3) {\n                        uVar1 = uVar4;\n                    }\n                    auStack56[0] = *(uVar7 + uVar1);\n                    uStack48 = 0;\n                    uStack44 = 1;\n                    fcn.00b99040(uVar6, auStack56, 1);\n                    fcn.00b99a20();\n                    uVar4 = uVar4 + 1;\n                } while (uVar4 < uVar8);\n            }\n            fcn.00b95a64();\n        }\n        else {\n            uVar6 = fcn.00b9942e();\n            uVar4 = uVar3;\n            fcn.00b991b0(uVar6, 1);\n            uVar7 = 0;\n            if (uVar3 != 0) {\n                do {\n                    uVar8 = uVar7;\n                    fcn.00b97b52(uVar7);\n                    fcn.00b99040(uVar6, &stack0xffffffa8, 1);\n                    fcn.00b99a20(uVar8, uVar4);\n                    uVar7 = uVar7 + 1;\n                } while (uVar7 < uVar3);\n            }\n        }\n        fcn.00b95a64();\n    }\n    return 0;\n}\n",
        "token_count": 963
    },
    "00c12b1e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c12b1e(int32_t arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    uint *lpWideCharStr;\n    uint32_t arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar4 = **(arg_8h + 4);\n    fcn.00b99997();\n    lpWideCharStr = *(iVar4 + 8);\n    iVar4 = lpWideCharStr[1];\n    if (iVar4 == 0) {\n        fcn.00bf794e(0);\n    }\n    else {\n        if (*(arg_8h + 8) < 2) {\n            iVar2 = 1;\n        }\n        else {\n            iVar2 = fcn.00b99c9c();\n        }\n        if ((iVar2 < 1) || (4 < iVar2)) {\n            iVar2 = 1;\n        }\n        if ((iVar2 == 1) || (iVar2 == 4)) {\n            fcn.00b95c18();\n            if (iVar2 == 1) {\n                fcn.00c0830b(lpWideCharStr, &var_10h);\n            }\n            else {\n                fcn.00bf3629(lpWideCharStr, &var_10h);\n            }\n            uVar3 = fcn.00bf794e(var_ch);\n            fcn.00bb1080(uVar3, var_10h, var_ch);\n            fcn.00b95a64();\n        }\n        else if (iVar2 == 2) {\n            uVar3 = fcn.00bf794e(iVar4 * 2);\n            fcn.00bb1080(uVar3, *lpWideCharStr, iVar4 * 2);\n        }\n        else {\n            arg_8h_00 = iVar4 * 2;\n            iVar4 = fcn.00bf794e(arg_8h_00);\n            puVar5 = *lpWideCharStr;\n            uVar6 = 0;\n            if (arg_8h_00 != 0) {\n                iVar2 = iVar4 - puVar5;\n                do {\n                    puVar5[iVar2] = puVar5[1];\n                    uVar1 = *puVar5;\n                    puVar5 = puVar5 + 2;\n                    *(iVar4 + 1 + uVar6) = uVar1;\n                    uVar6 = uVar6 + 2;\n                } while (uVar6 < arg_8h_00);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 603
    },
    "00c12ed6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c12ed6(uint noname_0, uint *arg_ch)\n\n{\n    char cVar1;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.00b977c7();\n    if (*0xc56930 != '\\x01') {\n        cVar1 = fcn.00bf28f7(&var_14h);\n        if (cVar1 != '\\0') goto code_r0x00c12f13;\n    }\n    var_14h = 0;\n    fcn.00b97d2c(0xc1f910);\ncode_r0x00c12f13:\n    if (*0xc56930 == '\\x01') {\n        fcn.00be6aa3(1, 0);\n    }\n    fcn.00b99a20();\n    arg_ch[3] = 1;\n    *arg_ch = var_14h;\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 222
    },
    "00c1321d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1321d(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 9;\n    if (*(arg_8h + 8) != 0) {\n        iVar1 = fcn.00b99c9c();\n        if ((iVar1 < 0) || (0x7f < iVar1)) {\n            iVar1 = 9;\n        }\n    }\n    *0xc5689c = iVar1;\n    return 0;\n}\n",
        "token_count": 114
    },
    "00c1324d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1324d(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *(arg_8h + 8);\n    *0xc568a0 = 0;\n    fcn.00b97d2c(0xc1f910);\n    if (uVar1 != 0) {\n        iVar2 = **(arg_8h + 4);\n        fcn.00b99997();\n        fcn.00b981a7(*(iVar2 + 8));\n    }\n    if (1 < uVar1) {\n        fcn.00b99c9c();\n        *0xc568a0 = fcn.00bf4be8();\n    }\n    fcn.00b943db();\n    return 0;\n}\n",
        "token_count": 186
    },
    "00c133b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c133b9(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *(arg_8h + 8);\n    *0xc568a4 = 0;\n    fcn.00b97d2c(0xc1f910);\n    if (uVar1 != 0) {\n        iVar2 = **(arg_8h + 4);\n        fcn.00b99997();\n        fcn.00b981a7(*(iVar2 + 8));\n    }\n    if (1 < uVar1) {\n        fcn.00b99c9c();\n        *0xc568a4 = fcn.00bf4be8();\n    }\n    fcn.00bf331f();\n    return 0;\n}\n",
        "token_count": 186
    },
    "00c13427": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c13427(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = 1;\n    if (*(arg_8h + 8) != 0) {\n        arg_8h_00 = fcn.00b99c9c();\n    }\n    fcn.00bf3378(arg_8h_00);\n    return;\n}\n",
        "token_count": 96
    },
    "00c1344c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1344c(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if ((*0xc56288 == '\\0') || (*0xc56285 != '\\0')) {\n        fcn.00be6aa3(1, 0);\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        if (*(arg_8h + 8) == 0) {\n            fcn.00b97d2c(0xc1f910);\n        }\n        else {\n            iVar1 = **(arg_8h + 4);\n            fcn.00b99997();\n            fcn.00b979ab(*(iVar1 + 8), 0, 0x80);\n        }\n        fcn.00b9410d();\n    }\n    return 0;\n}\n",
        "token_count": 208
    },
    "00c134d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c134d5(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint arg_18h;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack24 = 0;\n    uVar1 = *(arg_ch + 8);\n    uStack20 = 0xffffffff;\n    if (uVar1 != 0) {\n        fcn.00b99997();\n        uStack24 = fcn.00bafec6();\n    }\n    uVar2 = 0xffffffff;\n    if (1 < uVar1) {\n        uVar2 = fcn.00b99c9c();\n    }\n    if (2 < uVar1) {\n        uStack20 = fcn.00b99c9c();\n    }\n    if (uVar1 < 4) {\n        arg_18h = 0xffffffff;\n    }\n    else {\n        arg_18h = fcn.00b99c9c();\n    }\n    if (arg_8h == 0) {\n        arg_8h_00 = 0;\n    }\n    else {\n        if (arg_8h != 1) goto code_r0x00c1359a;\n        arg_18h = 0;\n        arg_8h_00 = 1;\n    }\n    uVar2 = fcn.00bf26f9(arg_8h_00, uStack24, uVar2, uStack20, arg_18h);\n    fcn.00b99a20();\n    *arg_10h = uVar2;\n    arg_10h[3] = 1;\ncode_r0x00c1359a:\n    iVar3 = fcn.00b99c9c();\n    if (iVar3 == 0) {\n        fcn.00be6aa3(1, 0);\n    }\n    fcn.00bb106c(uStack24);\n    return 0;\n}\n",
        "token_count": 467
    },
    "00c13e6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c13e6c(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t aiStack36 [2];\n    uint uStack28;\n    uint uStack24;\n    \n    cVar1 = fcn.00c135ca(arg_8h);\n    if (cVar1 == '\\0') {\n        fcn.00b99a20();\n    }\n    else {\n        cVar1 = fcn.00beaf6a(&iStack44, 1);\n        if (cVar1 == '\\x01') {\n            arg_8h_00 = fcn.00b9942e();\n            fcn.00b991b0(arg_8h_00, 1);\n            uStack28 = 0;\n            uStack24 = 1;\n            fcn.00b99040(arg_8h_00, aiStack36, 1);\n            fcn.00b99a20();\n            uStack28 = 0;\n            uStack24 = 1;\n            fcn.00b99040(arg_8h_00, aiStack36, 1);\n            fcn.00b99a20();\n            aiStack36[0] = iStack44 - unaff_ESI;\n            uStack28 = 0;\n            uStack24 = 1;\n            fcn.00b99040(arg_8h_00, aiStack36, 1);\n            fcn.00b99a20();\n            aiStack36[0] = iStack40 - unaff_EBX;\n            uStack28 = 0;\n            uStack24 = 1;\n            fcn.00b99040(arg_8h_00, aiStack36, 1);\n            fcn.00b99a20();\n            return 0;\n        }\n        fcn.00b99a20();\n    }\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    fcn.00be6aa3(1, 0);\n    return 0;\n}\n",
        "token_count": 493
    },
    "00c149c6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c149c6(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    int32_t arg_8h_01;\n    char16_t *pcVar3;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar auStack52 [4];\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack72 = 0xc1fb84;\n    uStack28 = 1;\n    iVar2 = 0;\n    uStack44 = 1;\n    pcVar3 = L\"msctls_statusbar321\";\n    uStack40 = 0;\n    uStack32 = 0;\n    uStack68 = 0;\n    uStack64 = 0;\n    uStack60 = 0;\n    uStack56 = 0;\n    uStack48 = 0;\n    fcn.00b99bf8(L\"msctls_statusbar321\");\n    fcn.00b99bf8(0xc1f910);\n    fcn.00b99bf8(0xc1f910);\n    arg_8h_01 = **(arg_8h + 4);\n    fcn.00be6665(arg_8h_01);\n    if (pcVar3 < 0x2) {\n        arg_8h_00 = &uStack72;\n    }\n    else {\n        arg_8h_00 = *(*(arg_8h + 4) + 4);\n    }\n    fcn.00be6665(arg_8h_00);\n    fcn.00be6665(&uStack60);\n    cVar1 = fcn.00c135ca(&stack0xffffffa0);\n    if (cVar1 == '\\0') {\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        if (arg_8h_01 == 3) {\n            iVar2 = fcn.00b99c9c();\n            iVar2 = iVar2 + -1;\n        }\n        fcn.00b977c7();\n        cVar1 = fcn.00be9ab7(iVar2, auStack52);\n        if (cVar1 == '\\0') {\n            fcn.00be6aa3(1, 0);\n        }\n        else {\n            fcn.00b99b9c(&uStack60);\n        }\n        fcn.00b95a64();\n    }\n    fcn.00b99a20();\n    fcn.00be66f4();\n    fcn.00b99a20();\n    return 0;\n}\n",
        "token_count": 625
    },
    "00c150a9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c150a9(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    fcn.00b9b9ad(arg_8h);\n    iVar3 = fcn.00b9b93d(1);\n    if (iVar3 < 1) {\n        if (iVar3 < 0) {\n            fcn.00be6aa3(-iVar3, 0);\n        }\n    }\n    else {\n        cVar2 = fcn.00ba619a(**(in_ECX + 0x1f0));\n        if (cVar2 == '\\0') {\n            uVar1 = *(arg_8h + 8);\n            iVar3 = 4;\n            if (2 < uVar1) {\n                iVar3 = fcn.00b99c9c();\n            }\n            if (3 < uVar1) {\n                fcn.00b99c9c();\n            }\n            if (iVar3 * 2 + -2 < 2) {\n                return 0;\n            }\n            iVar3 = iVar3 * 2 + -3;\n            do {\n                (*_sym.imp.USER32.dll_FlashWindow)(**(in_ECX + 0x1f0), 1);\n                fcn.00bf54e6();\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            return 0;\n        }\n    }\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 375
    },
    "00c1581b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1581b(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint uVar4;\n    uint arg_8h_02;\n    uint auStack48 [2];\n    uint uStack40;\n    uint uStack36;\n    \n    arg_8h_00 = fcn.00bb0ff6(0x10000);\n    fcn.00b9538e(arg_8h_00);\n    arg_8h_02 = 0xc4a5b0;\n    fcn.00b99bf8(0xc4a5b0);\n    uVar4 = 0xc1f910;\n    fcn.00b97d2c(0xc1f910);\n    if (*(arg_8h + 8) == 0) {\n        *(in_ECX + 0x2d4) = 4;\n    }\n    else {\n        iVar1 = **(arg_8h + 4);\n        fcn.00b99997();\n        fcn.00b99b9c(*(iVar1 + 8));\n        if (1 < *(arg_8h + 8)) {\n            iVar1 = *(*(arg_8h + 4) + 4);\n            fcn.00b99997();\n            fcn.00b981a7(*(iVar1 + 8));\n        }\n    }\n    iVar1 = fcn.00b9b93d(0);\n    if (iVar1 < 0) {\n        fcn.00be6aa3(-iVar1, 0);\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n    }\n    else {\n        iVar1 = *(in_ECX + 0x2e8);\n        *(in_ECX + 0x2d4) = uVar4;\n        arg_8h_01 = fcn.00b9942e();\n        uVar4 = arg_8h_01;\n        fcn.00b991b0(arg_8h_01, 2);\n        fcn.00b99040(arg_8h_01, &stack0xffffffc0, 2);\n        fcn.00b99a20();\n        iVar3 = 1;\n        if (0 < iVar1) {\n            do {\n                (*_sym.imp.USER32.dll_GetWindowTextW)(**(*(in_ECX + 0x2e4) + -4 + iVar3 * 4), arg_8h_02, 0x7fff);\n                iVar2 = fcn.00bb0ff6(0x10);\n                if (iVar2 != 0) {\n                    fcn.00b97f41(arg_8h_02);\n                }\n                fcn.00b99040(uVar4, &stack0xffffffc0, 2);\n                fcn.00b99a20();\n                uStack40 = 0;\n                uStack36 = 7;\n                auStack48[0] = **(*(in_ECX + 0x2e4) + -4 + iVar3 * 4);\n                fcn.00b99040(uVar4, auStack48, 2);\n                fcn.00b99a20();\n                iVar3 = iVar3 + 1;\n            } while (iVar3 <= iVar1);\n        }\n    }\n    *arg_8h_00 = *arg_8h_00 + -1;\n    if (*arg_8h_00 == 0) {\n        fcn.00bb106c(arg_8h_00);\n        fcn.00bb106c(arg_8h_02);\n    }\n    return 0;\n}\n",
        "token_count": 862
    },
    "00c1620b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1620b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    fcn.00b9b9ad(arg_8h);\n    if (*(arg_8h + 8) == 3) {\n        iVar1 = fcn.00b99c9c();\n        *(in_ECX + 0x2f0) = iVar1 * 1000;\n    }\n    else {\n        *(in_ECX + 0x2f0) = 0;\n    }\n    uVar2 = (*_sym.imp.WINMM.dll_timeGetTime)();\n    *(in_ECX + 0x2f8) = uVar2;\n    return;\n}\n",
        "token_count": 172
    },
    "00c16442": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00c16442(uint arg_8h, uint *hWnd, uint *arg_10h, int32_t nHeight, uint arg_18h, uint32_t arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar1 = *hWnd;\n    if (hWnd[0x11] != 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(hWnd[0x11]);\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    iVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x5a);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    uVar2 = (*_sym.imp.GDI32.dll_CreateFontW)\n                      ((iVar3 * nHeight) / -0x2d0, 0, 0, 0, arg_18h, arg_1ch & 2, arg_1ch & 4, arg_1ch & 8, 1, 4, 0, \n                       arg_20h, 0, *arg_10h);\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x30, uVar2, 1);\n    if ((*(hWnd + 0x24) == '\\x01') && (arg_24h != '\\0')) {\n        (*_sym.imp.USER32.dll_MoveWindow)(*hWnd, *(hWnd + 0x22), *(hWnd + 0x8a), *(hWnd + 0x23), *(hWnd + 0x8e), 0);\n    }\n    if ((*(hWnd + 0x24) == '\\0') && (arg_24h != '\\0')) {\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x142, 0, 0);\n    }\n    hWnd[0x11] = uVar2;\n    fcn.00c1b57f(arg_8h, hWnd, 1);\n    return;\n}\n",
        "token_count": 490
    },
    "00c1653c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1653c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    \n    iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(***(*0xc56824 + arg_8h * 4), 0xf0, 0, 0);\n    if ((iVar4 != 0) || (arg_ch != 0)) {\n        iVar4 = arg_8h;\n        if (2 < arg_8h) {\n            do {\n                puVar1 = **(*0xc56824 + iVar4 * 4);\n                if ((puVar1 == NULL) || (*(puVar1 + 0x24) != '\\x1a')) break;\n                uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(*puVar1, 0xfffffff0);\n                iVar6 = arg_8h;\n                if ((uVar5 & 0x20000) != 0) goto code_r0x00c165d1;\n                iVar4 = iVar4 + -1;\n            } while (2 < iVar4);\n        }\n        iVar4 = iVar4 + 1;\n        iVar6 = arg_8h;\ncode_r0x00c165d1:\n        do {\n            iVar2 = iVar6;\n            iVar6 = iVar2 + 1;\n            iVar3 = iVar4;\n            if (((*0xc56834 < iVar6) || (puVar1 = **(*0xc56824 + iVar6 * 4),  puVar1 == NULL)) ||\n               (*(puVar1 + 0x24) != '\\x1a')) break;\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(*puVar1, 0xfffffff0);\n        } while ((uVar5 & 0x20000) == 0);\n        for (; iVar3 <= iVar2; iVar3 = iVar3 + 1) {\n            (*_sym.imp.USER32.dll_SendMessageW)(***(*0xc56824 + iVar3 * 4), 0xf1, 0, 0);\n        }\n        if (arg_ch == 1) {\n            (*_sym.imp.USER32.dll_SendMessageW)(***(*0xc56824 + arg_8h * 4), 0xf1, 1, 0);\n        }\n        else {\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(***(*0xc56824 + iVar4 * 4), 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongW)(***(*0xc56824 + iVar4 * 4), 0xfffffff0, uVar5 | 0x10000);\n        }\n    }\n    return;\n}\n",
        "token_count": 639
    },
    "00c16ad4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00c16ad4(uint arg_8h, uint32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint32_t arg_18h_00;\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_10h;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 4;\n    }\n    arg_18h_00 = fcn.00c1b8ac(arg_28h | 0x10000);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x14;\n    }\n    uVar1 = fcn.00b91d35(arg_8h, arg_2ch, L\"SysDateTimePick32\", 0, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, \n                         arg_10h, arg_24h, 1);\n    *arg_ch = uVar1;\n    if (uVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.00bf589f(uVar1 & 0xffffff00 | ~(arg_18h_00 >> 3 & 0x1f) & 1, 1);\n        (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch, 0x1002, 0, &var_10h);\n        if (*0xc567b8 == 0) {\n            *(arg_ch + 0x86) = 0x200;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 469
    },
    "00c16e76": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00c16e76(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint32_t arg_18h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t lpRect;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    arg_18h_00 = fcn.00c1b8ac(-(arg_28h != 0xffffffff) & arg_28h | 0x100);\n    arg_2ch = -(arg_2ch != 0xffffffff) & arg_2ch;\n    iVar1 = fcn.00b91d35(arg_8h, arg_2ch, L\"static\", arg_14h, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, \n                         arg_2ch, 1);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if ((arg_18h_00 & 0x10) != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar1, &lpRect);\n            *(arg_8h + 0x60) = var_8h - lpRect;\n            *(arg_8h + 100) = var_4h - var_ch;\n        }\n        iVar1 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n        arg_ch[0x13] = iVar1;\n        uVar2 = 1;\n        if (*0xc567b8 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 461
    },
    "00c16f1f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00c16f1f(uint arg_8h, int32_t *arg_ch, uint arg_10h, int16_t *arg_14h, uint X, uint Y, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    code *pcVar1;\n    uint arg_18h;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0xa00002;\n    }\n    arg_18h = fcn.00c1b8ac(arg_28h | 0x10001);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    iVar2 = fcn.00b91d35(arg_8h, arg_2ch, L\"Listbox\", 0, arg_18h, X, Y, arg_20h, arg_24h, arg_10h, arg_2ch, 1);\n    *arg_ch = iVar2;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar2 == 0) {\n        uVar3 = arg_ch & 0xffffff00;\n    }\n    else {\n        if (*arg_14h != 0) {\n            (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x180, 0, arg_14h);\n            (*pcVar1)(*arg_ch, 0x186, 0, 0);\n        }\n        if (*0xc567b8 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n        (*_sym.imp.USER32.dll_MoveWindow)(*arg_ch, X, Y, arg_20h, arg_24h, 0);\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 492
    },
    "00c16fef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl\nfcn.00c16fef(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h\n            , int32_t arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    bool bVar8;\n    ushort auStackY8236 [4052];\n    uint uStackY132;\n    int32_t iStackY128;\n    uint uStackY124;\n    int32_t iStackY120;\n    uint *puStackY116;\n    int32_t iStackY112;\n    uint uStackY108;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_10h;\n    uint var_1h;\n    \n    fcn.00bc1b90();\n    iVar7 = -1;\n    uVar4 = arg_28h;\n    if (arg_28h == 0xffffffff) {\n        uVar4 = 0xc;\n    }\n    uVar5 = fcn.00c1b8ac(uVar4 | 0x10001);\n    uVar4 = arg_2ch;\n    if (arg_2ch == 0xffffffff) {\n        uVar4 = 0x220;\n    }\n    bVar8 = (uVar4 & 0x10) != 0;\n    if (bVar8) {\n        uVar4 = uVar4 ^ 0x10;\n    }\n    var_24h = arg_20h;\n    if (arg_20h == -1) {\n        var_24h = 0x96;\n    }\n    var_20h = arg_24h;\n    if (arg_24h == -1) {\n        var_20h = 0x96;\n    }\n    var_1ch = arg_10h;\n    var_18h = var_20h;\n    iVar6 = fcn.00b91d35(arg_8h, uVar4, L\"SysListView32\", 0xc1f910, uVar5, arg_18h, arg_1ch, var_24h, var_20h, arg_10h, \n                         var_20h, 0);\n    piVar2 = arg_ch;\n    *arg_ch = iVar6;\n    if (iVar6 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        if (bVar8) {\n            (*_sym.imp.USER32.dll_SendMessageW)();\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        if (*(arg_8h + 0x188) != 0) {\n            uStackY108 = 0;\n            iStackY112 = *piVar2;\n            puStackY116 = 0xc170c7;\n            (*_sym.imp.USER32.dll_SetWindowPos)();\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        var_18h = &stack0xffffdfd4;\n        var_20h = 0;\n        var_24h = 0xf;\n        arg_8h = arg_14h;\n        while( true ) {\n            cVar3 = fcn.00c1af23(&stack0xffffdfd4, &fcn.00c16fef::arg_8h, 0xc567c4);\n            if (cVar3 == '\\0') break;\n            arg_28h = fcn.00bb2e3c(&stack0xffffdfd4);\n            uStackY108 = 0xc17121;\n            fcn.00bb2fcd(&stack0xffffdfd4, 0xc4b8a0);\n            uStackY108 = 0x1057;\n            iStackY112 = *piVar2;\n            puStackY116 = 0xc17135;\n            var_1ch = (*pcVar1)();\n            if (0x96 < var_1ch) {\n                var_1ch = 0x96;\n            }\n            iVar7 = iVar7 + 1;\n            *(&stack0xffffdfd4 + arg_28h * 2) = 0;\n            puStackY116 = &fcn.00c16fef::var_24h;\n            uStackY124 = 0x1061;\n            iStackY128 = *piVar2;\n            uStackY132 = 0xc17163;\n            iStackY120 = iVar7;\n            (*pcVar1)();\n        }\n        *(piVar2 + 0x25) = iVar7;\n        *(piVar2 + 0x96) = 0xffff;\n        uVar5 = 1;\n        if (*0xc567b8 == 0) {\n            *(piVar2 + 0x86) = 1;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 1241
    },
    "00c1783c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00c1783c(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    code *pcVar1;\n    uint arg_18h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    arg_18h_00 = fcn.00c1b8ac(-(arg_28h != 0xffffffff) & arg_28h);\n    arg_2ch = -(arg_2ch != 0xffffffff) & arg_2ch;\n    iVar2 = fcn.00b91d35(arg_8h, arg_2ch, L\"Msctls_Progress32\", 0, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, \n                         arg_10h, arg_2ch, 0);\n    *arg_ch = iVar2;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x2001, 0, 0xff000000);\n        (*pcVar1)(*arg_ch, 0x409, 0, 0xff000000);\n        (*pcVar1)(*arg_ch, 0x402, 0, 0);\n        (*pcVar1)(*arg_ch, 0x401, 0, 0x640000);\n        uVar3 = (*pcVar1)(*arg_ch, 0x404, 1, 0);\n        if (*0xc567b8 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n        uVar3 = uVar3 & 0xffffff00 | 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 466
    },
    "00c178ef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00c178ef(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint32_t arg_18h_00;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_18h_00 = fcn.00c1b8ac(-(arg_28h != 0xffffffff) & arg_28h | 9);\n    if (*(arg_8h + 0x69) == '\\0') {\n        arg_18h_00 = arg_18h_00 | 0x10000;\n        *(arg_8h + 0x69) = 1;\n    }\n    iVar1 = fcn.00b91d35(arg_8h, -(arg_2ch != 0xffffffff) & arg_2ch, L\"button\", arg_14h, arg_18h_00, arg_18h, arg_1ch, \n                         arg_20h, arg_24h, arg_10h, arg_18h_00, 1);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n        arg_ch[0x13] = iVar1;\n        if (*0xc567b8 == 0) {\n            *(arg_ch + 0x86) = 0x200;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 395
    },
    "00c17f23": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c17f23(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if ((*arg_8h != 0) && (arg_8h[2] == 0)) {\n        iVar1 = (*_sym.imp.USER32.dll_SetWindowLongW)(*arg_8h, 0xfffffffc, fcn.00c1bf4d);\n        arg_8h[2] = iVar1;\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00c18ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c18ac0(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint *hWnd;\n    uint uVar2;\n    char cVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar3 = fcn.00b92402(arg_8h, &var_4h, &var_8h);\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    uVar4 = **(*0xc56810 + var_4h * 4);\n    hWnd = **(*0xc56824 + var_8h * 4);\n    uVar2 = *hWnd;\n    uVar1 = *(hWnd + 0x24);\n    fcn.00b9322f();\n    if (uVar1 < 0x14) {\n        if (uVar1 == 0x13) {\n            uVar4 = 0x1024;\n        }\n        else {\n            if (uVar1 < 5) goto code_r0x00c18bd9;\n            if (uVar1 == 8) {\n                uVar4 = 0x409;\n            }\n            else {\n                if (uVar1 != 0x10) {\n                    if (uVar1 != 0x11) {\n                        return 0;\n                    }\n                    goto code_r0x00c18b40;\n                }\n                uVar4 = 0x111e;\n            }\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar2, uVar4, 0, arg_ch);\n    }\n    else {\n        if (uVar1 == 0x14) {\ncode_r0x00c18b40:\n            hWnd[0x13] = arg_ch;\n            (*_sym.imp.USER32.dll_InvalidateRect)(hWnd[0xd], 0, 1);\n            goto code_r0x00c18b53;\n        }\n        if (uVar1 != 0x17) {\n            if (uVar1 == 0x18) {\n                uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar2, 0xfffffff0);\n                (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xfffffff0, uVar5 | 0xb);\n            }\n            else {\n                if (uVar1 < 0x19) {\n                    return 0;\n                }\n                if (0x1b < uVar1) {\n                    return 0;\n                }\n            }\n        }\ncode_r0x00c18bd9:\n        hWnd[0x13] = arg_ch;\n        fcn.00c1b57f(uVar4, hWnd, 1);\n    }\ncode_r0x00c18b53:\n    if ((*0xc562b0 == 0) || ((((uVar1 != 8 && (uVar1 != 4)) && (uVar1 != 0x1a)) && (uVar1 != 0x19)))) {\n        uVar4 = 1;\n    }\n    else {\n        uVar4 = 0xffffffff;\n    }\n    return uVar4;\n}\n",
        "token_count": 723
    },
    "00c19962": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c19962(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint var_8h;\n    int32_t var_4h;\n    \n    cVar3 = fcn.00b92402(arg_8h, &var_8h, &var_4h);\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    puVar1 = **(*0xc56824 + var_4h * 4);\n    uVar2 = *puVar1;\n    cVar3 = *(puVar1 + 0x24);\n    if (cVar3 == '\\x01') {\n        if (arg_ch < 1) {\n            return 1;\n        }\n        uVar4 = 0;\n        uVar5 = 0x194;\n        arg_10h = arg_ch;\n    }\n    else {\n        if (cVar3 != '\\x02') {\n            if (cVar3 != '\\x03') {\n                if (cVar3 == '\\x12') {\n                    uVar4 = arg_ch << 0x10 | arg_10h & 0xffff;\n                    arg_10h = 1;\n                    uVar5 = 0x406;\n                }\n                else {\n                    if (cVar3 != '\\x16') {\n                        return 0;\n                    }\n                    uVar5 = 0x46f;\n                    uVar4 = arg_ch;\n                }\n                goto code_r0x00c19a0f;\n            }\n            (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0xb1, 0, 0xffffffff);\n        }\n        if (arg_ch < 1) {\n            return 1;\n        }\n        uVar4 = 0;\n        uVar5 = 0xc5;\n        arg_10h = arg_ch;\n    }\ncode_r0x00c19a0f:\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar2, uVar5, arg_10h, uVar4);\n    return 1;\n}\n",
        "token_count": 494
    },
    "00c19bf7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c19bf7(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar2 = fcn.00b92402(arg_8h, &var_8h, &var_4h);\n    if (cVar2 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        iVar1 = **(*0xc56824 + var_4h * 4);\n        if ((*(iVar1 + 0x86) == 0) || (0x3ff < arg_ch)) {\n            uVar3 = 0;\n        }\n        else {\n            if (arg_ch < 0) {\n                arg_ch = 0;\n            }\n            if (arg_ch - 1U < 0x3ff) {\n                *(iVar1 + 0x86) = arg_ch;\n            }\n            iVar1 = **(*0xc56810 + var_8h * 4);\n            if (*(iVar1 + 0x3a) == '\\0') {\n                fcn.00b91db3(iVar1, **(*0xc56824 + var_4h * 4), 0);\n            }\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 315
    },
    "00c1a428": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1a428(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t unaff_EDI;\n    uchar *puStack152;\n    char16_t *pcStack148;\n    char16_t *pcStack144;\n    uint32_t uStack140;\n    uint32_t uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uchar *puStack116;\n    uchar *puStack112;\n    uchar *puStack108;\n    uchar *arg_ch_00;\n    uchar *puVar8;\n    uchar auStack80 [4];\n    uchar auStack76 [4];\n    uchar auStack72 [4];\n    uint uStack68;\n    uint32_t uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack36;\n    uint uStack32;\n    \n    puVar8 = &stack0xffffffb0;\n    arg_ch_00 = &stack0xffffffb4;\n    cVar3 = fcn.00b92402(arg_8h, arg_ch_00, &stack0xffffffb0);\n    if (cVar3 != '\\0') {\n        iVar6 = **(*0xc56810 + unaff_EDI * 4);\n        puVar1 = **(*0xc56824 + puVar8 * 4);\n        cVar3 = *(puVar1 + 0x24);\n        if ((((((cVar3 != '\\x0e') && (cVar3 != '\\x0f')) && (cVar3 != '\\f')) && ((cVar3 != '\\t' && (cVar3 != '\\x14'))))\n            && ((cVar3 != '\\x11' && ((cVar3 != '\\x1d' && (cVar3 != '\\x1b')))))) && (cVar3 != '\\x15')) {\n            puStack112 = &stack0xffffffc0;\n            puStack108 = NULL;\n            puStack116 = 0xc1a4cd;\n            fcn.00bb3020();\n            uStack68 = 0x30;\n            uStack64 = -(arg_1ch != '\\0') & 2 | 0x11;\n            puStack60 = *puVar1;\n            uStack36 = *0xc56804;\n            uStack56 = *puVar1;\n            uStack32 = arg_ch;\n            if (*(puVar1 + 0x24) == '\\v') {\n                puStack108 = 0xc1a526;\n                iVar4 = fcn.00b925db(*(iVar6 + 0x188));\n                iVar6 = **(*0xc56824 + iVar4 * 4);\n                if ((*(iVar6 + 0x50) != 0) && (*(iVar6 + 0x58) != 0)) {\n                    puStack108 = *(iVar6 + 0x50);\n                    puStack112 = 0xc1a548;\n                    (*_sym.imp.USER32.dll_DestroyWindow)();\n                    *(**(*0xc56824 + iVar4 * 4) + 0x50) = 0;\n                    puStack108 = 0xc1a56d;\n                    fcn.00b97d2c(0xc1f910);\n                }\n                puVar5 = puVar1[0x14];\n                uStack64 = *(puVar8 + 0x188);\n                puStack60 = arg_ch_00;\n                if (puVar5 == NULL) {\n                    puStack112 = *0xc56804;\n                    puStack120 = *(puVar8 + 0x188);\n                    uStack124 = 0x80000000;\n                    uStack128 = 0x80000000;\n                    uStack132 = 0x80000000;\n                    uStack136 = 0x80000000;\n                    uStack140 = -(arg_18h != '\\0') & 0x40 | 0x80000013;\n                    pcStack148 = L\"tooltips_class32\";\n                    puStack152 = 0x8;\n                    pcStack144 = puVar5;\n                    puStack116 = puVar5;\n                    puStack108 = puVar5;\n                    puVar5 = (*_sym.imp.USER32.dll_CreateWindowExW)();\n                    if (puVar5 == NULL) {\n                        return 0;\n                    }\n                    puVar1[0x14] = puVar5;\n                }\n                else {\n                    puStack108 = &stack0xffffffb8;\n                    puStack112 = NULL;\n                    puStack116 = 0x433;\n                    uStack124 = 0xc1a5e4;\n                    puStack120 = puVar5;\n                    (*_sym.imp.USER32.dll_SendMessageW)();\n                }\n                (*_sym.imp.USER32.dll_SendMessageW)(puVar5, 0x432, 0, &stack0xffffff88);\n                fcn.00b97d2c(arg_ch);\n            }\n            else {\n                if (puVar1[0x14] != 0) {\n                    puStack108 = 0xc1a619;\n                    (*_sym.imp.USER32.dll_DestroyWindow)();\n                }\n                puStack108 = *0xc56804;\n                puStack112 = NULL;\n                puStack116 = *puVar1;\n                puStack120 = 0x80000000;\n                uStack124 = 0x80000000;\n                uStack128 = 0x80000000;\n                uStack132 = 0x80000000;\n                uStack136 = -(arg_18h != '\\0') & 0x40 | 0x80000013;\n                uStack140 = 0;\n                pcStack144 = L\"tooltips_class32\";\n                pcStack148 = 0x8;\n                puStack152 = 0xc1a650;\n                iVar6 = (*_sym.imp.USER32.dll_CreateWindowExW)();\n                if (iVar6 == 0) {\n                    return 0;\n                }\n                puStack152 = &stack0xffffff8c;\n                (*_sym.imp.USER32.dll_SendMessageW)(iVar6, 0x432, 0);\n                puVar1[0x14] = iVar6;\n                fcn.00b97d2c(arg_ch);\n                uVar7 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&stack0xffffff68);\n                (*_sym.imp.USER32.dll_GetWindowRect)(uVar7);\n                pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n                (*_sym.imp.USER32.dll_SendMessageW)(iVar6, 0x418, 0, puStack152);\n                if (arg_10h != 0) {\n                    (*pcVar2)(iVar6, 0x421, arg_14h, arg_10h);\n                }\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1573
    },
    "00c1a6c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1a6c4(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (*(arg_ch + 0x1cc) != 0) {\n        fcn.00bebe5b(arg_8h);\n        iVar1 = fcn.00bebe0a(arg_ch, in_ECX + 0x70, *(in_ECX + 0x84));\n        if (iVar1 == 0) {\n            iVar1 = *(arg_ch + 0x1cc);\n            if (iVar1 != 0) {\n                fcn.00bebacd();\n                fcn.00bb106c(iVar1);\n            }\n            *(arg_ch + 0x1cc) = 0;\n        }\n        *arg_8h = 0;\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "00c1a71e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1a71e(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **var_4h;\n    \n    iVar2 = arg_8h;\n    var_4h = *0xc56838;\n    while( true ) {\n        if (var_4h == NULL) {\n            return 0;\n        }\n        if (**var_4h == iVar2) break;\n        fcn.00be6cea(&arg_8h);\n    }\n    piVar1 = *var_4h + 1;\n    *piVar1 = *piVar1 + -1;\n    if ((*var_4h)[1] == 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)((*var_4h)[2]);\n        fcn.00c1becd(&var_4h);\n    }\n    return 1;\n}\n",
        "token_count": 209
    },
    "00c1adf1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00c1adf1(int32_t *hWnd, uint lpPoint, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    var_8h = -1;\n    var_ch = -1;\n    (*_sym.imp.USER32.dll_ClientToScreen)(***(*0xc56810 + *hWnd * 4), &lpPoint);\n    iVar4 = 0;\n    var_10h = *0xc56814;\n    if (0 < *0xc56814) {\n        do {\n            iVar1 = **(*0xc56810 + iVar4 * 4);\n            if ((iVar1 != 0) && (iVar5 = 3,  2 < *0xc56834)) {\n                do {\n                    puVar2 = **(*0xc56824 + iVar5 * 4);\n                    if (((puVar2 != NULL) && ((puVar2[1] == *(iVar1 + 4) && ((*(puVar2 + 0x92) & 0x20) == 0)))) &&\n                       ((*(puVar2 + 0x93) == 0xff || (*(puVar2 + 0x93) == *(iVar1 + 400))))) {\n                        (*_sym.imp.USER32.dll_GetWindowRect)(*puVar2, &lpRect);\n                        iVar3 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n                        if (iVar3 != 0) {\n                            if (*hWnd != iVar4) {\n                                var_ch = iVar4;\n                            }\n                            if ((*(**(*0xc56824 + iVar5 * 4) + 0x92) & 8) != 0) {\n                                if (*hWnd == iVar4) {\n                                    return iVar5;\n                                }\n                                *hWnd = var_ch;\n                                return iVar5;\n                            }\n                            if (var_8h < 0) {\n                                var_8h = iVar5;\n                            }\n                        }\n                    }\n                    iVar5 = iVar5 + 1;\n                } while (iVar5 <= *0xc56834);\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < var_10h);\n        if (-1 < var_8h) {\n            if (var_ch < 0) {\n                return var_8h;\n            }\n            *hWnd = var_ch;\n            return var_8h;\n        }\n    }\n    (*_sym.imp.USER32.dll_MessageBeep)(0);\n    return -1;\n}\n",
        "token_count": 613
    },
    "00c1b1a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1b1a0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t **var_4h;\n    \n    var_18h = arg_8h;\n    var_4h = *0xc5687c;\n    do {\n        arg_8h_00 = arg_ch;\n        if (var_4h == NULL) {\n            if (*(arg_ch + 4) == 0) {\n                uVar1 = 0;\n            }\n            else {\n                fcn.00b977c7();\n                fcn.00b981a7(arg_8h_00);\n                fcn.00c1be75(&var_18h);\n                fcn.00b95a64();\ncode_r0x00c1b22b:\n                uVar1 = 1;\n            }\n            return uVar1;\n        }\n        if (**var_4h == var_18h) {\n            if (*(arg_ch + 4) == 0) {\n                fcn.00c1bf0d(&var_4h);\n            }\n            else {\n                fcn.00b981a7(arg_ch);\n            }\n            goto code_r0x00c1b22b;\n        }\n        fcn.00be6cea(&arg_8h);\n    } while( true );\n}\n",
        "token_count": 328
    },
    "00c1b57f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1b57f(uint *arg_8h, uint *hWnd, uint bErase)\n\n{\n    uint lpRect;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpPoint;\n    uint var_8h;\n    \n    if ((*(arg_8h + 0x39) == '\\0') && (*(arg_8h + 0x3a) == '\\0')) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*hWnd, &lpRect);\n        lpPoint = lpRect;\n        var_8h = var_18h;\n        (*_sym.imp.USER32.dll_ScreenToClient)(*arg_8h, &lpPoint);\n        lpRect = lpPoint;\n        var_18h = var_8h;\n        lpPoint = var_14h;\n        var_8h = var_10h;\n        (*_sym.imp.USER32.dll_ScreenToClient)(*arg_8h, &lpPoint);\n        var_14h = lpPoint;\n        var_10h = var_8h;\n        (*_sym.imp.USER32.dll_InvalidateRect)(*arg_8h, &lpRect, bErase);\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "00c01239": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c01239(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint32_t noname_4;\n    uint uVar3;\n    int32_t iVar4;\n    char cVar5;\n    uint uStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint auStack56 [2];\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint auStack24 [2];\n    uint uStack16;\n    uint uStack12;\n    \n    iVar4 = *0xc56408;\n    iStack60 = *0xc56408;\n    if ((*0xc56408 == 1) || (*0xc56287 != '\\0')) {\ncode_r0x00c013c0:\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0;\n        uStack12 = 1;\n        noname_4 = 0;\n        *0xc56408 = 0;\n        auStack24[0] = 0;\n        uStack16 = 0;\n        auStack56[0] = 0;\n        uStack48 = 0;\n        uStack44 = 1;\n        uStack40 = 0xc1fb84;\n        uStack36 = 0;\n        uStack32 = 0;\n        uStack28 = 0;\n        iStack64 = 0;\n        if (*0xc56800 != 0) {\n            do {\n                uVar1 = *0xc567ec;\n                if (noname_4 == 0) {\n                    fcn.00b99a20();\n                    auStack56[0] = uVar1;\n                    uStack44 = 1;\n                }\n                else {\n                    if (noname_4 == 1) {\n                        fcn.00b99a20();\n                        auStack56[0] = arg_8h;\n                    }\n                    else {\n                        if (noname_4 != 2) {\n                            if (noname_4 == 3) {\n                                fcn.00b99a20();\n                                uStack44 = 1;\n                                auStack56[0] = arg_10h;\n                            }\n                            goto code_r0x00c01314;\n                        }\n                        fcn.00b99a20();\n                        auStack56[0] = arg_ch;\n                    }\n                    uStack44 = 1;\n                }\ncode_r0x00c01314:\n                fcn.00be6665(auStack56);\n                noname_4 = uStack68 + 1;\n                iVar4 = iStack64;\n                uStack68 = noname_4;\n            } while (noname_4 < *0xc56800);\n        }\n        uStack68 = uStack68 & 0xffffff;\n        cVar5 = '\\0';\n        cVar2 = fcn.00c03bb3(0xc567f0, &uStack40, auStack24, 0, noname_4, &uStack68 + 3);\n        if ((cVar2 != '\\0') && (*0xc56408 != 1)) {\n            *0xc56408 = iVar4;\n            if (cVar5 == '\\0') {\n                fcn.00be66f4();\n                fcn.00b99a20();\n                fcn.00b99a20();\n                goto code_r0x00c013c0;\n            }\n            uVar3 = fcn.00b99c9c();\n        }\n        fcn.00be66f4();\n        fcn.00b99a20();\n        fcn.00b99a20();\n    }\n    return uVar3;\n}\n",
        "token_count": 840
    },
    "00c1b8ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00c1b8ac(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = **(*0xc56810 + *0xc5681c * 4);\n    if ((arg_8h & 0x20000) != 0) {\n        fcn.00b92f66(0);\n    }\n    if (*(iVar1 + 0x68) == '\\0') {\n        *(iVar1 + 0x68) = 1;\n        arg_8h = arg_8h | 0x20000;\n    }\n    return arg_8h;\n}\n",
        "token_count": 143
    },
    "00c1b958": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1b958(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    \n    iVar1 = *(arg_8h + 4);\n    iVar3 = 3;\n    if (*(arg_8h + 400) != arg_ch) {\n        if (2 < *(in_ECX + 0x84)) {\n            do {\n                puVar2 = **(*(in_ECX + 0x74) + iVar3 * 4);\n                if ((((puVar2 != NULL) && (puVar2[1] == iVar1)) && (*(puVar2 + 0x24) != '\\v')) &&\n                   ((*(puVar2 + 0x93) == *(arg_8h + 400) ||\n                    (((*(arg_8h + 0x198) != '\\0' && (*(puVar2 + 0x93) != 0xff)) && (*(puVar2 + 0x24) != '\\n')))))) {\n                    (*_sym.imp.USER32.dll_ShowWindow)(*puVar2, 0);\n                    puVar2 = **(*(in_ECX + 0x74) + iVar3 * 4);\n                    if (((*(puVar2 + 0x92) & 0x40) != 0) && (*(puVar2 + 0x24) == '\\x1a')) {\n                        (*_sym.imp.USER32.dll_EnableWindow)(*puVar2, 0);\n                    }\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 <= *(in_ECX + 0x84));\n        }\n        *(arg_8h + 400) = arg_ch;\n    }\n    iVar3 = 3;\n    if (2 < *(in_ECX + 0x84)) {\n        do {\n            puVar2 = **(*(in_ECX + 0x74) + iVar3 * 4);\n            if ((((puVar2 != NULL) && (puVar2[1] == iVar1)) && (*(puVar2 + 0x24) != '\\v')) &&\n               ((*(puVar2 + 0x93) == *(arg_8h + 400) && ((*(puVar2 + 0x92) & 0x20) == 0)))) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*puVar2, 0);\n                (*_sym.imp.USER32.dll_ShowWindow)(***(*(in_ECX + 0x74) + iVar3 * 4), 4);\n                puVar2 = **(*(in_ECX + 0x74) + iVar3 * 4);\n                if (((*(puVar2 + 0x92) & 0x40) != 0) && (*(puVar2 + 0x24) == '\\x1a')) {\n                    (*_sym.imp.USER32.dll_EnableWindow)(*puVar2, 1);\n                }\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 <= *(in_ECX + 0x84));\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(*(arg_8h + 0x188), 0x130c, arg_ch, 0);\n    return;\n}\n",
        "token_count": 729
    },
    "00c1bab8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00c1bab8(uint *arg_8h, int32_t hLibModule, uint arg_10h, uint noname_3, uint32_t *arg_18h, int32_t arg_1ch)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    char cVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    bool bVar11;\n    uint *puVar12;\n    uint *puVar13;\n    char16_t *pcVar14;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar7 = fcn.00b99c9c();\n    cVar5 = '\\0';\n    uVar8 = fcn.00bb2e3c(hLibModule);\n    if (4 < uVar8) {\n        pcVar14 = L\".icl\";\n        iVar9 = fcn.00bb2e3c(hLibModule);\n        iVar9 = fcn.00bb313d(hLibModule + (iVar9 + -4) * 2, pcVar14);\n        cVar5 = '\\x01' - (iVar9 != 0);\n        pcVar14 = L\".exe\";\n        iVar9 = fcn.00bb2e3c(hLibModule);\n        iVar9 = fcn.00bb313d(hLibModule + (iVar9 + -4) * 2, pcVar14);\n        pcVar14 = L\".dll\";\n        iVar10 = fcn.00bb2e3c(hLibModule);\n        iVar10 = fcn.00bb313d(hLibModule + (iVar10 + -4) * 2, pcVar14);\n        if ((iVar10 == 0) || (iVar9 == 0)) {\n            iVar9 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(hLibModule, 0, 0x32);\n            if (iVar9 == 0) goto code_r0x00c1bb77;\n            if (arg_1ch == 4) {\n                fcn.00b99997();\n                iVar10 = (*_sym.imp.USER32.dll_LoadImageW)(iVar9, *arg_18h, 1, *(arg_8h + 0x23), *(arg_8h + 0x8e), 0);\n                var_4h = iVar10;\n                if (iVar10 == 0) {\n                    iVar1 = *(arg_8h + 0x8e);\n                    iVar2 = *(arg_8h + 0x23);\n                    uVar8 = uVar7 & 0xffff;\ncode_r0x00c1bc7a:\n                    var_4h = (*_sym.imp.USER32.dll_LoadImageW)(iVar9, uVar8, 1, iVar2, iVar1, iVar10);\n                }\n            }\n            else {\n                if (0 < uVar7) {\n                    var_4h = (*_sym.imp.USER32.dll_LoadImageW)\n                                       (iVar9, uVar7 & 0xffff, 1, *(arg_8h + 0x23), *(arg_8h + 0x8e), 0);\n                }\n                if (var_4h == 0) {\n                    fcn.00b99997();\n                    iVar10 = 0;\n                    uVar8 = *arg_18h;\n                    iVar1 = *(arg_8h + 0x8e);\n                    iVar2 = *(arg_8h + 0x23);\n                    goto code_r0x00c1bc7a;\n                }\n            }\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar9);\n            goto code_r0x00c1bb77;\n        }\n        if (cVar5 != '\\0') goto code_r0x00c1bb77;\n    }\n    var_4h = (*_sym.imp.USER32.dll_LoadImageW)(0, hLibModule, 1, *(arg_8h + 0x23), *(arg_8h + 0x8e), 0x2010);\ncode_r0x00c1bb77:\n    if (((var_4h == 0) && (cVar6 = fcn.00be65fa(),  cVar6 != '\\0')) && ((uVar7 < 1 || (cVar5 != '\\0')))) {\n        if (uVar7 < 0) {\n            uVar7 = -uVar7 - 1;\n        }\n        puVar13 = &var_4h;\n        if (*(arg_8h + 0x23) < 0x11) {\n            puVar12 = NULL;\n        }\n        else {\n            puVar12 = puVar13;\n            puVar13 = NULL;\n        }\n        (*_sym.imp.SHELL32.dll_ExtractIconExW)(hLibModule, uVar7, puVar12, puVar13, 1);\n    }\n    if (arg_8h[0x1a] != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(arg_8h[0x1a]);\n    }\n    pcVar4 = _sym.imp.USER32.dll_SendMessageW;\n    arg_8h[0x1a] = var_4h;\n    uVar3 = *arg_8h;\n    (*pcVar4)(uVar3, 0x170, var_4h, 0);\n    (*pcVar4)(uVar3, 100, 0x172, 1);\n    bVar11 = var_4h != 0;\n    uVar7 = fcn.00b99a20();\n    return uVar7 & 0xffffff00 | bVar11;\n}\n",
        "token_count": 1297
    },
    "00c1be3f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1be3f(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t *in_ECX;\n    \n    puVar2 = fcn.00bb0ff6(8);\n    uVar1 = *arg_8h;\n    puVar2[1] = 0;\n    *puVar2 = uVar1;\n    if (in_ECX[1] == 0) {\n        in_ECX[1] = puVar2;\n    }\n    else {\n        *(in_ECX[2] + 4) = puVar2;\n    }\n    *in_ECX = *in_ECX + 1;\n    in_ECX[2] = puVar2;\n    return;\n}\n",
        "token_count": 172
    },
    "00c1c00c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1c00c(uint arg_8h, uint X, uint Y, uint nXEnd, uint nYEnd, uint32_t arg_1ch)\n\n{\n    if ((arg_1ch & 2) != 0) {\n        fcn.00b912f3(arg_8h, 0, 0xffffffff, 2, 1);\n        (*_sym.imp.GDI32.dll_MoveToEx)(arg_8h, X, Y, 0);\n        (*_sym.imp.GDI32.dll_LineTo)(arg_8h, nXEnd, nYEnd);\n        if (*0xc5686c != '\\0') {\n            (*_sym.imp.GDI32.dll_EndPath)(arg_8h);\n            *0xc5686c = '\\0';\n        }\n        (*str._W_bw._0_4_)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "00c1c19a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1c19a(uint hdc, int32_t X, int32_t Y, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    \n    if ((arg_14h & 1) != 0) {\n        fcn.00b912f3(hdc, 0, 0xffffffff, 0, 1);\n        (*_sym.imp.GDI32.dll_MoveToEx)(hdc, X + -2, Y, 0);\n        pcVar1 = _sym.imp.GDI32.dll_LineTo;\n        (*_sym.imp.GDI32.dll_LineTo)(hdc, X + 3, Y);\n        (*_sym.imp.GDI32.dll_MoveToEx)(hdc, X, Y + -2, 0);\n        (*pcVar1)(hdc, X, Y + 3);\n        if (*0xc5686c != '\\0') {\n            (*_sym.imp.GDI32.dll_EndPath)(hdc);\n            *0xc5686c = '\\0';\n        }\n        (*str._W_bw._0_4_)(hdc);\n    }\n    return;\n}\n",
        "token_count": 250
    },
    "00c1c220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1c220(uint hDlg, uint noname_1, uint32_t arg_10h, int32_t arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00b92612(hDlg);\n    fcn.00b92344(**(*0xc56810 + iVar1 * 4), 1);\n    if (arg_1ch == 0) {\n        uVar2 = 0x204;\n    }\n    else {\n        uVar2 = 0x201;\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, uVar2, arg_18h, arg_14h << 0x10 | arg_10h & 0xffff);\n    return;\n}\n",
        "token_count": 192
    },
    "00c1cbae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1cbae(uint noname_0, int32_t arg_ch, uint hDlg, uint wParam, uint lParam)\n\n{\n    int32_t arg_ch_00;\n    \n    arg_ch_00 = **(*0xc56810 + arg_ch * 4);\n    if (*(arg_ch_00 + 0x184) != '\\0') {\n        fcn.00c163d0(0xfffffff4, arg_ch_00, 0, 0);\n    }\n    *(arg_ch_00 + 0x184) = 0;\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x232, wParam, lParam);\n    return;\n}\n",
        "token_count": 155
    },
    "00c1cbf9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1cbf9(uint noname_0, int32_t arg_ch, uint hDlg, uint wParam, uint lParam)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = **(*0xc56810 + arg_ch * 4);\n    if (*(iVar1 + 0x2c) == 0) {\n        (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x53, wParam, lParam);\n    }\n    else {\n        fcn.00c1b8ef(*(iVar1 + 0x28));\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "00c1cc2e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1cc2e(uint hDlg, uint32_t arg_ch, uint32_t arg_10h, uint wParam)\n\n{\n    uint32_t in_ECX;\n    uint32_t lpPoint;\n    uint32_t y;\n    \n    lpPoint = in_ECX;\n    y = in_ECX;\n    if (*0xc56860 != 0) {\n        lpPoint = arg_ch;\n        y = arg_10h;\n        (*_sym.imp.USER32.dll_ClientToScreen)(hDlg, &lpPoint);\n        (*_sym.imp.COMCTL32.dll_ImageList_DragMove)(lpPoint, y);\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x200, wParam, arg_10h << 0x10 | arg_ch & 0xffff);\n    return;\n}\n",
        "token_count": 184
    },
    "00c1d74c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1d74c(int32_t nWidth, int32_t wParam, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint16_t uVar9;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00b92612(nWidth);\n    puVar1 = **(*0xc56810 + iVar3 * 4);\n    if (*(puVar1 + 0x3a) != '\\0') {\n        puVar1[0x11] = arg_10h;\n        puVar1[0x12] = arg_14h;\n        if (puVar1[0x67] != 0) {\n            iVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xf);\n            puVar1[0x12] = puVar1[0x12] + iVar3;\n        }\n    }\n    iVar3 = puVar1[0x11];\n    iVar8 = puVar1[0x12];\n    if (puVar1[0x67] != 0) {\n        iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xf);\n        iVar8 = iVar8 - iVar4;\n    }\n    if ((((iVar3 < 1) || (iVar8 < 1)) || (arg_10h < 1)) || ((arg_14h < 1 || (wParam == 1)))) {\n        (*_sym.imp.USER32.dll_DefDlgProcW)(nWidth, 5, wParam, arg_14h << 0x10 | arg_10h & 0xffff);\n    }\n    else {\n        var_10h = 3;\n        if (2 < *0xc56834) {\n            do {\n                piVar2 = **(*0xc56824 + var_10h * 4);\n                if (((piVar2 != NULL) && (piVar2[1] == puVar1[1])) && (*piVar2 != 0)) {\n                    iVar4 = *(piVar2 + 0x22);\n                    iVar5 = (iVar4 * arg_10h) / iVar3;\n                    iVar6 = (*(piVar2 + 0x8a) * arg_14h) / iVar8;\n                    nWidth = (*(piVar2 + 0x23) * arg_10h) / iVar3;\n                    iVar7 = (*(piVar2 + 0x8e) * arg_14h) / iVar8;\n                    uVar9 = *(piVar2 + 0x86);\n                    if (uVar9 != 0) {\n                        if ((uVar9 & 0x100) != 0) {\n                            nWidth = *(piVar2 + 0x23);\n                            uVar9 = *(piVar2 + 0x86);\n                            if ((uVar9 & 6) == 0) {\n                                if ((uVar9 & 8) == 0) {\n                                    if (arg_10h / 2 < iVar5) {\n                                        iVar5 = (arg_10h - (((iVar3 - *(piVar2 + 0x22)) - nWidth) * arg_10h) / iVar3) -\n                                                nWidth;\n                                    }\n                                }\n                                else {\n                                    iVar5 = (arg_10h - iVar3) / 2 + *(piVar2 + 0x22);\n                                }\n                                uVar9 = *(piVar2 + 0x86);\n                            }\n                        }\n                        if ((uVar9 & 0x200) != 0) {\n                            iVar7 = *(piVar2 + 0x8e);\n                            if ((uVar9 & 0x60) == 0) {\n                                if (uVar9 < '\\0') {\n                                    iVar6 = (arg_14h - iVar8) / 2 + *(piVar2 + 0x8a);\n                                }\n                                else if (arg_14h / 2 < iVar6) {\n                                    iVar6 = (arg_14h - (((iVar8 - *(piVar2 + 0x8a)) - iVar7) * arg_14h) / iVar8) - iVar7\n                                    ;\n                                }\n                                uVar9 = *(piVar2 + 0x86);\n                            }\n                        }\n                        if ((uVar9 & 2) != 0) {\n                            iVar5 = *(piVar2 + 0x22);\n                        }\n                        if ((uVar9 & 4) != 0) {\n                            if ((uVar9 & 2) == 0) {\n                                iVar5 = ((*(piVar2 + 0x23) - nWidth) - iVar3) + iVar4 + arg_10h;\n                            }\n                            else {\n                                nWidth = ((*(piVar2 + 0x23) - iVar5) - iVar3) + iVar4 + arg_10h;\n                                uVar9 = *(piVar2 + 0x86);\n                            }\n                        }\n                        if ((uVar9 & 0x20) != 0) {\n                            iVar6 = *(piVar2 + 0x8a);\n                        }\n                        if ((uVar9 & 0x40) != 0) {\n                            if ((uVar9 & 0x20) == 0) {\n                                iVar6 = ((*(piVar2 + 0x8e) - iVar7) - iVar8) + *(piVar2 + 0x8a) + arg_14h;\n                            }\n                            else {\n                                iVar7 = ((*(piVar2 + 0x8e) - iVar6) - iVar8) + *(piVar2 + 0x8a) + arg_14h;\n                            }\n                        }\n                    }\n                    (*_sym.imp.USER32.dll_MoveWindow)(*piVar2, iVar5, iVar6, nWidth, iVar7, 0);\n                    if (*(piVar2 + 0x24) == '\\0') {\n                        (*_sym.imp.USER32.dll_SendMessageW)(*piVar2, 0x142, 0, 0xffff);\n                    }\n                    else if ((*(piVar2 + 0x24) == '\\x16') && ((*(piVar2 + 0x92) & 0x20) == 0)) {\n                        (*_sym.imp.USER32.dll_SendMessageW)(*piVar2, 0x469, piVar2[0xd], 0);\n                        if ((*(piVar2 + 0x93) != 0xff) && (*(piVar2 + 0x93) != puVar1[100])) {\n                            (*_sym.imp.USER32.dll_ShowWindow)(*piVar2, 0);\n                        }\n                    }\n                }\n                var_10h = var_10h + 1;\n            } while (var_10h <= *0xc56834);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(*puVar1, 0, 1);\n        *(puVar1 + 0x61) = 1;\n    }\n    return;\n}\n",
        "token_count": 1603
    },
    "00c1db51": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.00c1db51(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint16_t *in_ECX;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *in_ECX;\n    do {\n        if (uVar1 == 0) {\n            return NULL;\n        }\n        if (uVar1 == 0x70) {\n            uVar2 = in_ECX[1];\ncode_r0x00c1dc7c:\n            in_ECX = in_ECX + uVar2;\n        }\n        else if (uVar1 == 0x7c) {\n            if (arg_8h < 0) {\n                return in_ECX;\n            }\n            in_ECX = in_ECX + 2;\n        }\n        else {\n            if ((((uVar1 == 0x85) || (uVar1 == 0x8a)) || (uVar1 == 0x86)) || (uVar1 == 0x8b)) {\n                if (in_ECX[2] == arg_8h) {\n                    return in_ECX;\n                }\n                uVar2 = *(uVar1 + 0xc35750);\n                goto code_r0x00c1dc7c;\n            }\n            uVar2 = uVar1;\n            if (uVar2 < 0x96) {\n                if (uVar2 == 0x95) {\ncode_r0x00c1dc31:\n                    in_ECX = in_ECX + in_ECX[1];\n                }\n                else {\n                    if (uVar2 < 0x55) goto code_r0x00c1dc38;\n                    if (uVar2 < 0x5b) {\ncode_r0x00c1dc07:\n                        uVar1 = in_ECX[1];\n                    }\n                    else {\n                        if (0x5d < uVar2) {\n                            if (uVar2 < 0x61) goto code_r0x00c1dc07;\n                            if (uVar2 != 0x61) goto code_r0x00c1dc38;\n                        }\n                        uVar1 = in_ECX[2];\n                    }\n                    if ((uVar1 == 0x10) || (uVar1 == 0xf)) {\n                        in_ECX = in_ECX + 2;\n                    }\n                }\n            }\n            else if (((uVar2 == 0x97) || (uVar2 == 0x99)) || (uVar2 == 0x9b)) goto code_r0x00c1dc31;\ncode_r0x00c1dc38:\n            in_ECX = in_ECX + *(uVar2 + 0xc35750);\n            if (((in_EDX != 0) && (uVar2 - 0x1d < 0x38)) && ((in_ECX[-1] & 0xfc00) == 0xd800)) {\n                in_ECX = in_ECX + 1;\n            }\n        }\n        uVar1 = *in_ECX;\n    } while( true );\n}\n",
        "token_count": 708
    },
    "00c1e183": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00c1e183(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint16_t *puVar6;\n    int32_t in_EDX;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint16_t *puVar9;\n    bool bVar10;\n    int32_t *var_10h;\n    uint16_t *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar7 = -1;\n    var_4h = -1;\n    puVar9 = in_ECX + 4;\n    var_8h = in_EDX;\ncode_r0x00c1e198:\n    iVar3 = iVar7;\n    iVar7 = 0;\ncode_r0x00c1e19a:\n    iVar8 = var_4h;\n    uVar5 = *puVar9;\n    // switch table (162 cases) at 0xc1e3a7\n    switch(uVar5) {\n    case 0:\n    case 0x77:\n    case 0x78:\n    case 0x9e:\n    case 0x9f:\n        goto code_r0x00c1e1ff;\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x76:\n    case 0x7c:\n    case 0x8d:\n    case 0x8e:\n    case 0x8f:\n    case 0x90:\n    case 0x91:\n    case 0x96:\n    case 0x98:\n    case 0x9a:\n    case 0x9c:\n    case 0x9d:\n    case 0xa0:\n        uVar1 = *(uVar5 + 0xc35750);\n        break;\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n        goto code_r0x00c1e33f;\n    case 0xe:\n        return -2;\n    case 0xf:\n    case 0x10:\n        puVar9 = puVar9 + 2;\n        goto code_r0x00c1e33f;\n    case 0x11:\n    case 0x16:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n    case 0x28:\n    case 0x2a:\n    case 0x2b:\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x44:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n    case 0x54:\n    case 0x55:\n    case 0x56:\n    case 0x57:\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n    case 0x5c:\n    case 0x5e:\n    case 0x5f:\n    case 0x60:\n    case 0x61:\n    case 0x71:\n    case 0x72:\n    case 0x73:\n    case 0x74:\n    case 0x79:\n    case 0x7a:\n    case 0x7b:\n    case 0x84:\n    case 0x86:\n    case 0x88:\n    case 0x89:\n    case 0x8a:\n    case 0x8b:\n    case 0x8c:\n    case 0x92:\n    case 0x93:\n    case 0x94:\n    case 0xa1:\n        goto code_r0x00c1e39d;\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n        iVar7 = iVar7 + 1;\n        puVar9 = puVar9 + 2;\n        goto code_r0x00c1e2ec;\n    case 0x29:\n    case 0x36:\n    case 0x43:\n    case 0x50:\n        iVar7 = iVar7 + puVar9[1];\n        puVar9 = puVar9 + 3;\ncode_r0x00c1e2ec:\n        if ((var_8h != 0) && ((puVar9[-1] & 0xfc00) == 0xd800)) goto code_r0x00c1e310;\n        goto code_r0x00c1e19a;\n    case 0x5d:\n        iVar7 = iVar7 + puVar9[1];\n        if ((puVar9[2] == 0x10) || (puVar9[2] == 0xf)) {\n            puVar9 = puVar9 + 2;\n        }\n        goto code_r0x00c1e37b;\n    default:\n        return -4;\n    case 0x6e:\n    case 0x6f:\n    case 0x70:\n        if (uVar5 == 0x70) {\n            puVar9 = puVar9 + puVar9[1];\n        }\n        else {\n            puVar9 = puVar9 + 0x11;\n        }\n        uVar2 = *puVar9;\n        if (uVar2 < 0x62) {\ncode_r0x00c1e383:\n            iVar7 = iVar7 + 1;\n        }\n        else {\n            if (uVar2 < 0x68) {\n                return -1;\n            }\n            if (0x69 < uVar2) {\n                if (uVar2 < 0x6d) {\n                    return -1;\n                }\n                if (uVar2 != 0x6d) goto code_r0x00c1e383;\n            }\n            if (puVar9[1] != puVar9[2]) {\n                return -1;\n            }\n            iVar7 = iVar7 + puVar9[1];\ncode_r0x00c1e37b:\n            puVar9 = puVar9 + 3;\n        }\n        goto code_r0x00c1e19a;\n    case 0x75:\n        if (arg_8h == 0) {\n            return -3;\n        }\n        var_ch = *(arg_ch + 0x14) + puVar9[1] * 2;\n        puVar6 = var_ch;\n        do {\n            puVar6 = puVar6 + puVar6[1];\n        } while (*puVar6 == 0x77);\n        if ((var_ch < puVar9) && (puVar9 < puVar6)) {\n            return -1;\n        }\n        piVar4 = arg_10h;\n        if (arg_10h != NULL) {\n            do {\n                if (piVar4[1] == var_ch) break;\n                piVar4 = *piVar4;\n            } while (piVar4 != NULL);\n            if (piVar4 != NULL) {\n                return -1;\n            }\n        }\n        var_10h = arg_10h;\n        iVar3 = fcn.00c1e183(arg_8h, arg_ch, &var_10h);\n        if (iVar3 < 0) {\n            return iVar3;\n        }\n        goto code_r0x00c1e1fa;\n    case 0x7d:\n    case 0x7e:\n    case 0x7f:\n    case 0x80:\n        do {\n            puVar9 = puVar9 + puVar9[1];\n        } while (*puVar9 == 0x77);\n        uVar1 = *(*puVar9 + 0xc35750);\n        iVar3 = var_4h;\n        break;\n    case 0x81:\n    case 0x82:\n    case 0x83:\n    case 0x85:\n    case 0x87:\n        iVar3 = fcn.00c1e183(arg_8h, arg_ch, arg_10h);\n        if (iVar3 < 0) {\n            return iVar3;\n        }\n        do {\n            puVar9 = puVar9 + puVar9[1];\n            iVar8 = var_4h;\n        } while (*puVar9 == 0x77);\ncode_r0x00c1e1fa:\n        iVar7 = iVar7 + iVar3;\n        puVar9 = puVar9 + 2;\n        iVar3 = iVar8;\n        goto code_r0x00c1e19a;\n    case 0x95:\n    case 0x97:\n    case 0x99:\n    case 0x9b:\n        goto code_r0x00c1e2ca;\n    }\n    puVar9 = puVar9 + uVar1;\n    goto code_r0x00c1e19a;\ncode_r0x00c1e2ca:\n    puVar9 = puVar9 + *(uVar5 + 0xc35750) + puVar9[1];\n    goto code_r0x00c1e19a;\ncode_r0x00c1e33f:\n    iVar7 = iVar7 + 1;\ncode_r0x00c1e310:\n    puVar9 = puVar9 + 1;\n    goto code_r0x00c1e19a;\ncode_r0x00c1e1ff:\n    iVar8 = iVar7;\n    if ((-1 < iVar3) && (bVar10 = iVar3 != iVar7,  iVar7 = iVar3,  iVar8 = var_4h,  bVar10)) {\ncode_r0x00c1e39d:\n        return -1;\n    }\n    var_4h = iVar8;\n    if (*puVar9 != 0x77) {\n        return iVar7;\n    }\n    puVar9 = puVar9 + 2;\n    goto code_r0x00c1e198;\n}\n",
        "token_count": 2631
    },
    "00c1e485": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00c1e485(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *in_ECX;\n    uint32_t uVar3;\n    uint32_t in_EDX;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    uVar4 = *in_ECX;\n    if (uVar4 <= in_EDX) {\n        do {\n            uVar3 = *((*(uVar4 / 0x80 + 0xc43b40) * 0x80 + uVar4 % 0x80) * 2 + 0xc35840);\n            uVar1 = *(uVar3 * 8 + 0xc32f53);\n            if (uVar1 != 0) {\n                *arg_8h = uVar4;\n                *in_ECX = uVar4 + 1;\n                return uVar1;\n            }\n            uVar1 = *(uVar3 * 8 + 0xc32f54) + uVar4;\n        } while ((uVar1 == uVar4) && (uVar4 = uVar4 + 1,  uVar4 <= in_EDX));\n        if (uVar4 <= in_EDX) {\n            *arg_8h = uVar1;\n            do {\n                uVar3 = uVar1;\n                uVar1 = uVar3 + 1;\n                uVar4 = uVar4 + 1;\n                if ((in_EDX < uVar4) ||\n                   (uVar2 = *((*(uVar4 / 0x80 + 0xc43b40) * 0x80 + uVar4 % 0x80) * 2 + 0xc35840), \n                   *(uVar2 * 8 + 0xc32f53) != '\\0')) break;\n            } while (*(uVar2 * 8 + 0xc32f54) + uVar4 == uVar1);\n            *in_ECX = uVar4;\n            *arg_ch = uVar3;\n            return 0;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 488
    },
    "00c1e541": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1e541(uint32_t *arg_8h, uint32_t *arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    uint16_t uVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    int16_t **in_ECX;\n    uint *in_EDX;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    int16_t *piVar9;\n    uint var_50h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    piVar5 = *in_ECX;\n    piVar9 = piVar5 + 1;\n    iVar3 = *piVar9;\n    if (iVar3 != 0) {\n        iVar7 = 0;\n        *in_EDX = 0;\n        if (iVar3 != 0x7b) {\ncode_r0x00c1e5bb:\n            *in_ECX = piVar9;\n            var_ch = 0xa9;\n            do {\n                var_4h = &var_50h;\n                iVar6 = var_ch + iVar7 >> 1;\n                puVar8 = *(iVar6 * 6 + 0xc48f80) + 0xc48a20;\n                do {\n                    if ((*var_4h == 0) && (*puVar8 == 0)) goto code_r0x00c1e63c;\n                    uVar4 = *var_4h;\n                    var_4h = var_4h + 2;\n                    uVar2 = *puVar8;\n                    puVar8 = puVar8 + 1;\n                } while (uVar4 == uVar2);\n                iVar1 = (uVar2 < uVar4) * 2;\n                if (iVar1 == 1) {\ncode_r0x00c1e63c:\n                    *arg_8h = *(iVar6 * 6 + 0xc48f82);\n                    *arg_ch = *(iVar6 * 6 + 0xc48f84);\n                    return 1;\n                }\n                if (0 < iVar1 + -1) {\n                    iVar7 = iVar6 + 1;\n                    iVar6 = var_ch;\n                }\n                var_ch = iVar6;\n            } while (iVar7 < var_ch);\n            *arg_10h = 0x2f;\n            goto code_r0x00c1e59d;\n        }\n        if (piVar5[2] == 0x5e) {\n            *in_EDX = 1;\n            piVar9 = piVar5 + 2;\n        }\n        iVar6 = 0;\n        do {\n            piVar9 = piVar9 + 1;\n            iVar3 = *piVar9;\n            if (iVar3 == 0) break;\n            if (iVar3 == 0x7d) {\n                *(&var_50h + iVar6 * 2) = 0;\n                goto code_r0x00c1e5bb;\n            }\n            *(&var_50h + iVar6 * 2) = iVar3;\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < 0x1f);\n    }\n    *arg_10h = 0x2e;\ncode_r0x00c1e59d:\n    *in_ECX = piVar9;\n    return 0;\n}\n",
        "token_count": 781
    },
    "00c1e7bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00c1e7bd(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint16_t *in_EDX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    uint16_t *puVar10;\n    uint16_t *puVar11;\n    uint16_t *puVar12;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar12 = *(arg_ch + 0x78) + *(*(arg_ch + 0xc) + in_ECX * 4) * 2;\n    if (arg_8h < 0) {\ncode_r0x00c1e7e0:\n        iVar3 = -1;\n    }\n    else {\n        puVar9 = in_EDX;\n        if (arg_10h == 0) {\n            if (0 < arg_8h) {\n                do {\n                    arg_8h = arg_8h + -1;\n                    if (*(arg_ch + 0x7c) <= puVar9) {\n                        return -2;\n                    }\n                    uVar1 = *puVar12;\n                    puVar12 = puVar12 + 1;\n                    uVar2 = *puVar9;\n                    puVar9 = puVar9 + 1;\n                    if (uVar1 != uVar2) goto code_r0x00c1e7e0;\n                } while (0 < arg_8h);\n            }\n        }\n        else if (*(arg_ch + 0x50) == 0) {\n            if (0 < arg_8h) {\n                iVar3 = arg_8h;\n                do {\n                    iVar3 = iVar3 + -1;\n                    if (*(arg_ch + 0x7c) <= puVar9) {\n                        return -2;\n                    }\n                    arg_8h = *((puVar12 - in_EDX) + puVar9);\n                    uVar5 = *puVar9;\n                    if (arg_8h < 0x100) {\n                        arg_8h = *(*(arg_ch + 0x3c) + arg_8h);\n                    }\n                    if (uVar5 < 0x100) {\n                        uVar5 = *(*(arg_ch + 0x3c) + uVar5);\n                    }\n                    if (arg_8h != uVar5) goto code_r0x00c1e7e0;\n                    puVar9 = puVar9 + 1;\n                } while (0 < iVar3);\n            }\n        }\n        else if (puVar12 < puVar12 + arg_8h) {\n            puVar8 = in_EDX;\n            puVar10 = puVar12;\n            do {\n                if (*(arg_ch + 0x7c) <= puVar8) {\n                    return -2;\n                }\n                uVar5 = *puVar8;\n                puVar9 = puVar8 + 1;\n                if ((uVar5 & 0xfc00) == 0xd800) {\n                    uVar5 = ((uVar5 & 0x3ff) << 10 | *puVar9 & 0x3ff) + 0x10000;\n                    puVar9 = puVar8 + 2;\n                }\n                uVar7 = *puVar10;\n                puVar11 = puVar10 + 1;\n                if ((uVar7 & 0xfc00) == 0xd800) {\n                    uVar7 = ((uVar7 & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n                    puVar11 = puVar10 + 2;\n                }\n                uVar6 = *((*(uVar7 / 0x80 + 0xc43b40) * 0x80 + uVar7 % 0x80) * 2 + 0xc35840);\n                if ((uVar5 != uVar7) && (uVar5 != *(uVar6 * 8 + 0xc32f54) + uVar7)) {\n                    puVar4 = *(uVar6 * 8 + 0xc32f53) * 4 + 0xc345d0;\n                    do {\n                        uVar7 = *puVar4;\n                        if (uVar5 < uVar7) goto code_r0x00c1e7e0;\n                        puVar4 = puVar4 + 1;\n                    } while (uVar5 != uVar7);\n                }\n                puVar8 = puVar9;\n                puVar10 = puVar11;\n            } while (puVar11 < puVar12 + arg_8h);\n        }\n        iVar3 = puVar9 - in_EDX >> 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 1120
    },
    "00c1ea2d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1ea2d(uint16_t *arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    int32_t in_ECX;\n    uint32_t uVar1;\n    int32_t in_EDX;\n    uint16_t *puVar2;\n    uint uVar3;\n    \n    uVar3 = 2;\n    puVar2 = in_ECX + -2;\n    if (arg_10h == 0) {\n        uVar1 = *puVar2;\n    }\n    else {\n        if ((*puVar2 & 0xfc00) == 0xdc00) {\n            puVar2 = in_ECX + -4;\n        }\n        uVar1 = *puVar2;\n        if ((uVar1 & 0xfc00) == 0xd800) {\n            uVar1 = ((uVar1 & 0x3ff) << 10 | puVar2[1] & 0x3ff) + 0x10000;\n        }\n    }\n    if (in_EDX == 2) {\n        if (uVar1 == 10) {\ncode_r0x00c1eac8:\n            if ((puVar2 <= arg_8h) || (puVar2[-1] != 0xd)) {\n                uVar3 = 1;\n            }\n            *arg_ch = uVar3;\n            return 1;\n        }\n        if (uVar1 == 0xd) {\n            *arg_ch = 1;\n            return 1;\n        }\n    }\n    else {\n        if (uVar1 == 10) goto code_r0x00c1eac8;\n        if ((10 < uVar1) && (((uVar1 < 0xe || (uVar1 == 0x85)) || (uVar1 - 0x2028 < 2)))) {\n            *arg_ch = 1;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 436
    },
    "00b9322f": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b9322f(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *param_1;\n    if (0 < uVar1) {\n        *param_1 = uVar1 >> 0x10 & 0xffU | (uVar1 & 0xff) << 0x10 | uVar1 & 0xff00;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00be9b50": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00be9b50(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    uint uVar4;\n    uint var_4h;\n    \n    fcn.00beae57(*in_ECX, 1);\n    pcVar1 = _sym.imp.USER32.dll_MapVirtualKeyW;\n    iVar3 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(0x25, 0);\n    pcVar2 = _sym.imp.USER32.dll_PostMessageW;\n    if (arg_8h < 0) {\n        (*_sym.imp.USER32.dll_PostMessageW)(*in_ECX, 0x100, 0x25);\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        iVar3 = (*pcVar1)(0x25, 0);\n        uVar4 = 0x25;\n    }\n    else {\n        (*_sym.imp.USER32.dll_PostMessageW)(*in_ECX, 0x100, 0x27, iVar3 << 0x10 | 1);\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        iVar3 = (*pcVar1)(0x25, 0);\n        uVar4 = 0x27;\n    }\n    (*pcVar2)(*in_ECX, 0x101, uVar4, iVar3 << 0x10 | 0xc0000001);\n    (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    fcn.00beae57(*in_ECX, 0);\n    return 1;\n}\n",
        "token_count": 365
    },
    "00bf8bdd": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf8bdd(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    if (arg_ch != 0) {\n        uVar2 = *in_ECX;\n        uVar3 = *(in_ECX + 2);\n        if (0 < arg_ch) {\n            iVar1 = 0;\n            do {\n                uVar2 = (*(iVar1 + arg_8h) + uVar2) % 0xfff1;\n                uVar3 = (uVar3 + uVar2) % 0xfff1;\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < arg_ch);\n        }\n        *in_ECX = uVar3 * 0x10000 + uVar2;\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00c06306": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c06306(uint arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00b99c9c();\n    if (uVar1 < 0x65) {\n        uVar1 = (uVar1 * 0xffff) / 100 & 0xffff;\n        (*_sym.imp.WINMM.dll_waveOutSetVolume)(0, uVar1 << 0x10 | uVar1);\n    }\n    else {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.00be6aa3(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 167
    },
    "00c1bfb7": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1bfb7(uint arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.00b925db(arg_8h);\n    iVar2 = **(*0xc56824 + iVar2 * 4);\n    iVar1 = *(iVar2 + 0x84);\n    if (iVar1 == -1) {\n        uVar3 = (**(iVar2 + 8))(arg_8h, 0x20, arg_ch, arg_14h << 0x10 | arg_10h & 0xffff);\n    }\n    else {\n        fcn.00c1a779(iVar1);\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 197
    },
    "00c1cd6c": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1cd6c(uint hDlg, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(hDlg, 0xffffffec);\n    if ((uVar1 & 0x10000) == 0) {\n        uVar2 = (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x84, 0, arg_10h << 0x10 | arg_ch & 0xffff);\n    }\n    else {\n        uVar2 = 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 157
    },
    "00c1da9a": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1da9a(uint hDlg, uint32_t wParam, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t arg_10h_00;\n    uint arg_8h;\n    \n    iVar1 = fcn.00b92612(hDlg);\n    iVar1 = **(*0xc56810 + iVar1 * 4);\n    uVar2 = wParam & 0xfff0;\n    if (uVar2 == 0xf000) {\n        *(iVar1 + 0x184) = 1;\n    }\n    else {\n        if (uVar2 == 0xf020) {\n            fcn.00c163d0(0xfffffffc, iVar1, 0, 0);\n            fcn.00c1af89();\n        }\n        else {\n            if (uVar2 == 0xf030) {\n                arg_10h_00 = 0;\n                arg_8h = 0xfffffffa;\n            }\n            else {\n                if (uVar2 == 0xf060) {\n                    fcn.00c163d0(0xfffffffd, iVar1, 0, 0);\n                    return;\n                }\n                arg_10h_00 = uVar2 - 0xf120;\n                if (arg_10h_00 != 0) goto code_r0x00c1db29;\n                arg_8h = 0xfffffffb;\n            }\n            fcn.00c163d0(arg_8h, iVar1, arg_10h_00, arg_10h_00);\n        }\n        if ((*0xc567c0 & 1) != 0) {\n            return;\n        }\n    }\ncode_r0x00c1db29:\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x112, wParam, arg_14h << 0x10 | arg_10h & 0xffff);\n    return;\n}\n",
        "token_count": 447
    },
    "00bf57ad": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00bf57f5)\n\nvoid __cdecl fcn.00bf57ad(int32_t arg_8h)\n\n{\n    ushort uVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    ushort *in_EDX;\n    uint *puVar3;\n    uint *puVar4;\n    ushort *puVar5;\n    uint var_2ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puVar3 = L\"0123456789ABCDEF\";\n    puVar4 = &var_2ch;\n    var_4h = in_ECX;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar3;\n    *in_EDX = 0x30;\n    in_EDX[1] = 0x78;\n    iVar2 = arg_8h + -1;\n    if (-1 < iVar2) {\n        puVar5 = in_EDX + iVar2 * 2 + 2;\n        do {\n            uVar1 = *(&var_2ch + (*(iVar2 + var_4h) / 0x10) * 2);\n            puVar5[1] = *(&var_2ch + (*(iVar2 + var_4h) % 0x10) * 2);\n            *puVar5 = uVar1;\n            puVar5 = puVar5 + -2;\n            iVar2 = iVar2 + -1;\n        } while (-1 < iVar2);\n    }\n    in_EDX[arg_8h * 2 + 2] = 0;\n    return;\n}\n",
        "token_count": 415
    },
    "00bb084d": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00bb084d(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    uint8_t *in_EDX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar3 = 0;\n    puVar2 = NULL;\n    if ((in_ECX == NULL) || (arg_ch == NULL)) {\n        return -2;\n    }\n    if ((in_EDX != NULL) && ((*in_EDX & 1) != 0)) {\n        puVar2 = *(in_EDX + 4);\n    }\n    if (*in_ECX != 0x50435245) {\n        return ((*in_ECX != 0x45524350) - 1 & 0xffffffe7) - 4;\n    }\n    uVar1 = in_ECX[3];\n    if ((uVar1 & 2) == 0) {\n        return -0x1c;\n    }\n    if (0x19 < arg_8h) {\n        return -3;\n    }\n    // switch table (26 cases) at 0xbb0931\n    switch(*(arg_8h * 4 + 0xbb0931)) {\n    case 0xbb08a4:\n        uVar1 = *(in_ECX + 0x1e);\n        break;\n    case 0xbb08b6:\n        *arg_ch = 0xc34710;\n        return 0;\n    case 0xbb08c8:\n        uVar1 = in_ECX[2] & 0x27ff7a7f;\n        break;\n    case 0xbb08d2:\n        uVar1 = in_ECX[1];\n        break;\n    case 0xbb08d7:\n        goto code_r0x00be61a7;\n    case 0xbb08df:\n        uVar1 = *(in_ECX + 8);\n        break;\n    case 0xbb08e5:\n        uVar1 = *(in_ECX + 9);\n        break;\n    case 0xbb08eb:\n        uVar1 = *(in_ECX + 0x26);\n        break;\n    case 0xbb08f1:\n        uVar1 = in_ECX + *(in_ECX + 0x22) * 2;\n        break;\n    case 0xbb08fa:\n        uVar1 = ~(uVar1 >> 9);\n        goto code_r0x00be626d;\n    case 0xbb0904:\n        uVar1 = uVar1 >> 10;\n        goto code_r0x00be626d;\n    case 0xbb090c:\n        uVar1 = uVar1 >> 0xb;\n        goto code_r0x00be626d;\n    case 0xbb0914:\n        uVar1 = *(in_ECX + 7);\n        break;\n    case 0xbb091a:\n        uVar1 = uVar1 >> 0xf;\ncode_r0x00be626d:\n        uVar1 = uVar1 & 1;\n        break;\n    case 0xbe6198:\n        if (puVar2 != NULL) {\n            uVar3 = *puVar2;\n        }\n        goto code_r0x00be61a7;\n    case 0xbe61ae:\n        if ((uVar1 & 0x10) == 0) {\n            uVar1 = uVar1 >> 8 | 0xfffffffe;\n        }\n        else {\n            uVar1 = *(in_ECX + 6);\n        }\n        break;\n    case 0xbe61c9:\n        if ((uVar1 & 0x10) != 0) {\n            uVar3 = *(in_ECX + 6);\n        }\n        goto code_r0x00be61a7;\n    case 0xbe61d6:\n        if ((uVar1 & 0x10) == 0) {\n            uVar1 = uVar1 >> 7 & 2;\n        }\n        else {\n            uVar1 = 1;\n        }\n        break;\n    case 0xbe61f0:\n        if ((puVar2 != NULL) && ((*(puVar2 + 1) & 1) != 0)) {\n            uVar3 = *(in_EDX + 4) + 8;\n        }\n        goto code_r0x00be61a7;\n    case 0xbe6205:\n        if ((puVar2 != NULL) && ((*(puVar2 + 1) & 2) != 0)) {\n            uVar1 = puVar2[10];\n            break;\n        }\ncode_r0x00be621a:\n        uVar1 = 0xffffffff;\n        break;\n    case 0xbe6222:\n        if (((in_EDX != NULL) && ((*in_EDX & 0x40) != 0)) && (*(in_EDX + 0x1c) != 0)) {\n            uVar3 = 1;\n        }\n        goto code_r0x00be61a7;\n    case 0xbe6247:\n        if ((uVar1 & 0x40) != 0) {\n            uVar1 = *(in_ECX + 0x1a);\n            break;\n        }\n        goto code_r0x00be621a;\n    case 0xbe6257:\n        if ((uVar1 & 0x40) != 0) {\n            uVar3 = *(in_ECX + 0x1a);\n        }\ncode_r0x00be61a7:\n        *arg_ch = uVar3;\n        return 0;\n    case 0xbe6267:\n        uVar1 = (uVar1 & 0xff) >> 6;\n        goto code_r0x00be626d;\n    case 0xbe6275:\n        if ((uVar1 & 0x2000) == 0) {\n            return -0x21;\n        }\n        uVar1 = in_ECX[4];\n        break;\n    case 0xbe628f:\n        if ((uVar1 & 0x4000) == 0) {\n            return -0x21;\n        }\n        uVar1 = in_ECX[5];\n    }\n    *arg_ch = uVar1;\n    return 0;\n}\n",
        "token_count": 1400
    },
    "00be8c93": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.00be8c93(uint lpszUsername, uint lpszDomain, uint lpszPassword, uint arg_14h, uint noname_4, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_LogonUserW)\n                      (lpszUsername, lpszDomain, lpszPassword, (arg_14h & 2U | 4) >> 1, 0, arg_1ch);\n    return iVar1 != 0;\n}\n",
        "token_count": 120
    },
    "00b99458": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b99458(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_1[3] != 5) {\n        fcn.00b99a20();\n        param_1[3] = 5;\n        iVar1 = fcn.00bb0ff6(4);\n        if (iVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.00b9935c();\n        }\n        *param_1 = uVar2;\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00ba8673": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint16_t * __fastcall fcn.00ba8673(uint16_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    do {\n        uVar1 = *param_1;\n        if (uVar1 < 4) {\n            return param_1;\n        }\n        if (uVar1 < 6) {\n            if (param_2 == 0) {\n                return param_1;\n            }\n        }\n        else if (uVar1 != 0x76) {\n            if (uVar1 < 0x7e) {\n                return param_1;\n            }\n            if (uVar1 < 0x81) {\n                if (param_2 == 0) {\n                    return param_1;\n                }\n                do {\n                    param_1 = param_1 + param_1[1];\n                } while (*param_1 == 0x77);\n                uVar1 = *param_1;\n            }\n            else {\n                if (uVar1 < 0x8d) {\n                    return param_1;\n                }\n                if (0x91 < uVar1) {\n                    return param_1;\n                }\n            }\n        }\n        param_1 = param_1 + *(uVar1 + 0xc35750);\n    } while( true );\n}\n",
        "token_count": 290
    },
    "00bc01d7": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bc01d7(uint param_1, int32_t param_2)\n\n{\n    float10 fVar1;\n    char cVar2;\n    uint8_t uVar3;\n    ushort uVar4;\n    int32_t unaff_EBP;\n    float10 in_ST0;\n    float10 in_ST1;\n    uint var_a2h;\n    uint var_94h;\n    uint var_90h;\n    \n    if (*(param_2 + 0xe) == '\\x05') {\n        uVar4 = CONCAT31(*(unaff_EBP + -0xa4) >> 8 & 0xfe | 2, 0x3f);\n    }\n    else {\n        uVar4 = 0x133f;\n    }\n    *(unaff_EBP + -0xa2) = uVar4;\n    fVar1 = 0;\n    *(unaff_EBP + -0x94) = param_2;\n    *(unaff_EBP + -0xa0) = (in_ST0 < fVar1) << 9 | (in_ST0 != fVar1) << 10 | (in_ST0 == fVar1) << 0xe;\n    *(unaff_EBP + -0x90) = 0;\n    fVar1 = 0;\n    *(unaff_EBP + -0xa0) = (in_ST1 < fVar1) << 9 | (in_ST1 != fVar1) << 10 | (in_ST1 == fVar1) << 0xe;\n    uVar3 = (*(unaff_EBP + -0x9f) << 1) >> 1;\n    cVar2 = (*(unaff_EBP + -0x9f) << 1) >> 1;\n    // WARNING: Could not recover jumptable at 0x00bc0261. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(param_2 + (*(((cVar2 << 1 | cVar2 < '\\0') & 0xf) + 0xc27c4c) |\n                  *(((uVar3 & 7) << 1 | uVar3 < '\\0') + 0xc27c4c) << 2) + 0x10))();\n    return;\n}\n",
        "token_count": 506
    },
    "00be6615": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00be6615(uint *param_1)\n\n{\n    if (param_1[3] == 5) {\n        return *param_1;\n    }\n    return 0;\n}\n",
        "token_count": 47
    },
    "00be677b": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00be677b(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *arg_8h_00;\n    int32_t *extraout_ECX;\n    uint unaff_ESI;\n    uint uVar4;\n    int32_t unaff_EDI;\n    int32_t aiStack284 [64];\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_18h = 0;\n    var_10h = 0;\n    var_ch = 1;\n    var_4h = 0;\n    iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 8);\n    iVar2 = var_4h;\n    do {\n        var_4h = iVar2;\n        if (iVar1 != 0x4e) {\n            if ((*arg_10h)[3] == 0x5) {\n                arg_8h_00 = **arg_10h;\n            }\n            else {\n                arg_8h_00 = NULL;\n            }\n            iVar3 = 0;\n            *(*arg_8h_00 + 0x210) = 0;\n            if (0 < iVar2) {\n                do {\n                    unaff_EDI = aiStack284[iVar3];\n                    fcn.00b9928c(unaff_EDI);\n                    iVar3 = iVar3 + 1;\n                    arg_8h_00 = extraout_ECX;\n                } while (iVar3 < iVar2);\n            }\n            iVar2 = fcn.00b98ea0(arg_8h_00, arg_14h, 0);\n            *arg_10h = iVar2;\n            if (iVar2 == 0) {\ncode_r0x00be689e:\n                fcn.00bfa0b5(unaff_EDI, unaff_ESI);\ncode_r0x00be68a5:\n                uVar4 = 0xffffffff;\n            }\n            else {\n                uVar4 = 0;\n            }\n            fcn.00b99a20();\n            return uVar4;\n        }\n        *arg_ch = *arg_ch + 1;\n        unaff_EDI = arg_8h;\n        iVar2 = fcn.00b9a000(arg_8h, arg_ch, &var_18h, 0xffffffff);\n        if (iVar2 < 0) goto code_r0x00be68a5;\n        iVar2 = fcn.00b99c9c();\n        if ((iVar2 < 0) || (*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) != 0x4f)) {\n            unaff_EDI = 0x7b;\n            goto code_r0x00be689e;\n        }\n        *arg_ch = *arg_ch + 1;\n        iVar3 = fcn.00b99c9c();\n        iVar2 = *(arg_8h + 4);\n        aiStack284[var_4h] = iVar3;\n        var_4h = var_4h + 1;\n        iVar1 = *(*(iVar2 + *arg_ch * 4) + 8);\n        iVar2 = var_4h;\n    } while( true );\n}\n",
        "token_count": 769
    },
    "00bfa5bd": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfa5bd(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    code *pcVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uStack60;\n    uchar auStack36 [12];\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t *piStack12;\n    \n    iVar6 = **(arg_8h + 4);\n    fcn.00b99997();\n    puVar1 = *(iVar6 + 8);\n    uStack20 = puVar1[1];\n    uVar2 = *puVar1;\n    uStack16 = puVar1[2];\n    piStack12 = puVar1[3];\n    *piStack12 = *piStack12 + 1;\n    iVar6 = *(*(arg_8h + 4) + 4);\n    uStack24 = uVar2;\n    fcn.00b99997();\n    puVar1 = *(iVar6 + 8);\n    uVar7 = *puVar1;\n    uVar3 = puVar1[1];\n    *puVar1[3] = *puVar1[3] + 1;\n    fcn.00b97faf();\n    (*_sym.imp.USER32.dll_CharLowerBuffW)(uVar7, uVar3);\n    cVar5 = fcn.00bb0d27();\n    if (cVar5 != '\\0') {\n        fcn.00b97d2c(L\"closed\");\n    }\n    cVar5 = fcn.00bb0d27();\n    if (cVar5 == '\\0') {\n        cVar5 = fcn.00bb0d27();\n        if (cVar5 != '\\0') goto code_r0x00bfa682;\n    }\n    else {\ncode_r0x00bfa682:\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(uVar2);\n        if (iVar6 == 5) {\n            fcn.00b97f41(L\"open \");\n            fcn.00b97c8e(auStack36);\n            fcn.00b97e0b(L\" type cdaudio alias cd wait\");\n            pcVar4 = _sym.imp.WINMM.dll_mciSendStringW;\n            iVar6 = (*_sym.imp.WINMM.dll_mciSendStringW)(uStack60, 0, 0, 0);\n            if (iVar6 == 0) {\n                fcn.00b97d2c(L\"set cd door \");\n                fcn.00b97c8e(&stack0xffffffbc);\n                fcn.00b97e0b(L\" wait\");\n                iVar6 = (*pcVar4)(uStack60, 0, 0, 0);\n                if (iVar6 != 0) {\n                    fcn.00b99a20();\n                    arg_ch[3] = 1;\n                    *arg_ch = 0;\n                }\n                fcn.00b97d2c(L\"close cd wait\");\n                (*pcVar4)(uVar7, 0, 0, 0);\n            }\n            else {\n                fcn.00b99a20();\n                arg_ch[3] = 1;\n                *arg_ch = 0;\n            }\n            fcn.00b95a64();\n            goto code_r0x00bfa766;\n        }\n    }\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\ncode_r0x00bfa766:\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 842
    },
    "00bfe5ce": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfe5ce(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **arg_8h_00;\n    int32_t iVar8;\n    int32_t *piVar9;\n    uint arg_8h_01;\n    int32_t iVar10;\n    int32_t *piStack84;\n    int32_t iStack80;\n    int32_t iStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar auStack56 [12];\n    uint uStack44;\n    \n    fcn.00b977c7();\n    fcn.00b99997();\n    fcn.00b948ae();\n    uVar2 = fcn.00bb0ff6(0xfffe);\n    fcn.00b9538e(uVar2);\n    *(iStack68 + 2) = 10;\n    uVar2 = 0x7fff;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionNamesW)(iStack68, 0x7fff, uStack44);\n    if ((iVar3 == 0) || (*(iStack68 + 2) == 10)) {\n        fcn.00be6aa3(1, 0);\n        iStack80 = iStack68;\n    }\n    else {\n        piStack84 = fcn.00bb0ff6(0xc);\n        iVar1 = iStack80;\n        iVar7 = 0;\n        if (piStack84 == NULL) {\n            piStack84 = NULL;\n        }\n        else {\n            *piStack84 = 0;\n            piStack84[1] = 0;\n            piStack84[2] = 0;\n        }\n        iVar4 = 0;\n        *piStack84 = 0;\n        iVar6 = 0;\n        iVar8 = 0;\n        piVar5 = piStack84;\n        piVar9 = piStack84;\n        iVar10 = iVar3;\n        if (0 < iVar3) {\n            do {\n                if (*(iVar1 + iVar6 * 2) == 0) {\n                    iVar4 = iVar4 + 1;\n                    piVar5[1] = iVar6;\n                    *(iVar1 + iVar6 * 2) = 0xd;\n                    iVar3 = iVar10;\n                    piVar5 = fcn.00bb0ff6(0xc);\n                    if (piVar5 == NULL) {\n                        piVar5 = NULL;\n                    }\n                    else {\n                        *piVar5 = 0;\n                        piVar5[1] = 0;\n                        piVar5[2] = 0;\n                    }\n                    piVar9[2] = piVar5;\n                    *piVar5 = iVar6 + 1;\n                    iVar8 = iVar4;\n                    piVar9 = piVar5;\n                    iVar10 = iVar3;\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < iVar3);\n        }\n        piVar5 = piStack84;\n        fcn.00b9942e();\n        if (arg_ch[3] == 5) {\n            arg_8h_01 = *arg_ch;\n        }\n        else {\n            arg_8h_01 = 0;\n        }\n        fcn.00b991b0(arg_8h_01, 1);\n        uStack64 = 0;\n        uStack60 = 1;\n        iStack72 = iVar8;\n        fcn.00b99040(arg_8h_01, &iStack72, 1);\n        fcn.00b99a20();\n        fcn.00b977c7();\n        if (0 < iVar8) {\n            do {\n                fcn.00b97eec();\n                fcn.00b978ad(iStack80, *piVar5, piVar5[1] - *piVar5);\n                arg_8h_00 = &piStack84;\n                fcn.00b993ea(arg_8h_00);\n                iVar7 = iVar7 + 1;\n                fcn.00b99040(uVar2, auStack56, 1);\n                fcn.00b99a20();\n                piVar9 = piVar5[2];\n                fcn.00bb106c(piVar5);\n                piVar5 = piVar9;\n            } while (iVar7 < arg_8h_00);\n        }\n        fcn.00b95a64();\n    }\n    *piStack84 = *piStack84 + -1;\n    if (*piStack84 == 0) {\n        fcn.00bb106c(piStack84);\n        fcn.00bb106c(iStack80);\n    }\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1096
    },
    "00bfea02": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfea02(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int16_t *piVar6;\n    int16_t iVar7;\n    uint *puVar8;\n    uint *puVar9;\n    ulong uVar10;\n    uint var_20h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    fcn.00b977c7();\n    fcn.00b99997();\n    fcn.00b948ae();\n    ppiVar1 = *(*(arg_8h + 4) + 8);\n    if (((ppiVar1[3] != 0x5) || (*(**ppiVar1 + 0x10c) != 2)) || (iVar3 = fcn.00b98e6b(2),  iVar3 != 2)) {\n        if (ppiVar1[3] == 0x4) {\n            fcn.00b99997();\n            iVar2 = (ppiVar1[2][1] + 2) * 2;\n            puVar5 = fcn.00bb0ff6(-(iVar2 >> 0x20 != 0) | iVar2);\n            iVar3 = *(*(arg_8h + 4) + 8);\n            fcn.00b99997();\n            for (piVar6 = **(iVar3 + 8); puVar8 = puVar5,  *piVar6 == 10; piVar6 = piVar6 + 1) {\n            }\n            do {\n                iVar7 = *piVar6;\n                if (iVar7 == 10) {\n                    iVar7 = 0;\n                }\n                else if (iVar7 == 0) goto code_r0x00bfec51;\n                *puVar8 = iVar7;\n                puVar8 = puVar8 + 2;\n                piVar6 = piVar6 + 1;\n            } while( true );\n        }\n        fcn.00be6aa3(1, 0);\n        goto code_r0x00bfecae;\n    }\n    var_ch = 1;\n    if ((3 < *(arg_8h + 8)) && (var_ch = fcn.00b99c9c(),  var_ch < 0)) {\n        var_ch = 1;\n    }\n    var_10h = 0;\n    puVar8 = *(*(arg_8h + 4) + 8);\n    if (puVar8[3] == 5) {\n        var_4h = *puVar8;\n    }\n    else {\n        var_4h = 0;\n    }\n    while (uVar10 = fcn.00b98e6b(1),  uVar10 >> 0x20 < uVar10) {\n        iVar3 = fcn.00b98ea0(var_4h, 1, 2);\n        fcn.00b99997();\n        iVar3 = *(*(iVar3 + 8) + 4);\n        iVar4 = fcn.00b98ea0(var_4h, 1, 2);\n        fcn.00b99997();\n        var_10h = var_10h + 2 + *(*(iVar4 + 8) + 4) + iVar3;\n    }\n    iVar2 = (var_10h + 1) * 2;\n    puVar5 = fcn.00bb0ff6(-(iVar2 >> 0x20 != 0) | iVar2);\n    puVar8 = puVar5;\n    while( true ) {\n        uVar10 = fcn.00b98e6b(1);\n        if (uVar10 <= var_ch) break;\n        iVar3 = fcn.00b98ea0(uVar10 >> 0x20, 1, 2);\n        fcn.00b99997();\n        for (piVar6 = **(iVar3 + 8); *piVar6 != 0; piVar6 = piVar6 + 1) {\n            *puVar8 = *piVar6;\n            puVar8 = puVar8 + 2;\n        }\n        *puVar8 = 0x3d;\n        iVar3 = fcn.00b98ea0(var_4h, 1, 2);\n        fcn.00b99997();\n        piVar6 = **(iVar3 + 8);\n        while( true ) {\n            puVar9 = puVar8 + 2;\n            if (*piVar6 == 0) break;\n            *puVar9 = *piVar6;\n            piVar6 = piVar6 + 1;\n            puVar8 = puVar9;\n        }\n        *puVar9 = 0;\n        puVar8 = puVar8 + 1;\n        var_ch = var_ch + 1;\n    }\n    *puVar8 = 0;\ncode_r0x00bfec55:\n    iVar3 = *(*(arg_8h + 4) + 4);\n    fcn.00b99997();\n    iVar3 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileSectionW)(**(iVar3 + 8), puVar5, var_20h);\n    if (iVar3 != 0) {\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(0, 0, 0, var_20h);\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    fcn.00bb106c(puVar5);\ncode_r0x00bfecae:\n    fcn.00b95a64();\n    return 0;\ncode_r0x00bfec51:\n    *puVar8 = 0;\n    goto code_r0x00bfec55;\n}\n",
        "token_count": 1359
    },
    "00c06bd4": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c06bd4(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    \n    puVar1 = **(arg_8h + 4);\n    if (puVar1[3] == 5) {\n        if (puVar1[3] == 5) {\n            uVar3 = *puVar1;\n        }\n        else {\n            uVar3 = 0;\n        }\n        iVar2 = fcn.00b98ea0(uVar3, 1, 1);\n        if (iVar2 != 0) {\n            iVar2 = fcn.00b99c9c();\n            if (iVar2 == 0x2b594d1) {\n                fcn.00b98ea0(uVar3, 1, 1);\n                uVar3 = fcn.00b99c9c();\n                iVar2 = (*_sym.imp.WSOCK32.dll_closesocket)();\n                if (iVar2 == 0) {\n                    fcn.00b99a20();\n                    arg_ch[3] = 1;\n                    *arg_ch = 1;\n                    return 0;\n                }\n                fcn.00b99a20();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n                arg_8h_00 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)(0);\n            }\n            else {\n                fcn.00b99a20();\n                *arg_ch = 0;\n                uVar3 = 0;\n                arg_ch[3] = 1;\n                arg_8h_00 = 0xfffffffc;\n            }\n            goto code_r0x00c06c99;\n        }\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n    }\n    else {\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n    }\n    uVar3 = 0;\n    *arg_ch = 0;\n    arg_8h_00 = 0xfffffffd;\ncode_r0x00c06c99:\n    fcn.00be6aa3(arg_8h_00, uVar3);\n    return 0;\n}\n",
        "token_count": 516
    },
    "00c0a6fb": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00c0a6fb(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    int32_t arg_8h_00;\n    int32_t *arg_ch_00;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t arg_ch_01;\n    uint *puVar6;\n    uint arg_8h_01;\n    uint var_11ch;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    arg_ch_00 = arg_ch;\n    arg_8h_00 = arg_8h;\n    iVar5 = *(arg_8h + 4);\n    *arg_ch = *arg_ch + 1;\n    piVar2 = *(iVar5 + *arg_ch * 4);\n    arg_8h = 0;\n    if ((*(piVar2 + 2) == 0) && (*piVar2 == 0x2c)) {\n        fcn.00c0ad0f(arg_8h_00, arg_ch, arg_10h);\n    }\n    else {\n        arg_ch = NULL;\n        var_10h = 0;\n        if ((*0xc57f10 & 1) == 0) {\n            *0xc57f10 = *0xc57f10 | 1;\n            fcn.00b99f3a(0xc1f910);\n            fcn.00bb2f80(0xbcb81e);\n        }\n        iVar5 = *(arg_8h_00 + 4);\n        var_1ch = 0x7f;\n        iVar1 = *(*(iVar5 + *arg_ch_00 * 4) + 8);\n        while (iVar1 == 0x33) {\n            var_ch = **(iVar5 + *arg_ch_00 * 4);\n            iVar5 = arg_10h;\n            iVar4 = fcn.00b9859a(var_ch, &var_10h, arg_10h);\n            if (iVar4 != 0) {\n                if ((var_10h & 0x100) == 0) {\n                    arg_8h_01 = 0xa4;\n                }\n                else {\n                    arg_8h_01 = 0xae;\n                }\n                goto code_r0x00c0a8fb;\n            }\n            var_8h = fcn.00b98620(var_ch, 0xc574c8, 0x100, arg_10h);\n            *arg_ch_00 = *arg_ch_00 + 1;\n            if (*(*(*(arg_8h_00 + 4) + *arg_ch_00 * 4) + 8) == 0x4e) {\n                iVar5 = fcn.00b9d0dc(arg_8h_00, arg_ch_00, var_8h, &var_11ch, &arg_ch);\n                if (iVar5 < 0) {\n                    return;\n                }\n                arg_8h = arg_ch;\n            }\n            iVar5 = *arg_ch_00;\n            iVar4 = *(arg_8h_00 + 4);\n            if (*(*(iVar4 + iVar5 * 4) + 8) != 0x41) {\n                iVar5 = *(*(*(arg_8h_00 + 4) + iVar5 * 4) + 10);\n                arg_8h_01 = 0x80;\n                goto code_r0x00c0a8fb;\n            }\n            arg_ch_01 = iVar5 + 1;\n            *arg_ch_00 = arg_ch_01;\n            iVar4 = *(iVar4 + arg_ch_01 * 4);\n            var_18h = *(iVar4 + 10);\n            if (*(iVar4 + 8) == 0x4e) {\n                if (*(var_8h + 0xc) != 5) {\n                    *arg_ch_00 = iVar5;\n                    iVar5 = fcn.00c0aa66(arg_8h_00, arg_ch_00, var_8h, &var_11ch, &arg_ch);\n                    if (iVar5 < 0) {\n                        return;\n                    }\n                    arg_8h = arg_ch;\n                }\n                iVar5 = fcn.00b9d060(arg_8h_00, *arg_ch_00, var_ch);\n                if (iVar5 < 0) {\n                    return;\n                }\n                if (0 < arg_8h) {\n                    puVar6 = &var_11ch;\n                    for (iVar5 = arg_8h; iVar5 != 0; iVar5 = iVar5 + -1) {\n                        *puVar6 = 0;\n                        puVar6 = puVar6 + 1;\n                    }\n                }\n                cVar3 = fcn.00b9cedd(arg_8h_00, arg_ch_00, var_8h, &var_11ch, 1);\n                if (cVar3 == '\\0') {\n                    return;\n                }\n            }\n            else {\n                iVar5 = var_ch;\n                iVar4 = fcn.00b9d060(arg_8h_00, arg_ch_01, var_ch);\n                if (iVar4 < 0) {\n                    return;\n                }\n                iVar4 = fcn.00b9a000(arg_8h_00, arg_ch_00, var_8h, 0xffffffff);\n                if (iVar4 < 0) {\n                    arg_8h_01 = 0x6e;\n                    goto code_r0x00c0a8fb;\n                }\n            }\n            iVar4 = *arg_ch_00;\n            iVar5 = *(arg_8h_00 + 4);\n            iVar1 = *(*(iVar5 + iVar4 * 4) + 8);\n            if (iVar1 == var_1ch) {\n                return;\n            }\n            if (iVar1 != 0x40) {\n                iVar5 = *(*(*(arg_8h_00 + 4) + iVar4 * 4) + 10);\n                arg_8h_01 = 0x7f;\n                goto code_r0x00c0a8fb;\n            }\n            *arg_ch_00 = iVar4 + 1;\n            iVar1 = *(*(iVar5 + (iVar4 + 1) * 4) + 8);\n        }\n        iVar5 = *(*(*(arg_8h_00 + 4) + *arg_ch_00 * 4) + 10);\n        arg_8h_01 = 0x7f;\ncode_r0x00c0a8fb:\n        fcn.00bfa0b5(arg_8h_01, iVar5);\n    }\n    return;\n}\n",
        "token_count": 1556
    },
    "00c0a95d": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c0a95d(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    ulong uVar5;\n    uint uVar6;\n    int32_t var_34h;\n    int32_t var_2ch;\n    uint var_24h;\n    uint var_14h;\n    \n    iVar2 = *(arg_8h + 4);\n    iVar3 = *arg_ch;\n    *arg_ch = iVar3 + 1;\n    iVar2 = *(iVar2 + (iVar3 + 1) * 4);\n    if (*(iVar2 + 8) == 0x7f) {\n        while (*(in_ECX + 0x15c) != 0) {\n            uVar6 = fcn.00bafe18();\n            fcn.00bafe64(uVar6);\n            if ((var_34h == 4) || (var_34h == 5)) {\n                fcn.00b99a20();\n                fcn.00b99a20();\n                break;\n            }\n            *arg_10h = var_2ch + 1;\n            fcn.00bafdcf();\n            fcn.00b99a20();\n            fcn.00b99a20();\n        }\n        if (*(in_ECX + 0x15c) != 0) {\n            do {\n                while( true ) {\n                    do {\n                        iVar2 = *arg_10h;\n                        *arg_10h = iVar2 + 1;\n                        uVar5 = fcn.00b971c8(iVar2);\n                        if (uVar5 == 0) {\n                            return;\n                        }\n                        piVar4 = **(uVar5 + 4);\n                    } while ((*(piVar4 + 2) != 0) || (iVar2 = *piVar4,  iVar2 == 0x14));\n                    if (iVar2 != 0x15) break;\n                    if (extraout_ECX == 0) {\n                        return;\n                    }\n                }\n            } while (((iVar2 != 0x16) && ((iVar2 == 0x17 || (iVar2 != 0x18)))) || (extraout_ECX != 0));\n            *arg_10h = (uVar5 >> 0x20) + -1;\n            return;\n        }\n        iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 10);\n        uVar6 = 0xb5;\n    }\n    else {\n        iVar1 = *(iVar2 + 10);\n        uVar6 = 0x72;\n    }\n    fcn.00bfa0b5(uVar6, iVar1);\n    return;\n}\n",
        "token_count": 654
    },
    "00c0aa66": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0aa66(int32_t arg_8h, int32_t *arg_ch, int32_t **arg_10h, uint *arg_14h, int32_t *arg_18h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t *arg_8h_00;\n    int32_t *extraout_ECX;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 10);\n    uVar3 = fcn.00c0ab1f(0, arg_8h, *arg_ch, arg_18h);\n    iVar4 = 1;\n    *arg_14h = uVar3;\n    if (1 < *arg_18h) {\n        do {\n            uVar3 = fcn.00c0ab1f(iVar4, arg_8h, *arg_ch, 0);\n            arg_14h[iVar4] = uVar3;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < *arg_18h);\n    }\n    fcn.00b9942e();\n    if (arg_10h[3] == 0x5) {\n        arg_8h_00 = *arg_10h;\n    }\n    else {\n        arg_8h_00 = NULL;\n    }\n    iVar4 = 0;\n    *(*arg_8h_00 + 0x210) = 0;\n    if (0 < *arg_18h) {\n        do {\n            fcn.00b9928c(arg_14h[iVar4]);\n            iVar4 = iVar4 + 1;\n            arg_8h_00 = extraout_ECX;\n        } while (iVar4 < *arg_18h);\n    }\n    cVar2 = fcn.00b991b0(arg_8h_00, 0);\n    if (cVar2 == '\\0') {\n        fcn.00bfa0b5(0x82, iVar1);\n        uVar3 = 0xffffffff;\n    }\n    else {\n        *arg_ch = *arg_ch + 1;\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 521
    },
    "00c0ad0f": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nvoid __cdecl fcn.00c0ad0f(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint *var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    var_2ch = NULL;\n    var_1ch = 0;\n    fcn.00b99a20();\n    var_2ch = 0x1;\n    fcn.00b99a20();\n    var_1ch = 0;\n    *arg_ch = *arg_ch + 1;\n    iVar4 = *arg_ch;\n    iVar7 = *(arg_8h + 4);\n    var_8h = 0xb;\n    piVar5 = *(iVar7 + iVar4 * 4);\n    if ((*(piVar5 + 2) == 0) && (*piVar5 == 0x10)) {\n        *arg_ch = iVar4 + 1;\n        iVar1 = *(*(iVar7 + (iVar4 + 1) * 4) + 8);\n        if (iVar1 == 0x49) {\ncode_r0x00c0ad98:\n            var_8h = 0xb;\n        }\n        else if (iVar1 == 0x4a) {\n            var_8h = 0xc;\n        }\n        else {\n            if (iVar1 != 0x4c) {\n                *arg_ch = iVar4;\n                goto code_r0x00c0ad98;\n            }\n            fcn.00b99a20();\n            var_8h = 0xd;\n            var_1ch = 1;\n        }\n        *arg_ch = *arg_ch + 1;\n        piVar5 = *(*(arg_8h + 4) + *arg_ch * 4);\n        if (*(piVar5 + 2) != 5) goto code_r0x00c0aed8;\n        puVar2 = *piVar5;\n        fcn.00b99a20();\n        *arg_ch = *arg_ch + 1;\n        iVar4 = *arg_ch;\n        var_2ch = puVar2;\n    }\n    iVar7 = 0x33;\n    iVar1 = *(*(*(arg_8h + 4) + iVar4 * 4) + 8);\n    while (iVar1 == 0x33) {\n        iVar3 = *(arg_8h + 4);\n        puVar2 = *(iVar3 + iVar4 * 4);\n        *arg_ch = iVar4 + 1;\n        uVar6 = *puVar2;\n        if (*(*(iVar3 + (iVar4 + 1) * 4) + 8) == 0x41) {\n            iVar7 = -1;\n            *arg_ch = iVar4 + 2;\n            iVar4 = fcn.00b9a000(arg_8h, arg_ch, &fcn.00c0ad0f::var_1ch, 0xffffffff);\n            if (iVar4 < 0) {\n                uVar6 = 0x6e;\n                goto code_r0x00c0aee2;\n            }\n        }\n        var_2ch = &fcn.00c0ad0f::var_ch;\n        iVar4 = fcn.00b9859a(uVar6, var_2ch, arg_10h);\n        if (iVar4 != 0) {\n            uVar6 = 0xa3;\n            goto code_r0x00c0aee2;\n        }\n        fcn.00b98620(0xc0ae48, &fcn.00c0ad0f::var_1ch, 0x100, arg_10h);\n        if (var_8h == 0xb) {\n            fcn.00b99700(&fcn.00c0ad0f::var_2ch);\n        }\n        else if (var_8h == 0xc) {\n            fcn.00b99687(&fcn.00c0ad0f::var_2ch);\n        }\n        else if (var_8h == 0xd) {\n            fcn.00b9963c(&fcn.00c0ad0f::var_2ch);\n        }\n        iVar3 = *(arg_8h + 4);\n        iVar1 = *(*(iVar3 + *arg_ch * 4) + 8);\n        if (iVar1 == 0x7f) goto code_r0x00c0aee9;\n        if (iVar1 != 0x40) {\n            uVar6 = 0x7f;\n            goto code_r0x00c0aee2;\n        }\n        iVar4 = *arg_ch + 1;\n        *arg_ch = iVar4;\n        iVar1 = *(*(iVar3 + iVar4 * 4) + 8);\n    }\n    piVar5 = *(*(arg_8h + 4) + iVar4 * 4);\ncode_r0x00c0aed8:\n    iVar7 = *(piVar5 + 10);\n    uVar6 = 0x9d;\ncode_r0x00c0aee2:\n    fcn.00bfa0b5(uVar6, iVar7);\ncode_r0x00c0aee9:\n    fcn.00b99a20();\n    fcn.00b99a20();\n    return;\n}\n",
        "token_count": 1334
    },
    "00c0ec47": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c0ec47(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint extraout_ECX;\n    uint32_t arg_ch_00;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack32 = uStack32;\n    fcn.00b99997();\n    cVar1 = fcn.00bf3e91(&uStack32 + 3);\n    if (cVar1 == '\\0') {\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        fcn.00be6aa3(4, 0);\n    }\n    else if (uStack32._3_1_ == '\\0') {\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n    }\n    else {\n        arg_ch_00 = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(1, 0, uStack28);\n        if (iVar2 == 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar3 == 5) {\n                fcn.00bf37e9(L\"SeDebugPrivilege\");\n                cVar1 = fcn.00be8cc3(extraout_ECX);\n                if (cVar1 == '\\0') {\n                    arg_ch_00 = 0;\n                    fcn.00baff61(5, 0);\n                    fcn.00be6aa3(2, 0);\n                    fcn.00b99a20();\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                }\n                else {\n                    arg_ch_00 = uStack32;\n                    iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(1, 0);\n                }\n                fcn.00be8713();\n            }\n            else {\n                fcn.00baff61(iVar3, 0);\n                arg_ch_00 = 0;\n                fcn.00be6aa3(1, 0);\n                fcn.00b99a20();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n            }\n            if (iVar2 == 0) {\n                return 0;\n            }\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar2, 0);\n        if (iVar3 == 0) {\n            arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n            fcn.00baff61(arg_8h_00, arg_ch_00);\n            fcn.00be6aa3(3, 0);\n            fcn.00b99a20();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 697
    },
    "00c137f3": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c137f3(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t unaff_EBX;\n    bool bVar5;\n    uint uVar6;\n    uchar *arg_ch_00;\n    uchar auStack48 [16];\n    uchar auStack32 [8];\n    uint uStack24;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack24 = 0;\n    uStack16 = 0;\n    uStack12 = 1;\n    fcn.00b977c7();\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    cVar3 = fcn.00c135ca(arg_8h);\n    if (cVar3 == '\\0') {\n        fcn.00be6aa3(1, 0);\n        goto code_r0x00c13ca7;\n    }\n    fcn.00b99bf8(0xc1f910);\n    while (*(arg_8h + 8) < 5) {\n        fcn.00be6665(auStack32);\n    }\n    iVar4 = *(*(arg_8h + 4) + 0xc);\n    fcn.00b99997();\n    puVar1 = *(iVar4 + 8);\n    uVar6 = *puVar1;\n    uVar2 = puVar1[1];\n    *puVar1[3] = *puVar1[3] + 1;\n    fcn.00b97faf();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(uVar6, uVar2);\n    puVar1 = *(in_ECX + 0x2fc);\n    cVar3 = fcn.00bb0d27();\n    if (cVar3 == '\\0') {\n        cVar3 = fcn.00bb0d27();\n        if (cVar3 != '\\0') {\n            iVar4 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*puVar1);\n            goto code_r0x00c138d9;\n        }\n        cVar3 = fcn.00bb0d27();\n        if (cVar3 == '\\0') {\n            cVar3 = fcn.00bb0d27();\n            if (cVar3 != '\\0') {\n                uVar6 = 1;\n                goto code_r0x00c13939;\n            }\n            cVar3 = fcn.00bb0d27();\n            if (cVar3 == '\\0') {\n                cVar3 = fcn.00bb0d27();\n                if (cVar3 != '\\0') {\n                    uVar6 = 1;\ncode_r0x00c1397c:\n                    cVar3 = fcn.00be8ff7(uVar6);\ncode_r0x00c13c8a:\n                    if (cVar3 == '\\0') goto code_r0x00c13c8e;\n                    goto code_r0x00c13c9e;\n                }\n                cVar3 = fcn.00bb0d27();\n                if (cVar3 != '\\0') {\n                    uVar6 = 0;\n                    goto code_r0x00c1397c;\n                }\n                cVar3 = fcn.00bb0d27();\n                if (cVar3 != '\\0') {\n                    iVar4 = *(*(arg_8h + 4) + 0x10);\n                    fcn.00b99997();\n                    cVar3 = fcn.00be91df(*(iVar4 + 8));\n                    goto code_r0x00c13c8a;\n                }\n                cVar3 = fcn.00bb0d27();\n                if (cVar3 != '\\0') {\n                    uVar6 = fcn.00b99c9c();\n                    cVar3 = fcn.00be9264(uVar6);\n                    goto code_r0x00c13c8a;\n                }\n                cVar3 = fcn.00bb0d27();\n                if (cVar3 != '\\0') {\n                    iVar4 = *(*(arg_8h + 4) + 0x10);\n                    fcn.00b99997();\n                    cVar3 = fcn.00be92e7(*(iVar4 + 8), &stack0xffffffb8);\n                    goto code_r0x00c13a31;\n                }\n                cVar3 = fcn.00bb0d27();\n                if (cVar3 != '\\0') {\n                    uVar6 = fcn.00b99c9c();\n                    cVar3 = fcn.00be955c(uVar6);\n                    goto code_r0x00c13c8a;\n                }\n                cVar3 = fcn.00bb0d27();\n                if (cVar3 != '\\0') {\n                    cVar3 = fcn.00be9372(auStack48);\ncode_r0x00c13c50:\n                    if (cVar3 == '\\0') goto code_r0x00c13c8e;\n                    fcn.00b99b9c(auStack48);\n                    goto code_r0x00c13c9e;\n                }\n                cVar3 = fcn.00bb0d27();\n                if (cVar3 != '\\0') {\n                    iVar4 = *(*(arg_8h + 4) + 0x10);\n                    fcn.00b99997();\n                    cVar3 = fcn.00be9471(*(iVar4 + 8));\n                    goto code_r0x00c13c8a;\n                }\n                cVar3 = fcn.00bb0d27();\n                if (cVar3 == '\\0') {\n                    cVar3 = fcn.00bb0d27();\n                    if (cVar3 == '\\0') {\n                        cVar3 = fcn.00bb0d27();\n                        if (cVar3 == '\\0') {\n                            cVar3 = fcn.00bb0d27();\n                            if (cVar3 != '\\0') {\n                                cVar3 = fcn.00be912d(auStack48);\n                                goto code_r0x00c13c50;\n                            }\n                            cVar3 = fcn.00bb0d27();\n                            if (cVar3 == '\\0') {\n                                cVar3 = fcn.00bb0d27();\n                                if (cVar3 == '\\0') {\n                                    cVar3 = fcn.00bb0d27();\n                                    if (cVar3 == '\\0') {\n                                        cVar3 = fcn.00bb0d27();\n                                        if (cVar3 == '\\0') {\n                                            cVar3 = fcn.00bb0d27();\n                                            if (cVar3 != '\\0') {\n                                                arg_ch_00 = auStack48;\n                                                uVar6 = fcn.00b99c9c();\n                                                cVar3 = fcn.00be90ad(uVar6, arg_ch_00);\n                                                goto code_r0x00c13c50;\n                                            }\n                                            cVar3 = fcn.00bb0d27();\n                                            if (cVar3 != '\\0') {\n                                                uVar6 = fcn.00b99c9c();\n                                                cVar3 = fcn.00be9a6a(uVar6);\n                                                goto code_r0x00c13c8a;\n                                            }\n                                            goto code_r0x00c13c8e;\n                                        }\n                                        iVar4 = *(*(arg_8h + 4) + 0x10);\n                                        fcn.00b99997();\n                                        (*_sym.imp.USER32.dll_SendMessageW)(*puVar1, 0xc2, 1, **(iVar4 + 8));\n                                        goto code_r0x00c13c9e;\n                                    }\n                                    fcn.00be9023(&stack0xffffffb8);\n                                    goto code_r0x00c13bce;\n                                }\n                                iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*puVar1, 0xc9, 0xffffffff, 0);\n                                iVar4 = iVar4 + 1;\n                            }\n                            else {\n                                iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*puVar1, 0xba, 0, 0);\n                            }\n                            fcn.00b99a20();\n                            arg_ch[3] = 1;\n                            *arg_ch = iVar4;\n                            goto code_r0x00c13c9e;\n                        }\n                        uVar6 = 0;\n                    }\n                    else {\n                        uVar6 = 1;\n                    }\n                    fcn.00be8eb9(uVar6);\n                    goto code_r0x00c13c9e;\n                }\n                cVar3 = fcn.00be8ee8();\n                bVar5 = cVar3 == '\\0';\n                goto code_r0x00c138db;\n            }\n            cVar3 = fcn.00be9bf6(&stack0xffffffb8);\ncode_r0x00c13a31:\n            if (cVar3 == '\\0') {\ncode_r0x00c13c8e:\n                fcn.00be6aa3(1, 1);\n                goto code_r0x00c13c9e;\n            }\ncode_r0x00c13bce:\n            fcn.00b99a20();\n            arg_ch[3] = 1;\n            goto code_r0x00c13be0;\n        }\n        uVar6 = 0xffffffff;\ncode_r0x00c13939:\n        fcn.00be9b50(uVar6);\n    }\n    else {\n        iVar4 = (*_sym.imp.USER32.dll_IsWindowVisible)(*puVar1);\ncode_r0x00c138d9:\n        bVar5 = iVar4 == 0;\ncode_r0x00c138db:\n        if (bVar5) {\n            fcn.00b99a20();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n        }\n        else {\n            fcn.00b99a20();\n            unaff_EBX = 1;\n            arg_ch[3] = 1;\ncode_r0x00c13be0:\n            *arg_ch = unaff_EBX;\n        }\n    }\ncode_r0x00c13c9e:\n    fcn.00b95a64();\ncode_r0x00c13ca7:\n    fcn.00b95a64();\n    fcn.00b99a20();\n    return 0;\n}\n",
        "token_count": 2351
    },
    "00c144d5": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c144d5(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    cVar2 = fcn.00c135ca(arg_8h);\n    if (cVar2 == '\\0') {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else if ((*(arg_8h + 8) < 5) || (iVar3 = fcn.00b99c9c(),  iVar3 == 0)) {\n        uVar1 = **(in_ECX + 0x2fc);\n        iVar3 = *(*(arg_8h + 4) + 0xc);\n        fcn.00b99997();\n        fcn.00bf075c(*(iVar3 + 8), uVar1);\n    }\n    else {\n        uVar1 = **(in_ECX + 0x2fc);\n        iVar3 = *(*(arg_8h + 4) + 0xc);\n        fcn.00b99997();\n        fcn.00bf091d(*(iVar3 + 8), uVar1);\n    }\n    return 0;\n}\n",
        "token_count": 293
    },
    "00b99d46": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2",
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nulong * __fastcall fcn.00b99d46(ulong *param_1)\n\n{\n    int32_t iVar1;\n    int16_t *arg_8h;\n    ulong *puVar2;\n    uint in_stack_ffffffe0;\n    uint in_stack_ffffffe4;\n    ulong *var_8h;\n    ulong *var_4h;\n    \n    iVar1 = *(param_1 + 0xc);\n    if (iVar1 != 1) {\n        if (iVar1 == 2) {\n            return *param_1;\n        }\n        var_8h = param_1;\n        var_4h = param_1;\n        if (iVar1 == 3) {\n            puVar2 = fcn.00bafcd4(in_stack_ffffffe0, in_stack_ffffffe4, *param_1, *param_1 >> 0x20);\n            return puVar2;\n        }\n        if (iVar1 == 4) {\n            arg_8h = **(param_1 + 1);\n            if ((*arg_8h == 0x30) && (((arg_8h[1] == 0x78 || (arg_8h[1] == 0x58)) && ((*(param_1 + 1))[1] < 0x13)))) {\n                fcn.00bafbfb(0x10);\n                return var_8h;\n            }\n            puVar2 = fcn.00bb37d3(arg_8h);\n            return puVar2;\n        }\n        if (iVar1 != 7) {\n            if (iVar1 == 9) {\n                if (*param_1 == '\\0') {\n                    return NULL;\n                }\n                return 0x1;\n            }\n            if (iVar1 == 0xb) {\n                if (**param_1 < 5) {\n                    fcn.00bf582b(&var_8h);\n                    return var_8h;\n                }\n                if (**param_1 < 9) {\n                    fcn.00bf582b(&var_8h);\n                    return var_8h;\n                }\n            }\n            return NULL;\n        }\n    }\n    return *param_1;\n}\n",
        "token_count": 479
    },
    "00b99dae": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b99dae(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t **in_ECX;\n    \n    if ((in_ECX[3] == 0xa) && (**in_ECX == arg_8h)) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 92
    },
    "00bf3815": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf3815(int32_t param_1)\n\n{\n    uint32_t arg_8h;\n    int16_t *piVar1;\n    uint16_t *puVar2;\n    uint32_t arg_8h_00;\n    uint var_10h;\n    \n    arg_8h = *(param_1 + 4);\n    fcn.00b97b76(arg_8h);\n    arg_8h_00 = 0;\n    if (arg_8h != 0) {\n        do {\n            piVar1 = fcn.00b97b52(arg_8h_00);\n            if (*piVar1 == 10) {\n                fcn.00b97a84(0xd);\n            }\n            puVar2 = fcn.00b97b52(arg_8h_00);\n            fcn.00b97a84(*puVar2);\n            arg_8h_00 = arg_8h_00 + 1;\n        } while (arg_8h_00 < arg_8h);\n    }\n    fcn.00b981a7(&var_10h);\n    fcn.00b95a64();\n    return;\n}\n",
        "token_count": 264
    },
    "00bf4a71": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf4a71(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint in_ECX;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    int32_t var_14h;\n    int32_t *var_10h;\n    uint hdc;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = fcn.00bafec6();\n    fcn.00b9538e(uVar1);\n    uVar4 = 0;\n    var_4h = 0;\n    arg_8h[1] = 0;\n    *arg_8h = 0;\n    var_8h = 1;\n    iVar2 = fcn.00bb2e3c(var_14h);\n    if (iVar2 != 0) {\n        var_8h = 1;\n        do {\n            if (*(var_14h + uVar4 * 2) == 10) {\n                var_8h = var_8h + 1;\n            }\n            uVar4 = uVar4 + 1;\n            uVar3 = fcn.00bb2e3c(var_14h);\n        } while (uVar4 < uVar3);\n    }\n    iVar2 = fcn.00bb4668(var_14h, 0xc4a470);\n    if (iVar2 != 0) {\n        var_4h = 0;\n        do {\n            piVar5 = arg_8h;\n            uVar1 = fcn.00bb2e3c(iVar2);\n            (*_sym.imp.GDI32.dll_GetTextExtentPoint32W)(in_ECX, iVar2, uVar1, piVar5);\n            if (*arg_8h != var_4h && var_4h <= *arg_8h) {\n                var_4h = *arg_8h;\n            }\n            iVar2 = fcn.00bb4668(0, 0xc4a470);\n        } while (iVar2 != 0);\n    }\n    *arg_8h = var_4h;\n    arg_8h[1] = arg_8h[1] * var_8h;\n    *var_10h = *var_10h + -1;\n    if (*var_10h == 0) {\n        fcn.00bb106c(var_10h);\n        fcn.00bb106c(var_14h);\n    }\n    return;\n}\n",
        "token_count": 574
    },
    "00bf8991": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00bf8991(uint *param_1)\n\n{\n    if (param_1[3] == 10) {\n        return **param_1;\n    }\n    return 0;\n}\n",
        "token_count": 47
    },
    "00ba08ab": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba08ab(uint32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint32_t arg_ch_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint *arg_8h_00;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint auStack48 [2];\n    uint uStack40;\n    uint uStack36;\n    \n    uStack36 = 1;\n    arg_ch_00 = *(arg_ch + 8);\n    uStack40 = 0;\n    uVar2 = 0xffffffff;\n    uStack64 = 0xffffffff;\n    uStack60 = 0xffffffff;\n    uStack68 = 0xffffffff;\n    uStack72 = 0xffffffff;\n    auStack48[0] = 0xffffffff;\n    if (arg_8h == 0x15) {\n        if (arg_ch_00 != 0) {\n            fcn.00b99a20();\n            *arg_10h = 0;\n            arg_10h[3] = 1;\n            fcn.00be6aa3(2, 0);\n            uVar2 = 0xffffffff;\n            goto code_r0x00ba0a0c;\n        }\n    }\n    else if (0x1d < arg_8h) {\n        if (6 < arg_ch_00) {\n            uStack72 = fcn.00b99c9c();\n        }\n        if (5 < arg_ch_00) {\n            uStack68 = fcn.00b99c9c();\n        }\n        if (4 < arg_ch_00) {\n            uStack64 = fcn.00b99c9c();\n        }\n        if (3 < arg_ch_00) {\n            uVar2 = fcn.00b99c9c();\n        }\n        if (2 < arg_ch_00) {\n            uStack60 = fcn.00b99c9c();\n        }\n        if (1 < arg_ch_00) {\n            fcn.00b99c9c();\n        }\n        arg_8h_00 = auStack48;\n        fcn.00b99ac0(arg_8h_00);\n        uVar2 = fcn.00b92d1a(arg_8h, arg_ch_00, uStack60, uStack64, uVar2, uStack68, uStack72, 0, 0, arg_8h_00);\n        fcn.00b99a20();\n        arg_10h[3] = 1;\n        *arg_10h = uVar2;\n        iVar1 = fcn.00b99c9c();\n        if (iVar1 == 0) {\n            fcn.00be6aa3(1, 0);\n        }\n        if (arg_8h != 0x1d) {\n            fcn.00bb106c(arg_ch_00);\n        }\n        uVar2 = 0;\ncode_r0x00ba0a0c:\n        fcn.00b99a20();\n        return uVar2;\n    }\n    // WARNING: Could not recover jumptable at 0x00ba090b. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0xba0a3b\n    uVar2 = (**(*(arg_8h + 0xba0a6f) * 4 + 0xba0a3b))();\n    return uVar2;\n}\n",
        "token_count": 791
    },
    "00ba2ab7": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba2ab7(uint noname_0, uint arg_ch)\n\n{\n    uint arg_8h;\n    double dStack192;\n    uint uStack184;\n    uint uStack180;\n    double dStack176;\n    uint uStack168;\n    uint uStack164;\n    double dStack160;\n    uint uStack152;\n    uint uStack148;\n    double dStack144;\n    uint uStack136;\n    uint uStack132;\n    double dStack128;\n    uint uStack120;\n    uint uStack116;\n    double dStack112;\n    uint uStack104;\n    uint uStack100;\n    double dStack96;\n    uint uStack88;\n    uint uStack84;\n    int32_t iStack76;\n    int64_t iStack72;\n    int64_t iStack64;\n    int64_t iStack56;\n    int64_t iStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    \n    (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    iStack76 = 0x40;\n    (*_sym.imp.KERNEL32.dll_GlobalMemoryStatusEx)(&iStack76);\n    arg_8h = fcn.00b9942e();\n    fcn.00b991b0(arg_8h, 1);\n    dStack128 = iStack76;\n    if (iStack76 < 0) {\n        dStack128 = dStack128 + *0xc4bac8;\n    }\n    uStack120 = 0;\n    uStack116 = 3;\n    fcn.00b99040(arg_8h, &dStack128, 1);\n    fcn.00b99a20();\n    dStack160 = iStack72 * *0xc34bf8;\n    uStack152 = 0;\n    uStack148 = 3;\n    fcn.00b99040(arg_8h, &dStack160, 1);\n    fcn.00b99a20();\n    dStack96 = iStack64 * *0xc34bf8;\n    uStack88 = 0;\n    uStack84 = 3;\n    fcn.00b99040(arg_8h, &dStack96, 1);\n    fcn.00b99a20();\n    dStack192 = iStack56 * *0xc34bf8;\n    uStack184 = 0;\n    uStack180 = 3;\n    fcn.00b99040(arg_8h, &dStack192, 1);\n    fcn.00b99a20();\n    dStack176 = iStack48 * *0xc34bf8;\n    uStack168 = 0;\n    uStack164 = 3;\n    fcn.00b99040(arg_8h, &dStack176, 1);\n    fcn.00b99a20();\n    dStack144 = iStack40 * *0xc34bf8;\n    uStack136 = 0;\n    uStack132 = 3;\n    fcn.00b99040(arg_8h, &dStack144, 1);\n    fcn.00b99a20();\n    dStack112 = iStack32 * *0xc34bf8;\n    uStack104 = 0;\n    uStack100 = 3;\n    fcn.00b99040(arg_8h, &dStack112, 1);\n    fcn.00b99a20();\n    return 0;\n}\n",
        "token_count": 757
    },
    "00becd99": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00becd99(uint arg_8h, int32_t *arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    int32_t *var_4h;\n    \n    iVar4 = 0;\n    *in_ECX = 0xc49a58;\n    ppiVar1 = in_ECX + 8;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    *ppiVar1 = NULL;\n    in_ECX[9] = 1;\n    in_ECX[10] = *arg_ch;\n    in_ECX[0xb] = arg_ch[1];\n    in_ECX[0xc] = arg_ch[2];\n    piVar2 = arg_ch[3];\n    in_ECX[0xd] = piVar2;\n    *piVar2 = *piVar2 + 1;\n    in_ECX[0xe] = arg_18h;\n    in_ECX[0xf] = arg_14h;\n    in_ECX[0x12] = 0;\n    var_4h = in_ECX;\n    fcn.00b99ac0(arg_8h);\n    if (in_ECX[0x13] == 8) {\n        iVar4 = in_ECX[0x10];\n    }\n    puVar3 = *(iVar4 + 8);\n    if (puVar3 == NULL) {\n        in_ECX[1] = -0x7fffbffd;\n    }\n    else {\n        iVar4 = (***puVar3)(puVar3, 0xc22c6c, &var_4h);\n        if (iVar4 < 0) {\n            in_ECX[1] = iVar4;\n        }\n        else {\n            iVar4 = fcn.00be7ea5(in_ECX + 3, in_ECX + 4);\n            if (-1 < iVar4) {\n                (**(*in_ECX[3] + 4))(in_ECX[3]);\n                iVar4 = (**(*var_4h + 0x10))(var_4h, in_ECX + 4, ppiVar1);\n                if (-1 < iVar4) {\n                    (**(**ppiVar1 + 4))(*ppiVar1);\n                    iVar4 = (**(**ppiVar1 + 0x14))(*ppiVar1);\n                }\n            }\n            in_ECX[1] = iVar4;\n            (**(*var_4h + 8))(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 623
    },
    "00c01875": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00c01875(uint param_1)\n\n{\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    return param_1;\n}\n",
        "token_count": 94
    },
    "00c018ff": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00c018ff(uint *param_1)\n\n{\n    uint unaff_ESI;\n    \n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    *param_1[3] = *param_1[3] + -1;\n    if (*param_1[3] == 0) {\n        fcn.00bb106c(*param_1, unaff_ESI);\n        fcn.00bb106c(param_1[3]);\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "00c02882": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c02882(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.00bb3020(&var_48h, 0, 0x38);\n    var_4ch = 0x7c;\n    var_2ch = 1;\n    var_38h = 1;\n    var_44h = 1;\n    var_14h = 1;\n    var_1ch = 1;\n    var_24h = 1;\n    puVar4 = &var_4ch;\n    uVar3 = 0;\n    uVar1 = fcn.00bb2e3c(arg_8h);\n    iVar2 = (*_sym.imp.WININET.dll_InternetCrackUrlW)(arg_8h, uVar1, uVar3, puVar4);\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        fcn.00b978ad(var_48h, 0, var_44h);\n        fcn.00b978ad(var_3ch, 0, var_38h);\n        fcn.00b978ad(var_30h, 0, var_2ch);\n        fcn.00b978ad(var_28h, 0, var_24h);\n        fcn.00b978ad(var_20h, 0, var_1ch);\n        fcn.00b978ad(var_18h, 0, var_14h);\n        uVar1 = fcn.00be8123(&var_10h, arg_ch + 0x50);\n        fcn.00b981a7(uVar1);\n        fcn.00b95a64();\n        *(arg_ch + 0x78) = var_34h;\n        *(arg_ch + 0x74) = var_40h;\n        iVar2 = var_40h + -1;\n        if (iVar2 == 0) {\n            *(arg_ch + 0x70) = 1;\n        }\n        else {\n            iVar2 = var_40h + -2;\n            if (iVar2 == 0) {\n                *(arg_ch + 0x70) = 2;\n            }\n            else {\n                *(arg_ch + 0x70) = 3;\n            }\n        }\n        uVar1 = CONCAT31(iVar2 >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 693
    },
    "00c04548": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c04548(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    \n    fcn.00bb6e48();\n    uVar1 = fcn.00bb0bd0();\n    fcn.00b99a20();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 89
    },
    "00b94a94": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00b94a94(void)\n\n{\n    if ((*0xc56264 & 1) == 0) {\n        *0xc56264 = *0xc56264 | 1;\n        fcn.00bb2f80(0xbcb7b8);\n    }\n    return 0xc574a0;\n}\n",
        "token_count": 74
    },
    "00b9778f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b9778f(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if ((arg_8h & 2) == 0) {\n        fcn.00b97776();\n        if ((arg_8h & 1) != 0) {\n            fcn.00bb106c();\n        }\n    }\n    else {\n        fcn.00b946d3(in_ECX, 0x10, *(in_ECX + -4), fcn.00b97776);\n        if ((arg_8h & 1) != 0) {\n            fcn.00bb106c(in_ECX + -4);\n        }\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "00ba8305": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00ba8305(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint *in_EDX;\n    ushort *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    ulong uVar9;\n    uint var_14h;\n    uint32_t var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar5 = arg_14h;\n    if (0xff < arg_14h) {\n        uVar5 = 0xff;\n    }\n    var_4h = 0;\n    uVar6 = arg_10h;\n    uVar8 = arg_14h;\n    var_ch = in_EDX;\n    var_8h = in_ECX;\n    if ((arg_8h & 1) != 0) {\n        if ((arg_8h & 0x800) == 0) {\n            if (arg_10h <= uVar5) {\n                var_4h = (uVar5 - arg_10h) + 1;\n                uVar7 = arg_10h;\n                do {\n                    uVar2 = *(*(arg_ch + 4) + uVar7);\n                    puVar1 = (uVar2 >> 3) + in_ECX;\n                    *puVar1 = *puVar1 | '\\x01' << (uVar2 & 7);\n                    uVar7 = uVar7 + 1;\n                } while (uVar7 <= uVar5);\n            }\n        }\n        else {\n            arg_8h = arg_8h & 0xfffffffe;\n            uVar7 = arg_10h;\ncode_r0x00be46d2:\n            while (uVar6 = uVar7,  iVar3 = fcn.00c1e485(&arg_10h, &var_10h),  -1 < iVar3) {\n                if (0 < iVar3) {\n                    iVar3 = fcn.00c1dc98(arg_8h, arg_ch, iVar3 * 4 + 0xc345d0, arg_10h);\n                    goto code_r0x00be475f;\n                }\n                if (arg_10h < uVar6) goto code_r0x00be473d;\n                uVar7 = uVar6;\n                if (uVar8 < var_10h) goto code_r0x00be471c;\n            }\n        }\n    }\n    if (((arg_8h & 0x800) == 0) && (0xffff < uVar8)) {\n        arg_14h = 0xffff;\n        uVar8 = 0xffff;\n    }\n    if (uVar6 <= uVar5) {\n        var_4h = var_4h + 1 + (uVar5 - uVar6);\n        uVar7 = uVar6;\n        do {\n            puVar1 = (uVar7 >> 3) + var_8h;\n            *puVar1 = *puVar1 | '\\x01' << (uVar7 & 7);\n            uVar7 = uVar7 + 1;\n            uVar8 = arg_14h;\n        } while (uVar7 <= uVar5);\n    }\n    if (uVar6 < 0x100) {\n        uVar6 = 0x100;\n    }\n    if (uVar8 < uVar6) {\n        return var_4h;\n    }\n    puVar4 = *var_ch;\n    if ((arg_8h & 0x800) == 0) {\n        if (uVar6 < uVar8) {\n            *puVar4 = 2;\n            puVar4[1] = uVar6;\n            puVar4 = puVar4 + 2;\n            *puVar4 = uVar8;\n        }\n        else {\n            if (uVar6 != uVar8) goto code_r0x00be4824;\n            *puVar4 = 1;\n            puVar4 = puVar4 + 1;\n            *puVar4 = uVar6;\n        }\n        puVar4 = puVar4 + 1;\n    }\n    else {\n        if (uVar6 < uVar8) {\n            *puVar4 = 2;\n            fcn.00c1ef2a();\n        }\n        else {\n            if (uVar6 != uVar8) goto code_r0x00be4824;\n            *puVar4 = 1;\n        }\n        uVar9 = fcn.00c1ef2a();\n        puVar4 = (uVar9 >> 0x20) + uVar9 * 2;\n    }\ncode_r0x00be4824:\n    *var_ch = puVar4;\n    return var_4h;\ncode_r0x00be473d:\n    uVar7 = arg_10h;\n    if (var_10h < uVar6 - 1) {\ncode_r0x00be471c:\n        if ((uVar8 < var_10h) && (arg_10h <= uVar8 + 1)) {\n            arg_14h = var_10h;\n            uVar7 = uVar6;\n            uVar8 = var_10h;\n            if ((uVar5 < var_10h) && (uVar5 = var_10h,  0xff < var_10h)) {\n                uVar5 = 0xff;\n            }\n        }\n        else {\n            iVar3 = fcn.00ba8305(arg_8h, arg_ch, arg_10h, var_10h);\ncode_r0x00be475f:\n            var_4h = var_4h + iVar3;\n            uVar7 = uVar6;\n        }\n    }\n    goto code_r0x00be46d2;\n}\n",
        "token_count": 1359
    },
    "00ba9090": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00ba9090(int32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    if ((*0xc57418 & 1) == 0) {\n        *0xc57418 = *0xc57418 | 1;\n        *0xc5049c = fcn.00ba1887;\n        *0xc504a0 = 0;\n        *0xc504a4 = 0;\n        *0xc504a8 = 1;\n        *0xc504ac = 1;\n        *0xc504b0 = 0;\n        *0xc504b4 = L\"ACOS\";\n        *0xc504c0 = fcn.00c02c18;\n        *0xc504c4 = 0;\n        *0xc504c8 = 0;\n        *0xc504cc = 1;\n        *0xc504d0 = 1;\n        *0xc504d4 = 0;\n        *0xc504d8 = L\"ADLIBREGISTER\";\n        *0xc504e4 = fcn.00ba18c9;\n        *0xc504e8 = 0;\n        *0xc504ec = 0;\n        *0xc504f0 = 1;\n        *0xc504f4 = 2;\n        *0xc504f8 = 0;\n        *0xc504fc = L\"ADLIBUNREGISTER\";\n        *0xc50508 = fcn.00c03de3;\n        *0xc5050c = 0;\n        *0xc50510 = 0;\n        *0xc50514 = 0;\n        *0xc50518 = 1;\n        *0xc5051c = 0;\n        *0xc50520 = 0xc225d4;\n        *0xc5052c = fcn.00c02c9c;\n        *0xc50530 = 0;\n        *0xc50534 = 0;\n        *0xc50538 = 1;\n        *0xc5053c = 1;\n        *0xc50540 = 0;\n        *0xc50544 = L\"ASCW\";\n        *0xc50550 = fcn.00c02cf6;\n        *0xc50554 = 0;\n        *0xc50558 = 0;\n        *0xc5055c = 1;\n        *0xc50560 = 1;\n        *0xc50564 = 0;\n        *0xc50568 = L\"ASIN\";\n        *0xc50574 = fcn.00c02c5a;\n        *0xc50578 = 0;\n        *0xc5057c = 0;\n        *0xc50580 = 1;\n        *0xc50584 = 1;\n        *0xc50588 = 0;\n        *0xc5058c = L\"ASSIGN\";\n        *0xc50598 = fcn.00c03f54;\n        *0xc5059c = 0;\n        *0xc505a0 = 0;\n        *0xc505a4 = 2;\n        *0xc505a8 = 3;\n        *0xc505ac = 0;\n        *0xc505b0 = L\"ATAN\";\n        *0xc505bc = fcn.00ba1a54;\n        *0xc505c0 = 0;\n        *0xc505c4 = 0;\n        *0xc505c8 = 1;\n        *0xc505cc = 1;\n        *0xc505d0 = 0;\n        *0xc505d4 = L\"AUTOITSETOPTION\";\n        *0xc505e0 = fcn.00ba1a96;\n        *0xc505e4 = 0;\n        *0xc505e8 = 0;\n        *0xc505ec = 1;\n        *0xc505f0 = 2;\n        *0xc505f4 = 0;\n        *0xc505f8 = L\"AUTOITWINGETTITLE\";\n        *0xc50604 = fcn.00c0412d;\n        *0xc50608 = 0;\n        *0xc5060c = 0;\n        *0xc50610 = 0;\n        *0xc50614 = 0;\n        *0xc50618 = 0;\n        *0xc5061c = L\"AUTOITWINSETTITLE\";\n        *0xc50628 = fcn.00c04184;\n        *0xc5062c = 0;\n        *0xc50630 = 0;\n        *0xc50634 = 1;\n        *0xc50638 = 1;\n        *0xc5063c = 0;\n        *0xc50640 = L\"BEEP\";\n        *0xc5064c = fcn.00c041af;\n        *0xc50650 = 0;\n        *0xc50654 = 0;\n        *0xc50658 = 0;\n        *0xc5065c = 2;\n        *0xc50660 = 0;\n        *0xc50664 = L\"BINARY\";\n        *0xc50670 = fcn.00c02d2d;\n        *0xc50674 = 0;\n        *0xc50678 = 0;\n        *0xc5067c = 1;\n        *0xc50680 = 1;\n        *0xc50684 = 0;\n        *0xc50688 = L\"BINARYLEN\";\n        *0xc50694 = fcn.00c11917;\n        *0xc50698 = 0;\n        *0xc5069c = 0;\n        *0xc506a0 = 1;\n        *0xc506a4 = 1;\n        *0xc506a8 = 0;\n        *0xc506ac = L\"BINARYMID\";\n        *0xc506b8 = fcn.00c11950;\n        *0xc506bc = 0;\n        *0xc506c0 = 0;\n        *0xc506c4 = 2;\n        *0xc506c8 = 3;\n        *0xc506cc = 0;\n        *0xc506d0 = L\"BINARYTOSTRING\";\n        *0xc506dc = fcn.00c119d5;\n        *0xc506e0 = 0;\n        *0xc506e4 = 0;\n        *0xc506e8 = 1;\n        *0xc506ec = 2;\n        *0xc506f0 = 0;\n        *0xc506f4 = L\"BITAND\";\n        *0xc50700 = fcn.00c02d4e;\n        *0xc50704 = 0;\n        *0xc50708 = 0;\n        *0xc5070c = 2;\n        *0xc50710 = 0xff;\n        *0xc50714 = 0;\n        *0xc50718 = L\"BITNOT\";\n        *0xc50724 = fcn.00c02da0;\n        *0xc50728 = 0;\n        *0xc5072c = 0;\n        *0xc50730 = 1;\n        *0xc50734 = 1;\n        *0xc50738 = 0;\n        *0xc5073c = L\"BITOR\";\n        *0xc50748 = fcn.00c02dd1;\n        *0xc5074c = 0;\n        *0xc50750 = 0;\n        *0xc50754 = 2;\n        *0xc50758 = 0xff;\n        *0xc5075c = 0;\n        *0xc50760 = L\"BITROTATE\";\n        *0xc5076c = fcn.00c02e23;\n        *0xc50770 = 0;\n        *0xc50774 = 0;\n        *0xc50778 = 1;\n        *0xc5077c = 3;\n        *0xc50780 = 0;\n        *0xc50784 = L\"BITSHIFT\";\n        *0xc50790 = fcn.00c02fb4;\n        *0xc50794 = 0;\n        *0xc50798 = 0;\n        *0xc5079c = 2;\n        *0xc507a0 = 2;\n        *0xc507a4 = 0;\n        *0xc507a8 = L\"BITXOR\";\n        *0xc507b4 = fcn.00c0301a;\n        *0xc507b8 = 0;\n        *0xc507bc = 0;\n        *0xc507c0 = 2;\n        *0xc507c4 = 0xff;\n        *0xc507c8 = 0;\n        *0xc507cc = L\"BLOCKINPUT\";\n        *0xc507d8 = fcn.00c041fd;\n        *0xc507dc = 0;\n        *0xc507e0 = 0;\n        *0xc507e4 = 1;\n        *0xc507e8 = 1;\n        *0xc507ec = 0;\n        *0xc507f0 = L\"BREAK\";\n        *0xc507fc = fcn.00c0423b;\n        *0xc50800 = 0;\n        *0xc50804 = 0;\n        *0xc50808 = 1;\n        *0xc5080c = 1;\n        *0xc50810 = 0;\n        *0xc50814 = L\"CALL\";\n        *0xc50820 = 0xbcb79f;\n        *0xc50824 = 0;\n        *0xc50828 = 0;\n        *0xc5082c = 1;\n        *0xc50830 = 0xff;\n        *0xc50834 = 0;\n        *0xc50838 = L\"CDTRAY\";\n        *0xc50844 = fcn.00bfa5bd;\n        *0xc50848 = 0;\n        *0xc5084c = 0;\n        *0xc50850 = 2;\n        *0xc50854 = 2;\n        *0xc50858 = 0;\n        *0xc5085c = L\"CEILING\";\n        *0xc50868 = fcn.00c0306c;\n        *0xc5086c = 0;\n        *0xc50870 = 0;\n        *0xc50874 = 1;\n        *0xc50878 = 1;\n        *0xc5087c = 0;\n        *0xc50880 = 0xc225cc;\n        *0xc5088c = fcn.00c030d3;\n        *0xc50890 = 0;\n        *0xc50894 = 0;\n        *0xc50898 = 1;\n        *0xc5089c = 1;\n        *0xc508a0 = 0;\n        *0xc508a4 = L\"CHRW\";\n        *0xc508b0 = fcn.00c03187;\n        *0xc508b4 = 0;\n        *0xc508b8 = 0;\n        *0xc508bc = 1;\n        *0xc508c0 = 1;\n        *0xc508c4 = 0;\n        *0xc508c8 = L\"CLIPGET\";\n        *0xc508d4 = fcn.00c0425a;\n        *0xc508d8 = 0;\n        *0xc508dc = 0;\n        *0xc508e0 = 0;\n        *0xc508e4 = 0;\n        *0xc508e8 = 0;\n        *0xc508ec = L\"CLIPPUT\";\n        *0xc508f8 = fcn.00c04458;\n        *0xc508fc = 0;\n        *0xc50900 = 0;\n        *0xc50904 = 1;\n        *0xc50908 = 1;\n        *0xc5090c = 0;\n        *0xc50910 = L\"CONSOLEREAD\";\n        *0xc5091c = fcn.00c11425;\n        *0xc50920 = 0;\n        *0xc50924 = 0;\n        *0xc50928 = 0;\n        *0xc5092c = 2;\n        *0xc50930 = 0;\n        *0xc50934 = L\"CONSOLEWRITE\";\n        *0xc50940 = fcn.00ba20a6;\n        *0xc50944 = 0;\n        *0xc50948 = 0;\n        *0xc5094c = 1;\n        *0xc50950 = 1;\n        *0xc50954 = 0;\n        *0xc50958 = L\"CONSOLEWRITEERROR\";\n        *0xc50964 = fcn.00c04548;\n        *0xc50968 = 0;\n        *0xc5096c = 0;\n        *0xc50970 = 1;\n        *0xc50974 = 1;\n        *0xc50978 = 0;\n        *0xc5097c = L\"CONTROLCLICK\";\n        *0xc50988 = fcn.00c13706;\n        *0xc5098c = 0;\n        *0xc50990 = 0;\n        *0xc50994 = 3;\n        *0xc50998 = 7;\n        *0xc5099c = 0;\n        *0xc509a0 = L\"CONTROLCOMMAND\";\n        *0xc509ac = fcn.00c137f3;\n        *0xc509b0 = 0;\n        *0xc509b4 = 0;\n        *0xc509b8 = 4;\n        *0xc509bc = 5;\n        *0xc509c0 = 0;\n        *0xc509c4 = L\"CONTROLDISABLE\";\n        *0xc509d0 = fcn.00c13cc4;\n        *0xc509d4 = 0;\n        *0xc509d8 = 0;\n        *0xc509dc = 3;\n        *0xc509e0 = 3;\n        *0xc509e4 = 0;\n        *0xc509e8 = L\"CONTROLENABLE\";\n        *0xc509f4 = fcn.00c13d03;\n        *0xc509f8 = 0;\n        *0xc509fc = 0;\n        *0xc50a00 = 3;\n        *0xc50a04 = 3;\n        *0xc50a08 = 0;\n        *0xc50a0c = L\"CONTROLFOCUS\";\n        *0xc50a18 = fcn.00c13d3f;\n        *0xc50a1c = 0;\n        *0xc50a20 = 0;\n        *0xc50a24 = 3;\n        *0xc50a28 = 3;\n        *0xc50a2c = 0;\n        *0xc50a30 = L\"CONTROLGETFOCUS\";\n        *0xc50a3c = fcn.00c13d7b;\n        *0xc50a40 = 0;\n        *0xc50a44 = 0;\n        *0xc50a48 = 1;\n        *0xc50a4c = 2;\n        *0xc50a50 = 0;\n        *0xc50a54 = L\"CONTROLGETHANDLE\";\n        *0xc50a60 = fcn.00c13e17;\n        *0xc50a64 = 0;\n        *0xc50a68 = 0;\n        *0xc50a6c = 3;\n        *0xc50a70 = 3;\n        *0xc50a74 = 0;\n        *0xc50a78 = L\"CONTROLGETPOS\";\n        *0xc50a84 = fcn.00c13e6c;\n        *0xc50a88 = 0;\n        *0xc50a8c = 0;\n        *0xc50a90 = 3;\n        *0xc50a94 = 3;\n        *0xc50a98 = 0;\n        *0xc50a9c = L\"CONTROLGETTEXT\";\n        *0xc50aa8 = fcn.00c13fa3;\n        *0xc50aac = 0;\n        *0xc50ab0 = 0;\n        *0xc50ab4 = 3;\n        *0xc50ab8 = 3;\n        *0xc50abc = 0;\n        *0xc50ac0 = L\"CONTROLHIDE\";\n        *0xc50acc = fcn.00c1402a;\n        *0xc50ad0 = 0;\n        *0xc50ad4 = 0;\n        *0xc50ad8 = 3;\n        *0xc50adc = 3;\n        *0xc50ae0 = 0;\n        *0xc50ae4 = L\"CONTROLLISTVIEW\";\n        *0xc50af0 = fcn.00c14069;\n        *0xc50af4 = 0;\n        *0xc50af8 = 0;\n        *0xc50afc = 4;\n        *0xc50b00 = 6;\n        *0xc50b04 = 0;\n        *0xc50b08 = L\"CONTROLMOVE\";\n        *0xc50b14 = fcn.00c143ec;\n        *0xc50b18 = 0;\n        *0xc50b1c = 0;\n        *0xc50b20 = 5;\n        *0xc50b24 = 7;\n        *0xc50b28 = 0;\n        *0xc50b2c = L\"CONTROLSEND\";\n        *0xc50b38 = fcn.00c144d5;\n        *0xc50b3c = 0;\n        *0xc50b40 = 0;\n        *0xc50b44 = 4;\n        *0xc50b48 = 5;\n        *0xc50b4c = 0;\n        *0xc50b50 = L\"CONTROLSETTEXT\";\n        *0xc50b5c = fcn.00c14568;\n        *0xc50b60 = 0;\n        *0xc50b64 = 0;\n        *0xc50b68 = 4;\n        *0xc50b6c = 5;\n        *0xc50b70 = 0;\n        *0xc50b74 = L\"CONTROLSHOW\";\n        *0xc50b80 = fcn.00c145da;\n        *0xc50b84 = 0;\n        *0xc50b88 = 0;\n        *0xc50b8c = 3;\n        *0xc50b90 = 3;\n        *0xc50b94 = 0;\n        *0xc50b98 = L\"CONTROLTREEVIEW\";\n        *0xc50ba4 = fcn.00c14619;\n        *0xc50ba8 = 0;\n        *0xc50bac = 0;\n        *0xc50bb0 = 4;\n        *0xc50bb4 = 5;\n        *0xc50bb8 = 0;\n        *0xc50bbc = 0xc225dc;\n        *0xc50bc8 = fcn.00ba20e1;\n        *0xc50bcc = 0;\n        *0xc50bd0 = 0;\n        *0xc50bd4 = 1;\n        *0xc50bd8 = 1;\n        *0xc50bdc = 0;\n        *0xc50be0 = 0xc225bc;\n        *0xc50bec = fcn.00c0320b;\n        *0xc50bf0 = 0;\n        *0xc50bf4 = 0;\n        *0xc50bf8 = 1;\n        *0xc50bfc = 2;\n        *0xc50c00 = 0;\n        *0xc50c04 = L\"DIRCOPY\";\n        *0xc50c10 = fcn.00bfa783;\n        *0xc50c14 = 0;\n        *0xc50c18 = 0;\n        *0xc50c1c = 2;\n        *0xc50c20 = 3;\n        *0xc50c24 = 0;\n        *0xc50c28 = L\"DIRCREATE\";\n        *0xc50c34 = fcn.00bfa7fb;\n        *0xc50c38 = 0;\n        *0xc50c3c = 0;\n        *0xc50c40 = 1;\n        *0xc50c44 = 1;\n        *0xc50c48 = 0;\n        *0xc50c4c = L\"DIRGETSIZE\";\n        *0xc50c58 = fcn.00bfa835;\n        *0xc50c5c = 0;\n        *0xc50c60 = 0;\n        *0xc50c64 = 1;\n        *0xc50c68 = 2;\n        *0xc50c6c = 0;\n        *0xc50c70 = L\"DIRMOVE\";\n        *0xc50c7c = fcn.00bfaa43;\n        *0xc50c80 = 0;\n        *0xc50c84 = 0;\n        *0xc50c88 = 2;\n        *0xc50c8c = 3;\n        *0xc50c90 = 0;\n        *0xc50c94 = L\"DIRREMOVE\";\n        *0xc50ca0 = fcn.00bfaabb;\n        *0xc50ca4 = 0;\n        *0xc50ca8 = 0;\n        *0xc50cac = 1;\n        *0xc50cb0 = 2;\n        *0xc50cb4 = 0;\n        *0xc50cb8 = L\"DLLCALL\";\n        *0xc50cc4 = fcn.00c0e237;\n        *0xc50cc8 = 0;\n        *0xc50ccc = 0;\n        *0xc50cd0 = 3;\n        *0xc50cd4 = 0x43;\n        *0xc50cd8 = 0;\n        *0xc50cdc = L\"DLLCALLADDRESS\";\n        *0xc50ce8 = fcn.00c0e24b;\n        *0xc50cec = 0;\n        *0xc50cf0 = 0;\n        *0xc50cf4 = 2;\n        *0xc50cf8 = 0x42;\n        *0xc50cfc = 0;\n        *0xc50d00 = L\"DLLCALLBACKFREE\";\n        *0xc50d0c = fcn.00c0e25f;\n        *0xc50d10 = 0;\n        *0xc50d14 = 0;\n        *0xc50d18 = 1;\n        *0xc50d1c = 1;\n        *0xc50d20 = 0;\n        *0xc50d24 = L\"DLLCALLBACKGETPTR\";\n        *0xc50d30 = fcn.00c0e2de;\n        *0xc50d34 = 0;\n        *0xc50d38 = 0;\n        *0xc50d3c = 1;\n        *0xc50d40 = 1;\n        *0xc50d44 = 0;\n        *0xc50d48 = L\"DLLCALLBACKREGISTER\";\n        *0xc50d54 = fcn.00c0e33e;\n        *0xc50d58 = 0;\n        *0xc50d5c = 0;\n        *0xc50d60 = 3;\n        *0xc50d64 = 3;\n        *0xc50d68 = 0;\n        *0xc50d6c = L\"DLLCLOSE\";\n        *0xc50d78 = fcn.00c0e6ea;\n        *0xc50d7c = 0;\n        *0xc50d80 = 0;\n        *0xc50d84 = 1;\n        *0xc50d88 = 1;\n        *0xc50d8c = 0;\n        *0xc50d90 = L\"DLLOPEN\";\n        *0xc50d9c = fcn.00c0e74b;\n        *0xc50da0 = 0;\n        *0xc50da4 = 0;\n        *0xc50da8 = 1;\n        *0xc50dac = 1;\n        *0xc50db0 = 0;\n        *0xc50db4 = L\"DLLSTRUCTCREATE\";\n        *0xc50dc0 = fcn.00c0e7e5;\n        *0xc50dc4 = 0;\n        *0xc50dc8 = 0;\n        *0xc50dcc = 1;\n        *0xc50dd0 = 2;\n        *0xc50dd4 = 0;\n        *0xc50dd8 = L\"DLLSTRUCTGETDATA\";\n        *0xc50de4 = fcn.00c0e893;\n        *0xc50de8 = 0;\n        *0xc50dec = 0;\n        *0xc50df0 = 2;\n        *0xc50df4 = 3;\n        *0xc50df8 = 0;\n        *0xc50dfc = L\"DLLSTRUCTGETPTR\";\n        *0xc50e08 = fcn.00c0e99b;\n        *0xc50e0c = 0;\n        *0xc50e10 = 0;\n        *0xc50e14 = 1;\n        *0xc50e18 = 2;\n        *0xc50e1c = 0;\n        *0xc50e20 = L\"DLLSTRUCTGETSIZE\";\n        *0xc50e2c = fcn.00c0eab2;\n        *0xc50e30 = 0;\n        *0xc50e34 = 0;\n        *0xc50e38 = 1;\n        *0xc50e3c = 1;\n        *0xc50e40 = 0;\n        *0xc50e44 = L\"DLLSTRUCTSETDATA\";\n        *0xc50e50 = fcn.00c0eb06;\n        *0xc50e54 = 0;\n        *0xc50e58 = 0;\n        *0xc50e5c = 3;\n        *0xc50e60 = 4;\n        *0xc50e64 = 0;\n        *0xc50e68 = L\"DRIVEGETDRIVE\";\n        *0xc50e74 = fcn.00bfab12;\n        *0xc50e78 = 0;\n        *0xc50e7c = 0;\n        *0xc50e80 = 1;\n        *0xc50e84 = 1;\n        *0xc50e88 = 0;\n        *0xc50e8c = L\"DRIVEGETFILESYSTEM\";\n        *0xc50e98 = fcn.00bfad45;\n        *0xc50e9c = 0;\n        *0xc50ea0 = 0;\n        *0xc50ea4 = 1;\n        *0xc50ea8 = 1;\n        *0xc50eac = 0;\n        *0xc50eb0 = L\"DRIVEGETLABEL\";\n        *0xc50ebc = fcn.00bfadf8;\n        *0xc50ec0 = 0;\n        *0xc50ec4 = 0;\n        *0xc50ec8 = 1;\n        *0xc50ecc = 1;\n        *0xc50ed0 = 0;\n        *0xc50ed4 = L\"DRIVEGETSERIAL\";\n        *0xc50ee0 = fcn.00bfaeab;\n        *0xc50ee4 = 0;\n        *0xc50ee8 = 0;\n        *0xc50eec = 1;\n        *0xc50ef0 = 1;\n        *0xc50ef4 = 0;\n        *0xc50ef8 = L\"DRIVEGETTYPE\";\n        *0xc50f04 = fcn.00bfaf7b;\n        *0xc50f08 = 0;\n        *0xc50f0c = 0;\n        *0xc50f10 = 1;\n        *0xc50f14 = 2;\n        *0xc50f18 = 0;\n        *0xc50f1c = L\"DRIVEMAPADD\";\n        *0xc50f28 = fcn.00bfb217;\n        *0xc50f2c = 0;\n        *0xc50f30 = 0;\n        *0xc50f34 = 2;\n        *0xc50f38 = 5;\n        *0xc50f3c = 0;\n        *0xc50f40 = L\"DRIVEMAPDEL\";\n        *0xc50f4c = fcn.00bfb428;\n        *0xc50f50 = 0;\n        *0xc50f54 = 0;\n        *0xc50f58 = 1;\n        *0xc50f5c = 1;\n        *0xc50f60 = 0;\n        *0xc50f64 = L\"DRIVEMAPGET\";\n        *0xc50f70 = fcn.00bfb488;\n        *0xc50f74 = 0;\n        *0xc50f78 = 0;\n        *0xc50f7c = 1;\n        *0xc50f80 = 1;\n        *0xc50f84 = 0;\n        *0xc50f88 = L\"DRIVESETLABEL\";\n        *0xc50f94 = fcn.00bfb50b;\n        *0xc50f98 = 0;\n        *0xc50f9c = 0;\n        *0xc50fa0 = 2;\n        *0xc50fa4 = 2;\n        *0xc50fa8 = 0;\n        *0xc50fac = L\"DRIVESPACEFREE\";\n        *0xc50fb8 = fcn.00bfb59e;\n        *0xc50fbc = 0;\n        *0xc50fc0 = 0;\n        *0xc50fc4 = 1;\n        *0xc50fc8 = 1;\n        *0xc50fcc = 0;\n        *0xc50fd0 = L\"DRIVESPACETOTAL\";\n        *0xc50fdc = fcn.00bfb666;\n        *0xc50fe0 = 0;\n        *0xc50fe4 = 0;\n        *0xc50fe8 = 1;\n        *0xc50fec = 1;\n        *0xc50ff0 = 0;\n        *0xc50ff4 = L\"DRIVESTATUS\";\n        *0xc51000 = fcn.00bfb72e;\n        *0xc51004 = 0;\n        *0xc51008 = 0;\n        *0xc5100c = 1;\n        *0xc51010 = 1;\n        *0xc51014 = 0;\n        *0xc51018 = L\"DUMMYSPEEDTEST\";\n        *0xc51024 = 0xbcb79f;\n        *0xc51028 = 0;\n        *0xc5102c = 0;\n        *0xc51030 = 0;\n        *0xc51034 = 8;\n        *0xc51038 = 0;\n        *0xc5103c = L\"ENVGET\";\n        *0xc51048 = fcn.00c04583;\n        *0xc5104c = 0;\n        *0xc51050 = 0;\n        *0xc51054 = 1;\n        *0xc51058 = 1;\n        *0xc5105c = 0;\n        *0xc51060 = L\"ENVSET\";\n        *0xc5106c = fcn.00c045f1;\n        *0xc51070 = 0;\n        *0xc51074 = 0;\n        *0xc51078 = 1;\n        *0xc5107c = 2;\n        *0xc51080 = 0;\n        *0xc51084 = L\"ENVUPDATE\";\n        *0xc51090 = fcn.00c04655;\n        *0xc51094 = 0;\n        *0xc51098 = 0;\n        *0xc5109c = 0;\n        *0xc510a0 = 0;\n        *0xc510a4 = 0;\n        *0xc510a8 = L\"EVAL\";\n        *0xc510b4 = fcn.00c046ac;\n        *0xc510b8 = 0;\n        *0xc510bc = 0;\n        *0xc510c0 = 1;\n        *0xc510c4 = 1;\n        *0xc510c8 = 0;\n        *0xc510cc = L\"EXECUTE\";\n        *0xc510d8 = fcn.00c0474d;\n        *0xc510dc = 0;\n        *0xc510e0 = 0;\n        *0xc510e4 = 1;\n        *0xc510e8 = 1;\n        *0xc510ec = 0;\n        *0xc510f0 = 0xc225c4;\n        *0xc510fc = fcn.00c03311;\n        *0xc51100 = 0;\n        *0xc51104 = 0;\n        *0xc51108 = 1;\n        *0xc5110c = 1;\n        *0xc51110 = 0;\n        *0xc51114 = L\"FILECHANGEDIR\";\n        *0xc51120 = fcn.00bfb839;\n        *0xc51124 = 0;\n        *0xc51128 = 0;\n        *0xc5112c = 1;\n        *0xc51130 = 1;\n        *0xc51134 = 0;\n        *0xc51138 = 0xc1fbc4;\n        *0xc51144 = fcn.00bfb876;\n        *0xc51148 = 0;\n        *0xc5114c = 0;\n        *0xc51150 = 1;\n        *0xc51154 = 1;\n        *0xc51158 = 0;\n        *0xc5115c = L\"FILECOPY\";\n        *0xc51168 = fcn.00bfb8fe;\n        *0xc5116c = 0;\n        *0xc51170 = 0;\n        *0xc51174 = 2;\n        *0xc51178 = 3;\n        *0xc5117c = 0;\n        *0xc51180 = L\"FILECREATENTFSLINK\";\n        *0xc5118c = fcn.00bfba5f;\n        *0xc51190 = 0;\n        *0xc51194 = 0;\n        *0xc51198 = 2;\n        *0xc5119c = 3;\n        *0xc511a0 = 0;\n        *0xc511a4 = L\"FILECREATESHORTCUT\";\n        *0xc511b0 = fcn.00bfbba6;\n        *0xc511b4 = 0;\n        *0xc511b8 = 0;\n        *0xc511bc = 2;\n        *0xc511c0 = 9;\n        *0xc511c4 = 0;\n        *0xc511c8 = L\"FILEDELETE\";\n        *0xc511d4 = fcn.00bfbe98;\n        *0xc511d8 = 0;\n        *0xc511dc = 0;\n        *0xc511e0 = 1;\n        *0xc511e4 = 1;\n        *0xc511e8 = 0;\n        *0xc511ec = L\"FILEEXISTS\";\n        *0xc511f8 = fcn.00bfbeeb;\n        *0xc511fc = 0;\n        *0xc51200 = 0;\n        *0xc51204 = 1;\n        *0xc51208 = 1;\n        *0xc5120c = 0;\n        *0xc51210 = L\"FILEFINDFIRSTFILE\";\n        *0xc5121c = fcn.00bfbf27;\n        *0xc51220 = 0;\n        *0xc51224 = 0;\n        *0xc51228 = 1;\n        *0xc5122c = 1;\n        *0xc51230 = 0;\n        *0xc51234 = L\"FILEFINDNEXTFILE\";\n        *0xc51240 = fcn.00bfc0cb;\n        *0xc51244 = 0;\n        *0xc51248 = 0;\n        *0xc5124c = 1;\n        *0xc51250 = 2;\n        *0xc51254 = 0;\n        *0xc51258 = L\"FILEFLUSH\";\n        *0xc51264 = fcn.00bfc27a;\n        *0xc51268 = 0;\n        *0xc5126c = 0;\n        *0xc51270 = 1;\n        *0xc51274 = 1;\n        *0xc51278 = 0;\n        *0xc5127c = L\"FILEGETATTRIB\";\n        *0xc51288 = fcn.00bfc2ce;\n        *0xc5128c = 0;\n        *0xc51290 = 0;\n        *0xc51294 = 1;\n        *0xc51298 = 1;\n        *0xc5129c = 0;\n        *0xc512a0 = L\"FILEGETENCODING\";\n        *0xc512ac = fcn.00bfc33f;\n        *0xc512b0 = 0;\n        *0xc512b4 = 0;\n        *0xc512b8 = 1;\n        *0xc512bc = 2;\n        *0xc512c0 = 0;\n        *0xc512c4 = L\"FILEGETLONGNAME\";\n        *0xc512d0 = fcn.00bfc43a;\n        *0xc512d4 = 0;\n        *0xc512d8 = 0;\n        *0xc512dc = 1;\n        *0xc512e0 = 2;\n        *0xc512e4 = 0;\n        *0xc512e8 = L\"FILEGETPOS\";\n        *0xc512f4 = fcn.00bfc4e6;\n        *0xc512f8 = 0;\n        *0xc512fc = 0;\n        *0xc51300 = 1;\n        *0xc51304 = 1;\n        *0xc51308 = 0;\n        *0xc5130c = L\"FILEGETSHORTCUT\";\n        *0xc51318 = fcn.00bfc602;\n        *0xc5131c = 0;\n        *0xc51320 = 0;\n        *0xc51324 = 1;\n        *0xc51328 = 1;\n        *0xc5132c = 0;\n        *0xc51330 = L\"FILEGETSHORTNAME\";\n        *0xc5133c = fcn.00bfc55e;\n        *0xc51340 = 0;\n        *0xc51344 = 0;\n        *0xc51348 = 1;\n        *0xc5134c = 2;\n        *0xc51350 = 0;\n        *0xc51354 = L\"FILEGETSIZE\";\n        *0xc51360 = fcn.00bfc93c;\n        *0xc51364 = 0;\n        *0xc51368 = 0;\n        *0xc5136c = 1;\n        *0xc51370 = 1;\n        *0xc51374 = 0;\n        *0xc51378 = L\"FILEGETTIME\";\n        *0xc51384 = fcn.00bfc9c7;\n        *0xc51388 = 0;\n        *0xc5138c = 0;\n        *0xc51390 = 1;\n        *0xc51394 = 3;\n        *0xc51398 = 0;\n        *0xc5139c = L\"FILEGETVERSION\";\n        *0xc513a8 = fcn.00bfcd3e;\n        *0xc513ac = 0;\n        *0xc513b0 = 0;\n        *0xc513b4 = 1;\n        *0xc513b8 = 2;\n        *0xc513bc = 0;\n        *0xc513c0 = L\"FILEINSTALL\";\n        *0xc513cc = fcn.00bfcde5;\n        *0xc513d0 = 0;\n        *0xc513d4 = 0;\n        *0xc513d8 = 2;\n        *0xc513dc = 3;\n        *0xc513e0 = 0;\n        *0xc513e4 = L\"FILEMOVE\";\n        *0xc513f0 = fcn.00bfd151;\n        *0xc513f4 = 0;\n        *0xc513f8 = 0;\n        *0xc513fc = 2;\n        *0xc51400 = 3;\n        *0xc51404 = 0;\n        *0xc51408 = L\"FILEOPEN\";\n        *0xc51414 = fcn.00bfd2e6;\n        *0xc51418 = 0;\n        *0xc5141c = 0;\n        *0xc51420 = 1;\n        *0xc51424 = 2;\n        *0xc51428 = 0;\n        *0xc5142c = L\"FILEOPENDIALOG\";\n        *0xc51438 = fcn.00bfd567;\n        *0xc5143c = 0;\n        *0xc51440 = 0;\n        *0xc51444 = 3;\n        *0xc51448 = 6;\n        *0xc5144c = 0;\n        *0xc51450 = L\"FILEREAD\";\n        *0xc5145c = fcn.00ba2123;\n        *0xc51460 = 0;\n        *0xc51464 = 0;\n        *0xc51468 = 1;\n        *0xc5146c = 2;\n        *0xc51470 = 0;\n        *0xc51474 = L\"FILEREADLINE\";\n        *0xc51480 = fcn.00ba222e;\n        *0xc51484 = 0;\n        *0xc51488 = 0;\n        *0xc5148c = 1;\n        *0xc51490 = 2;\n        *0xc51494 = 0;\n        *0xc51498 = L\"FILEREADTOARRAY\";\n        *0xc514a4 = fcn.00bfd57f;\n        *0xc514a8 = 0;\n        *0xc514ac = 0;\n        *0xc514b0 = 1;\n        *0xc514b4 = 1;\n        *0xc514b8 = 0;\n        *0xc514bc = L\"FILERECYCLE\";\n        *0xc514c8 = fcn.00bfd6fc;\n        *0xc514cc = 0;\n        *0xc514d0 = 0;\n        *0xc514d4 = 1;\n        *0xc514d8 = 1;\n        *0xc514dc = 0;\n        *0xc514e0 = L\"FILERECYCLEEMPTY\";\n        *0xc514ec = fcn.00bfd797;\n        *0xc514f0 = 0;\n        *0xc514f4 = 0;\n        *0xc514f8 = 0;\n        *0xc514fc = 1;\n        *0xc51500 = 0;\n        *0xc51504 = L\"FILESAVEDIALOG\";\n        *0xc51510 = fcn.00bfd7e0;\n        *0xc51514 = 0;\n        *0xc51518 = 0;\n        *0xc5151c = 3;\n        *0xc51520 = 6;\n        *0xc51524 = 0;\n        *0xc51528 = L\"FILESELECTFOLDER\";\n        *0xc51534 = fcn.00bfd7f8;\n        *0xc51538 = 0;\n        *0xc5153c = 0;\n        *0xc51540 = 2;\n        *0xc51544 = 5;\n        *0xc51548 = 0;\n        *0xc5154c = L\"FILESETATTRIB\";\n        *0xc51558 = fcn.00bfdb04;\n        *0xc5155c = 0;\n        *0xc51560 = 0;\n        *0xc51564 = 2;\n        *0xc51568 = 3;\n        *0xc5156c = 0;\n        *0xc51570 = L\"FILESETEND\";\n        *0xc5157c = fcn.00bfddb2;\n        *0xc51580 = 0;\n        *0xc51584 = 0;\n        *0xc51588 = 1;\n        *0xc5158c = 1;\n        *0xc51590 = 0;\n        *0xc51594 = L\"FILESETPOS\";\n        *0xc515a0 = fcn.00bfde0e;\n        *0xc515a4 = 0;\n        *0xc515a8 = 0;\n        *0xc515ac = 3;\n        *0xc515b0 = 3;\n        *0xc515b4 = 0;\n        *0xc515b8 = L\"FILESETTIME\";\n        *0xc515c4 = fcn.00bfde85;\n        *0xc515c8 = 0;\n        *0xc515cc = 0;\n        *0xc515d0 = 2;\n        *0xc515d4 = 4;\n        *0xc515d8 = 0;\n        *0xc515dc = L\"FILEWRITE\";\n        *0xc515e8 = fcn.00bfe0c8;\n        *0xc515ec = 0;\n        *0xc515f0 = 0;\n        *0xc515f4 = 2;\n        *0xc515f8 = 2;\n        *0xc515fc = 0;\n        *0xc51600 = L\"FILEWRITELINE\";\n        *0xc5160c = fcn.00bfe0dc;\n        *0xc51610 = 0;\n        *0xc51614 = 0;\n        *0xc51618 = 2;\n        *0xc5161c = 2;\n        *0xc51620 = 0;\n        *0xc51624 = L\"FLOOR\";\n        *0xc51630 = fcn.00c03353;\n        *0xc51634 = 0;\n        *0xc51638 = 0;\n        *0xc5163c = 1;\n        *0xc51640 = 1;\n        *0xc51644 = 0;\n        *0xc51648 = L\"FTPSETPROXY\";\n        *0xc51654 = fcn.00c01bee;\n        *0xc51658 = 0;\n        *0xc5165c = 0;\n        *0xc51660 = 1;\n        *0xc51664 = 4;\n        *0xc51668 = 0;\n        *0xc5166c = L\"FUNCNAME\";\n        *0xc51678 = fcn.00c047fe;\n        *0xc5167c = 0;\n        *0xc51680 = 0;\n        *0xc51684 = 1;\n        *0xc51688 = 1;\n        *0xc5168c = 0;\n        *0xc51690 = L\"GUICREATE\";\n        *0xc5169c = fcn.00ba236a;\n        *0xc516a0 = 0;\n        *0xc516a4 = 0;\n        *0xc516a8 = 1;\n        *0xc516ac = 8;\n        *0xc516b0 = 0;\n        *0xc516b4 = L\"GUICTRLCREATEAVI\";\n        *0xc516c0 = fcn.00bff8be;\n        *0xc516c4 = 0;\n        *0xc516c8 = 0;\n        *0xc516cc = 4;\n        *0xc516d0 = 8;\n        *0xc516d4 = 0;\n        *0xc516d8 = L\"GUICTRLCREATEBUTTON\";\n        *0xc516e4 = fcn.00bff8d2;\n        *0xc516e8 = 0;\n        *0xc516ec = 0;\n        *0xc516f0 = 3;\n        *0xc516f4 = 7;\n        *0xc516f8 = 0;\n        *0xc516fc = L\"GUICTRLCREATECHECKBOX\";\n        *0xc51708 = fcn.00bff8e6;\n        *0xc5170c = 0;\n        *0xc51710 = 0;\n        *0xc51714 = 3;\n        *0xc51718 = 7;\n        *0xc5171c = 0;\n        *0xc51720 = L\"GUICTRLCREATECOMBO\";\n        *0xc5172c = fcn.00bff8fa;\n        *0xc51730 = 0;\n        *0xc51734 = 0;\n        *0xc51738 = 3;\n        *0xc5173c = 7;\n        *0xc51740 = 0;\n        *0xc51744 = L\"GUICTRLCREATECONTEXTMENU\";\n        *0xc51750 = fcn.00bff90e;\n        *0xc51754 = 0;\n        *0xc51758 = 0;\n        *0xc5175c = 0;\n        *0xc51760 = 1;\n        *0xc51764 = 0;\n        *0xc51768 = L\"GUICTRLCREATEDATE\";\n        *0xc51774 = fcn.00bff922;\n        *0xc51778 = 0;\n        *0xc5177c = 0;\n        *0xc51780 = 3;\n        *0xc51784 = 7;\n        *0xc51788 = 0;\n        *0xc5178c = L\"GUICTRLCREATEDUMMY\";\n        *0xc51798 = fcn.00bff936;\n        *0xc5179c = 0;\n        *0xc517a0 = 0;\n        *0xc517a4 = 0;\n        *0xc517a8 = 0;\n        *0xc517ac = 0;\n        *0xc517b0 = L\"GUICTRLCREATEEDIT\";\n        *0xc517bc = fcn.00bff94a;\n        *0xc517c0 = 0;\n        *0xc517c4 = 0;\n        *0xc517c8 = 3;\n        *0xc517cc = 7;\n        *0xc517d0 = 0;\n        *0xc517d4 = L\"GUICTRLCREATEGRAPHIC\";\n        *0xc517e0 = fcn.00ba245d;\n        *0xc517e4 = 0;\n        *0xc517e8 = 0;\n        *0xc517ec = 2;\n        *0xc517f0 = 5;\n        *0xc517f4 = 0;\n        *0xc517f8 = L\"GUICTRLCREATEGROUP\";\n        *0xc51804 = fcn.00bff95e;\n        *0xc51808 = 0;\n        *0xc5180c = 0;\n        *0xc51810 = 3;\n        *0xc51814 = 7;\n        *0xc51818 = 0;\n        *0xc5181c = L\"GUICTRLCREATEICON\";\n        *0xc51828 = fcn.00bff972;\n        *0xc5182c = 0;\n        *0xc51830 = 0;\n        *0xc51834 = 4;\n        *0xc51838 = 8;\n        *0xc5183c = 0;\n        *0xc51840 = L\"GUICTRLCREATEINPUT\";\n        *0xc5184c = fcn.00bff986;\n        *0xc51850 = 0;\n        *0xc51854 = 0;\n        *0xc51858 = 3;\n        *0xc5185c = 7;\n        *0xc51860 = 0;\n        *0xc51864 = L\"GUICTRLCREATELABEL\";\n        *0xc51870 = fcn.00bff99a;\n        *0xc51874 = 0;\n        *0xc51878 = 0;\n        *0xc5187c = 3;\n        *0xc51880 = 7;\n        *0xc51884 = 0;\n        *0xc51888 = L\"GUICTRLCREATELIST\";\n        *0xc51894 = fcn.00bff9ae;\n        *0xc51898 = 0;\n        *0xc5189c = 0;\n        *0xc518a0 = 3;\n        *0xc518a4 = 7;\n        *0xc518a8 = 0;\n        *0xc518ac = L\"GUICTRLCREATELISTVIEW\";\n        *0xc518b8 = fcn.00bff9c2;\n        *0xc518bc = 0;\n        *0xc518c0 = 0;\n        *0xc518c4 = 3;\n        *0xc518c8 = 7;\n        *0xc518cc = 0;\n        *0xc518d0 = L\"GUICTRLCREATELISTVIEWITEM\";\n        *0xc518dc = fcn.00bff9d6;\n        *0xc518e0 = 0;\n        *0xc518e4 = 0;\n        *0xc518e8 = 2;\n        *0xc518ec = 2;\n        *0xc518f0 = 0;\n        *0xc518f4 = L\"GUICTRLCREATEMENU\";\n        *0xc51900 = fcn.00bff9ea;\n        *0xc51904 = 0;\n        *0xc51908 = 0;\n        *0xc5190c = 1;\n        *0xc51910 = 3;\n        *0xc51914 = 0;\n        *0xc51918 = L\"GUICTRLCREATEMENUITEM\";\n        *0xc51924 = fcn.00bff9fe;\n        *0xc51928 = 0;\n        *0xc5192c = 0;\n        *0xc51930 = 2;\n        *0xc51934 = 4;\n        *0xc51938 = 0;\n        *0xc5193c = L\"GUICTRLCREATEMONTHCAL\";\n        *0xc51948 = fcn.00bffa12;\n        *0xc5194c = 0;\n        *0xc51950 = 0;\n        *0xc51954 = 3;\n        *0xc51958 = 7;\n        *0xc5195c = 0;\n        *0xc51960 = L\"GUICTRLCREATEOBJ\";\n        *0xc5196c = fcn.00bffa26;\n        *0xc51970 = 0;\n        *0xc51974 = 0;\n        *0xc51978 = 3;\n        *0xc5197c = 7;\n        *0xc51980 = 0;\n        *0xc51984 = L\"GUICTRLCREATEPIC\";\n        *0xc51990 = fcn.00bffa3a;\n        *0xc51994 = 0;\n        *0xc51998 = 0;\n        *0xc5199c = 3;\n        *0xc519a0 = 7;\n        *0xc519a4 = 0;\n        *0xc519a8 = L\"GUICTRLCREATEPROGRESS\";\n        *0xc519b4 = fcn.00bffa4e;\n        *0xc519b8 = 0;\n        *0xc519bc = 0;\n        *0xc519c0 = 2;\n        *0xc519c4 = 6;\n        *0xc519c8 = 0;\n        *0xc519cc = L\"GUICTRLCREATERADIO\";\n        *0xc519d8 = fcn.00bffa62;\n        *0xc519dc = 0;\n        *0xc519e0 = 0;\n        *0xc519e4 = 3;\n        *0xc519e8 = 7;\n        *0xc519ec = 0;\n        *0xc519f0 = L\"GUICTRLCREATESLIDER\";\n        *0xc519fc = fcn.00bffa76;\n        *0xc51a00 = 0;\n        *0xc51a04 = 0;\n        *0xc51a08 = 2;\n        *0xc51a0c = 6;\n        *0xc51a10 = 0;\n        *0xc51a14 = L\"GUICTRLCREATETAB\";\n        *0xc51a20 = fcn.00bffa8a;\n        *0xc51a24 = 0;\n        *0xc51a28 = 0;\n        *0xc51a2c = 2;\n        *0xc51a30 = 6;\n        *0xc51a34 = 0;\n        *0xc51a38 = L\"GUICTRLCREATETABITEM\";\n        *0xc51a44 = fcn.00bffa9e;\n        *0xc51a48 = 0;\n        *0xc51a4c = 0;\n        *0xc51a50 = 1;\n        *0xc51a54 = 1;\n        *0xc51a58 = 0;\n        *0xc51a5c = L\"GUICTRLCREATETREEVIEW\";\n        *0xc51a68 = fcn.00bffab2;\n        *0xc51a6c = 0;\n        *0xc51a70 = 0;\n        *0xc51a74 = 2;\n        *0xc51a78 = 6;\n        *0xc51a7c = 0;\n        *0xc51a80 = L\"GUICTRLCREATETREEVIEWITEM\";\n        *0xc51a8c = fcn.00bffac6;\n        *0xc51a90 = 0;\n        *0xc51a94 = 0;\n        *0xc51a98 = 2;\n        *0xc51a9c = 2;\n        *0xc51aa0 = 0;\n        *0xc51aa4 = L\"GUICTRLCREATEUPDOWN\";\n        *0xc51ab0 = fcn.00bffada;\n        *0xc51ab4 = 0;\n        *0xc51ab8 = 0;\n        *0xc51abc = 1;\n        *0xc51ac0 = 2;\n        *0xc51ac4 = 0;\n        *0xc51ac8 = L\"GUICTRLDELETE\";\n        *0xc51ad4 = fcn.00ba2471;\n        *0xc51ad8 = 0;\n        *0xc51adc = 0;\n        *0xc51ae0 = 1;\n        *0xc51ae4 = 1;\n        *0xc51ae8 = 0;\n        *0xc51aec = L\"GUICTRLGETHANDLE\";\n        *0xc51af8 = fcn.00bffaee;\n        *0xc51afc = 0;\n        *0xc51b00 = 0;\n        *0xc51b04 = 1;\n        *0xc51b08 = 1;\n        *0xc51b0c = 0;\n        *0xc51b10 = L\"GUICTRLGETSTATE\";\n        *0xc51b1c = fcn.00bffb3b;\n        *0xc51b20 = 0;\n        *0xc51b24 = 0;\n        *0xc51b28 = 1;\n        *0xc51b2c = 1;\n        *0xc51b30 = 0;\n        *0xc51b34 = L\"GUICTRLREAD\";\n        *0xc51b40 = fcn.00bffb70;\n        *0xc51b44 = 0;\n        *0xc51b48 = 0;\n        *0xc51b4c = 1;\n        *0xc51b50 = 2;\n        *0xc51b54 = 0;\n        *0xc51b58 = L\"GUICTRLRECVMSG\";\n        *0xc51b64 = fcn.00bffbf6;\n        *0xc51b68 = 0;\n        *0xc51b6c = 0;\n        *0xc51b70 = 2;\n        *0xc51b74 = 4;\n        *0xc51b78 = 0;\n        *0xc51b7c = L\"GUICTRLREGISTERLISTVIEWSORT\";\n        *0xc51b88 = fcn.00bffd79;\n        *0xc51b8c = 0;\n        *0xc51b90 = 0;\n        *0xc51b94 = 2;\n        *0xc51b98 = 2;\n        *0xc51b9c = 0;\n        *0xc51ba0 = L\"GUICTRLSENDMSG\";\n        *0xc51bac = fcn.00bffeaf;\n        *0xc51bb0 = 0;\n        *0xc51bb4 = 0;\n        *0xc51bb8 = 4;\n        *0xc51bbc = 4;\n        *0xc51bc0 = 0;\n        *0xc51bc4 = L\"GUICTRLSENDTODUMMY\";\n        *0xc51bd0 = fcn.00bfffee;\n        *0xc51bd4 = 0;\n        *0xc51bd8 = 0;\n        *0xc51bdc = 1;\n        *0xc51be0 = 2;\n        *0xc51be4 = 0;\n        *0xc51be8 = L\"GUICTRLSETBKCOLOR\";\n        *0xc51bf4 = fcn.00c00060;\n        *0xc51bf8 = 0;\n        *0xc51bfc = 0;\n        *0xc51c00 = 2;\n        *0xc51c04 = 2;\n        *0xc51c08 = 0;\n        *0xc51c0c = L\"GUICTRLSETCOLOR\";\n        *0xc51c18 = fcn.00c000bc;\n        *0xc51c1c = 0;\n        *0xc51c20 = 0;\n        *0xc51c24 = 2;\n        *0xc51c28 = 2;\n        *0xc51c2c = 0;\n        *0xc51c30 = L\"GUICTRLSETCURSOR\";\n        *0xc51c3c = fcn.00c00118;\n        *0xc51c40 = 0;\n        *0xc51c44 = 0;\n        *0xc51c48 = 2;\n        *0xc51c4c = 2;\n        *0xc51c50 = 0;\n        *0xc51c54 = L\"GUICTRLSETDATA\";\n        *0xc51c60 = fcn.00c00158;\n        *0xc51c64 = 0;\n        *0xc51c68 = 0;\n        *0xc51c6c = 2;\n        *0xc51c70 = 3;\n        *0xc51c74 = 0;\n        *0xc51c78 = L\"GUICTRLSETDEFBKCOLOR\";\n        *0xc51c84 = fcn.00c001dc;\n        *0xc51c88 = 0;\n        *0xc51c8c = 0;\n        *0xc51c90 = 1;\n        *0xc51c94 = 2;\n        *0xc51c98 = 0;\n        *0xc51c9c = L\"GUICTRLSETDEFCOLOR\";\n        *0xc51ca8 = fcn.00c00231;\n        *0xc51cac = 0;\n        *0xc51cb0 = 0;\n        *0xc51cb4 = 1;\n        *0xc51cb8 = 2;\n        *0xc51cbc = 0;\n        *0xc51cc0 = L\"GUICTRLSETFONT\";\n        *0xc51ccc = fcn.00c00286;\n        *0xc51cd0 = 0;\n        *0xc51cd4 = 0;\n        *0xc51cd8 = 2;\n        *0xc51cdc = 6;\n        *0xc51ce0 = 0;\n        *0xc51ce4 = L\"GUICTRLSETGRAPHIC\";\n        *0xc51cf0 = fcn.00ba24ab;\n        *0xc51cf4 = 0;\n        *0xc51cf8 = 0;\n        *0xc51cfc = 2;\n        *0xc51d00 = 8;\n        *0xc51d04 = 0;\n        *0xc51d08 = L\"GUICTRLSETIMAGE\";\n        *0xc51d14 = fcn.00c00370;\n        *0xc51d18 = 0;\n        *0xc51d1c = 0;\n        *0xc51d20 = 2;\n        *0xc51d24 = 4;\n        *0xc51d28 = 0;\n        *0xc51d2c = L\"GUICTRLSETLIMIT\";\n        *0xc51d38 = fcn.00c0041c;\n        *0xc51d3c = 0;\n        *0xc51d40 = 0;\n        *0xc51d44 = 2;\n        *0xc51d48 = 3;\n        *0xc51d4c = 0;\n        *0xc51d50 = L\"GUICTRLSETONEVENT\";\n        *0xc51d5c = fcn.00c00470;\n        *0xc51d60 = 0;\n        *0xc51d64 = 0;\n        *0xc51d68 = 2;\n        *0xc51d6c = 2;\n        *0xc51d70 = 0;\n        *0xc51d74 = L\"GUICTRLSETPOS\";\n        *0xc51d80 = fcn.00c00576;\n        *0xc51d84 = 0;\n        *0xc51d88 = 0;\n        *0xc51d8c = 2;\n        *0xc51d90 = 5;\n        *0xc51d94 = 0;\n        *0xc51d98 = L\"GUICTRLSETRESIZING\";\n        *0xc51da4 = fcn.00c00602;\n        *0xc51da8 = 0;\n        *0xc51dac = 0;\n        *0xc51db0 = 2;\n        *0xc51db4 = 2;\n        *0xc51db8 = 0;\n        *0xc51dbc = L\"GUICTRLSETSTATE\";\n        *0xc51dc8 = fcn.00c0064c;\n        *0xc51dcc = 0;\n        *0xc51dd0 = 0;\n        *0xc51dd4 = 2;\n        *0xc51dd8 = 2;\n        *0xc51ddc = 0;\n        *0xc51de0 = L\"GUICTRLSETSTYLE\";\n        *0xc51dec = fcn.00c0068c;\n        *0xc51df0 = 0;\n        *0xc51df4 = 0;\n        *0xc51df8 = 2;\n        *0xc51dfc = 3;\n        *0xc51e00 = 0;\n        *0xc51e04 = L\"GUICTRLSETTIP\";\n        *0xc51e10 = fcn.00c006e1;\n        *0xc51e14 = 0;\n        *0xc51e18 = 0;\n        *0xc51e1c = 2;\n        *0xc51e20 = 5;\n        *0xc51e24 = 0;\n        *0xc51e28 = L\"GUIDELETE\";\n        *0xc51e34 = fcn.00c007ce;\n        *0xc51e38 = 0;\n        *0xc51e3c = 0;\n        *0xc51e40 = 0;\n        *0xc51e44 = 1;\n        *0xc51e48 = 0;\n        *0xc51e4c = L\"GUIGETCURSORINFO\";\n        *0xc51e58 = fcn.00c0080a;\n        *0xc51e5c = 0;\n        *0xc51e60 = 0;\n        *0xc51e64 = 0;\n        *0xc51e68 = 1;\n        *0xc51e6c = 0;\n        *0xc51e70 = L\"GUIGETMSG\";\n        *0xc51e7c = fcn.00c0094f;\n        *0xc51e80 = 0;\n        *0xc51e84 = 0;\n        *0xc51e88 = 0;\n        *0xc51e8c = 1;\n        *0xc51e90 = 0;\n        *0xc51e94 = L\"GUIGETSTYLE\";\n        *0xc51ea0 = fcn.00c00ae0;\n        *0xc51ea4 = 0;\n        *0xc51ea8 = 0;\n        *0xc51eac = 0;\n        *0xc51eb0 = 1;\n        *0xc51eb4 = 0;\n        *0xc51eb8 = L\"GUIREGISTERMSG\";\n        *0xc51ec4 = fcn.00c00ba9;\n        *0xc51ec8 = 0;\n        *0xc51ecc = 0;\n        *0xc51ed0 = 2;\n        *0xc51ed4 = 2;\n        *0xc51ed8 = 0;\n        *0xc51edc = L\"GUISETACCELERATORS\";\n        *0xc51ee8 = fcn.00c00cb3;\n        *0xc51eec = 0;\n        *0xc51ef0 = 0;\n        *0xc51ef4 = 1;\n        *0xc51ef8 = 2;\n        *0xc51efc = 0;\n        *0xc51f00 = L\"GUISETBKCOLOR\";\n        *0xc51f0c = fcn.00ba2572;\n        *0xc51f10 = 0;\n        *0xc51f14 = 0;\n        *0xc51f18 = 1;\n        *0xc51f1c = 2;\n        *0xc51f20 = 0;\n        *0xc51f24 = L\"GUISETCOORD\";\n        *0xc51f30 = fcn.00c00e80;\n        *0xc51f34 = 0;\n        *0xc51f38 = 0;\n        *0xc51f3c = 2;\n        *0xc51f40 = 5;\n        *0xc51f44 = 0;\n        *0xc51f48 = L\"GUISETCURSOR\";\n        *0xc51f54 = fcn.00c00f09;\n        *0xc51f58 = 0;\n        *0xc51f5c = 0;\n        *0xc51f60 = 0;\n        *0xc51f64 = 3;\n        *0xc51f68 = 0;\n        *0xc51f6c = L\"GUISETFONT\";\n        *0xc51f78 = fcn.00c00f6f;\n        *0xc51f7c = 0;\n        *0xc51f80 = 0;\n        *0xc51f84 = 1;\n        *0xc51f88 = 6;\n        *0xc51f8c = 0;\n        *0xc51f90 = L\"GUISETHELP\";\n        *0xc51f9c = fcn.00c01072;\n        *0xc51fa0 = 0;\n        *0xc51fa4 = 0;\n        *0xc51fa8 = 1;\n        *0xc51fac = 2;\n        *0xc51fb0 = 0;\n        *0xc51fb4 = L\"GUISETICON\";\n        *0xc51fc0 = fcn.00c010cc;\n        *0xc51fc4 = 0;\n        *0xc51fc8 = 0;\n        *0xc51fcc = 1;\n        *0xc51fd0 = 3;\n        *0xc51fd4 = 0;\n        *0xc51fd8 = L\"GUISETONEVENT\";\n        *0xc51fe4 = fcn.00ba25c7;\n        *0xc51fe8 = 0;\n        *0xc51fec = 0;\n        *0xc51ff0 = 2;\n        *0xc51ff4 = 3;\n        *0xc51ff8 = 0;\n        *0xc51ffc = L\"GUISETSTATE\";\n        *0xc52008 = fcn.00ba26bd;\n        *0xc5200c = 0;\n        *0xc52010 = 0;\n        *0xc52014 = 0;\n        *0xc52018 = 2;\n        *0xc5201c = 0;\n        *0xc52020 = L\"GUISETSTYLE\";\n        *0xc5202c = fcn.00c0113e;\n        *0xc52030 = 0;\n        *0xc52034 = 0;\n        *0xc52038 = 1;\n        *0xc5203c = 3;\n        *0xc52040 = 0;\n        *0xc52044 = L\"GUISTARTGROUP\";\n        *0xc52050 = fcn.00c011a2;\n        *0xc52054 = 0;\n        *0xc52058 = 0;\n        *0xc5205c = 0;\n        *0xc52060 = 1;\n        *0xc52064 = 0;\n        *0xc52068 = L\"GUISWITCH\";\n        *0xc52074 = fcn.00c011ed;\n        *0xc52078 = 0;\n        *0xc5207c = 0;\n        *0xc52080 = 1;\n        *0xc52084 = 2;\n        *0xc52088 = 0;\n        *0xc5208c = 0xc20984;\n        *0xc52098 = fcn.00ba270e;\n        *0xc5209c = 0;\n        *0xc520a0 = 0;\n        *0xc520a4 = 1;\n        *0xc520a8 = 2;\n        *0xc520ac = 0;\n        *0xc520b0 = L\"HOTKEYSET\";\n        *0xc520bc = fcn.00ba2817;\n        *0xc520c0 = 0;\n        *0xc520c4 = 0;\n        *0xc520c8 = 1;\n        *0xc520cc = 2;\n        *0xc520d0 = 0;\n        *0xc520d4 = L\"HTTPSETPROXY\";\n        *0xc520e0 = fcn.00c01e5c;\n        *0xc520e4 = 0;\n        *0xc520e8 = 0;\n        *0xc520ec = 1;\n        *0xc520f0 = 4;\n        *0xc520f4 = 0;\n        *0xc520f8 = L\"HTTPSETUSERAGENT\";\n        *0xc52104 = fcn.00c01e70;\n        *0xc52108 = 0;\n        *0xc5210c = 0;\n        *0xc52110 = 1;\n        *0xc52114 = 1;\n        *0xc52118 = 0;\n        *0xc5211c = L\"HWND\";\n        *0xc52128 = fcn.00c033ba;\n        *0xc5212c = 0;\n        *0xc52130 = 0;\n        *0xc52134 = 1;\n        *0xc52138 = 1;\n        *0xc5213c = 0;\n        *0xc52140 = L\"INETCLOSE\";\n        *0xc5214c = fcn.00c01ed4;\n        *0xc52150 = 0;\n        *0xc52154 = 0;\n        *0xc52158 = 1;\n        *0xc5215c = 1;\n        *0xc52160 = 0;\n        *0xc52164 = L\"INETGET\";\n        *0xc52170 = fcn.00c01f45;\n        *0xc52174 = 0;\n        *0xc52178 = 0;\n        *0xc5217c = 2;\n        *0xc52180 = 4;\n        *0xc52184 = 0;\n        *0xc52188 = L\"INETGETINFO\";\n        *0xc52194 = fcn.00c02083;\n        *0xc52198 = 0;\n        *0xc5219c = 0;\n        *0xc521a0 = 0;\n        *0xc521a4 = 2;\n        *0xc521a8 = 0;\n        *0xc521ac = L\"INETGETSIZE\";\n        *0xc521b8 = fcn.00c02309;\n        *0xc521bc = 0;\n        *0xc521c0 = 0;\n        *0xc521c4 = 1;\n        *0xc521c8 = 2;\n        *0xc521cc = 0;\n        *0xc521d0 = L\"INETREAD\";\n        *0xc521dc = fcn.00c023d1;\n        *0xc521e0 = 0;\n        *0xc521e4 = 0;\n        *0xc521e8 = 1;\n        *0xc521ec = 2;\n        *0xc521f0 = 0;\n        *0xc521f4 = L\"INIDELETE\";\n        *0xc52200 = fcn.00bfe0f0;\n        *0xc52204 = 0;\n        *0xc52208 = 0;\n        *0xc5220c = 2;\n        *0xc52210 = 3;\n        *0xc52214 = 0;\n        *0xc52218 = L\"INIREAD\";\n        *0xc52224 = fcn.00bfe1dd;\n        *0xc52228 = 0;\n        *0xc5222c = 0;\n        *0xc52230 = 4;\n        *0xc52234 = 4;\n        *0xc52238 = 0;\n        *0xc5223c = L\"INIREADSECTION\";\n        *0xc52248 = fcn.00bfe29d;\n        *0xc5224c = 0;\n        *0xc52250 = 0;\n        *0xc52254 = 2;\n        *0xc52258 = 2;\n        *0xc5225c = 0;\n        *0xc52260 = L\"INIREADSECTIONNAMES\";\n        *0xc5226c = fcn.00bfe5ce;\n        *0xc52270 = 0;\n        *0xc52274 = 0;\n        *0xc52278 = 1;\n        *0xc5227c = 1;\n        *0xc52280 = 0;\n        *0xc52284 = L\"INIRENAMESECTION\";\n        *0xc52290 = fcn.00bfe7dc;\n        *0xc52294 = 0;\n        *0xc52298 = 0;\n        *0xc5229c = 3;\n        *0xc522a0 = 4;\n        *0xc522a4 = 0;\n        *0xc522a8 = L\"INIWRITE\";\n        *0xc522b4 = fcn.00bfe95a;\n        *0xc522b8 = 0;\n        *0xc522bc = 0;\n        *0xc522c0 = 4;\n        *0xc522c4 = 4;\n        *0xc522c8 = 0;\n        *0xc522cc = L\"INIWRITESECTION\";\n        *0xc522d8 = fcn.00bfea02;\n        *0xc522dc = 0;\n        *0xc522e0 = 0;\n        *0xc522e4 = 3;\n        *0xc522e8 = 4;\n        *0xc522ec = 0;\n        *0xc522f0 = L\"INPUTBOX\";\n        *0xc522fc = fcn.00c04881;\n        *0xc52300 = 0;\n        *0xc52304 = 0;\n        *0xc52308 = 2;\n        *0xc5230c = 10;\n        *0xc52310 = 0;\n        *0xc52314 = 0xc20b2c;\n        *0xc52320 = fcn.00ba2a79;\n        *0xc52324 = 0;\n        *0xc52328 = 0;\n        *0xc5232c = 1;\n        *0xc52330 = 2;\n        *0xc52334 = 0;\n        *0xc52338 = L\"ISADMIN\";\n        *0xc52344 = fcn.00c04c55;\n        *0xc52348 = 0;\n        *0xc5234c = 0;\n        *0xc52350 = 0;\n        *0xc52354 = 0;\n        *0xc52358 = 0;\n        *0xc5235c = L\"ISARRAY\";\n        *0xc52368 = fcn.00c03426;\n        *0xc5236c = 0;\n        *0xc52370 = 0;\n        *0xc52374 = 1;\n        *0xc52378 = 1;\n        *0xc5237c = 1;\n        *0xc52380 = L\"ISBINARY\";\n        *0xc5238c = fcn.00c0345b;\n        *0xc52390 = 0;\n        *0xc52394 = 0;\n        *0xc52398 = 1;\n        *0xc5239c = 1;\n        *0xc523a0 = 1;\n        *0xc523a4 = L\"ISBOOL\";\n        *0xc523b0 = fcn.00c04c7d;\n        *0xc523b4 = 0;\n        *0xc523b8 = 0;\n        *0xc523bc = 1;\n        *0xc523c0 = 1;\n        *0xc523c4 = 1;\n        *0xc523c8 = L\"ISDECLARED\";\n        *0xc523d4 = fcn.00c04cb2;\n        *0xc523d8 = 0;\n        *0xc523dc = 0;\n        *0xc523e0 = 1;\n        *0xc523e4 = 1;\n        *0xc523e8 = 0;\n        *0xc523ec = L\"ISDLLSTRUCT\";\n        *0xc523f8 = fcn.00c0ec12;\n        *0xc523fc = 0;\n        *0xc52400 = 0;\n        *0xc52404 = 1;\n        *0xc52408 = 1;\n        *0xc5240c = 1;\n        *0xc52410 = L\"ISFLOAT\";\n        *0xc5241c = fcn.00c03490;\n        *0xc52420 = 0;\n        *0xc52424 = 0;\n        *0xc52428 = 1;\n        *0xc5242c = 1;\n        *0xc52430 = 1;\n        *0xc52434 = L\"ISFUNC\";\n        *0xc52440 = fcn.00c04d29;\n        *0xc52444 = 0;\n        *0xc52448 = 0;\n        *0xc5244c = 1;\n        *0xc52450 = 1;\n        *0xc52454 = 1;\n        *0xc52458 = L\"ISHWND\";\n        *0xc52464 = fcn.00c03514;\n        *0xc52468 = 0;\n        *0xc5246c = 0;\n        *0xc52470 = 1;\n        *0xc52474 = 1;\n        *0xc52478 = 1;\n        *0xc5247c = L\"ISINT\";\n        *0xc52488 = fcn.00c03561;\n        *0xc5248c = 0;\n        *0xc52490 = 0;\n        *0xc52494 = 1;\n        *0xc52498 = 1;\n        *0xc5249c = 1;\n        *0xc524a0 = L\"ISKEYWORD\";\n        *0xc524ac = fcn.00c04d81;\n        *0xc524b0 = 0;\n        *0xc524b4 = 0;\n        *0xc524b8 = 1;\n        *0xc524bc = 1;\n        *0xc524c0 = 1;\n        *0xc524c4 = L\"ISMAP\";\n        *0xc524d0 = fcn.00c035ea;\n        *0xc524d4 = 0;\n        *0xc524d8 = 0;\n        *0xc524dc = 1;\n        *0xc524e0 = 1;\n        *0xc524e4 = 1;\n        *0xc524e8 = L\"ISNUMBER\";\n        *0xc524f4 = fcn.00c0361f;\n        *0xc524f8 = 0;\n        *0xc524fc = 0;\n        *0xc52500 = 1;\n        *0xc52504 = 1;\n        *0xc52508 = 1;\n        *0xc5250c = L\"ISOBJ\";\n        *0xc52518 = fcn.00c08370;\n        *0xc5251c = 0;\n        *0xc52520 = 0;\n        *0xc52524 = 1;\n        *0xc52528 = 1;\n        *0xc5252c = 1;\n        *0xc52530 = L\"ISPTR\";\n        *0xc5253c = fcn.00c03657;\n        *0xc52540 = 0;\n        *0xc52544 = 0;\n        *0xc52548 = 1;\n        *0xc5254c = 1;\n        *0xc52550 = 1;\n        *0xc52554 = L\"ISSTRING\";\n        *0xc52560 = fcn.00c0368c;\n        *0xc52564 = 0;\n        *0xc52568 = 0;\n        *0xc5256c = 1;\n        *0xc52570 = 1;\n        *0xc52574 = 1;\n        *0xc52578 = 0xc20c44;\n        *0xc52584 = fcn.00c036c1;\n        *0xc52588 = 0;\n        *0xc5258c = 0;\n        *0xc52590 = 1;\n        *0xc52594 = 1;\n        *0xc52598 = 0;\n        *0xc5259c = L\"MAPAPPEND\";\n        *0xc525a8 = fcn.00c04deb;\n        *0xc525ac = 0;\n        *0xc525b0 = 0;\n        *0xc525b4 = 2;\n        *0xc525b8 = 2;\n        *0xc525bc = 1;\n        *0xc525c0 = L\"MAPEXISTS\";\n        *0xc525cc = fcn.00c04e6f;\n        *0xc525d0 = 0;\n        *0xc525d4 = 0;\n        *0xc525d8 = 2;\n        *0xc525dc = 2;\n        *0xc525e0 = 1;\n        *0xc525e4 = L\"MAPKEYS\";\n        *0xc525f0 = fcn.00c04ee7;\n        *0xc525f4 = 0;\n        *0xc525f8 = 0;\n        *0xc525fc = 1;\n        *0xc52600 = 1;\n        *0xc52604 = 1;\n        *0xc52608 = L\"MAPREMOVE\";\n        *0xc52614 = fcn.00c04f61;\n        *0xc52618 = 0;\n        *0xc5261c = 0;\n        *0xc52620 = 2;\n        *0xc52624 = 2;\n        *0xc52628 = 1;\n        *0xc5262c = L\"MEMGETSTATS\";\n        *0xc52638 = fcn.00ba2ab7;\n        *0xc5263c = 0;\n        *0xc52640 = 0;\n        *0xc52644 = 0;\n        *0xc52648 = 0;\n        *0xc5264c = 0;\n        *0xc52650 = 0xc20cb0;\n        *0xc5265c = fcn.00c03703;\n        *0xc52660 = 0;\n        *0xc52664 = 0;\n        *0xc52668 = 2;\n        *0xc5266c = 2;\n        *0xc52670 = 0;\n        *0xc52674 = L\"MOUSECLICK\";\n        *0xc52680 = fcn.00c04fd9;\n        *0xc52684 = 0;\n        *0xc52688 = 0;\n        *0xc5268c = 1;\n        *0xc52690 = 5;\n        *0xc52694 = 0;\n        *0xc52698 = L\"MOUSECLICKDRAG\";\n        *0xc526a4 = fcn.00c0518e;\n        *0xc526a8 = 0;\n        *0xc526ac = 0;\n        *0xc526b0 = 5;\n        *0xc526b4 = 6;\n        *0xc526b8 = 0;\n        *0xc526bc = L\"MOUSEDOWN\";\n        *0xc526c8 = fcn.00c052b4;\n        *0xc526cc = 0;\n        *0xc526d0 = 0;\n        *0xc526d4 = 1;\n        *0xc526d8 = 1;\n        *0xc526dc = 0;\n        *0xc526e0 = L\"MOUSEGETCURSOR\";\n        *0xc526ec = fcn.00c052f0;\n        *0xc526f0 = 0;\n        *0xc526f4 = 0;\n        *0xc526f8 = 0;\n        *0xc526fc = 0;\n        *0xc52700 = 0;\n        *0xc52704 = L\"MOUSEGETPOS\";\n        *0xc52710 = fcn.00c0543a;\n        *0xc52714 = 0;\n        *0xc52718 = 0;\n        *0xc5271c = 0;\n        *0xc52720 = 1;\n        *0xc52724 = 0;\n        *0xc52728 = L\"MOUSEMOVE\";\n        *0xc52734 = fcn.00c0554c;\n        *0xc52738 = 0;\n        *0xc5273c = 0;\n        *0xc52740 = 2;\n        *0xc52744 = 3;\n        *0xc52748 = 0;\n        *0xc5274c = L\"MOUSEUP\";\n        *0xc52758 = fcn.00c05592;\n        *0xc5275c = 0;\n        *0xc52760 = 0;\n        *0xc52764 = 1;\n        *0xc52768 = 1;\n        *0xc5276c = 0;\n        *0xc52770 = L\"MOUSEWHEEL\";\n        *0xc5277c = fcn.00c055ce;\n        *0xc52780 = 0;\n        *0xc52784 = 0;\n        *0xc52788 = 1;\n        *0xc5278c = 2;\n        *0xc52790 = 0;\n        *0xc52794 = L\"MSGBOX\";\n        *0xc527a0 = fcn.00c0564f;\n        *0xc527a4 = 0;\n        *0xc527a8 = 0;\n        *0xc527ac = 3;\n        *0xc527b0 = 5;\n        *0xc527b4 = 0;\n        *0xc527b8 = L\"NUMBER\";\n        *0xc527c4 = fcn.00ba2cc2;\n        *0xc527c8 = 0;\n        *0xc527cc = 0;\n        *0xc527d0 = 1;\n        *0xc527d4 = 2;\n        *0xc527d8 = 0;\n        *0xc527dc = L\"OBJCREATE\";\n        *0xc527e8 = fcn.00c083a8;\n        *0xc527ec = 0;\n        *0xc527f0 = 0;\n        *0xc527f4 = 1;\n        *0xc527f8 = 4;\n        *0xc527fc = 0;\n        *0xc52800 = L\"OBJCREATEINTERFACE\";\n        *0xc5280c = fcn.00c086d0;\n        *0xc52810 = 0;\n        *0xc52814 = 0;\n        *0xc52818 = 2;\n        *0xc5281c = 4;\n        *0xc52820 = 0;\n        *0xc52824 = L\"OBJEVENT\";\n        *0xc52830 = fcn.00c08902;\n        *0xc52834 = 0;\n        *0xc52838 = 0;\n        *0xc5283c = 1;\n        *0xc52840 = 3;\n        *0xc52844 = 0;\n        *0xc52848 = L\"OBJGET\";\n        *0xc52854 = fcn.00c08bc0;\n        *0xc52858 = 0;\n        *0xc5285c = 0;\n        *0xc52860 = 1;\n        *0xc52864 = 3;\n        *0xc52868 = 0;\n        *0xc5286c = L\"OBJNAME\";\n        *0xc52878 = fcn.00c08f5b;\n        *0xc5287c = 0;\n        *0xc52880 = 0;\n        *0xc52884 = 1;\n        *0xc52888 = 2;\n        *0xc5288c = 0;\n        *0xc52890 = L\"ONAUTOITEXITREGISTER\";\n        *0xc5289c = fcn.00c057db;\n        *0xc528a0 = 0;\n        *0xc528a4 = 0;\n        *0xc528a8 = 1;\n        *0xc528ac = 1;\n        *0xc528b0 = 0;\n        *0xc528b4 = L\"ONAUTOITEXITUNREGISTER\";\n        *0xc528c0 = fcn.00c05919;\n        *0xc528c4 = 0;\n        *0xc528c8 = 0;\n        *0xc528cc = 1;\n        *0xc528d0 = 1;\n        *0xc528d4 = 0;\n        *0xc528d8 = 0xc20e64;\n        *0xc528e4 = fcn.00ba1a96;\n        *0xc528e8 = 0;\n        *0xc528ec = 0;\n        *0xc528f0 = 1;\n        *0xc528f4 = 2;\n        *0xc528f8 = 0;\n        *0xc528fc = L\"PING\";\n        *0xc52908 = fcn.00c05a45;\n        *0xc5290c = 0;\n        *0xc52910 = 0;\n        *0xc52914 = 1;\n        *0xc52918 = 2;\n        *0xc5291c = 0;\n        *0xc52920 = L\"PIXELCHECKSUM\";\n        *0xc5292c = fcn.00c05c29;\n        *0xc52930 = 0;\n        *0xc52934 = 0;\n        *0xc52938 = 4;\n        *0xc5293c = 7;\n        *0xc52940 = 0;\n        *0xc52944 = L\"PIXELGETCOLOR\";\n        *0xc52950 = fcn.00c05d60;\n        *0xc52954 = 0;\n        *0xc52958 = 0;\n        *0xc5295c = 2;\n        *0xc52960 = 3;\n        *0xc52964 = 0;\n        *0xc52968 = L\"PIXELSEARCH\";\n        *0xc52974 = fcn.00c05e2c;\n        *0xc52978 = 0;\n        *0xc5297c = 0;\n        *0xc52980 = 5;\n        *0xc52984 = 8;\n        *0xc52988 = 0;\n        *0xc5298c = L\"PROCESSCLOSE\";\n        *0xc52998 = fcn.00c0ec47;\n        *0xc5299c = 0;\n        *0xc529a0 = 0;\n        *0xc529a4 = 1;\n        *0xc529a8 = 1;\n        *0xc529ac = 0;\n        *0xc529b0 = L\"PROCESSEXISTS\";\n        *0xc529bc = fcn.00c0eddd;\n        *0xc529c0 = 0;\n        *0xc529c4 = 0;\n        *0xc529c8 = 1;\n        *0xc529cc = 1;\n        *0xc529d0 = 0;\n        *0xc529d4 = L\"PROCESSGETSTATS\";\n        *0xc529e0 = fcn.00c0ee69;\n        *0xc529e4 = 0;\n        *0xc529e8 = 0;\n        *0xc529ec = 0;\n        *0xc529f0 = 2;\n        *0xc529f4 = 0;\n        *0xc529f8 = L\"PROCESSLIST\";\n        *0xc52a04 = fcn.00c0f121;\n        *0xc52a08 = 0;\n        *0xc52a0c = 0;\n        *0xc52a10 = 0;\n        *0xc52a14 = 1;\n        *0xc52a18 = 0;\n        *0xc52a1c = L\"PROCESSSETPRIORITY\";\n        *0xc52a28 = fcn.00c0f313;\n        *0xc52a2c = 0;\n        *0xc52a30 = 0;\n        *0xc52a34 = 2;\n        *0xc52a38 = 2;\n        *0xc52a3c = 0;\n        *0xc52a40 = L\"PROCESSWAIT\";\n        *0xc52a4c = fcn.00c0f3fb;\n        *0xc52a50 = 0;\n        *0xc52a54 = 0;\n        *0xc52a58 = 1;\n        *0xc52a5c = 2;\n        *0xc52a60 = 0;\n        *0xc52a64 = L\"PROCESSWAITCLOSE\";\n        *0xc52a70 = fcn.00c0f481;\n        *0xc52a74 = 0;\n        *0xc52a78 = 0;\n        *0xc52a7c = 1;\n        *0xc52a80 = 2;\n        *0xc52a84 = 0;\n        *0xc52a88 = L\"PROGRESSOFF\";\n        *0xc52a94 = fcn.00c060c2;\n        *0xc52a98 = 0;\n        *0xc52a9c = 0;\n        *0xc52aa0 = 0;\n        *0xc52aa4 = 0;\n        *0xc52aa8 = 0;\n        *0xc52aac = L\"PROGRESSON\";\n        *0xc52ab8 = fcn.00c060d7;\n        *0xc52abc = 0;\n        *0xc52ac0 = 0;\n        *0xc52ac4 = 2;\n        *0xc52ac8 = 6;\n        *0xc52acc = 0;\n        *0xc52ad0 = L\"PROGRESSSET\";\n        *0xc52adc = fcn.00c060ec;\n        *0xc52ae0 = 0;\n        *0xc52ae4 = 0;\n        *0xc52ae8 = 1;\n        *0xc52aec = 3;\n        *0xc52af0 = 0;\n        *0xc52af4 = 0xc20fe4;\n        *0xc52b00 = fcn.00c03808;\n        *0xc52b04 = 0;\n        *0xc52b08 = 0;\n        *0xc52b0c = 1;\n        *0xc52b10 = 1;\n        *0xc52b14 = 0;\n        *0xc52b18 = L\"RANDOM\";\n        *0xc52b24 = fcn.00c03837;\n        *0xc52b28 = 0;\n        *0xc52b2c = 0;\n        *0xc52b30 = 0;\n        *0xc52b34 = 3;\n        *0xc52b38 = 0;\n        *0xc52b3c = L\"REGDELETE\";\n        *0xc52b48 = fcn.00c0ff9c;\n        *0xc52b4c = 0;\n        *0xc52b50 = 0;\n        *0xc52b54 = 1;\n        *0xc52b58 = 2;\n        *0xc52b5c = 0;\n        *0xc52b60 = L\"REGENUMKEY\";\n        *0xc52b6c = fcn.00c102c2;\n        *0xc52b70 = 0;\n        *0xc52b74 = 0;\n        *0xc52b78 = 2;\n        *0xc52b7c = 2;\n        *0xc52b80 = 0;\n        *0xc52b84 = L\"REGENUMVAL\";\n        *0xc52b90 = fcn.00c1046f;\n        *0xc52b94 = 0;\n        *0xc52b98 = 0;\n        *0xc52b9c = 2;\n        *0xc52ba0 = 2;\n        *0xc52ba4 = 0;\n        *0xc52ba8 = L\"REGREAD\";\n        *0xc52bb4 = fcn.00c10665;\n        *0xc52bb8 = 0;\n        *0xc52bbc = 0;\n        *0xc52bc0 = 2;\n        *0xc52bc4 = 2;\n        *0xc52bc8 = 0;\n        *0xc52bcc = L\"REGWRITE\";\n        *0xc52bd8 = fcn.00c10ae2;\n        *0xc52bdc = 0;\n        *0xc52be0 = 0;\n        *0xc52be4 = 1;\n        *0xc52be8 = 4;\n        *0xc52bec = 0;\n        *0xc52bf0 = L\"ROUND\";\n        *0xc52bfc = fcn.00ba2d18;\n        *0xc52c00 = 0;\n        *0xc52c04 = 0;\n        *0xc52c08 = 1;\n        *0xc52c0c = 2;\n        *0xc52c10 = 0;\n        *0xc52c14 = 0xc21070;\n        *0xc52c20 = fcn.00c0f567;\n        *0xc52c24 = 0;\n        *0xc52c28 = 0;\n        *0xc52c2c = 1;\n        *0xc52c30 = 4;\n        *0xc52c34 = 0;\n        *0xc52c38 = L\"RUNAS\";\n        *0xc52c44 = fcn.00c0f57d;\n        *0xc52c48 = 0;\n        *0xc52c4c = 0;\n        *0xc52c50 = 5;\n        *0xc52c54 = 8;\n        *0xc52c58 = 0;\n        *0xc52c5c = L\"RUNASWAIT\";\n        *0xc52c68 = fcn.00c0f593;\n        *0xc52c6c = 0;\n        *0xc52c70 = 0;\n        *0xc52c74 = 5;\n        *0xc52c78 = 8;\n        *0xc52c7c = 0;\n        *0xc52c80 = L\"RUNWAIT\";\n        *0xc52c8c = fcn.00c0f5ef;\n        *0xc52c90 = 0;\n        *0xc52c94 = 0;\n        *0xc52c98 = 1;\n        *0xc52c9c = 4;\n        *0xc52ca0 = 0;\n        *0xc52ca4 = L\"SEND\";\n        *0xc52cb0 = fcn.00c061b3;\n        *0xc52cb4 = 0;\n        *0xc52cb8 = 0;\n        *0xc52cbc = 1;\n        *0xc52cc0 = 2;\n        *0xc52cc4 = 0;\n        *0xc52cc8 = L\"SENDKEEPACTIVE\";\n        *0xc52cd4 = fcn.00c14955;\n        *0xc52cd8 = 0;\n        *0xc52cdc = 0;\n        *0xc52ce0 = 1;\n        *0xc52ce4 = 2;\n        *0xc52ce8 = 0;\n        *0xc52cec = L\"SETERROR\";\n        *0xc52cf8 = fcn.00c06216;\n        *0xc52cfc = 0;\n        *0xc52d00 = 0;\n        *0xc52d04 = 1;\n        *0xc52d08 = 3;\n        *0xc52d0c = 0;\n        *0xc52d10 = L\"SETEXTENDED\";\n        *0xc52d1c = fcn.00c06275;\n        *0xc52d20 = 0;\n        *0xc52d24 = 0;\n        *0xc52d28 = 1;\n        *0xc52d2c = 2;\n        *0xc52d30 = 0;\n        *0xc52d34 = L\"SHELLEXECUTE\";\n        *0xc52d40 = fcn.00c0f64b;\n        *0xc52d44 = 0;\n        *0xc52d48 = 0;\n        *0xc52d4c = 1;\n        *0xc52d50 = 5;\n        *0xc52d54 = 0;\n        *0xc52d58 = L\"SHELLEXECUTEWAIT\";\n        *0xc52d64 = fcn.00c0f663;\n        *0xc52d68 = 0;\n        *0xc52d6c = 0;\n        *0xc52d70 = 1;\n        *0xc52d74 = 5;\n        *0xc52d78 = 0;\n        *0xc52d7c = L\"SHUTDOWN\";\n        *0xc52d88 = fcn.00c0f6c1;\n        *0xc52d8c = 0;\n        *0xc52d90 = 0;\n        *0xc52d94 = 1;\n        *0xc52d98 = 2;\n        *0xc52d9c = 0;\n        *0xc52da0 = 0xc21154;\n        *0xc52dac = fcn.00ba2dc0;\n        *0xc52db0 = 0;\n        *0xc52db4 = 0;\n        *0xc52db8 = 1;\n        *0xc52dbc = 1;\n        *0xc52dc0 = 0;\n        *0xc52dc4 = L\"SLEEP\";\n        *0xc52dd0 = fcn.00ba2e02;\n        *0xc52dd4 = 0;\n        *0xc52dd8 = 0;\n        *0xc52ddc = 1;\n        *0xc52de0 = 1;\n        *0xc52de4 = 0;\n        *0xc52de8 = L\"SOUNDPLAY\";\n        *0xc52df4 = fcn.00c062b4;\n        *0xc52df8 = 0;\n        *0xc52dfc = 0;\n        *0xc52e00 = 1;\n        *0xc52e04 = 2;\n        *0xc52e08 = 0;\n        *0xc52e0c = L\"SOUNDSETWAVEVOLUME\";\n        *0xc52e18 = fcn.00c06306;\n        *0xc52e1c = 0;\n        *0xc52e20 = 0;\n        *0xc52e24 = 1;\n        *0xc52e28 = 1;\n        *0xc52e2c = 0;\n        *0xc52e30 = L\"SPLASHIMAGEON\";\n        *0xc52e3c = fcn.00c06369;\n        *0xc52e40 = 0;\n        *0xc52e44 = 0;\n        *0xc52e48 = 2;\n        *0xc52e4c = 7;\n        *0xc52e50 = 0;\n        *0xc52e54 = L\"SPLASHOFF\";\n        *0xc52e60 = fcn.00c0637e;\n        *0xc52e64 = 0;\n        *0xc52e68 = 0;\n        *0xc52e6c = 0;\n        *0xc52e70 = 0;\n        *0xc52e74 = 0;\n        *0xc52e78 = L\"SPLASHTEXTON\";\n        *0xc52e84 = fcn.00c06393;\n        *0xc52e88 = 0;\n        *0xc52e8c = 0;\n        *0xc52e90 = 2;\n        *0xc52e94 = 10;\n        *0xc52e98 = 0;\n        *0xc52e9c = L\"SQRT\";\n        *0xc52ea8 = fcn.00c039f9;\n        *0xc52eac = 0;\n        *0xc52eb0 = 0;\n        *0xc52eb4 = 1;\n        *0xc52eb8 = 1;\n        *0xc52ebc = 0;\n        *0xc52ec0 = L\"SRANDOM\";\n        *0xc52ecc = fcn.00c039dc;\n        *0xc52ed0 = 0;\n        *0xc52ed4 = 0;\n        *0xc52ed8 = 1;\n        *0xc52edc = 1;\n        *0xc52ee0 = 0;\n        *0xc52ee4 = L\"STATUSBARGETTEXT\";\n        *0xc52ef0 = fcn.00c149c6;\n        *0xc52ef4 = 0;\n        *0xc52ef8 = 0;\n        *0xc52efc = 1;\n        *0xc52f00 = 3;\n        *0xc52f04 = 0;\n        *0xc52f08 = L\"STDERRREAD\";\n        *0xc52f14 = fcn.00c1153f;\n        *0xc52f18 = 0;\n        *0xc52f1c = 0;\n        *0xc52f20 = 1;\n        *0xc52f24 = 3;\n        *0xc52f28 = 0;\n        *0xc52f2c = L\"STDINWRITE\";\n        *0xc52f38 = fcn.00c11560;\n        *0xc52f3c = 0;\n        *0xc52f40 = 0;\n        *0xc52f44 = 1;\n        *0xc52f48 = 2;\n        *0xc52f4c = 0;\n        *0xc52f50 = L\"STDIOCLOSE\";\n        *0xc52f5c = fcn.00c11691;\n        *0xc52f60 = 0;\n        *0xc52f64 = 0;\n        *0xc52f68 = 1;\n        *0xc52f6c = 1;\n        *0xc52f70 = 0;\n        *0xc52f74 = L\"STDOUTREAD\";\n        *0xc52f80 = fcn.00c116e1;\n        *0xc52f84 = 0;\n        *0xc52f88 = 0;\n        *0xc52f8c = 1;\n        *0xc52f90 = 3;\n        *0xc52f94 = 0;\n        *0xc52f98 = L\"STRING\";\n        *0xc52fa4 = fcn.00c03a3b;\n        *0xc52fa8 = 0;\n        *0xc52fac = 0;\n        *0xc52fb0 = 1;\n        *0xc52fb4 = 1;\n        *0xc52fb8 = 0;\n        *0xc52fbc = L\"STRINGADDCR\";\n        *0xc52fc8 = fcn.00c11ba1;\n        *0xc52fcc = 0;\n        *0xc52fd0 = 0;\n        *0xc52fd4 = 1;\n        *0xc52fd8 = 1;\n        *0xc52fdc = 0;\n        *0xc52fe0 = L\"STRINGCOMPARE\";\n        *0xc52fec = fcn.00c11c02;\n        *0xc52ff0 = 0;\n        *0xc52ff4 = 0;\n        *0xc52ff8 = 2;\n        *0xc52ffc = 3;\n        *0xc53000 = 0;\n        *0xc53004 = L\"STRINGFORMAT\";\n        *0xc53010 = fcn.00ba2e5b;\n        *0xc53014 = 0;\n        *0xc53018 = 0;\n        *0xc5301c = 1;\n        *0xc53020 = 0x21;\n        *0xc53024 = 0;\n        *0xc53028 = L\"STRINGFROMASCIIARRAY\";\n        *0xc53034 = fcn.00c11c7e;\n        *0xc53038 = 0;\n        *0xc5303c = 0;\n        *0xc53040 = 1;\n        *0xc53044 = 4;\n        *0xc53048 = 0;\n        *0xc5304c = L\"STRINGINSTR\";\n        *0xc53058 = fcn.00c11e1a;\n        *0xc5305c = 0;\n        *0xc53060 = 0;\n        *0xc53064 = 2;\n        *0xc53068 = 6;\n        *0xc5306c = 0;\n        *0xc53070 = L\"STRINGISALNUM\";\n        *0xc5307c = fcn.00c11fb2;\n        *0xc53080 = 0;\n        *0xc53084 = 0;\n        *0xc53088 = 1;\n        *0xc5308c = 1;\n        *0xc53090 = 0;\n        *0xc53094 = L\"STRINGISALPHA\";\n        *0xc530a0 = fcn.00c12012;\n        *0xc530a4 = 0;\n        *0xc530a8 = 0;\n        *0xc530ac = 1;\n        *0xc530b0 = 1;\n        *0xc530b4 = 0;\n        *0xc530b8 = L\"STRINGISASCII\";\n        *0xc530c4 = fcn.00c11f52;\n        *0xc530c8 = 0;\n        *0xc530cc = 0;\n        *0xc530d0 = 1;\n        *0xc530d4 = 1;\n        *0xc530d8 = 0;\n        *0xc530dc = L\"STRINGISDIGIT\";\n        *0xc530e8 = fcn.00c12072;\n        *0xc530ec = 0;\n        *0xc530f0 = 0;\n        *0xc530f4 = 1;\n        *0xc530f8 = 1;\n        *0xc530fc = 0;\n        *0xc53100 = L\"STRINGISFLOAT\";\n        *0xc5310c = fcn.00c120d2;\n        *0xc53110 = 0;\n        *0xc53114 = 0;\n        *0xc53118 = 1;\n        *0xc5311c = 1;\n        *0xc53120 = 0;\n        *0xc53124 = L\"STRINGISINT\";\n        *0xc53130 = fcn.00c12102;\n        *0xc53134 = 0;\n        *0xc53138 = 0;\n        *0xc5313c = 1;\n        *0xc53140 = 1;\n        *0xc53144 = 0;\n        *0xc53148 = L\"STRINGISLOWER\";\n        *0xc53154 = fcn.00c12132;\n        *0xc53158 = 0;\n        *0xc5315c = 0;\n        *0xc53160 = 1;\n        *0xc53164 = 1;\n        *0xc53168 = 0;\n        *0xc5316c = L\"STRINGISSPACE\";\n        *0xc53178 = fcn.00c12192;\n        *0xc5317c = 0;\n        *0xc53180 = 0;\n        *0xc53184 = 1;\n        *0xc53188 = 1;\n        *0xc5318c = 0;\n        *0xc53190 = L\"STRINGISUPPER\";\n        *0xc5319c = fcn.00c121fb;\n        *0xc531a0 = 0;\n        *0xc531a4 = 0;\n        *0xc531a8 = 1;\n        *0xc531ac = 1;\n        *0xc531b0 = 0;\n        *0xc531b4 = L\"STRINGISXDIGIT\";\n        *0xc531c0 = fcn.00c1225b;\n        *0xc531c4 = 0;\n        *0xc531c8 = 0;\n        *0xc531cc = 1;\n        *0xc531d0 = 1;\n        *0xc531d4 = 0;\n        *0xc531d8 = L\"STRINGLEFT\";\n        *0xc531e4 = fcn.00c122bb;\n        *0xc531e8 = 0;\n        *0xc531ec = 0;\n        *0xc531f0 = 2;\n        *0xc531f4 = 2;\n        *0xc531f8 = 0;\n        *0xc531fc = L\"STRINGLEN\";\n        *0xc53208 = fcn.00c12331;\n        *0xc5320c = 0;\n        *0xc53210 = 0;\n        *0xc53214 = 1;\n        *0xc53218 = 1;\n        *0xc5321c = 0;\n        *0xc53220 = L\"STRINGLOWER\";\n        *0xc5322c = fcn.00c12366;\n        *0xc53230 = 0;\n        *0xc53234 = 0;\n        *0xc53238 = 1;\n        *0xc5323c = 1;\n        *0xc53240 = 0;\n        *0xc53244 = L\"STRINGMID\";\n        *0xc53250 = fcn.00ba30dd;\n        *0xc53254 = 0;\n        *0xc53258 = 0;\n        *0xc5325c = 2;\n        *0xc53260 = 3;\n        *0xc53264 = 0;\n        *0xc53268 = L\"STRINGREGEXP\";\n        *0xc53274 = fcn.00ba3190;\n        *0xc53278 = 0;\n        *0xc5327c = 0;\n        *0xc53280 = 2;\n        *0xc53284 = 4;\n        *0xc53288 = 0;\n        *0xc5328c = L\"STRINGREGEXPREPLACE\";\n        *0xc53298 = fcn.00ba3633;\n        *0xc5329c = 0;\n        *0xc532a0 = 0;\n        *0xc532a4 = 3;\n        *0xc532a8 = 4;\n        *0xc532ac = 0;\n        *0xc532b0 = L\"STRINGREPLACE\";\n        *0xc532bc = fcn.00c123c9;\n        *0xc532c0 = 0;\n        *0xc532c4 = 0;\n        *0xc532c8 = 3;\n        *0xc532cc = 5;\n        *0xc532d0 = 0;\n        *0xc532d4 = L\"STRINGREVERSE\";\n        *0xc532e0 = fcn.00c12562;\n        *0xc532e4 = 0;\n        *0xc532e8 = 0;\n        *0xc532ec = 1;\n        *0xc532f0 = 2;\n        *0xc532f4 = 0;\n        *0xc532f8 = L\"STRINGRIGHT\";\n        *0xc53304 = fcn.00c126a6;\n        *0xc53308 = 0;\n        *0xc5330c = 0;\n        *0xc53310 = 2;\n        *0xc53314 = 2;\n        *0xc53318 = 0;\n        *0xc5331c = L\"STRINGSPLIT\";\n        *0xc53328 = fcn.00ba3723;\n        *0xc5332c = 0;\n        *0xc53330 = 0;\n        *0xc53334 = 2;\n        *0xc53338 = 3;\n        *0xc5333c = 0;\n        *0xc53340 = L\"STRINGSTRIPCR\";\n        *0xc5334c = fcn.00c12720;\n        *0xc53350 = 0;\n        *0xc53354 = 0;\n        *0xc53358 = 1;\n        *0xc5335c = 1;\n        *0xc53360 = 0;\n        *0xc53364 = L\"STRINGSTRIPWS\";\n        *0xc53370 = fcn.00c12781;\n        *0xc53374 = 0;\n        *0xc53378 = 0;\n        *0xc5337c = 2;\n        *0xc53380 = 2;\n        *0xc53384 = 0;\n        *0xc53388 = L\"STRINGTOASCIIARRAY\";\n        *0xc53394 = fcn.00c12946;\n        *0xc53398 = 0;\n        *0xc5339c = 0;\n        *0xc533a0 = 1;\n        *0xc533a4 = 4;\n        *0xc533a8 = 0;\n        *0xc533ac = L\"STRINGTOBINARY\";\n        *0xc533b8 = fcn.00c12b1e;\n        *0xc533bc = 0;\n        *0xc533c0 = 0;\n        *0xc533c4 = 1;\n        *0xc533c8 = 2;\n        *0xc533cc = 0;\n        *0xc533d0 = L\"STRINGTRIMLEFT\";\n        *0xc533dc = fcn.00ba39ef;\n        *0xc533e0 = 0;\n        *0xc533e4 = 0;\n        *0xc533e8 = 2;\n        *0xc533ec = 2;\n        *0xc533f0 = 0;\n        *0xc533f4 = L\"STRINGTRIMRIGHT\";\n        *0xc53400 = fcn.00c12c1f;\n        *0xc53404 = 0;\n        *0xc53408 = 0;\n        *0xc5340c = 2;\n        *0xc53410 = 2;\n        *0xc53414 = 0;\n        *0xc53418 = L\"STRINGUPPER\";\n        *0xc53424 = fcn.00c12c98;\n        *0xc53428 = 0;\n        *0xc5342c = 0;\n        *0xc53430 = 1;\n        *0xc53434 = 1;\n        *0xc53438 = 0;\n        *0xc5343c = 0xc21628;\n        *0xc53448 = fcn.00c03a60;\n        *0xc5344c = 0;\n        *0xc53450 = 0;\n        *0xc53454 = 1;\n        *0xc53458 = 1;\n        *0xc5345c = 0;\n        *0xc53460 = L\"TCPACCEPT\";\n        *0xc5346c = fcn.00c063c7;\n        *0xc53470 = 0;\n        *0xc53474 = 0;\n        *0xc53478 = 1;\n        *0xc5347c = 1;\n        *0xc53480 = 0;\n        *0xc53484 = L\"TCPCLOSESOCKET\";\n        *0xc53490 = fcn.00c06437;\n        *0xc53494 = 0;\n        *0xc53498 = 0;\n        *0xc5349c = 1;\n        *0xc534a0 = 1;\n        *0xc534a4 = 0;\n        *0xc534a8 = L\"TCPCONNECT\";\n        *0xc534b4 = fcn.00c06486;\n        *0xc534b8 = 0;\n        *0xc534bc = 0;\n        *0xc534c0 = 2;\n        *0xc534c4 = 2;\n        *0xc534c8 = 0;\n        *0xc534cc = L\"TCPLISTEN\";\n        *0xc534d8 = fcn.00c06596;\n        *0xc534dc = 0;\n        *0xc534e0 = 0;\n        *0xc534e4 = 2;\n        *0xc534e8 = 3;\n        *0xc534ec = 0;\n        *0xc534f0 = L\"TCPNAMETOIP\";\n        *0xc534fc = fcn.00c0667c;\n        *0xc53500 = 0;\n        *0xc53504 = 0;\n        *0xc53508 = 1;\n        *0xc5350c = 1;\n        *0xc53510 = 0;\n        *0xc53514 = L\"TCPRECV\";\n        *0xc53520 = fcn.00c0672d;\n        *0xc53524 = 0;\n        *0xc53528 = 0;\n        *0xc5352c = 2;\n        *0xc53530 = 3;\n        *0xc53534 = 0;\n        *0xc53538 = L\"TCPSEND\";\n        *0xc53544 = fcn.00c06876;\n        *0xc53548 = 0;\n        *0xc5354c = 0;\n        *0xc53550 = 2;\n        *0xc53554 = 2;\n        *0xc53558 = 0;\n        *0xc5355c = L\"TCPSHUTDOWN\";\n        *0xc53568 = fcn.00c068ed;\n        *0xc5356c = 0;\n        *0xc53570 = 0;\n        *0xc53574 = 0;\n        *0xc53578 = 0;\n        *0xc5357c = 0;\n        *0xc53580 = L\"TCPSTARTUP\";\n        *0xc5358c = fcn.00c06927;\n        *0xc53590 = 0;\n        *0xc53594 = 0;\n        *0xc53598 = 0;\n        *0xc5359c = 0;\n        *0xc535a0 = 0;\n        *0xc535a4 = L\"TIMERDIFF\";\n        *0xc535b0 = fcn.00ba3a70;\n        *0xc535b4 = 0;\n        *0xc535b8 = 0;\n        *0xc535bc = 1;\n        *0xc535c0 = 1;\n        *0xc535c4 = 0;\n        *0xc535c8 = L\"TIMERINIT\";\n        *0xc535d4 = fcn.00ba3ad6;\n        *0xc535d8 = 0;\n        *0xc535dc = 0;\n        *0xc535e0 = 0;\n        *0xc535e4 = 0;\n        *0xc535e8 = 0;\n        *0xc535ec = L\"TOOLTIP\";\n        *0xc535f8 = fcn.00c14b16;\n        *0xc535fc = 0;\n        *0xc53600 = 0;\n        *0xc53604 = 1;\n        *0xc53608 = 6;\n        *0xc5360c = 0;\n        *0xc53610 = L\"TRAYCREATEITEM\";\n        *0xc5361c = fcn.00c12eae;\n        *0xc53620 = 0;\n        *0xc53624 = 0;\n        *0xc53628 = 1;\n        *0xc5362c = 4;\n        *0xc53630 = 0;\n        *0xc53634 = L\"TRAYCREATEMENU\";\n        *0xc53640 = fcn.00c12ec2;\n        *0xc53644 = 0;\n        *0xc53648 = 0;\n        *0xc5364c = 1;\n        *0xc53650 = 4;\n        *0xc53654 = 0;\n        *0xc53658 = L\"TRAYGETMSG\";\n        *0xc53664 = fcn.00c12ed6;\n        *0xc53668 = 0;\n        *0xc5366c = 0;\n        *0xc53670 = 0;\n        *0xc53674 = 1;\n        *0xc53678 = 0;\n        *0xc5367c = L\"TRAYITEMDELETE\";\n        *0xc53688 = fcn.00c12f53;\n        *0xc5368c = 0;\n        *0xc53690 = 0;\n        *0xc53694 = 1;\n        *0xc53698 = 1;\n        *0xc5369c = 0;\n        *0xc536a0 = L\"TRAYITEMGETHANDLE\";\n        *0xc536ac = fcn.00c12f8d;\n        *0xc536b0 = 0;\n        *0xc536b4 = 0;\n        *0xc536b8 = 1;\n        *0xc536bc = 1;\n        *0xc536c0 = 0;\n        *0xc536c4 = L\"TRAYITEMGETSTATE\";\n        *0xc536d0 = fcn.00c12fda;\n        *0xc536d4 = 0;\n        *0xc536d8 = 0;\n        *0xc536dc = 1;\n        *0xc536e0 = 1;\n        *0xc536e4 = 0;\n        *0xc536e8 = L\"TRAYITEMGETTEXT\";\n        *0xc536f4 = fcn.00c13026;\n        *0xc536f8 = 0;\n        *0xc536fc = 0;\n        *0xc53700 = 1;\n        *0xc53704 = 1;\n        *0xc53708 = 0;\n        *0xc5370c = L\"TRAYITEMSETONEVENT\";\n        *0xc53718 = fcn.00c13088;\n        *0xc5371c = 0;\n        *0xc53720 = 0;\n        *0xc53724 = 2;\n        *0xc53728 = 2;\n        *0xc5372c = 0;\n        *0xc53730 = L\"TRAYITEMSETSTATE\";\n        *0xc5373c = fcn.00c1318e;\n        *0xc53740 = 0;\n        *0xc53744 = 0;\n        *0xc53748 = 2;\n        *0xc5374c = 2;\n        *0xc53750 = 0;\n        *0xc53754 = L\"TRAYITEMSETTEXT\";\n        *0xc53760 = fcn.00c131d3;\n        *0xc53764 = 0;\n        *0xc53768 = 0;\n        *0xc5376c = 2;\n        *0xc53770 = 2;\n        *0xc53774 = 0;\n        *0xc53778 = L\"TRAYSETCLICK\";\n        *0xc53784 = fcn.00c1321d;\n        *0xc53788 = 0;\n        *0xc5378c = 0;\n        *0xc53790 = 0;\n        *0xc53794 = 1;\n        *0xc53798 = 0;\n        *0xc5379c = L\"TRAYSETICON\";\n        *0xc537a8 = fcn.00c1324d;\n        *0xc537ac = 0;\n        *0xc537b0 = 0;\n        *0xc537b4 = 0;\n        *0xc537b8 = 2;\n        *0xc537bc = 0;\n        *0xc537c0 = L\"TRAYSETONEVENT\";\n        *0xc537cc = fcn.00c132bb;\n        *0xc537d0 = 0;\n        *0xc537d4 = 0;\n        *0xc537d8 = 2;\n        *0xc537dc = 2;\n        *0xc537e0 = 0;\n        *0xc537e4 = L\"TRAYSETPAUSEICON\";\n        *0xc537f0 = fcn.00c133b9;\n        *0xc537f4 = 0;\n        *0xc537f8 = 0;\n        *0xc537fc = 0;\n        *0xc53800 = 2;\n        *0xc53804 = 0;\n        *0xc53808 = L\"TRAYSETSTATE\";\n        *0xc53814 = fcn.00c13427;\n        *0xc53818 = 0;\n        *0xc5381c = 0;\n        *0xc53820 = 0;\n        *0xc53824 = 1;\n        *0xc53828 = 0;\n        *0xc5382c = L\"TRAYSETTOOLTIP\";\n        *0xc53838 = fcn.00c1344c;\n        *0xc5383c = 0;\n        *0xc53840 = 0;\n        *0xc53844 = 0;\n        *0xc53848 = 1;\n        *0xc5384c = 0;\n        *0xc53850 = L\"TRAYTIP\";\n        *0xc5385c = fcn.00c06975;\n        *0xc53860 = 0;\n        *0xc53864 = 0;\n        *0xc53868 = 3;\n        *0xc5386c = 4;\n        *0xc53870 = 0;\n        *0xc53874 = L\"UBOUND\";\n        *0xc53880 = fcn.00ba3b18;\n        *0xc53884 = 0;\n        *0xc53888 = 0;\n        *0xc5388c = 1;\n        *0xc53890 = 2;\n        *0xc53894 = 1;\n        *0xc53898 = L\"UDPBIND\";\n        *0xc538a4 = fcn.00c06a5a;\n        *0xc538a8 = 0;\n        *0xc538ac = 0;\n        *0xc538b0 = 2;\n        *0xc538b4 = 2;\n        *0xc538b8 = 0;\n        *0xc538bc = L\"UDPCLOSESOCKET\";\n        *0xc538c8 = fcn.00c06bd4;\n        *0xc538cc = 0;\n        *0xc538d0 = 0;\n        *0xc538d4 = 1;\n        *0xc538d8 = 1;\n        *0xc538dc = 0;\n        *0xc538e0 = L\"UDPOPEN\";\n        *0xc538ec = fcn.00c06cbd;\n        *0xc538f0 = 0;\n        *0xc538f4 = 0;\n        *0xc538f8 = 2;\n        *0xc538fc = 3;\n        *0xc53900 = 0;\n        *0xc53904 = L\"UDPRECV\";\n        *0xc53910 = fcn.00c06e17;\n        *0xc53914 = 0;\n        *0xc53918 = 0;\n        *0xc5391c = 2;\n        *0xc53920 = 3;\n        *0xc53924 = 0;\n        *0xc53928 = L\"UDPSEND\";\n        *0xc53934 = fcn.00c070ef;\n        *0xc53938 = 0;\n        *0xc5393c = 0;\n        *0xc53940 = 2;\n        *0xc53944 = 2;\n        *0xc53948 = 0;\n        *0xc5394c = L\"UDPSHUTDOWN\";\n        *0xc53958 = fcn.00c068ed;\n        *0xc5395c = 0;\n        *0xc53960 = 0;\n        *0xc53964 = 0;\n        *0xc53968 = 0;\n        *0xc5396c = 0;\n        *0xc53970 = L\"UDPSTARTUP\";\n        *0xc5397c = fcn.00c06927;\n        *0xc53980 = 0;\n        *0xc53984 = 0;\n        *0xc53988 = 0;\n        *0xc5398c = 0;\n        *0xc53990 = 0;\n        *0xc53994 = L\"VARGETTYPE\";\n        *0xc539a0 = fcn.00c0726b;\n        *0xc539a4 = 0;\n        *0xc539a8 = 0;\n        *0xc539ac = 1;\n        *0xc539b0 = 1;\n        *0xc539b4 = 0;\n        *0xc539b8 = L\"WINACTIVATE\";\n        *0xc539c4 = fcn.00c14ec6;\n        *0xc539c8 = 0;\n        *0xc539cc = 0;\n        *0xc539d0 = 1;\n        *0xc539d4 = 2;\n        *0xc539d8 = 0;\n        *0xc539dc = L\"WINACTIVE\";\n        *0xc539e8 = fcn.00c14f90;\n        *0xc539ec = 0;\n        *0xc539f0 = 0;\n        *0xc539f4 = 1;\n        *0xc539f8 = 2;\n        *0xc539fc = 0;\n        *0xc53a00 = L\"WINCLOSE\";\n        *0xc53a0c = fcn.00c14ff6;\n        *0xc53a10 = 0;\n        *0xc53a14 = 0;\n        *0xc53a18 = 1;\n        *0xc53a1c = 2;\n        *0xc53a20 = 0;\n        *0xc53a24 = L\"WINEXISTS\";\n        *0xc53a30 = fcn.00c15060;\n        *0xc53a34 = 0;\n        *0xc53a38 = 0;\n        *0xc53a3c = 1;\n        *0xc53a40 = 2;\n        *0xc53a44 = 0;\n        *0xc53a48 = L\"WINFLASH\";\n        *0xc53a54 = fcn.00c150a9;\n        *0xc53a58 = 0;\n        *0xc53a5c = 0;\n        *0xc53a60 = 1;\n        *0xc53a64 = 4;\n        *0xc53a68 = 0;\n        *0xc53a6c = L\"WINGETCARETPOS\";\n        *0xc53a78 = fcn.00c15175;\n        *0xc53a7c = 0;\n        *0xc53a80 = 0;\n        *0xc53a84 = 0;\n        *0xc53a88 = 0;\n        *0xc53a8c = 0;\n        *0xc53a90 = L\"WINGETCLASSLIST\";\n        *0xc53a9c = fcn.00c1526f;\n        *0xc53aa0 = 0;\n        *0xc53aa4 = 0;\n        *0xc53aa8 = 1;\n        *0xc53aac = 2;\n        *0xc53ab0 = 0;\n        *0xc53ab4 = L\"WINGETCLIENTSIZE\";\n        *0xc53ac0 = fcn.00c152ef;\n        *0xc53ac4 = 0;\n        *0xc53ac8 = 0;\n        *0xc53acc = 1;\n        *0xc53ad0 = 2;\n        *0xc53ad4 = 0;\n        *0xc53ad8 = L\"WINGETHANDLE\";\n        *0xc53ae4 = fcn.00c153d9;\n        *0xc53ae8 = 0;\n        *0xc53aec = 0;\n        *0xc53af0 = 1;\n        *0xc53af4 = 2;\n        *0xc53af8 = 0;\n        *0xc53afc = L\"WINGETPOS\";\n        *0xc53b08 = fcn.00c1543e;\n        *0xc53b0c = 0;\n        *0xc53b10 = 0;\n        *0xc53b14 = 1;\n        *0xc53b18 = 2;\n        *0xc53b1c = 0;\n        *0xc53b20 = L\"WINGETPROCESS\";\n        *0xc53b2c = fcn.00c15573;\n        *0xc53b30 = 0;\n        *0xc53b34 = 0;\n        *0xc53b38 = 1;\n        *0xc53b3c = 2;\n        *0xc53b40 = 0;\n        *0xc53b44 = L\"WINGETSTATE\";\n        *0xc53b50 = fcn.00c155fd;\n        *0xc53b54 = 0;\n        *0xc53b58 = 0;\n        *0xc53b5c = 1;\n        *0xc53b60 = 2;\n        *0xc53b64 = 0;\n        *0xc53b68 = L\"WINGETTEXT\";\n        *0xc53b74 = fcn.00c156a8;\n        *0xc53b78 = 0;\n        *0xc53b7c = 0;\n        *0xc53b80 = 1;\n        *0xc53b84 = 2;\n        *0xc53b88 = 0;\n        *0xc53b8c = L\"WINGETTITLE\";\n        *0xc53b98 = fcn.00c1573d;\n        *0xc53b9c = 0;\n        *0xc53ba0 = 0;\n        *0xc53ba4 = 1;\n        *0xc53ba8 = 2;\n        *0xc53bac = 0;\n        *0xc53bb0 = L\"WINKILL\";\n        *0xc53bbc = fcn.00c157b8;\n        *0xc53bc0 = 0;\n        *0xc53bc4 = 0;\n        *0xc53bc8 = 1;\n        *0xc53bcc = 2;\n        *0xc53bd0 = 0;\n        *0xc53bd4 = L\"WINLIST\";\n        *0xc53be0 = fcn.00c1581b;\n        *0xc53be4 = 0;\n        *0xc53be8 = 0;\n        *0xc53bec = 0;\n        *0xc53bf0 = 2;\n        *0xc53bf4 = 0;\n        *0xc53bf8 = L\"WINMENUSELECTITEM\";\n        *0xc53c04 = fcn.00c15a20;\n        *0xc53c08 = 0;\n        *0xc53c0c = 0;\n        *0xc53c10 = 3;\n        *0xc53c14 = 9;\n        *0xc53c18 = 0;\n        *0xc53c1c = L\"WINMINIMIZEALL\";\n        *0xc53c28 = 0xc15beb;\n        *0xc53c2c = 0;\n        *0xc53c30 = 0;\n        *0xc53c34 = 0;\n        *0xc53c38 = 0;\n        *0xc53c3c = 0;\n        *0xc53c40 = L\"WINMINIMIZEALLUNDO\";\n        *0xc53c4c = 0xc15c1f;\n        *0xc53c50 = 0;\n        *0xc53c54 = 0;\n        *0xc53c58 = 0;\n        *0xc53c5c = 0;\n        *0xc53c60 = 0;\n        *0xc53c64 = L\"WINMOVE\";\n        *0xc53c70 = fcn.00c15c53;\n        *0xc53c74 = 0;\n        *0xc53c78 = 0;\n        *0xc53c7c = 4;\n        *0xc53c80 = 7;\n        *0xc53c84 = 0;\n        *0xc53c88 = L\"WINSETONTOP\";\n        *0xc53c94 = fcn.00c15e5c;\n        *0xc53c98 = 0;\n        *0xc53c9c = 0;\n        *0xc53ca0 = 3;\n        *0xc53ca4 = 3;\n        *0xc53ca8 = 0;\n        *0xc53cac = L\"WINSETSTATE\";\n        *0xc53cb8 = fcn.00c15efb;\n        *0xc53cbc = 0;\n        *0xc53cc0 = 0;\n        *0xc53cc4 = 3;\n        *0xc53cc8 = 3;\n        *0xc53ccc = 0;\n        *0xc53cd0 = L\"WINSETTITLE\";\n        *0xc53cdc = fcn.00ba3b6e;\n        *0xc53ce0 = 0;\n        *0xc53ce4 = 0;\n        *0xc53ce8 = 3;\n        *0xc53cec = 3;\n        *0xc53cf0 = 0;\n        *0xc53cf4 = L\"WINSETTRANS\";\n        *0xc53d00 = fcn.00c15f98;\n        *0xc53d04 = 0;\n        *0xc53d08 = 0;\n        *0xc53d0c = 3;\n        *0xc53d10 = 3;\n        *0xc53d14 = 0;\n        *0xc53d18 = L\"WINWAIT\";\n        *0xc53d24 = fcn.00c1604c;\n        *0xc53d28 = 0;\n        *0xc53d2c = 0;\n        *0xc53d30 = 1;\n        *0xc53d34 = 3;\n        *0xc53d38 = 0;\n        *0xc53d3c = L\"WINWAITACTIVE\";\n        *0xc53d48 = fcn.00c160a4;\n        *0xc53d4c = 0;\n        *0xc53d50 = 0;\n        *0xc53d54 = 1;\n        *0xc53d58 = 3;\n        *0xc53d5c = 0;\n        *0xc53d60 = L\"WINWAITCLOSE\";\n        *0xc53d6c = fcn.00c160fc;\n        *0xc53d70 = 0;\n        *0xc53d74 = 0;\n        *0xc53d78 = 1;\n        *0xc53d7c = 3;\n        *0xc53d80 = 0;\n        *0xc53d84 = L\"WINWAITNOTACTIVE\";\n        *0xc53d90 = fcn.00c16154;\n        *0xc53d94 = 0;\n        *0xc53d98 = 0;\n        *0xc53d9c = 1;\n        *0xc53da0 = 3;\n        *0xc53da4 = 0;\n    }\n    if ((*0xc57418 & 2) == 0) {\n        *0xc57418 = *0xc57418 | 2;\n        *in_ECX = 0x196;\n        *0xc57414 = 0x196;\n    }\n    return arg_8h * 0x24 + 0xc50490;\n}\n",
        "token_count": 34210
    },
    "00bafca2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nfloat10 __thiscall fcn.00bafca2(uint32_t param_1, double param_2)\n\n{\n    uint32_t uVar1;\n    float10 fVar2;\n    float10 fVar3;\n    \n    uVar1 = param_1;\n    if (param_1 < 0) {\n        uVar1 = -param_1;\n    }\n    fVar2 = param_2;\n    fVar3 = 1;\n    while( true ) {\n        if ((uVar1 & 1) != 0) {\n            fVar3 = fVar3 * fVar2;\n        }\n        uVar1 = uVar1 >> 1;\n        if (uVar1 == 0) break;\n        fVar2 = fVar2 * fVar2;\n    }\n    if (-1 < param_1) {\n        return fVar3;\n    }\n    return 1 / fVar3;\n}\n",
        "token_count": 202
    },
    "00bb07f6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nfloat10 fcn.00bb07f6(void)\n\n{\n    if ((*0xc57430 & 1) == 0) {\n        *0xc57430 = *0xc57430 | 1;\n        fcn.00bb081a();\n    }\n    return *0xc57438;\n}\n",
        "token_count": 66
    },
    "00bbdac6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00bbdac6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00bb8b40(0xc4bf30, 0x10);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.00bb8d34();\n        *puVar1 = 0;\n        puVar1 = fcn.00bb8d68();\n        *puVar1 = 9;\n    }\n    else {\n        if ((arg_8h_00 < 0) || (*0xc5518c <= arg_8h_00)) {\n            puVar1 = fcn.00bb8d34();\n            *puVar1 = 0;\n        }\n        else {\n            iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0xc549e0) + 4 + iVar3) & 1) != 0) {\n                fcn.00bbd446(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((arg_8h_00 >> 5) * 4 + 0xc549e0) + 4 + iVar3) & 1) == 0) {\n                    puVar1 = fcn.00bb8d68();\n                    *puVar1 = 9;\n                    puVar1 = fcn.00bb8d34();\n                    *puVar1 = 0;\n                    uVar2 = 0xffffffff;\n                }\n                else {\n                    uVar2 = fcn.00bbdbb5(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                }\n                *(unaff_EBP + -0x1c) = uVar2;\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00bbdb8d();\n                goto code_r0x00bbdbaf;\n            }\n            puVar1 = fcn.00bb8d34();\n            *puVar1 = 0;\n        }\n        puVar1 = fcn.00bb8d68();\n        *puVar1 = 9;\n        fcn.00bb8ff6();\n    }\ncode_r0x00bbdbaf:\n    fcn.00bb8b85();\n    return;\n}\n",
        "token_count": 658
    },
    "00bc187f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00bc187f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00bb8b40(0xc4bfd0, 0x10);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar1 = fcn.00bb8d34();\n        *puVar1 = 0;\n        puVar1 = fcn.00bb8d68();\n        *puVar1 = 9;\n    }\n    else {\n        if ((arg_8h_00 < 0) || (*0xc5518c <= arg_8h_00)) {\n            puVar1 = fcn.00bb8d34();\n            *puVar1 = 0;\n        }\n        else {\n            iVar3 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*((arg_8h_00 >> 5) * 4 + 0xc549e0) + 4 + iVar3) & 1) != 0) {\n                fcn.00bbd446(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((arg_8h_00 >> 5) * 4 + 0xc549e0) + 4 + iVar3) & 1) == 0) {\n                    puVar1 = fcn.00bb8d68();\n                    *puVar1 = 9;\n                    puVar1 = fcn.00bb8d34();\n                    *puVar1 = 0;\n                    uVar2 = 0xffffffff;\n                }\n                else {\n                    uVar2 = fcn.00bc196e(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                }\n                *(unaff_EBP + -0x1c) = uVar2;\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00bc1946();\n                goto code_r0x00bc1968;\n            }\n            puVar1 = fcn.00bb8d34();\n            *puVar1 = 0;\n        }\n        puVar1 = fcn.00bb8d68();\n        *puVar1 = 9;\n        fcn.00bb8ff6();\n    }\ncode_r0x00bc1968:\n    fcn.00bb8b85();\n    return;\n}\n",
        "token_count": 656
    },
    "00bc5ccc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00bc5ccc(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    code *var_18h;\n    code *var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    pcVar6 = _sym.imp.KERNEL32.dll_EncodePointer;\n    var_4h = *0xc4fd50 ^ &stack0xfffffffc;\n    var_1ch = arg_8h;\n    iVar7 = 0;\n    arg_8h_00 = 0;\n    var_20h = arg_ch;\n    pcVar1 = (*_sym.imp.KERNEL32.dll_EncodePointer)();\n    var_18h = pcVar1;\n    var_14h = fcn.00bba099();\n    if (*0xc550e8 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0x800);\n        if (((iVar2 == 0) &&\n            ((iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 != 0x57 ||\n             (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"USER32.DLL\", 0, 0),  iVar2 == 0)))) ||\n           (iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0xc30db0),  iVar3 == 0)) goto code_r0x00bc5ea1;\n        *0xc550e8 = (*pcVar6)(iVar3);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0xc30dbc);\n        *0xc550ec = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetLastActivePopup\");\n        *0xc550f0 = (*pcVar6)(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"GetUserObjectInformationW\");\n        *0xc550f8 = (*pcVar6)(uVar4);\n        pcVar1 = var_18h;\n        if (*0xc550f8 != NULL) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0xc30dfc);\n            *0xc550f4 = (*pcVar6)(uVar4);\n            pcVar1 = var_18h;\n        }\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 == 0) {\n        if (var_14h != NULL) {\n            (*_sym.imp.KERNEL32.dll_DecodePointer)(*0xc550e8);\n            goto code_r0x00bc5ea1;\n        }\n    }\n    else {\n        if (var_1ch != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(var_1ch);\n        }\n        if (var_14h != NULL) goto code_r0x00bc5ea1;\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0xc550f4 == pcVar1) || (*0xc550f8 == pcVar1)) {\ncode_r0x00bc5e57:\n        if ((((*0xc550ec != pcVar1) && (pcVar5 = (*pcVar6)(*0xc550ec),  pcVar5 != NULL)) &&\n            (iVar7 = (*pcVar5)(),  iVar7 != 0)) &&\n           ((*0xc550f0 != pcVar1 && (pcVar1 = (*pcVar6)(*0xc550f0),  pcVar1 != NULL)))) {\n            iVar7 = (*pcVar1)(iVar7);\n        }\n    }\n    else {\n        var_14h = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0xc550f4);\n        var_18h = (*pcVar6)(*0xc550f8);\n        if (((var_14h == NULL) || (var_18h == NULL)) ||\n           (((iVar2 = (*var_14h)(),  iVar2 != 0 && (iVar2 = (*var_18h)(iVar2, 1, &var_10h, 0xc, &var_24h),  iVar2 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x00bc5e57;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0xc550e8);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(iVar7, var_1ch, var_20h, arg_10h);\n    }\ncode_r0x00bc5ea1:\n    fcn.00bbc836(arg_8h_00);\n    return;\n}\n",
        "token_count": 1199
    },
    "00bf9deb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00bf9deb(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    \n    fcn.00b9fbbd();\n    iVar1 = in_ECX[2];\n    *in_ECX = 0xc21cc4;\n    while (iVar1 != 0) {\n        iVar1 = *(iVar1 + 0x38);\n        fcn.00bb001c();\n    }\n    if ((arg_8h & 1) != 0) {\n        fcn.00bb106c(in_ECX + -0x123);\n    }\n    return in_ECX + -0x123;\n}\n",
        "token_count": 151
    },
    "00be81d8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00be81d8(uint32_t arg_8h)\n\n{\n    fcn.00b94024();\n    if ((arg_8h & 1) != 0) {\n        fcn.00bb106c();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00beaa64": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00beabc2)\n// WARNING: Removing unreachable block (ram,0x00beabf5)\n\nuint __cdecl fcn.00beaa64(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t arg_10h;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t unaff_EBX;\n    uint32_t uVar6;\n    int32_t unaff_ESI;\n    uint32_t uVar7;\n    int32_t iStack2608;\n    int32_t iStack2604;\n    int32_t iStack2600;\n    int32_t aiStack2596 [3];\n    uchar auStack2584 [500];\n    uchar auStack2084 [8];\n    uchar auStack2076 [4];\n    uchar auStack2072 [8];\n    uchar auStack2064 [2060];\n    \n    uVar6 = 0;\n    uVar7 = 0;\n    if ((*(arg_ch + 0x88) & 8) == 0) {\n        if ((*(arg_ch + 0x88) & 0x400) != 0) {\n            iVar3 = fcn.00bf18ee(0x202, arg_8h);\n            if (iVar3 != 0) {\n                (*_sym.imp.USER32.dll_SendMessageTimeoutW)\n                          (arg_8h, *(arg_ch + 4), 0x101, iVar3, 2, 5000, &stack0xfffff5c8);\n                fcn.00bf1951(unaff_EBX);\n            }\n            uVar7 = 1;\n            unaff_ESI = 1;\n        }\n        if ((*(arg_ch + 0x88) & 0x10) != 0) {\n            (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2072, 0x400);\n            fcn.00b97f41(auStack2064);\n            fcn.00ba5d24(&iStack2604);\n            fcn.00b95a64();\n            cVar1 = fcn.00bef8b4();\n            uVar6 = cVar1 != '\\0';\n            uVar7 = unaff_ESI + 1;\n        }\n        uVar5 = *(arg_ch + 0x88);\n        if ((uVar5 & 0x20) == 0) {\n            if (((uVar5 & 0xc0) != 0) || ((uVar5 & 0x300) != 0)) {\n                (*_sym.imp.USER32.dll_GetWindowRect)(arg_8h, &iStack2608);\n                uVar4 = (*_sym.imp.USER32.dll_GetParent)(arg_8h, &stack0xfffff5c0);\n                (*_sym.imp.USER32.dll_ScreenToClient)(uVar4);\n                uVar5 = *(arg_ch + 0x88);\n                if ((uVar5 & 0x40) != 0) {\n                    if (*(arg_ch + 0xdc) == unaff_EBX) {\n                        uVar6 = uVar6 + 1;\n                    }\n                    uVar7 = uVar7 + 1;\n                }\n                if (uVar5 < '\\0') {\n                    if (*(arg_ch + 0xe0) == 0) {\n                        uVar6 = uVar6 + 1;\n                    }\n                    uVar7 = uVar7 + 1;\n                }\n                if ((uVar5 & 0x100) != 0) {\n                    if (*(arg_ch + 0xe4) == iStack2600 - iStack2608) {\n                        uVar6 = uVar6 + 1;\n                    }\n                    uVar7 = uVar7 + 1;\n                }\n                if ((uVar5 & 0x200) != 0) {\n                    if (*(arg_ch + 0xe8) == aiStack2596[0] - iStack2604) {\n                        uVar6 = uVar6 + 1;\n                    }\n                    uVar7 = uVar7 + 1;\n                }\n            }\n            if ((uVar5 & 1) != 0) {\n                (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2072, 0x100);\n                iVar3 = fcn.00bb378c(*(arg_ch + 0x8c), auStack2072);\n                if (iVar3 == 0) {\n                    uVar6 = uVar6 + 1;\n                }\n                uVar7 = uVar7 + 1;\n            }\n            if ((*(arg_ch + 0x88) & 4) != 0) {\n                (*_sym.imp.USER32.dll_GetWindowTextW)(arg_8h, auStack2072, 0x400);\n                iVar3 = fcn.00bb378c(*(arg_ch + 0xbc), auStack2084);\n                if (iVar3 == 0) {\n                    uVar6 = uVar6 + 1;\n                }\n                uVar7 = uVar7 + 1;\n            }\n            if ((*(arg_ch + 0x88) & 2) != 0) {\n                if ((uVar6 == uVar7) &&\n                   (*(arg_ch + 0x124) = *(arg_ch + 0x124) + 1,  *(arg_ch + 0x124) == *(arg_ch + 0xd0))) {\n                    uVar6 = uVar6 + 1;\n                }\n                uVar7 = uVar7 + 1;\n            }\n            if (uVar6 == uVar7) {\n                *(arg_ch + 0xd8) = arg_8h;\n                return 0;\n            }\n        }\n        else {\n            iVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(arg_8h);\n            if (*(arg_ch + 0xcc) == iVar3) {\n                *(arg_ch + 0xd8) = arg_8h;\n                return 0;\n            }\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2584, 0x100);\n        arg_10h = fcn.00bb2e3c(aiStack2596);\n        iVar3 = arg_10h;\n        if (arg_10h != 0) {\n            while ((iVar3 = iVar3 + -1,  -1 < iVar3 && (iVar2 = fcn.00bb386c(*(aiStack2596 + iVar3 * 2)),  iVar2 != 0)))\n            {\n                uVar6 = uVar6 + 1;\n            }\n        }\n        if ((((arg_10h < *(arg_ch + 0x128)) && (uVar6 < *(arg_ch + 300))) &&\n            (arg_10h == (*(arg_ch + 0x128) - *(arg_ch + 300)) + uVar6)) &&\n           (iVar3 = fcn.00bb38a2(*(arg_ch + 0x9c), aiStack2596, arg_10h),  iVar3 == 0)) {\n            *(arg_ch + 0x124) = *(arg_ch + 0x124) + 1;\n            fcn.00bb38d8(auStack2076, L\"%s%u\", aiStack2596);\n            iVar3 = fcn.00bb378c(auStack2076, *(arg_ch + 0x9c));\n            if (iVar3 == 0) {\n                *(arg_ch + 0xd8) = arg_8h;\n                return 0;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1715
    },
    "00beb77e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00beb77e(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    \n    iVar1 = in_ECX[2];\n    *in_ECX = 0xc21cc4;\n    while (iVar1 != 0) {\n        iVar1 = *(iVar1 + 0x38);\n        fcn.00bb001c();\n    }\n    if ((arg_8h & 1) != 0) {\n        fcn.00bb106c();\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00becab0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00becab0(uint32_t arg_8h)\n\n{\n    fcn.00beca32();\n    if ((arg_8h & 1) != 0) {\n        fcn.00bb106c();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00becf38": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00becf38(uint32_t arg_8h)\n\n{\n    fcn.00be66f4();\n    if ((arg_8h & 1) != 0) {\n        fcn.00bb106c();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00befae8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00befae8(uint32_t arg_8h)\n\n{\n    fcn.00ba6181();\n    if ((arg_8h & 1) != 0) {\n        fcn.00bb106c();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00bf0f7b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00bf0f7b(uint32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint8_t uVar4;\n    uint32_t dwFlags;\n    uint var_4h;\n    \n    dwFlags = arg_8h & 0xff;\n    uVar2 = (*_sym.imp.USER32.dll_GetKeyState)(dwFlags);\n    pcVar1 = _sym.imp.USER32.dll_MapVirtualKeyW;\n    uVar4 = uVar2 & 1;\n    if (arg_ch != uVar4) {\n        uVar2 = dwFlags;\n        uVar3 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(dwFlags, 0, 0, extraout_ECX);\n        fcn.00bf17d7(arg_8h, uVar3, uVar2);\n        fcn.00bf01fe();\n        uVar3 = (*pcVar1)(dwFlags, 0, 2, extraout_ECX_00);\n        fcn.00bf17d7(arg_8h, uVar3, dwFlags);\n        uVar2 = fcn.00bf01e5();\n    }\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 308
    },
    "00bf1831": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf1831(uint arg_8h)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *in_ECX;\n    \n    in_ECX[1] = 0;\n    *(in_ECX + 10) = 0;\n    *in_ECX = 0xff;\n    *(in_ECX + 2) = arg_8h;\n    if (arg_8h != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_VkKeyScanW)(arg_8h);\n        uVar3 = uVar2 & 0xffff;\n        if (uVar3 != -1) {\n            *in_ECX = uVar3;\n            uVar3 = uVar3 >> 8;\n            uVar1 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(uVar2 & 0xff, 0);\n            *(in_ECX + 7) = uVar1;\n            if ((uVar3 & 1) != 0) {\n                *(in_ECX + 1) = 1;\n            }\n            if ((uVar3 & 2) != 0) {\n                *(in_ECX + 3) = 1;\n            }\n            if ((uVar3 & 4) != 0) {\n                *(in_ECX + 1) = 1;\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 325
    },
    "00bf1b66": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf1b66(uint32_t arg_8h)\n\n{\n    fcn.00b93488();\n    if ((arg_8h & 1) != 0) {\n        fcn.00bb106c();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00bf23e2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00bf23e2(void)\n\n{\n    char cVar1;\n    uint arg_10h;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint var_18h;\n    uint var_10h;\n    \n    if ((*0xc57f0c & 1) == 0) {\n        *0xc574b8 = 0;\n        *0xc574c0 = 0;\n        *0xc57f0c = *0xc57f0c | 1;\n        *0xc574c4 = 1;\n        fcn.00bb2f80(0xbcb7f6);\n    }\n    cVar1 = fcn.00b99dae(0x2a);\n    if (cVar1 == '\\0') {\n        arg_10h = 0xc1f910;\n        fcn.00b97f41(0xc1f910);\n        fcn.00bf6bbd(0x2a, 0, arg_10h, in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0);\n        fcn.00bf77cf(&var_18h);\n        fcn.00b95a64();\n    }\n    return 0xc574b8;\n}\n",
        "token_count": 294
    },
    "00bf6d9b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf6d9b(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0xc32ed8;\n    if ((arg_8h & 1) != 0) {\n        fcn.00bb106c();\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "00bf6dbb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf6dbb(uint32_t arg_8h)\n\n{\n    fcn.00bf6d60();\n    if ((arg_8h & 1) != 0) {\n        fcn.00bb106c();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00bf72d1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00bf72d1(uint8_t *param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (((*param_1 & 1) != 0) && (*(param_1 + 0x18) != 0)) {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 84
    },
    "00bf9dad": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf9dad(uint32_t arg_8h)\n\n{\n    fcn.00bb0999();\n    if ((arg_8h & 1) != 0) {\n        fcn.00bb106c();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00bf9dcc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf9dcc(uint32_t arg_8h)\n\n{\n    fcn.00bb0b5f();\n    if ((arg_8h & 1) != 0) {\n        fcn.00bb106c();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00bfecc1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bfecc1(uint32_t arg_8h, uint arg_ch)\n\n{\n    fcn.00b97eec();\n    if ((arg_8h & 1) != 0) {\n        fcn.00b97e0b(str.RANOCT);\n    }\n    if ((arg_8h & 0x20) != 0) {\n        fcn.00b97e0b(str.RANOCT + 1);\n    }\n    if ((arg_8h & 4) != 0) {\n        fcn.00b97e0b(0xc493a0);\n    }\n    if ((arg_8h & 2) != 0) {\n        fcn.00b97e0b(L\"H\");\n    }\n    if (arg_8h < '\\0') {\n        fcn.00b97e0b(str.RANOCT + 2);\n    }\n    if ((arg_8h & 0x10) != 0) {\n        fcn.00b97e0b(0xc493a4);\n    }\n    if ((arg_8h & 0x1000) != 0) {\n        fcn.00b97e0b(str.RANOCT + 3);\n    }\n    if ((arg_8h & 0x800) != 0) {\n        fcn.00b97e0b(str.RANOCT + 4);\n    }\n    if ((arg_8h & 0x100) != 0) {\n        fcn.00b97e0b(str.RANOCT + 5);\n    }\n    if ((arg_8h & 0x4000) != 0) {\n        fcn.00b97e0b(L\"XYWH\");\n    }\n    return;\n}\n",
        "token_count": 395
    },
    "00bffd79": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bffd79(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_34h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 0;\n    iVar2 = *(*(arg_8h + 4) + 4);\n    if (*(iVar2 + 0xc) == 0xe) {\n        var_4h = 1;\n        puVar1 = fcn.00bf7ba4(&var_34h);\n    }\n    else {\n        var_4h = 2;\n        fcn.00b99997();\n        puVar1 = *(iVar2 + 8);\n        var_24h = *puVar1;\n        var_20h = puVar1[1];\n        var_1ch = puVar1[2];\n        var_18h = puVar1[3];\n        puVar1 = &var_24h;\n        *var_18h = *var_18h + 1;\n    }\n    var_14h = *puVar1;\n    var_10h = puVar1[1];\n    var_ch = puVar1[2];\n    var_8h = puVar1[3];\n    *var_8h = *var_8h + 1;\n    if ((var_4h & 2) != 0) {\n        var_4h = var_4h & 0xfffffffd;\n        fcn.00b95a64();\n    }\n    if ((var_4h & 1) != 0) {\n        fcn.00b95a64();\n    }\n    iVar2 = fcn.00b99fbd(&var_14h);\n    if (iVar2 == 0) {\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        fcn.00be6aa3(2, 0);\n        uVar4 = 0xffffffff;\n    }\n    else {\n        iVar2 = *(iVar2 + 0x14);\n        if (iVar2 < 5) {\n            puVar1 = &var_14h;\n            uVar3 = fcn.00b99c9c();\n            uVar3 = fcn.00c187ec(uVar3, puVar1, iVar2);\n            fcn.00b99a20();\n            *arg_ch = uVar3;\n        }\n        else {\n            fcn.00be6aa3(1, 0);\n            fcn.00b99a20();\n            *arg_ch = 0;\n        }\n        arg_ch[3] = 1;\n    }\n    fcn.00b95a64();\n    return uVar4;\n}\n",
        "token_count": 687
    },
    "00c00470": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c00470(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    bool bVar4;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    iVar2 = *(*(arg_8h + 4) + 4);\n    bVar4 = *(iVar2 + 0xc) != 0xe;\n    if (bVar4) {\n        fcn.00b99997();\n        puVar1 = *(iVar2 + 8);\n        var_28h = *puVar1;\n        var_24h = puVar1[1];\n        var_20h = puVar1[2];\n        var_1ch = puVar1[3];\n        puVar1 = &var_28h;\n        *var_1ch = *var_1ch + 1;\n    }\n    else {\n        puVar1 = fcn.00bf7ba4(&var_38h);\n    }\n    var_18h = *puVar1;\n    var_14h = puVar1[1];\n    var_10h = puVar1[2];\n    var_ch = puVar1[3];\n    *var_ch = *var_ch + 1;\n    if (bVar4) {\n        fcn.00b95a64();\n    }\n    else {\n        fcn.00b95a64();\n    }\n    iVar2 = fcn.00b99fbd(&var_18h);\n    if (iVar2 == 0) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.00be6aa3(1, 0);\n        uVar3 = 0xffffffff;\n    }\n    else {\n        puVar1 = &var_18h;\n        uVar3 = fcn.00b99c9c();\n        uVar3 = fcn.00c19a20(uVar3, puVar1);\n        fcn.00b99a20();\n        *arg_ch = uVar3;\n        arg_ch[3] = 1;\n        uVar3 = 0;\n    }\n    fcn.00b95a64();\n    return uVar3;\n}\n",
        "token_count": 587
    },
    "00c00ba9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c00ba9(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    bool bVar4;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    iVar2 = *(*(arg_8h + 4) + 4);\n    bVar4 = *(iVar2 + 0xc) != 0xe;\n    if (bVar4) {\n        fcn.00b99997();\n        puVar1 = *(iVar2 + 8);\n        var_28h = *puVar1;\n        var_24h = puVar1[1];\n        var_20h = puVar1[2];\n        var_1ch = puVar1[3];\n        puVar1 = &var_28h;\n        *var_1ch = *var_1ch + 1;\n    }\n    else {\n        puVar1 = fcn.00bf7ba4(&var_38h);\n    }\n    iVar2 = puVar1[1];\n    var_18h = *puVar1;\n    var_10h = puVar1[2];\n    var_ch = puVar1[3];\n    *var_ch = *var_ch + 1;\n    var_14h = iVar2;\n    if (bVar4) {\n        fcn.00b95a64();\n    }\n    else {\n        fcn.00b95a64();\n    }\n    if ((iVar2 == 0) || (iVar2 = fcn.00b99fbd(&var_18h),  iVar2 != 0)) {\n        puVar1 = &var_18h;\n        uVar3 = fcn.00b99c9c();\n        uVar3 = fcn.00c1b1a0(uVar3, puVar1);\n        fcn.00b99a20();\n        *arg_ch = uVar3;\n        arg_ch[3] = 1;\n        uVar3 = 0;\n    }\n    else {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.00be6aa3(1, 0);\n        uVar3 = 0xffffffff;\n    }\n    fcn.00b95a64();\n    return uVar3;\n}\n",
        "token_count": 607
    },
    "00c016ce": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c016ce(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    in_ECX[6] = 0;\n    in_ECX[7] = 0;\n    fcn.00b97f41(arg_8h);\n    fcn.00b97f41(arg_ch);\n    in_ECX[0x11] = 0xc32f48;\n    in_ECX[0x12] = 0;\n    in_ECX[0x13] = 0;\n    in_ECX[0x14] = 0;\n    in_ECX[0x15] = 0;\n    fcn.00c017a3(&arg_18h);\n    *(in_ECX + 0x34) = arg_14h;\n    *0xc5751c = *0xc5751c + 1;\n    in_ECX[0x35] = 0;\n    in_ECX[0x36] = *0xc5751c;\n    *(in_ECX + 0x37) = 1;\n    *(in_ECX + 0xc) = in_ECX[0xe] == 0;\n    if ((arg_10h & 1) != 0) {\n        in_ECX[0x15] = in_ECX[0x15] | 0x80000000;\n    }\n    if ((arg_10h & 2) != 0) {\n        in_ECX[0x15] = in_ECX[0x15] | 0x3000;\n    }\n    if ((arg_10h & 4) == 0) {\ncode_r0x00c0177d:\n        if ((arg_10h & 8) == 0) goto code_r0x00c01789;\n    }\n    else if ((arg_10h & 8) == 0) {\n        in_ECX[0x15] = in_ECX[0x15] | 1;\n        goto code_r0x00c0177d;\n    }\n    if ((arg_10h & 4) == 0) {\n        in_ECX[0x15] = in_ECX[0x15] | 2;\n    }\ncode_r0x00c01789:\n    if ((arg_10h & 0x10) != 0) {\n        *(in_ECX + 0x37) = 0;\n    }\n    fcn.00bb01e5();\n    return;\n}\n",
        "token_count": 639
    },
    "00c0193a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c0193a(uint32_t arg_8h)\n\n{\n    fcn.00c018b1();\n    if ((arg_8h & 1) != 0) {\n        fcn.00bb106c();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00c01959": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00c01959(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    \n    fcn.00bb01a9();\n    iVar1 = in_ECX[2];\n    *in_ECX = 0xc21cc4;\n    while (iVar1 != 0) {\n        iVar1 = *(iVar1 + 0x38);\n        fcn.00bb001c();\n    }\n    if ((arg_8h & 1) != 0) {\n        fcn.00bb106c(in_ECX + -0x22);\n    }\n    return in_ECX + -0x22;\n}\n",
        "token_count": 150
    },
    "00c057db": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c057db(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uchar *puVar4;\n    bool bVar5;\n    uchar *arg_8h_00;\n    uchar auStack68 [4];\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t *piStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    int32_t *piStack28;\n    uchar auStack24 [20];\n    \n    uStack64 = 0;\n    iVar3 = **(arg_8h + 4);\n    bVar5 = *(iVar3 + 0xc) != 0xe;\n    if (bVar5) {\n        arg_8h_00 = 0xc05817;\n        fcn.00b99997();\n        puVar2 = *(iVar3 + 8);\n        uStack40 = *puVar2;\n        uStack36 = puVar2[1];\n        uStack32 = puVar2[2];\n        piStack28 = puVar2[3];\n        puVar2 = &stack0xffffffd8;\n        *piStack28 = *piStack28 + 1;\n    }\n    else {\n        arg_8h_00 = &stack0xffffffe8;\n        puVar2 = fcn.00bf7ba4(arg_8h_00);\n    }\n    uStack60 = *puVar2;\n    uStack56 = puVar2[1];\n    uStack52 = puVar2[2];\n    piStack48 = puVar2[3];\n    *piStack48 = *piStack48 + 1;\n    if (bVar5) {\n        fcn.00b95a64();\n    }\n    else {\n        fcn.00b95a64();\n    }\n    fcn.00b97faf();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(uStack60, uStack56);\n    iVar3 = fcn.00b99fbd(&stack0xffffffbc);\n    if (iVar3 == 0) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        puVar4 = *(in_ECX + 0x128);\n        while (puVar4 != NULL) {\n            cVar1 = fcn.00ba5ee9();\n            if (cVar1 != '\\0') {\n                fcn.00baff61(1, 0);\n                goto code_r0x00c05905;\n            }\n            puVar4 = arg_8h_00;\n            fcn.00be6cea(&stack0xffffffb4);\n            arg_8h_00 = puVar4;\n        }\n        fcn.00bfa39b(&stack0xffffffb8);\n    }\ncode_r0x00c05905:\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 691
    },
    "00c05919": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c05919(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uchar *puVar4;\n    bool bVar5;\n    uchar *arg_8h_00;\n    uchar auStack68 [4];\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t *piStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    int32_t *piStack28;\n    uchar auStack24 [20];\n    \n    uStack64 = 0;\n    iVar3 = **(arg_8h + 4);\n    bVar5 = *(iVar3 + 0xc) != 0xe;\n    if (bVar5) {\n        arg_8h_00 = 0xc05955;\n        fcn.00b99997();\n        puVar2 = *(iVar3 + 8);\n        uStack40 = *puVar2;\n        uStack36 = puVar2[1];\n        uStack32 = puVar2[2];\n        piStack28 = puVar2[3];\n        puVar2 = &stack0xffffffd8;\n        *piStack28 = *piStack28 + 1;\n    }\n    else {\n        arg_8h_00 = &stack0xffffffe8;\n        puVar2 = fcn.00bf7ba4(arg_8h_00);\n    }\n    uStack60 = *puVar2;\n    uStack56 = puVar2[1];\n    uStack52 = puVar2[2];\n    piStack48 = puVar2[3];\n    *piStack48 = *piStack48 + 1;\n    if (bVar5) {\n        fcn.00b95a64();\n    }\n    else {\n        fcn.00b95a64();\n    }\n    fcn.00b97faf();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(uStack60, uStack56);\n    iVar3 = fcn.00b99fbd(&stack0xffffffbc);\n    if (iVar3 != 0) {\n        puVar4 = *(in_ECX + 0x128);\n        while (puVar4 != NULL) {\n            cVar1 = fcn.00ba5ee9();\n            if (cVar1 != '\\0') {\n                fcn.00c082cb(&stack0xffffffb0);\n                goto code_r0x00c05a31;\n            }\n            puVar4 = arg_8h_00;\n            fcn.00be6cea(&stack0xffffffb4);\n            arg_8h_00 = puVar4;\n        }\n    }\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\ncode_r0x00c05a31:\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 673
    },
    "00c0cdb3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c0cdb3(uint32_t arg_8h)\n\n{\n    fcn.00c0cd60();\n    if ((arg_8h & 1) != 0) {\n        fcn.00bb106c();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00c0cdd2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c0cdd2(uint32_t arg_8h)\n\n{\n    fcn.00c0cd9a();\n    if ((arg_8h & 1) != 0) {\n        fcn.00bb106c();\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00c118f8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c118f8(uint32_t arg_8h)\n\n{\n    fcn.00bb0ab3();\n    if ((arg_8h & 1) != 0) {\n        fcn.00bb106c();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00c13088": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c13088(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    bool bVar4;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    iVar2 = *(*(arg_8h + 4) + 4);\n    bVar4 = *(iVar2 + 0xc) != 0xe;\n    if (bVar4) {\n        fcn.00b99997();\n        puVar1 = *(iVar2 + 8);\n        var_28h = *puVar1;\n        var_24h = puVar1[1];\n        var_20h = puVar1[2];\n        var_1ch = puVar1[3];\n        puVar1 = &var_28h;\n        *var_1ch = *var_1ch + 1;\n    }\n    else {\n        puVar1 = fcn.00bf7ba4(&var_38h);\n    }\n    var_18h = *puVar1;\n    var_14h = puVar1[1];\n    var_10h = puVar1[2];\n    var_ch = puVar1[3];\n    *var_ch = *var_ch + 1;\n    if (bVar4) {\n        fcn.00b95a64();\n    }\n    else {\n        fcn.00b95a64();\n    }\n    iVar2 = fcn.00b99fbd(&var_18h);\n    if (iVar2 == 0) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.00be6aa3(1, 0);\n        uVar3 = 0xffffffff;\n    }\n    else {\n        puVar1 = &var_18h;\n        uVar3 = fcn.00b99c9c();\n        uVar3 = fcn.00bf31da(uVar3, puVar1);\n        fcn.00b99a20();\n        *arg_ch = uVar3;\n        arg_ch[3] = 1;\n        uVar3 = 0;\n    }\n    fcn.00b95a64();\n    return uVar3;\n}\n",
        "token_count": 586
    },
    "00c132bb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c132bb(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    bool bVar4;\n    uint var_34h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar2 = *(*(arg_8h + 4) + 4);\n    bVar4 = *(iVar2 + 0xc) != 0xe;\n    if (bVar4) {\n        fcn.00b99997();\n        puVar1 = *(iVar2 + 8);\n        var_24h = *puVar1;\n        var_20h = puVar1[1];\n        var_1ch = puVar1[2];\n        var_18h = puVar1[3];\n        puVar1 = &var_24h;\n        *var_18h = *var_18h + 1;\n    }\n    else {\n        puVar1 = fcn.00bf7ba4(&var_34h);\n    }\n    var_14h = *puVar1;\n    var_10h = puVar1[1];\n    var_ch = puVar1[2];\n    var_8h = puVar1[3];\n    *var_8h = *var_8h + 1;\n    if (bVar4) {\n        fcn.00b95a64();\n    }\n    else {\n        fcn.00b95a64();\n    }\n    iVar2 = fcn.00b99fbd(&var_14h);\n    if (iVar2 == 0) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        puVar1 = &var_14h;\n        uVar3 = fcn.00b99c9c();\n        uVar3 = fcn.00bf32f5(uVar3, puVar1);\n        fcn.00b99a20();\n        *arg_ch = uVar3;\n        arg_ch[3] = 1;\n    }\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 566
    },
    "00c162d9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c162d9(uint32_t arg_8h)\n\n{\n    fcn.00b93569();\n    if ((arg_8h & 1) != 0) {\n        fcn.00bb106c();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00c01b21": {
        "rules": [
            "check HTTP status code/09dd97b2e76544bcbbe79d95da398605"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00c01b21(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    ulong uVar4;\n    uint arg_8h_01;\n    uint *arg_ch_00;\n    uint arg_10h;\n    uint var_24h;\n    ushort var_6h;\n    uint var_4h;\n    \n    arg_8h_00 = (*_sym.imp.WININET.dll_InternetOpenUrlW)\n                          (*(in_ECX + 4), *(in_ECX + 0x20), 0, 0, *(in_ECX + 0x54) & 0x80000000, 0);\n    if (arg_8h_00 == 0) {\n        arg_10h = 0;\n        arg_ch_00 = 0xdeadbeef;\n        arg_8h_01 = 0x29;\n    }\n    else {\n        arg_10h = arg_8h;\n        fcn.00c027ae(arg_8h_00, arg_8h);\n        iVar1 = (*_sym.imp.WININET.dll_HttpSendRequestW)(arg_8h_00, 0, 0, 0, 0);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00c01cc8(arg_8h_00);\n            if (iVar1 == 200) {\n                arg_ch_00 = &arg_8h;\n                arg_8h = 0;\n                var_4h = 0x20;\n                (*_sym.imp.WININET.dll_HttpQueryInfoW)(arg_8h_00, 5, &var_24h, &var_4h);\n                var_6h = 0;\n                uVar4 = fcn.00bb37d3(&var_24h);\n                *(in_ECX + 0x10) = uVar4;\n                *(in_ECX + 0x14) = uVar4 >> 0x20;\n                if (arg_ch != '\\0') {\n                    uVar2 = fcn.00c025e2(arg_8h_00);\n                    goto code_r0x00c01bd6;\n                }\n                arg_8h_01 = 0;\n                goto code_r0x00c01bd1;\n            }\n        }\n        arg_10h = 0;\n        arg_ch_00 = 0xdeadbeef;\n        arg_8h_01 = 0x2a;\n    }\ncode_r0x00c01bd1:\n    uVar2 = fcn.00c02777(arg_8h_01, arg_ch_00, arg_10h);\ncode_r0x00c01bd6:\n    uVar3 = uVar2;\n    if (arg_8h_00 != 0) {\n        uVar3 = (*_sym.imp.WININET.dll_InternetCloseHandle)(arg_8h_00);\n    }\n    return uVar3 & 0xffffff00 | uVar2 & 0xff;\n}\n",
        "token_count": 710
    },
    "00b971eb": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b971eb(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int32_t *unaff_EBX;\n    int32_t unaff_EDI;\n    bool bVar5;\n    ushort in_stack_00000018;\n    ushort in_stack_0000001c;\n    uint uVar6;\n    uint uVar7;\n    uchar *puVar8;\n    \n    fcn.00bc1b90();\n    bVar5 = false;\n    *0xc57294 = arg_8h;\n    *0xc57290 = 0;\n    *0xc57292 = 0;\n    *0xc57298 = 0;\n    *0xc5729c = 0;\n    *0xc572a0 = 0;\n    *0xc572a4 = 0;\n    *0xc572a8 = 0xc1f968;\n    *0xc572ac = 0;\n    *0xc572b0 = 0;\n    *0xc572b4 = 0;\n    *0xc572b8 = 0xc1fb88;\n    *0xc572bc = 0;\n    *0xc572c0 = 0;\n    *0xc572c4 = 0;\n    *0xc572c8 = 0xc1f968;\n    *0xc572cc = 0;\n    *0xc572d0 = 0;\n    *0xc572d4 = 0;\n    *0xc572dc = 0;\n    *0xc572e0 = 0xc1f918;\n    *0xc572e4 = 0;\n    *0xc572e8 = 0;\n    *0xc572ec = 0;\n    *0xc572f0 = 0x66;\n    fcn.00b977c7();\n    fcn.00b94864();\n    fcn.00bb074f();\n    fcn.00b97e0b(0xc22350);\n    fcn.00b93f84(&stack0x00000010);\n    fcn.00b977c7();\n    fcn.00b97eec();\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegQueryValueExW;\n    if (iVar2 == 0) {\n        puVar8 = &stack0xffffffe4;\n        uVar7 = 0;\n        uVar6 = 0;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(&stack0xfffffff4, L\"Include\", 0, 0);\n        if (iVar2 == 0) {\n            arg_8h_00 = fcn.00bb0ff6(-(ZEXT48(puVar8 + 1) * 2 >> 0x20 != 0) | ZEXT48(puVar8 + 1) * 2);\n            fcn.00b9538e(arg_8h_00);\n            iVar2 = (*pcVar1)(uVar6, L\"Include\", 0, 0, unaff_EDI, &stack0xffffffc8);\n            bVar5 = iVar2 == 0;\n            if (bVar5) {\n                *(unaff_EDI + (puVar8 & 0xfffffffe)) = 0;\n                fcn.00b97d2c(unaff_EDI);\n            }\n            *unaff_EBX = *unaff_EBX + -1;\n            if (*unaff_EBX == 0) {\n                fcn.00bb106c(unaff_EBX);\n                fcn.00bb106c(unaff_EDI);\n            }\n        }\n        iVar2 = 0;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uVar7);\n        if (bVar5) {\n            in_stack_00000018 = 0;\n            do {\n                fcn.00b97b52(iVar2);\n                piVar3 = fcn.00b97b52(iVar2);\n                if ((*piVar3 == 0) || (piVar3 = fcn.00b97b52(iVar2),  *piVar3 == 0x3b)) {\n                    iVar4 = fcn.00bb2e3c(&stack0x00000024);\n                    if ((iVar4 != 0) &&\n                       (iVar4 = fcn.00bb2e3c(&stack0x00000024),  *(&stack0x00000022 + iVar4 * 2) != 0x5c)) {\n                        fcn.00bb2fcd(&stack0x00000024, 0xc1fac0);\n                    }\n                    fcn.00b97f41(&stack0x00000024);\n                    fcn.00b93f84(&stack0x00000010);\n                    fcn.00b95a64();\n                    in_stack_0000001c = 0;\n                    piVar3 = fcn.00b97b52(iVar2);\n                    if (*piVar3 == 0) break;\n                }\n                else {\n                    fcn.00bb2fcd(&stack0x0000000c, &stack0xffffffd4);\n                }\n                iVar2 = iVar2 + 1;\n            } while( true );\n        }\n    }\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return 0xc57290;\n}\n",
        "token_count": 1235
    },
    "00be7d24": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00be7d24(uint pclsid, int32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    int16_t *in_EDX;\n    uint lpData;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_40h;\n    uint lpSubKey;\n    uint lpMachineName;\n    uint phkResult;\n    uint32_t lpcbData;\n    uint hKey;\n    \n    phkResult = 0;\n    hKey = 0;\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b97d2c(0xc493a8);\n    fcn.00b97e0b(in_ECX);\n    fcn.00b97e0b(L\"\\\\CLSID\");\n    fcn.00b97eec();\n    if (in_EDX != NULL) {\n        if ((*in_EDX != 0x5c) && (in_EDX[1] != 0x5c)) {\n            fcn.00b97d2c(0xc493dc);\n            fcn.00b97e0b(in_EDX);\n        }\n    }\n    if (arg_ch != 0) {\n        fcn.00bb3020(&var_60h, 0, 0x20);\n        var_5ch = 0;\n        fcn.00b981a7(&lpMachineName);\n        fcn.00b97e0b(L\"\\\\IPC$\");\n        var_4ch = var_40h;\n        iVar3 = (*_sym.imp.MPR.dll_WNetAddConnection2W)(&var_60h, arg_10h, arg_ch, 0);\n        if (iVar3 < 0) goto code_r0x00be7e84;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(lpMachineName, 0x80000002, &phkResult);\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(phkResult, lpSubKey, 0, 0x20019, &hKey);\n        pcVar2 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n        if (iVar3 == 0) {\n            lpcbData = 0x1fe;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, 0, 0, 0, &lpData, &lpcbData);\n            if (iVar3 == 0) {\n                uVar1 = lpcbData & 0xfffffffe;\n                lpcbData = lpcbData >> 1;\n                *(&lpData + uVar1) = 0;\n                iVar3 = (*_sym.imp.ole32.dll_CLSIDFromString)(&lpData, pclsid);\n            }\n            (*pcVar2)(hKey);\n        }\n        (*pcVar2)(phkResult);\n    }\ncode_r0x00be7e84:\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return iVar3;\n}\n",
        "token_count": 754
    },
    "00bf8a2c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t fcn.00bf8a2c(void)\n\n{\n    uint32_t uVar1;\n    \n    *0xc54190 = *0xc54190 + -1;\n    if (*0xc54190 == 0) {\n        fcn.00bf8b13();\n    }\n    uVar1 = **0xc57ef0 ^ **0xc57ef0 >> 0xb;\n    uVar1 = uVar1 ^ (uVar1 & 0xff3a58ad) << 7;\n    uVar1 = uVar1 ^ (uVar1 & 0xffffdf8c) << 0xf;\n    *0xc57ef0 = *0xc57ef0 + 1;\n    return (uVar1 >> 0x12 ^ uVar1) >> 1;\n}\n",
        "token_count": 179
    },
    "00b95ea1": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b95ea1(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t *in_ECX;\n    \n    if (((0x2f < *(in_ECX + 2)) && (*(in_ECX + 2) < 0x40)) && (*in_ECX != 0)) {\n        fcn.00b97b3d(*in_ECX);\n    }\n    puVar2 = fcn.00bb0ff6(0x10);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        *puVar2 = *arg_8h;\n        puVar2[1] = arg_8h[1];\n        puVar2[2] = arg_8h[2];\n        piVar1 = arg_8h[3];\n        puVar2[3] = piVar1;\n        *piVar1 = *piVar1 + 1;\n    }\n    *in_ECX = puVar2;\n    return;\n}\n",
        "token_count": 240
    },
    "00b95f8a": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00b95f8a(int32_t param_1)\n\n{\n    int16_t iVar1;\n    unkuint3 Var2;\n    \n    iVar1 = *(param_1 + 8);\n    Var2 = iVar1 >> 8;\n    if ((iVar1 < 0x40) && (0x2f < iVar1)) {\n        return CONCAT31(Var2, 1);\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 104
    },
    "00b969ca": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00b969ca(uint *arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    uint32_t uVar8;\n    uint var_68h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    uVar8 = 0;\n    iVar2 = fcn.00b94f3d(*arg_8h, 1);\n    if ((iVar2 == 0) || (iVar2 = fcn.00b94f3d(*arg_8h, 2),  iVar2 == 0)) {\n        iVar2 = fcn.00bf97e5(L\">>>AUTOIT SCRIPT<<<\", &arg_10h, &arg_ch);\n        if (iVar2 == 0) {\n            uVar3 = 4;\n            var_18h._0_2_ = 0xffff;\n            iVar2 = *arg_10h;\n            *(in_ECX + 0x10) = iVar2;\n            arg_ch = iVar2 + 1;\n            var_30h = 0xc1fb78;\n            var_2ch = 0;\n            var_28h = 0;\n            var_24h = 0;\n            uVar6 = -(arg_ch * 0x10 >> 0x20 != 0) | arg_ch * 0x10;\n            puVar4 = fcn.00bb0ff6(-(0xfffffffb < uVar6) | uVar6 + 4);\n            if (puVar4 == NULL) {\n                puVar7 = NULL;\n            }\n            else {\n                puVar7 = puVar4 + 1;\n                *puVar4 = arg_ch;\n                puVar4 = puVar7;\n                uVar6 = arg_ch;\n                while (uVar6 = uVar6 - 1,  -1 < uVar6) {\n                    *puVar4 = 0xc1fb78;\n                    puVar4[1] = 0;\n                    puVar4[2] = 0;\n                    puVar4[3] = 0;\n                    puVar4 = puVar4 + 4;\n                }\n            }\n            *(in_ECX + 0x4c) = puVar7;\n            var_18h._2_2_ = 0xffff;\n            var_ch = 1;\n            if (0 < *(in_ECX + 0x10)) {\n                var_8h = 0x10;\n                do {\n                    fcn.00b975e0();\ncode_r0x00bce527:\n                    do {\n                        uVar6 = uVar3 + 1;\n                        var_14h = *(arg_10h + uVar3);\n                        arg_ch = uVar6;\n                        fcn.00b95f12(var_14h);\n                        cVar1 = fcn.00bf768b();\n                        if (cVar1 == '\\0') {\n                            cVar1 = fcn.00bf7675();\n                            if (cVar1 == '\\0') {\n                                cVar1 = fcn.00bf765f();\n                                if (cVar1 == '\\0') {\n                                    cVar1 = fcn.00b95f8a();\n                                    uVar3 = uVar6;\n                                    if (cVar1 != '\\0') {\n                                        uVar5 = fcn.00befc4d(arg_10h, &arg_ch);\n                                        var_10h = uVar5;\n                                        if (var_14h == 0x31) {\n                                            fcn.00b97f41(uVar5);\n                                            uVar3 = (**(**(in_ECX + 4) + 4))(var_40h);\n                                            fcn.00b95a64();\n                                            uVar5 = 1;\ncode_r0x00bce60b:\n                                            fcn.00b95f12(uVar5);\n                                            _var_20h = _var_20h & 0xffffffff00000000 | uVar3;\n                                            uVar5 = var_10h;\n                                        }\n                                        else {\n                                            if (var_14h == 0x30) {\n                                                fcn.00b97f41(uVar5);\n                                                uVar3 = fcn.00b96999(&var_50h);\n                                                fcn.00b95a64();\n                                                uVar5 = 0;\n                                                goto code_r0x00bce60b;\n                                            }\n                                            if (var_14h == 0x37) {\n                                                iVar2 = fcn.00befb6e(uVar5);\n                                                if (iVar2 == 0) {\n                                                    fcn.00befcb1(arg_8h, var_ch, L\"Bad directive syntax error\", 0xc1f910\n                                                                );\n                                                    fcn.00bb106c(uVar5);\n                                                    fcn.00bb2f95(arg_10h);\n                                                    fcn.00b94faa();\n                                                    goto code_r0x00bce69c;\n                                                }\n                                                fcn.00bb106c(uVar5);\n                                                uVar3 = arg_ch;\n                                                goto code_r0x00bce527;\n                                            }\n                                            fcn.00bf7621(uVar5);\n                                        }\n                                        fcn.00bb106c(uVar5);\n                                        uVar3 = arg_ch;\n                                    }\n                                }\n                                else {\n                                    _var_20h = *(arg_10h + uVar6);\n                                    uVar3 = uVar3 + 9;\n                                }\n                            }\n                            else {\n                                _var_20h = *(arg_10h + uVar6);\n                                uVar3 = uVar3 + 9;\n                            }\n                        }\n                        else {\n                            _var_20h = _var_20h & 0xffffffff00000000 | *(arg_10h + uVar6);\n                            uVar3 = uVar3 + 5;\n                        }\n                        fcn.00b9766f(&var_20h);\n                    } while (var_14h != 0x7f);\n                    fcn.00b974bd(&var_30h);\n                    var_8h = var_8h + 0x10;\n                    var_ch = var_ch + 1;\n                } while (var_ch <= *(in_ECX + 0x10));\n            }\n            fcn.00bb2f95(arg_10h);\n            fcn.00b94faa();\n            uVar8 = 1;\ncode_r0x00bce69c:\n            fcn.00b97776();\n            uVar3 = fcn.00b95efb();\n            goto code_r0x00b96a31;\n        }\n        fcn.00b94faa();\n        uVar5 = extraout_ECX_00;\n    }\n    else {\n        uVar5 = extraout_ECX;\n        if (*arg_10h != 4) {\n            *arg_10h = 2;\n            uVar3 = fcn.00b96bec(arg_8h, arg_ch, arg_8h, 0xc1f910, 0);\n            uVar8 = uVar3 & 0xff;\n            goto code_r0x00b96a31;\n        }\n    }\n    uVar3 = fcn.00bf4534(uVar5, *(in_ECX + 2));\ncode_r0x00b96a31:\n    return uVar3 & 0xffffff00 | uVar8;\n}\n",
        "token_count": 1826
    },
    "00b9d060": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b9d060(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = *(arg_8h + 8);\n    iVar5 = 0;\n    if (arg_ch < uVar2) {\n        piVar4 = *(arg_8h + 4) + arg_ch * 4;\n        do {\n            iVar1 = *(*piVar4 + 8);\n            if ((iVar1 == 0x33) && (cVar3 = fcn.00ba5ee9(),  cVar3 != '\\0')) {\n                fcn.00bfa0b5(0xb1, *(*piVar4 + 10));\n                return 0xffffffff;\n            }\n            if (iVar1 == 0x4e) {\ncode_r0x00b9d0d9:\n                iVar5 = iVar5 + 1;\n            }\n            else if (iVar1 == 0x4f) {\ncode_r0x00b9d0d6:\n                iVar5 = iVar5 + -1;\n            }\n            else {\n                if (iVar1 == 0x47) goto code_r0x00b9d0d9;\n                if (iVar1 == 0x48) goto code_r0x00b9d0d6;\n                if ((iVar1 == 0x40) && (iVar5 == 0)) {\n                    return 0;\n                }\n                if (iVar1 == 0x7f) {\n                    return 0;\n                }\n            }\n            arg_ch = arg_ch + 1;\n            piVar4 = piVar4 + 1;\n        } while (arg_ch < uVar2);\n    }\n    return 0;\n}\n",
        "token_count": 435
    },
    "00ba180e": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00ba180e(int32_t arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint arg_10h;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    uint in_stack_ffffffb8;\n    int32_t in_stack_ffffffbc;\n    uchar uStack33;\n    uint uStack32;\n    int32_t iStack28;\n    uint auStack24 [2];\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 1;\n    auStack24[0] = 0;\n    iVar3 = -1;\n    uStack16 = 0;\n    uStack32 = 0;\n    iStack28 = **(arg_8h + 4);\n    iVar1 = *(iStack28 + 8);\n    if (iVar1 == 0) {\n        fcn.00b9e580(arg_8h, arg_ch);\ncode_r0x00ba187e:\n        if ((iVar3 < 0) || (iVar3 = *(*(arg_8h + 4) + unaff_EDI * 4),  *(iVar3 + 8) == 0x7f)) goto code_r0x00ba1861;\n        in_stack_ffffffbc = *(iVar3 + 10);\n        in_stack_ffffffb8 = 0x72;\n    }\n    else {\n        if (iVar1 == 1) {\n            iVar3 = fcn.00b9f5c0(0, arg_8h, &uStack32, auStack24);\n            goto code_r0x00ba187e;\n        }\n        if (iVar1 == 0x33) {\n            fcn.00b9e800(arg_8h);\n            goto code_r0x00ba1861;\n        }\n        if (iVar1 == 0x34) {\n            iVar3 = fcn.00b9fe40(0, arg_8h, &uStack32, auStack24, &uStack33);\n            goto code_r0x00ba187e;\n        }\n        if (iVar1 != 0x35) {\n            if (iVar1 == 0x7f) goto code_r0x00ba1861;\n            iVar3 = fcn.00b9a000(arg_8h, &uStack32, auStack24, 0xffffffff);\n            goto code_r0x00ba187e;\n        }\n        fcn.00c0c2f7();\n        cVar2 = fcn.00be6543();\n        if (cVar2 != '\\0') {\n            arg_10h = fcn.00c0c2f7();\n            iVar3 = fcn.00c0b851(arg_8h, &uStack32, arg_10h);\n            goto code_r0x00ba187e;\n        }\n    }\n    fcn.00bfa0b5(in_stack_ffffffb8, in_stack_ffffffbc);\ncode_r0x00ba1861:\n    fcn.00b99a20();\n    return;\n}\n",
        "token_count": 685
    },
    "00c030d3": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c030d3(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint var_10h;\n    \n    uVar1 = fcn.00b99c9c();\n    if (uVar1 == 0) {\n        fcn.00b977c7();\n        fcn.00bf5d6f(0);\n        fcn.00b99b9c(&var_10h);\n        fcn.00b95a64();\n    }\n    else if (uVar1 < 0x100) {\n        if (uVar1 < 0x80) {\n            arg_8h = uVar1 & 0xffff;\n            fcn.00b99bf8(&arg_8h);\n        }\n        else {\n            arg_8h = arg_8h & 0xffff0000 | uVar1 & 0xff;\n            arg_8h_00 = fcn.00bf573e();\n            fcn.00b99bf8(arg_8h_00);\n            fcn.00bb106c(arg_8h_00);\n        }\n    }\n    else {\n        fcn.00b99bf8(0xc1f910);\n        fcn.00be6aa3(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 306
    },
    "00c0b851": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0b851(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint uVar3;\n    uint arg_8h_00;\n    int16_t unaff_DI;\n    int16_t iVar4;\n    uint in_stack_ffffff84;\n    int32_t iVar5;\n    uint in_stack_ffffff9c;\n    uint auStack76 [2];\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    int32_t iStack56;\n    uint uStack52;\n    uchar auStack48 [8];\n    uint uStack40;\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [20];\n    \n    if (*(arg_10h + 0xc) == 0xf) {\n        uVar3 = fcn.00c0bbe3(arg_8h, arg_ch, arg_10h);\n        return uVar3;\n    }\n    uVar3 = 0;\n    auStack76[0] = 0;\n    uStack40 = 0;\n    uStack32 = 0;\n    uStack28 = 1;\n    fcn.00b977c7();\n    cVar2 = fcn.00be6543();\n    if (cVar2 == '\\0') {\n        iVar5 = 0xa9;\ncode_r0x00c0b8d7:\n        fcn.00bfa0b5(in_stack_ffffff84, iVar5);\ncode_r0x00c0b8de:\n        fcn.00b95a64();\n        fcn.00b99a20();\n        fcn.00be66f4();\n        return 0xffffffff;\n    }\n    puVar1 = *(*(arg_8h + 4) + *arg_ch * 4);\n    if (*(puVar1 + 2) == 0x35) {\n        fcn.00b981a7(*puVar1);\n        *arg_ch = *arg_ch + 1;\n    }\n    iVar5 = *(*(arg_8h + 4) + *arg_ch * 4);\n    if (*(iVar5 + 8) == 0x47) {\n        *arg_ch = *arg_ch + -1;\n        iVar5 = fcn.00c0a2d2(arg_8h, arg_ch, &stack0xffffffa4);\n        if (iVar5 < 0) goto code_r0x00c0b8de;\n    }\n    else if (iStack56 == 0) {\n        iVar5 = *(iVar5 + 10);\n        in_stack_ffffff84 = 0x80;\n        goto code_r0x00c0b8d7;\n    }\n    iVar5 = *(*(arg_8h + 4) + *arg_ch * 4);\n    if ((*(iVar5 + 8) == 0x35) || (*(iVar5 + 8) == 0x47)) {\n        fcn.00b97f41(uStack60);\n        iVar5 = fcn.00c0a1f2(in_stack_ffffff9c, arg_10h, &uStack32, &stack0xffffffa0, in_stack_ffffff9c);\n        fcn.00b95a64();\n        if (iVar5 < 0) goto code_r0x00c0b8de;\n        uVar3 = fcn.00c0b851(arg_8h, arg_ch, in_stack_ffffff9c);\n        goto code_r0x00c0bbbd;\n    }\n    cVar2 = fcn.00be6b5f();\n    if (cVar2 == '\\0') {\n        fcn.00b97f41(uStack60);\n        iVar5 = fcn.00c0a1f2(in_stack_ffffff9c, arg_10h, &uStack32, &stack0xffffffa0, in_stack_ffffff9c);\n        fcn.00b95a64();\n        if (iVar5 < 0) goto code_r0x00c0b8de;\n        iVar5 = *(*(arg_8h + 4) + *arg_ch * 4);\n        if (*(iVar5 + 8) == 0x7f) goto code_r0x00c0bbbd;\n        fcn.00bfa0b5(0x72, *(iVar5 + 10));\n    }\n    else {\n        *arg_ch = *arg_ch + 1;\n        auStack76[0] = 0;\n        uStack68 = 0;\n        uStack64 = 1;\n        iVar5 = fcn.00b9a000(arg_8h_00, arg_ch, auStack76, 0xffffffff);\n        if (-1 < iVar5) {\n            iVar5 = *(*(arg_8h + 4) + *arg_ch * 4);\n            if (*(iVar5 + 8) == 0x7f) {\n                if (unaff_DI != 0x41) {\n                    uVar3 = auStack76[0];\n                    fcn.00b97f41(auStack76[0]);\n                    iVar4 = uVar3;\n                    iVar5 = fcn.00c0a1f2(0, arg_10h, auStack48, &stack0xffffff90, &stack0xffffff88);\n                    fcn.00b95a64();\n                    if (-1 < iVar5) {\n                        if (iVar4 == 0x52) {\n                            fcn.00b99700(&stack0xffffff88);\n                        }\n                        else {\n                            if (iVar4 == 0x53) {\n                                fcn.00b99687(&stack0xffffff8c);\n                            }\n                            else if (iVar4 == 0x54) {\n                                fcn.00be65b5(&stack0xffffff8c);\n                            }\n                            else {\n                                if (iVar4 == 0x55) {\n                                    fcn.00b9963c(&stack0xffffff88);\n                                    goto code_r0x00c0bb23;\n                                }\n                                fcn.00be655c(&stack0xffffff8c);\n                            }\n                            fcn.00b99e9c(&stack0xffffff90);\n                        }\n                    }\n                }\ncode_r0x00c0bb23:\n                fcn.00be6665(&uStack64);\n                fcn.00b97f41(uStack52);\n                uVar3 = fcn.00c0a260(arg_10h, auStack24, &stack0xffffffa8);\n                fcn.00b95a64();\n                fcn.00b99a20();\n                goto code_r0x00c0bbbd;\n            }\n            fcn.00bfa0b5(0x72, *(iVar5 + 10));\n        }\n        fcn.00b99a20();\n    }\n    uVar3 = 0xffffffff;\ncode_r0x00c0bbbd:\n    fcn.00b95a64();\n    fcn.00b99a20();\n    fcn.00be66f4();\n    return uVar3;\n}\n",
        "token_count": 1579
    },
    "00c0c40d": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c0c40d(int32_t arg_8h, int32_t *arg_ch, uchar *arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    do {\n        while( true ) {\n            iVar2 = *arg_ch;\n            iVar1 = *(*(*(arg_8h + 4) + iVar2 * 4) + 8);\n            if (iVar1 != 0x35) break;\n            *arg_ch = iVar2 + 1;\n            if ((iVar3 == 0) && (arg_10h != NULL)) {\n                *arg_10h = 0;\n            }\n        }\n        if (iVar1 == 0x47) {\n            iVar3 = iVar3 + 1;\n        }\n        else if (iVar1 == 0x48) {\n            if ((iVar3 == 0) && (*(*(*(arg_8h + 4) + 4 + iVar2 * 4) + 8) != 0x35)) {\n                return;\n            }\n            iVar3 = iVar3 + -1;\n        }\n        else if (iVar1 == 0x7f) {\n            return;\n        }\n        *arg_ch = iVar2 + 1;\n    } while ((0 < iVar3) || (*(*(*(arg_8h + 4) + (iVar2 + 1) * 4) + 8) == 0x35));\n    if (iVar1 != 0x48) {\n        *arg_ch = iVar2;\n    }\n    return;\n}\n",
        "token_count": 359
    },
    "00b95fd2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b95fd2(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    uint16_t uVar1;\n    uint arg_8h_00;\n    \n    fcn.00b97eec();\n    while( true ) {\n        uVar1 = *(arg_8h + *arg_ch * 2);\n        if ((((0x5a < uVar1) || (uVar1 < 0x41)) && ((uVar1 < 0x61 || (0x7a < uVar1)))) &&\n           (((uVar1 < 0x30 || (0x39 < uVar1)) && (uVar1 != 0x5f)))) break;\n        fcn.00b97a84(uVar1);\n        *arg_ch = *arg_ch + 1;\n    }\n    fcn.00b97faf();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(*arg_14h, arg_14h[1]);\n    arg_ch = fcn.00b96999(arg_14h);\n    if (arg_ch < 0) {\n        arg_ch = (**(**0xc57294 + 4))(*arg_14h);\n        if (arg_ch < 0) {\n            fcn.00b95f12(0x34);\n            fcn.00b95ea1(arg_14h);\n            return;\n        }\n        arg_8h_00 = 1;\n    }\n    else {\n        if ((((uVar1 != 0x20) && (uVar1 != 0x2c)) &&\n            (((uVar1 != 0x29 && ((uVar1 != 9 && (uVar1 != 0x3d)))) && (uVar1 != 0x28)))) &&\n           ((uVar1 != 0x5d && (uVar1 != 0)))) {\n            fcn.00b95f12(0xffffffff);\n            *arg_10h = -1;\n            return;\n        }\n        arg_8h_00 = 0;\n    }\n    fcn.00b95f12(arg_8h_00);\n    *arg_10h = arg_ch;\n    return;\n}\n",
        "token_count": 499
    },
    "00bea3e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00bea3e6(uint arg_8h, uint *arg_ch, uint arg_10h, uint32_t *arg_14h, uint32_t arg_18h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t in_EAX;\n    int16_t *piVar4;\n    uint16_t *puVar5;\n    \n    if (arg_18h <= *arg_14h && *arg_14h != arg_18h) {\ncode_r0x00bea526:\n        return in_EAX & 0xffffff00;\n    }\n    fcn.00b97d2c(0xc1f910);\n    while( true ) {\n        piVar4 = fcn.00b97b20(*arg_14h);\n        iVar1 = *piVar4;\n        if ((((iVar1 == 0x3a) || (iVar1 == 0x3b)) || (iVar1 == 0x5d)) || (uVar3 = *arg_14h,  arg_18h < uVar3)) break;\n        *arg_14h = uVar3 + 1;\n        puVar5 = fcn.00b97b20(uVar3);\n        fcn.00b97a84(*puVar5);\n    }\n    in_EAX = fcn.00bb0d27();\n    if (in_EAX != '\\0') goto code_r0x00bea526;\n    fcn.00b97faf();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(*arg_ch, arg_ch[1]);\n    puVar5 = fcn.00b97b20(*arg_14h);\n    uVar2 = *puVar5;\n    in_EAX = uVar2;\n    if (uVar2 != 0x3a) {\n        if ((uVar2 != 0x3b) && (uVar2 != 0x5d)) goto code_r0x00bea526;\n        if (uVar2 != 0x3a) goto code_r0x00bea4a9;\n    }\n    *arg_14h = *arg_14h + 1;\ncode_r0x00bea4a9:\n    fcn.00b97d2c(0xc1f910);\n    do {\n        if (arg_18h <= *arg_14h && *arg_14h != arg_18h) {\ncode_r0x00bea504:\n            while( true ) {\n                uVar3 = *arg_14h;\n                piVar4 = fcn.00b97b20(uVar3);\n                iVar1 = *piVar4;\n                if ((iVar1 != 0x20) && (iVar1 != 9)) break;\n                *arg_14h = uVar3 + 1;\n            }\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n        puVar5 = fcn.00b97b20(*arg_14h);\n        uVar2 = *puVar5;\n        uVar3 = *arg_14h;\n        piVar4 = fcn.00b97b20(uVar3 + 1);\n        if (uVar2 == 0x3b) {\n            if (*piVar4 != 0x3b) {\n                *arg_14h = *arg_14h + 1;\n                goto code_r0x00bea504;\n            }\n            *arg_14h = *arg_14h + 2;\n        }\n        else {\n            *arg_14h = uVar3 + 1;\n        }\n        fcn.00b97a84(uVar2);\n    } while( true );\n}\n",
        "token_count": 834
    },
    "00bef192": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00bef192(int16_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    \n    puVar2 = fcn.00bb0ff6(4);\n    if (*arg_8h == 9) {\n        *puVar2 = *(arg_8h + 4);\n        piVar1 = *(arg_8h + 4);\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 4))(piVar1);\n        }\n    }\n    else {\n        *puVar2 = 0;\n    }\n    return puVar2;\n}\n",
        "token_count": 144
    },
    "00c12cfb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00c12cfb(int32_t arg_8h)\n\n{\n    uint16_t **ppuVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t *arg_8h_00;\n    \n    fcn.00b99997();\n    ppuVar1 = *(arg_8h + 8);\n    iVar3 = 1;\n    arg_8h_00 = *ppuVar1;\n    if ((((arg_8h_00 == NULL) || (ppuVar1 = NULL,  *arg_8h_00 == 0)) ||\n        (ppuVar1 = fcn.00bb378c(arg_8h_00, 0xc1fb80),  ppuVar1 == NULL)) ||\n       ((ppuVar1 = fcn.00bb378c(arg_8h_00, 0xc4b248),  ppuVar1 == NULL ||\n        (ppuVar1 = fcn.00bb378c(arg_8h_00, 0xc4b250),  ppuVar1 == NULL)))) {\ncode_r0x00c12dd4:\n        uVar2 = ppuVar1 & 0xffffff00;\n    }\n    else {\n        if (*arg_8h_00 != 0) {\n            do {\n                if (iVar3 == 1) {\n                    uVar2 = *arg_8h_00;\n                    if ((uVar2 == 0x2b) || (uVar2 == 0x2d)) {\n                        arg_8h_00 = arg_8h_00 + 1;\n                    }\n                    else {\n                        if (uVar2 == 0x2e) goto code_r0x00c12db7;\n                        ppuVar1 = uVar2 - 0x30;\n                        if (0x9 < ppuVar1) goto code_r0x00c12dd4;\n                    }\n                    iVar3 = 2;\n                }\n                else if (iVar3 == 2) {\n                    ppuVar1 = fcn.00bb386c(*arg_8h_00);\n                    if (ppuVar1 == NULL) {\n                        if (*arg_8h_00 != 0x2e) goto code_r0x00c12dd4;\ncode_r0x00c12db7:\n                        iVar3 = 3;\n                    }\n                    else {\n                        arg_8h_00 = arg_8h_00 + 1;\n                    }\n                }\n                else if (iVar3 == 3) {\n                    arg_8h_00 = arg_8h_00 + 1;\n                    iVar3 = 4;\n                }\n                else if (iVar3 == 4) {\n                    ppuVar1 = fcn.00bb386c(*arg_8h_00);\n                    if (ppuVar1 == NULL) goto code_r0x00c12dd4;\n                    arg_8h_00 = arg_8h_00 + 1;\n                }\n            } while (*arg_8h_00 != 0);\n            if (iVar3 == 4) {\n                return 1;\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 717
    },
    "00c12df5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c12df5(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint16_t *arg_8h_00;\n    int32_t iVar4;\n    \n    fcn.00b99997();\n    iVar4 = 1;\n    arg_8h_00 = **(arg_8h + 8);\n    if ((((arg_8h_00 == NULL) || (*arg_8h_00 == 0)) || (iVar1 = fcn.00bb378c(arg_8h_00, 0xc49e1c),  iVar1 == 0)) ||\n       (iVar1 = fcn.00bb378c(arg_8h_00, 0xc4b258),  iVar1 == 0)) {\ncode_r0x00c12e3a:\n        uVar2 = 0;\n    }\n    else {\n        while (*arg_8h_00 != 0) {\n            if (iVar4 == 1) {\n                uVar3 = *arg_8h_00;\n                if ((uVar3 == 0x2b) || (uVar3 == 0x2d)) {\n                    arg_8h_00 = arg_8h_00 + 1;\n                }\n                else if (9 < uVar3 - 0x30) goto code_r0x00c12e3a;\n                iVar4 = 2;\n            }\n            else if (iVar4 == 2) {\n                iVar1 = fcn.00bb3e9f(*arg_8h_00);\n                if (iVar1 == 0) goto code_r0x00c12e3a;\n                arg_8h_00 = arg_8h_00 + 1;\n            }\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 424
    },
    "00c1e02e": {
        "rules": [
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653",
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00c1e02e(int32_t param_1, int16_t **param_2)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    \n    iVar1 = *(param_1 + 2);\n    piVar4 = param_1 + 4;\n    iVar2 = *piVar4;\n    do {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        if ((iVar2 == 0x5c) && (piVar4[1] == 0x5d)) {\n            piVar4 = piVar4 + 1;\n        }\n        else {\n            if (iVar2 == 0x5d) {\n                return 0;\n            }\n            if ((iVar2 == iVar1) && (piVar4[1] == 0x5d)) {\n                *param_2 = piVar4;\n                return 1;\n            }\n            if (((iVar2 == 0x5b) && (((iVar2 = piVar4[1],  iVar2 == 0x3a || (iVar2 == 0x2e)) || (iVar2 == 0x3d)))) &&\n               (iVar3 = fcn.00c1e02e(),  iVar3 != 0)) {\n                return 0;\n            }\n        }\n        piVar4 = piVar4 + 1;\n        iVar2 = *piVar4;\n    } while( true );\n}\n",
        "token_count": 335
    },
    "00bfb59e": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00bfb59e(int32_t arg_8h, double *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint in_ECX;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint uStack12;\n    uint var_4h;\n    double dStack12;\n    \n    dStack12 = CONCAT44(in_ECX, uStack12);\n    uVar4 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    fcn.00b99a20();\n    *arg_ch = 0;\n    *(arg_ch + 0xc) = 1;\n    iVar5 = **(arg_8h + 4);\n    fcn.00b99997();\n    puVar1 = *(iVar5 + 8);\n    uVar2 = *puVar1;\n    piVar3 = puVar1[3];\n    *piVar3 = *piVar3 + 1;\n    fcn.00bf4168();\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceExW)(uVar2, &var_10h, &var_20h, &var_18h);\n    if (iVar5 == 0) {\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        dStack12 = _var_10h * *0xc4baa8;\n        fcn.00b99a20();\n        *arg_ch = dStack12;\n        *(arg_ch + 0xc) = 3;\n    }\n    fcn.00b95a64();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar4);\n    return 0;\n}\n",
        "token_count": 447
    },
    "00bfb666": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00bfb666(int32_t arg_8h, double *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint in_ECX;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint uStack12;\n    uint var_4h;\n    double dStack12;\n    \n    dStack12 = CONCAT44(in_ECX, uStack12);\n    uVar4 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    fcn.00b99a20();\n    *arg_ch = 0;\n    *(arg_ch + 0xc) = 1;\n    iVar5 = **(arg_8h + 4);\n    fcn.00b99997();\n    puVar1 = *(iVar5 + 8);\n    uVar2 = *puVar1;\n    piVar3 = puVar1[3];\n    *piVar3 = *piVar3 + 1;\n    fcn.00bf4168();\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceExW)(uVar2, &var_20h, &var_10h, &var_18h);\n    if (iVar5 == 0) {\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        dStack12 = _var_10h * *0xc4baa8;\n        fcn.00b99a20();\n        *arg_ch = dStack12;\n        *(arg_ch + 0xc) = 3;\n    }\n    fcn.00b95a64();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar4);\n    return 0;\n}\n",
        "token_count": 446
    },
    "00bf8a71": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nfloat10 fcn.00bf8a71(void)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    *0xc54190 = *0xc54190 + -1;\n    if (*0xc54190 == 0) {\n        fcn.00bf8b13();\n    }\n    uVar2 = **0xc57ef0 ^ **0xc57ef0 >> 0xb;\n    uVar2 = uVar2 ^ (uVar2 & 0xff3a58ad) << 7;\n    uVar2 = uVar2 ^ (uVar2 & 0xffffdf8c) << 0xf;\n    uVar2 = uVar2 >> 0x12 ^ uVar2;\n    dVar1 = uVar2;\n    if (uVar2 < 0) {\n        dVar1 = dVar1 + *0xc4bac8;\n    }\n    *0xc57ef0 = *0xc57ef0 + 1;\n    return dVar1 * *0xc4baa0;\n}\n",
        "token_count": 240
    },
    "00ba5e58": {
        "rules": [
            "hash data using djb2/7c4211d97aa54a3fa9be92a08fd675ee"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00ba5e58(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar1 = arg_8h[1] * 2;\n    iVar2 = 0x1505;\n    if (0 < iVar1) {\n        do {\n            iVar2 = iVar2 * 0x21 + *(iVar3 + *arg_8h);\n            iVar3 = iVar3 + 1;\n        } while (SBORROW4(iVar3, iVar1) != iVar3 + arg_8h[1] * -2 < 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 163
    },
    "00bea693": {
        "rules": [
            "check for trap flag exception/d5d4160e77a5474aa5157e4631e4f1b3"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00bea693(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint16_t *puVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t in_ECX;\n    uint32_t uVar9;\n    int32_t in_stack_ffffffbc;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar9 = 0;\n    *(in_ECX + 0x88) = 0;\n    *(in_ECX + 0xd8) = 0;\n    fcn.00b977c7();\n    fcn.00b977c7();\n    iVar4 = *(arg_ch + 4);\n    if (iVar4 != 0) {\n        in_stack_ffffffbc = 0xbea6d6;\n        piVar3 = fcn.00b97b20(0);\n        if (*piVar3 == 0x5b) {\n            in_stack_ffffffbc = iVar4 + -1;\n            piVar3 = fcn.00b97b20(in_stack_ffffffbc);\n            if (*piVar3 == 0x5d) {\n                var_4h = iVar4 + -2;\n                var_8h = 1;\ncode_r0x00bea706:\n                in_stack_ffffffbc = arg_ch;\n                cVar2 = fcn.00bea3e6(arg_ch, &fcn.00bea693::var_18h, &fcn.00bea693::var_28h, &fcn.00bea693::var_8h, \n                                     var_4h);\n                if (cVar2 == '\\0') goto code_r0x00bea922;\n                cVar2 = fcn.00bb0d27();\n                if (cVar2 == '\\0') {\n                    cVar2 = fcn.00bb0d27();\n                    if (cVar2 != '\\0') {\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 8;\n                        goto code_r0x00bea8f7;\n                    }\n                    cVar2 = fcn.00bb0d27();\n                    if (cVar2 != '\\0') {\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x10;\n                        fcn.00ba5c2e();\n                        iVar4 = fcn.00ba5c72(&fcn.00bea693::var_28h);\n                        if (iVar4 != 0) goto code_r0x00bea9f6;\n                        goto code_r0x00bea706;\n                    }\n                    cVar2 = fcn.00bb0d27();\n                    if (cVar2 != '\\0') {\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x20;\n                        uVar5 = fcn.00bb37ca(var_28h);\n                        *(in_ECX + 0xcc) = uVar5;\n                        goto code_r0x00bea706;\n                    }\n                    cVar2 = fcn.00bb0d27();\n                    if (cVar2 != '\\0') {\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x400;\n                        goto code_r0x00bea8f7;\n                    }\n                    cVar2 = fcn.00bb0d27();\n                    if (cVar2 != '\\0') {\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x40;\n                        uVar5 = fcn.00bb37ca(var_28h);\n                        *(in_ECX + 0xdc) = uVar5;\n                        goto code_r0x00bea706;\n                    }\n                    cVar2 = fcn.00bb0d27();\n                    if (cVar2 != '\\0') {\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x80;\n                        uVar5 = fcn.00bb37ca(var_28h);\n                        *(in_ECX + 0xe0) = uVar5;\n                        goto code_r0x00bea706;\n                    }\n                    cVar2 = fcn.00bb0d27();\n                    if (cVar2 != '\\0') {\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x100;\n                        uVar5 = fcn.00bb37ca(var_28h);\n                        *(in_ECX + 0xe4) = uVar5;\n                        goto code_r0x00bea706;\n                    }\n                    cVar2 = fcn.00bb0d27();\n                    if (cVar2 != '\\0') {\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x200;\n                        uVar5 = fcn.00bb37ca(var_28h);\n                        *(in_ECX + 0xe8) = uVar5;\n                        goto code_r0x00bea706;\n                    }\n                    cVar2 = fcn.00bb0d27();\n                    if (cVar2 != '\\0') {\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 2;\n                        uVar5 = fcn.00bb37ca(var_28h);\n                        *(in_ECX + 0xd0) = uVar5;\n                        goto code_r0x00bea706;\n                    }\n                    cVar2 = fcn.00bb0d27();\n                    if (cVar2 == '\\0') {\n                        cVar2 = fcn.00bea36d();\n                        if (cVar2 != '\\0') goto code_r0x00bea9f6;\n                        goto code_r0x00bea706;\n                    }\n                    *(in_ECX + 0x88) = *(in_ECX + 0x88) | 4;\n                }\n                else {\n                    *(in_ECX + 0x88) = *(in_ECX + 0x88) | 1;\n                }\ncode_r0x00bea8f7:\n                fcn.00b981a7(&fcn.00bea693::var_28h);\n                goto code_r0x00bea706;\n            }\n        }\ncode_r0x00bea922:\n        if (*(in_ECX + 0x88) == 0) {\n            *(in_ECX + 0x88) = 8;\n            fcn.00b981a7(arg_ch);\n        }\n        if ((*(in_ECX + 0x88) & 8) != 0) {\n            iVar4 = *(in_ECX + 0xa0);\n            *(in_ECX + 0x128) = iVar4;\n            *(in_ECX + 300) = 0;\n            if (iVar4 != 0) {\n                while (iVar4 = iVar4 + -1,  -1 < iVar4) {\n                    in_stack_ffffffbc = iVar4;\n                    puVar6 = fcn.00b97b52(iVar4);\n                    iVar7 = fcn.00bb386c(*puVar6);\n                    if (iVar7 == 0) break;\n                    *(in_ECX + 300) = *(in_ECX + 300) + 1;\n                }\n            }\n        }\n        pcVar1 = _sym.imp.USER32.dll_EnumChildWindows;\n        uVar9 = 0;\n        *(in_ECX + 0x124) = 0;\n        (*pcVar1)(arg_8h, fcn.00beaa64);\n        if ((*(in_ECX + 0xd8) == 0) && ((*(in_ECX + 0x88) & 8) != 0)) {\n            *(in_ECX + 0x124) = 0;\n            *(in_ECX + 0x88) = 4;\n            fcn.00b981a7(in_ECX + 0x9c);\n            (*pcVar1)(arg_8h, fcn.00beaa64);\n        }\n        if (*(in_ECX + 0xd8) == 0) goto code_r0x00bea9f6;\n    }\n    fcn.00beade3(in_stack_ffffffbc);\n    uVar9 = 1;\ncode_r0x00bea9f6:\n    fcn.00b95a64();\n    uVar8 = fcn.00b95a64();\n    return uVar8 & 0xffffff00 | uVar9;\n}\n",
        "token_count": 1988
    },
    "00ba86cc": {
        "rules": [
            "parse credit card information/29d58176023943f783771ab0ee81acbc"
        ],
        "decompiled_code": "\nuint16_t * __fastcall fcn.00ba86cc(uint16_t *param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *param_1;\n    do {\n        if (uVar1 == 0) {\n            return NULL;\n        }\n        uVar2 = uVar1;\n        if (uVar1 == 0x75) {\n            return param_1;\n        }\n        if (uVar1 == 0x70) {\n            param_1 = param_1 + param_1[1];\n        }\n        else {\n            if (uVar2 < 0x96) {\n                if (uVar2 == 0x95) {\ncode_r0x00ba8781:\n                    param_1 = param_1 + param_1[1];\n                }\n                else {\n                    if (uVar2 < 0x55) goto code_r0x00ba8736;\n                    if (uVar2 < 0x5b) {\ncode_r0x00be51eb:\n                        if ((param_1[1] == 0x10) || (param_1[1] == 0xf)) {\n                            param_1 = param_1 + 2;\n                        }\n                    }\n                    else {\n                        if (0x5d < uVar2) {\n                            if (uVar2 < 0x61) goto code_r0x00be51eb;\n                            if (uVar2 != 0x61) goto code_r0x00ba8736;\n                        }\n                        if ((param_1[2] == 0x10) || (param_1[2] == 0xf)) {\n                            param_1 = param_1 + 2;\n                        }\n                    }\n                }\n            }\n            else if (((uVar2 == 0x97) || (uVar2 == 0x99)) || (uVar2 == 0x9b)) goto code_r0x00ba8781;\ncode_r0x00ba8736:\n            param_1 = param_1 + *(uVar2 + 0xc35750);\n            if (((param_2 != 0) && (uVar2 - 0x1d < 0x38)) && ((param_1[-1] & 0xfc00) == 0xd800)) {\n                param_1 = param_1 + 1;\n            }\n        }\n        uVar1 = *param_1;\n    } while( true );\n}\n",
        "token_count": 566
    },
    "00bef5ad": {
        "rules": [
            "search for credit card data/ac143e9ae29c414184a69c9308e24693",
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bef5ad(uint lpString2)\n\n{\n    int16_t iVar1;\n    int64_t iVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    ushort extraout_var;\n    uint uVar6;\n    int32_t iVar7;\n    int16_t iVar8;\n    uint var_4h;\n    \n    iVar7 = 0;\n    iVar8 = 0;\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n    iVar2 = (iVar4 + 1) * 2;\n    iVar5 = fcn.00bb0ff6(-(iVar2 >> 0x20 != 0) | iVar2);\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)(iVar5, lpString2);\n    *(iVar5 + iVar4 * 2) = 0;\n    iVar1 = *(iVar5 + -2 + iVar4 * 2);\n    if ((iVar1 == 0x2a) || (iVar1 == 0x5e)) {\n        iVar8 = 0x4000;\n        *(iVar5 + -2 + iVar4 * 2) = 0;\n    }\n    do {\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(*(iVar7 * 4 + 0xc49d60), iVar5);\n        if (iVar4 == 0) {\n            iVar8 = iVar8 + *(iVar7 * 2 + 0xc49d18);\n            bVar3 = true;\n            goto code_r0x00bef63a;\n        }\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 0x24);\n    bVar3 = false;\ncode_r0x00bef63a:\n    fcn.00bb106c(iVar5);\n    if (bVar3) {\n        uVar6 = CONCAT22(extraout_var, iVar8);\n    }\n    else {\n        uVar6 = 0xffff;\n    }\n    return uVar6;\n}\n",
        "token_count": 451
    },
    "00c1ef2a": {
        "rules": [
            "encrypt data using HC-128/11bb23636d2a4650a9dbaa6512d69580"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00c1ef2a(uint32_t param_1, uint16_t *param_2)\n\n{\n    if (param_1 < 0x10000) {\n        *param_2 = param_1;\n        return 1;\n    }\n    *param_2 = param_1 - 0x10000 >> 10 | 0xd800;\n    param_2[1] = param_1 - 0x10000 & 0x3ff | 0xdc00;\n    return 2;\n}\n",
        "token_count": 119
    },
    "00bc33be": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00bc33be(uint param_1, uint param_2, int32_t param_3, uint param_4)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    bool bVar8;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 extraout_ST0;\n    float10 fVar9;\n    uchar in_XMM0 [16];\n    uint64_t uVar10;\n    uint unaff_retaddr;\n    \n    uVar1 = SUB162(in_XMM0 >> 0x30, 0);\n    uVar2 = (uVar1 & 0x7fff) + 0xcfd0;\n    bVar8 = uVar2 == 0x10c5;\n    if (uVar2 < 0x10c6) {\n        iVar7 = (ROUND(*0xc2db40 * SUB168(in_XMM0, 0)) + 0x1c7610U & 0x3f) * 0x20;\n        return CONCAT44(iVar7, iVar7 + 0xc2d300);\n    }\n    if (uVar2 < 0x10c6) {\n        uVar6 = uVar1 & 0x7fff;\n        pinsrw(in_XMM0, uVar6, 3);\n        return CONCAT44(param_2, uVar6);\n    }\n    uVar10 = fcn.00bc03e5();\n    uVar6 = uVar10 >> 0x20 & 0xffff0000 | in_FPUControlWord;\n    if (bVar8) {\n        if (((uVar10 & 0xfffff) == 0) && (param_3 == 0)) {\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = fcn.00bc03cc();\n        }\n        if (*0xc549d8 == 0) {\n            uVar5 = fcn.00bc0357(uVar6, unaff_retaddr, param_3, param_4);\n            return CONCAT44(uVar6, uVar5);\n        }\n    }\n    else {\n        fVar9 = fcos(extraout_ST0);\n        uVar3 = uVar10 & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar9 = fVar9 - (fVar9 / *0xc27c6a) * *0xc27c6a;\n                uVar3 = uVar3 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fcos(fVar9);\n        }\n        if (*0xc549d8 == 0) {\n            uVar4 = uVar3 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar4 = uVar3 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar5 = fcn.00bc0357(uVar6, unaff_retaddr, param_3, param_4);\n                    return CONCAT44(uVar6, uVar5);\n                }\n                uVar4 = uVar4 & 0xffff0020;\n            }\n            return CONCAT44(uVar6, uVar4);\n        }\n    }\n    return CONCAT44(uVar6, uVar3);\n}\n",
        "token_count": 848
    },
    "00b9112a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00b9112a(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    param_1[7] = 0xffffffff;\n    *param_1 = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 2;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    fcn.00b977c7();\n    *(param_1 + 0xe) = 0;\n    *(param_1 + 0x3a) = 1;\n    param_1[0xf] = 0;\n    param_1[0x10] = 0;\n    param_1[0x13] = 0xffffffff;\n    param_1[0x14] = 0xffffffff;\n    param_1[0x15] = 0xffffffff;\n    param_1[0x16] = 0xffffffff;\n    param_1[0x17] = 0xffffffff;\n    param_1[0x18] = 0xffffffff;\n    param_1[0x19] = 0xffffffff;\n    fcn.00b977c7();\n    param_1[0x21] = 0;\n    param_1[0x22] = 2;\n    param_1[0x1f] = 0x55;\n    param_1[0x20] = 400;\n    iVar1 = 0xd;\n    do {\n        fcn.00b977c7();\n        iVar1 = iVar1 + -1;\n    } while (-1 < iVar1);\n    param_1[99] = 0xffffffff;\n    param_1[100] = 0xffffffff;\n    param_1[0x6f] = 0xffffffff;\n    param_1[0x70] = 0xffffffff;\n    param_1[0x5b] = 0;\n    param_1[0x5c] = 0;\n    param_1[0x5d] = 0;\n    param_1[0x5e] = 0;\n    param_1[0x5f] = 0;\n    param_1[0x60] = 0;\n    *(param_1 + 0x61) = 0;\n    param_1[0x62] = 0;\n    param_1[0x65] = 0;\n    *(param_1 + 0x66) = 0;\n    *(param_1 + 0x19a) = 0;\n    param_1[0x67] = 0;\n    param_1[0x68] = 0;\n    param_1[0x69] = 0;\n    param_1[0x6b] = 0;\n    param_1[0x6c] = 0;\n    param_1[0x71] = 0;\n    param_1[0x72] = 0;\n    param_1[0x73] = 0;\n    *(param_1 + 0x6a) = 1;\n    return param_1;\n}\n",
        "token_count": 731
    },
    "00b922d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00b922d0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    ppiVar2 = *0xc56838;\n    while( true ) {\n        if (ppiVar2 == NULL) {\n            var_ch = arg_8h;\n            var_8h = 1;\n            var_4h = (*_sym.imp.GDI32.dll_CreateSolidBrush)(arg_8h);\n            fcn.00b93257(&var_ch);\n            return var_4h;\n        }\n        if (**ppiVar2 == arg_8h) break;\n        ppiVar2 = ppiVar2[1];\n    }\n    piVar1 = *ppiVar2 + 1;\n    *piVar1 = *piVar1 + arg_ch;\n    return (*ppiVar2)[2];\n}\n",
        "token_count": 227
    },
    "00b93582": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00b93582(void)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    \n    uVar1 = fcn.00b935b0(L\"SwapMouseButtons\", 4, &var_8h);\n    return uVar1 & 0xffffff00 | var_8h == 0x31;\n}\n",
        "token_count": 90
    },
    "00b9406f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b9406f(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t *var_4h;\n    \n    piVar1 = fcn.00bb0ff6(0x14);\n    if (piVar1 == NULL) {\n        piVar1 = NULL;\n    }\n    else {\n        fcn.00b977c7();\n    }\n    var_4h = piVar1;\n    fcn.00b981a7(arg_8h * 0x10 + 0x184 + in_ECX);\n    *piVar1 = arg_8h;\n    fcn.00b9469d(&var_4h);\n    return;\n}\n",
        "token_count": 169
    },
    "00b94233": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00b94233(void)\n\n{\n    int32_t iVar1;\n    \n    *0xc568a0 = 0xffffffff;\n    *0xc568a4 = 0xffffffff;\n    *0xc56890 = 0;\n    *0xc56894 = 0x1010101;\n    *0xc56898 = 0;\n    *0xc5689a = 1;\n    *0xc5689c = 9;\n    *0xc568a8 = 0;\n    fcn.00b97f41(0xc1f9bc);\n    fcn.00b97f41(0xc1f9a0);\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    *0xc568fc = *0xc568ac;\n    *0xc56900 = *0xc568b0;\n    *0xc56904 = *0xc568b4;\n    *0xc56908 = *0xc568b8;\n    iVar1 = 0xe;\n    **0xc568b8 = **0xc568b8 + 1;\n    *0xc5690c = *0xc568bc;\n    *0xc56910 = *0xc568c0;\n    *0xc56914 = *0xc568c4;\n    *0xc56918 = *0xc568c8;\n    **0xc568c8 = **0xc568c8 + 1;\n    *0xc5691c = 0;\n    *0xc56920 = 0;\n    *0xc56924 = 0;\n    *0xc56930 = 0;\n    do {\n        fcn.00b977c7();\n        iVar1 = iVar1 + -1;\n    } while (-1 < iVar1);\n    *0xc56a24 = 0;\n    *0xc56a28 = 0;\n    *0xc56a2c = 0;\n    *0xc56a30 = 0;\n    *0xc56a34 = 0;\n    *0xc56a38 = 0;\n    *0xc56a3c = 0;\n    *0xc56a40 = 0;\n    *0xc57260 = 0;\n    *0xc57264 = 0xffffffff;\n    return 0xc56890;\n}\n",
        "token_count": 524
    },
    "00b9463e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b9463e(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint in_EDX;\n    \n    if (arg_8h != 0) {\n        fcn.00bb42ee(in_ECX, in_EDX, arg_8h + -1);\n        *(in_ECX + -2 + arg_8h * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "00b946d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00b946d3(uint arg_8h, int32_t arg_ch, int32_t arg_10h, code *arg_14h)\n\n{\n    arg_ch = arg_ch * arg_10h;\n    while (arg_10h = arg_10h + -1,  -1 < arg_10h) {\n        arg_ch = (*arg_14h)();\n    }\n    return arg_ch;\n}\n",
        "token_count": 98
    },
    "00b95a4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00b95a4b(int32_t arg_8h)\n\n{\n    uint32_t uStack8;\n    \n    if (arg_8h == 0) {\n        uStack8 = 0x10;\n    }\n    else {\n        uStack8 = arg_8h + 0xfU & 0xfffffff0;\n    }\n    return uStack8;\n}\n",
        "token_count": 90
    },
    "00b9631f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b9631f(uint arg_8h, int32_t arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int32_t arg_10h_00;\n    \n    fcn.00b97eec();\n    arg_10h_00 = *arg_10h;\n    uVar2 = *(arg_ch + arg_10h_00 * 2);\n    *arg_10h = arg_10h_00 + 1;\n    iVar1 = *(arg_ch + (arg_10h_00 + 1) * 2);\n    do {\n        if (iVar1 == 0) {\n            fcn.00befdba(arg_8h, 0x138a, arg_10h_00);\n            return 0xffffffff;\n        }\n        uVar3 = *(arg_ch + *arg_10h * 2);\n        if (uVar3 == uVar2) {\n            if (*(arg_ch + 2 + *arg_10h * 2) != uVar2) {\n                *arg_10h = *arg_10h + 1;\n                return 0;\n            }\n            fcn.00b97a84(uVar3);\n            *arg_10h = *arg_10h + 2;\n        }\n        else {\n            fcn.00b97a84(uVar3);\n            *arg_10h = *arg_10h + 1;\n        }\n        iVar1 = *(arg_ch + *arg_10h * 2);\n    } while( true );\n}\n",
        "token_count": 369
    },
    "00b971c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00b971c8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if ((*0xc572a0 < arg_8h) || (arg_8h < 1)) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = arg_8h * 0x10 + *0xc572dc;\n    }\n    return iVar1;\n}\n",
        "token_count": 96
    },
    "00b98019": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00b98019(uint16_t **arg_8h)\n\n{\n    uint16_t **in_ECX;\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    bool bVar4;\n    \n    puVar3 = in_ECX[1];\n    puVar2 = arg_8h[1];\n    if (puVar3 == NULL) {\n        if (puVar2 != NULL) {\n            return -1;\n        }\n    }\n    else if (puVar2 != NULL) goto code_r0x00b98030;\n    if (puVar3 != NULL) {\n        return 1;\n    }\ncode_r0x00b98030:\n    puVar1 = *arg_8h;\n    if (puVar3 < puVar2) {\n        puVar3 = *in_ECX;\n        for (; puVar2 != NULL; puVar2 = puVar2 + -1) {\n            bVar4 = *puVar3 < *puVar1;\n            if (*puVar3 != *puVar1) {\ncode_r0x00b98051:\n                return (-bVar4 & 0xfffffffe) + 1;\n            }\n            puVar3 = puVar3 + 1;\n            puVar1 = puVar1 + 1;\n        }\n    }\n    else {\n        puVar2 = *in_ECX;\n        for (; puVar3 != NULL; puVar3 = puVar3 + -1) {\n            bVar4 = *puVar2 < *puVar1;\n            if (*puVar2 != *puVar1) goto code_r0x00b98051;\n            puVar2 = puVar2 + 1;\n            puVar1 = puVar1 + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 406
    },
    "00b98170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00b98170(int32_t arg_8h)\n\n{\n    uint32_t uStack8;\n    \n    if (arg_8h == 0) {\n        uStack8 = 8;\n    }\n    else {\n        uStack8 = arg_8h + 7U & 0xfffffff8;\n    }\n    return uStack8;\n}\n",
        "token_count": 85
    },
    "00b98794": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b98794(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    for (; arg_ch != 0; arg_ch = *(arg_ch + 0x1c)) {\n        iVar1 = fcn.00bb0ff6(0x20);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            fcn.00b977c7();\n        }\n        *arg_8h = iVar1;\n        fcn.00b981a7(arg_ch);\n        *(*arg_8h + 0x10) = *(arg_ch + 0x10);\n        *(*arg_8h + 0x14) = *(arg_ch + 0x14);\n        *(*arg_8h + 0x18) = 0;\n        *(*arg_8h + 0x1c) = 0;\n        fcn.00b98794(*arg_8h + 0x18, *(arg_ch + 0x18));\n        arg_8h = *arg_8h + 0x1c;\n    }\n    *arg_8h = 0;\n    return;\n}\n",
        "token_count": 277
    },
    "00b98bd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.00b98bd8(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint arg_8h;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    char extraout_DL;\n    float10 fVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong uVar11;\n    uint var_40h;\n    uint var_30h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t *var_4h;\n    \n    uVar7 = param_1[3];\n    uVar3 = param_2[3];\n    uVar2 = *((uVar7 * 0x10 + uVar3) * 4 + 0xc34f38) - 1;\n    var_4h = param_2;\n    // switch table (14 cases) at 0xb98c98\n    switch(uVar2) {\n    case 0:\n        uVar3 = fcn.00b99c9c();\n        uVar7 = fcn.00b99c9c();\n        goto code_r0x00b98c1d;\n    case 1:\n        iVar9 = fcn.00b99d46();\n        iVar10 = fcn.00b99d46();\n        if (iVar9 == iVar10) {\n            return 1;\n        }\n        return 0;\n    case 2:\n        fVar8 = fcn.00b99cf8();\n        _var_8h = fVar8;\n        fVar8 = fcn.00b99cf8();\n        if (_var_8h == fVar8) {\n            return 1;\n        }\n        return 0;\n    case 3:\n        fcn.00b99997();\n        uVar7 = param_2[2];\n        fcn.00b99997();\n        iVar6 = fcn.00b97a68(uVar7, 0);\ncode_r0x00b98c85:\n        return iVar6 == 0;\n    default:\ncode_r0x00b98c91:\n        return uVar2 & 0xffffff00;\n    case 6:\n        uVar3 = fcn.00bf89bb();\n        uVar7 = fcn.00bf89bb();\ncode_r0x00b98c1d:\n        uVar2 = uVar3 == uVar7;\n        break;\n    case 7:\n        uVar2 = 0;\n        if (uVar7 == 8) {\n            uVar7 = *param_1;\n        }\n        else {\n            uVar7 = 0;\n        }\n        if (uVar7 != 0) {\n            if (uVar3 == 8) {\n                uVar7 = *param_2;\n            }\n            else {\n                uVar7 = 0;\n            }\n            if ((uVar7 != 0) && (uVar7 = fcn.00bf788a(),  uVar7 != '\\0')) {\n                uVar2 = 1;\n            }\n        }\n        break;\n    case 8:\n        fcn.00b99c53();\n        uVar7 = fcn.00b99c53();\n        return uVar7 & 0xffffff00 | extraout_DL == uVar7;\n    case 9:\n        fcn.00bf8991();\n        uVar11 = fcn.00bf8991();\n        goto code_r0x00bcf393;\n    case 10:\n        if ((uVar7 == 0xb) && (uVar3 == 0xb)) {\n            fcn.00bf89e2();\n            uVar11 = fcn.00bf89e2();\n            uVar2 = uVar11;\n            if (uVar11 >> 0x20 != uVar2) goto code_r0x00b98c91;\n            uVar4 = fcn.00bf89e2();\n            uVar5 = fcn.00bf899f(extraout_ECX);\n            arg_8h = fcn.00bf899f();\n            iVar6 = fcn.00bb16c4(arg_8h, uVar5, uVar4);\n            goto code_r0x00b98c85;\n        }\n        uVar2 = 0;\n        var_18h = 0;\n        fcn.00b99ac0(param_1);\n        _var_8h = ZEXT48(var_4h) << 0x20;\n        fcn.00b99ac0(param_2);\n        fcn.00bf7a3d();\n        fcn.00bf7a3d();\n        fcn.00bf89e2();\n        uVar11 = fcn.00bf89e2();\n        iVar6 = uVar11 >> 0x20;\n        if (iVar6 == uVar11) {\n            uVar4 = fcn.00bf899f(extraout_ECX_00);\n            uVar5 = fcn.00bf899f();\n            iVar6 = fcn.00bb16c4(uVar5, uVar4, iVar6);\n            uVar2 = 1 - (iVar6 != 0);\n        }\n        fcn.00b99a20();\n        uVar7 = fcn.00b99a20();\n        break;\n    case 0xc:\n        fcn.00bf7b95();\n        uVar11 = fcn.00bf7b95();\ncode_r0x00bcf393:\n        return uVar11 & 0xffffff00 | 1 - (uVar11 >> 0x20 != uVar11);\n    case 0xd:\n        fcn.00bf7ba4(&var_40h);\n        fcn.00bf7ba4(&var_30h);\n        uVar1 = fcn.00ba5ee9();\n        uVar2 = uVar1;\n        fcn.00b95a64();\n        uVar7 = fcn.00b95a64();\n    }\n    return uVar7 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 1415
    },
    "00b98cd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00bcf563)\n\nuint32_t __fastcall fcn.00b98cd0(int32_t param_1, int32_t param_2)\n\n{\n    uint arg_8h;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    float10 fVar4;\n    float10 fVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    iVar2 = *((*(param_1 + 0xc) * 0x10 + *(param_2 + 0xc)) * 4 + 0xc34f38);\n    if (iVar2 == 1) {\ncode_r0x00b98d1f:\n        iVar2 = fcn.00b99c9c();\n        uVar1 = fcn.00b99c9c();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n    }\n    else {\n        if (iVar2 == 2) {\n            iVar6 = fcn.00b99d46();\n            iVar7 = fcn.00b99d46();\n            if (iVar6 < iVar7) {\n                return 1;\n            }\n        }\n        else {\n            if (iVar2 != 3) {\n                if (iVar2 == 4) {\n                    fcn.00b99997();\n                    arg_8h = *(param_2 + 8);\n                    fcn.00b99997();\n                    uVar1 = fcn.00b97a68(arg_8h, 0);\n                    return uVar1 & 0xffffff00 | uVar1 < 0;\n                }\n                if (iVar2 == 7) {\n                    uVar1 = fcn.00bf89bb();\n                    uVar3 = fcn.00bf89bb();\n                    return uVar1 < uVar3;\n                }\n                if (iVar2 - 9U != 0) {\n                    return iVar2 - 9U & 0xffffff00;\n                }\n                goto code_r0x00b98d1f;\n            }\n            fVar4 = fcn.00b99cf8();\n            fVar5 = fcn.00b99cf8();\n            if (((fVar5 < fVar4) << 8 | (fVar5 == fVar4) << 0xe) == 0) {\n                return 1;\n            }\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 552
    },
    "00b991b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00b991b0(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    \n    fcn.00b992c0();\n    if ((arg_ch != 0) && (*(*arg_8h + 0x210) = 0,  0 < arg_ch)) {\n        puVar6 = &arg_ch;\n        iVar7 = arg_ch;\n        do {\n            puVar1 = puVar6 + 1;\n            puVar6 = puVar6 + 1;\n            fcn.00b9928c(*puVar1);\n            iVar7 = iVar7 + -1;\n        } while (iVar7 != 0);\n    }\n    iVar8 = 0;\n    *(*arg_8h + 0x10c) = *(*arg_8h + 0x210);\n    *(*arg_8h + 8) = 1;\n    iVar7 = *arg_8h;\n    if (0 < *(iVar7 + 0x10c)) {\n        iVar5 = 0xc;\n        do {\n            *(iVar5 + iVar7) = *(iVar5 + 0x104 + iVar7);\n            iVar7 = *arg_8h;\n            uVar3 = *(iVar5 + iVar7) * *(iVar7 + 8);\n            *(iVar7 + 8) = uVar3;\n            iVar7 = *arg_8h;\n            if (0x1000000 < *(iVar7 + 8)) {\n                return uVar3 & 0xffffff00;\n            }\n            iVar8 = iVar8 + 1;\n            iVar5 = iVar5 + 4;\n        } while (iVar8 < *(iVar7 + 0x10c));\n    }\n    iVar2 = *(*arg_8h + 8) * 4;\n    uVar4 = fcn.00bb0ff6(-(iVar2 >> 0x20 != 0) | iVar2);\n    *(*arg_8h + 4) = uVar4;\n    iVar8 = 0;\n    iVar7 = *arg_8h;\n    if (0 < *(iVar7 + 8)) {\n        do {\n            *(*(iVar7 + 4) + iVar8 * 4) = 0;\n            iVar8 = iVar8 + 1;\n            iVar7 = *arg_8h;\n        } while (iVar8 < *(iVar7 + 8));\n    }\n    return CONCAT31(iVar8 >> 8, 1);\n}\n",
        "token_count": 601
    },
    "00b992c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b992c0(int32_t **param_1)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    cVar1 = fcn.00b99382();\n    piVar2 = *param_1;\n    if (cVar1 == '\\0') {\n        *piVar2 = *piVar2 + -1;\n        piVar2 = fcn.00bb0ff6(0x214);\n        iVar4 = 0;\n        iVar3 = (*param_1)[0x84];\n        piVar2[0x84] = iVar3;\n        if (0 < iVar3) {\n            iVar3 = 0x110;\n            do {\n                iVar4 = iVar4 + 1;\n                *(iVar3 + piVar2) = *(iVar3 + *param_1);\n                iVar3 = iVar3 + 4;\n            } while (iVar4 < piVar2[0x84]);\n        }\n        *param_1 = piVar2;\n    }\n    else {\n        iVar3 = 0;\n        if (0 < piVar2[2]) {\n            do {\n                iVar4 = *((*param_1)[1] + iVar3 * 4);\n                if (iVar4 != 0) {\n                    fcn.00b99df0();\n                    fcn.00bb106c(iVar4);\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < (*param_1)[2]);\n        }\n        fcn.00bb106c((*param_1)[1]);\n    }\n    (*param_1)[1] = 0;\n    **param_1 = 1;\n    (*param_1)[2] = 0;\n    (*param_1)[0x43] = 0;\n    return;\n}\n",
        "token_count": 411
    },
    "00b99fbd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b99fbd(uint *arg_8h)\n\n{\n    uint lpsz;\n    uint cchLength;\n    uint noname_2;\n    int32_t *arg_14h;\n    \n    lpsz = *arg_8h;\n    cchLength = arg_8h[1];\n    noname_2 = arg_8h[2];\n    arg_14h = arg_8h[3];\n    *arg_14h = *arg_14h + 1;\n    fcn.00b982e0(lpsz, cchLength, noname_2, arg_14h);\n    return;\n}\n",
        "token_count": 143
    },
    "00b9dd90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b9dd90(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint var_28h;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.00bafeac();\n    var_38h = 2;\n    iVar1 = *arg_ch;\n    var_34h = iVar1 + -1;\n    while( true ) {\n        arg_8h = *arg_ch;\n        *arg_ch = arg_8h + 1;\n        iVar2 = fcn.00b971c8(arg_8h);\n        if ((iVar2 == 0) || (extraout_DL != '\\0')) break;\n        if ((((*(**(iVar2 + 4) + 2) == 0) && (iVar2 = ***(iVar2 + 4),  iVar2 != 0xb)) && (iVar2 == 0xc)) &&\n           (extraout_ECX == 0)) {\n            var_30h = arg_8h;\n        }\n    }\n    fcn.00bafe26(&var_38h);\n    *arg_ch = iVar1;\n    fcn.00b99a20();\n    fcn.00b99a20();\n    return;\n}\n",
        "token_count": 338
    },
    "00ba1887": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba1887(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00b99cf8();\n    fVar1 = fcn.00bb50f0(SUB84(fVar1, 0), fVar1 >> 0x20);\n    fcn.00b99a20();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 115
    },
    "00ba1a54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba1a54(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00b99cf8();\n    fVar1 = fcn.00bb6240(fVar1);\n    fcn.00b99a20();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 100
    },
    "00ba20e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba20e1(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00b99cf8();\n    fVar1 = fcn.00bb6730(fVar1);\n    fcn.00b99a20();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 100
    },
    "00ba2dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba2dc0(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00b99cf8();\n    fVar1 = fcn.00bb6860(fVar1);\n    fcn.00b99a20();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 100
    },
    "00ba3633": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba3633(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t unaff_EBX;\n    uint unaff_ESI;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    \n    fcn.00ba5bfd();\n    iVar1 = **(arg_8h + 4);\n    fcn.00b99997();\n    uStack96 = *(iVar1 + 8);\n    iVar1 = *(*(arg_8h + 4) + 4);\n    fcn.00b99997();\n    uStack88 = *(iVar1 + 8);\n    iVar1 = *(*(arg_8h + 4) + 8);\n    fcn.00b99997();\n    uStack92 = 0;\n    uStack84 = *(iVar1 + 8);\n    if (3 < *(arg_8h + 8)) {\n        uStack92 = fcn.00b99c9c();\n    }\n    iVar1 = fcn.00ba5c72(uStack88);\n    if (iVar1 == 0) {\n        fcn.00ba5d24(unaff_EBX);\n        fcn.00b97b76(*(unaff_EBX + 4));\n        arg_8h_00 = fcn.00ba58c0(uStack100, unaff_ESI, &uStack96);\n        fcn.00b99b9c(&stack0xffffff94);\n        fcn.00baff61(arg_8h_00, 0);\n        fcn.00b95a64();\n    }\n    else {\n        fcn.00b99b9c(unaff_EBX);\n        fcn.00be6aa3(2, 0);\n        fcn.00baff61(iVar1 + 1, 0);\n    }\n    fcn.00ba5c2e();\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 463
    },
    "00ba3a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba3a70(uint arg_8h, double *arg_ch)\n\n{\n    int32_t iVar1;\n    float10 fVar2;\n    uint var_10h;\n    double dStack12;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&var_10h);\n    if (iVar1 == 0) {\n        fcn.00b99a20();\n        *arg_ch = 0.0;\n        *(arg_ch + 0xc) = 3;\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        dStack12 = _var_10h;\n        fVar2 = fcn.00b99cf8();\n        dStack12 = dStack12 - fVar2;\n        fVar2 = fcn.00bb07f6();\n        dStack12 = dStack12 / fVar2;\n        fcn.00b99a20();\n        *arg_ch = dStack12;\n        *(arg_ch + 0xc) = 3;\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "00ba3ad6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba3ad6(uint noname_0, double *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&var_8h);\n    if (iVar1 == 0) {\n        fcn.00b99a20();\n        *arg_ch = 0.0;\n        *(arg_ch + 0xc) = 3;\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        fcn.00b99a20();\n        *arg_ch = _var_8h;\n        *(arg_ch + 0xc) = 3;\n    }\n    return 0;\n}\n",
        "token_count": 166
    },
    "00ba3b6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba3b6e(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    fcn.00b9b9ad(arg_8h);\n    iVar2 = fcn.00b9b93d(1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            fcn.00be6aa3(-iVar2, 0);\n        }\n    }\n    else {\n        iVar2 = *(*(arg_8h + 4) + 8);\n        fcn.00b99997();\n        cVar1 = fcn.00ba61c3(*(iVar2 + 8), 0);\n        if (cVar1 != '\\0') {\n            return 0;\n        }\n    }\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 219
    },
    "00ba3ccb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00ba3ccb(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint arg_8h;\n    uint var_38h;\n    uint var_18h;\n    \n    iVar1 = fcn.00bb0ff6(0x58);\n    if (iVar1 == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar2 = fcn.00bb0dbb();\n    }\n    *puVar2 = *(param_1 + 0xf4);\n    fcn.00b99e9c(param_1 + 0x1d0);\n    fcn.00b981a7(param_1 + 0x1e0);\n    puVar2[10] = *(param_1 + 0x98);\n    puVar2[0xb] = *(param_1 + 0x2f0);\n    puVar2[0xc] = **(param_1 + 0x1f0);\n    puVar2[0xd] = *(param_1 + 0x2f8);\n    fcn.00b981a7(param_1 + 0x42c);\n    puVar2[0x12] = *(param_1 + 0x43c);\n    puVar2[0x13] = *(param_1 + 0x440);\n    puVar2[0x14] = *(param_1 + 0x448);\n    puVar2[0x15] = *(param_1 + 0xf8);\n    arg_8h = fcn.00bb007f();\n    fcn.00baffde(arg_8h);\n    fcn.00b99a20();\n    fcn.00b99a20();\n    return puVar2;\n}\n",
        "token_count": 404
    },
    "00ba4047": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00ba4047(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    uint uVar7;\n    uint in_stack_ffffffbc;\n    uint in_stack_ffffffc0;\n    uint in_stack_ffffffc4;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00b977c7();\n    iVar2 = 1;\n    while( true ) {\n        do {\n            var_8h = iVar2 + 1;\n            uVar6 = fcn.00b971c8(iVar2);\n            iVar2 = uVar6 >> 0x20;\n            iVar3 = uVar6;\n            if (iVar3 == 0) {\n                fcn.00b98238();\n                uVar4 = 0;\n                goto code_r0x00ba4119;\n            }\n            *0xc56404 = iVar2 + -1;\n            piVar1 = **(iVar3 + 4);\n        } while ((*(piVar1 + 2) != 0) || ((*piVar1 != 0x20 && (*piVar1 != 0x2b))));\n        if (*piVar1 == 0x2b) {\n            var_4h = CONCAT31(var_4h._1_3_, 1);\n        }\n        else {\n            var_4h = var_4h._1_3_ << 8;\n        }\n        uVar5 = *piVar1 == 0x2b;\n        piVar1 = (*(iVar3 + 4))[uVar5 + 1];\n        uVar4 = 0xffffffff;\n        if (*(piVar1 + 2) != 0x34) break;\n        fcn.00b981a7(*piVar1);\n        uVar7 = var_1ch;\n        fcn.00b97f41(var_1ch);\n        iVar2 = fcn.00b982e0(uVar7, in_stack_ffffffbc, in_stack_ffffffc0, in_stack_ffffffc4);\n        if (iVar2 != 0) {\n            uVar7 = 0x84;\n            goto code_r0x00bd78a8;\n        }\n        if (*(*(*(iVar3 + 4) + 8 + uVar5 * 4) + 8) != 0x47) break;\n        var_ch = uVar5 + 3;\n        iVar3 = fcn.00ba3dea(iVar3, &var_ch, &var_1ch, &var_8h, var_4h);\n        iVar2 = var_8h;\n        if (iVar3 < 0) {\ncode_r0x00ba4119:\n            fcn.00b95a64();\n            return uVar4;\n        }\n    }\n    uVar7 = 0x69;\ncode_r0x00bd78a8:\n    fcn.00bfa0b5(uVar7, 0xffffffff);\n    goto code_r0x00ba4119;\n}\n",
        "token_count": 735
    },
    "00ba5c72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba5c72(uint arg_8h)\n\n{\n    int32_t *arg_ch;\n    int64_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00ba5c2e();\n    uVar3 = arg_8h;\n    iVar2 = fcn.00ba5e12(arg_8h);\n    if (iVar2 == 0) {\n        iVar2 = fcn.00ba6843(0, &var_4h, &arg_8h);\n        *(in_ECX + 0x14) = iVar2;\n        if (iVar2 == 0) {\n            return arg_8h;\n        }\n        uVar4 = fcn.00ba62f2(&var_4h);\n        arg_ch = in_ECX + 0x24;\n        *(in_ECX + 0x18) = uVar4;\n        fcn.00bb084d(2, arg_ch);\n        iVar2 = (*arg_ch + 1) * 3;\n        *arg_ch = iVar2;\n        fcn.00ba5d92(uVar3, *(in_ECX + 0x14), *(in_ECX + 0x18), iVar2);\n    }\n    else {\n        *(in_ECX + 0x14) = *(iVar2 + 0x14);\n        *(in_ECX + 0x18) = *(iVar2 + 0x18);\n        *(in_ECX + 0x24) = *(iVar2 + 0x1c);\n    }\n    iVar1 = *(in_ECX + 0x24) * 4;\n    uVar3 = fcn.00bb0ff6(-(iVar1 >> 0x20 != 0) | iVar1);\n    *(in_ECX + 0x20) = uVar3;\n    return 0;\n}\n",
        "token_count": 438
    },
    "00ba5e12": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00ba5e12(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    iVar3 = fcn.00ba5e58(arg_8h);\n    piVar4 = 0xc57300;\n    while( true ) {\n        iVar1 = *piVar4;\n        if (iVar1 == 0) {\n            return 0;\n        }\n        if ((*(iVar1 + 0x10) == iVar3) && (cVar2 = fcn.00ba5ee9(),  cVar2 != '\\0')) break;\n        piVar4 = piVar4 + 1;\n        if (0xc573ff < piVar4) {\n            return 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 192
    },
    "00ba5ee9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort __fastcall fcn.00ba5ee9(int16_t **param_1, int16_t **param_2)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    \n    piVar3 = param_1[1];\n    if (piVar3 == param_2[1]) {\n        piVar2 = *param_2;\n        piVar1 = *param_1;\n        while( true ) {\n            if (piVar3 == NULL) {\n                return 1;\n            }\n            if (*piVar1 != *piVar2) break;\n            piVar1 = piVar1 + 1;\n            piVar2 = piVar2 + 1;\n            piVar3 = piVar3 + -1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 185
    },
    "00ba5f13": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00ba5f13(uint16_t **param_1, uint16_t **param_2)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint16_t *puVar4;\n    \n    puVar4 = param_1[1];\n    if (param_2[1] <= puVar4 && puVar4 != param_2[1]) {\n        puVar4 = param_2[1];\n    }\n    puVar1 = *param_2;\n    puVar2 = *param_1;\n    puVar3 = puVar4;\n    while( true ) {\n        if (puVar3 == NULL) {\n            return puVar4 < param_2[1];\n        }\n        if (*puVar2 != *puVar1) break;\n        puVar2 = puVar2 + 1;\n        puVar1 = puVar1 + 1;\n        puVar3 = puVar3 + -1;\n    }\n    return *puVar2 < *puVar1;\n}\n",
        "token_count": 239
    },
    "00ba86a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00ba86a1(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    int16_t in_DX;\n    uint16_t *puVar3;\n    uint var_8h;\n    uint var_4h;\n    \ncode_r0x00ba86b3:\n    iVar1 = fcn.00ba86cc();\n    if (iVar1 == 0) {\n        return;\n    }\n    puVar3 = *(arg_ch + 0x10) + arg_10h * 2;\n    if (puVar3 < *(arg_ch + 0x20)) goto code_r0x00be5184;\n    goto code_r0x00be51b3;\ncode_r0x00be5184:\n    iVar2 = *(arg_ch + 0x14);\n    do {\n        if (iVar2 + *puVar3 * 2 == iVar1 + 2) {\n            *puVar3 = in_DX + *puVar3;\n            break;\n        }\n        iVar2 = *(arg_ch + 0x14);\n        puVar3 = puVar3 + 1;\n    } while (puVar3 < *(arg_ch + 0x20));\n    if (*(arg_ch + 0x20) <= puVar3) {\ncode_r0x00be51b3:\n        if (in_ECX <= *(arg_ch + 0x14) + *(iVar1 + 2) * 2) {\n            *(iVar1 + 2) = in_DX + *(iVar1 + 2);\n        }\n    }\n    goto code_r0x00ba86b3;\n}\n",
        "token_count": 383
    },
    "00ba906a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00ba906a(uint16_t param_1)\n\n{\n    uint32_t uStack4;\n    \n    if (0x61 < param_1) {\n        return param_1;\n    }\n    uStack4 = 0x55;\n    if (param_1 < 0x55) {\n        uStack4 = 0x48;\n        if (param_1 < 0x48) {\n            uStack4 = 0x3b;\n            if (param_1 < 0x3b) {\n                return (-(param_1 < 0x2e) & 0xfffffff3) + 0x2e;\n            }\n        }\n    }\n    return uStack4;\n}\n",
        "token_count": 162
    },
    "00bafcd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00bafcd4(uint noname_0, uint noname_1, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    float10 extraout_ST0;\n    float10 extraout_ST1;\n    int64_t iVar6;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    iVar3 = arg_14h;\n    uVar2 = arg_10h;\n    if ((_arg_10h == 0.0) || (*0xc34bb0 == _arg_10h)) {\n        iVar5 = 0;\n    }\n    else {\n        iVar6 = fcn.00bcb606();\n        iVar5 = iVar6;\n        arg_14h = iVar6 >> 0x20;\n        arg_10h = SUB84(iVar6, 0);\n        if (extraout_ST0 < extraout_ST1) {\n            dVar1 = iVar6 - *0xc34ba8;\n            var_8h = SUB84(dVar1, 0);\n            var_4h = dVar1 >> 0x20;\n            iVar4 = ((var_4h - arg_14h) - (var_8h < arg_10h)) - (var_8h - arg_10h < 10);\n            iVar3 = (iVar3 - arg_14h) - (uVar2 < arg_10h);\n            if ((iVar4 <= iVar3) && ((iVar4 < iVar3 || ((var_8h - arg_10h) - 10 <= uVar2 - arg_10h)))) {\n                iVar5 = iVar5 + -1;\n            }\n        }\n        else {\n            dVar1 = iVar6 + *0xc34ba8;\n            var_8h = SUB84(dVar1, 0);\n            var_4h = dVar1 >> 0x20;\n            iVar4 = ((var_4h - arg_14h) - (var_8h < arg_10h)) - (var_8h - arg_10h < 10);\n            iVar3 = (iVar3 - arg_14h) - (uVar2 < arg_10h);\n            if ((iVar4 <= iVar3) && ((iVar4 < iVar3 || ((var_8h - arg_10h) - 10 <= uVar2 - arg_10h)))) {\n                iVar5 = iVar5 + 1;\n            }\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 598
    },
    "00bafec6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00bafec6(uint param_1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    \n    iVar2 = fcn.00bb2e3c(param_1);\n    iVar1 = (iVar2 + 1) * 2;\n    arg_8h = fcn.00bb0ff6(-(iVar1 >> 0x20 != 0) | iVar1);\n    fcn.00bb2ffc(arg_8h, param_1);\n    return arg_8h;\n}\n",
        "token_count": 127
    },
    "00bafef6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00bafef6(int32_t arg_8h)\n\n{\n    int16_t *in_ECX;\n    int16_t in_DX;\n    \n    if (arg_8h != 0) {\n        do {\n            if (*in_ECX == in_DX) {\n                return in_ECX;\n            }\n            in_ECX = in_ECX + 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return NULL;\n}\n",
        "token_count": 120
    },
    "00bb0c75": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00bb0c75(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    uint32_t *in_EDX;\n    int32_t var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    var_8h = 1;\n    _auStack8 = 0;\n    if (in_ECX == 0) {\n        return 0;\n    }\n    while (iVar3 = fcn.00bb387d(*(in_ECX + *in_EDX * 2)),  iVar3 != 0) {\n        *in_EDX = *in_EDX + 1;\n    }\n    uVar4 = *in_EDX;\n    iVar2 = *(in_ECX + uVar4 * 2);\n    *arg_8h = 0;\n    if (iVar2 != 0x2b) {\n        if (iVar2 != 0x2d) goto code_r0x00bb0cb8;\n        var_8h = -1;\n    }\n    *in_EDX = uVar4 + 1;\ncode_r0x00bb0cb8:\n    uVar4 = *in_EDX;\n    iVar2 = *(in_ECX + uVar4 * 2);\n    while ((iVar2 != 0 && (uVar4 = fcn.00bb3e9f(*(in_ECX + *in_EDX * 2)),  uVar4 != 0))) {\n        _auStack8 = 0x1000000;\n        uVar1 = *in_EDX + 1;\n        *arg_8h = *arg_8h * 10 + -0x30 + *(in_ECX + *in_EDX * 2);\n        uVar4 = 0;\n        *in_EDX = uVar1;\n        iVar2 = *(in_ECX + uVar1 * 2);\n    }\n    *arg_8h = *arg_8h * var_8h;\n    return uVar4 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 511
    },
    "00bb0d27": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00bb0d27(int16_t **param_1, int16_t *param_2)\n\n{\n    int16_t *piVar1;\n    uint uVar2;\n    int16_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar1 = fcn.00bb2e3c(param_2);\n    if (piVar3 == piVar1) {\n        piVar1 = *param_1;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            if (*piVar1 != *param_2) goto code_r0x00bb0d40;\n            piVar1 = piVar1 + 1;\n            param_2 = param_2 + 1;\n        }\n        uVar2 = 1;\n    }\n    else {\ncode_r0x00bb0d40:\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 215
    },
    "00bb37ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bb37ca(uint arg_8h)\n\n{\n    fcn.00bbacf6(arg_8h, 0, 10);\n    return;\n}\n",
        "token_count": 41
    },
    "00bb3eca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00bb3eca(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.00bb8b40(0xc4bb90, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.00bb8d68();\n        *puVar1 = 0x16;\n        fcn.00bb8ff6();\n    }\n    else {\n        iVar2 = fcn.00bb6e48();\n        fcn.00bb6e8d(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.00bb6e48();\n        arg_8h_00 = fcn.00bba9d1(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.00bb6e48();\n        uVar4 = fcn.00bbb1ad(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.00bb6e48();\n        fcn.00bba9a0(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00bb3f66();\n    }\n    fcn.00bb8b85();\n    return;\n}\n",
        "token_count": 481
    },
    "00bb3f66": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00bb3f66(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00bb6e48();\n    fcn.00bb6ef7(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 58
    },
    "00bb9e0b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00bb9e0b(void)\n\n{\n    code **ppcVar1;\n    \n    for (ppcVar1 = 0xc4baec; ppcVar1 < 0xc4baec; ppcVar1 = ppcVar1 + 1) {\n        if (*ppcVar1 != NULL) {\n            (**ppcVar1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00bc238e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00bc2632)\n\nfloat10 fcn.00bc238e(double param_1)\n\n{\n    int32_t iVar1;\n    double dVar2;\n    double dVar3;\n    int32_t iVar4;\n    double dVar5;\n    double dVar6;\n    uchar auVar7 [16];\n    double dVar8;\n    double in_XMM7_Qa;\n    \n    dVar2 = in_XMM7_Qa & *0xc28b20;\n    dVar3 = in_XMM7_Qa & *0xc28b28;\n    if (*0xc28c48 <= dVar2) {\n        return *0xc28c58 + *((param_1._4_4_ >> 0x1f) * -8 + 0xc28b30);\n    }\n    if (*0xc28c38 <= dVar2) {\n        if (*0xc28c30 <= dVar2) {\n            if (*0xc28c28 <= dVar2) {\n                iVar1 = 0x300;\n                dVar3 = *0xc28c10 / dVar2;\n            }\n            else {\n                iVar4 = (dVar2 + *0xc28c20 >> 0x2c) - *0xc28c00;\n                iVar1 = iVar4 * 3;\n                dVar3 = *(iVar4 * 0x18 + 0xc30e98);\n                dVar3 = (dVar2 - dVar3) / (dVar2 * dVar3 + *0xc28c18);\n            }\n            dVar5 = dVar3 * dVar3;\n            dVar6 = dVar5 * dVar5;\n            dVar8 = dVar3 * dVar3 * dVar3 * dVar3;\n            dVar5 = (((*0xc28bf0 * dVar6 + *0xc28be0) * dVar6 + *0xc28bd0) * dVar6 + *0xc28bc0) * dVar5;\n            auVar7 = CONCAT88(((*0xc28bf8 * dVar8 + *0xc28be8) * dVar8 + *0xc28bd8) * dVar8 + *0xc28bc8, dVar5);\n            auVar7 = shufpd(auVar7, auVar7, 1);\n            return *(iVar1 * 8 + 0xc30e88) - (((dVar5 + SUB168(auVar7, 0)) * dVar3 - *(iVar1 * 8 + 0xc30e90)) - dVar3) |\n                   in_XMM7_Qa ^ dVar2;\n        }\n        dVar2 = dVar2 * dVar2;\n        dVar5 = dVar2 * dVar2;\n        dVar3 = dVar3 * dVar3 * dVar3 * dVar3;\n        dVar2 = (((((((*0xc28bb0 * dVar5 + *0xc28ba0) * dVar5 + *0xc28b90) * dVar5 + *0xc28b80) * dVar5 + *0xc28b70) *\n                   dVar5 + *0xc28b60) * dVar5 + *0xc28b50) * dVar5 + _str.RUUUUU) * dVar2;\n        auVar7 = CONCAT88(((((((*0xc28bb8 * dVar3 + *0xc28ba8) * dVar3 + *0xc28b98) * dVar3 + *0xc28b88) * dVar3 +\n                            *0xc28b78) * dVar3 + *0xc28b68) * dVar3 + *0xc28b58) * dVar3 + *0xc28b48, dVar2);\n        auVar7 = shufpd(auVar7, auVar7, 1);\n        return in_XMM7_Qa - (dVar2 + SUB168(auVar7, 0)) * in_XMM7_Qa;\n    }\n    if (*0xc28c40 <= dVar2) {\n        dVar2 = dVar2 * dVar2;\n        dVar5 = dVar2 * dVar2;\n        dVar3 = dVar3 * dVar3 * dVar3 * dVar3;\n        dVar2 = (((*0xc28bf0 * dVar5 + *0xc28be0) * dVar5 + *0xc28bd0) * dVar5 + *0xc28bc0) * dVar2;\n        auVar7 = CONCAT88(((*0xc28bf8 * dVar3 + *0xc28be8) * dVar3 + *0xc28bd8) * dVar3 + *0xc28bc8, dVar2);\n        auVar7 = shufpd(auVar7, auVar7, 1);\n        return in_XMM7_Qa - (dVar2 + SUB168(auVar7, 0)) * in_XMM7_Qa;\n    }\n    if (dVar2 != *0xc28c08) {\n        if (*0xc28c50 <= dVar2) {\n            return *0xc28c58 * *0xc28c58 + param_1;\n        }\n        return *0xc28c58 * *0xc28c58 + param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 1205
    },
    "00bc7fd5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00bc7fd5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00bb8b40(0xc4c0b0, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x20) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.00bb8d68();\n        *puVar1 = 0x16;\n        fcn.00bb8ff6();\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.00bc809e(unaff_EBP + -0x20, puVar1, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x1c) = iVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00bc8072();\n        if (iVar2 != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.00bb8b85();\n    return;\n}\n",
        "token_count": 491
    },
    "00bc87f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bc87f1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00bc7fd5(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 80
    },
    "00bcb564": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00bcb564(int32_t param_1)\n\n{\n    fcn.00bb3020(param_1 + 0x14, 0, 0x18);\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x30) = 0;\n    *(param_1 + 0x34) = 0;\n    return param_1;\n}\n",
        "token_count": 99
    },
    "00bcb606": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00bcb606(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    uVar1 = ROUND(in_ST0);\n    uStack32 = uVar1;\n    fStack28 = uVar1 >> 0x20;\n    fVar4 = in_ST0;\n    if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n        if (fVar4 < 0) {\n            uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n            bVar3 = CARRY4(uStack32, uVar2);\n            uStack32 = uStack32 + uVar2;\n            fStack28 = fStack28 + bVar3;\n        }\n        else {\n            uVar2 = 0x80000000 < in_ST0 - uVar1;\n            bVar3 = uStack32 < uVar2;\n            uStack32 = uStack32 - uVar2;\n            fStack28 = fStack28 - bVar3;\n        }\n    }\n    return CONCAT44(fStack28, uStack32);\n}\n",
        "token_count": 306
    },
    "00ba3bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00ba3bc0(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = 0;\n    iVar3 = *(in_ECX + -0x1c) + -1;\n    if (-1 < iVar3) {\n        do {\n            arg_8h_00 = (iVar3 + iVar4) / 2;\n            puVar1 = fcn.00ba9090(arg_8h_00);\n            iVar2 = fcn.00bb378c(arg_8h, *puVar1);\n            if (iVar2 < 0) {\n                iVar3 = arg_8h_00 + -1;\n            }\n            else {\n                if (iVar2 < 1) break;\n                iVar4 = arg_8h_00 + 1;\n            }\n        } while (iVar4 <= iVar3);\n        if (iVar4 <= iVar3) {\n            return arg_8h_00;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 268
    },
    "00be6461": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00be6461(int32_t **param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    piVar2 = *param_1;\n    iVar1 = piVar2[0x43];\n    if (iVar1 != piVar2[0x84]) {\n        return piVar2 & 0xffffff00;\n    }\n    iVar3 = 0;\n    if (0 < iVar1) {\n        piVar2 = piVar2 + 0x44;\n        do {\n            if ((*piVar2 < 0) || (piVar2[-0x41] <= *piVar2)) {\n                return piVar2 & 0xffffff00;\n            }\n            iVar3 = iVar3 + 1;\n            piVar2 = piVar2 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return CONCAT31(piVar2 >> 8, 1);\n}\n",
        "token_count": 218
    },
    "00be649e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00be649e(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = *param_1;\n    iVar4 = *(iVar1 + 8);\n    if ((iVar4 == 0) || (cVar2 = fcn.00be6461(),  cVar2 == '\\0')) {\n        iVar3 = -1;\n    }\n    else {\n        var_8h = *(iVar1 + 0x10c);\n        iVar3 = 0;\n        if (0 < var_8h) {\n            var_4h = 0x110;\n            do {\n                iVar4 = iVar4 / *(var_4h + -0x104 + iVar1);\n                iVar3 = iVar3 + *(var_4h + iVar1) * iVar4;\n                var_4h = var_4h + 4;\n                var_8h = var_8h + -1;\n            } while (var_8h != 0);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 271
    },
    "00be6731": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00be6731(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    int32_t in_ECX;\n    \n    if (arg_8h < *(in_ECX + 0x28)) {\n        arg_10h = fcn.00c1e958(*(in_ECX + 0x28), arg_8h, &arg_8h);\n        fcn.00b978ad(arg_8h, 0, arg_10h);\n        (**0xc35748)(arg_8h);\n    }\n    else {\n        fcn.00b97e8c(0, 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00be6d03": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00be6d03(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    uint32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    puVar1 = arg_8h;\n    iVar3 = *in_ECX;\n    iVar5 = *(iVar3 + 0x10c);\n    if ((iVar5 == 0) || (in_EAX = *arg_8h,  iVar5 != *(in_EAX + 0x10c))) {\n        uVar4 = in_EAX & 0xffffff00;\n    }\n    else {\n        iVar6 = 0;\n        if (0 < iVar5) {\n            iVar5 = 0x110;\n            do {\n                *(iVar5 + iVar3) = 0;\n                *(iVar5 + *arg_8h) = 0;\n                iVar6 = iVar6 + 1;\n                iVar3 = *in_ECX;\n                iVar5 = iVar5 + 4;\n            } while (iVar6 < *(iVar3 + 0x10c));\n        }\n        do {\n            iVar3 = fcn.00be649e();\n            if (((-1 < iVar3) && (iVar3 = *(*(*puVar1 + 4) + iVar3 * 4),  iVar3 != 0)) &&\n               (iVar5 = fcn.00b98ea0(in_ECX, 2, 0),  iVar5 != 0)) {\n                fcn.00b99e9c(iVar3);\n            }\n            arg_8h = NULL;\n            iVar3 = 0;\n            if (0 < *(*in_ECX + 0x10c)) {\n                iVar5 = 0x110;\n                do {\n                    *(iVar5 + *in_ECX) = *(iVar5 + *in_ECX) + 1;\n                    *(iVar5 + *puVar1) = *(iVar5 + *puVar1) + 1;\n                    cVar2 = fcn.00be6461();\n                    if ((cVar2 != '\\0') && (cVar2 = fcn.00be6461(),  iVar3 = arg_8h,  cVar2 != '\\0')) break;\n                    *(iVar5 + *in_ECX) = 0;\n                    *(iVar5 + *puVar1) = 0;\n                    iVar3 = arg_8h + 1;\n                    iVar5 = iVar5 + 4;\n                    arg_8h = iVar3;\n                } while (iVar3 < *(*in_ECX + 0x10c));\n            }\n        } while (iVar3 < *(*in_ECX + 0x10c));\n        uVar4 = CONCAT31(*in_ECX >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 650
    },
    "00be7280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00be7280(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    uint var_14h;\n    uint var_ch;\n    \n    uVar1 = fcn.00bf89e2();\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayCopyData)(0x11, 0, uVar1);\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        fcn.00b99ac0(arg_8h);\n        uVar1 = fcn.00bf89e2();\n        uVar1 = fcn.00bf899f(extraout_ECX, uVar1);\n        fcn.00bb1080(iVar2 + 0x18, uVar1);\n        fcn.00b99a20();\n    }\n    return iVar2;\n}\n",
        "token_count": 207
    },
    "00be74f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00be74f8(int32_t *arg_8h, uint arg_ch, int32_t **arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00bb16c4(arg_ch, 0xc22bec, 0x10);\n    if ((iVar1 != 0) && (iVar1 = fcn.00bb16c4(arg_ch, 0xc22c1c, 0x10),  iVar1 != 0)) {\n        return 0x80004002;\n    }\n    (**(*arg_8h + 4))(arg_8h);\n    *arg_10h = arg_8h;\n    return 0;\n}\n",
        "token_count": 160
    },
    "00be7631": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00be7631(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    \n    fcn.00be810e(((arg_8h == -0x7ff8fff2) - 1 & 6) + 0xc0000017, 1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 89
    },
    "00be80d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00be80d4(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 == 0) {\n        *param_2 = 0;\n    }\n    else {\n        iVar1 = fcn.00bb2e3c(param_1);\n        iVar1 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)((iVar1 + 1) * 2);\n        *param_2 = iVar1;\n        if (iVar1 == 0) {\n            return 0x8007000e;\n        }\n        fcn.00bb2ffc(iVar1, param_1);\n    }\n    return 0;\n}\n",
        "token_count": 161
    },
    "00be8123": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00be8123(int32_t *arg_8h, uint *arg_ch)\n\n{\n    uint *in_ECX;\n    \n    fcn.00b97b76(in_ECX[1] + arg_ch[1]);\n    fcn.00bb1080(*arg_8h, *in_ECX, in_ECX[1] * 2);\n    fcn.00bb1080(*arg_8h + in_ECX[1] * 2, *arg_ch, arg_ch[1] * 2 + 2);\n    arg_8h[1] = in_ECX[1] + arg_ch[1];\n    return arg_8h;\n}\n",
        "token_count": 156
    },
    "00be8cc3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "modify access privileges"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00be8cc3(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    int32_t var_ch;\n    int32_t *var_8h;\n    \n    iVar3 = param_1[1] * 0xc + 4;\n    var_ch = iVar3;\n    piVar1 = fcn.00bb0ff6(iVar3);\n    var_8h = piVar1;\n    iVar2 = fcn.00bb0ff6(iVar3);\n    param_1[2] = iVar2;\n    *piVar1 = param_1[1];\n    if (param_1[1] != 0) {\n        piVar4 = piVar1 + 1;\n        uVar5 = 0;\n        do {\n            piVar4[2] = 2;\n            (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, *(*param_1 + uVar5 * 4), piVar4);\n            uVar5 = uVar5 + 1;\n            piVar4 = piVar4 + 3;\n            iVar3 = var_ch;\n            piVar1 = var_8h;\n        } while (uVar5 < param_1[1]);\n    }\n    if (param_1[2] == 0) {\n        puVar6 = &var_ch;\n    }\n    else {\n        puVar6 = NULL;\n        iVar3 = 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(param_1[3], 0, piVar1, iVar3, 0, puVar6);\n    fcn.00bb106c(piVar1);\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    return iVar3 == 0;\n}\n",
        "token_count": 436
    },
    "00be8d5b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00be8d5b(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint in_ECX;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    uint32_t *var_8h;\n    uint nDestinationSidLength;\n    \n    var_8h = NULL;\n    nDestinationSidLength = 0;\n    uVar6 = 0;\n    piVar3 = fcn.00be85f1(&var_8h, in_ECX, &nDestinationSidLength);\n    puVar2 = var_8h;\n    uVar7 = 0;\n    if ((piVar3 != '\\0') && (uVar8 = 0,  uVar7 = uVar6,  puVar1 = var_8h,  *var_8h != 0)) {\n        do {\n            piVar3 = puVar1[2] & 0xc0000000;\n            if (piVar3 == 0xc0000000) {\n                nDestinationSidLength = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(var_8h[uVar8 * 2 + 1]);\n                uVar5 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, nDestinationSidLength);\n                iVar4 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar5);\n                *arg_ch = iVar4;\n                piVar3 = arg_ch;\n                if ((iVar4 != 0) &&\n                   (piVar3 = (*_sym.imp.ADVAPI32.dll_CopySid)(nDestinationSidLength, iVar4, puVar2[uVar8 * 2 + 1]), \n                   piVar3 != NULL)) {\n                    uVar7 = 1;\n                }\n                break;\n            }\n            uVar8 = uVar8 + 1;\n            puVar1 = puVar1 + 2;\n        } while (uVar8 < *var_8h);\n    }\n    if (puVar2 != NULL) {\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, puVar2);\n        piVar3 = (*_sym.imp.KERNEL32.dll_HeapFree)(uVar5);\n    }\n    return piVar3 & 0xffffff00 | uVar7;\n}\n",
        "token_count": 553
    },
    "00be9cd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00be9cd7(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_a8h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *hWnd;\n    \n    hWnd = in_ECX;\n    fcn.00ba62e0();\n    var_14h = arg_8h;\n    uVar1 = fcn.00bf18ee(0x10, *in_ECX);\n    fcn.00bf19cc(&var_14h, uVar1, 0x10);\n    uVar3 = 0;\n    (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x1104, 0, uVar1);\n    fcn.00bf1997(uVar1, &var_14h, 0x10);\n    iVar4 = var_14h;\n    uVar1 = *in_ECX;\n    var_20h = (var_8h - var_10h) / 2 + var_10h;\n    arg_ch[1] = var_20h;\n    uVar1 = fcn.00bf18ee(0x10, uVar1);\n    if (iVar4 <= var_ch) {\n        do {\n            var_24h = iVar4;\n            fcn.00bf19cc(&var_24h, uVar1, 0x10);\n            (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x1111, 0, uVar1);\n            fcn.00bf1997(uVar1, &var_24h, 0x10);\n            if ((var_1ch & 0x40) != 0) break;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 <= var_ch);\n        iVar5 = iVar4;\n        if (iVar4 <= var_ch) {\n            do {\n                var_24h = iVar5;\n                fcn.00bf19cc(&var_24h, uVar1, 0x10);\n                (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x1111, 0, uVar1);\n                fcn.00bf1997(uVar1, &var_24h, 0x10);\n                if ((var_1ch & 0x40) == 0) break;\n                iVar5 = iVar5 + 1;\n            } while (iVar5 <= var_ch);\n            if (iVar5 <= var_ch) {\n                uVar3 = 1;\n                *arg_ch = (iVar5 - iVar4) / 2 + iVar4;\n            }\n        }\n    }\n    uVar2 = fcn.00ba62c5();\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 717
    },
    "00be9e2e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00be9e2e(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    int16_t *piVar2;\n    uint16_t *puVar3;\n    uint *in_ECX;\n    uint32_t arg_8h_01;\n    uint var_1ch;\n    uint *hWnd;\n    int32_t var_8h;\n    \n    arg_8h_01 = 0;\n    hWnd = in_ECX;\n    arg_8h_00 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x110a, 0, 0);\n    if (arg_8h_00 != 0) {\n        uVar1 = *(arg_8h + 4);\n        var_8h = arg_8h_00;\n        fcn.00b977c7();\n        if (uVar1 != 0) {\n            while ((arg_8h_01 == 0 ||\n                   (arg_8h_00 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x110a, 4, arg_8h_00),  var_8h = arg_8h_00, \n                   arg_8h_00 != 0))) {\n                fcn.00b97d2c(0xc1f910);\n                for (; arg_8h_01 < uVar1; arg_8h_01 = arg_8h_01 + 1) {\n                    piVar2 = fcn.00b97b20(arg_8h_01);\n                    if (*piVar2 == 0x7c) {\n                        piVar2 = fcn.00b97b20(arg_8h_01 + 1);\n                        arg_8h_00 = var_8h;\n                        if (*piVar2 != 0x7c) break;\n                        fcn.00b97a84(0x7c);\n                        arg_8h_01 = arg_8h_01 + 2;\n                    }\n                    puVar3 = fcn.00b97b20(arg_8h_01);\n                    fcn.00b97a84(*puVar3);\n                    arg_8h_00 = var_8h;\n                }\n                arg_8h_00 = fcn.00bea0df(arg_8h_00, &var_1ch);\n                var_8h = arg_8h_00;\n                if ((arg_8h_00 == 0) || (arg_8h_01 = arg_8h_01 + 1,  uVar1 <= arg_8h_01)) break;\n            }\n        }\n        fcn.00b95a64();\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 627
    },
    "00bea52f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bea52f(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint lpClassName;\n    \n    fcn.00b97d2c(0xc1f910);\n    fcn.00bea37c(arg_8h, 1);\n    iVar1 = (*_sym.imp.USER32.dll_GetFocus)();\n    *(in_ECX + 0xd8) = iVar1;\n    if ((iVar1 != 0) && (iVar1 = fcn.00bea3c5(iVar1, arg_8h),  iVar1 != 0)) {\n        fcn.00beade3(*(in_ECX + 0xd8));\n        *(in_ECX + 0xd4) = arg_8h;\n        (*_sym.imp.USER32.dll_GetClassNameW)(*(in_ECX + 0xd8), &lpClassName, 0x100);\n        fcn.00b97d2c(&lpClassName);\n        *(in_ECX + 0x124) = 0;\n        (*_sym.imp.USER32.dll_EnumChildWindows)(arg_8h, fcn.00bea615);\n        fcn.00bb38d8(&lpClassName, L\"%s%d\", *(in_ECX + 0x8c));\n        fcn.00b97d2c(&lpClassName);\n        fcn.00bea37c(arg_8h, 0);\n        return 1;\n    }\n    fcn.00bea37c(arg_8h, 0);\n    return 0;\n}\n",
        "token_count": 358
    },
    "00beae14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00beae14(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_ECX;\n    \n    iVar1 = fcn.00bb3980(arg_8h);\n    in_ECX[1] = iVar1;\n    uVar2 = fcn.00b95a4b(iVar1 + 1);\n    in_ECX[2] = uVar2;\n    uVar2 = fcn.00bb0ff6(uVar2);\n    *in_ECX = uVar2;\n    fcn.00bb1080(uVar2, arg_8h, iVar1 + 1);\n    fcn.00be6443();\n    return;\n}\n",
        "token_count": 162
    },
    "00beaeac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00beaeac(int16_t *arg_8h)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int16_t **in_ECX;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int16_t *piVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar5 = NULL;\n    if (in_ECX[1] != NULL) {\n        iVar3 = fcn.00bb2e3c(arg_8h);\n        if (in_ECX[1] != NULL) {\n            piVar6 = *in_ECX;\n            piVar1 = arg_8h;\n            iVar2 = iVar3;\n            piVar4 = piVar6;\n            do {\n                while( true ) {\n                    if (iVar2 == 0) {\n                        return piVar5;\n                    }\n                    if (*piVar6 != *piVar1) break;\n                    piVar6 = piVar6 + 1;\n                    piVar1 = piVar1 + 1;\n                    iVar2 = iVar2 + -1;\n                }\n                piVar5 = piVar5 + 1;\n                piVar6 = piVar4 + 1;\n                piVar1 = arg_8h;\n                iVar2 = iVar3;\n                piVar4 = piVar6;\n            } while (piVar5 < in_ECX[1]);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 337
    },
    "00beb7b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.00beb7b6(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t **arg_14h)\n\n{\n    int32_t **ppiVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int32_t *piVar4;\n    char cVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t **in_ECX;\n    int32_t *extraout_EDX;\n    int32_t iVar8;\n    uint arg_14h_00;\n    uint var_14h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t **var_4h;\n    \n    piVar4 = arg_10h;\n    *in_ECX = NULL;\n    ppiVar1 = in_ECX + 3;\n    *ppiVar1 = NULL;\n    in_ECX[10] = NULL;\n    in_ECX[0xc] = NULL;\n    in_ECX[0xd] = NULL;\n    *(in_ECX + 0xf) = 0;\n    in_ECX[2] = NULL;\n    if (arg_ch == NULL) {\n        return in_ECX;\n    }\n    if (arg_10h == NULL) {\n        return in_ECX;\n    }\n    if (arg_14h == NULL) {\n        return in_ECX;\n    }\n    if (arg_8h == NULL) {\n        return in_ECX;\n    }\n    *arg_14h = NULL;\n    in_ECX[4] = *(arg_10h + 0x22);\n    in_ECX[6] = *(arg_10h + 0x23) + *(arg_10h + 0x22);\n    in_ECX[5] = *(arg_10h + 0x8a);\n    iVar2 = *(arg_10h + 0x8a);\n    iVar3 = *(arg_10h + 0x8e);\n    in_ECX[1] = arg_10h;\n    in_ECX[7] = iVar3 + iVar2;\n    *in_ECX = arg_8h;\n    var_4h = in_ECX;\n    cVar5 = fcn.00b993dd();\n    if (cVar5 == '\\0') {\n        iVar6 = -0x7fffbffb;\n    }\n    else {\n        if (extraout_EDX[3] == 8) {\n            iVar6 = *extraout_EDX;\n        }\n        else {\n            iVar6 = 0;\n        }\n        iVar6 = (****(iVar6 + 8))(*(iVar6 + 8), 0xc22cdc, ppiVar1);\n        if (-1 < iVar6) {\n            piVar7 = fcn.00bb0ff6(0xc);\n            if (piVar7 == NULL) {\n                piVar7 = NULL;\n            }\n            else {\n                *piVar7 = 0xc498e4;\n                piVar7[2] = in_ECX;\n                piVar7[1] = 1;\n            }\n            in_ECX[10] = piVar7;\n            piVar7 = fcn.00bb0ff6(8);\n            if (piVar7 == NULL) {\n                piVar7 = NULL;\n            }\n            else {\n                *piVar7 = 0xc498a8;\n                piVar7[1] = in_ECX;\n            }\n            in_ECX[0xc] = piVar7;\n            piVar7 = fcn.00bb0ff6(0xc);\n            if (piVar7 == NULL) {\n                piVar7 = NULL;\n            }\n            else {\n                piVar7[2] = 0;\n                *piVar7 = 0xc49840;\n                piVar7[1] = in_ECX;\n            }\n            in_ECX[0xb] = piVar7;\n            piVar7 = fcn.00bb0ff6(8);\n            if (piVar7 == NULL) {\n                piVar7 = NULL;\n            }\n            else {\n                *piVar7 = 0xc497e0;\n                piVar7[1] = in_ECX;\n            }\n            in_ECX[0xd] = piVar7;\n            (**(**ppiVar1 + 0x14))(*ppiVar1, L\"Container\", L\"AutoIt3GUI\");\n            var_ch = *(piVar4 + 0x23);\n            var_8h = *(piVar4 + 0x8e);\n            fcn.00bebc53();\n            (**(**ppiVar1 + 0x44))(*ppiVar1, 1, &var_14h);\n            (**(**ppiVar1 + 0xc))(*ppiVar1, in_ECX[10]);\n            (**(**ppiVar1 + 0x4c))(*ppiVar1, in_ECX[0xd], in_ECX + 0xe);\n            iVar6 = (****ppiVar1)(*ppiVar1, 0xc22d3c, &arg_8h);\n            if (-1 < iVar6) {\n                (**(*arg_8h + 0x1c))(arg_8h, 1, 2, in_ECX[0xd]);\n                (**(*arg_8h + 8))(arg_8h);\n            }\n            (*_sym.imp.ole32.dll_OleSetContainedObject)(*ppiVar1, 1);\n            (**(**ppiVar1 + 0x2c))(*ppiVar1, 0xffffffff, 0, in_ECX[10], 0xffffffff, (*in_ECX)[5], in_ECX + 4);\n            iVar8 = 5;\n            do {\n                iVar6 = (**(**ppiVar1 + 0x38))(*ppiVar1);\n                iVar8 = iVar8 + -1;\n                if (iVar6 == 0) break;\n            } while (iVar8 != 0);\n            if (iVar6 < 0) {\n                fcn.00bebccd();\n                arg_14h_00 = 1;\n            }\n            else {\n                iVar6 = (****ppiVar1)(*ppiVar1, 0xc22d1c, &arg_ch);\n                if (-1 < iVar6) {\n                    iVar6 = (**(*arg_ch + 0xc))(arg_ch, var_4h + 2);\n                    (**(*arg_ch + 8))(arg_ch);\n                    if (-1 < iVar6) {\n                        *arg_14h = var_4h[2];\n                        return var_4h;\n                    }\n                }\n                fcn.00bebccd();\n                arg_14h_00 = 1;\n            }\n            goto code_r0x00beba24;\n        }\n    }\n    arg_14h_00 = 0;\n    var_4h = in_ECX;\ncode_r0x00beba24:\n    fcn.00c096db(iVar6, 0, 0, arg_14h_00);\n    return var_4h;\n}\n",
        "token_count": 1563
    },
    "00bebb56": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bebb56(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    piVar1 = arg_8h;\n    if (*arg_8h[1] != 0) {\n        *(*arg_8h[1] + 0x18) = 0;\n    }\n    if (arg_ch == 0) {\n        iVar2 = (****(arg_8h[1] + 0xc))(*(arg_8h[1] + 0xc), 0xc22d4c, &arg_8h);\n        if (iVar2 < 0) {\n            return 0x80004005;\n        }\n        (**(*arg_8h + 0xc))(arg_8h, 0, 0, 0, piVar1 + 2);\n        (**(*arg_8h + 8))(arg_8h);\n    }\n    else {\n        arg_8h[2] = arg_ch;\n    }\n    ppiVar3 = piVar1 + 2;\n    (**(**ppiVar3 + 4))(*ppiVar3);\n    iVar2 = (**(**ppiVar3 + 0xc))(*ppiVar3, *(piVar1[1] + 0x30));\n    if (iVar2 < 0) {\n        return 0x80004005;\n    }\n    (**(**ppiVar3 + 0x28))(*ppiVar3, 1);\n    (**(**ppiVar3 + 0x18))(*ppiVar3, piVar1[1] + 0x10);\n    (**(**ppiVar3 + 0x24))(*ppiVar3, 1);\n    if (*piVar1[1] != 0) {\n        *(*piVar1[1] + 0x18) = 1;\n    }\n    return 0;\n}\n",
        "token_count": 434
    },
    "00bebf15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bebf15(int32_t arg_8h, uint *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h, uint *arg_1ch)\n\n{\n    *arg_10h = 0;\n    *arg_ch = *(**(arg_8h + 4) + 0xc);\n    (*_sym.imp.USER32.dll_CopyRect)(arg_14h, *(arg_8h + 4) + 0x10);\n    (*_sym.imp.USER32.dll_CopyRect)(arg_18h, *(arg_8h + 4) + 0x10);\n    arg_1ch[1] = 0;\n    *arg_1ch = 0x14;\n    arg_1ch[2] = *(**(arg_8h + 4) + 0x14);\n    arg_1ch[3] = 0;\n    arg_1ch[4] = 0;\n    return 0;\n}\n",
        "token_count": 222
    },
    "00bec072": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bec072(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_ECX;\n    \n    iVar1 = fcn.00bb16c4(arg_8h, 0xc22ccc, 0x10);\n    if (iVar1 != 0) {\n        iVar1 = fcn.00bb16c4(arg_8h, 0xc22cec, 0x10);\n        if ((iVar1 == 0) || (iVar1 = fcn.00bb16c4(arg_8h, 0xc22d2c, 0x10),  iVar1 == 0)) {\n            iVar1 = in_ECX[0xc];\n            goto code_r0x00bec096;\n        }\n        iVar1 = fcn.00bb16c4(arg_8h, 0xc22d0c, 0x10);\n        if ((iVar1 == 0) || (iVar1 = fcn.00bb16c4(arg_8h, 0xc22cfc, 0x10),  iVar1 == 0)) {\n            iVar1 = *(*in_ECX + 0xc);\n            goto code_r0x00bec096;\n        }\n        iVar1 = fcn.00bb16c4(arg_8h, 0xc22c5c, 0x10);\n        if (iVar1 == 0) {\n            iVar1 = in_ECX[0xd];\n            goto code_r0x00bec096;\n        }\n        iVar1 = fcn.00bb16c4(arg_8h, 0xc22d5c, 0x10);\n        if (iVar1 == 0) {\n            iVar1 = in_ECX[0xb];\n            goto code_r0x00bec096;\n        }\n        iVar1 = fcn.00bb16c4(arg_8h, 0xc22bec, 0x10);\n        if (iVar1 != 0) {\n            if (*in_ECX != 0) {\n                uVar2 = fcn.00bec161(arg_8h, arg_ch);\n                return uVar2;\n            }\n            return 0x80004002;\n        }\n    }\n    iVar1 = in_ECX[10];\ncode_r0x00bec096:\n    *arg_ch = iVar1;\n    return 0;\n}\n",
        "token_count": 533
    },
    "00bec161": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bec161(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint uVar2;\n    \n    iVar1 = fcn.00bb16c4(arg_8h, 0xc22bec, 0x10);\n    if ((iVar1 == 0) || (iVar1 = fcn.00bb16c4(arg_8h, 0xc22cbc, 0x10),  iVar1 == 0)) {\n        uVar2 = *in_ECX;\n    }\n    else {\n        iVar1 = fcn.00bb16c4(arg_8h, 0xc22c0c, 0x10);\n        if (iVar1 == 0) {\n            uVar2 = in_ECX[1];\n        }\n        else {\n            iVar1 = fcn.00bb16c4(arg_8h, 0xc22c8c, 0x10);\n            if (iVar1 == 0) {\n                uVar2 = in_ECX[2];\n            }\n            else {\n                iVar1 = fcn.00bb16c4(arg_8h, 0xc22d0c, 0x10);\n                if (iVar1 != 0) {\n                    return 0x80004002;\n                }\n                uVar2 = in_ECX[3];\n            }\n        }\n    }\n    *arg_ch = uVar2;\n    return 0;\n}\n",
        "token_count": 327
    },
    "00bec1f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bec1f4(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    piVar2 = arg_8h;\n    iVar3 = *(arg_8h[1] + 4);\n    *(arg_8h[1] + 0x10) = *(iVar3 + 0x88);\n    *(arg_8h[1] + 0x18) = *(iVar3 + 0x8c) + *(iVar3 + 0x88);\n    *(arg_8h[1] + 0x14) = *(iVar3 + 0x8a);\n    *(arg_8h[1] + 0x1c) = *(iVar3 + 0x8e) + *(iVar3 + 0x8a);\n    iVar3 = (****(arg_8h[1] + 0xc))(*(arg_8h[1] + 0xc), 0xc22d1c, &arg_8h);\n    if (iVar3 < 0) {\n        uVar4 = 0x8000ffff;\n    }\n    else {\n        iVar3 = piVar2[1];\n        piVar1 = *(iVar3 + 0xc);\n        (**(*piVar1 + 0x48))(piVar1, 1, iVar3 + 0x20);\n        (**(*arg_8h + 0x1c))(arg_8h, arg_ch, piVar2[1] + 0x10);\n        (**(*arg_8h + 8))(arg_8h);\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 399
    },
    "00becacf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00becacf(int32_t arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(arg_8h + 4);\n    return;\n}\n",
        "token_count": 44
    },
    "00becae3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00becae3(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    do {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*(*(param_1 + 0x1c) + iVar1));\n        iVar1 = iVar1 + 4;\n    } while (iVar1 < 0x24);\n    return;\n}\n",
        "token_count": 92
    },
    "00becb00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00becb00(uint noname_0, uint noname_1, uint *arg_10h, uint noname_3, uint noname_4, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    int16_t *arg_8h;\n    int16_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int16_t *var_10h;\n    int32_t var_ch;\n    \n    if ((arg_10h != NULL) && (arg_1ch != NULL)) {\n        fcn.00b97f41(*arg_10h);\n        fcn.00b97faf();\n        (*_sym.imp.USER32.dll_CharUpperBuffW)(var_10h, var_ch);\n        iVar4 = 0;\n        uVar3 = 0;\n        do {\n            arg_8h = *(uVar3 + 0xc499f0);\n            iVar1 = fcn.00bb2e3c(arg_8h);\n            if (iVar1 == var_ch) {\n                arg_10h = var_ch;\n                piVar2 = var_10h;\n                if (var_ch == 0) {\ncode_r0x00becb70:\n                    *arg_1ch = iVar4;\n                    fcn.00b95a64();\n                    return 0;\n                }\n                while (*arg_8h == *piVar2) {\n                    arg_8h = arg_8h + 1;\n                    arg_10h = arg_10h + -1;\n                    piVar2 = piVar2 + 1;\n                    if (arg_10h == NULL) goto code_r0x00becb70;\n                }\n            }\n            uVar3 = uVar3 + 4;\n            iVar4 = iVar4 + 1;\n        } while (uVar3 < 0x30);\n        fcn.00b95a64();\n    }\n    return 0x80020006;\n}\n",
        "token_count": 440
    },
    "00becc0f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00becc0f(int32_t *arg_8h, uint arg_ch, int32_t **arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00bb16c4(arg_ch, 0xc22bec, 0x10);\n    if ((iVar1 != 0) && (iVar1 = fcn.00bb16c4(arg_ch, 0xc22c0c, 0x10),  iVar1 != 0)) {\n        return 0x80004002;\n    }\n    (**(*arg_8h + 4))(arg_8h);\n    *arg_10h = arg_8h;\n    return 0;\n}\n",
        "token_count": 160
    },
    "00bed04e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bed04e(int32_t arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(arg_8h + 0x24);\n    return;\n}\n",
        "token_count": 47
    },
    "00bed7d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bed7d4(int32_t *arg_8h, uint arg_ch, int32_t **arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00bb16c4(arg_ch, 0xc22bec, 0x10);\n    if (((iVar1 != 0) && (iVar1 = fcn.00bb16c4(arg_ch, 0xc22c0c, 0x10),  iVar1 != 0)) &&\n       (iVar1 = fcn.00bb16c4(arg_ch, arg_8h + 4, 0x10),  iVar1 != 0)) {\n        return 0x80004002;\n    }\n    (**(*arg_8h + 4))(arg_8h);\n    *arg_10h = arg_8h;\n    return 0;\n}\n",
        "token_count": 197
    },
    "00bed87f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bed87f(uint arg_8h, uint32_t arg_ch, uint noname_2, double *pvargDest)\n\n{\n    char cVar1;\n    ushort uVar2;\n    uint16_t uVar3;\n    int32_t *arg_8h_00;\n    float fVar4;\n    int32_t iVar5;\n    float10 fVar6;\n    ulong uVar7;\n    uint pvarSrc;\n    uint var_8h;\n    \n    if ((arg_ch & 0x4000) == 0) {\n        return;\n    }\n    iVar5 = 0;\n    var_8h = 0;\n    arg_8h_00 = fcn.00b9859a(arg_8h, &var_8h, 1);\n    if (0x17 < (arg_ch & 0xfff) - 2) {\n        return;\n    }\n    // switch table (24 cases) at 0xbed99f\n    switch(*(*((arg_ch & 0xfff) + 0xbed9c9) * 4 + 0xbed99f)) {\n    case 0xbed8cc:\n        cVar1 = fcn.00b99399();\n        uVar3 = -(cVar1 != '\\0');\n        goto code_r0x00bed8da;\n    case 0xbed8e5:\n        if (pvargDest != NULL) {\n            fcn.00b99997();\n            (*_sym.imp.OLEAUT32.dll_SysAllocStringLen)(pvargDest, *arg_8h_00[2]);\n        }\n        break;\n    case 0xbed908:\n        fcn.00be7067(arg_8h_00);\n        (*_sym.imp.OLEAUT32.dll_VariantChangeType)(pvargDest, &pvarSrc);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvarSrc);\n        break;\n    case 0xbed92a:\n        fVar4 = fcn.00b99c9c();\n        *pvargDest = fVar4;\n        break;\n    case 0xbed938:\n        uVar7 = fcn.00b99d46();\n        *pvargDest = uVar7;\n        *(pvargDest + 4) = uVar7 >> 0x20;\n        break;\n    case 0xbed94c:\n        uVar2 = fcn.00b99c9c();\n        *pvargDest = uVar2;\n        break;\n    case 0xbed95b:\n        uVar3 = fcn.00b99c9c();\n        uVar3 = uVar3 & 0xff;\ncode_r0x00bed8da:\n        *pvargDest = uVar3;\n        break;\n    case 0xbed96a:\n        fVar6 = fcn.00b99cf8();\n        *pvargDest = fVar6;\n        break;\n    case 0xbed978:\n        fVar6 = fcn.00b99cf8();\n        *pvargDest = fVar6;\n        break;\n    case 0xbed986:\n        if (arg_8h_00[3] == 8) {\n            iVar5 = *arg_8h_00;\n        }\n        *pvargDest = *(iVar5 + 8);\n    }\n    return;\n}\n",
        "token_count": 745
    },
    "00bedbdf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bedbdf(int32_t arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(arg_8h + 0x38);\n    return;\n}\n",
        "token_count": 47
    },
    "00bedfb3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bedfb3(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint *puVar3;\n    \n    piVar1 = *(arg_8h + 0x18);\n    puVar3 = arg_8h + 0x20;\n    if (piVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(puVar3);\n    }\n    else {\n        uVar2 = (**(*piVar1 + 4))(piVar1);\n        *puVar3 = uVar2;\n    }\n    return *puVar3;\n}\n",
        "token_count": 144
    },
    "00bef20e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bef20e(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00bb0ff6(8);\n    var_8h = *(arg_8h + 8);\n    var_4h = *(arg_8h + 0xc);\n    fcn.00bb1080(uVar1, &var_8h, 8);\n    return uVar1;\n}\n",
        "token_count": 116
    },
    "00bef3dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00bef3dd(int16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint pvargDest;\n    uint32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    \n    piVar1 = arg_20h;\n    if (*arg_8h == 0x24) {\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n        var_14h = 0;\n        var_10h = 0;\n        iVar3 = (**(**(arg_8h + 6) + 0x28))(*(arg_8h + 6), 0, 0, &pvargDest);\n        uVar2 = var_14h;\n        if (((-1 < iVar3) && (0 < var_14h)) &&\n           (iVar3 = (**(**(arg_8h + 6) + 0x2c))(*(arg_8h + 6), 0, 0, &pvargDest, 0),  piVar1 = arg_20h,  -1 < iVar3)) {\n            var_8h = var_14h;\n            if ((*arg_ch & 0x4000) == 0) {\n                var_8h = *(var_14h + 0xc) + (1 - uVar2) * 4;\n                var_ch = *(var_14h + 8);\n                arg_ch = NULL;\n                if (uVar2 != 0) {\n                    do {\n                        arg_20h = *(var_ch + arg_ch * 4);\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*piVar1 * 0x10 + arg_10h);\n                        iVar3 = *piVar1 * 0x10;\n                        *(iVar3 + arg_10h) = 0x13;\n                        if (arg_ch == uVar2 - 1) {\n                            puVar4 = arg_10h + 8 + iVar3;\n                            *puVar4 = 0;\n                            fcn.00bb1080(puVar4, &arg_20h, var_8h);\n                        }\n                        else {\n                            *(iVar3 + 8 + arg_10h) = arg_20h;\n                        }\n                        iVar3 = *piVar1;\n                        *(arg_18h + iVar3 * 2) = 0x13;\n                        *(arg_1ch + iVar3 * 4) = iVar3 * 0x10 + arg_10h;\n                        *(arg_14h + iVar3 * 4) = 0;\n                        *piVar1 = iVar3 + 1;\n                        arg_ch = arg_ch + 1;\n                    } while (arg_ch < uVar2);\n                }\n                *piVar1 = *piVar1 + -1;\n            }\n            else {\n                *arg_ch = 0x13;\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*arg_20h * 0x10 + arg_10h);\n                iVar3 = *piVar1;\n                *(arg_10h + iVar3 * 0x10) = *arg_ch;\n                *(arg_10h + 8 + iVar3 * 0x10) = *(var_8h + 8);\n            }\n        }\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n    }\n    else if ((*arg_ch & 0x4000) != 0) {\n        *arg_ch = 0x13;\n        *(arg_10h + *arg_20h * 0x10) = 0x13;\n        (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(arg_8h, arg_8h, 0, 0x13);\n        *(arg_10h + 8 + *piVar1 * 0x10) = *(arg_8h + 4);\n    }\n    return;\n}\n",
        "token_count": 958
    },
    "00bef8f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00bef8f2(uint *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t arg_10h_00;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_28h;\n    uint var_18h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00b977c7();\n    iVar1 = arg_8h[1];\n    var_4h = iVar1;\n    fcn.00b97b76(*(in_ECX + 4));\n    if (arg_10h < 0) {\n        iVar1 = fcn.00bef658(*arg_8h, arg_14h, arg_10h, iVar1, 0xffffffff, 0x7fffffff);\n        if (iVar1 < 0) {\n            arg_10h = -iVar1;\n            iVar1 = 0;\n        }\n        else {\n            fcn.00b979ab(in_ECX, 0, iVar1);\n        }\n        iVar2 = 0;\n        arg_10h = -arg_10h;\n    }\n    else {\n        iVar2 = 0;\n        iVar1 = 0;\n    }\n    do {\n        var_8h = iVar1;\n        iVar1 = fcn.00bef658(*arg_8h, arg_14h, 1, var_4h, iVar1, 0xffffffff);\n        iVar3 = var_8h;\n        if (iVar1 == *(in_ECX + 4)) {\n            arg_10h_00 = iVar1 - var_8h;\n            break;\n        }\n        arg_10h_00 = iVar1 - var_8h;\n        fcn.00b979ab(in_ECX, var_8h, arg_10h_00);\n        fcn.00b97c8e(&var_28h);\n        fcn.00b97c8e(arg_ch);\n        iVar1 = iVar1 + var_4h;\n        iVar2 = iVar2 + 1;\n    } while ((arg_10h == 0) || (iVar2 != arg_10h));\n    fcn.00b979ab(in_ECX, iVar3, arg_10h_00);\n    fcn.00b97c8e(&var_28h);\n    if (iVar2 != 0) {\n        fcn.00b980d7(&var_18h);\n    }\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return iVar2;\n}\n",
        "token_count": 600
    },
    "00befb6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00befb6e(uint arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *arg_8h_00;\n    uchar *in_ECX;\n    uint uVar3;\n    \n    iVar2 = fcn.00bb3a0b(arg_8h, L\"#notrayicon\", 0xb);\n    if (iVar2 == 0) {\n        *in_ECX = 1;\n        return 1;\n    }\n    iVar2 = fcn.00bb3a0b(arg_8h, L\"#requireadmin\", 0xd);\n    if (iVar2 == 0) {\n        in_ECX[1] = 1;\n        return 1;\n    }\n    iVar2 = fcn.00bb3a0b(arg_8h, L\"#OnAutoItStartRegister\", 0x16);\n    if (iVar2 != 0) {\n        return 1;\n    }\n    arg_8h_00 = fcn.00bafec6();\n    fcn.00b970bd(arg_8h_00);\n    fcn.00b9710a(arg_8h_00);\n    iVar2 = fcn.00bb2e3c(arg_8h_00);\n    iVar1 = arg_8h_00[iVar2 + -1];\n    if ((iVar1 == 0x22) || (iVar1 == 0x27)) {\n        if (*arg_8h_00 != iVar1) {\n            fcn.00bb106c(arg_8h_00);\n            return 0;\n        }\n        arg_8h_00[iVar2 + -1] = 0;\n        (**(**(in_ECX + 4) + 8))(arg_8h_00 + 1);\n    }\n    else {\n        if ((*arg_8h_00 == 0x22) || (*arg_8h_00 == 0x27)) {\n            uVar3 = 0;\n            goto code_r0x00befc3f;\n        }\n        (**(**(in_ECX + 4) + 8))(arg_8h_00);\n    }\n    uVar3 = 1;\ncode_r0x00befc3f:\n    fcn.00bb106c(arg_8h_00);\n    return uVar3;\n}\n",
        "token_count": 521
    },
    "00befc4d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00befc4d(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    iVar2 = *(*arg_ch + arg_8h);\n    *arg_ch = *arg_ch + 4;\n    iVar3 = (iVar2 + 1) * 2;\n    iVar5 = fcn.00bb0ff6(-(iVar3 >> 0x20 != 0) | iVar3);\n    iVar4 = iVar2 * 2;\n    fcn.00bb1080(iVar5, *arg_ch + arg_8h, iVar4);\n    *arg_ch = *arg_ch + iVar4;\n    iVar6 = 0;\n    *(iVar4 + iVar5) = 0;\n    if (0 < iVar2) {\n        do {\n            puVar1 = iVar5 + iVar6 * 2;\n            *puVar1 = *puVar1 ^ iVar2;\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < iVar2);\n    }\n    return iVar5;\n}\n",
        "token_count": 276
    },
    "00bf18d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf18d7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00bb4005(arg_8h, arg_ch, &arg_10h);\n    return;\n}\n",
        "token_count": 55
    },
    "00bf1951": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf1951(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    piVar1 = in_ECX + 4;\n    do {\n        if (*piVar1 == arg_8h) {\n            (*_sym.imp.KERNEL32.dll_VirtualFreeEx)(*(in_ECX + iVar2 * 8), *(in_ECX + 4 + iVar2 * 8), 0, 0x8000);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*(in_ECX + iVar2 * 8));\n            *(in_ECX + 4 + iVar2 * 8) = 0;\n            return;\n        }\n        iVar2 = iVar2 + 1;\n        piVar1 = piVar1 + 2;\n    } while (iVar2 < 0x10);\n    return;\n}\n",
        "token_count": 213
    },
    "00bf1997": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf1997(int32_t arg_8h, uint lpBuffer, uint nSize)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t *piVar2;\n    \n    piVar2 = in_ECX + 4;\n    iVar1 = 0;\n    do {\n        if (*piVar2 == arg_8h) break;\n        iVar1 = iVar1 + 1;\n        piVar2 = piVar2 + 2;\n    } while (iVar1 < 0x10);\n    if (iVar1 != 0x10) {\n        (*_sym.imp.KERNEL32.dll_ReadProcessMemory)(*(in_ECX + iVar1 * 8), arg_8h, lpBuffer, nSize, 0);\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "00bf19cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf19cc(uint lpBuffer, int32_t arg_ch, uint nSize)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t *piVar2;\n    \n    piVar2 = in_ECX + 4;\n    iVar1 = 0;\n    do {\n        if (*piVar2 == arg_ch) break;\n        iVar1 = iVar1 + 1;\n        piVar2 = piVar2 + 2;\n    } while (iVar1 < 0x10);\n    if (iVar1 != 0x10) {\n        (*_sym.imp.KERNEL32.dll_WriteProcessMemory)(*(in_ECX + iVar1 * 8), arg_ch, lpBuffer, nSize, 0);\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "00bf1e7b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf1e7b(uint arg_8h, int32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    uVar3 = fcn.00ba5e58(arg_8h);\n    iVar4 = *(in_ECX + 0x14);\n    *arg_10h = uVar3 & 0x3ff;\n    iVar4 = *(iVar4 + (uVar3 & 0x3ff) * 4);\n    *arg_ch = 0;\n    while( true ) {\n        if (iVar4 == 0) {\n            return 0;\n        }\n        cVar2 = fcn.00ba5ee9();\n        if (cVar2 != '\\0') break;\n        iVar4 = *(iVar4 + 4);\n    }\n    uVar1 = *(iVar4 + 8);\n    *arg_ch = iVar4;\n    return uVar1;\n}\n",
        "token_count": 241
    },
    "00bf24cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf24cb(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    iVar1 = *arg_8h;\n    piVar2 = arg_8h[1];\n    if (iVar1 != 0) {\n        *(iVar1 + 4) = piVar2;\n    }\n    if (piVar2 != NULL) {\n        *piVar2 = *arg_8h;\n    }\n    if (iVar1 == 0) {\n        *(*(in_ECX + 0x14) + *arg_ch * 4) = piVar2;\n    }\n    if (*(arg_8h[2] + 0x20) != 0) {\n        fcn.00be6621(*(arg_8h[2] + 0x20));\n    }\n    fcn.00bb106c(arg_8h);\n    iVar5 = 0;\n    iVar1 = *(*(in_ECX + 0x10) + 8);\n    if (0 < iVar1) {\n        puVar4 = *(*(in_ECX + 0x10) + 4);\n        do {\n            if (**puVar4 == arg_8h) break;\n            iVar5 = iVar5 + 1;\n            puVar4 = puVar4 + 1;\n        } while (iVar5 < iVar1);\n    }\n    for (; iVar5 < iVar1 + -1; iVar5 = iVar5 + 1) {\n        iVar3 = *(*(in_ECX + 0x10) + 4);\n        **(iVar3 + iVar5 * 4) = **(iVar3 + 4 + iVar5 * 4);\n    }\n    iVar1 = *(in_ECX + 0x10);\n    *(iVar1 + 8) = *(iVar1 + 8) + -1;\n    fcn.00bb106c(*(*(iVar1 + 4) + *(iVar1 + 8) * 4));\n    *(*(iVar1 + 4) + *(iVar1 + 8) * 4) = 0;\n    return;\n}\n",
        "token_count": 507
    },
    "00bf26a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf26a3(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t *var_4h;\n    \n    piVar1 = fcn.00bb0ff6(0x14);\n    if (piVar1 == NULL) {\n        piVar1 = NULL;\n    }\n    else {\n        fcn.00b977c7();\n    }\n    var_4h = piVar1;\n    fcn.00b981a7(*(in_ECX + 0x1b4 + arg_8h * 4) + 8);\n    *piVar1 = arg_8h;\n    fcn.00b9469d(&var_4h);\n    return;\n}\n",
        "token_count": 174
    },
    "00bf32f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00bf32f5(int32_t arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    \n    bVar1 = arg_8h + 0xeU < 0xc;\n    if (bVar1) {\n        fcn.00b981a7(arg_ch);\n    }\n    return bVar1;\n}\n",
        "token_count": 80
    },
    "00bf3408": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf3408(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = param_1[1];\n    if (iVar1 != 0) {\n        fcn.00bf3555();\n        fcn.00bb1080(*param_1, *param_1 + iVar1, (param_1[1] - iVar1) + 1);\n        param_1[1] = param_1[1] - iVar1;\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00bf3696": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf3696(uint lpBuffer, uint nNumberOfBytesToWrite)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint *lpNumberOfBytesWritten;\n    \n    lpNumberOfBytesWritten = in_ECX;\n    fcn.00bf3595();\n    (*_sym.imp.KERNEL32.dll_WriteFile)(*in_ECX, lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n    puVar1 = in_ECX + 4;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + lpNumberOfBytesWritten;\n    in_ECX[5] = in_ECX[5] + CARRY4(uVar2, lpNumberOfBytesWritten);\n    return;\n}\n",
        "token_count": 178
    },
    "00bf377e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00bf377e(uint *arg_8h)\n\n{\n    uchar uVar1;\n    uint32_t arg_8h_00;\n    uint arg_8h_01;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    int32_t var_ch;\n    uint var_4h;\n    \n    puVar5 = *arg_8h;\n    arg_8h_00 = arg_8h[1] * 2;\n    arg_8h_01 = fcn.00bb0ff6(arg_8h_00);\n    fcn.00b9538e(arg_8h_01);\n    uVar4 = 0;\n    if (arg_8h_00 != 0) {\n        iVar3 = var_ch - puVar5;\n        do {\n            puVar5[iVar3] = puVar5[1];\n            uVar1 = *puVar5;\n            puVar5 = puVar5 + 2;\n            *(var_ch + 1 + uVar4) = uVar1;\n            uVar4 = uVar4 + 2;\n        } while (uVar4 < arg_8h_00);\n    }\n    uVar4 = fcn.00bf3696(var_ch, arg_8h_00);\n    uVar2 = fcn.00b95371();\n    return uVar2 & 0xffffff00 | uVar4 == arg_8h_00;\n}\n",
        "token_count": 337
    },
    "00bf4189": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf4189(uint arg_8h, uint noname_1, uint32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00bb38d8(&var_10h, 0xc4a18c, arg_10h);\n    fcn.00bb38d8(&var_1ch, 0xc4a18c, arg_14h);\n    iVar1 = fcn.00bb313d(&var_1ch, &var_10h);\n    if (((iVar1 == 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceW)(arg_8h, arg_10h, 0xe),  iVar1 != 0)) &&\n       (iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(arg_8h, iVar1),  iVar1 != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n        arg_10h = 0;\n        if (*(iVar1 + 4) != 0) {\n            puVar5 = iVar1 + 6;\n            do {\n                iVar3 = (*_sym.imp.KERNEL32.dll_FindResourceW)(arg_8h, *(puVar5 + 0xc), 3);\n                if ((iVar3 == 0) || (iVar4 = (*_sym.imp.KERNEL32.dll_LoadResource)(arg_8h, iVar3),  iVar4 == 0)) {\n                    return 1;\n                }\n                var_4h = (*_sym.imp.KERNEL32.dll_SizeofResource)(arg_8h, iVar3);\n                uVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar4);\n                if (((*puVar5 == *0xc5750c) && (puVar5[1] == *0xc57508)) && (*(puVar5 + 6) == *0xc57504)) {\n                    *0xc57510 = (*_sym.imp.USER32.dll_CreateIconFromResourceEx)\n                                          (uVar2, var_4h, 1, 0x30000, *0xc5750c, *0xc57508, 0);\n                    break;\n                }\n                puVar5 = puVar5 + 0xe;\n                arg_10h = arg_10h + 1;\n            } while (arg_10h < *(iVar1 + 4));\n        }\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 621
    },
    "00bf4534": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf4534(uint noname_0, uint arg_ch)\n\n{\n    uint uVar1;\n    uint lpText;\n    uint lpCaption;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    (*_sym.imp.USER32.dll_LoadStringW)(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0, 0x1389, &lpText, 0x100);\n    (*_sym.imp.USER32.dll_LoadStringW)(uVar1);\n    if (arg_ch == '\\0') {\n        (*_sym.imp.USER32.dll_MessageBoxW)(0, &lpText, &lpCaption, 0x11010);\n    }\n    else {\n        fcn.00bb3eca(L\"%s (%d) : ==> %s: \\n%s \\n%s\\n\", &lpCaption);\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "00bf4c69": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00bf4c69(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_20h;\n    uint var_10h;\n    \n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b946f9(0, 0, 0);\n    fcn.00b946f9(0, 0, 0);\n    iVar1 = fcn.00b97a68(&var_10h, 0);\n    fcn.00b95a64();\n    uVar2 = fcn.00b95a64();\n    return uVar2 & 0xffffff00 | iVar1 != 0;\n}\n",
        "token_count": 164
    },
    "00bf4dc9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf4dc9(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint32_t lprc;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lprc = -(in_ECX != 0x80000000) & in_ECX;\n    var_ch = -(in_EDX != 0x80000000) & in_EDX;\n    var_4h = arg_ch + var_ch;\n    var_8h = arg_8h + lprc;\n    (*_sym.imp.USER32.dll_MonitorFromRect)(&lprc, 0);\n    return;\n}\n",
        "token_count": 172
    },
    "00bf5310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf5310(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    iVar1 = *arg_10h;\n    if ((iVar1 == in_ECX) && (*arg_14h == in_EDX)) {\n        return 0;\n    }\n    if (iVar1 < in_ECX) {\n        iVar2 = (in_ECX - iVar1) / arg_8h;\n        if ((iVar2 == 0) || (iVar2 < arg_ch)) {\n            iVar2 = arg_ch;\n        }\n        if (iVar1 + iVar2 <= in_ECX) {\n            *arg_10h = iVar1 + iVar2;\n            goto code_r0x00bf5379;\n        }\n    }\n    else {\n        if (iVar1 <= in_ECX) goto code_r0x00bf5379;\n        iVar2 = (iVar1 - in_ECX) / arg_8h;\n        if ((iVar2 == 0) || (iVar2 < arg_ch)) {\n            iVar2 = arg_ch;\n        }\n        if (in_ECX <= iVar1 - iVar2) {\n            *arg_10h = iVar1 - iVar2;\n            goto code_r0x00bf5379;\n        }\n    }\n    *arg_10h = in_ECX;\ncode_r0x00bf5379:\n    iVar1 = *arg_14h;\n    if (iVar1 < in_EDX) {\n        arg_8h = (in_EDX - iVar1) / arg_8h;\n        if ((arg_8h == 0) || (arg_8h < arg_ch)) {\n            arg_8h = arg_ch;\n        }\n        if (arg_8h + iVar1 <= in_EDX) {\n            *arg_14h = arg_8h + iVar1;\n            return 1;\n        }\n    }\n    else {\n        if (iVar1 <= in_EDX) {\n            return 1;\n        }\n        arg_8h = (iVar1 - in_EDX) / arg_8h;\n        if ((arg_8h == 0) || (arg_8h < arg_ch)) {\n            arg_8h = arg_ch;\n        }\n        if (in_EDX <= iVar1 - arg_8h) {\n            *arg_14h = iVar1 - arg_8h;\n            return 1;\n        }\n    }\n    *arg_14h = in_EDX;\n    return 1;\n}\n",
        "token_count": 587
    },
    "00bf5a1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.00bf5a1f(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar1 = fcn.00bb2e3c(param_1);\n    uVar2 = uVar1 - (uVar1 >> 0x1f);\n    uVar3 = uVar2 & 0xfffffffe;\n    if (uVar1 == uVar3) {\n        iVar4 = 0;\n        if (0 < uVar1) {\n            do {\n                uVar3 = fcn.00bafbfb(8);\n                if (uVar3 == '\\0') {\n                    return uVar3 & 0xffffff00;\n                }\n                iVar5 = iVar4 + 2;\n                uVar3 = iVar4 / 2;\n                *(uVar3 + param_2) = var_14h;\n                iVar4 = iVar5;\n            } while (iVar5 < uVar1);\n        }\n        uVar2 = CONCAT31(uVar3 >> 8, 1);\n    }\n    else {\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    return uVar2;\n}\n",
        "token_count": 321
    },
    "00bf5c77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf5c77(uint32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *in_ECX;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    piVar1 = arg_8h[4];\n    var_4h = 0;\n    in_ECX[4] = piVar1;\n    if (piVar1 != NULL) {\n        *piVar1 = *piVar1 + 1;\n    }\n    in_ECX[2] = arg_8h[2];\n    in_ECX[3] = arg_8h[3];\n    uVar2 = *arg_8h;\n    *in_ECX = uVar2;\n    if (uVar2 != 0) {\n        uVar4 = -(uVar2 * 0x20 >> 0x20 != 0) | uVar2 * 0x20;\n        puVar3 = fcn.00bb0ff6(-(0xfffffffb < uVar4) | uVar4 + 4);\n        if (puVar3 == NULL) {\n            puVar3 = NULL;\n        }\n        else {\n            *puVar3 = uVar2;\n            puVar3 = puVar3 + 1;\n            while (uVar2 = uVar2 - 1,  -1 < uVar2) {\n                fcn.00bf5d58();\n            }\n        }\n        in_ECX[1] = puVar3;\n        if (0 < *in_ECX) {\n            var_8h = 0;\n            do {\n                puVar5 = in_ECX[1] + var_8h;\n                puVar6 = arg_8h[1] + var_8h;\n                *puVar5 = *puVar6;\n                puVar5[1] = puVar6[1];\n                puVar5[2] = puVar6[2];\n                fcn.00b981a7(puVar6 + 3);\n                puVar5[7] = puVar6[7];\n                var_8h = var_8h + 0x20;\n                var_4h = var_4h + 1;\n            } while (var_4h < *in_ECX);\n        }\n    }\n    return;\n}\n",
        "token_count": 582
    },
    "00bf6bf7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf6bf7(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    iVar1 = arg_8h[8];\n    in_ECX[8] = iVar1;\n    if (iVar1 != 0) {\n        *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    }\n    iVar1 = arg_8h[9];\n    in_ECX[9] = iVar1;\n    if (iVar1 != 0) {\n        *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    }\n    fcn.00bf6f08(0);\n    fcn.00bf6f08(0);\n    fcn.00bf6f08(0);\n    fcn.00bf6f08(0);\n    fcn.00bf6f08(0);\n    fcn.00bf6f08(0);\n    return;\n}\n",
        "token_count": 246
    },
    "00bf6e7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bf6e7c(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x14);\n    uVar1 = *(in_ECX + 0xc);\n    fcn.00bf794e(*(in_ECX + 0xc));\n    uVar2 = fcn.00bf899f(*(in_ECX + 8), *(in_ECX + 0xc));\n    fcn.00bb1080(uVar2);\n    fcn.00bb3020(*(in_ECX + 8), 0, *(in_ECX + 0xc));\n    *(in_ECX + 0xc) = 0;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x14);\n    return uVar1;\n}\n",
        "token_count": 205
    },
    "00bf7770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf7770(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t **in_ECX;\n    uint32_t uVar3;\n    \n    fcn.00b99458();\n    piVar1 = *in_ECX;\n    fcn.00b992c0();\n    uVar3 = 0;\n    *(*piVar1 + 0x210) = 0;\n    uVar2 = *(arg_8h + 8);\n    if (uVar2 != 0) {\n        fcn.00b991b0(*in_ECX, 1);\n        if (uVar2 != 0) {\n            do {\n                fcn.00b99040(*in_ECX, *(*(arg_8h + 4) + uVar3 * 4), 1);\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "00bf788a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00bf788a(uint16_t *param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint arg_10h;\n    \n    uVar1 = *param_1;\n    if (uVar1 != *param_2) {\n        return (uVar1 >> 8) << 8;\n    }\n    if ((uVar1 == 0) || (uVar1 == 1)) {\n        uVar3 = uVar1 & 0xff00 | 1;\n    }\n    else {\n        if ((uVar1 & 0x6000) == 0) {\n            if (uVar1 == 0xe) {\n                arg_10h = 0x10;\n            }\n            else {\n                arg_10h = 4;\n    // switch table (35 cases) at 0xbf7902\n                switch(uVar1) {\n                case 2:\n                case 10:\n                case 0xb:\n                case 0x12:\n                    arg_10h = 2;\n                    break;\n                case 5:\n                case 6:\n                case 7:\n                case 0x14:\n                case 0x15:\n                case 0x24:\n                    arg_10h = 8;\n                    break;\n                case 0x10:\n                case 0x11:\n                    arg_10h = 1;\n                }\n                param_2 = param_2 + 4;\n                param_1 = param_1 + 4;\n            }\n            iVar2 = fcn.00bb16c4(param_1, param_2, arg_10h);\n        }\n        else {\n            iVar2 = *(param_1 + 4) - *(param_2 + 4);\n        }\n        uVar3 = iVar2 == 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 426
    },
    "00bf794e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00bf794e(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **in_ECX;\n    \n    fcn.00b99a20();\n    piVar1 = fcn.00bb0ff6(8);\n    *in_ECX = piVar1;\n    *piVar1 = arg_8h;\n    if (arg_8h == 0) {\n        iVar2 = fcn.00bb0ff6(1);\n        (*in_ECX)[1] = iVar2;\n        *(*in_ECX)[1] = 0;\n    }\n    else {\n        iVar2 = fcn.00bb0ff6(**in_ECX);\n        (*in_ECX)[1] = iVar2;\n        fcn.00bb3020((*in_ECX)[1], 0, **in_ECX);\n    }\n    in_ECX[3] = 0xb;\n    return (*in_ECX)[1];\n}\n",
        "token_count": 227
    },
    "00bf7a3d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00bf7a3d(uint64_t *param_1)\n\n{\n    char cVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t extraout_EDX;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    iVar5 = *(param_1 + 0xc);\n    if (iVar5 == 0xb) {\n        return 1;\n    }\n    if (iVar5 == 1) {\ncode_r0x00bf7b4f:\n        uVar3 = *param_1;\ncode_r0x00bf7b51:\n        iVar5 = 4;\n        _var_10h = _var_10h & 0xffffffff00000000 | uVar3;\n    }\n    else if (iVar5 == 2) {\n        _var_10h = *param_1;\n        iVar5 = 8;\n    }\n    else if (iVar5 == 3) {\n        _var_10h = *param_1;\n        iVar5 = 8;\n    }\n    else {\n        if (iVar5 == 4) {\n            var_4h = *(param_1 + 1);\n            cVar1 = fcn.00b995df();\n            iVar5 = extraout_EDX;\n            if (cVar1 != '\\0') {\n                iVar5 = *(extraout_EDX + 4) + -2 >> 1;\n                puVar2 = fcn.00bb0ff6(iVar5);\n                cVar1 = fcn.00bf5a1f();\n                if (cVar1 != '\\0') goto code_r0x00bf7b6d;\n                fcn.00bb106c(puVar2);\n                iVar5 = var_4h;\n            }\n            iVar5 = *(iVar5 + 4);\n            if (iVar5 == 0) {\n                puVar2 = fcn.00bb0ff6(1);\n                *puVar2 = 0;\n            }\n            else {\n                puVar2 = fcn.00bb0ff6(iVar5);\n                fcn.00bf770d(iVar5);\n                fcn.00b95b75(var_4h, &var_20h);\n                fcn.00bb1080(puVar2, var_20h, iVar5);\n                fcn.00b95a64();\n            }\n            goto code_r0x00bf7b6d;\n        }\n        if (iVar5 == 7) goto code_r0x00bf7b4f;\n        if (iVar5 != 9) {\n            if (iVar5 != 10) {\n                fcn.00b99a20();\n                iVar5 = 0;\n                puVar2 = fcn.00bb0ff6(1);\n                *puVar2 = 0;\n                goto code_r0x00bf7b6d;\n            }\n            uVar3 = *(*param_1 + 4);\n            goto code_r0x00bf7b51;\n        }\n        iVar5 = 1;\n        _var_10h = _var_10h & 0xffffffffffffff00 | *param_1;\n    }\n    puVar2 = fcn.00bb0ff6(iVar5);\n    fcn.00bb1080(puVar2, &var_10h, iVar5);\ncode_r0x00bf7b6d:\n    piVar4 = fcn.00bb0ff6(8);\n    *param_1 = piVar4;\n    *piVar4 = iVar5;\n    *(*param_1 + 4) = puVar2;\n    fcn.00b9997f();\n    *(param_1 + 0xc) = 0xb;\n    return 1;\n}\n",
        "token_count": 860
    },
    "00bf7c1a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00bf7c1a(uint16_t *pdblOut)\n\n{\n    int32_t *piVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    int32_t **in_ECX;\n    char *pcVar8;\n    int32_t arg_8h;\n    uint var_34h;\n    int32_t var_2ch;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t **var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    char *var_ch;\n    int32_t var_8h;\n    \n    if ((*pdblOut & 0x2000) == 0) {\n        return 0;\n    }\n    if ((*pdblOut & 0x4000) == 0) {\n        pcVar8 = *(pdblOut + 4);\n    }\n    else {\n        pcVar8 = **(pdblOut + 4);\n    }\n    if (pcVar8 == NULL) {\n        return 0;\n    }\n    var_18h = in_ECX;\n    var_ch = pcVar8;\n    fcn.00b99458();\n    piVar1 = *in_ECX;\n    fcn.00b992c0();\n    *(*piVar1 + 0x210) = 0;\n    uVar3 = *pcVar8;\n    pdblOut = uVar3;\n    if (0 < uVar3) {\n        puVar6 = pcVar8 + 0x10;\n        do {\n            fcn.00b9928c(*puVar6);\n            puVar6 = puVar6 + 2;\n            uVar3 = uVar3 - 1;\n            pcVar8 = var_ch;\n        } while (uVar3 != 0);\n    }\n    fcn.00b991b0(*in_ECX, 0);\n    piVar1 = *in_ECX;\n    var_10h = 2;\n    fcn.00be64ff(2);\n    var_14h = *(*piVar1 + 4);\n    arg_8h = *(*piVar1 + 8);\n    uVar2 = *(pcVar8 + 2) & 0xf00;\n    if (uVar2 == 0x100) {\n        iVar7 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(pcVar8, &var_24h);\n        if (iVar7 < 0) {\n            return 1;\n        }\n        var_18h = NULL;\n        if (0 < arg_8h) {\n            iVar7 = 0;\n            do {\n                puVar6 = fcn.00bb0ff6(0x10);\n                if (puVar6 == NULL) {\n                    puVar6 = NULL;\n                }\n                else {\n                    *puVar6 = 0;\n                    puVar6[2] = 0;\n                    puVar6[3] = 1;\n                }\n                *(var_14h + iVar7 * 4) = puVar6;\n                var_34h._0_2_ = 8;\n                var_2ch = *(var_24h + iVar7 * 4);\n                fcn.00bf7804(&var_34h);\n                iVar7 = iVar7 + 1;\n                pcVar8 = var_ch;\n            } while (iVar7 < arg_8h);\n        }\n        goto code_r0x00bf7f62;\n    }\n    if (uVar2 == 0x200) goto code_r0x00bf7ef5;\n    if (uVar2 == 0x400) {\n        iVar7 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(pcVar8, &var_20h);\n        if (iVar7 < 0) {\n            return 1;\n        }\n        var_18h = NULL;\n        if (0 < arg_8h) {\n            iVar7 = 0;\n            do {\n                puVar6 = fcn.00bb0ff6(0x10);\n                if (puVar6 == NULL) {\n                    puVar6 = NULL;\n                }\n                else {\n                    *puVar6 = 0;\n                    puVar6[2] = 0;\n                    puVar6[3] = 1;\n                }\n                *(var_14h + iVar7 * 4) = puVar6;\n                var_34h._0_2_ = 9;\n                var_2ch = var_20h + iVar7 * 4;\n                fcn.00bf7804(&var_34h);\n                iVar7 = iVar7 + 1;\n                pcVar8 = var_ch;\n            } while (iVar7 < arg_8h);\n        }\n        goto code_r0x00bf7f62;\n    }\n    if (uVar2 == 0x800) {\n        iVar7 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(pcVar8, &var_1ch);\n        if (iVar7 < 0) {\n            return 1;\n        }\n        var_10h = 0;\n        if (0 < arg_8h) {\n            var_18h = NULL;\n            iVar7 = 0;\n            do {\n                puVar6 = fcn.00bb0ff6(0x10);\n                if (puVar6 == NULL) {\n                    puVar6 = NULL;\n                }\n                else {\n                    *puVar6 = 0;\n                    puVar6[2] = 0;\n                    puVar6[3] = 1;\n                }\n                *(var_14h + iVar7 * 4) = puVar6;\n                var_34h._0_2_ = 0x400c;\n                var_2ch = var_1ch + var_18h;\n                fcn.00bf7804(&var_34h);\n                var_18h = var_18h + 4;\n                iVar7 = iVar7 + 1;\n                pcVar8 = var_ch;\n            } while (iVar7 < arg_8h);\n        }\n        goto code_r0x00bf7f62;\n    }\n    if (-1 < *(pcVar8 + 2)) goto code_r0x00bf7ef5;\n    (*_sym.imp.OLEAUT32.dll_VarR8FromUI1)(pcVar8, &pdblOut);\n    if ((pdblOut & 0xffff) - 2 < 0x16) {\n    // switch table (22 cases) at 0xbf7f76\n        switch(*(*((pdblOut & 0xffff) + 0xbf7f8c) * 4 + 0xbf7f76)) {\n        case 0xbf7d1c:\n            iVar7 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(pcVar8, &var_8h);\n            if (-1 < iVar7) {\n                iVar7 = arg_8h;\n                uVar4 = fcn.00bf794e(arg_8h);\n                fcn.00bb1080(uVar4, arg_8h, var_8h, iVar7);\n                (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(pcVar8);\n                return 1;\n            }\n            goto code_r0x00bf7ef5;\n        case 0xbf7d53:\n            var_10h = 1;\n            break;\n        case 0xbf7d58:\n            var_10h = 8;\n            break;\n        case 0xbf7d61:\n            goto code_r0x00bf7d61;\n        case 0xbf7d6f:\ncode_r0x00bf7d6f:\n            var_10h = 4;\n        }\n        iVar5 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(pcVar8, &var_8h);\n        iVar7 = var_10h;\n        if (iVar5 < 0) {\n            return 1;\n        }\n        var_18h = NULL;\n        if (0 < arg_8h) {\n            do {\n                puVar6 = fcn.00bb0ff6(0x10);\n                if (puVar6 == NULL) {\n                    puVar6 = NULL;\n                }\n                else {\n                    *puVar6 = 0;\n                    puVar6[2] = 0;\n                    puVar6[3] = 1;\n                }\n                *(var_14h + var_18h * 4) = puVar6;\n                if ((pdblOut & 0x4000) == 0) {\n                    var_34h._0_2_ = pdblOut | 0x4000;\n                    var_2ch = var_8h;\n                }\n                else {\n                    var_34h._0_2_ = pdblOut;\n                    fcn.00bb1080(&var_2ch, var_8h, iVar7);\n                }\n                fcn.00bf7804(&var_34h);\n                var_8h = var_8h + iVar7;\n                var_18h = var_18h + 1;\n                pcVar8 = var_ch;\n            } while (var_18h < arg_8h);\n        }\ncode_r0x00bf7f62:\n        (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(pcVar8);\n        return 1;\n    }\ncode_r0x00bf7d61:\n    if ((pdblOut & 0x4000) == 0) {\ncode_r0x00bf7ef5:\n        fcn.00b99a20();\n        return 0;\n    }\n    goto code_r0x00bf7d6f;\n}\n",
        "token_count": 2205
    },
    "00bf8617": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ndouble * __cdecl fcn.00bf8617(double *arg_8h, uint arg_ch)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    float10 fVar5;\n    float10 fVar6;\n    ulong uVar7;\n    double dStack12;\n    \n    *arg_8h = 0;\n    *(arg_8h + 1) = 0;\n    *(arg_8h + 0xc) = 1;\n    uVar2 = fcn.00bf88e5();\n    uVar3 = fcn.00bf88e5();\n    dVar1 = *0xc4f000;\n    if ((uVar2 & 0x40060) == 0) {\n        if (((uVar3 & 0x40060) == 0) || ((uVar2 & 0x701f8) == 0)) {\n            if (((uVar2 & 0x204) == 0) || ((uVar3 & 0x701f8) == 0)) {\n                if (((uVar3 & 0x204) == 0) || ((uVar2 & 0x701f8) == 0)) {\n                    if (((uVar3 & 0x10038) == 0) || ((uVar2 & 0xffff0000) == 0)) {\n                        fVar5 = fcn.00b99cf8();\n                        fVar5 = fcn.00b99cf8(fVar5);\n                        fVar5 = fcn.00bb51b0(fVar5);\n                        fcn.00b99a20();\n                        *(arg_8h + 0xc) = 3;\ncode_r0x00bf886a:\n                        dStack12 = fVar5;\n                        *arg_8h = dStack12;\n                    }\n                    else {\n                        fcn.00b99cf8();\n                        fVar5 = fcn.00b99cf8();\n                        fVar5 = fcn.00bb50f0(SUB84(fVar5, 0), fVar5 >> 0x20);\n                        fVar5 = fcn.00bb51b0(fVar5);\n                        fcn.00b99a20();\n                        *(arg_8h + 0xc) = 3;\n                        *arg_8h = fVar5;\n                        if ((uVar2 & 0x100000) != 0) {\n                            fVar5 = fcn.00b99cf8();\n                            fVar5 = -fVar5;\n                            fcn.00b99a20();\n                            *(arg_8h + 0xc) = 3;\n                            goto code_r0x00bf886a;\n                        }\n                    }\n                    uVar4 = fcn.00bf88e5();\n                    if (((((uVar4 & 0xffff0000) != 0) && ((uVar3 & 0xffff) == 0)) && (uVar2 == 0)) &&\n                       ((fVar5 = fcn.00b99cf8(),  fVar5 < *0xc4bad0 &&\n                        (fVar5 = fcn.00b99cf8(),  ((fVar5 < *0xc4bae0) << 8 | (fVar5 == *0xc4bae0) << 0xe) == 0)))) {\n                        uVar7 = fcn.00b99d46();\n                        fcn.00b99a20();\n                        *(arg_8h + 0xc) = 2;\n                        *arg_8h = uVar7;\n                        *(arg_8h + 4) = uVar7 >> 0x20;\n                    }\n                    goto code_r0x00bf88d2;\n                }\n                if (((uVar3 & 0x200) == 0) && ((uVar2 & 0x100000) != 0)) {\n                    if ((uVar2 & 0x10000) == 0) {\n                        dVar1 = -*0xc4f000;\n                        goto code_r0x00bf874c;\n                    }\n                    fcn.00b99a20();\n                    *(arg_8h + 0xc) = 3;\n                    dVar1 = *0xc34bb0;\n                    goto code_r0x00bf875e;\n                }\n                uVar2 = uVar2 & 0x10038;\n            }\n            else {\n                fVar5 = fcn.00b99cf8();\n                fVar6 = fcn.00bb50f0(SUB84(fVar5, 0), fVar5 >> 0x20);\n                fVar5 = 1;\n                if (((fVar5 < fVar6) << 8 | (fVar5 == fVar6) << 0xe) != 0) {\n                    if (fVar5 < fVar6) {\n                        uVar2 = uVar2 & 0x200;\n                        goto code_r0x00bf86fb;\n                    }\n                    dVar1 = *0xc4f000 * *0xc34ba0;\n                    goto code_r0x00bf874c;\n                }\n                uVar2 = uVar2 & 0x200;\n            }\n            dVar1 = *0xc4f000;\n            if (uVar2 == 0) {\ncode_r0x00bf874c:\n                fcn.00b99a20();\n                *(arg_8h + 0xc) = 3;\n                goto code_r0x00bf875e;\n            }\n        }\n        else {\n            if ((uVar2 & 0x100000) != 0) {\n                if ((uVar2 & 0x10000) == 0) {\n                    fcn.00b99a20();\n                    *(arg_8h + 0xc) = 3;\n                    *arg_8h = 0.0;\n                    if ((uVar3 & 0x20) == 0) goto code_r0x00bf88d2;\n                    fcn.00b99a20();\n                    *(arg_8h + 0xc) = 3;\n                    dVar1 = *0xc34bb0;\n                }\n                else {\n                    fcn.00b99a20();\n                    *(arg_8h + 0xc) = 3;\n                    *arg_8h = dVar1;\n                    if ((uVar3 & 0x20) == 0) goto code_r0x00bf88d2;\n                    dVar1 = -*0xc4f000;\n                    fcn.00b99a20();\n                    *(arg_8h + 0xc) = 3;\n                }\n                goto code_r0x00bf875e;\n            }\n            uVar2 = uVar2 & 0x10038;\ncode_r0x00bf86fb:\n            dVar1 = *0xc4f000;\n            if (uVar2 != 0) goto code_r0x00bf874c;\n        }\n        fcn.00b99a20();\n        *(arg_8h + 0xc) = 3;\n        dVar1 = 0.0;\n    }\n    else {\n        fcn.00b99a20();\n        *(arg_8h + 0xc) = 3;\n        dVar1 = 1.0;\n    }\ncode_r0x00bf875e:\n    *arg_8h = dVar1;\ncode_r0x00bf88d2:\n    fcn.00b99a20();\n    return arg_8h;\n}\n",
        "token_count": 1674
    },
    "00bf8ad6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf8ad6(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = 1;\n    puVar2 = 0xc57530;\n    *0xc57530 = param_1;\n    do {\n        uVar1 = (*puVar2 >> 0x1e ^ *puVar2) * 0x6c078965 + iVar3;\n        iVar3 = iVar3 + 1;\n        puVar2[1] = uVar1;\n        puVar2 = puVar2 + 1;\n    } while (puVar2 < 0xc57eec);\n    *0xc54190 = 1;\n    *0xc57518 = 1;\n    return;\n}\n",
        "token_count": 180
    },
    "00bf8fcf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf8fcf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*0xc57efc < 0x1001) {\n        *0xc57efc = *0xc57efc + 1;\n    }\n    else {\n        *0xc57efc = 0;\n        if (*(param_1 + 0x450) != NULL) {\n            iVar1 = (**(param_1 + 0x450))(*(param_1 + 0xc), *(param_1 + 8), (*(param_1 + 8) * 100) / *(param_1 + 0x10));\n            if (iVar1 == 0) {\n                *(param_1 + 0x444) = 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "00bf9129": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00bf9129(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    \n    if ((*(param_1 + 0x460) == 0) || (*(param_1 + 0x460) == 0x10000)) {\n        fcn.00bb5812(*(param_1 + 0x458), 1, 0x10000, *(param_1 + 0x1c));\n        *(param_1 + 0x460) = 0;\n    }\n    uVar1 = *(*(param_1 + 0x460) + *(param_1 + 0x458));\n    *(param_1 + 0x460) = *(param_1 + 0x460) + 1;\n    return *(param_1 + 0x458) & 0xffffff00 | uVar1;\n}\n",
        "token_count": 197
    },
    "00bf9172": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf9172(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(*(in_ECX + 0x454) + *(in_ECX + 0x45c)) = arg_8h;\n    *(in_ECX + 0x45c) = *(in_ECX + 0x45c) + 1;\n    if (*(in_ECX + 0x45c) == 0x10000) {\n        fcn.00bb4a93(*(in_ECX + 0x454), 1, 0x10000, *(in_ECX + 0x20));\n        *(in_ECX + 0x45c) = 0;\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "00bf91bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf91bf(int32_t param_1)\n\n{\n    if (*(param_1 + 0x45c) != 0) {\n        fcn.00bb4a93(*(param_1 + 0x454), 1, *(param_1 + 0x45c), *(param_1 + 0x20));\n        *(param_1 + 0x45c) = 0;\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "00bf922f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf922f(uint32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint *in_ECX;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    \n    arg_8h = arg_8h & 0xffff;\n    iVar3 = 0x11;\n    puVar1 = in_ECX + 2;\n    puVar2 = puVar1;\n    do {\n        arg_8h = arg_8h * -0x53a9b4fb + 1;\n        *puVar2 = arg_8h;\n        puVar2 = puVar2 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *in_ECX = 0;\n    in_ECX[1] = 10;\n    fcn.00bb1080(in_ECX + 0x13, puVar1, 0x44);\n    fcn.00bb1080(in_ECX + 0x24, puVar1, 0x44);\n    iVar3 = 9;\n    do {\n        fcn.00bf9295();\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return;\n}\n",
        "token_count": 283
    },
    "00bf9295": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __fastcall fcn.00bf9295(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    double dVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = fcn.00bb59de(param_1[*param_1 + 2], 9);\n    iVar4 = fcn.00bb59de(param_1[param_1[1] + 2], 0xd);\n    uVar5 = iVar3 + iVar4;\n    param_1[*param_1 + 2] = uVar5;\n    *param_1 = *param_1 + -1;\n    if (*param_1 < 0) {\n        *param_1 = 0x10;\n    }\n    piVar1 = param_1 + 1;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 < 0) {\n        param_1[1] = 0x10;\n    }\n    if ((param_1[*param_1 + 2] == param_1[0x13]) &&\n       (iVar3 = fcn.00bb16c4(param_1 + 2, param_1 + (0x24 - *param_1), 0x44),  iVar3 == 0)) {\n        return 0;\n    }\n    if (param_1[0x35] == 0) {\n        var_8h = uVar5 * 0x100000;\n        var_4h = uVar5 >> 0xc | 0x3ff00000;\n    }\n    else {\n        if (param_1[0x35] != 1) {\n            dVar2 = uVar5;\n            if (uVar5 < 0) {\n                dVar2 = dVar2 + *0xc4bac8;\n            }\n            return dVar2 * *0xc4baa0;\n        }\n        var_4h = uVar5 * 0x100000;\n        var_8h = uVar5 >> 0xc | 0x3ff00000;\n    }\n    return CONCAT44(var_4h, var_8h) - *0xc34ba8;\n}\n",
        "token_count": 518
    },
    "00bf9ba5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00bf9ba5(uint *param_1)\n\n{\n    uint var_160h;\n    uint var_80h;\n    uint var_44h;\n    uint var_3ch;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_14h;\n    \n    fcn.00b95045(*param_1, 0, 0);\n    fcn.00b9506b(&var_80h, 0x40, 1, *param_1);\n    fcn.00b95045(*param_1, var_44h, 0);\n    fcn.00b95045(*param_1, 4, 1);\n    fcn.00b9506b(&var_14h, 0x14, 1, *param_1);\n    fcn.00b9506b(&var_160h, 0x60, 1, *param_1);\n    if (var_160h == 0x20b) {\n        fcn.00b95045(*param_1, 0x10, 1);\n    }\n    fcn.00b95045(*param_1, 0x80, 1);\n    fcn.00b95045(*param_1, var_14h._2_2_ * 0x28 + -0x28, 1);\n    fcn.00b9506b(&var_3ch, 0x28, 1, *param_1);\n    fcn.00b95045(*param_1, var_2ch + var_28h, 0);\n    return;\n}\n",
        "token_count": 379
    },
    "00bf9c74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf9c74(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00bb42ee(in_ECX + 0x22c, arg_8h, 0x104);\n    *(in_ECX + 0x434) = 0;\n    return;\n}\n",
        "token_count": 75
    },
    "00bfa333": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfa333(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    if ((arg_8h < 0) || (*(in_ECX + 0x470) <= arg_8h)) {\n        fcn.00b97eec();\n        uVar2 = 0;\n    }\n    else {\n        puVar1 = fcn.00ba9090(arg_8h);\n        fcn.00b97d2c(*puVar1);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 146
    },
    "00bfad45": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00bfad45(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar auStackY65556 [65484];\n    uint uStackY72;\n    uint uStackY68;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00bc1b90();\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    iVar3 = **(arg_8h + 4);\n    fcn.00b99997();\n    piVar1 = *(*(iVar3 + 8) + 0xc);\n    *piVar1 = *piVar1 + 1;\n    fcn.00bf4168();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationW)();\n    if (iVar3 == 0) {\n        fcn.00b99bf8(0xc1f910);\n        uStackY68 = 0xbfadde;\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        fcn.00b99bf8(&stack0xfffeffec);\n    }\n    uStackY68 = 0xbfade6;\n    fcn.00b95a64();\n    uStackY72 = 0xbfaded;\n    uStackY68 = uVar2;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    return 0;\n}\n",
        "token_count": 391
    },
    "00bfadf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00bfadf8(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar auStackY65556 [65484];\n    uint uStackY72;\n    uint uStackY68;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00bc1b90();\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    iVar3 = **(arg_8h + 4);\n    fcn.00b99997();\n    piVar1 = *(*(iVar3 + 8) + 0xc);\n    *piVar1 = *piVar1 + 1;\n    fcn.00bf4168();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationW)();\n    if (iVar3 == 0) {\n        fcn.00b99bf8(0xc1f910);\n        uStackY68 = 0xbfae91;\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        fcn.00b99bf8(&stack0xfffeffec);\n    }\n    uStackY68 = 0xbfae99;\n    fcn.00b95a64();\n    uStackY72 = 0xbfaea0;\n    uStackY68 = uVar2;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    return 0;\n}\n",
        "token_count": 395
    },
    "00bfaeab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00bfaeab(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uchar auStackY65560 [65488];\n    uint uStackY72;\n    uint uStackY68;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00bc1b90();\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    iVar3 = **(arg_8h + 4);\n    fcn.00b99997();\n    piVar1 = *(*(iVar3 + 8) + 0xc);\n    *piVar1 = *piVar1 + 1;\n    fcn.00bf4168();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationW)();\n    if (iVar3 == 0) {\n        fcn.00b99bf8(0xc1f910);\n        uStackY68 = 0xbfaf61;\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        uStackY68 = 0xbfaf31;\n        fcn.00bb38d8(&stack0xfffeffe8, 0xc4a858, unaff_EBX);\n        fcn.00b99bf8(&stack0xfffeffe8);\n    }\n    uStackY68 = 0xbfaf69;\n    fcn.00b95a64();\n    uStackY72 = 0xbfaf70;\n    uStackY68 = uVar2;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    return 0;\n}\n",
        "token_count": 448
    },
    "00bfb428": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfb428(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.00b99997();\n    iVar1 = (*_sym.imp.MPR.dll_WNetCancelConnection2W)(**(iVar1 + 8), 1, 1);\n    if (iVar1 != 0) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.00baff61(iVar1, 0);\n    }\n    (*_sym.imp.KERNEL32.dll_Sleep)(10);\n    return 0;\n}\n",
        "token_count": 162
    },
    "00bfb488": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfb488(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_804h;\n    uint var_4h;\n    \n    var_4h = 0x400;\n    iVar1 = **(arg_8h + 4);\n    fcn.00b99997();\n    iVar1 = (*_sym.imp.MPR.dll_WNetGetConnectionW)(**(iVar1 + 8), &var_804h, &var_4h);\n    if (iVar1 == 0) {\n        fcn.00b99bf8(&var_804h);\n    }\n    else {\n        fcn.00b99bf8(0xc1f910);\n        fcn.00be6aa3(1, 0);\n        fcn.00baff61(iVar1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 200
    },
    "00bfbe98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfbe98(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    \n    fcn.00b99997();\n    cVar1 = fcn.00bf3d4e();\n    if (cVar1 == '\\0') {\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00baff61(arg_8h_00, 0);\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 147
    },
    "00bfc4e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfc4e6(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *puVar4;\n    char cVar5;\n    int32_t in_ECX;\n    \n    cVar5 = fcn.00bff7df(&arg_8h, **(arg_8h + 4), 0);\n    puVar4 = arg_ch;\n    if (cVar5 == '\\0') {\n        fcn.00be6aa3(1, 0);\n        puVar4 = arg_ch;\n        fcn.00b99a20();\n        puVar4[3] = 1;\n        *puVar4 = 0;\n    }\n    else {\n        iVar1 = *(**(*(in_ECX + 0x194) + arg_8h * 4) + 4);\n        uVar2 = *(iVar1 + 0x10);\n        uVar3 = *(iVar1 + 0x14);\n        fcn.00b99a20();\n        puVar4[3] = 2;\n        *puVar4 = uVar2;\n        puVar4[1] = uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 284
    },
    "00bfc602": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00bfc602(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint uVar4;\n    int32_t *piVar5;\n    uint uStack768;\n    uint uStack748;\n    uint uStack728;\n    int32_t *piStack684;\n    uint uStack680;\n    uchar *puStack676;\n    int32_t *piStack672;\n    uint uStack668;\n    int32_t iStack664;\n    int32_t *piStack660;\n    uchar *puStack656;\n    uint uStack652;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    \n    iVar3 = **(arg_8h + 4);\n    fcn.00b99997();\n    iVar3 = *(iVar3 + 8);\n    piVar7 = 0xffffffff;\n    iVar1 = *(iVar3 + 4);\n    piVar6 = *(iVar3 + 0xc);\n    *piVar6 = *piVar6 + 1;\n    iVar3 = fcn.00bef658(L\".lnk\", 2, 1, 0xffffffff, 0xffffffff, 0xffffffff);\n    if (iVar3 == iVar1) {\n        fcn.00b97e0b(L\".lnk\");\n    }\n    fcn.00b99bf8(0xc1f910);\n    piVar6 = 0x1;\n    uStack652 = 0xbfc68b;\n    fcn.00be6aa3(1, 0);\n    uStack652 = 0xbfc694;\n    cVar2 = fcn.00bf3e73();\n    if (cVar2 != '\\0') {\n        uStack652 = 0;\n        puStack656 = 0xbfc6a3;\n        (*_sym.imp.ole32.dll_CoInitialize)();\n        puStack656 = &stack0xfffffd80;\n        piStack660 = 0xc22bdc;\n        iStack664 = 1;\n        uStack668 = 0;\n        piStack672 = 0xc22d6c;\n        puStack676 = 0xbfc6bb;\n        iVar3 = (*_sym.imp.ole32.dll_CoCreateInstance)();\n        if (-1 < iVar3) {\n            puStack676 = &stack0xfffffd84;\n            uStack680 = 0xc22c3c;\n            piStack684 = piStack660;\n            iVar3 = (***piStack660)();\n            if (-1 < iVar3) {\n                iVar3 = (**(*piVar6 + 0x14))();\n                if (-1 < iVar3) {\n                    arg_8h_00 = fcn.00b9942e();\n                    fcn.00b991b0(arg_8h_00, 1);\n                    (**(*piStack684 + 0xc))();\n                    uVar4 = fcn.00b97f41(&stack0xfffffd84);\n                    uStack728 = 0xbfc73c;\n                    fcn.00b993ea(uVar4);\n                    uStack728 = 0;\n                    fcn.00b99040(arg_8h_00, &stack0xfffffd3c, 1);\n                    uStack728 = 0xbfc757;\n                    fcn.00b99a20();\n                    uStack728 = 0xbfc760;\n                    fcn.00b95a64();\n                    piVar6 = &stack0xfffffd7c;\n                    uStack728 = 0x104;\n                    (*piVar7[8])();\n                    uVar4 = fcn.00b97f41(&stack0xfffffd70);\n                    uStack748 = 0xbfc788;\n                    fcn.00b993ea(uVar4);\n                    uStack748 = 1;\n                    fcn.00b99040(arg_8h_00, &stack0xfffffd28, 1);\n                    uStack748 = 0xbfc7a3;\n                    fcn.00b99a20();\n                    uStack748 = 0xbfc7ac;\n                    fcn.00b95a64();\n                    piVar5 = &stack0xfffffd68;\n                    uStack748 = 0x104;\n                    (**(*piVar6 + 0x28))();\n                    uVar4 = fcn.00b97f41(&stack0xfffffd5c);\n                    uStack768 = 0xbfc7d4;\n                    fcn.00b993ea(uVar4);\n                    uStack768 = 2;\n                    fcn.00b99040(arg_8h_00, &stack0xfffffd14, 1);\n                    uStack768 = 0xbfc7ef;\n                    fcn.00b99a20();\n                    uStack768 = 0xbfc7f8;\n                    fcn.00b95a64();\n                    piVar6 = &stack0xfffffd54;\n                    uStack768 = 0x104;\n                    (**(*piVar5 + 0x18))();\n                    uVar4 = fcn.00b97f41(&stack0xfffffd48);\n                    fcn.00b993ea(uVar4);\n                    fcn.00b99040(arg_8h_00, &stack0xfffffd00, 1);\n                    fcn.00b99a20();\n                    fcn.00b95a64();\n                    piVar5 = &stack0xfffffd40;\n                    (**(*piVar6 + 0x40))(piVar6);\n                    uVar4 = fcn.00b97f41(&stack0xfffffd30);\n                    fcn.00b993ea(uVar4);\n                    fcn.00b99040(arg_8h_00, &stack0xfffffce8, 1);\n                    fcn.00b99a20();\n                    fcn.00b95a64();\n                    fcn.00b99040(arg_8h_00, &stack0xfffffce8, 1);\n                    fcn.00b99a20();\n                    (**(*piVar5 + 0x38))(piVar5, &stack0xfffffd20);\n                    piStack672 = piVar7;\n                    iStack664 = 0;\n                    piStack660 = 0x1;\n                    fcn.00b99040(arg_8h_00, &stack0xfffffd60, 1);\n                    fcn.00b99a20();\n                    fcn.00be6aa3(0, 0);\n                }\n                (**(*piStack660 + 8))();\n            }\n            (**(*piStack672 + 8))();\n        }\n        puStack676 = 0xbfc928;\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    uStack652 = 0xbfc931;\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 1534
    },
    "00bffeaf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bffeaf(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    char cVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(arg_8h + 4) + 8);\n    cVar7 = *(iVar1 + 0xc) == 4;\n    iVar2 = *(*(arg_8h + 4) + 0xc);\n    if (*(iVar2 + 0xc) == 4) {\n        cVar7 = cVar7 + '\\x02';\n    }\n    if (cVar7 == '\\0') {\n        uVar5 = fcn.00b99c9c();\n        uVar6 = fcn.00b99c9c();\n        uVar3 = fcn.00b99c9c();\n        uVar4 = fcn.00b99c9c();\n        uVar5 = fcn.00c17edd(uVar4, uVar3, uVar6, uVar5);\n    }\n    else if (cVar7 == '\\x01') {\n        fcn.00b99997();\n        uVar5 = **(iVar1 + 8);\n        uVar6 = fcn.00b99c9c();\n        uVar3 = fcn.00b99c9c();\n        uVar4 = fcn.00b99c9c();\n        uVar5 = fcn.00c17edd(uVar4, uVar3, uVar5, uVar6);\n    }\n    else if (cVar7 == '\\x02') {\n        fcn.00b99997();\n        uVar5 = **(iVar2 + 8);\n        uVar6 = fcn.00b99c9c();\n        uVar3 = fcn.00b99c9c();\n        uVar4 = fcn.00b99c9c();\n        uVar5 = fcn.00c17edd(uVar4, uVar3, uVar6, uVar5);\n    }\n    else {\n        if (cVar7 != '\\x03') {\n            return 0;\n        }\n        fcn.00b99997();\n        uVar5 = **(iVar2 + 8);\n        iVar1 = *(*(arg_8h + 4) + 8);\n        fcn.00b99997();\n        uVar6 = **(iVar1 + 8);\n        uVar3 = fcn.00b99c9c();\n        uVar4 = fcn.00b99c9c();\n        uVar5 = fcn.00c17edd(uVar4, uVar3, uVar6, uVar5);\n    }\n    fcn.00b99a20();\n    *arg_ch = uVar5;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 668
    },
    "00c00060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c00060(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_ch_00 = fcn.00b99c9c();\n    arg_8h_00 = fcn.00b99c9c();\n    iVar1 = fcn.00c188b4(arg_8h_00, arg_ch_00);\n    if (iVar1 < 0) {\n        fcn.00baff61(-iVar1, 0);\n        iVar1 = 1;\n    }\n    fcn.00b99a20();\n    *arg_ch = iVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 175
    },
    "00c000bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c000bc(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_ch_00 = fcn.00b99c9c();\n    arg_8h_00 = fcn.00b99c9c();\n    iVar1 = fcn.00c18ac0(arg_8h_00, arg_ch_00);\n    if (iVar1 < 0) {\n        fcn.00baff61(-iVar1, 0);\n        iVar1 = 1;\n    }\n    fcn.00b99a20();\n    *arg_ch = iVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 175
    },
    "00c019c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c019c8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t arg_8h_00;\n    uint32_t uVar5;\n    int32_t iVar6;\n    \n    iVar6 = 0;\n    arg_8h_00 = 0;\n    iVar3 = *(in_ECX + 8);\n    if (iVar3 != 0) {\n        piVar4 = *(in_ECX + 4);\n        do {\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n            arg_8h_00 = arg_8h_00 + *(iVar1 + 4);\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    iVar3 = fcn.00bf794e(arg_8h_00);\n    uVar5 = 0;\n    if (*(in_ECX + 8) != 0) {\n        do {\n            puVar2 = *(*(in_ECX + 4) + uVar5 * 4);\n            fcn.00bb1080(iVar6 + iVar3, *puVar2, puVar2[1]);\n            iVar6 = iVar6 + *(*(*(in_ECX + 4) + uVar5 * 4) + 4);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < *(in_ECX + 8));\n    }\n    return;\n}\n",
        "token_count": 359
    },
    "00c01bee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c01bee(uint arg_8h)\n\n{\n    fcn.00c02800();\n    return 0;\n}\n",
        "token_count": 33
    },
    "00c01e5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c01e5c(uint arg_8h)\n\n{\n    fcn.00c02800();\n    return 0;\n}\n",
        "token_count": 35
    },
    "00c0257b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00c0257b(int16_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    uVar1 = *arg_8h - 1;\n    if (uVar1 != 0) {\n        uVar1 = *arg_8h - 2;\n        if (uVar1 == 0) {\n            uVar3 = 1;\n        }\n        else {\n            arg_8h = NULL;\n            uVar1 = (*_sym.imp.WININET.dll_InternetQueryOptionW)(0, 0x26, 0, &arg_8h);\n            if (arg_8h != NULL) {\n                iVar2 = fcn.00bb0ff6(arg_8h);\n                fcn.00bb3020(iVar2, 0, arg_8h);\n                (*_sym.imp.WININET.dll_InternetQueryOptionW)(0, 0x26, iVar2, &arg_8h);\n                uVar3 = *(iVar2 + 4) != 0;\n                uVar1 = fcn.00bb106c(iVar2);\n            }\n        }\n    }\n    return uVar1 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 295
    },
    "00c02c18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c02c18(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00b99cf8();\n    fVar1 = fcn.00bb6360(fVar1);\n    fcn.00b99a20();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 100
    },
    "00c02c5a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c02c5a(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00b99cf8();\n    fVar1 = fcn.00bb64b0(fVar1);\n    fcn.00b99a20();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 102
    },
    "00c0306c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0306c(uint arg_8h, double *arg_ch)\n\n{\n    uint uVar1;\n    float10 fVar2;\n    ulong uVar3;\n    uint var_10h;\n    double dStack12;\n    \n    fcn.00b99cf8();\n    fVar2 = fcn.00bb6bb0();\n    dStack12 = fVar2;\n    fcn.00b99a20();\n    *arg_ch = dStack12;\n    *(arg_ch + 0xc) = 3;\n    uVar1 = 0;\n    uVar3 = fcn.00b99d46();\n    uVar1 = fcn.00c03aa2(&var_10h, uVar3, uVar3 >> 0x20, uVar1);\n    fcn.00b99e9c(uVar1);\n    fcn.00b99a20();\n    return 0;\n}\n",
        "token_count": 210
    },
    "00c03187": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c03187(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_10h;\n    \n    uVar1 = fcn.00b99c9c();\n    if (uVar1 == 0) {\n        fcn.00b977c7();\n        fcn.00bf5d6f(0);\n        fcn.00b99b9c(&var_10h);\n        fcn.00b95a64();\n    }\n    else if (uVar1 < 0x10000) {\n        arg_8h = uVar1 & 0xffff;\n        fcn.00b99bf8(&arg_8h);\n    }\n    else {\n        fcn.00b99bf8(0xc1f910);\n        fcn.00be6aa3(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 205
    },
    "00c03311": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c03311(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00b99cf8();\n    fVar1 = fcn.00bb6060(SUB84(fVar1, 0), fVar1 >> 0x20);\n    fcn.00b99a20();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 114
    },
    "00c03353": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c03353(uint arg_8h, double *arg_ch)\n\n{\n    uint uVar1;\n    float10 fVar2;\n    ulong uVar3;\n    uint var_10h;\n    double dStack12;\n    \n    fcn.00b99cf8();\n    fVar2 = fcn.00bb6a80();\n    dStack12 = fVar2;\n    fcn.00b99a20();\n    *arg_ch = dStack12;\n    *(arg_ch + 0xc) = 3;\n    uVar1 = 0;\n    uVar3 = fcn.00b99d46();\n    uVar1 = fcn.00c03aa2(&var_10h, uVar3, uVar3 >> 0x20, uVar1);\n    fcn.00b99e9c(uVar1);\n    fcn.00b99a20();\n    return 0;\n}\n",
        "token_count": 209
    },
    "00c033ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c033ba(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00bf89bb();\n    iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n    if (iVar2 == 0) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 7;\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        uVar1 = fcn.00bf89bb();\n        fcn.00b99a20();\n        arg_ch[3] = 7;\n        *arg_ch = uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 176
    },
    "00c036c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c036c1(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00b99cf8();\n    fVar1 = fcn.00bb60f0(fVar1);\n    fcn.00b99a20();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 101
    },
    "00c03703": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c03703(int32_t arg_8h, double *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    float10 fVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong uVar7;\n    double dVar8;\n    \n    if (((*(**(arg_8h + 4) + 0xc) == 1) && (*((*(arg_8h + 4))[1] + 0xc) == 1)) && (iVar2 = fcn.00b99c9c(),  iVar2 != 0))\n    {\n        iVar2 = fcn.00b99c9c();\n        iVar3 = fcn.00b99c9c();\n        fcn.00b99a20();\n        *(arg_ch + 0xc) = 1;\n        *arg_ch = iVar3 % iVar2;\n        return 0;\n    }\n    cVar1 = fcn.00b99c42();\n    if (((cVar1 != '\\0') && (cVar1 = fcn.00b99c42(),  cVar1 != '\\0')) && (iVar5 = fcn.00b99d46(),  iVar5 != 0)) {\n        uVar6 = fcn.00b99d46();\n        uVar7 = fcn.00b99d46();\n        uVar6 = fcn.00bc4750(uVar7, uVar6);\n        fcn.00b99a20();\n        *(arg_ch + 0xc) = 2;\n        *arg_ch = uVar6;\n        *(arg_ch + 4) = uVar6 >> 0x20;\n        return 0;\n    }\n    fVar4 = fcn.00b99cf8();\n    dVar8 = fVar4;\n    fVar4 = fcn.00b99cf8();\n    fVar4 = fcn.00bb6990(SUB84(fVar4, 0), fVar4 >> 0x20, SUB84(dVar8, 0), dVar8 >> 0x20);\n    fcn.00b99a20();\n    *arg_ch = fVar4;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 513
    },
    "00c039f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c039f9(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00b99cf8();\n    fVar1 = fcn.00bb69d4(fVar1);\n    fcn.00b99a20();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 101
    },
    "00c03a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c03a60(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00b99cf8();\n    fVar1 = fcn.00bb6600(fVar1);\n    fcn.00b99a20();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 100
    },
    "00c03cdd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c03cdd(uint arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t arg_14h_00;\n    uint arg_8h_00;\n    uint var_a0h;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00b99fbd(arg_8h);\n    if (iVar1 != 0) {\n        var_ch = 0;\n        var_8h = 0;\n        var_4h = 0;\n        iVar2 = *(arg_ch + 8) - arg_14h;\n        var_10h = 0xc1fb84;\n        if ((*(iVar1 + 0x18) <= iVar2) && (iVar2 <= *(iVar1 + 0x14))) {\n            fcn.00b981a7(arg_8h);\n            fcn.00b97e0b(0xc49e10);\n            arg_14h_00 = arg_14h;\n            if (arg_14h < *(arg_ch + 8)) {\n                do {\n                    fcn.00bb6cda(&var_a0h, 0x40, L\"AUTOITCALLVARIABLE%d\", arg_14h_00);\n                    fcn.00b97f41(&var_a0h);\n                    fcn.00b98620(&var_20h, *(*(arg_ch + 4) + arg_14h_00 * 4), 0, 1);\n                    fcn.00b95a64();\n                    if (arg_14h_00 == arg_14h) {\n                        arg_8h_00 = 0xc49e0c;\n                    }\n                    else {\n                        arg_8h_00 = 0xc4a950;\n                    }\n                    fcn.00b97e0b(arg_8h_00);\n                    fcn.00b97e0b(&var_a0h);\n                    arg_14h_00 = arg_14h_00 + 1;\n                } while (arg_14h_00 < *(arg_ch + 8));\n            }\n            fcn.00b97e0b(0xc49e14);\n            fcn.00be66f4();\n            return 1;\n        }\n        fcn.00be66f4();\n    }\n    return 0;\n}\n",
        "token_count": 567
    },
    "00c0425a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0425a(uint noname_0, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uStack624;\n    uint uVar4;\n    int32_t iVar5;\n    uchar auStack568 [4];\n    uchar auStack564 [8];\n    uchar auStack556 [552];\n    \n    fcn.00b99bf8(0xc1f910);\n    (*_sym.imp.USER32.dll_OpenClipboard)();\n    pcVar1 = _sym.imp.USER32.dll_IsClipboardFormatAvailable;\n    iVar2 = (*_sym.imp.USER32.dll_IsClipboardFormatAvailable)();\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)();\n        if (iVar2 == 0) {\n            iVar2 = (*pcVar1)();\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.USER32.dll_CountClipboardFormats)();\n                if (iVar2 == 0) {\n                    uVar4 = 1;\n                }\n                else {\n                    uVar4 = 2;\n                }\n                fcn.00be6aa3(uVar4, 0);\n            }\n            else {\n                iVar2 = (*_sym.imp.USER32.dll_GetClipboardData)();\n                if (iVar2 == 0) goto code_r0x00c042a6;\n                iVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n                if (iVar3 == 0) goto code_r0x00c042cc;\n                fcn.00b977c7();\n                iVar5 = 0;\n                uStack624 = 0xc04392;\n                iVar3 = (*_sym.imp.SHELL32.dll_DragQueryFileW)();\n                if (0 < iVar3 + -1) {\n                    do {\n                        uStack624 = 0x104;\n                        (*_sym.imp.SHELL32.dll_DragQueryFileW)(iVar2, iVar5, &stack0xfffffdcc);\n                        fcn.00b97e0b(&stack0xfffffdd4);\n                        uStack624 = 0xc043c8;\n                        fcn.00b97a84(10);\n                        iVar5 = iVar5 + 1;\n                    } while (iVar5 < iVar3 + -1);\n                }\n                uStack624 = 0x104;\n                (*_sym.imp.SHELL32.dll_DragQueryFileW)(iVar2, iVar5, &stack0xfffffdcc);\n                fcn.00b97e0b(&stack0xfffffdbc);\n                fcn.00b99b9c(&stack0xfffffd90);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar2);\n                fcn.00baff61(1, 0);\n                fcn.00b95a64();\n            }\n        }\n        else {\n            iVar2 = (*_sym.imp.USER32.dll_GetClipboardData)();\n            if (iVar2 == 0) goto code_r0x00c042a6;\n            iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n            if (iVar2 == 0) goto code_r0x00c042cc;\n            fcn.00beae14(iVar2);\n            uVar4 = fcn.00c082ac(&stack0xfffffdc8);\n            fcn.00b99b9c(uVar4);\n            fcn.00b95a64();\n            uStack624 = 0xc0433d;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)();\n            fcn.00b95a64();\n        }\ncode_r0x00c04447:\n        (*_sym.imp.USER32.dll_CloseClipboard)();\n    }\n    else {\n        iVar2 = (*_sym.imp.USER32.dll_GetClipboardData)();\n        if (iVar2 == 0) {\ncode_r0x00c042a6:\n            (*_sym.imp.USER32.dll_CloseClipboard)();\n            uVar4 = 3;\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n            if (iVar2 != 0) {\n                fcn.00b99bf8(iVar2);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)();\n                goto code_r0x00c04447;\n            }\ncode_r0x00c042cc:\n            (*_sym.imp.USER32.dll_CloseClipboard)();\n            uVar4 = 4;\n        }\n        fcn.00be6aa3(uVar4, 0);\n    }\n    return 0;\n}\n",
        "token_count": 978
    },
    "00c04458": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c04458(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint arg_8h_01;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00b99997();\n    puVar1 = *(iVar2 + 8);\n    iVar2 = puVar1[1];\n    if (iVar2 == 0) {\n        (*_sym.imp.USER32.dll_OpenClipboard)(*0xc562ac);\n        (*_sym.imp.USER32.dll_EmptyClipboard)();\ncode_r0x00c04539:\n        (*_sym.imp.USER32.dll_CloseClipboard)();\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(2, iVar2 * 2 + 2);\n        if (iVar2 == 0) {\n            fcn.00b99a20();\n            arg_8h_01 = 3;\n        }\n        else {\n            arg_8h_00 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar2);\n            if (arg_8h_00 != 0) {\n                fcn.00bb2ffc(arg_8h_00, *puVar1);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar2);\n                (*_sym.imp.USER32.dll_OpenClipboard)(*0xc562ac);\n                (*_sym.imp.USER32.dll_EmptyClipboard)();\n                iVar2 = (*_sym.imp.USER32.dll_SetClipboardData)(0xd, iVar2);\n                if (iVar2 == 0) {\n                    fcn.00b99a20();\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                    fcn.00be6aa3(1, 0);\n                }\n                goto code_r0x00c04539;\n            }\n            fcn.00b99a20();\n            arg_8h_01 = 4;\n        }\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.00be6aa3(arg_8h_01, 0);\n    }\n    return 0;\n}\n",
        "token_count": 486
    },
    "00c04655": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c04655(uint noname_0, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)(0xffff, 0x1a, 0, L\"Environment\", 3, 5000, &var_4h);\n    if (iVar1 == 0) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.00be6aa3(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 144
    },
    "00c046ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c046ac(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar2 = **(arg_8h + 4);\n    fcn.00b99997();\n    puVar1 = *(iVar2 + 8);\n    var_14h = *puVar1;\n    var_10h = puVar1[1];\n    var_ch = puVar1[2];\n    var_8h = puVar1[3];\n    *var_8h = *var_8h + 1;\n    fcn.00b97faf();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(var_14h, var_10h);\n    iVar2 = fcn.00bf5c28(&var_14h);\n    if (iVar2 == 0) {\n        fcn.00be6aa3(1, 0);\n        fcn.00b99bf8(0xc1f910);\n    }\n    else {\n        arg_8h_00 = fcn.00b9859a(&var_14h, &var_4h, 0);\n        fcn.00b99e9c(arg_8h_00);\n    }\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 351
    },
    "00c047fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c047fe(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint arg_8h_00;\n    uint var_10h;\n    \n    if (*(**(arg_8h + 4) + 0xc) == 0xe) {\n        puVar1 = fcn.00bf7ba4(&var_10h);\n    }\n    else {\n        if (*(**(arg_8h + 4) + 0xc) != 0xd) {\n            fcn.00b99bf8(0xc1f910);\n            fcn.00be6aa3(1, 0);\n            return 0;\n        }\n        fcn.00b977c7();\n        puVar1 = &var_10h;\n        arg_8h_00 = fcn.00bf7b95();\n        fcn.00bfa333(arg_8h_00, puVar1);\n        puVar1 = &var_10h;\n    }\n    fcn.00b99b9c(puVar1);\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 259
    },
    "00c052f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c052f0(uint noname_0, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    int32_t iVar3;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_LoadCursorW;\n    iVar3 = 0;\n    var_54h = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f89);\n    var_50h = (*pcVar1)(0, 0x7f8a);\n    var_4ch = (*pcVar1)(0, 0x7f00);\n    var_48h = (*pcVar1)(0, 0x7f03);\n    var_44h = (*pcVar1)(0, 0x7f8b);\n    var_40h = (*pcVar1)(0, 0x7f01);\n    var_3ch = (*pcVar1)(0, 0x7f81);\n    var_38h = (*pcVar1)(0, 0x7f88);\n    var_34h = (*pcVar1)(0, 0x7f80);\n    var_30h = (*pcVar1)(0, 0x7f86);\n    var_2ch = (*pcVar1)(0, 0x7f83);\n    var_28h = (*pcVar1)(0, 0x7f85);\n    var_24h = (*pcVar1)(0, 0x7f82);\n    var_20h = (*pcVar1)(0, 0x7f84);\n    var_1ch = (*pcVar1)(0, 0x7f04);\n    var_18h = (*pcVar1)(0, 0x7f02);\n    var_14h = 0x14;\n    iVar2 = (*_sym.imp.USER32.dll_GetCursorInfo)(&var_14h);\n    if (iVar2 == 0) {\n        fcn.00b99a20();\n        *arg_ch = -1;\n        arg_ch[3] = 1;\n        fcn.00be6aa3(1, 0);\n        arg_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00baff61(arg_8h, 0);\n    }\n    else {\n        do {\n            if ((var_ch != 0) && (var_ch == (&var_54h)[iVar3])) break;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x10);\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        if (iVar3 < 0x10) {\n            *arg_ch = iVar3;\n        }\n        else {\n            *arg_ch = -1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 767
    },
    "00c06437": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c06437(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    \n    uVar1 = fcn.00b99c9c();\n    iVar2 = (*_sym.imp.WSOCK32.dll_closesocket)(uVar1);\n    if (iVar2 == 0) {\n        arg_8h = CONCAT31(arg_8h._1_3_, 1);\n    }\n    else {\n        uVar1 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)(0);\n        fcn.00be6aa3(uVar1, unaff_ESI);\n        arg_8h = arg_8h._1_3_ << 8;\n    }\n    fcn.00b99863(arg_8h);\n    return 0;\n}\n",
        "token_count": 195
    },
    "00c0667c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0667c(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_24h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00b95c18();\n    iVar1 = **(arg_8h + 4);\n    fcn.00b99997();\n    fcn.00b95b75(*(iVar1 + 8), &var_14h);\n    iVar1 = (*_sym.imp.WSOCK32.dll_gethostbyname)(var_14h);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        fcn.00be6aa3(uVar2, iVar1);\n        fcn.00b99bf8(0xc1f910);\n    }\n    else {\n        fcn.00bb1080(&var_4h, **(iVar1 + 0xc), 4);\n        uVar2 = (*_sym.imp.WSOCK32.dll_inet_ntoa)(var_4h);\n        fcn.00c0823e(uVar2);\n        uVar2 = fcn.00c082ac(&var_24h);\n        fcn.00b99b9c(uVar2);\n        fcn.00b95a64();\n    }\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 326
    },
    "00c068ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c068ed(uint noname_0, uint arg_ch)\n\n{\n    int32_t arg_8h;\n    uint var_4h;\n    \n    arg_8h = (*_sym.imp.WSOCK32.dll_WSACleanup)();\n    fcn.00be6aa3(arg_8h, 0);\n    fcn.00b99863(arg_8h == 0);\n    return 0;\n}\n",
        "token_count": 97
    },
    "00c06927": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c06927(uint noname_0, uint arg_ch)\n\n{\n    int32_t arg_8h;\n    uchar auStackY512 [68];\n    uint32_t uStack428;\n    \n    arg_8h = (*_sym.imp.WSOCK32.dll_WSAStartup)(0x202);\n    fcn.00be6aa3(arg_8h, 0);\n    uStack428 = auStackY512 | arg_8h == 0;\n    fcn.00b99863(uStack428);\n    return 0;\n}\n",
        "token_count": 125
    },
    "00c0726b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0726b(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char16_t *arg_8h_00;\n    \n    uVar1 = *(**(arg_8h + 4) + 0xc) - 1;\n    if (uVar1 < 0xf) {\n    // switch table (15 cases) at 0xc07303\n        switch(*(uVar1 * 4 + 0xc07303)) {\n        case 0xc07286:\n            arg_8h_00 = L\"Int32\";\n            break;\n        case 0xc0728d:\n            arg_8h_00 = L\"Int64\";\n            break;\n        case 0xc07294:\n            arg_8h_00 = L\"Double\";\n            break;\n        case 0xc0729b:\n            arg_8h_00 = L\"String\";\n            break;\n        case 0xc072a2:\n            arg_8h_00 = L\"Array\";\n            break;\n        case 0xc072a9:\n            arg_8h_00 = L\"DLLStruct\";\n            break;\n        case 0xc072b0:\n            arg_8h_00 = L\"Reference\";\n            break;\n        case 0xc072b7:\n            arg_8h_00 = 0xc4aa0c;\n            break;\n        case 0xc072be:\n            arg_8h_00 = L\"Object\";\n            break;\n        case 0xc072c5:\n            arg_8h_00 = L\"Bool\";\n            break;\n        case 0xc072cc:\n            arg_8h_00 = L\"Keyword\";\n            break;\n        case 0xc072d3:\n            arg_8h_00 = L\"Binary\";\n            break;\n        case 0xc072da:\n            arg_8h_00 = L\"Function\";\n            break;\n        case 0xc072e1:\n            arg_8h_00 = L\"UserFunction\";\n            break;\n        case 0xc072e8:\n            arg_8h_00 = 0xc4aa80;\n        }\n    }\n    else {\n        arg_8h_00 = L\"Unknown\";\n    }\n    fcn.00b99bf8(arg_8h_00);\n    return 0;\n}\n",
        "token_count": 520
    },
    "00c07590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "hash data with CRC32"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00c07590(uint8_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    double dVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    \n    uVar6 = 0xffffffff;\n    puVar5 = arg_8h + arg_ch;\n    puVar2 = arg_8h + arg_10h * 4;\n    puVar7 = arg_8h;\n    do {\n        puVar1 = arg_8h + 1;\n        uVar6 = uVar6 >> 8 ^ *((uVar6 & 0xff ^ arg_8h[2]) * 4 + 0xc470b0);\n        uVar3 = *arg_8h;\n        arg_8h = arg_8h + arg_10h * arg_14h * 4;\n        uVar6 = uVar6 >> 8 ^ *((uVar6 & 0xff ^ *puVar1) * 4 + 0xc470b0);\n        uVar6 = uVar6 >> 8 ^ *((uVar6 & 0xff ^ uVar3) * 4 + 0xc470b0);\n        if (puVar5 <= arg_8h) {\n            arg_8h = puVar7 + arg_14h * 4;\n            puVar7 = arg_8h;\n        }\n    } while (puVar7 < puVar2);\n    dVar4 = ~uVar6;\n    if (-1 < uVar6) {\n        dVar4 = dVar4 + *0xc4bac8;\n    }\n    return dVar4;\n}\n",
        "token_count": 416
    },
    "00c0762d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c0762d(uint hgdiobj, int32_t *arg_ch, uint *arg_10h)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar7 = *arg_ch;\n    iVar9 = arg_ch[1];\n    var_1h._0_1_ = arg_ch[2] < iVar7;\n    bVar1 = arg_ch[3] < iVar9;\n    if (var_1h) {\n        *arg_ch = arg_ch[2];\n        arg_ch[2] = iVar7;\n    }\n    if (bVar1) {\n        arg_ch[1] = arg_ch[3];\n        arg_ch[3] = iVar9;\n    }\n    fcn.00c03c94(*(in_ECX + 0x104), &var_1ch, hgdiobj);\n    arg_ch[2] = arg_ch[2] + var_1ch;\n    arg_ch[3] = arg_ch[3] + var_18h;\n    *arg_ch = *arg_ch + var_1ch;\n    arg_ch[1] = arg_ch[1] + var_18h;\n    var_44h = (arg_ch[2] - *arg_ch) + 1;\n    iVar9 = (arg_ch[3] - arg_ch[1]) + 1;\n    var_ch = iVar9;\n    var_8h = (*_sym.imp.USER32.dll_GetDC)(0);\n    uVar4 = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(var_8h, var_44h, iVar9);\n    var_10h = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(var_8h);\n    var_14h = (*_sym.imp.GDI32.dll_SelectObject)(var_10h, uVar4);\n    iVar7 = var_ch;\n    uVar3 = var_10h;\n    if (bVar1) {\n        iVar9 = -iVar9;\n    }\n    iVar5 = var_44h;\n    if (var_1h != '\\0') {\n        iVar5 = -var_44h;\n    }\n    if (bVar1) {\n        iVar10 = arg_ch[3];\n    }\n    else {\n        iVar10 = arg_ch[1];\n    }\n    if (var_1h == '\\0') {\n        iVar8 = *arg_ch;\n    }\n    else {\n        iVar8 = arg_ch[2];\n    }\n    (*_sym.imp.GDI32.dll_StretchBlt)(var_10h, 0, 0, var_44h, var_ch, var_8h, iVar8, iVar10, iVar5, iVar9, 0xcc0020);\n    pcVar2 = _sym.imp.GDI32.dll_GetDIBits;\n    var_48h = 0x28;\n    var_40h = -iVar7;\n    var_38h = 0;\n    var_3ch._0_2_ = 1;\n    var_3ch._2_2_ = 0x20;\n    (*_sym.imp.GDI32.dll_GetDIBits)(uVar3, uVar4, 0, 0, 0, &var_48h, 0);\n    *arg_10h = var_34h;\n    uVar6 = fcn.00bb0ff6(var_34h);\n    uVar3 = var_10h;\n    iVar7 = (*pcVar2)(var_10h, uVar4, 0, iVar7, uVar6, &var_48h, 0);\n    (*_sym.imp.GDI32.dll_SelectObject)(uVar3, var_14h);\n    (*_sym.imp.GDI32.dll_DeleteObject)(uVar4);\n    (*_sym.imp.GDI32.dll_DeleteDC)(uVar3);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, var_8h);\n    if (iVar7 == 0) {\n        fcn.00bb106c(uVar6);\n        uVar6 = 0;\n    }\n    return uVar6;\n}\n",
        "token_count": 1085
    },
    "00c08131": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00c08131(int32_t fd, int32_t *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    uint arg_8h;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_ch = 0;\n    arg_ch[1] = fd;\n    *arg_ch = *arg_ch + 1;\n    var_8h = arg_10h / 1000;\n    var_4h = (arg_10h % 1000) * 1000;\n    if (arg_14h == '\\0') {\n        piVar3 = NULL;\n        piVar2 = arg_ch;\n    }\n    else {\n        piVar2 = NULL;\n        piVar3 = arg_ch;\n    }\n    iVar1 = (*_sym.imp.WSOCK32.dll_select)(0, piVar2, piVar3, 0, &var_8h);\n    if (iVar1 == 0) {\n        if (arg_14h == '\\0') {\n            return 0;\n        }\n        arg_8h = 0x274c;\n        arg_ch_00 = iVar1;\n    }\n    else if (iVar1 < 1) {\n        arg_ch_00 = 0;\n        arg_8h = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n    }\n    else {\n        arg_ch_00 = (*_sym.imp.WSOCK32.dll___WSAFDIsSet)(fd, arg_ch);\n        if (arg_ch_00 != 0) {\n            return iVar1;\n        }\n        iVar1 = -2;\n        arg_8h = 0xfffffffe;\n    }\n    fcn.00be6aa3(arg_8h, arg_ch_00);\n    return iVar1;\n}\n",
        "token_count": 436
    },
    "00c0ab1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00c0ab1f(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar2 = 0;\n    piVar4 = *(arg_ch + 4) + arg_10h * 4;\n    uVar3 = *(piVar4[-1] + 8) == 0x4e;\n    do {\n        iVar1 = *(*piVar4 + 8);\n        if (iVar1 == 0x4e) {\n            if (iVar2 == 0) {\n                uVar3 = uVar3 + 1;\n            }\n            else {\ncode_r0x00c0abb5:\n                if (uVar3 == 0) {\n                    return -1;\n                }\n            }\n        }\n        else if (iVar1 == 0x4f) {\n            if (iVar2 != 0) goto code_r0x00c0abb5;\n            uVar3 = uVar3 - 1;\n        }\n        else {\n            if ((iVar1 == 0x41) && (uVar3 == 0)) {\n                if (*(*(*(arg_ch + 4) + 4 + arg_10h * 4) + 8) != 0x4e) {\n                    return 0;\n                }\n                var_4h = 1;\n                if (arg_14h != NULL) {\n                    *arg_14h = 1;\n                    iVar5 = (arg_10h + 2) * 4;\n                    iVar1 = *(*(iVar5 + *(arg_ch + 4)) + 8);\n                    while (iVar1 == 0x4e) {\n                        *arg_14h = *arg_14h + 1;\n                        iVar5 = iVar5 + 4;\n                        iVar1 = *(*(iVar5 + *(arg_ch + 4)) + 8);\n                    }\n                }\n                iVar6 = 1;\n                iVar5 = 1;\n                piVar4 = *(arg_ch + 4) + (arg_10h + 2) * 4;\n                do {\n                    iVar1 = *(*piVar4 + 8);\n                    if (iVar1 == 0x4e) {\n                        if (iVar2 != 0) goto code_r0x00c0ac8a;\n                        iVar6 = iVar6 + 1;\n                    }\n                    else if (iVar1 == 0x4f) {\n                        if (iVar2 != 0) goto code_r0x00c0ac8a;\n                        iVar6 = iVar6 + -1;\n                    }\n                    else if (iVar1 == 0x47) {\n                        iVar2 = iVar2 + 1;\n                    }\n                    else if (iVar1 == 0x48) {\n                        iVar2 = iVar2 + -1;\n                    }\n                    else {\n                        if (iVar1 == 0x40) {\n                            if ((iVar6 == arg_8h + 1) && (iVar2 == 0)) {\n                                iVar5 = iVar5 + 1;\n                                goto code_r0x00c0ac8e;\n                            }\n                        }\n                        else if (iVar1 == 0x7f) {\n                            return var_4h;\n                        }\ncode_r0x00c0ac8a:\n                        if (iVar6 == 0) {\n                            return var_4h;\n                        }\n                    }\ncode_r0x00c0ac8e:\n                    if (iVar6 < arg_8h + 1) {\n                        if (var_4h < iVar5) {\n                            var_4h = iVar5;\n                        }\n                        iVar5 = 1;\n                    }\n                    piVar4 = piVar4 + 1;\n                } while( true );\n            }\n            if (iVar1 == 0x47) {\n                iVar2 = iVar2 + 1;\n            }\n            else {\n                if (iVar1 != 0x48) {\n                    if (iVar1 == 0x7f) {\n                        return -1;\n                    }\n                    goto code_r0x00c0abb5;\n                }\n                iVar2 = iVar2 + -1;\n            }\n        }\n        arg_10h = arg_10h + 1;\n        piVar4 = piVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 1047
    },
    "00c0bf80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c0bf80(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    int32_t *arg_10h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpsz;\n    uint cchLength;\n    uint var_44h;\n    int32_t *var_40h;\n    uint var_3ch;\n    uint *var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t *var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    piVar2 = arg_ch;\n    iVar4 = *(arg_8h + 4);\n    *arg_ch = *arg_ch + 2;\n    var_10h = 0x48;\n    if (*(*(iVar4 + *arg_ch * 4) + 8) == 0x48) {\n        fcn.00bfa0b5(0x70, *(*(iVar4 + -8 + *arg_ch * 4) + 10));\n        return 0xffffffff;\n    }\n    fcn.00c0a528(arg_8h);\n    arg_10h_00 = arg_ch;\n    iVar4 = *piVar2;\n    iVar3 = 0;\n    var_ch = 0x47;\n    do {\n        iVar1 = *(*(var_28h + iVar4 * 4) + 8);\n        if (iVar1 == 0x47) {\n            iVar3 = iVar3 + 1;\n        }\n        else if (iVar1 == var_10h) {\n            iVar3 = iVar3 + -1;\n        }\n        else if ((iVar1 == 0x40) && (iVar3 == 0)) break;\n        if (iVar3 < 0) break;\n        iVar4 = iVar4 + 1;\n    } while( true );\n    var_3ch = 0;\n    var_34h = NULL;\n    var_30h = 1;\n    iVar4 = fcn.00b9a000(&var_2ch, arg_ch, &var_3ch, iVar4);\n    if (iVar4 < 0) {\n        uVar5 = 0xffffffff;\n        goto code_r0x00c0c28e;\n    }\n    iVar4 = *arg_10h_00;\n    if (*(*(var_28h + iVar4 * 4) + 8) == 0x40) {\n        iVar4 = iVar4 + -1;\n    }\n    else {\n        iVar4 = iVar4 + -2;\n    }\n    *arg_10h_00 = iVar4;\n    fcn.00b95f12(0x47);\n    arg_8h = -1;\n    if (var_30h == 0xd) {\n        var_14h._0_2_ = 0xffff;\n        var_14h._2_2_ = 0;\n        fcn.00b95f12(1);\n        var_1ch = fcn.00bf7b95();\n        fcn.00bf7581(&var_1ch);\n        arg_8h = fcn.00b9f5c0(1, &var_2ch, arg_10h_00, arg_10h);\n        fcn.00b95efb();\n        iVar4 = arg_8h;\ncode_r0x00c0c21c:\n        if (-1 < iVar4) {\n            uVar5 = 0;\n            goto code_r0x00c0c28e;\n        }\n    }\n    else {\n        if (var_30h == 0xe) {\n            fcn.00b95f12(0x34);\n            uVar5 = fcn.00bf7ba4(&lpsz);\n            fcn.00b95ea1(uVar5);\n            fcn.00b95a64();\n            iVar4 = fcn.00b9fe40(1, &var_2ch, arg_10h_00, arg_10h, &arg_8h + 3);\n            goto code_r0x00c0c21c;\n        }\n        if (var_30h == 4) {\n            fcn.00b99997();\n            lpsz = *var_34h;\n            cchLength = var_34h[1];\n            var_44h = var_34h[2];\n            var_40h = var_34h[3];\n            *var_40h = *var_40h + 1;\n            fcn.00b97faf();\n            (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n            arg_ch = (**(**0xc57294 + 4))(lpsz);\n            if (arg_ch < 1) {\n                fcn.00b99997();\n                iVar4 = fcn.00b99fbd(var_34h);\n                if (iVar4 != 0) {\n                    fcn.00b95f12(0x34);\n                    fcn.00b99997();\n                    fcn.00b95ea1(var_34h);\n                    arg_8h = fcn.00b9fe40(1, &var_2ch, arg_10h_00, arg_10h, &arg_8h + 3);\n                }\n            }\n            else {\n                var_14h._0_2_ = 0xffff;\n                var_14h._2_2_ = 0;\n                fcn.00b95f12(1);\n                var_1ch = arg_ch;\n                fcn.00bf7581(&var_1ch);\n                arg_8h = fcn.00b9f5c0(1, &var_2ch, arg_10h_00, arg_10h);\n                fcn.00b95efb();\n            }\n            fcn.00b95a64();\n            iVar4 = arg_8h;\n            goto code_r0x00c0c21c;\n        }\n    }\n    iVar4 = 0;\n    iVar1 = *(*(var_28h + *arg_10h_00 * 4) + 8);\n    do {\n        while( true ) {\n            if (iVar1 == 0x7f) goto code_r0x00c0c264;\n            *arg_10h_00 = *arg_10h_00 + 1;\n            iVar1 = *(*(var_28h + *arg_10h_00 * 4) + 8);\n            if (iVar1 != var_ch) break;\n            iVar4 = iVar4 + 1;\n        }\n    } while ((iVar1 != var_10h) || (iVar4 = iVar4 + -1,  0 < iVar4));\n    *arg_10h_00 = *arg_10h_00 + 1;\ncode_r0x00c0c264:\n    uVar5 = 0;\n    fcn.00be6aa3(0xdead, 0);\n    fcn.00baff61(0xbeef, 0);\ncode_r0x00c0c28e:\n    fcn.00b99a20();\n    fcn.00b97776();\n    return uVar5;\n}\n",
        "token_count": 1667
    },
    "00c0d2f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00c0d2f3(uint arg_8h, uint *arg_ch)\n\n{\n    int16_t *piVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint var_510h;\n    uint var_50ch;\n    uint var_508h;\n    uint var_4f0h;\n    uint var_4ech;\n    uint var_4e8h;\n    uint uStack1256;\n    char16_t cStack1252;\n    uint var_4deh;\n    uint uStack1246;\n    uint uStack1242;\n    uint uStack1238;\n    uint uStack1234;\n    ushort uStack1230;\n    uint var_4c8h;\n    uint var_4c4h;\n    uint var_4c0h;\n    uint var_4bch;\n    uint var_4b8h;\n    uint var_4a0h;\n    uint var_49ch;\n    uint var_498h;\n    uint uStack1176;\n    ushort uStack1172;\n    uint var_48eh;\n    uint uStack1166;\n    uint uStack1162;\n    uint uStack1158;\n    uint uStack1154;\n    ushort uStack1150;\n    uint var_478h;\n    uint var_474h;\n    uint var_470h;\n    uint uStack1136;\n    ushort uStack1132;\n    uint var_466h;\n    uint uStack1126;\n    uint uStack1122;\n    uint uStack1118;\n    uint uStack1114;\n    ushort uStack1110;\n    uint var_450h;\n    uint var_44ch;\n    uint var_448h;\n    uint uStack1096;\n    ushort uStack1092;\n    uint var_43eh;\n    uint uStack1086;\n    uint uStack1082;\n    uint uStack1078;\n    uint uStack1074;\n    ushort uStack1070;\n    uint var_428h;\n    uint var_424h;\n    uint var_420h;\n    uint uStack1056;\n    uint uStack1052;\n    uint var_414h;\n    uint uStack1044;\n    uint uStack1040;\n    uint uStack1036;\n    uint uStack1032;\n    uint var_400h;\n    uint var_3fch;\n    uint var_3f8h;\n    uint uStack1016;\n    uint uStack1012;\n    uint var_3ech;\n    uint uStack1004;\n    uint uStack1000;\n    uint uStack996;\n    uint uStack992;\n    uint var_3d8h;\n    uint var_3d4h;\n    uint var_3d0h;\n    uint uStack976;\n    uint uStack972;\n    uint var_3c4h;\n    uint uStack964;\n    uint uStack960;\n    uint uStack956;\n    uint uStack952;\n    uint var_3b0h;\n    uint var_3ach;\n    uint var_3a8h;\n    uint uStack936;\n    uint uStack932;\n    ushort uStack928;\n    uint var_39ah;\n    uint uStack922;\n    uint uStack918;\n    uint uStack914;\n    ushort uStack910;\n    uint var_388h;\n    uint var_384h;\n    uint var_380h;\n    uint uStack896;\n    ushort uStack892;\n    uint var_376h;\n    uint uStack886;\n    uint uStack882;\n    uint uStack878;\n    uint uStack874;\n    ushort uStack870;\n    uint var_360h;\n    uint var_35ch;\n    uint var_358h;\n    uint uStack856;\n    ushort uStack852;\n    uint var_34eh;\n    uint uStack846;\n    uint uStack842;\n    uint uStack838;\n    uint uStack834;\n    ushort uStack830;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    uint uStack816;\n    uint uStack812;\n    uint var_324h;\n    uint uStack804;\n    uint uStack800;\n    uint uStack796;\n    uint uStack792;\n    uint var_310h;\n    uint var_30ch;\n    uint var_308h;\n    uint uStack776;\n    uint uStack772;\n    uint uStack768;\n    uint var_2f8h;\n    uint uStack760;\n    uint uStack756;\n    uint uStack752;\n    uint var_2e8h;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint uStack736;\n    uint uStack732;\n    uint var_2d4h;\n    uint uStack724;\n    uint uStack720;\n    uint uStack716;\n    uint uStack712;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint uStack696;\n    uint uStack692;\n    char16_t cStack688;\n    uint var_2aah;\n    uint uStack682;\n    uint uStack678;\n    uint uStack674;\n    ushort uStack670;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint uStack616;\n    char16_t cStack612;\n    uint var_25eh;\n    uint uStack606;\n    uint uStack602;\n    uint uStack598;\n    uint uStack594;\n    ushort uStack590;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint uStack576;\n    uint uStack572;\n    char16_t cStack568;\n    uint var_232h;\n    uint uStack562;\n    uint uStack558;\n    uint uStack554;\n    ushort uStack550;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint uStack536;\n    uint uStack532;\n    uint uStack528;\n    uint var_208h;\n    uint uStack520;\n    uint uStack516;\n    uint uStack512;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint uStack496;\n    uint uStack492;\n    ushort uStack488;\n    uint var_1e2h;\n    uint uStack482;\n    uint uStack478;\n    uint uStack474;\n    ushort uStack470;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint uStack456;\n    uint uStack452;\n    ushort uStack448;\n    uint var_1bah;\n    uint uStack442;\n    uint uStack438;\n    uint uStack434;\n    ushort uStack430;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint uStack416;\n    uint uStack412;\n    uint var_194h;\n    uint uStack404;\n    uint uStack400;\n    uint uStack396;\n    uint uStack392;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint uStack376;\n    uint uStack372;\n    ushort uStack368;\n    uint var_16ah;\n    uint uStack362;\n    uint uStack358;\n    uint uStack354;\n    ushort uStack350;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint var_140h;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    ushort uStack284;\n    uint var_116h;\n    uint uStack278;\n    uint uStack274;\n    ushort uStack270;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    ushort uStack244;\n    uint var_eeh;\n    uint uStack238;\n    uint uStack234;\n    ushort uStack230;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_c4h;\n    uint uStack196;\n    uint uStack192;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_9ch;\n    uint uStack156;\n    uint uStack152;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_74h;\n    uint uStack116;\n    uint uStack112;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint uStack96;\n    uint uStack92;\n    ushort uStack88;\n    uint var_52h;\n    uint uStack82;\n    uint uStack78;\n    uint uStack74;\n    ushort uStack70;\n    uint var_40h;\n    uint var_3ch;\n    ushort var_38h;\n    uint var_36h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    \n    var_510h = *0xc49b9c;\n    var_50ch = *0xc49ba0;\n    iVar5 = 6;\n    puVar2 = &var_508h;\n    for (iVar4 = iVar5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    var_4f0h = 6;\n    var_4ech = 4;\n    var_4e8h = str.wstr._0_4_;\n    uStack1256 = str.wstr._4_4_;\n    cStack1252 = str.wstr[4];\n    var_4deh = 0;\n    uStack1246 = 0;\n    uStack1242 = 0;\n    uStack1238 = 0;\n    uStack1234 = 0;\n    uStack1230 = 0;\n    var_4c0h = *0xc49b3c;\n    var_4bch = *0xc49b40;\n    var_4c8h = 7;\n    var_4c4h = 4;\n    puVar2 = &var_4b8h;\n    for (iVar4 = iVar5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    var_4a0h = 4;\n    var_49ch = 4;\n    var_498h = *0xc49ad8;\n    uStack1176 = *0xc49adc;\n    uStack1172 = *0xc49ae0;\n    var_48eh = 0;\n    uStack1166 = 0;\n    uStack1162 = 0;\n    uStack1158 = 0;\n    uStack1154 = 0;\n    uStack1150 = 0;\n    var_478h = 4;\n    var_474h = 4;\n    var_470h = *0xc49b24;\n    uStack1136 = *0xc49b28;\n    uStack1132 = *0xc49b2c;\n    var_466h = 0;\n    uStack1126 = 0;\n    uStack1122 = 0;\n    uStack1118 = 0;\n    uStack1114 = 0;\n    uStack1110 = 0;\n    var_450h = 5;\n    var_44ch = 4;\n    var_448h = *0xc49b30;\n    uStack1096 = *0xc49b34;\n    uStack1092 = *0xc49b38;\n    var_43eh = 0;\n    uStack1086 = 0;\n    uStack1082 = 0;\n    uStack1078 = 0;\n    uStack1074 = 0;\n    uStack1070 = 0;\n    var_428h = 4;\n    var_424h = 4;\n    var_420h = *0xc49b18;\n    uStack1056 = *0xc49b1c;\n    uStack1052 = *0xc49b20;\n    var_414h = 0;\n    uStack1044 = 0;\n    uStack1040 = 0;\n    uStack1036 = 0;\n    uStack1032 = 0;\n    var_400h = 5;\n    var_3fch = 4;\n    var_3f8h = *0xc49b0c;\n    uStack1016 = *0xc49b10;\n    uStack1012 = *0xc49b14;\n    var_3ech = 0;\n    uStack1004 = 0;\n    uStack1000 = 0;\n    uStack996 = 0;\n    uStack992 = 0;\n    var_3d8h = 5;\n    var_3d4h = 4;\n    var_3d0h = str.short._0_4_;\n    uStack976 = str.short._4_4_;\n    uStack972 = str.short._8_4_;\n    var_3c4h = 0;\n    uStack964 = 0;\n    uStack960 = 0;\n    uStack956 = 0;\n    uStack952 = 0;\n    var_3b0h = 2;\n    var_3ach = 4;\n    var_3a8h = *0xc49af0;\n    uStack936 = *0xc49af4;\n    uStack932 = *0xc49af8;\n    uStack928 = *0xc49afc;\n    var_39ah = 0;\n    uStack922 = 0;\n    uStack918 = 0;\n    uStack914 = 0;\n    uStack910 = 0;\n    var_388h = 3;\n    var_384h = 4;\n    var_380h = *0xc49b00;\n    uStack896 = *0xc49b04;\n    uStack892 = *0xc49b08;\n    var_376h = 0;\n    uStack886 = 0;\n    uStack882 = 0;\n    uStack878 = 0;\n    uStack874 = 0;\n    uStack870 = 0;\n    var_360h = 3;\n    var_35ch = 4;\n    var_358h = *0xc49abc;\n    uStack856 = *0xc49ac0;\n    uStack852 = *0xc49ac4;\n    var_34eh = 0;\n    uStack846 = 0;\n    uStack842 = 0;\n    uStack838 = 0;\n    uStack834 = 0;\n    uStack830 = 0;\n    var_338h = 1;\n    var_334h = 4;\n    var_330h = *0xc4b080;\n    uStack816 = *0xc4b084;\n    uStack812 = *0xc4b088;\n    var_324h = 0;\n    uStack804 = 0;\n    uStack800 = 0;\n    uStack796 = 0;\n    uStack792 = 0;\n    var_310h = 1;\n    var_30ch = 4;\n    var_308h = *0xc49ac8;\n    uStack776 = *0xc49acc;\n    uStack772 = *0xc49ad0;\n    uStack768 = *0xc49ad4;\n    var_2f8h = 0;\n    uStack760 = 0;\n    uStack756 = 0;\n    uStack752 = 0;\n    var_2e8h = 1;\n    var_2e4h = 4;\n    var_2e0h = str.float._0_4_;\n    uStack736 = str.float._4_4_;\n    uStack732 = str.float._8_4_;\n    var_2d4h = 0;\n    uStack724 = 0;\n    uStack720 = 0;\n    uStack716 = 0;\n    uStack712 = 0;\n    var_2bch = 4;\n    var_2c0h = 9;\n    var_2b8h = str.double._0_4_;\n    uStack696 = str.double._4_4_;\n    uStack692 = str.double._8_4_;\n    cStack688 = str.double[6];\n    var_2aah = 0;\n    uStack682 = 0;\n    uStack678 = 0;\n    uStack674 = 0;\n    uStack670 = 0;\n    var_290h = *0xc49bbc;\n    var_28ch = *0xc49bc0;\n    var_298h = 10;\n    var_294h = 8;\n    puVar2 = &var_288h;\n    for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    var_26ch = 4;\n    var_270h = 8;\n    var_268h = str.hwnd._0_4_;\n    uStack616 = str.hwnd._4_4_;\n    cStack612 = str.hwnd[4];\n    var_25eh = 0;\n    uStack606 = 0;\n    uStack602 = 0;\n    uStack598 = 0;\n    uStack594 = 0;\n    uStack590 = 0;\n    var_244h = 4;\n    var_248h = 8;\n    var_240h = str.handle._0_4_;\n    uStack576 = str.handle._4_4_;\n    uStack572 = str.handle._8_4_;\n    cStack568 = str.handle[6];\n    var_232h = 0;\n    uStack562 = 0;\n    uStack558 = 0;\n    uStack554 = 0;\n    uStack550 = 0;\n    var_21ch = 4;\n    var_220h = 8;\n    var_218h = *0xc49c04;\n    uStack536 = *0xc49c08;\n    uStack532 = *0xc49c0c;\n    uStack528 = *0xc49c10;\n    var_208h = 0;\n    uStack520 = 0;\n    uStack516 = 0;\n    uStack512 = 0;\n    var_1f4h = 4;\n    var_1f8h = 0xb;\n    var_1f0h = *0xc49c14;\n    uStack496 = *0xc49c18;\n    uStack492 = *0xc49c1c;\n    uStack488 = *0xc49c20;\n    var_1e2h = 0;\n    uStack482 = 0;\n    uStack478 = 0;\n    uStack474 = 0;\n    uStack470 = 0;\n    var_1cch = 4;\n    var_1d0h = 0xb;\n    var_1c8h = *0xc49c60;\n    uStack456 = *0xc49c64;\n    uStack452 = *0xc49c68;\n    uStack448 = *0xc49c6c;\n    var_1bah = 0;\n    uStack442 = 0;\n    uStack438 = 0;\n    uStack434 = 0;\n    uStack430 = 0;\n    var_1a8h = 0xc;\n    var_1a4h = 4;\n    var_1a0h = *0xc49b54;\n    uStack416 = *0xc49b58;\n    uStack412 = *0xc49b5c;\n    var_194h = 0;\n    uStack404 = 0;\n    uStack400 = 0;\n    uStack396 = 0;\n    uStack392 = 0;\n    var_17ch = 8;\n    var_180h = 0xd;\n    var_178h = *0xc49b60;\n    uStack376 = *0xc49b64;\n    uStack372 = *0xc49b68;\n    uStack368 = *0xc49b6c;\n    var_16ah = 0;\n    uStack362 = 0;\n    uStack358 = 0;\n    uStack354 = 0;\n    uStack350 = 0;\n    var_154h = 8;\n    var_158h = 0xe;\n    var_150h = str.int_ptr._0_4_;\n    uStack336 = str.int_ptr._4_4_;\n    uStack332 = str.int_ptr._8_4_;\n    uStack328 = str.int_ptr._12_4_;\n    var_140h = 0;\n    uStack320 = 0;\n    uStack316 = 0;\n    uStack312 = 0;\n    var_130h = 0xb;\n    var_12ch = 4;\n    var_128h = *0xc49c24;\n    uStack296 = *0xc49c28;\n    uStack292 = *0xc49c2c;\n    uStack288 = *0xc49c30;\n    uStack284 = *0xc49c34;\n    var_116h = 0;\n    uStack278 = 0;\n    uStack274 = 0;\n    uStack270 = 0;\n    var_108h = 0xc;\n    var_104h = 4;\n    var_100h = *0xc49bf0;\n    uStack256 = *0xc49bf4;\n    uStack252 = *0xc49bf8;\n    uStack248 = *0xc49bfc;\n    uStack244 = *0xc49c00;\n    var_eeh = 0;\n    uStack238 = 0;\n    uStack234 = 0;\n    uStack230 = 0;\n    var_e0h = 0xb;\n    var_dch = 4;\n    puVar2 = 0xc49c38;\n    puVar7 = &var_d8h;\n    for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    var_c4h = 0;\n    uStack196 = 0;\n    uStack192 = 0;\n    var_b4h = 4;\n    var_b8h = 0xc;\n    puVar2 = 0xc49c4c;\n    puVar7 = &var_b0h;\n    for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    var_9ch = 0;\n    uStack156 = 0;\n    uStack152 = 0;\n    var_8ch = 4;\n    var_90h = 0xc;\n    puVar2 = L\"idispatch\";\n    puVar7 = &var_88h;\n    for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    var_74h = 0;\n    uStack116 = 0;\n    uStack112 = 0;\n    var_64h = 4;\n    var_68h = 0xf;\n    var_60h = *0xc49c94;\n    uStack96 = *0xc49c98;\n    uStack92 = *0xc49c9c;\n    uStack88 = *0xc49ca0;\n    var_52h = 0;\n    uStack82 = 0;\n    uStack78 = 0;\n    uStack74 = 0;\n    uStack70 = 0;\n    var_3ch = 4;\n    var_40h = 0x10;\n    var_38h = 0;\n    iVar4 = 0;\n    puVar2 = &var_36h;\n    for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    var_18h = 0;\n    var_14h = 0;\n    fcn.00b977c7();\n    arg_ch[3] = 0;\n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    arg_ch[5] = 0;\n    arg_ch[2] = 4;\n    while ((piVar1 = fcn.00b97b52(iVar4),  *piVar1 != 0 && (piVar1 = fcn.00b97b52(iVar4),  *piVar1 != 0x3b))) {\n        iVar4 = iVar4 + 1;\n    }\n    if (iVar4 != 0) {\n        fcn.00b979ab(arg_8h, 0, iVar4);\n        piVar1 = fcn.00b97b52(iVar4);\n        if (*piVar1 == 0x3b) {\n            iVar4 = iVar4 + 1;\n        }\n        fcn.00b97e8c(0, iVar4);\n        if (var_ch == 0) {\ncode_r0x00c0d8e5:\n            arg_ch[3] = 0;\n        }\n        else {\n            piVar1 = fcn.00b97b52(var_ch + -1);\n            if (*piVar1 != 0x2a) goto code_r0x00c0d8e5;\n            arg_ch[3] = 1;\n            fcn.00b97e8c(var_ch + -1, 1);\n        }\n        uVar6 = 1;\n        puVar2 = &var_510h;\n        iVar4 = 0;\n        do {\n            if (*puVar2 == 0) goto code_r0x00c0d946;\n            iVar5 = fcn.00bb313d(puVar2, var_10h);\n            if (iVar5 == 0) {\n                arg_ch[2] = (&var_4f0h)[iVar4 * 10];\n                if (arg_ch[3] == 1) {\n                    arg_ch[4] = 4;\n                }\n                else {\n                    arg_ch[4] = (&var_4ech)[iVar4 * 10];\n                }\n                break;\n            }\n            puVar2 = puVar2 + 10;\n            iVar4 = iVar4 + 1;\n        } while (-1 < iVar4);\n        if (-1 < iVar4) goto code_r0x00c0d94a;\n    }\ncode_r0x00c0d946:\n    uVar6 = 0;\ncode_r0x00c0d94a:\n    uVar3 = fcn.00b95a64();\n    return uVar3 & 0xffffff00 | uVar6;\n}\n",
        "token_count": 6257
    },
    "00c0dbdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00c0dbdc(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint *puVar3;\n    uint lpProcName;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar1 = *(*(arg_ch + 4) + 8);\n    fcn.00b99997();\n    puVar3 = *(iVar1 + 8);\n    var_1h._0_1_ = '\\0';\n    var_1ch = *puVar3;\n    var_18h = puVar3[1];\n    var_14h = puVar3[2];\n    var_10h = puVar3[3];\n    *var_10h = *var_10h + 1;\n    var_8h = **(arg_ch + 4);\n    if (*(var_8h + 0xc) == 4) {\n        fcn.00b99997();\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(**(var_8h + 8));\n        var_1h._0_1_ = '\\x01';\n    }\n    else {\n        iVar1 = fcn.00b99c9c();\n        if ((iVar1 < 1) || (iVar1 = *(in_ECX + 0x1a8),  iVar2 = fcn.00b99c9c(),  iVar1 < iVar2)) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = fcn.00b99c9c();\n            iVar1 = **(*(in_ECX + 0x1a4) + -4 + iVar1 * 4);\n        }\n    }\n    if (iVar1 == 0) {\n        puVar3 = NULL;\n        arg_8h_00 = 1;\n    }\n    else {\n        if (*(*(*(arg_ch + 4) + 8) + 0xc) == 4) {\n            fcn.00b95c18();\n            puVar3 = &lpProcName;\n            fcn.00b95b75(&var_1ch, puVar3);\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, lpProcName);\n            *arg_8h = iVar2;\n            fcn.00b95a64();\n        }\n        else {\n            puVar3 = fcn.00b99c9c();\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1);\n            *arg_8h = iVar2;\n        }\n        if (*arg_8h != 0) goto code_r0x00c0dd51;\n        if (*(*(*(arg_ch + 4) + 8) + 0xc) == 4) {\n            fcn.00b97a84(0x41);\n            fcn.00b95c18();\n            fcn.00b95b75(&var_1ch, &lpProcName);\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, lpProcName);\n            *arg_8h = iVar2;\n            fcn.00b95a64();\n        }\n        if (*arg_8h != 0) goto code_r0x00c0dd51;\n        if (var_1h != '\\0') {\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n        }\n        arg_8h_00 = 3;\n    }\n    fcn.00be6aa3(arg_8h_00, puVar3);\n    iVar1 = 0;\ncode_r0x00c0dd51:\n    fcn.00b95a64();\n    return iVar1;\n}\n",
        "token_count": 912
    },
    "00c0dd64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c0dd64(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uchar uVar3;\n    char cVar4;\n    ushort uVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t *extraout_EDX;\n    float10 fVar11;\n    ulong uVar12;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    *(arg_8h + 0x18) = 0;\n    *(arg_8h + 0x1c) = 0;\n    *(arg_8h + 0x2c) = 0;\n    if (0 < *(arg_8h + 0xc)) {\n        arg_10h = arg_10h << 2;\n        do {\n            iVar10 = **(arg_18h + var_8h * 4);\n            iVar9 = iVar10 * 0x18;\n            uVar7 = *(iVar9 + 0x38 + arg_8h);\n            if (uVar7 != 0x10) {\n                *((iVar10 + 2) * 0x18 + arg_8h) = 0;\n            }\n            *(iVar9 + 0x44 + arg_8h) = 0;\n            if (0x10 < uVar7) goto code_r0x00c0df77;\n    // switch table (17 cases) at 0xc0e010\n            switch(*(uVar7 * 4 + 0xc0e010)) {\n            case 0xc0ddcc:\n                iVar1 = *(arg_10h + *(arg_ch + 4));\n                cVar4 = fcn.00b99dae(0x2a);\n                if (cVar4 != '\\0') goto code_r0x00c0dfe3;\n                fcn.00b99997();\n                uVar7 = fcn.00bb2e3c(**(iVar1 + 8));\n                if (uVar7 < 0x10000) {\n                    uVar7 = 0x10000;\n                }\n                uVar8 = fcn.00bb594c(uVar7 + 1);\n                fcn.00b99997();\n                uVar6 = fcn.00bf5b29();\n                fcn.00bb4570(uVar8, uVar6);\n                fcn.00bb106c(uVar6);\ncode_r0x00c0de45:\n                *((iVar10 + 2) * 0x18 + arg_8h) = uVar8;\n                *(iVar9 + 0x44 + arg_8h) = uVar8;\n                break;\n            case 0xc0de60:\n                iVar1 = *(arg_10h + *(arg_ch + 4));\n                cVar4 = fcn.00b99dae(0x2a);\n                if (cVar4 == '\\0') {\n                    fcn.00b99997();\n                    uVar7 = fcn.00bb2e3c(**(iVar1 + 8));\n                    if (uVar7 < 0x10000) {\n                        uVar7 = 0x10000;\n                    }\n                    uVar8 = fcn.00bb594c(uVar7 * 2 + 2);\n                    iVar1 = *(arg_10h + *(arg_ch + 4));\n                    fcn.00b99997();\n                    fcn.00bb2ffc(uVar8, **(iVar1 + 8));\n                    goto code_r0x00c0de45;\n                }\ncode_r0x00c0dfe3:\n                *((iVar10 + 2) * 0x18 + arg_8h) = 0;\n                break;\n            case 0xc0ded2:\n                uVar8 = fcn.00b99c9c();\n                goto code_r0x00c0df6e;\n            case 0xc0dee5:\n                uVar8 = fcn.00b99d46();\n                goto code_r0x00c0df6e;\n            case 0xc0def5:\n                uVar5 = fcn.00b99c9c();\n                *((iVar10 + 2) * 0x18 + arg_8h) = uVar5;\n                break;\n            case 0xc0df0f:\n                uVar3 = fcn.00b99c9c();\n                *((iVar10 + 2) * 0x18 + arg_8h) = uVar3;\n                break;\n            case 0xc0df28:\n                fVar11 = fcn.00b99cf8();\n                *((iVar10 + 2) * 0x18 + arg_8h) = fVar11;\n                break;\n            case 0xc0df47:\n                fVar11 = fcn.00b99cf8();\n                *((iVar10 + 2) * 0x18 + arg_8h) = fVar11;\n                break;\n            case 0xc0df60:\ncode_r0x00c0df69:\n                uVar8 = fcn.00bf89bb();\ncode_r0x00c0df6e:\n                iVar10 = (iVar10 + 2) * 0x18;\ncode_r0x00c0df74:\n                *(iVar10 + arg_8h) = uVar8;\n                break;\n            case 0xc0df9e:\n                uVar12 = fcn.00b99d46();\n                uVar8 = uVar12;\n                iVar10 = (iVar10 + 2) * 0x18;\n                *(iVar10 + 4 + arg_8h) = uVar12 >> 0x20;\n                goto code_r0x00c0df74;\n            case 0xc0dfb8:\n                cVar4 = fcn.00b993dd();\n                if (cVar4 == '\\0') goto code_r0x00c0dfe3;\n                if (extraout_EDX[3] == 8) {\n                    iVar9 = *extraout_EDX;\n                }\n                else {\n                    iVar9 = 0;\n                }\ncode_r0x00c0dfd8:\n                iVar10 = (iVar10 + 2) * 0x18;\n                uVar8 = *(iVar9 + 8);\n                goto code_r0x00c0df74;\n            case 0xc0dfef:\n                if (*(iVar9 + 0x3c + arg_8h) != 0) {\n                    *(iVar9 + 0x3c + arg_8h) = 0;\n                    piVar2 = *(arg_10h + *(arg_ch + 4));\n                    if (piVar2[3] == 0xc) {\n                        iVar9 = *piVar2;\n                        goto code_r0x00c0dfd8;\n                    }\n                    goto code_r0x00c0df69;\n                }\n            }\ncode_r0x00c0df77:\n            arg_10h = arg_10h + 8;\n            var_8h = var_8h + 1;\n        } while (var_8h < *(arg_8h + 0xc));\n    }\n    fcn.00c0cd60();\n    return;\n}\n",
        "token_count": 1680
    },
    "00c0eab2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0eab2(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    \n    if ((**(arg_8h + 4))[3] == 0xc) {\n        uVar1 = *(***(arg_8h + 4) + 0xc);\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = uVar1;\n    }\n    else {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.00be6aa3(1, 0);\n    }\n    return 0;\n}\n",
        "token_count": 160
    },
    "00c0eb06": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0eb06(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uint in_stack_ffffffcc;\n    uint uVar3;\n    \n    if (*(**(arg_8h + 4) + 0xc) == 0xc) {\n        if (((*(arg_8h + 8) < 4) || (cVar1 = fcn.00b99dae(0x29),  cVar1 != '\\0')) ||\n           (iVar2 = fcn.00b99c9c(),  -1 < iVar2 + -1)) {\n            fcn.00b99ac0(*(*(arg_8h + 4) + 4));\n            fcn.00b99c9c();\n            fcn.00b99a20();\n            uVar3 = fcn.00bf64ff(&stack0xffffffe0, *(*(arg_8h + 4) + 8), arg_ch, 1, unaff_ESI);\n            fcn.00be6aa3(uVar3, 0);\n            fcn.00b99a20();\n            return 0;\n        }\n        fcn.00b99a20();\n        uVar3 = 0;\n        arg_ch[3] = 1;\n        in_stack_ffffffcc = 5;\n    }\n    else {\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        uVar3 = 1;\n    }\n    *arg_ch = 0;\n    fcn.00be6aa3(in_stack_ffffffcc, uVar3);\n    return 0;\n}\n",
        "token_count": 381
    },
    "00c0eddd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00c0ee3a)\n// WARNING: Removing unreachable block (ram,0x00c0ee4b)\n// WARNING: Removing unreachable block (ram,0x00c0ee51)\n\nuint __cdecl fcn.00c0eddd(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint var_1h;\n    \n    fcn.00b99997();\n    cVar1 = fcn.00bf3e91(&var_1h);\n    if (cVar1 == '\\0') {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n    }\n    return 0;\n}\n",
        "token_count": 230
    },
    "00c0f121": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0f121(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    double *pdVar4;\n    int32_t **ppiStack688;\n    int32_t iStack684;\n    double dVar5;\n    int32_t iStack652;\n    int32_t iStack648;\n    uchar auStack640 [4];\n    uint uStack636;\n    uint uStack632;\n    uint uStack628;\n    uint uStack624;\n    uchar auStack600 [8];\n    uint uStack592;\n    uchar auStack576 [8];\n    uint uStack568;\n    uchar auStack548 [544];\n    \n    uStack636 = 0xc4b090;\n    iStack684 = 0;\n    ppiStack688 = 0x2;\n    uStack632 = 0;\n    uStack628 = 0;\n    uStack624 = 0;\n    uStack568 = 0x22c;\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)();\n    (*_sym.imp.KERNEL32.dll_Process32FirstW)(arg_8h_00, auStack576);\n    do {\n        fcn.00b977c7();\n        fcn.00b977c7();\n        fcn.00b97f41(auStack548);\n        fcn.00b946f9(0, &stack0xfffffd5c, auStack640);\n        fcn.00b95a64();\n        fcn.00b97c8e(auStack640);\n        if (*(arg_8h + 8) == 0) {\ncode_r0x00c0f1e2:\n            uVar2 = fcn.00c0cd36(uStack592, &ppiStack688);\n            fcn.00c0fee2(uVar2);\n            fcn.00b95a64();\n        }\n        else {\n            iVar1 = **(arg_8h + 4);\n            fcn.00b99997();\n            iVar1 = fcn.00b97a68(*(iVar1 + 8), 0);\n            if (iVar1 == 0) goto code_r0x00c0f1e2;\n        }\n        fcn.00b95a64();\n        fcn.00b95a64();\n        iVar1 = (*_sym.imp.KERNEL32.dll_Process32NextW)(arg_8h_00, auStack600);\n        if (iVar1 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            uVar2 = fcn.00b9942e();\n            fcn.00b991b0(uVar2, 2);\n            piVar3 = fcn.00b98ea0(uVar2, 2, 2);\n            fcn.00b99a20();\n            *piVar3 = iStack648;\n            piVar3[3] = 1;\n            if (iStack648 != 0) {\n                iStack684 = iStack652;\n                do {\n                    fcn.00b98ea0(uVar2, 2, 2);\n                    fcn.00b99b9c(arg_8h_00);\n                    dVar5 = **ppiStack688;\n                    if (**ppiStack688 < 0) {\n                        dVar5 = dVar5 + *0xc4bac8;\n                    }\n                    pdVar4 = fcn.00b98ea0(uVar2, 2, 2);\n                    fcn.00b99a20();\n                    *pdVar4 = dVar5;\n                    *(pdVar4 + 0xc) = 3;\n                    ppiStack688 = ppiStack688 + 1;\n                    iStack684 = iStack684 + 1;\n                    iStack648 = iStack648 + -1;\n                } while (iStack648 != 0);\n            }\n            fcn.00c0cd9a();\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 906
    },
    "00c0f3fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0f3fb(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint uVar3;\n    uint *puVar4;\n    \n    cVar1 = fcn.00c0f929(arg_8h, *(arg_8h + 8));\n    puVar4 = arg_ch;\n    if (cVar1 == '\\0') {\n        fcn.00b99a20();\n        *puVar4 = 0;\n        puVar4[3] = 1;\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        puVar4 = &arg_8h;\n        arg_8h = 1;\n        uVar2 = extraout_ECX;\n        fcn.00baff13(puVar4);\n        uVar3 = 0;\n        *(in_ECX + 0xf8) = 8;\n        fcn.00ba0b30(0);\n        uVar2 = fcn.00baff9a(uVar3, puVar4, uVar2);\n        fcn.00b99e9c(uVar2);\n    }\n    return 0;\n}\n",
        "token_count": 289
    },
    "00c0f481": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0f481(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint *puVar3;\n    uint uVar4;\n    uint var_4h;\n    \n    cVar1 = fcn.00c0f929(arg_8h, *(arg_8h + 8));\n    puVar3 = arg_ch;\n    if (cVar1 == '\\0') {\n        fcn.00b99a20();\n    }\n    else {\n        arg_8h = arg_8h & 0xffffff;\n        cVar1 = fcn.00bf3e91(&arg_8h + 3);\n        puVar3 = arg_ch;\n        if (cVar1 != '\\0') {\n            if (arg_8h._3_1_ != '\\0') {\n                uVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x100400, 0, in_ECX);\n                *(in_ECX + 0x448) = uVar2;\n                puVar3 = &arg_8h;\n                arg_8h = 1;\n                uVar2 = extraout_ECX;\n                fcn.00baff13(puVar3);\n                uVar4 = 0;\n                *(in_ECX + 0xf8) = 9;\n                fcn.00ba0b30(0);\n                uVar2 = fcn.00baff9a(uVar4, puVar3, uVar2);\n                fcn.00b99e9c(uVar2);\n                return 0;\n            }\n            fcn.00baff61(0xcccccccc, 0);\n            return 0;\n        }\n        fcn.00b99a20();\n    }\n    puVar3[3] = 1;\n    *puVar3 = 0;\n    fcn.00be6aa3(1, 0);\n    return 0;\n}\n",
        "token_count": 453
    },
    "00c11f52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c11f52(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00b99997();\n    puVar3 = **(iVar2 + 8);\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    uVar1 = *puVar3;\n    if (uVar1 != 0) {\n        do {\n            iVar2 = fcn.00bb385a(uVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            puVar3 = puVar3 + 1;\n            uVar1 = *puVar3;\n        } while (uVar1 != 0);\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 240
    },
    "00c11fb2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c11fb2(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00b99997();\n    piVar3 = **(iVar2 + 8);\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar1 = *piVar3;\n    if (iVar1 != 0) {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_IsCharAlphaNumericW)(iVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            piVar3 = piVar3 + 1;\n            iVar1 = *piVar3;\n        } while (iVar1 != 0);\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 240
    },
    "00c12012": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c12012(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00b99997();\n    piVar3 = **(iVar2 + 8);\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar1 = *piVar3;\n    if (iVar1 != 0) {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_IsCharAlphaW)(iVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            piVar3 = piVar3 + 1;\n            iVar1 = *piVar3;\n        } while (iVar1 != 0);\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 238
    },
    "00c12072": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c12072(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00b99997();\n    puVar3 = **(iVar2 + 8);\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    uVar1 = *puVar3;\n    if (uVar1 != 0) {\n        do {\n            iVar2 = fcn.00bb386c(uVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            puVar3 = puVar3 + 1;\n            uVar1 = *puVar3;\n        } while (uVar1 != 0);\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 239
    },
    "00c12132": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c12132(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00b99997();\n    piVar3 = **(iVar2 + 8);\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar1 = *piVar3;\n    if (iVar1 != 0) {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_IsCharLowerW)(iVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            piVar3 = piVar3 + 1;\n            iVar1 = *piVar3;\n        } while (iVar1 != 0);\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 238
    },
    "00c121fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c121fb(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00b99997();\n    piVar3 = **(iVar2 + 8);\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar1 = *piVar3;\n    if (iVar1 != 0) {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_IsCharUpperW)(iVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            piVar3 = piVar3 + 1;\n            iVar1 = *piVar3;\n        } while (iVar1 != 0);\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 238
    },
    "00c1225b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1225b(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00b99997();\n    puVar3 = **(iVar2 + 8);\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    uVar1 = *puVar3;\n    if (uVar1 != 0) {\n        do {\n            iVar2 = fcn.00bb388e(uVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            puVar3 = puVar3 + 1;\n            uVar1 = *puVar3;\n        } while (uVar1 != 0);\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 240
    },
    "00c12e84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00c12e84(uint *param_1)\n\n{\n    ushort uVar1;\n    ushort *puVar2;\n    ushort *puVar3;\n    \n    if (param_1[1] != 0) {\n        puVar2 = *param_1;\n        puVar3 = puVar2 + param_1[1] + -1;\n        for (; puVar2 < puVar3; puVar2 = puVar2 + 1) {\n            uVar1 = *puVar2;\n            *puVar2 = *puVar3;\n            *puVar3 = uVar1;\n            puVar3 = puVar3 + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00c13026": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c13026(uint arg_8h, uint arg_ch)\n\n{\n    uint hmenu;\n    int32_t iVar1;\n    uint *arg_ch_00;\n    uint *arg_10h;\n    uint var_4h;\n    \n    arg_10h = &var_4h;\n    arg_ch_00 = &arg_8h;\n    hmenu = fcn.00b99c9c();\n    iVar1 = fcn.00bf2d91(hmenu, arg_ch_00, arg_10h);\n    if (iVar1 == 0) {\n        fcn.00be6aa3(1, 0);\n        fcn.00b99bf8(0xc1f910);\n    }\n    else {\n        fcn.00b99bf8(arg_8h);\n        fcn.00bb106c(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 202
    },
    "00c13d7b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c13d7b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.00b99bf8(0xc1f910);\n    fcn.00b9b9ad(arg_8h);\n    iVar1 = fcn.00b9b93d(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            iVar1 = -iVar1;\n        }\n        else {\n            iVar1 = 1;\n        }\n        fcn.00be6aa3(iVar1, 0);\n    }\n    else {\n        fcn.00ba6259();\n        fcn.00b977c7();\n        fcn.00bea52f(**(in_ECX + 0x1f0), &stack0xfffffeac);\n        fcn.00b99b9c(&stack0xfffffea4);\n        fcn.00b95a64();\n        fcn.00ba61fe();\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "00c13e17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c13e17(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t in_ECX;\n    \n    cVar2 = fcn.00c135ca(arg_8h);\n    if (cVar2 == '\\0') {\n        fcn.00be6aa3(1, 0);\n        fcn.00b99a20();\n        *arg_ch = 0;\n    }\n    else {\n        uVar1 = **(in_ECX + 0x2fc);\n        fcn.00b99a20();\n        *arg_ch = uVar1;\n    }\n    arg_ch[3] = 7;\n    return 0;\n}\n",
        "token_count": 165
    },
    "00c13fa3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c13fa3(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    \n    fcn.00b99bf8(0xc1f910);\n    cVar1 = fcn.00c135ca(arg_8h);\n    if (cVar1 == '\\0') {\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        fcn.00b977c7();\n        cVar1 = fcn.00beafdc(&stack0xffffffe0);\n        if (cVar1 == '\\0') {\n            fcn.00be6aa3(1, 0);\n        }\n        else {\n            fcn.00b99b9c(&stack0xffffffdc);\n        }\n        fcn.00b95a64();\n    }\n    return 0;\n}\n",
        "token_count": 190
    },
    "00c14955": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c14955(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    \n    *(in_ECX + 0x98) = 0;\n    cVar1 = fcn.00b99399();\n    if (cVar1 != '\\0') {\n        fcn.00b9b9ad(arg_8h_00);\n        iVar2 = fcn.00b9b93d(1);\n        if (iVar2 < 1) {\n            if (iVar2 < 0) {\n                fcn.00be6aa3(-iVar2, 0);\n            }\n            fcn.00b99a20();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n        }\n        else {\n            *(in_ECX + 0x98) = **(in_ECX + 0x1f0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 232
    },
    "00c14ec6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c14ec6(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    fcn.00b9b9ad(arg_8h);\n    iVar2 = fcn.00b9b93d(1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            fcn.00be6aa3(-iVar2, 0);\n        }\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        iVar2 = **(in_ECX + 0x1f0);\n        iVar3 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        if (iVar2 == iVar3) {\n            fcn.00bf54e6();\n        }\n        iVar2 = fcn.00b94a35(**(in_ECX + 0x1f0));\n        if (iVar2 == 0) {\n            fcn.00b99a20();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n        }\n        else {\n            uVar1 = **(in_ECX + 0x1f0);\n            fcn.00b99a20();\n            arg_ch[3] = 7;\n            *arg_ch = uVar1;\n            fcn.00baff61(iVar2, 0);\n        }\n        fcn.00bf54e6();\n    }\n    return 0;\n}\n",
        "token_count": 359
    },
    "00c14f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c14f90(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.00b9b9ad(arg_8h);\n    iVar1 = fcn.00c161ac();\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.00be6aa3(-iVar1, 0);\n        }\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        uVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        fcn.00b99a20();\n        *arg_ch = uVar2;\n        arg_ch[3] = 7;\n    }\n    return 0;\n}\n",
        "token_count": 189
    },
    "00c14ff6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c14ff6(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.00b9b9ad(arg_8h);\n    iVar1 = fcn.00b9b93d(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.00be6aa3(-iVar1, 0);\n        }\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        (*_sym.imp.USER32.dll_PostMessageW)(**(in_ECX + 0x1f0), 0x10, 0, 0);\n        fcn.00bf54e6();\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "00c15060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c15060(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    fcn.00b9b9ad(arg_8h);\n    iVar1 = fcn.00b9b93d(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.00be6aa3(-iVar1, 0);\n        }\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 136
    },
    "00c15175": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c15175(uint noname_0, uint *arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetForegroundWindow;\n    uVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    fcn.00bf387d();\n    iVar3 = (*_sym.imp.USER32.dll_GetCaretPos)(&var_ch);\n    if (iVar3 == 0) {\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        fcn.00be6aa3(1, 0);\n    }\n    else {\n        (*_sym.imp.USER32.dll_ClientToScreen)(uVar2, &var_ch);\n        uVar2 = (*pcVar1)();\n        fcn.00c03c94(*(in_ECX + 0x108), &var_14h, uVar2);\n        var_ch = var_ch - var_14h;\n        var_8h = var_8h - var_10h;\n        uVar2 = fcn.00b9942e();\n        fcn.00b991b0(uVar2, 1);\n        var_24h = var_ch;\n        var_1ch = 0;\n        var_18h = 1;\n        fcn.00b99040(uVar2, &var_24h, 1);\n        fcn.00b99a20();\n        var_24h = var_8h;\n        var_1ch = 0;\n        var_18h = 1;\n        fcn.00b99040(uVar2, &var_24h, 1);\n        fcn.00b99a20();\n    }\n    fcn.00bf387d();\n    return 0;\n}\n",
        "token_count": 486
    },
    "00c1526f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1526f(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    fcn.00b9b9ad(arg_8h);\n    iVar1 = fcn.00b9b93d(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            iVar1 = -iVar1;\n        }\n        else {\n            iVar1 = 1;\n        }\n        fcn.00be6aa3(iVar1, 0);\n        fcn.00b99bf8(0xc1f910);\n    }\n    else {\n        fcn.00b977c7();\n        fcn.00bf4618();\n        fcn.00b99b9c(&stack0xffffffe0);\n        fcn.00b95a64();\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "00c152ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c152ef(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uchar auStack32 [28];\n    \n    fcn.00b9b9ad(arg_8h);\n    fcn.00b99a20();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar1 = fcn.00b9b93d(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            iVar1 = -iVar1;\n            goto code_r0x00c153c2;\n        }\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetClientRect)(**(in_ECX + 0x1f0), auStack32);\n        if (iVar1 != 0) {\n            arg_8h_00 = fcn.00b9942e();\n            fcn.00b991b0(arg_8h_00, 1);\n            fcn.00b99040(arg_8h_00, &stack0xffffffd0, 1);\n            fcn.00b99a20();\n            fcn.00b99040(arg_8h_00, &stack0xffffffd0, 1);\n            fcn.00b99a20();\n            return 0;\n        }\n    }\n    iVar1 = 1;\ncode_r0x00c153c2:\n    fcn.00be6aa3(iVar1, 0);\n    return 0;\n}\n",
        "token_count": 356
    },
    "00c153d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c153d9(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    fcn.00b9b9ad(arg_8h);\n    iVar2 = fcn.00b9b93d(1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            iVar2 = -iVar2;\n        }\n        else {\n            iVar2 = 1;\n        }\n        fcn.00be6aa3(iVar2, 0);\n        fcn.00b99a20();\n        *arg_ch = 0;\n    }\n    else {\n        uVar1 = **(in_ECX + 0x1f0);\n        fcn.00b99a20();\n        *arg_ch = uVar1;\n    }\n    arg_ch[3] = 7;\n    return 0;\n}\n",
        "token_count": 213
    },
    "00c1543e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1543e(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t iStack44;\n    int32_t aiStack40 [2];\n    uint uStack32;\n    uint uStack28;\n    \n    fcn.00b9b9ad(arg_8h);\n    iVar1 = fcn.00b9b93d(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            iVar1 = -iVar1;\n        }\n        else {\n            iVar1 = 1;\n        }\n        fcn.00be6aa3(iVar1, 0);\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n    }\n    else {\n        fcn.00beaf6a(&stack0xffffffd0, 0);\n        arg_8h_00 = fcn.00b9942e();\n        fcn.00b991b0(arg_8h_00, 1);\n        uStack32 = 0;\n        uStack28 = 1;\n        fcn.00b99040(arg_8h_00, aiStack40, 1);\n        fcn.00b99a20();\n        uStack32 = 0;\n        uStack28 = 1;\n        fcn.00b99040(arg_8h_00, aiStack40, 1);\n        fcn.00b99a20();\n        aiStack40[0] = unaff_EBX - unaff_EDI;\n        uStack32 = 0;\n        uStack28 = 1;\n        fcn.00b99040(arg_8h_00, aiStack40, 1);\n        fcn.00b99a20();\n        aiStack40[0] = iStack44 - unaff_ESI;\n        uStack32 = 0;\n        uStack28 = 1;\n        fcn.00b99040(arg_8h_00, aiStack40, 1);\n        fcn.00b99a20();\n    }\n    return 0;\n}\n",
        "token_count": 510
    },
    "00c15573": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c15573(int32_t arg_8h, double *arg_ch)\n\n{\n    double dVar1;\n    double *pdVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    fcn.00b9b9ad(arg_8h);\n    iVar3 = fcn.00b9b93d(1);\n    if (iVar3 < 1) {\n        if (iVar3 < 0) {\n            fcn.00be6aa3(-iVar3, 0);\n        }\n        pdVar2 = arg_ch;\n        fcn.00b99a20();\n        *pdVar2 = 0xffffffff;\n        *(pdVar2 + 0xc) = 1;\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(**(in_ECX + 0x1f0), &arg_8h);\n        pdVar2 = arg_ch;\n        dVar1 = arg_8h;\n        if (arg_8h < 0) {\n            dVar1 = dVar1 + *0xc4bac8;\n        }\n        fcn.00b99a20();\n        *pdVar2 = dVar1;\n        *(pdVar2 + 0xc) = 3;\n    }\n    return 0;\n}\n",
        "token_count": 292
    },
    "00c155fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c155fd(uint arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    \n    uVar3 = 1;\n    fcn.00b9b9ad(arg_8h);\n    iVar1 = fcn.00b9b93d(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            iVar1 = -iVar1;\n        }\n        else {\n            iVar1 = 1;\n        }\n        fcn.00be6aa3(iVar1, 0);\n        fcn.00b99a20();\n        *arg_ch = 0;\n    }\n    else {\n        iVar1 = **(in_ECX + 0x1f0);\n        iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(iVar1);\n        if (iVar2 != 0) {\n            uVar3 = 3;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar1);\n        if (iVar2 != 0) {\n            uVar3 = uVar3 | 4;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        if (iVar2 == iVar1) {\n            uVar3 = uVar3 | 8;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_IsIconic)(iVar1);\n        if (iVar2 != 0) {\n            uVar3 = uVar3 | 0x10;\n        }\n        iVar1 = (*_sym.imp.USER32.dll_IsZoomed)(iVar1);\n        if (iVar1 != 0) {\n            uVar3 = uVar3 | 0x20;\n        }\n        fcn.00b99a20();\n        *arg_ch = uVar3;\n    }\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 437
    },
    "00c156a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c156a8(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    fcn.00b9b9ad(arg_8h);\n    iVar2 = fcn.00b9b93d(1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            fcn.00be6aa3(-iVar2, 0);\n        }\n        fcn.00b99bf8(0xc1f910);\n    }\n    else {\n        cVar1 = fcn.00ba619a(**(in_ECX + 0x1f0));\n        if (cVar1 == '\\0') {\n            fcn.00b977c7();\n            fcn.00bf4b42(&stack0xffffffdc);\n            fcn.00b99b9c(&stack0xffffffdc);\n            fcn.00b95a64();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 232
    },
    "00c1573d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1573d(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    fcn.00b9b9ad(arg_8h);\n    iVar1 = fcn.00b9b93d(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.00be6aa3(-iVar1, 0);\n        }\n        fcn.00b99bf8(0xc1f910);\n    }\n    else {\n        fcn.00b977c7();\n        fcn.00beafdc(&stack0xffffffe0);\n        fcn.00b99b9c(&stack0xffffffdc);\n        fcn.00b95a64();\n    }\n    return 0;\n}\n",
        "token_count": 180
    },
    "00c157b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c157b8(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    fcn.00b9b9ad(arg_8h);\n    iVar1 = fcn.00b9b93d(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.00be6aa3(-iVar1, 0);\n        }\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        fcn.00bf568b();\n        fcn.00bf54e6();\n    }\n    return 0;\n}\n",
        "token_count": 161
    },
    "00c15e5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c15e5c(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    \n    fcn.00b9b9ad(arg_8h);\n    iVar3 = fcn.00b9b93d(1);\n    if (iVar3 < 1) {\n        if (iVar3 < 0) {\n            fcn.00be6aa3(-iVar3, 0);\n        }\n        fcn.00b99a20();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n    }\n    else {\n        cVar2 = fcn.00ba619a(**(in_ECX + 0x1f0));\n        if (cVar2 == '\\0') {\n            uVar1 = **(in_ECX + 0x1f0);\n            iVar3 = fcn.00b99c9c();\n            if (iVar3 == 1) {\n                uVar4 = 0xffffffff;\n            }\n            else {\n                uVar4 = 0xfffffffe;\n            }\n            (*_sym.imp.USER32.dll_SetWindowPos)(uVar1, uVar4, 0, 0, 0, 0, 0x13);\n        }\n        else {\n            fcn.00b99a20();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 345
    },
    "00c15efb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c15efb(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.00b9b9ad(arg_8h);\n    iVar1 = fcn.00b9b93d(1);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.00be6aa3(-iVar1, 0);\n        }\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        iVar1 = fcn.00b99c9c();\n        if (iVar1 == 0x40) {\n            fcn.00beae8f(1);\n        }\n        else if (iVar1 == 0x41) {\n            (*_sym.imp.USER32.dll_EnableWindow)(**(in_ECX + 0x1f0), 0);\n        }\n        else {\n            (*_sym.imp.USER32.dll_ShowWindow)(**(in_ECX + 0x1f0), iVar1);\n            fcn.00bf54e6();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 272
    },
    "00c15f98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c15f98(uint32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    \n    uVar4 = arg_8h;\n    fcn.00b99c9c();\n    uVar2 = fcn.00b99c9c();\n    arg_8h = arg_8h & 0xffffff00 | uVar2;\n    fcn.00b9b9ad(uVar4);\n    iVar3 = fcn.00b9b93d(1);\n    if (iVar3 < 1) {\n        if (iVar3 < 0) {\n            fcn.00be6aa3(-iVar3, 0);\n        }\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        uVar1 = **(in_ECX + 0x1f0);\n        uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar1, 0xffffffec);\n        if ((uVar2 == 0xff) && ((uVar4 & 0x80000) != 0)) {\n            (*_sym.imp.USER32.dll_SetWindowLongW)(uVar1, 0xffffffec, uVar4 ^ 0x80000);\n        }\n        else {\n            (*_sym.imp.USER32.dll_SetWindowLongW)(uVar1, 0xffffffec, uVar4 | 0x80000);\n            (*_sym.imp.USER32.dll_SetLayeredWindowAttributes)(uVar1, 0, arg_8h, 2);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 401
    },
    "00c1604c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1604c(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint uVar2;\n    uint *arg_8h_00;\n    \n    fcn.00c1620b(arg_8h);\n    arg_8h_00 = &arg_8h;\n    arg_8h = 1;\n    uVar1 = extraout_ECX;\n    fcn.00baff13(arg_8h_00);\n    uVar2 = 0;\n    *(in_ECX + 0xf8) = 3;\n    fcn.00ba0b30(0);\n    uVar1 = fcn.00baff9a(uVar2, arg_8h_00, uVar1);\n    fcn.00b99e9c(uVar1);\n    return 0;\n}\n",
        "token_count": 206
    },
    "00c160a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c160a4(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint uVar2;\n    uint *arg_8h_00;\n    \n    fcn.00c1620b(arg_8h);\n    arg_8h_00 = &arg_8h;\n    arg_8h = 1;\n    uVar1 = extraout_ECX;\n    fcn.00baff13(arg_8h_00);\n    uVar2 = 0;\n    *(in_ECX + 0xf8) = 5;\n    fcn.00ba0b30(0);\n    uVar1 = fcn.00baff9a(uVar2, arg_8h_00, uVar1);\n    fcn.00b99e9c(uVar1);\n    return 0;\n}\n",
        "token_count": 206
    },
    "00c160fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c160fc(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint uVar2;\n    uint *arg_8h_00;\n    \n    fcn.00c1620b(arg_8h);\n    arg_8h_00 = &arg_8h;\n    arg_8h = 1;\n    uVar1 = extraout_ECX;\n    fcn.00baff13(arg_8h_00);\n    uVar2 = 0;\n    *(in_ECX + 0xf8) = 4;\n    fcn.00ba0b30(0);\n    uVar1 = fcn.00baff9a(uVar2, arg_8h_00, uVar1);\n    fcn.00b99e9c(uVar1);\n    return 0;\n}\n",
        "token_count": 205
    },
    "00c16154": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c16154(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint uVar2;\n    uint *arg_8h_00;\n    \n    fcn.00c1620b(arg_8h);\n    arg_8h_00 = &arg_8h;\n    arg_8h = 1;\n    uVar1 = extraout_ECX;\n    fcn.00baff13(arg_8h_00);\n    uVar2 = 0;\n    *(in_ECX + 0xf8) = 6;\n    fcn.00ba0b30(0);\n    uVar1 = fcn.00baff9a(uVar2, arg_8h_00, uVar1);\n    fcn.00b99e9c(uVar1);\n    return 0;\n}\n",
        "token_count": 205
    },
    "00c161ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00c161ac(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00b9b93d(0);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            fcn.00be6aa3(-iVar1, 0);\n        }\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        iVar3 = 1;\n        if (0 < *(param_1 + 0x2e8)) {\n            ppiVar2 = *(param_1 + 0x2e4);\n            do {\n                if (**ppiVar2 == iVar1) {\n                    return 1;\n                }\n                iVar3 = iVar3 + 1;\n                ppiVar2 = ppiVar2 + 1;\n            } while (iVar3 <= *(param_1 + 0x2e8));\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 243
    },
    "00c1631f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1631f(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    uint *puVar1;\n    char cVar2;\n    uint arg_8h_01;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint arg_10h_00;\n    uint arg_14h_00;\n    uint arg_18h_00;\n    int32_t var_4h;\n    \n    puVar1 = arg_ch;\n    arg_8h_00 = arg_ch[0x71];\n    var_4h = in_ECX;\n    if (0 < arg_8h_00) {\n        arg_ch[0x71] = 0;\n        puVar3 = arg_ch;\n        arg_10h_00 = arg_10h;\n        arg_14h_00 = arg_14h;\n        arg_18h_00 = arg_18h;\n        arg_8h_01 = fcn.00bb6ccd(arg_8h_00);\n        fcn.00c1631f(arg_8h_01, puVar3, arg_10h_00, arg_14h_00, arg_18h_00);\n    }\n    cVar2 = fcn.00b92402(arg_8h, &arg_ch, &var_4h);\n    if (cVar2 != '\\0') {\n        puVar3 = fcn.00bb0ff6(0x24);\n        if (puVar3 == NULL) {\n            puVar3 = NULL;\n        }\n        else {\n            fcn.00b977c7();\n        }\n        arg_ch = puVar3;\n        fcn.00b981a7(**(*(in_ECX + 0x74) + var_4h * 4) + 0x14);\n        *puVar3 = arg_8h;\n        puVar3[5] = *puVar1;\n        puVar3[6] = arg_10h;\n        puVar3[7] = arg_14h;\n        puVar3[8] = arg_18h;\n        fcn.00c1be3f(&arg_ch);\n    }\n    return;\n}\n",
        "token_count": 513
    },
    "00c163d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c163d0(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    piVar1 = fcn.00bb0ff6(0x24);\n    if (piVar1 == NULL) {\n        piVar1 = NULL;\n    }\n    else {\n        fcn.00b977c7();\n    }\n    var_4h = piVar1;\n    fcn.00b981a7(arg_ch + arg_8h * 4 + 0x57);\n    *piVar1 = arg_8h;\n    piVar1[5] = *arg_ch;\n    piVar1[6] = 0;\n    piVar1[7] = arg_10h;\n    piVar1[8] = arg_14h;\n    fcn.00c1be3f(&var_4h);\n    return;\n}\n",
        "token_count": 238
    },
    "00c187ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00c187ec(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.00b92402(arg_8h, &var_8h, &var_4h);\n    if (cVar1 == '\\0') {\n        bVar2 = false;\n    }\n    else {\n        bVar2 = *(**(*0xc56824 + var_4h * 4) + 0x90) == '\\x13';\n        if (bVar2) {\n            fcn.00b981a7(arg_ch);\n            *(**(*0xc56824 + var_4h * 4) + 0x98) = arg_10h;\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 201
    },
    "00c18851": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00c18851(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.00b92402(arg_8h, &var_8h, &var_4h);\n    if ((cVar1 == '\\0') || (*(**(*0xc56824 + var_4h * 4) + 0x90) != '\\x15')) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.00b99e9c(&arg_ch);\n        uVar2 = fcn.00c1b60b(arg_8h, 0);\n    }\n    fcn.00b99a20();\n    return uVar2;\n}\n",
        "token_count": 187
    },
    "00c19a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00c19a20(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.00b92402(arg_8h, &var_8h, &var_4h);\n    if (cVar1 != '\\0') {\n        fcn.00b981a7(arg_ch);\n    }\n    return cVar1 != '\\0';\n}\n",
        "token_count": 108
    },
    "00c1af23": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00c1af23(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t arg_10h_00;\n    \n    uVar1 = fcn.00bb7e51(*arg_ch, arg_10h);\n    if (uVar1 == 0) {\n        uVar2 = fcn.00bb2e3c(*arg_ch);\n        arg_10h_00 = uVar2;\n    }\n    else {\n        uVar2 = uVar1;\n        arg_10h_00 = uVar1 - *arg_ch >> 1;\n    }\n    if (arg_10h_00 < 0xfff) {\n        fcn.00bb42ee(arg_8h, *arg_ch, arg_10h_00);\n        *(arg_8h + arg_10h_00 * 2) = 0;\n        if (uVar1 != 0) {\n            arg_10h_00 = arg_10h_00 + 1;\n        }\n        *arg_ch = *arg_ch + arg_10h_00 * 2;\n        uVar2 = arg_10h_00 * 2 & 0xffffff00 | arg_10h_00 != 0;\n    }\n    else {\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    return uVar2;\n}\n",
        "token_count": 330
    },
    "00c1b8ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1b8ef(uint lpCommandLine)\n\n{\n    int32_t iVar1;\n    \n    fcn.00bb3020(0xc57f20, 0, 0x44);\n    fcn.00bb3020(0xc57f64, 0, 0x10);\n    *0xc57f20 = 0x44;\n    *0xc57f4c = 1;\n    *0xc57f50 = 1;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, lpCommandLine, 0, 0, 0, 0x20, 0, 0, 0xc57f20, 0xc57f64);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0xc57f64);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00c1cc88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1cc88(uint X)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t lpRect;\n    int32_t var_18h;\n    int32_t nWidth;\n    int32_t nHeight;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t Y;\n    \n    iVar3 = fcn.00b92612(X);\n    piVar1 = **(*0xc56810 + iVar3 * 4);\n    (*_sym.imp.USER32.dll_GetWindowRect)(*piVar1, &lpRect);\n    iVar3 = lpRect - piVar1[0xf];\n    Y = var_18h - piVar1[0x10];\n    if (piVar1[3] == -0x80000000) {\n        var_8h = 0;\n        var_ch = *0xc56814;\n        uVar4 = 0;\n        uVar5 = *0xc56814;\n        if (*0xc56814 != 0) {\n            do {\n                if (*0xc567d0 <= var_8h) break;\n                puVar2 = **(*0xc56810 + uVar4 * 4);\n                if ((puVar2 != NULL) && (var_8h = var_8h + 1,  puVar2[2] == *piVar1)) {\n                    (*_sym.imp.USER32.dll_GetWindowRect)(*puVar2, &lpRect);\n                    nHeight = nHeight - var_18h;\n                    nWidth = nWidth - lpRect;\n                    lpRect = lpRect + iVar3;\n                    var_18h = var_18h + Y;\n                    (*_sym.imp.USER32.dll_MoveWindow)(***(*0xc56810 + uVar4 * 4), lpRect, var_18h, nWidth, nHeight, 1);\n                    uVar5 = var_ch;\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < uVar5);\n        }\n    }\n    piVar1[0xf] = piVar1[0xf] + iVar3;\n    piVar1[0x10] = piVar1[0x10] + Y;\n    return;\n}\n",
        "token_count": 523
    },
    "00c1dcfa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1dcfa(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    ushort *puVar2;\n    bool bVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    puVar2 = *(in_ECX + 0x2c);\n    if (0 < *(in_ECX + 0x30)) {\n        do {\n            iVar1 = fcn.00bb16c4(in_EDX, puVar2 + 1, arg_8h * 2);\n            bVar3 = iVar1 < 0;\n            if (iVar1 == 0) {\n                if (puVar2[arg_8h + 1] != 0) {\n                    bVar3 = true;\n                    goto code_r0x00c1dd3a;\n                }\n            }\n            else {\ncode_r0x00c1dd3a:\n                if (bVar3) {\n                    fcn.00bb8020(puVar2 + *(in_ECX + 0x34), puVar2, (*(in_ECX + 0x30) - var_4h) * *(in_ECX + 0x34) * 2);\n                    break;\n                }\n            }\n            puVar2 = puVar2 + *(in_ECX + 0x34);\n            var_4h = var_4h + 1;\n        } while (var_4h < *(in_ECX + 0x30));\n    }\n    *puVar2 = arg_ch;\n    fcn.00bb1080(puVar2 + 1, in_EDX, arg_8h * 2);\n    puVar2[arg_8h + 1] = 0;\n    *(in_ECX + 0x30) = *(in_ECX + 0x30) + 1;\n    return;\n}\n",
        "token_count": 439
    },
    "00c1dfe1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00c1dfe1(uint param_1, uint32_t param_2)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    uVar2 = 5;\n    while ((param_2 != uVar2 || (iVar3 = fcn.00ba8395(param_2),  iVar3 != 0))) {\n        puVar1 = iVar4 + 0xc478fd;\n        uVar2 = *puVar1;\n        iVar4 = iVar4 + 1;\n        if (*puVar1 == 0) {\n            return -1;\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 183
    },
    "00c1e0a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1e0a9(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t in_ECX;\n    \n    for (; (arg_8h != NULL && (in_ECX <= arg_8h[1])); arg_8h = *arg_8h) {\n        iVar1 = fcn.00ba8481(arg_ch, arg_10h, 0);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 130
    },
    "00c1e0e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00c1e0e7(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = *(param_1 + 0x3c);\n    iVar2 = iVar1 * 2;\n    if (0x32000 < iVar2) {\n        iVar2 = 0x32000;\n    }\n    if ((iVar1 < 0x32000) && (99 < iVar2 - iVar1)) {\n        iVar1 = (**0xc3574c)(iVar2 * 2);\n        if (iVar1 == 0) {\n            uVar3 = 0x15;\n        }\n        else {\n            fcn.00bb1080(iVar1, *(param_1 + 0x10), *(param_1 + 0x3c) * 2);\n            *(param_1 + 0x20) = iVar1 + (*(param_1 + 0x20) - *(param_1 + 0x10) >> 1) * 2;\n            if (0x800 < *(param_1 + 0x3c)) {\n                (**0xc35748)(*(param_1 + 0x10));\n            }\n            *(param_1 + 0x10) = iVar1;\n            uVar3 = 0;\n            *(param_1 + 0x3c) = iVar2;\n        }\n    }\n    else {\n        uVar3 = 0x48;\n    }\n    return uVar3;\n}\n",
        "token_count": 341
    },
    "00c1e65f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00c1e65f(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    \n    if ((0x2f < *param_1) && (*param_1 < 0x3a)) {\n        do {\n            puVar2 = param_1;\n            param_1 = puVar2 + 1;\n            if (*param_1 < 0x30) break;\n        } while (*param_1 < 0x3a);\n        if (*param_1 == 0x7d) {\n            return true;\n        }\n        puVar2 = puVar2 + 2;\n        if (*param_1 == 0x2c) {\n            uVar1 = *puVar2;\n            if (uVar1 == 0x7d) {\n                return true;\n            }\n            if ((0x2f < uVar1) && (uVar1 < 0x3a)) {\n                do {\n                    puVar2 = puVar2 + 1;\n                    if (*puVar2 < 0x30) break;\n                } while (*puVar2 < 0x3a);\n                return *puVar2 == 0x7d;\n            }\n        }\n    }\n    return false;\n}\n",
        "token_count": 286
    },
    "00c1e6d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.00c1e6d1(int32_t *arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar2 = 0;\n    do {\n        uVar1 = *in_ECX;\n        if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n            iVar3 = iVar2;\n            if (*in_ECX == 0x7d) goto code_r0x00c1e71e;\n            in_ECX = in_ECX + 1;\n            uVar1 = *in_ECX;\n            iVar3 = -1;\n            if (uVar1 == 0x7d) goto code_r0x00c1e71e;\n            iVar3 = 0;\n            goto code_r0x00c1e76d;\n        }\n        in_ECX = in_ECX + 1;\n        iVar2 = (uVar1 - 0x30) + iVar2 * 10;\n    } while (iVar2 < 0x10000);\ncode_r0x00c1e72e:\n    *arg_ch = 5;\n    return in_ECX;\ncode_r0x00c1e76d:\n    if ((uVar1 < 0x30) || (0x39 < uVar1)) {\n        if (iVar3 < iVar2) {\n            *arg_ch = 4;\n            return in_ECX;\n        }\ncode_r0x00c1e71e:\n        *in_EDX = iVar2;\n        *arg_8h = iVar3;\n        return in_ECX;\n    }\n    in_ECX = in_ECX + 1;\n    iVar3 = (uVar1 - 0x30) + iVar3 * 10;\n    if (0xffff < iVar3) goto code_r0x00c1e72e;\n    uVar1 = *in_ECX;\n    goto code_r0x00c1e76d;\n}\n",
        "token_count": 478
    },
    "00c1e781": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1e781(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    iVar1 = *(arg_ch + 8);\n    do {\n        *(uVar2 + in_ECX) = *(uVar2 + in_ECX) | ~*(in_EDX + iVar1 + uVar2);\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x20);\n    return;\n}\n",
        "token_count": 142
    },
    "00c1e7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1e7a0(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    iVar1 = *(arg_ch + 8);\n    do {\n        *(uVar2 + in_ECX) = *(uVar2 + in_ECX) | *(in_EDX + iVar1 + uVar2);\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x20);\n    return;\n}\n",
        "token_count": 143
    },
    "00c1e958": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00c1e958(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if ((arg_ch < 0) || (arg_8h <= arg_ch)) {\n        iVar2 = -7;\n    }\n    else {\n        iVar2 = *(in_EDX + 4 + arg_ch * 8) - *(in_EDX + arg_ch * 8);\n        iVar1 = (**0xc3574c)(iVar2 * 2 + 2);\n        if (iVar1 == 0) {\n            iVar2 = -6;\n        }\n        else {\n            fcn.00bb1080(iVar1, in_ECX + *(in_EDX + arg_ch * 8) * 2, iVar2 * 2);\n            *(iVar1 + iVar2 * 2) = 0;\n            *arg_10h = iVar1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 252
    },
    "00c1e9c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00c1e9c8(int32_t param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    \n    param_1 = param_1 - param_2;\n    while ((uVar1 = *(param_1 + param_2),  uVar1 != 0 || (*param_2 != 0))) {\n        uVar2 = *param_2;\n        param_2 = param_2 + 1;\n        if (uVar1 != uVar2) {\n            return (uVar2 < uVar1) * 2 + -1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 157
    },
    "00c1ef60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1ef60(int32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_ECX;\n    int32_t in_EDX;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint uVar5;\n    \n    uVar5 = 2;\n    puVar4 = in_ECX;\n    if (in_EDX < 0) {\n        uVar1 = *in_ECX;\n        puVar2 = in_ECX;\n        while (uVar1 != 0) {\n            puVar2 = puVar2 + 1;\n            uVar1 = *puVar2;\n        }\n        in_EDX = puVar2 - in_ECX >> 1;\n    }\n    do {\n        if (in_EDX < 1) {\n            return 0;\n        }\n        iVar3 = in_EDX + -1;\n        if ((*puVar4 & 0xf800) == 0xd800) {\n            if ((*puVar4 & 0x400) != 0) {\n                uVar5 = 3;\ncode_r0x00c1efd0:\n                *arg_8h = puVar4 - in_ECX >> 1;\n                return uVar5;\n            }\n            if (iVar3 == 0) {\n                uVar5 = 1;\n                goto code_r0x00c1efd0;\n            }\n            puVar4 = puVar4 + 1;\n            iVar3 = in_EDX + -2;\n            if ((*puVar4 & 0xfc00) != 0xdc00) goto code_r0x00c1efd0;\n        }\n        in_EDX = iVar3;\n        puVar4 = puVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 404
    },
    "00b93379": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00b93379(uint *param_1)\n\n{\n    *param_1 = 0;\n    param_1[1] = 0xffffffff;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    fcn.00b977c7();\n    fcn.00b977c7();\n    param_1[0xd] = 0;\n    param_1[0xe] = 0;\n    param_1[0xf] = 0;\n    param_1[0x10] = 0;\n    param_1[0x11] = 0;\n    param_1[0x12] = 0xffffffff;\n    param_1[0x13] = 0xffffffff;\n    param_1[0x14] = 0;\n    fcn.00b977c7();\n    param_1[0x19] = 0;\n    param_1[0x1a] = 0;\n    param_1[0x1c] = 0;\n    param_1[0x1e] = 0;\n    param_1[0x1f] = 1;\n    *(param_1 + 0x21) = 0xffff;\n    *(param_1 + 0x22) = 0xffff;\n    *(param_1 + 0x8a) = 0xffff;\n    *(param_1 + 0x23) = 0xffff;\n    *(param_1 + 0x8e) = 0xffff;\n    param_1[0x27] = 0xffffffff;\n    param_1[0x20] = 0;\n    *(param_1 + 0x26) = 0;\n    *(param_1 + 0x93) = 0xff;\n    return param_1;\n}\n",
        "token_count": 422
    },
    "00b9743b": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b9743b(ushort *param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    \n    puVar2 = *(param_1 + 4);\n    while (puVar2 != NULL) {\n        puVar1 = puVar2[3];\n        fcn.00bb106c(*puVar2);\n        fcn.00bb106c(puVar2);\n        puVar2 = puVar1;\n    }\n    puVar2 = *(param_1 + 0x26);\n    uVar3 = 0;\n    if (puVar2 != NULL) {\n        if (puVar2[-1] == 0) {\n            fcn.00bb106c(puVar2 + -1);\n        }\n        else {\n            (***puVar2)(3);\n        }\n    }\n    fcn.00bb106c(*(param_1 + 10));\n    *(param_1 + 4) = 0;\n    *(param_1 + 6) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 10) = 0;\n    *(param_1 + 0x26) = 0;\n    *param_1 = 0;\n    fcn.00b93f20();\n    fcn.00ba6154();\n    if (*(param_1 + 0x2c) != 0) {\n        do {\n            puVar2 = **(*(param_1 + 0x2a) + uVar3 * 4);\n            if (puVar2 != NULL) {\n                (***puVar2)(1);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *(param_1 + 0x2c));\n    }\n    uVar3 = 0;\n    if (*(param_1 + 0x2c) != 0) {\n        do {\n            fcn.00bb106c(*(*(param_1 + 0x2a) + uVar3 * 4), unaff_EDI, unaff_ESI);\n            *(*(param_1 + 0x2a) + uVar3 * 4) = 0;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *(param_1 + 0x2c));\n    }\n    *(param_1 + 0x2c) = 0;\n    return;\n}\n",
        "token_count": 565
    },
    "00bb007f": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00bb007f(uint *param_1)\n\n{\n    *param_1 = 0;\n    param_1[3] = 1;\n    param_1[2] = 0;\n    *(param_1 + 4) = 0;\n    param_1[5] = 0;\n    *(param_1 + 6) = 0;\n    param_1[0xb] = 1;\n    param_1[8] = 0;\n    param_1[10] = 0;\n    *(param_1 + 0xc) = 0;\n    return param_1;\n}\n",
        "token_count": 142
    },
    "00bb03a2": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771",
            "log keystrokes"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bb03a2(uint *param_1)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_MapVirtualKeyW;\n    *param_1 = 5;\n    param_1[1] = 5;\n    *(param_1 + 2) = 1;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[3] = 4;\n    uVar2 = (*pcVar1)(0x5b, 0);\n    *(param_1 + 0x29) = uVar2;\n    uVar2 = (*pcVar1)(0x10, 0);\n    *(param_1 + 0x26) = uVar2;\n    uVar2 = (*pcVar1)(0xa0, 0);\n    *(param_1 + 0x27) = uVar2;\n    uVar2 = (*pcVar1)(0xa1, 0);\n    *(param_1 + 10) = uVar2;\n    uVar2 = (*pcVar1)(0x11, 0);\n    *(param_1 + 9) = uVar2;\n    uVar2 = (*pcVar1)(0x12, 0);\n    *(param_1 + 0x25) = uVar2;\n    return;\n}\n",
        "token_count": 336
    },
    "00bb0b23": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bb0b23(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    in_ECX[2] = arg_8h[2];\n    piVar1 = arg_8h[3];\n    in_ECX[3] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    *(in_ECX + 4) = *(arg_8h + 4);\n    *(in_ECX + 0x11) = *(arg_8h + 0x11);\n    in_ECX[5] = arg_8h[5];\n    in_ECX[6] = arg_8h[6];\n    return;\n}\n",
        "token_count": 193
    },
    "00bcb511": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "print debug messages"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00bcb511(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.00bcb564();\n    *param_1 = 0x38;\n    param_1[2] = 0xb90000;\n    param_1[1] = 0xb90000;\n    param_1[3] = 0xc00;\n    param_1[4] = 0xc32e14;\n    iVar1 = fcn.00bb0b84();\n    if (iVar1 < 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n        if (iVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)\n                      (L\"ERROR : Unable to initialize critical section in CAtlBaseModule\\n\");\n        }\n        *0xc56260 = 1;\n    }\n    return param_1;\n}\n",
        "token_count": 205
    },
    "00be7323": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00be7323(uint arg_8h)\n\n{\n    uint *in_ECX;\n    \n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    *in_ECX = 0xc47040;\n    in_ECX[1] = 1;\n    fcn.00b977c7();\n    in_ECX[5] = arg_8h;\n    in_ECX[2] = 0xd;\n    return;\n}\n",
        "token_count": 110
    },
    "00beba39": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00beba39(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    puVar1 = fcn.00bb0ff6(0xc);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 0xc49828;\n        puVar1[2] = 1;\n        puVar1[1] = in_ECX;\n    }\n    *in_ECX = puVar1;\n    puVar1 = fcn.00bb0ff6(8);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 0xc4988c;\n        puVar1[1] = in_ECX;\n    }\n    in_ECX[1] = puVar1;\n    puVar1 = fcn.00bb0ff6(8);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 0xc49800;\n        puVar1[1] = in_ECX;\n    }\n    in_ECX[2] = puVar1;\n    puVar1 = fcn.00bb0ff6(0xc);\n    if (puVar1 == NULL) {\n        puVar1 = NULL;\n    }\n    else {\n        *puVar1 = 0xc49850;\n        puVar1[1] = in_ECX;\n        puVar1[2] = arg_8h;\n    }\n    in_ECX[4] = 0;\n    in_ECX[3] = puVar1;\n    in_ECX[5] = arg_8h;\n    *(in_ECX + 6) = 0;\n    return;\n}\n",
        "token_count": 403
    },
    "00bec3cb": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00bec3cb(uint *param_1)\n\n{\n    ulong uVar1;\n    \n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    param_1[0x15] = 0;\n    *(param_1 + 8) = 0;\n    fcn.00b97d2c(0xc1f910);\n    uVar1 = *0xc4bad8;\n    *param_1 = 0xffffffff;\n    param_1[1] = 0xffffffff;\n    param_1[2] = 0x80000000;\n    param_1[3] = 0x80000000;\n    *(param_1 + 6) = uVar1;\n    param_1[0x16] = 0;\n    param_1[5] = 0;\n    param_1[4] = 0;\n    fcn.00b97d2c(0xc1f910);\n    fcn.00b97d2c(0xc1f910);\n    return param_1;\n}\n",
        "token_count": 253
    },
    "00bede79": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bede79(uint rclsid, int32_t *pdwRegister, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint var_4h;\n    \n    var_4h = 0;\n    piVar1 = in_ECX + 7;\n    *in_ECX = 0xc49df0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    in_ECX[6] = 0;\n    *piVar1 = 0;\n    in_ECX[8] = 1;\n    in_ECX[9] = arg_10h;\n    if (pdwRegister != NULL) {\n        fcn.00beeb07(pdwRegister);\n        iVar2 = (*_sym.imp.OLEAUT32.dll_CreateStdDispatch)(in_ECX[4], 0x800, piVar1);\n        if ((-1 < iVar2) && (*piVar1 != 0)) {\n            fcn.00bee9ea();\n            iVar2 = (*_sym.imp.OLEAUT32.dll_RegisterActiveObject)(0, rclsid, *piVar1, &pdwRegister);\n            if (-1 < iVar2) {\n                in_ECX[5] = rclsid;\n                iVar2 = (***pdwRegister)(pdwRegister, 0xc22c0c, &var_4h);\n                (**(*pdwRegister + 8))(pdwRegister);\n                if (-1 < iVar2) {\n                    in_ECX[6] = var_4h;\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "00bf1a84": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf1a84(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    \n    *in_ECX = 0xc32ec8;\n    in_ECX[1] = *(arg_8h + 4);\n    in_ECX[2] = *(arg_8h + 8);\n    in_ECX[3] = *(arg_8h + 0xc);\n    in_ECX[4] = *(arg_8h + 0x10);\n    in_ECX[5] = *(arg_8h + 0x14);\n    iVar1 = *in_ECX[1];\n    if (iVar1 == 0x7fffffff) {\n        fcn.00bf1ccf(in_ECX);\n        fcn.00bf23c4();\n    }\n    else {\n        *in_ECX[1] = iVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00bf3595": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf3595(uint *param_1)\n\n{\n    ulong uVar1;\n    \n    if (param_1[2] != 0) {\n        param_1[2] = 0;\n        param_1[3] = 0;\n        param_1[2] = 0;\n        param_1[3] = 0;\n        uVar1 = fcn.00b95dae();\n        (*_sym.imp.KERNEL32.dll_SetFilePointerEx)\n                  (*param_1, param_1[4] - uVar1, (param_1[5] - (uVar1 >> 0x20)) - (param_1[4] < uVar1), 0, 1);\n        uVar1 = fcn.00b95dae();\n        param_1[4] = uVar1;\n        param_1[5] = uVar1 >> 0x20;\n        return;\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "00bf6b8d": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf6b8d(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    in_ECX[2] = arg_8h[2];\n    in_ECX[3] = arg_8h[3];\n    in_ECX[4] = arg_8h[4];\n    piVar1 = arg_8h[5];\n    in_ECX[5] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 152
    },
    "00bf6bbd": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf6bbd(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = arg_8h;\n    in_ECX[1] = arg_ch;\n    in_ECX[2] = arg_10h;\n    in_ECX[3] = arg_14h;\n    in_ECX[4] = arg_18h;\n    in_ECX[5] = arg_1ch;\n    *arg_1ch = *arg_1ch + 1;\n    fcn.00b95a64();\n    return;\n}\n",
        "token_count": 162
    },
    "00bf6c7c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf6c7c(uint32_t arg_8h)\n\n{\n    uint32_t *in_ECX;\n    \n    *in_ECX = arg_8h;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    in_ECX[6] = 0;\n    in_ECX[7] = 0;\n    in_ECX[8] = 0;\n    in_ECX[9] = 0;\n    *(in_ECX + 2) = 0;\n    if ((*in_ECX & 8) != 0) {\n        *in_ECX = *in_ECX | 6;\n    }\n    if ((*in_ECX & 0x10) != 0) {\n        *in_ECX = 0x10;\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "00bf7248": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf7248(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00bf6fdd(param_1 + 0x14, param_1 + 0x10, param_1 + 0xc, param_1 + 8);\n    if (iVar1 == 0) {\n        fcn.00bf703e(4, 0xfffffff4, param_1 + 0x14, param_1 + 0x10);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00bf7339": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf7339(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00bf6fdd(param_1 + 0xc, param_1 + 8, param_1 + 0x14, param_1 + 0x10);\n    if (iVar1 == 0) {\n        fcn.00bf703e(2, 0xfffffff5, param_1 + 0xc, param_1 + 8);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00c01606": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c01606(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    in_ECX[2] = arg_8h[2];\n    in_ECX[3] = arg_8h[3];\n    in_ECX[4] = arg_8h[4];\n    in_ECX[5] = arg_8h[5];\n    in_ECX[6] = arg_8h[6];\n    in_ECX[7] = arg_8h[7];\n    in_ECX[8] = arg_8h[8];\n    in_ECX[9] = arg_8h[9];\n    in_ECX[10] = arg_8h[10];\n    piVar1 = arg_8h[0xb];\n    in_ECX[0xb] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    *(in_ECX + 0xc) = *(arg_8h + 0xc);\n    in_ECX[0xd] = arg_8h[0xd];\n    in_ECX[0xe] = arg_8h[0xe];\n    in_ECX[0xf] = arg_8h[0xf];\n    piVar1 = arg_8h[0x10];\n    in_ECX[0x10] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    fcn.00c0157d(arg_8h + 0x11);\n    in_ECX[0x15] = arg_8h[0x15];\n    fcn.00c017a3(arg_8h + 0x16);\n    *(in_ECX + 0x34) = *(arg_8h + 0x34);\n    in_ECX[0x35] = arg_8h[0x35];\n    in_ECX[0x36] = arg_8h[0x36];\n    *(in_ECX + 0x37) = *(arg_8h + 0x37);\n    return;\n}\n",
        "token_count": 497
    },
    "00c01815": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c01815(ushort *arg_8h)\n\n{\n    int32_t *piVar1;\n    ushort *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    *(in_ECX + 2) = *(arg_8h + 2);\n    *(in_ECX + 4) = *(arg_8h + 4);\n    *(in_ECX + 6) = *(arg_8h + 6);\n    piVar1 = *(arg_8h + 8);\n    *(in_ECX + 8) = piVar1;\n    *piVar1 = *piVar1 + 1;\n    *(in_ECX + 10) = *(arg_8h + 10);\n    *(in_ECX + 0xc) = *(arg_8h + 0xc);\n    *(in_ECX + 0xe) = *(arg_8h + 0xe);\n    piVar1 = *(arg_8h + 0x10);\n    *(in_ECX + 0x10) = piVar1;\n    *piVar1 = *piVar1 + 1;\n    *(in_ECX + 0x12) = *(arg_8h + 0x12);\n    *(in_ECX + 0x14) = *(arg_8h + 0x14);\n    *(in_ECX + 0x16) = *(arg_8h + 0x16);\n    piVar1 = *(arg_8h + 0x18);\n    *(in_ECX + 0x18) = piVar1;\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 374
    },
    "00c11ba1": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c11ba1(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t *piStack12;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.00b99997();\n    puVar2 = *(iVar1 + 8);\n    uStack24 = *puVar2;\n    uStack20 = puVar2[1];\n    uStack16 = puVar2[2];\n    piStack12 = puVar2[3];\n    *piStack12 = *piStack12 + 1;\n    fcn.00bf3815();\n    fcn.00b99b9c(&uStack24);\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 199
    },
    "00c12720": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c12720(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t *piStack12;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.00b99997();\n    puVar2 = *(iVar1 + 8);\n    uStack24 = *puVar2;\n    uStack20 = puVar2[1];\n    uStack16 = puVar2[2];\n    piStack12 = puVar2[3];\n    *piStack12 = *piStack12 + 1;\n    fcn.00bf562d();\n    fcn.00b99b9c(&uStack24);\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 198
    },
    "00b98b13": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b98b13(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    \n    cVar1 = fcn.00b988a0(arg_8h, in_ECX);\n    if (cVar1 == '\\0') {\n        arg_8h_00 = 0;\n    }\n    else {\n        arg_8h_00 = *in_ECX;\n    }\n    if (arg_8h_00 == 0) {\n        arg_8h_00 = fcn.00bb0ff6(0x20);\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 0;\n        }\n        else {\n            fcn.00b977c7();\n        }\n        if (arg_8h_00 != arg_8h) {\n            fcn.00b980d7(arg_8h);\n        }\n        *(arg_8h_00 + 0x10) = arg_10h & 0xff00;\n        iVar2 = fcn.00bb0ff6(0x10);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            *(iVar2 + 8) = 0;\n            fcn.00b99ac0(arg_ch);\n        }\n        *(arg_8h_00 + 0x1c) = 0;\n        *(arg_8h_00 + 0x18) = 0;\n        *(arg_8h_00 + 0x14) = iVar2;\n        iVar2 = fcn.00b987c0(arg_8h_00, *in_ECX);\n        *in_ECX = iVar2;\n    }\n    else {\n        fcn.00b99e9c(arg_ch);\n    }\n    return *(arg_8h_00 + 0x14);\n}\n",
        "token_count": 454
    },
    "00ba5bfd": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00ba5bfd(int32_t param_1)\n\n{\n    fcn.00b977c7();\n    *(param_1 + 0x30) = 0x2800;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x34) = 0x2000;\n    return param_1;\n}\n",
        "token_count": 180
    },
    "00bb003b": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bb003b(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 8) = 0;\n    fcn.00b99ac0(arg_8h);\n    *(in_ECX + 0x10) = *(arg_8h + 0x10);\n    *(in_ECX + 0x14) = *(arg_8h + 0x14);\n    *(in_ECX + 0x18) = *(arg_8h + 0x18);\n    *(in_ECX + 0x28) = 0;\n    fcn.00b99ac0(arg_8h + 0x20);\n    *(in_ECX + 0x30) = *(arg_8h + 0x30);\n    return;\n}\n",
        "token_count": 186
    },
    "00bb07c0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bb07c0(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00b981a7(arg_8h);\n    *(in_ECX + 0x10) = *(arg_8h + 0x10);\n    *(in_ECX + 0x14) = *(arg_8h + 0x14);\n    *(in_ECX + 0x18) = *(arg_8h + 0x18);\n    *(in_ECX + 0x1c) = *(arg_8h + 0x1c);\n    *(in_ECX + 0x20) = *(arg_8h + 0x20);\n    return;\n}\n",
        "token_count": 165
    },
    "00bb0dbb": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00bb0dbb(int32_t param_1)\n\n{\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 1;\n    fcn.00b977c7();\n    fcn.00b977c7();\n    return param_1;\n}\n",
        "token_count": 92
    },
    "00be6aa3": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00be6aa3(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00baff9a();\n    *(iVar1 + 0x14) = arg_8h;\n    iVar1 = fcn.00baff9a();\n    *(iVar1 + 0x18) = arg_ch;\n    return;\n}\n",
        "token_count": 91
    },
    "00bf76a0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf76a0(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_ECX;\n    \n    iVar1 = fcn.00b98af5(arg_8h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00bb0ff6(0x20);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            fcn.00b977c7();\n        }\n        fcn.00b981a7(arg_8h);\n        *(iVar1 + 0x1c) = 0;\n        *(iVar1 + 0x18) = 0;\n        *(iVar1 + 0x10) = arg_10h & 0xff00 | 1;\n        *(iVar1 + 0x14) = arg_ch;\n        uVar2 = fcn.00b987c0(iVar1, *in_ECX);\n        *in_ECX = uVar2;\n    }\n    else {\n        *(iVar1 + 0x14) = arg_ch;\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "00bf9d71": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf9d71(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00b99e9c(arg_8h);\n    *(in_ECX + 0x10) = *(arg_8h + 0x10);\n    *(in_ECX + 0x14) = *(arg_8h + 0x14);\n    *(in_ECX + 0x18) = *(arg_8h + 0x18);\n    fcn.00b99e9c(arg_8h + 0x20);\n    *(in_ECX + 0x30) = *(arg_8h + 0x30);\n    return;\n}\n",
        "token_count": 161
    },
    "00c1629f": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c1629f(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    fcn.00b981a7(arg_8h + 1);\n    in_ECX[5] = arg_8h[5];\n    in_ECX[6] = arg_8h[6];\n    in_ECX[7] = arg_8h[7];\n    in_ECX[8] = arg_8h[8];\n    return;\n}\n",
        "token_count": 121
    },
    "00b94a35": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "find graphical window",
            "log keystrokes",
            "find taskbar"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b94a35(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    code *pcVar8;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    if (arg_8h == iVar2) {\n        uVar3 = 1;\n    }\n    else {\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.USER32.dll_FindWindowW)(L\"Shell_TrayWnd\", 0);\n        }\n        iVar4 = (*_sym.imp.USER32.dll_IsIconic)(arg_8h);\n        if (iVar4 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(arg_8h, 9);\n        }\n        iVar4 = (*_sym.imp.USER32.dll_SetForegroundWindow)(arg_8h);\n        pcVar8 = _sym.imp.USER32.dll_GetWindowThreadProcessId;\n        if (iVar4 == 0) {\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(iVar2, 0);\n            uVar6 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            uVar7 = (*pcVar8)(arg_8h, 0);\n            pcVar8 = _sym.imp.USER32.dll_AttachThreadInput;\n            (*_sym.imp.USER32.dll_AttachThreadInput)(uVar6, uVar7, 1);\n            (*pcVar8)(uVar6, uVar5, 1);\n            (*pcVar8)(uVar5, uVar7, 1);\n            iVar2 = (*_sym.imp.USER32.dll_SetForegroundWindow)(arg_8h);\n            pcVar1 = _sym.imp.USER32.dll_MapVirtualKeyW;\n            if (iVar2 == 0) {\n                uVar3 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(0x12, 0, 0, 0);\n                pcVar8 = _sym.imp.USER32.dll_keybd_event;\n                (*_sym.imp.USER32.dll_keybd_event)(0x12, uVar3);\n                uVar3 = (*pcVar1)(0x12, 0, 2, 0);\n                (*pcVar8)(0x12, uVar3);\n                uVar3 = (*pcVar1)(0x12, 0, 0, 0);\n                (*pcVar8)(0x12, uVar3);\n                uVar3 = (*pcVar1)(0x12, 0, 2, 0);\n                (*pcVar8)(0x12, uVar3);\n                iVar2 = (*_sym.imp.USER32.dll_SetForegroundWindow)(arg_8h);\n                pcVar8 = _sym.imp.USER32.dll_AttachThreadInput;\n                if (iVar2 == 0) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = 4;\n                }\n            }\n            else {\n                uVar3 = 3;\n            }\n            (*pcVar8)(uVar6, uVar7, 0);\n            (*pcVar8)(uVar6, uVar5, 0);\n            (*pcVar8)(uVar5, uVar7, 0);\n        }\n        else {\n            uVar3 = 2;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 782
    },
    "00b9716b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00b9716b(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint var_14h;\n    \n    fcn.00b977c7();\n    fcn.00b948ae();\n    uVar3 = 0;\n    if (*(in_ECX + 0x20) != 0) {\n        do {\n            iVar2 = fcn.00b97a68(*(*(in_ECX + 0x1c) + uVar3 * 4), 0);\n            if (iVar2 == 0) {\n                piVar1 = *(*(in_ECX + 0x2c) + uVar3 * 4);\n                *piVar1 = *piVar1 + 1;\n                goto code_r0x00b971b6;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *(in_ECX + 0x20));\n    }\n    fcn.00b93f84(&var_14h);\n    arg_8h = 1;\n    fcn.00b934c2(&arg_8h);\n    uVar3 = *(in_ECX + 0x20) - 1;\ncode_r0x00b971b6:\n    fcn.00b95a64();\n    return uVar3;\n}\n",
        "token_count": 323
    },
    "00b97c8e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b97c8e(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_14h;\n    \n    if (in_ECX == arg_8h) {\n        arg_8h_00 = fcn.00be8123(&var_14h, in_ECX);\n        fcn.00b981a7(arg_8h_00);\n        fcn.00b95a64();\n    }\n    else {\n        fcn.00b97bb1(arg_8h, 0, 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "00bb0719": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00bb0719(void)\n\n{\n    (*_sym.imp.WINMM.dll_timeGetTime)();\n    return;\n}\n",
        "token_count": 29
    },
    "00be912d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get graphical window text"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00be912d(uint arg_8h)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    uint32_t uVar6;\n    uint hWnd;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0xb0, &var_8h, &var_4h);\n    if (var_8h < var_4h) {\n        uVar6 = 0;\n        uVar3 = (*pcVar2)(*in_ECX, 0xe, 0, 0);\n        if (((uVar3 == 0) || (uVar3 < var_8h)) || (uVar3 < var_4h)) {\n            var_8h = uVar3 & 0xffffff00;\n        }\n        else {\n            iVar1 = (uVar3 + 1) * 2;\n            iVar4 = fcn.00bb0ff6(-(iVar1 >> 0x20 != 0) | iVar1);\n            iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0xd, uVar3 + 1, iVar4);\n            if (iVar5 != 0) {\n                if (var_4h != uVar3) {\n                    *(iVar4 + var_4h * 2) = 0;\n                }\n                fcn.00b97d2c(iVar4 + var_8h * 2);\n                uVar6 = 1;\n            }\n            uVar3 = fcn.00bb106c(iVar4);\n            var_8h = uVar3 & 0xffffff00 | uVar6;\n        }\n    }\n    else {\n        var_8h = var_8h & 0xffffff00;\n    }\n    return var_8h;\n}\n",
        "token_count": 465
    },
    "00be9ab7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00be9ab7(int32_t wParam, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    uint var_888h;\n    uint var_88h;\n    uint *hWnd;\n    \n    hWnd = in_ECX;\n    fcn.00ba62e0();\n    uVar3 = 0;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x406, 0, 0);\n    if ((-1 < wParam) && (wParam < iVar1)) {\n        arg_8h = fcn.00bf18ee(0x800, *in_ECX);\n        (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x40d, wParam, arg_8h);\n        fcn.00bf1997(arg_8h, &var_888h, 0x800);\n        fcn.00b97d2c(&var_888h);\n        uVar3 = 1;\n    }\n    uVar2 = fcn.00ba62c5();\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 285
    },
    "00bedfdc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bedfdc(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint lpsz;\n    uint rguid;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    if (arg_ch == 0x1f) {\n        puVar6 = NULL;\n        if (*(arg_8h + 8) != NULL) {\n            puVar6 = *(arg_8h + 8);\n        }\n    }\n    else {\n        if (arg_ch == 0x1e) {\n            uVar5 = *(arg_8h + 8);\n            uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, uVar5, 0xffffffff, 0, 0);\n            uVar3 = fcn.00bb0ff6(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n            (*pcVar1)(0, 0, uVar5, 0xffffffff, uVar3, uVar2);\n            uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(uVar3);\n            fcn.00bb106c(uVar3);\n            return uVar5;\n        }\n        if (arg_ch == 8) {\n            uVar5 = *(arg_8h + 8);\n            uVar3 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(uVar5);\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(uVar5);\n            return uVar3;\n        }\n        if (arg_ch != 0x48) {\n            return 0;\n        }\n        puVar6 = *(arg_8h + 8);\n        rguid = *puVar6;\n        uStack16 = puVar6[1];\n        uStack12 = puVar6[2];\n        uStack8 = puVar6[3];\n        iVar4 = (*_sym.imp.ole32.dll_StringFromGUID2)(&rguid, &lpsz, 0x28);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar6 = &lpsz;\n    }\n    uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(puVar6);\n    return uVar5;\n}\n",
        "token_count": 581
    },
    "00bee0b5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bee0b5(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint lpsz;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    puVar6 = NULL;\n    if (arg_ch == 0x1f) {\n        if (*(arg_8h + 8) != NULL) {\n            puVar6 = **(arg_8h + 8);\n        }\n    }\n    else {\n        if (arg_ch == 0x1e) {\n            uVar5 = **(arg_8h + 8);\n            uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, uVar5, 0xffffffff, 0, 0);\n            uVar3 = fcn.00bb0ff6(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n            (*pcVar1)(0, 0, uVar5, 0xffffffff, uVar3, uVar2);\n            uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(uVar3);\n            fcn.00bb106c(uVar3);\n            return uVar5;\n        }\n        if (arg_ch == 8) {\n            uVar5 = **(arg_8h + 8);\n            uVar3 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(uVar5);\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(uVar5);\n            return uVar3;\n        }\n        if (arg_ch != 0x48) {\n            return 0;\n        }\n        iVar4 = (*_sym.imp.ole32.dll_StringFromGUID2)(*(arg_8h + 8), &lpsz, 0x28);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar6 = &lpsz;\n    }\n    uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(puVar6);\n    return uVar5;\n}\n",
        "token_count": 512
    },
    "00bef0f4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.00bef0f4(int16_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint pvargDest;\n    int32_t var_ch;\n    uint var_8h;\n    \n    puVar2 = fcn.00bb0ff6(0x10);\n    if (*arg_8h == 8) {\n        (*_sym.imp.ole32.dll_CLSIDFromString)(*(arg_8h + 4), puVar2);\n    }\n    else if (*arg_8h == 0x24) {\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n        var_ch = 0;\n        var_8h = 0;\n        iVar3 = (**(**(arg_8h + 6) + 0x2c))(*(arg_8h + 6), 0, 0, &pvargDest, 0);\n        if (iVar3 < 0) {\n            fcn.00bb106c(puVar2);\n            puVar2 = NULL;\n        }\n        else {\n            if (pvargDest == -0x7ff4) {\n                puVar1 = *(var_ch + 8);\n                *puVar2 = *puVar1;\n                puVar2[1] = puVar1[1];\n                puVar2[2] = puVar1[2];\n                puVar2[3] = puVar1[3];\n            }\n            pvargDest._0_2_ = 0x1a;\n        }\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n    }\n    else {\n        puVar1 = *(arg_8h + 4);\n        *puVar2 = *puVar1;\n        puVar2[1] = puVar1[1];\n        puVar2[2] = puVar1[2];\n        puVar2[3] = puVar1[3];\n    }\n    return puVar2;\n}\n",
        "token_count": 463
    },
    "00bf54e6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "delay execution"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf54e6(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint lpFrequency;\n    double dStack36;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t lpPerformanceCount;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (-1 < param_1) {\n        if (param_1 == 0) {\n            param_1 = 0;\n        }\n        else if ((param_1 < 0xf) &&\n                (iVar1 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&lpPerformanceCount),  iVar1 != 0)) {\n            (*_sym.imp.KERNEL32.dll_QueryPerformanceFrequency)(&lpFrequency);\n            do {\n                (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&var_8h);\n                var_18h = var_8h - lpPerformanceCount;\n                var_14h = (var_4h - var_ch) - (var_8h < lpPerformanceCount);\n                dStack36 = _lpFrequency;\n                uVar2 = fcn.00bcb606();\n            } while (uVar2 < param_1);\n            return;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(param_1);\n    }\n    return;\n}\n",
        "token_count": 327
    },
    "00bf850c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00bf850c(int32_t arg_8h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t in_ECX;\n    uint var_24h;\n    uint var_14h;\n    \n    if ((*(in_ECX + 0xc) != 8) && (*(arg_8h + 0xc) != 8)) {\n        cVar1 = fcn.00b99dae(0x2a);\n        if ((cVar1 == '\\0') && (cVar1 = fcn.00b99dae(0x2a),  cVar1 == '\\0')) {\n            if (*(in_ECX + 0xc) != 0xe) {\n                if (*(arg_8h + 0xc) != 0xe) {\n                    fcn.00b99997();\n                    fcn.00b99997();\n                    uVar2 = fcn.00ba5ee9();\n                    return uVar2;\n                }\n                if (*(in_ECX + 0xc) != 0xe) {\n                    return 0;\n                }\n            }\n            if (*(arg_8h + 0xc) == 0xe) {\n                fcn.00bf7ba4(&var_24h);\n                fcn.00bf7ba4(&var_14h);\n                uVar2 = fcn.00ba5ee9();\n                fcn.00b95a64();\n                fcn.00b95a64();\n                return uVar2;\n            }\n        }\n        else {\n            cVar1 = fcn.00b99dae(0x2a);\n            if ((cVar1 != '\\0') && (cVar1 = fcn.00b99dae(0x2a),  cVar1 != '\\0')) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 412
    },
    "00bf9393": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf9393(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint var_dch;\n    \n    fcn.00bf91e9();\n    fcn.00bf922f(arg_10h);\n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            uVar1 = fcn.00bf9367();\n            *(uVar2 + arg_8h) = *(uVar2 + arg_8h) ^ uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00bfffee": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfffee(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint *arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 1;\n    var_10h = 0;\n    var_8h = 0;\n    if (1 < *(arg_8h + 8)) {\n        fcn.00b99e9c(*(*(arg_8h + 4) + 4));\n    }\n    arg_8h_00 = &var_10h;\n    fcn.00b99ac0(arg_8h_00);\n    uVar1 = fcn.00b99c9c();\n    uVar1 = fcn.00c18851(uVar1, arg_8h_00);\n    fcn.00b99a20();\n    arg_ch[3] = 1;\n    *arg_ch = uVar1;\n    fcn.00b99a20();\n    return 0;\n}\n",
        "token_count": 243
    },
    "00c0a2d2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c0a2d2(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint arg_8h_00;\n    uint var_34h;\n    uint uStack52;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    ushort var_ch;\n    int32_t var_ah;\n    \n    piVar2 = arg_ch;\n    iVar3 = *(arg_8h + 4);\n    var_20h = NULL;\n    var_1ch = 0;\n    var_18h = 0;\n    var_34h = 0;\n    var_2ch = 0;\n    iVar4 = *arg_ch;\n    var_24h = 0xc1fb78;\n    var_28h = 1;\n    var_ah._0_2_ = 0;\n    iVar6 = *(iVar3 + iVar4 * 4);\n    iVar5 = iVar4 + 1;\n    *arg_ch = iVar5;\n    *NULL = *(iVar6 + 10);\n    var_ch = 0xffff;\n    if (*(*(iVar3 + iVar5 * 4) + 8) == 0x47) {\n        iVar6 = 0;\n        *arg_ch = iVar4 + 2;\n        iVar3 = 0x47;\n        do {\n            iVar4 = *(*(arg_8h + 4) + *piVar2 * 4);\n            iVar1 = *(iVar4 + 8);\n            if (iVar1 == 0x47) {\n                iVar6 = iVar6 + 1;\n            }\n            else if (iVar1 == 0x48) {\n                if (iVar6 == 0) {\n                    *piVar2 = *piVar2 + 1;\n                    var_ah._0_2_ = stack0xfffffff4;\n                    var_ch = 0x7f;\n                    fcn.00b9766f(&fcn.00c0a2d2::var_14h);\n                    arg_ch = NULL;\n                    if (*(*var_20h + 8) == 0x7f) goto code_r0x00c0a41e;\n                    uVar7 = 0xffffffff;\n                    goto code_r0x00c0a3c6;\n                }\n                iVar6 = iVar6 + -1;\n            }\n            else if (iVar1 == 0x7f) goto code_r0x00c0a363;\n            fcn.00b9766f(iVar4);\n            *piVar2 = *piVar2 + 1;\n            iVar3 = iVar4;\n        } while( true );\n    }\n    iVar3 = *(*(iVar3 + -4 + iVar5 * 4) + 10);\n    arg_8h_00 = 0x6f;\ncode_r0x00c0a44d:\n    uVar7 = 0xffffffff;\n    fcn.00bfa0b5(arg_8h_00, iVar3);\n    goto code_r0x00c0a420;\ncode_r0x00c0a363:\n    fcn.00bfa0b5(0x6f, 0x6f);\n    uVar7 = 0xffffffff;\n    goto code_r0x00c0a420;\n    while( true ) {\n        fcn.00be6665(&fcn.00c0a2d2::var_34h);\n        if (*(var_20h[arg_ch] + 8) == 0x40) {\n            if (*(var_20h[arg_ch + 1] + 8) == 0x7f) {\n                arg_8h_00 = 0x6e;\n                goto code_r0x00c0a44d;\n            }\n            arg_ch = arg_ch + 1;\n        }\n        if (*(var_20h[arg_ch] + 8) == 0x7f) break;\ncode_r0x00c0a3c6:\n        uStack52 = 0xffffffff;\n        var_34h = 1;\n        iVar4 = fcn.00b9f803(0xc0a3de, &fcn.00c0a2d2::arg_ch, &fcn.00c0a2d2::var_34h, 0, 0, 1, 0xffffffff);\n        if (iVar4 < 0) goto code_r0x00c0a420;\n    }\ncode_r0x00c0a41e:\n    uVar7 = 0;\ncode_r0x00c0a420:\n    fcn.00b99a20();\n    fcn.00b95efb();\n    fcn.00b97776();\n    return uVar7;\n}\n",
        "token_count": 1160
    },
    "00c0c8d7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0c8d7(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uint arg_10h_00;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 8);\n    while( true ) {\n        if (iVar1 != 0x4e) {\n            return 0;\n        }\n        if (*(*arg_10h + 0xc) != 0xf) {\n            fcn.00bfa0b5(0x7a, *(*(*(arg_8h + 4) + *arg_ch * 4) + 10));\n            return 0xffffffff;\n        }\n        *arg_ch = *arg_ch + 1;\n        var_18h = 0;\n        var_10h = 0;\n        var_ch = 1;\n        fcn.00b9a000(arg_8h, arg_ch, &var_18h, 0xffffffff);\n        iVar2 = *arg_ch;\n        if (*(*(*(arg_8h + 4) + iVar2 * 4) + 8) != 0x4f) {\n            fcn.00bfa0b5(0x7b, *(*(*(arg_8h + 4) + -4 + iVar2 * 4) + 10));\n            fcn.00b99a20();\n            return 0xffffffff;\n        }\n        *arg_ch = iVar2 + 1;\n        if (var_ch == 4) {\n            fcn.00b99997();\n            iVar2 = fcn.00bf1f32(var_10h, arg_14h);\n        }\n        else {\n            arg_10h_00 = arg_14h;\n            uVar3 = fcn.00b99d46();\n            iVar2 = fcn.00bf1f8b(uVar3, uVar3 >> 0x20, arg_10h_00);\n        }\n        *arg_10h = iVar2;\n        if (iVar2 == 0) break;\n        fcn.00b99a20();\n        iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 8);\n    }\n    fcn.00b99a20();\n    return 0;\n}\n",
        "token_count": 576
    },
    "00c1ad70": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1ad70(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowRect)(arg_8h, &var_10h);\n    iVar2 = (var_4h - var_ch) * (var_8h - var_10h);\n    if ((((var_10h <= *0xc56854) && (*0xc56854 <= var_8h)) && (var_ch <= *0xc56858)) &&\n       ((*0xc56858 <= var_4h && (iVar2 - *0xc56850 == 0 || iVar2 < *0xc56850)))) {\n        iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(arg_8h);\n            if (iVar1 != 0) {\n                *0xc5684c = arg_8h;\n                *0xc56850 = iVar2;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 285
    },
    "00b960cc": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b960cc(int32_t arg_8h, int32_t *arg_ch, double *arg_10h, uint *arg_14h, uint arg_18h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint32_t uVar6;\n    uint in_ECX;\n    uint8_t uVar7;\n    int32_t iVar8;\n    float10 fVar9;\n    int64_t iVar10;\n    uint uVar11;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar8 = *arg_ch;\n    if (((*(arg_8h + iVar8 * 2) != 0x2e) || ((arg_18h != 0x33 && (iVar8 != 0)))) ||\n       ((uVar1 = *(arg_8h + 2 + iVar8 * 2),  uVar1 < 0x3a && (0x2f < uVar1)))) {\n        fcn.00b97eec();\n        iVar8 = *arg_ch;\n        if ((*(arg_8h + iVar8 * 2) != 0x30) || ((iVar2 = *(arg_8h + 2 + iVar8 * 2),  iVar2 != 0x78 && (iVar2 != 0x58))))\n        {\n            bVar3 = false;\n            uVar7 = 0x17;\n            bVar4 = true;\n            do {\n                uVar1 = *(arg_8h + *arg_ch * 2);\n                if (uVar1 == 0x2e) {\n                    if (bVar4) {\n                        uVar7 = 0x25;\n                        bVar4 = false;\n                    }\ncode_r0x00b962a9:\n                    bVar3 = true;\n                }\n                else if ((uVar1 == 0x2b) || (uVar1 == 0x2d)) {\n                    if ((uVar7 & 8) != 0) {\n                        uVar7 = 0x31;\n                        bVar4 = false;\n                    }\n                }\n                else {\n                    if (0x2f < uVar1) {\n                        if (uVar1 < 0x3a) {\n                            uVar7 = uVar7 & 0xef | 0x20;\n                            goto code_r0x00b96154;\n                        }\n                        if ((uVar1 == 0x45) || (uVar1 == 0x65)) {\n                            if ((uVar7 & 0x14) == 4) {\n                                uVar7 = 0x39;\n                                bVar4 = false;\n                            }\n                            goto code_r0x00b962a9;\n                        }\n                    }\n                    if ((((0x40 < (uVar1 & 0xffdf)) && ((uVar1 & 0xffdf) < 0x5b)) || (uVar1 == 0x5f)) &&\n                       ((uVar7 & 0xfd) != 0)) {\n                        uVar7 = uVar7 | 0x10;\n                        *arg_ch = iVar8;\n                    }\n                }\ncode_r0x00b96154:\n                if ((uVar7 & 0x20) == 0) {\n                    if ((uVar7 & 0x10) != 0) {\n                        return 0;\n                    }\n                    if (bVar3) {\n                        cVar5 = fcn.00bb0d27();\n                        if (cVar5 != '\\0') {\n                            *arg_ch = iVar8;\n                            return 0;\n                        }\n                        fcn.00b95f12(0x20);\n                        fVar9 = fcn.00bb3f79(*arg_14h);\n                        *arg_10h = fVar9;\n                    }\n                    else {\n                        iVar10 = fcn.00bb37d3(*arg_14h);\n                        uVar6 = 0x7fffffff;\n                        if (arg_18h == 0x4a) {\n                            uVar6 = 0x80000000;\n                        }\n                        if ((iVar10 < 0x100000000) && ((iVar10 < 0 || (iVar10 <= uVar6)))) {\n                            uVar11 = 5;\n                        }\n                        else {\n                            uVar11 = 0x10;\n                        }\n                        fcn.00b95f12(uVar11);\n                        *arg_10h = iVar10;\n                        *(arg_10h + 4) = iVar10 >> 0x20;\n                    }\n                    return 1;\n                }\n                uVar1 = *(arg_8h + *arg_ch * 2);\n                *arg_ch = *arg_ch + 1;\n                fcn.00b97a84(uVar1);\n                uVar7 = uVar7 & 0xdf;\n            } while( true );\n        }\n        *arg_ch = iVar8 + 2;\n        iVar8 = 0;\n        while( true ) {\n            uVar1 = *(arg_8h + *arg_ch * 2);\n            uVar6 = uVar1;\n            if ((((uVar1 < 0x30) || (0x39 < uVar1)) && ((uVar6 < 0x61 || (0x66 < uVar6)))) &&\n               ((uVar1 < 0x41 || (0x46 < uVar6)))) break;\n            *arg_ch = *arg_ch + 1;\n            fcn.00b97a84(uVar6);\n            iVar8 = iVar8 + 1;\n        }\n        cVar5 = fcn.00bafbfb(0x10);\n        if (cVar5 != '\\0') {\n            if (iVar8 < 9) {\n                uVar11 = 5;\n            }\n            else {\n                uVar11 = 0x10;\n            }\n            fcn.00b95f12(uVar11);\n            *arg_10h = in_ECX;\n            *(arg_10h + 4) = in_ECX;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1354
    },
    "00b9780d": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00b9780d(int16_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = 0;\n    uVar1 = in_ECX[1];\n    if (uVar1 != 0) {\n        uVar4 = uVar1;\n        do {\n            uVar4 = uVar4 - 1;\n            iVar5 = 0;\n            iVar3 = 0;\n            if (*arg_8h == 0) {\n                return uVar4;\n            }\n            iVar2 = *arg_8h;\n            do {\n                if (*(*in_ECX + uVar4 * 2) == iVar2) {\n                    iVar3 = iVar3 + 1;\n                }\n                iVar5 = iVar5 + 1;\n                iVar2 = arg_8h[iVar5];\n            } while (iVar2 != 0);\n            if (iVar3 == 0) {\n                return uVar4;\n            }\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < uVar1);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 320
    },
    "00b97e2f": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00b97e2f(int16_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    uVar5 = 0;\n    uVar1 = in_ECX[1];\n    if (uVar1 != 0) {\n        iVar2 = *arg_8h;\n        uVar4 = uVar1;\n        do {\n            uVar4 = uVar4 - 1;\n            iVar3 = 0;\n            if (iVar2 != 0) {\n                iVar2 = *arg_8h;\n                do {\n                    if (*(*in_ECX + uVar4 * 2) == iVar2) {\n                        return uVar4;\n                    }\n                    iVar3 = iVar3 + 1;\n                    iVar2 = arg_8h[iVar3];\n                } while (iVar2 != 0);\n                iVar2 = *arg_8h;\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < uVar1);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 278
    },
    "00ba8395": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00ba8395(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint16_t *in_ECX;\n    uint8_t *in_EDX;\n    \n    do {\n        if (arg_8h == 0) {\n            return 0;\n        }\n        uVar2 = *in_ECX;\n        arg_8h = arg_8h + -1;\n        uVar1 = *in_EDX;\n        in_ECX = in_ECX + 1;\n        in_EDX = in_EDX + 1;\n    } while (uVar1 == uVar2);\n    return (uVar1 < uVar2) * 2 + -1;\n}\n",
        "token_count": 168
    },
    "00bf17d7": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00bf17d7(uint bVk, uint bScan, uint dwFlags)\n\n{\n    int32_t in_ECX;\n    uint pInputs;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    if ((*(in_ECX + 0xc) & 4) == 0) {\n        (*_sym.imp.USER32.dll_keybd_event)(bVk, bScan, dwFlags, 0);\n    }\n    else {\n        var_10h = 0;\n        var_ch = 0;\n        var_18h._0_2_ = bVk & 0xff;\n        var_18h._2_2_ = bScan & 0xff;\n        var_14h = dwFlags;\n        pInputs = 1;\n        (*_sym.imp.USER32.dll_SendInput)(1, &pInputs, 0x1c);\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "00bf56ec": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00bf56ec(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = 0;\n    uVar4 = 0;\n    if (in_ECX[1] != 0) {\n        iVar1 = *arg_8h;\n        do {\n            iVar2 = 0;\n            if (iVar1 != 0) {\n                iVar1 = *arg_8h;\n                do {\n                    if (*(*in_ECX + iVar3 * 2) == iVar1) {\n                        return iVar3;\n                    }\n                    iVar2 = iVar2 + 1;\n                    iVar1 = arg_8h[iVar2];\n                } while (iVar1 != 0);\n                iVar1 = *arg_8h;\n            }\n            iVar3 = iVar3 + 1;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < in_ECX[1]);\n    }\n    return -1;\n}\n",
        "token_count": 247
    },
    "00c1e9f8": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00c1e9f8(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint16_t *in_EDX;\n    \n    if (arg_8h != 0) {\n        iVar3 = in_ECX - in_EDX;\n        do {\n            uVar1 = *(iVar3 + in_EDX);\n            arg_8h = arg_8h + -1;\n            uVar2 = *in_EDX;\n            in_EDX = in_EDX + 1;\n            if (uVar2 != uVar1) {\n                return (uVar2 < uVar1) * 2 + -1;\n            }\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 194
    },
    "00c1402a": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c1402a(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    \n    cVar1 = fcn.00c135ca(arg_8h);\n    if (cVar1 == '\\0') {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        (*_sym.imp.USER32.dll_ShowWindow)(**(in_ECX + 0x2fc), 0);\n    }\n    return 0;\n}\n",
        "token_count": 133
    },
    "00bc99d3": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00bc99d3(void)\n\n{\n    *0xc50480 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00ba2e02": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba2e02(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00b99c9c();\n    if (iVar1 < 1) {\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    }\n    else {\n        uVar2 = (*_sym.imp.WINMM.dll_timeGetTime)();\n        *(in_ECX + 0x2f8) = uVar2;\n        uVar2 = fcn.00b99c9c();\n        *(in_ECX + 0x2f0) = uVar2;\n        *(in_ECX + 0xf8) = 2;\n        fcn.00ba0b30(0);\n    }\n    return 0;\n}\n",
        "token_count": 187
    },
    "00bba372": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bba372(uint dwMilliseconds)\n\n{\n    (*_sym.imp.KERNEL32.dll_Sleep)(dwMilliseconds);\n    return;\n}\n",
        "token_count": 35
    },
    "00be8e74": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00be8e74(uint *arg_8h)\n\n{\n    uint uVar1;\n    \n    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*arg_8h, 0xffffffff);\n    (*_sym.imp.USERENV.dll_UnloadUserProfile)(arg_8h[2], arg_8h[1]);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_8h[2]);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(*arg_8h);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, arg_8h);\n    (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    return 0;\n}\n",
        "token_count": 160
    },
    "00bf1652": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00bf1652(uint32_t arg_8h)\n\n{\n    double dVar1;\n    int32_t iVar2;\n    float10 fVar3;\n    uint var_18h;\n    uint var_14h;\n    uint32_t lpPerformanceCount;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (-1 < arg_8h) {\n        if (arg_8h == 0) {\n            arg_8h = 0;\n        }\n        else if ((arg_8h < 0xf) &&\n                (iVar2 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&lpPerformanceCount),  iVar2 != 0)) {\n            dVar1 = arg_8h;\n            if (arg_8h < 0) {\n                dVar1 = dVar1 + *0xc4bac8;\n            }\n            do {\n                (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&var_8h);\n                _var_18h = CONCAT44((var_4h - var_ch) - (var_8h < lpPerformanceCount), var_8h - lpPerformanceCount);\n                fVar3 = fcn.00bb07f6();\n            } while (_var_18h / fVar3 < dVar1);\n            return;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "00bebccd": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bebccd(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_8h = NULL;\n    var_4h = NULL;\n    piVar1 = param_1[3];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x2c))(piVar1, 0xfffffffd, 0, param_1[10], 0xffffffff, *(*param_1 + 0x14), param_1 + 4);\n        if ((*(param_1 + 0x3d) != '\\0') || (*(param_1 + 0xf) != '\\0')) {\n            (***param_1[3])(param_1[3], 0xc22d1c, &var_8h);\n            if (var_8h != NULL) {\n                if (*(param_1 + 0x3d) != '\\0') {\n                    (**(*var_8h + 0x18))(var_8h);\n                }\n                if (*(param_1 + 0xf) != '\\0') {\n                    (**(*var_8h + 0x14))(var_8h);\n                }\n            }\n        }\n        (*_sym.imp.ole32.dll_OleSetContainedObject)(param_1[3], 0);\n        (***param_1[3])(param_1[3], 0xc22d3c, &var_4h);\n        if (var_4h != NULL) {\n            (**(*var_4h + 0x1c))(var_4h, 1, 2, 0);\n            (**(*var_4h + 8))(var_4h);\n            var_4h = NULL;\n        }\n        (**(*param_1[3] + 0x50))(param_1[3], param_1[0xe]);\n        (**(*param_1[3] + 0xc))(param_1[3], 0);\n        (**(*param_1[3] + 0x14))(param_1[3], 0xc1f910, 0);\n        iVar2 = (*_sym.imp.USER32.dll_IsWindow)(param_1[2]);\n        if (iVar2 != 0) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(param_1[2]);\n        }\n        (**(*param_1[3] + 8))(param_1[3]);\n        param_1[3] = 0;\n    }\n    param_1[2] = 0;\n    *(param_1 + 0xf) = 0;\n    if (param_1[0xd] != 0) {\n        fcn.00bb106c(param_1[0xd]);\n        param_1[0xd] = 0;\n    }\n    if (param_1[0xb] != 0) {\n        fcn.00bebb2f(param_1[0xb]);\n        param_1[0xb] = 0;\n    }\n    if (param_1[0xc] != 0) {\n        fcn.00bb106c(param_1[0xc]);\n        param_1[0xc] = 0;\n    }\n    if (param_1[10] != 0) {\n        fcn.00bb106c(param_1[10]);\n        param_1[10] = 0;\n    }\n    return;\n}\n",
        "token_count": 781
    },
    "00be8652": {
        "rules": [
            "get token privileges/64a4ac2ad8dc404e9f897e2196104caf",
            "get token privileges"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00be8652(uint32_t *TokenInformation, uint noname_1, uint *ReturnLength)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    uVar1 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)();\n    if (uVar1 == 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (uVar1 != 0x7a) goto code_r0x00be86ac;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, *ReturnLength);\n        uVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n        *TokenInformation = uVar1;\n        if (uVar1 == 0) goto code_r0x00be86ac;\n        uVar1 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)();\n        if (uVar1 == 0) goto code_r0x00be86ac;\n    }\n    uVar3 = 1;\ncode_r0x00be86ac:\n    return uVar1 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 277
    },
    "00be8e03": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00be8e03(uint *hSourceProcessHandle, uint *lpThreadAttributes, uint *hSourceHandle)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0xc);\n    iVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetCurrentProcess;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(iVar3, 0, 0, 2);\n    uVar2 = (*pcVar1)(*hSourceProcessHandle, uVar2);\n    (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n    uVar2 = (*pcVar1)(iVar3 + 8, 0, 0, 2);\n    uVar2 = (*pcVar1)(*hSourceHandle, uVar2);\n    (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n    *(iVar3 + 4) = *lpThreadAttributes;\n    (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00be8e74, iVar3, 0, 0);\n    return;\n}\n",
        "token_count": 290
    },
    "00bf74a9": {
        "rules": [
            "create thread",
            "create thread"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf74a9(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t lpThreadId;\n    \n    if (*(param_1 + 0x30) == 0) {\n        lpThreadId = param_1;\n        uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00bf748f, param_1, 0, &lpThreadId);\n        *(param_1 + 0x30) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00beafdc": {
        "rules": [
            "get graphical window text/640bf5383e7d4308bf669f3aa2649f29"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00beafdc(uint arg_8h)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t arg_8h_00;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *in_ECX;\n    uint var_18h;\n    uint *hWnd;\n    \n    hWnd = in_ECX;\n    fcn.00b97eec();\n    cVar2 = fcn.00ba619a(*in_ECX);\n    if (cVar2 == '\\0') {\n        uVar4 = fcn.00beb0a2();\n        if (uVar4 == 0) {\n            uVar4 = 0x7fff;\n        }\n        iVar1 = (uVar4 + 1) * 2;\n        arg_8h_00 = fcn.00bb0ff6(-(iVar1 >> 0x20 != 0) | iVar1);\n        iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0xd, uVar4 + 1, arg_8h_00);\n        if (0 < iVar5) {\n            uVar6 = fcn.00bb3980(arg_8h_00);\n            if (uVar6 == uVar4) {\n                uVar4 = 0;\n                if (uVar6 != 0) {\n                    do {\n                        if ((*(uVar4 + arg_8h_00) < ' ') || (*(uVar4 + arg_8h_00) == '\\x7f')) goto code_r0x00beb087;\n                        uVar4 = uVar4 + 1;\n                    } while (uVar4 < uVar6);\n                }\n                fcn.00beae14(arg_8h_00);\n                fcn.00b9793a(&var_18h, arg_8h);\n                fcn.00b95a64();\n            }\n            else {\ncode_r0x00beb087:\n                fcn.00b97d2c(arg_8h_00);\n            }\n        }\n        fcn.00bb106c(arg_8h_00);\n        uVar3 = 1;\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 516
    },
    "00c0301a": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0301a(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar1 = *(arg_8h + 8);\n    uVar2 = fcn.00b99c9c();\n    uVar4 = 1;\n    if (1 < uVar1) {\n        do {\n            uVar3 = fcn.00b99c9c();\n            uVar2 = uVar2 ^ uVar3;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < uVar1);\n    }\n    fcn.00b99a20();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 200
    },
    "00bf568b": {
        "rules": [
            "open process"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf568b(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpdwResult;\n    uint lpdwProcessId;\n    \n    lpdwResult = param_1;\n    lpdwProcessId = param_1;\n    (*_sym.imp.USER32.dll_PostMessageW)(param_1, 0x10, 0, 0);\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)(param_1, 0x10, 0, 0, 2, 500, &lpdwResult);\n    if (iVar1 == 0) {\n        (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(param_1, &lpdwProcessId);\n        uVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1f0fff, 0, lpdwProcessId);\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar2, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "00b910f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00b910f0(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0xd;\n    do {\n        fcn.00b95a64();\n        iVar1 = iVar1 + -1;\n    } while (-1 < iVar1);\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00bb106c(param_1);\n    return param_1;\n}\n",
        "token_count": 105
    },
    "00b91b41": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b91b41(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    puVar3 = arg_8h[0x72];\n    puVar4 = arg_8h[0x72];\n    while (puVar4 != NULL) {\n        if ((arg_ch == 0) || (puVar4 == *(arg_ch + 0x80))) {\n            iVar2 = puVar4[1];\n            while (iVar2 != 0) {\n                iVar1 = *(iVar2 + 4);\n                fcn.00bb106c(iVar2);\n                iVar2 = iVar1;\n            }\n            if ((puVar4 == arg_8h[0x72]) || (*puVar3 == arg_8h[0x72])) {\n                arg_8h[0x72] = *puVar4;\n            }\n            else {\n                *puVar3 = *puVar4;\n            }\n            fcn.00bb106c(puVar4);\n            if (arg_ch != 0) break;\n        }\n        if (arg_ch == 0) {\n            puVar3 = arg_8h[0x72];\n            puVar4 = arg_8h[0x72];\n        }\n        else {\n            puVar3 = puVar4;\n            puVar4 = *puVar4;\n        }\n    }\n    (*_sym.imp.USER32.dll_InvalidateRect)(*arg_8h, 0, 1);\n    return;\n}\n",
        "token_count": 355
    },
    "00b92519": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00b92519(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    if (*0xc56830 == *0xc56828) {\n        if (*0xc56834 == 0xffff) {\n            return -1;\n        }\n        iVar1 = fcn.00bb0ff6(0xa0);\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = fcn.00b93379();\n        }\n        var_4h = iVar1;\n        fcn.00b93416(&var_4h);\n        iVar3 = *0xc56834 + 1;\n        *0xc56834 = iVar3;\n    }\n    else {\n        iVar3 = 3;\n        iVar1 = 0;\n        if (3 < *0xc56828) {\n            do {\n                if (**(*0xc56824 + iVar3 * 4) == 0) break;\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < *0xc56828);\n        }\n        iVar2 = fcn.00bb0ff6(0xa0);\n        if (iVar2 != 0) {\n            iVar1 = fcn.00b93379();\n        }\n    }\n    *0xc56830 = *0xc56830 + 1;\n    **(*0xc56824 + iVar3 * 4) = iVar1;\n    *(iVar1 + 4) = *(arg_8h + 4);\n    return iVar3;\n}\n",
        "token_count": 368
    },
    "00b92649": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00b92649(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    *0xc567cc = 2;\n    *0xc567b8 = 0;\n    *0xc567bc = 0;\n    *0xc567b0 = 1;\n    *0xc567b4 = 1;\n    *0xc567c0 = 0;\n    *0xc567c8 = 1;\n    *0xc567d0 = 0;\n    *0xc567d4 = 0;\n    *0xc567d8 = 0xffffffff;\n    *0xc567dc = 0;\n    *0xc567e0 = 0;\n    *0xc567e4 = 0;\n    *0xc567e8 = 0;\n    fcn.00b977c7();\n    iVar2 = 3;\n    *0xc567c4 = 0x7c;\n    *0xc5680c = 0xc1f918;\n    *0xc56810 = 0;\n    *0xc56814 = 0;\n    *0xc56818 = 0;\n    *0xc5681c = 0xffffffff;\n    *0xc56820 = 0xc1f914;\n    *0xc56824 = 0;\n    *0xc56828 = 0;\n    *0xc5682c = 0;\n    *0xc56830 = 3;\n    *0xc56834 = 2;\n    *0xc56838 = 0;\n    *0xc5683c = 0;\n    *0xc56840 = 0;\n    *0xc56844 = 0xffffffff;\n    *0xc56848 = 0xffffffff;\n    *0xc5687c = 0;\n    *0xc56880 = 0;\n    *0xc56884 = 0;\n    *0xc56888 = 0xffffffff;\n    *0xc567c6 = 0;\n    cVar1 = fcn.00b93582();\n    if (cVar1 != '\\0') {\n        *0xc567c8 = 2;\n        *0xc567cc = 1;\n    }\n    var_4h = 0;\n    do {\n        fcn.00b93416(&var_4h);\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return 0xc567b0;\n}\n",
        "token_count": 547
    },
    "00b931ce": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b931ce(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint32_t uVar6;\n    uint var_4h;\n    \n    uVar6 = 0;\n    if ((*arg_8h != 0) && (uVar1 = *(in_ECX + 100),  uVar1 != 0)) {\n        do {\n            puVar2 = **(*(in_ECX + 0x60) + uVar6 * 4);\n            if (puVar2 != NULL) {\n                if ((puVar2[0x73] != 0) && (piVar3 = *(puVar2[0x73] + 0x10),  piVar3 != NULL)) {\n                    iVar5 = (**(*piVar3 + 0x14))(piVar3, arg_8h);\n                    if (iVar5 == 0) {\n                        return 1;\n                    }\n                    iVar4 = (*_sym.imp.USER32.dll_GetClassLongW)(*arg_8h, 0xffffffe0);\n                    if ((iVar4 != *0xc562b4) && (iVar4 != *0xc56274)) {\n                        return 0;\n                    }\n                }\n                iVar5 = (*_sym.imp.USER32.dll_IsDialogMessageW)(*puVar2, arg_8h);\n                if (iVar5 != 0) {\n                    return 1;\n                }\n            }\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < uVar1);\n    }\n    return 0;\n}\n",
        "token_count": 384
    },
    "00b93488": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b93488(uint *param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    *param_1 = 0xc1f914;\n    if (param_1[2] != 0) {\n        do {\n            fcn.00bb106c(*(param_1[1] + uVar1 * 4));\n            *(param_1[1] + uVar1 * 4) = 0;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_1[2]);\n    }\n    param_1[2] = 0;\n    fcn.00bb106c(param_1[1]);\n    return;\n}\n",
        "token_count": 165
    },
    "00b93553": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b93553(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            fcn.00bb106c(*(*(param_1 + 4) + uVar1 * 4));\n            *(*(param_1 + 4) + uVar1 * 4) = 0;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 148
    },
    "00b950f5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00b950f5(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            pcVar1 = uVar2 + arg_8h;\n            uVar2 = uVar2 + 1;\n            if (*pcVar1 == '\\0') {\n                return 1;\n            }\n        } while (uVar2 < arg_ch);\n    }\n    return 0;\n}\n",
        "token_count": 127
    },
    "00b95632": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00b95632(uint arg_8h, uint32_t *arg_ch)\n\n{\n    bool bVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_1h;\n    \n    fcn.00b95a2f();\n    puVar2 = arg_ch;\n    uVar4 = 0;\n    bVar1 = false;\n    if (*arg_ch != 0) {\n        do {\n            iVar3 = fcn.00b95d20(&arg_ch, 1);\n            if (iVar3 == 0) {\n                if (!bVar1) {\n                    return 0;\n                }\n                break;\n            }\n            bVar1 = true;\n            fcn.00b95bda(arg_ch);\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *puVar2);\n    }\n    *puVar2 = uVar4;\n    return 1;\n}\n",
        "token_count": 237
    },
    "00b96999": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00b96999(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    do {\n        iVar1 = fcn.00bb378c(*(iVar2 * 4 + 0xc34e80), *arg_8h);\n        if (iVar1 == 0) {\n            return iVar2;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x2d);\n    return -1;\n}\n",
        "token_count": 123
    },
    "00b970bd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b970bd(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint32_t arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    iVar3 = 0;\n    while( true ) {\n        arg_8h_00 = *(arg_8h + iVar4 * 2);\n        iVar2 = fcn.00bb385a(arg_8h_00);\n        if (iVar2 == 0) break;\n        iVar2 = fcn.00bb387d(arg_8h_00);\n        if (iVar2 == 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    for (; iVar1 = *(arg_8h + iVar4 * 2),  iVar1 != 0; iVar4 = iVar4 + 1) {\n        *(arg_8h + iVar3 * 2) = iVar1;\n        iVar3 = iVar3 + 1;\n    }\n    *(arg_8h + iVar3 * 2) = 0;\n    return;\n}\n",
        "token_count": 255
    },
    "00b9710a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00b9710a(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00bb2e3c(arg_8h);\n    if (iVar1 != 0) {\n        do {\n            iVar1 = iVar1 + -1;\n            if (iVar1 < 0) break;\n            iVar2 = fcn.00b953b9();\n        } while (iVar2 != 0);\n        *(arg_8h + 2 + iVar1 * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00b9f394": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00b9f394(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    *arg_ch = *arg_ch + 1;\n    iVar4 = 0;\n    iVar3 = *arg_ch;\n    *arg_10h = iVar3;\n    iVar2 = *(arg_8h + 4);\n    do {\n        iVar1 = *(*(iVar2 + iVar3 * 4) + 8);\n        if (iVar1 == 0x47) {\n            iVar4 = iVar4 + 1;\n        }\n        else if (iVar1 == 0x48) {\n            if (iVar4 == 0) {\n                *arg_14h = iVar3;\n                *arg_ch = iVar3 + 1;\n                return 0;\n            }\n            iVar4 = iVar4 + -1;\n        }\n        else if (iVar1 == 0x7f) {\n            fcn.00bfa0b5(0x6f, *(*(iVar2 + -4 + iVar3 * 4) + 10));\n            return 0xffffffff;\n        }\n        iVar3 = iVar3 + 1;\n        *arg_ch = iVar3;\n    } while( true );\n}\n",
        "token_count": 315
    },
    "00ba11d0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00ba11d0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_8h = param_1;\n    var_4h = param_1;\n    fcn.00bb012c();\n    var_4h = *(param_1 + 0x45c);\n    while (var_4h != NULL) {\n        iVar1 = *var_4h;\n        if (*(iVar1 + 0x20) != 0) {\n            fcn.00bf74d2();\n        }\n        if (*(iVar1 + 0x24) != 0) {\n            fcn.00bf74d2();\n        }\n        fcn.00be6cea(&var_8h);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "00ba11f3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00ba11f3(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_10h = *0xc5627c;\n    var_4h = 1;\n    fcn.00b97f41(L\"@EXITCODE\");\n    fcn.00b98b13(&var_20h, &var_10h, 1);\n    fcn.00b95a64();\n    uVar1 = *0xc56270;\n    fcn.00b99a20();\n    var_4h = 1;\n    var_10h = uVar1;\n    fcn.00b97f41(L\"@EXITMETHOD\");\n    fcn.00b98b13(&var_20h, &var_10h, 1);\n    fcn.00b95a64();\n    *(param_1 + 0xf8) = 0;\n    puVar3 = *(param_1 + 300);\n    *0xc56287 = 0;\n    for (; puVar3 != NULL; puVar3 = puVar3[2]) {\n        iVar2 = fcn.00b99fbd(*puVar3);\n        if (iVar2 != 0) {\n            fcn.00be68bf(*(iVar2 + 0x10) + 1, 1);\n        }\n    }\n    *(param_1 + 0xf8) = 1;\n    fcn.00b99a20();\n    return;\n}\n",
        "token_count": 378
    },
    "00ba12ad": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00ba12ad(int32_t param_1)\n\n{\n    while (*(param_1 + 0x15c) != 0) {\n        fcn.00bafdcf();\n    }\n    fcn.00b93553();\n    while (*(param_1 + 0x168) != 0) {\n        fcn.00c0a456();\n    }\n    while (*(param_1 + 0x184) != 0) {\n        fcn.00bed9e3();\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00ba3da4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00ba3da4(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    char cVar2;\n    \n    do {\n        iVar1 = *arg_8h;\n        *arg_8h = iVar1 + 1;\n        iVar1 = fcn.00b971c8(iVar1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        *0xc56404 = extraout_ECX + -1;\n        cVar2 = extraout_DL;\n        if ((*(**(iVar1 + 4) + 2) == 0) && (***(iVar1 + 4) == 0x21)) {\n            cVar2 = '\\x01';\n        }\n    } while (cVar2 == '\\0');\n    return 0;\n}\n",
        "token_count": 197
    },
    "00ba6154": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00ba6154(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            fcn.00bb106c(*(*(param_1 + 4) + uVar1 * 4));\n            *(*(param_1 + 4) + uVar1 * 4) = 0;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 148
    },
    "00ba62c5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00ba62c5(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    do {\n        iVar1 = *(param_1 + 4 + iVar2 * 8);\n        if (iVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_VirtualFreeEx)(*(param_1 + iVar2 * 8), iVar1, 0, 0x8000);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + iVar2 * 8));\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x10);\n    return;\n}\n",
        "token_count": 161
    },
    "00ba62e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00ba62e0(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = param_1 + 4;\n    iVar2 = 0x10;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return param_1;\n}\n",
        "token_count": 109
    },
    "00ba6495": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00ba6495(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    \n    if (param_1 < 0xffffffe1) {\n        do {\n            if (*0xc54204 == 0) {\n                fcn.00bba3ab();\n                fcn.00bba408(0x1e);\n                fcn.00bb32df(0xff);\n            }\n            uVar4 = param_1;\n            if (param_1 == 0) {\n                uVar4 = 1;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0xc54204, 0, uVar4);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            if (*0xc549d4 == 0) {\n                puVar3 = fcn.00bb8d68();\n                *puVar3 = 0xc;\n                break;\n            }\n            iVar2 = fcn.00bb35e1(param_1);\n        } while (iVar2 != 0);\n        puVar3 = fcn.00bb8d68();\n        *puVar3 = 0xc;\n    }\n    else {\n        fcn.00bb35e1(param_1);\n        puVar3 = fcn.00bb8d68();\n        *puVar3 = 0xc;\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 340
    },
    "00bafd71": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00bafd71(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_28h;\n    int32_t var_4h;\n    \n    puVar3 = L\"0123456789ABCDEF\";\n    puVar4 = &var_28h;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_4h = in_EDX;\n    *puVar4 = *puVar3;\n    for (iVar2 = in_EDX + -1; -1 < iVar2; iVar2 = iVar2 + -1) {\n        uVar1 = arg_8h & 0xf;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        arg_ch = arg_ch >> 4;\n        *(in_ECX + iVar2 * 2) = *(&var_28h + uVar1 * 2);\n        in_EDX = var_4h;\n    }\n    *(in_ECX + in_EDX * 2) = 0;\n    return (arg_8h | arg_ch) == 0;\n}\n",
        "token_count": 344
    },
    "00bb011e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bb011e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + 4);\n    if (iVar2 != 0) {\n        do {\n            iVar1 = *(iVar2 + 4);\n            fcn.00bb106c(iVar2);\n            iVar2 = iVar1;\n        } while (iVar1 != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00bb012c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __fastcall fcn.00bb012c(uint *param_1)\n\n{\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_4h = param_1[1];\n    var_8h = param_1;\n    while (var_4h != 0) {\n        fcn.00c029da();\n        var_8h = &var_8h;\n        fcn.00be6cea(var_8h);\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "00bb01a9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bb01a9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(*(*(param_1 + -0x88) + 4) + -0x88 + param_1) = 0xc21cd0;\n    fcn.00bb012c();\n    fcn.00bb01e5();\n    iVar1 = *(param_1 + -0x84);\n    while (iVar1 != 0) {\n        iVar1 = *(iVar1 + 4);\n        fcn.00c019a2();\n    }\n    *(param_1 + -0x7c) = 0;\n    return;\n}\n",
        "token_count": 148
    },
    "00bb0999": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bb0999(uint *param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    *param_1 = 0xc21cec;\n    if (param_1[2] != 0) {\n        do {\n            fcn.00bb106c(*(param_1[1] + uVar1 * 4));\n            *(param_1[1] + uVar1 * 4) = 0;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_1[2]);\n    }\n    param_1[2] = 0;\n    fcn.00bb106c(param_1[1]);\n    return;\n}\n",
        "token_count": 164
    },
    "00bb0a88": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bb0a88(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            fcn.00bb106c(*(*(param_1 + 4) + uVar1 * 4));\n            *(*(param_1 + 4) + uVar1 * 4) = 0;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 149
    },
    "00bb0b5f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bb0b5f(uint *param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    *param_1 = 0xc21d24;\n    if (param_1[2] != 0) {\n        do {\n            fcn.00bb106c(*(param_1[1] + uVar1 * 4));\n            *(param_1[1] + uVar1 * 4) = 0;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_1[2]);\n    }\n    param_1[2] = 0;\n    fcn.00bb106c(param_1[1]);\n    return;\n}\n",
        "token_count": 167
    },
    "00bc52c1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00bc52c1(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00bb8b40(0xc4c090, 0xc);\n    fcn.00bb9e4b(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0xc54dbc;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0xc54db8;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00bc5306;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00bb2f95(arg_8h_00);\ncode_r0x00bc5306:\n        fcn.00bb2f95(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00bc5329();\n    fcn.00bb8b85();\n    return;\n}\n",
        "token_count": 403
    },
    "00be6636": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00be6636(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            iVar1 = *(*(param_1 + 4) + uVar2 * 4);\n            if (iVar1 != 0) {\n                fcn.00be6621(iVar1);\n            }\n            *(*(param_1 + 4) + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 175
    },
    "00be86c8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00be86c8(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    param_1[1] = 4;\n    param_1[2] = 0;\n    fcn.00be8c5a();\n    iVar1 = fcn.00bb0ff6(-(param_1[1] * 4 >> 0x20 != 0) | param_1[1] * 4);\n    *param_1 = iVar1;\n    if (param_1[1] != 0) {\n        do {\n            *(*param_1 + uVar2 * 4) = *(uVar2 * 4 + 0xc53e00);\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < param_1[1]);\n    }\n    return param_1;\n}\n",
        "token_count": 213
    },
    "00be9707": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00be9707(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_8c8h;\n    uint var_c8h;\n    uint var_c0h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_8h;\n    uint lParam;\n    \n    iVar3 = 0;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x1004, 0, 0);\n    fcn.00ba62e0();\n    lParam = fcn.00bf18ee(0x34, *in_ECX);\n    var_28h = fcn.00bf18ee(0x800, *in_ECX);\n    var_34h = arg_ch;\n    var_24h = 0x400;\n    var_8h = var_28h;\n    fcn.00bf19cc(&var_3ch, lParam, 0x34);\n    if (0 < iVar1) {\n        do {\n            (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x1073, iVar3, lParam);\n            fcn.00bf1997(var_8h, &var_8c8h, 0x800);\n            var_c8h._0_2_ = 0;\n            iVar2 = fcn.00bb313d(&var_8c8h, *arg_8h);\n            if (iVar2 == 0) break;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    if (iVar3 == iVar1) {\n        iVar3 = -1;\n    }\n    fcn.00ba62c5();\n    return iVar3;\n}\n",
        "token_count": 441
    },
    "00be9a1e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00be9a1e(uint *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    \n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*param_1, 0x1004, 0, 0);\n    arg_ch = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*param_1, 0x102c, arg_ch, 2);\n            fcn.00be9989(iVar2 == 0, arg_ch, arg_ch);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < iVar1);\n    }\n    return 1;\n}\n",
        "token_count": 172
    },
    "00be9f21": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00be9f21(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    int32_t iVar4;\n    uint uVar5;\n    \n    iVar2 = fcn.00be9e2e(arg_8h);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar2 != 0) {\n        iVar4 = 0;\n        iVar3 = iVar2;\n        if (*(arg_8h + 4) == 0) goto code_r0x00be9f55;\n        uVar5 = 4;\n        while( true ) {\n            iVar3 = (*pcVar1)(*in_ECX, 0x110a, uVar5, iVar3);\ncode_r0x00be9f55:\n            iVar2 = iVar4;\n            if (iVar3 == 0) break;\n            iVar4 = iVar2 + 1;\n            uVar5 = 1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 244
    },
    "00bea3c5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bea3c5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    do {\n        arg_8h = (*_sym.imp.USER32.dll_GetParent)(arg_8h);\n        if (arg_8h == 0) {\n            return 0;\n        }\n    } while (arg_8h != arg_ch);\n    return 1;\n}\n",
        "token_count": 89
    },
    "00beaf13": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00beaf13(uint *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint hWnd;\n    \n    hWnd = *param_1;\n    uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xfffffff0);\n    while( true ) {\n        if ((uVar1 & 0x40000000) == 0) {\n            return hWnd;\n        }\n        iVar2 = fcn.00beaf4b(hWnd);\n        if (iVar2 == 0) break;\n        hWnd = fcn.00beaf4b(hWnd);\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xfffffff0);\n    }\n    return hWnd;\n}\n",
        "token_count": 174
    },
    "00beb328": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00beb328(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    uint16_t *puVar2;\n    int32_t arg_8h_00;\n    uint var_14h;\n    \n    fcn.00b977c7();\n    arg_8h_00 = 0;\n    while( true ) {\n        piVar1 = fcn.00b97b52(arg_8h_00);\n        if (*piVar1 == 0) break;\n        piVar1 = fcn.00b97b52(arg_8h_00);\n        if (*piVar1 == 0x3b) {\n            fcn.00b97a84(0x3b);\n        }\n        puVar2 = fcn.00b97b52(arg_8h_00);\n        fcn.00b97a84(*puVar2);\n        arg_8h_00 = arg_8h_00 + 1;\n    }\n    fcn.00b981a7(&var_14h);\n    fcn.00b95a64();\n    return;\n}\n",
        "token_count": 247
    },
    "00bebc53": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.00bebc53(uint *param_1, uint *param_2)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = param_2;\n    if (param_1 != NULL) goto code_r0x00bebc6f;\n    do {\n        puVar2 = fcn.00be7631(0x80004003);\ncode_r0x00bebc6f:\n    } while (puVar2 == NULL);\n    uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n    pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n    uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x58);\n    uVar5 = (*pcVar1)(uVar3, 0x5a);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar4 = (*_sym.imp.KERNEL32.dll_MulDiv)(0x9ec, *param_1, uVar4);\n    uVar3 = param_1[1];\n    *param_2 = uVar4;\n    uVar3 = (*pcVar1)(0x9ec, uVar3, uVar5);\n    param_2[1] = uVar3;\n    return;\n}\n",
        "token_count": 364
    },
    "00bec9ae": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bec9ae(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint pvargDest;\n    uint var_ch;\n    uint var_8h;\n    \n    *in_ECX = 0xc49a20;\n    in_ECX[1] = 1;\n    in_ECX[4] = 0;\n    fcn.00b99ac0(&arg_ch);\n    in_ECX[6] = 0xc499e4;\n    in_ECX[7] = 0;\n    in_ECX[8] = 0;\n    in_ECX[9] = 0;\n    in_ECX[10] = arg_8h;\n    in_ECX[0xb] = *(arg_8h + 8);\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n    var_ch = 0;\n    var_8h = 0;\n    iVar1 = 9;\n    do {\n        fcn.00becd07(&pvargDest);\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n    fcn.00b99a20();\n    return;\n}\n",
        "token_count": 295
    },
    "00beca4b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00beca4b(uint *param_1)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t iVar4;\n    \n    uVar3 = param_1[0xb];\n    *param_1 = 0xc49a20;\n    for (; uVar3 < *(param_1[10] + 8) - 1U; uVar3 = uVar3 + 1) {\n        **(*(param_1[10] + 4) + uVar3 * 4) = **(*(param_1[10] + 4) + 4 + uVar3 * 4);\n    }\n    iVar4 = param_1[10];\n    *(iVar4 + 8) = *(iVar4 + 8) + -1;\n    fcn.00bb106c(*(*(iVar4 + 4) + *(iVar4 + 8) * 4));\n    *(*(iVar4 + 4) + *(iVar4 + 8) * 4) = 0;\n    fcn.00beccc6();\n    fcn.00beca32();\n    piVar1 = param_1 + 2;\n    puVar2 = param_1[4];\n    if (puVar2 == NULL) {\n        iVar4 = param_1[5];\n    }\n    else {\n        *puVar2[3] = *puVar2[3] + -1;\n        if (*puVar2[3] == 0) {\n            fcn.00bb106c(*puVar2, unaff_EDI, unaff_ESI);\n            fcn.00bb106c(puVar2[3]);\n        }\n        fcn.00bb106c(puVar2, unaff_EDI, unaff_ESI);\n        param_1[4] = 0;\n        iVar4 = param_1[5];\n    }\n    if (iVar4 < 5) goto code_r0x00b99a33;\n    switch(iVar4) {\n    case 5:\n        if (*piVar1 != 0) {\n            fcn.00b98e34(*piVar1);\n        }\n        break;\n    case 8:\n        if (*piVar1 == 0) break;\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*piVar1);\n        iVar4 = *piVar1;\n        goto code_r0x00bcfaa7;\n    case 10:\n        iVar4 = *piVar1;\n        goto joined_r0x00bcfa99;\n    case 0xb:\n        fcn.00bb106c(*(*piVar1 + 4), unaff_EDI, unaff_ESI);\n        fcn.00bb106c(*piVar1);\n        break;\n    case 0xc:\n        if (*piVar1 != 0) {\n            fcn.00be73f0(*piVar1);\n        }\n        break;\n    case 0xd:\n    case 0xe:\n        iVar4 = *piVar1;\njoined_r0x00bcfa99:\n        if (iVar4 != 0) {\n            fcn.00b95a64();\ncode_r0x00bcfaa7:\n            fcn.00bb106c(iVar4);\n        }\n        break;\n    case 0xf:\n        if (*piVar1 != 0) {\n            fcn.00be7405(*piVar1);\n        }\n    }\ncode_r0x00b99a33:\n    param_1[5] = 1;\n    *piVar1 = 0;\n    return;\n}\n",
        "token_count": 814
    },
    "00beccc6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00beccc6(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            iVar1 = *(*(param_1 + 4) + uVar2 * 4);\n            if (iVar1 != 0) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(iVar1);\n                *(iVar1 + 8) = 0;\n                *(iVar1 + 0xc) = 0;\n                fcn.00bb106c(iVar1);\n            }\n            *(*(param_1 + 4) + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 217
    },
    "00bee1af": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bee1af(uint lpString2, uint *arg_ch, int16_t *arg_10h)\n\n{\n    int16_t *piVar1;\n    int64_t iVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int16_t *lpString2_00;\n    int32_t iVar5;\n    \n    *arg_ch = 4;\n    iVar3 = fcn.00bef5ad(lpString2);\n    *arg_10h = iVar3;\n    if (iVar3 == -1) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n        iVar2 = (iVar4 + 1) * 2;\n        lpString2_00 = fcn.00bb0ff6(-(iVar2 >> 0x20 != 0) | iVar2);\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpString2_00, lpString2);\n        lpString2_00[iVar4] = 0;\n        iVar4 = 0;\n        iVar3 = *lpString2_00;\n        piVar1 = lpString2_00;\n        while (iVar3 != 0) {\n            if (*piVar1 == 0x3a) {\n                iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(lpString2_00 + iVar4 + 1, 0xc49aa4);\n                if (iVar5 == 0) {\n                    *arg_ch = 1;\n                }\n                lpString2_00[iVar4] = 0;\n                iVar3 = fcn.00bef5ad(lpString2_00);\n                *arg_10h = iVar3;\n                break;\n            }\n            iVar4 = iVar4 + 1;\n            piVar1 = lpString2_00 + iVar4;\n            iVar3 = *piVar1;\n        }\n        fcn.00bb106c(lpString2_00);\n    }\n    return;\n}\n",
        "token_count": 434
    },
    "00bee267": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bee267(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar2 = *arg_8h;\n    piVar1 = arg_8h;\n    while (iVar2 != 0) {\n        if (arg_ch == 0) {\n            if (*piVar1 == 0x2e) {\n                *piVar1 = 0x2c;\n            }\n        }\n        else if (*piVar1 == 0x2c) {\n            *piVar1 = 0x2e;\n        }\n        iVar3 = iVar3 + 1;\n        piVar1 = arg_8h + iVar3;\n        iVar2 = *piVar1;\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00beff75": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00beff75(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (((*0xc57298 == 0) || (*0xc572a0 < arg_8h)) || (arg_8h < 1)) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        arg_8h = arg_8h + -1;\n        iVar1 = *0xc57298;\n        if (0 < arg_8h) {\n            do {\n                iVar1 = *(iVar1 + 0xc);\n                arg_8h = arg_8h + -1;\n            } while (arg_8h != 0);\n        }\n        uVar2 = *(iVar1 + 4);\n    }\n    return uVar2;\n}\n",
        "token_count": 183
    },
    "00beffa7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00beffa7(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (((*0xc57298 == 0) || (*0xc572a0 < arg_8h)) || (arg_8h < 1)) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        arg_8h = arg_8h + -1;\n        iVar1 = *0xc57298;\n        if (0 < arg_8h) {\n            do {\n                iVar1 = *(iVar1 + 0xc);\n                arg_8h = arg_8h + -1;\n            } while (arg_8h != 0);\n        }\n        uVar2 = *(iVar1 + 8);\n    }\n    return uVar2;\n}\n",
        "token_count": 183
    },
    "00bf08b6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00bf08b6(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_ch;\n    \n    if (0 < arg_ch) {\n        fcn.00bf0195();\n        fcn.00bf1831(arg_8h);\n        if (var_ch != -1) {\n            fcn.00bf052c(&var_ch + 1);\n            fcn.00bf1276(in_ECX + 0x14);\n        }\n        do {\n            fcn.00bf1259(&var_ch);\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n        if (var_ch != -1) {\n            fcn.00bf145d(in_ECX + 0x14);\n        }\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00bf0f1b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00bf0f1b(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (0 < arg_ch) {\n        fcn.00bf0195();\n        fcn.00bf189f(arg_8h);\n        var_8h = 0;\n        var_4h._0_2_ = 0;\n        fcn.00bf052c(&var_8h);\n        fcn.00bf1276(in_ECX + 0x14);\n        do {\n            fcn.00bf1259(&var_14h);\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n        fcn.00bf145d(in_ECX + 0x14);\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00bf1a01": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf1a01(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    *in_ECX = 0xc1f914;\n    uVar4 = *(arg_8h + 8);\n    in_ECX[2] = uVar4;\n    if (uVar4 == 0) {\n        in_ECX[3] = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        uVar3 = 8;\n        if (7 < uVar4) {\n            uVar3 = uVar4;\n        }\n        in_ECX[3] = uVar3;\n        uVar1 = fcn.00bb0ff6(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        uVar4 = 0;\n        in_ECX[1] = uVar1;\n        if (in_ECX[2] != 0) {\n            do {\n                puVar2 = fcn.00bb0ff6(4);\n                if (puVar2 == NULL) {\n                    puVar2 = NULL;\n                }\n                else {\n                    *puVar2 = **(*(arg_8h + 4) + uVar4 * 4);\n                }\n                *(in_ECX[1] + uVar4 * 4) = puVar2;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < in_ECX[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 369
    },
    "00bf1ee8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00bf1ee8(uint32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    *arg_14h = arg_8h & 0x3ff;\n    iVar1 = *(*(in_ECX + 0x14) + (arg_8h & 0x3ff) * 4);\n    *arg_10h = 0;\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = *(iVar1 + 8);\n        if ((*(iVar2 + 0x18) == arg_8h) && (*(iVar2 + 0x1c) == arg_ch)) break;\n        iVar1 = *(iVar1 + 4);\n    }\n    *arg_10h = iVar1;\n    return iVar2;\n}\n",
        "token_count": 228
    },
    "00bf34df": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00bf34df(uint arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    fcn.00b97eec();\n    bVar1 = false;\n    do {\n        cVar2 = fcn.00bf3436(&var_4h);\n        if (cVar2 == '\\0') {\n            if (bVar1) {\ncode_r0x00bf3542:\n                uVar3 = 1;\n            }\n            else {\n                uVar3 = 0;\n            }\n            return uVar3;\n        }\n        bVar1 = true;\n        if (var_4h == 0xd) {\n            cVar2 = fcn.00bf3436(&var_4h);\n            if ((cVar2 != '\\0') && (var_4h != 10)) {\n                fcn.00b95c4e(0xfffffffe, 0xffffffff, 1);\n            }\n            goto code_r0x00bf3542;\n        }\n        if (var_4h == 10) goto code_r0x00bf3542;\n        fcn.00b97a84(var_4h);\n    } while( true );\n}\n",
        "token_count": 288
    },
    "00bf49c9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00bf49c9(uint16_t *param_1)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    uVar2 = *param_1;\n    puVar1 = param_1;\n    while( true ) {\n        if (uVar2 == 0) {\n            uVar4 = fcn.00bb37d3(param_1);\n            return uVar4;\n        }\n        iVar3 = fcn.00bb386c(*puVar1);\n        if (iVar3 == 0) break;\n        iVar5 = iVar5 + 1;\n        puVar1 = param_1 + iVar5;\n        uVar2 = *puVar1;\n    }\n    return 0;\n}\n",
        "token_count": 194
    },
    "00bf562d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf562d(int32_t param_1)\n\n{\n    uint32_t arg_8h;\n    int16_t *piVar1;\n    uint16_t *puVar2;\n    uint32_t arg_8h_00;\n    uint var_10h;\n    \n    arg_8h = *(param_1 + 4);\n    fcn.00b97b76(arg_8h);\n    arg_8h_00 = 0;\n    if (arg_8h != 0) {\n        do {\n            piVar1 = fcn.00b97b52(arg_8h_00);\n            if (*piVar1 != 0xd) {\n                puVar2 = fcn.00b97b52(arg_8h_00);\n                fcn.00b97a84(*puVar2);\n            }\n            arg_8h_00 = arg_8h_00 + 1;\n        } while (arg_8h_00 < arg_8h);\n    }\n    fcn.00b981a7(&var_10h);\n    fcn.00b95a64();\n    return;\n}\n",
        "token_count": 252
    },
    "00bf9c9f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf9c9f(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    *in_ECX = 0xc1fb84;\n    uVar4 = *(arg_8h + 8);\n    in_ECX[2] = uVar4;\n    if (uVar4 == 0) {\n        in_ECX[3] = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        uVar3 = 8;\n        if (7 < uVar4) {\n            uVar3 = uVar4;\n        }\n        in_ECX[3] = uVar3;\n        uVar1 = fcn.00bb0ff6(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        uVar4 = 0;\n        in_ECX[1] = uVar1;\n        if (in_ECX[2] != 0) {\n            do {\n                iVar2 = fcn.00bb0ff6(0x10);\n                if (iVar2 == 0) {\n                    iVar2 = 0;\n                }\n                else {\n                    uVar1 = *(*(arg_8h + 4) + uVar4 * 4);\n                    *(iVar2 + 8) = 0;\n                    fcn.00b99ac0(uVar1);\n                }\n                *(in_ECX[1] + uVar4 * 4) = iVar2;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < in_ECX[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 394
    },
    "00c0157d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c0157d(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *in_ECX;\n    \n    *in_ECX = 0xc32f48;\n    uVar2 = *(arg_8h + 8);\n    in_ECX[2] = uVar2;\n    if (uVar2 == 0) {\n        in_ECX[3] = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        if (uVar2 < 8) {\n            uVar2 = 8;\n        }\n        in_ECX[3] = uVar2;\n        uVar3 = fcn.00bb0ff6(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        uVar2 = 0;\n        in_ECX[1] = uVar3;\n        if (in_ECX[2] != 0) {\n            do {\n                puVar4 = fcn.00bb0ff6(8);\n                if (puVar4 == NULL) {\n                    puVar4 = NULL;\n                }\n                else {\n                    puVar1 = *(*(arg_8h + 4) + uVar2 * 4);\n                    *puVar4 = *puVar1;\n                    puVar4[1] = puVar1[1];\n                }\n                *(in_ECX[1] + uVar2 * 4) = puVar4;\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < in_ECX[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 384
    },
    "00c01ed4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00c01ed4(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    iVar1 = fcn.00b99c9c();\n    arg_8h = *(in_ECX + 4);\n    while (arg_8h != NULL) {\n        if (*(*arg_8h + 0xd8) == iVar1) {\n            fcn.00c02bd8(&arg_8h);\n            var_4h = CONCAT31(var_4h._1_3_, 1);\n            fcn.00b99863(var_4h);\n        }\n        fcn.00be6cea(&var_8h);\n    }\n    arg_8h = NULL;\n    fcn.00b99863(0);\n    return 0;\n}\n",
        "token_count": 227
    },
    "00c02a8f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00c02a8f(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            puVar1 = *(*(param_1 + 4) + uVar2 * 4);\n            if (puVar1 != NULL) {\n                fcn.00bb106c(*puVar1);\n                fcn.00bb106c(puVar1);\n            }\n            *(*(param_1 + 4) + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 192
    },
    "00c02d4e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c02d4e(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar1 = *(arg_8h + 8);\n    uVar2 = fcn.00b99c9c();\n    uVar4 = 1;\n    if (1 < uVar1) {\n        do {\n            uVar3 = fcn.00b99c9c();\n            uVar2 = uVar2 & uVar3;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < uVar1);\n    }\n    fcn.00b99a20();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 201
    },
    "00c02dd1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c02dd1(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar1 = *(arg_8h + 8);\n    uVar2 = fcn.00b99c9c();\n    uVar4 = 1;\n    if (1 < uVar1) {\n        do {\n            uVar3 = fcn.00b99c9c();\n            uVar2 = uVar2 | uVar3;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < uVar1);\n    }\n    fcn.00b99a20();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 200
    },
    "00c0a528": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c0a528(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    *in_ECX = 0xc1fb78;\n    uVar4 = *(arg_8h + 8);\n    in_ECX[2] = uVar4;\n    if (uVar4 == 0) {\n        in_ECX[3] = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        uVar3 = 8;\n        if (7 < uVar4) {\n            uVar3 = uVar4;\n        }\n        in_ECX[3] = uVar3;\n        uVar1 = fcn.00bb0ff6(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        uVar4 = 0;\n        in_ECX[1] = uVar1;\n        if (in_ECX[2] != 0) {\n            do {\n                iVar2 = fcn.00bb0ff6(0xc);\n                if (iVar2 == 0) {\n                    uVar1 = 0;\n                }\n                else {\n                    uVar1 = fcn.00be6ac9(*(*(arg_8h + 4) + uVar4 * 4));\n                }\n                *(in_ECX[1] + uVar4 * 4) = uVar1;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < in_ECX[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "00c0acb6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c0acb6(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar2 = *(arg_8h + 4);\n    iVar4 = *(iVar2 + *arg_ch * 4);\n    do {\n        if (*(iVar4 + 8) == 0x7f) {\n            return;\n        }\n        iVar1 = *(*(iVar2 + *arg_ch * 4) + 8);\n        if (iVar1 == 0x47) {\ncode_r0x00c0aced:\n            iVar3 = iVar3 + 1;\n        }\n        else if (iVar1 == 0x48) {\ncode_r0x00c0acea:\n            iVar3 = iVar3 + -1;\n        }\n        else {\n            if (iVar1 == 0x4e) goto code_r0x00c0aced;\n            if (iVar1 == 0x4f) goto code_r0x00c0acea;\n        }\n        iVar4 = *arg_ch + 1;\n        *arg_ch = iVar4;\n        if ((iVar3 == 0) && (*(*(iVar2 + iVar4 * 4) + 8) == 0x40)) {\n            return;\n        }\n        iVar4 = *(iVar2 + iVar4 * 4);\n    } while( true );\n}\n",
        "token_count": 330
    },
    "00c0c4a7": {
        "rules": [
            "contain loop",
            "query environment variable"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c0c4a7(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    ushort uStackY8232;\n    uint lpName;\n    uint var_14h;\n    uint uStackY20;\n    \n    fcn.00bc1b90();\n    uStackY20 = 0xc0c4bf;\n    fcn.00b977c7();\n    uStackY20 = 0xc0c4c7;\n    fcn.00b977c7();\n    uStackY20 = 0xc0c4d5;\n    fcn.00b99997();\n    bVar3 = false;\n    puVar2 = **(arg_8h + 8);\n    uVar1 = *puVar2;\n    iVar4 = 0;\n    if (uVar1 != 0) {\n        do {\n            uStackY20 = 0x25;\n            iVar5 = iVar4 + 1;\n            if (uVar1 == 0x25) {\n                if (puVar2[iVar5] == 0x25) {\n                    bVar3 = true;\n                    var_14h = 0xc0c506;\n                    fcn.00b97a84(0x25);\n                    iVar5 = iVar4 + 2;\n                }\n                else {\n                    var_14h = 0xc0c519;\n                    fcn.00b97d2c(0xc1f910);\n                    var_14h = 0x25;\n                    while( true ) {\n                        uVar1 = puVar2[iVar5];\n                        if ((uVar1 == 0x25) || (uVar1 == 0)) break;\n                        fcn.00b97a84(uVar1);\n                        iVar5 = iVar5 + 1;\n                    }\n                    if (puVar2[iVar5] == 0) {\n                        bVar3 = true;\n                        fcn.00b97e0b(0xc4ad1c);\n                        uStackY20 = 0xc0c5cb;\n                        fcn.00b97c8e(&fcn.00c0c4a7::lpName);\n                        break;\n                    }\n                    uStackY8232 = 0;\n                    iVar5 = iVar5 + 1;\n                    uStackY20 = lpName;\n                    var_14h = 0xc0c55b;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)();\n                    if (iVar4 == 0) {\n                        bVar3 = true;\n                        fcn.00b97e0b(0xc4ad1c);\n                        fcn.00b97c8e(&fcn.00c0c4a7::lpName);\n                        uStackY20 = 0xc0c597;\n                        fcn.00b97e0b(0xc4ad1c);\n                    }\n                    else {\n                        fcn.00b97e0b(&stack0xffffdfd8);\n                        bVar3 = true;\n                    }\n                }\n            }\n            else {\n                var_14h = 0xc0c5a2;\n                fcn.00b97a84(uVar1);\n            }\n            uVar1 = puVar2[iVar5];\n            iVar4 = iVar5;\n        } while (uVar1 != 0);\n        if (bVar3) {\n            var_14h = 0xc0c5db;\n            fcn.00b99b9c(&fcn.00c0c4a7::var_14h);\n        }\n    }\n    uStackY20 = 0xc0c5e3;\n    fcn.00b95a64();\n    uStackY20 = 0xc0c5eb;\n    fcn.00b95a64();\n    return;\n}\n",
        "token_count": 863
    },
    "00c0c5f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4ch\n\nvoid __cdecl fcn.00c0c5f4(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    uint32_t arg_8h_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t unaff_EDI;\n    uint *var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t lpsz;\n    uint32_t cchLength;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b977c7();\n    fcn.00b99997();\n    puVar2 = **(arg_8h + 8);\n    bVar3 = false;\n    var_8h = 0;\n    var_4ch = NULL;\n    uVar1 = *puVar2;\n    iVar4 = 0;\n    if (uVar1 != 0) {\n        do {\n            arg_8h_00 = uVar1;\n            iVar5 = iVar4 + 1;\n            if (uVar1 == 0x24) {\n                if (puVar2[iVar5] == 0x24) {\ncode_r0x00c0c662:\n                    bVar3 = true;\n                    fcn.00b97a84(unaff_EDI);\n                    iVar5 = iVar4 + 2;\n                    arg_8h_00 = unaff_EDI;\n                }\n                else {\n                    fcn.00b97d2c(0xc1f910);\n                    while( true ) {\n                        uVar1 = puVar2[iVar5];\n                        if ((uVar1 == 0x24) || (uVar1 == 0)) break;\n                        fcn.00b97a84(uVar1);\n                        iVar5 = iVar5 + 1;\n                    }\n                    if (puVar2[iVar5] == 0) {\n                        fcn.00b97e0b(0xc49e0c);\n                        fcn.00b97c8e(&var_3ch);\n                        goto code_r0x00c0c830;\n                    }\n                    iVar5 = iVar5 + 1;\n                    fcn.00b981a7(&var_3ch);\n                    fcn.00b97faf();\n                    arg_8h_00 = lpsz;\n                    (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n                    var_4ch = &var_8h;\n                    iVar4 = fcn.00b9859a(&lpsz, var_4ch, 0);\n                    if (iVar4 == 0) {\n                        fcn.00b97e0b(0xc49e0c);\n                        fcn.00b97c8e(&var_3ch);\n                        arg_8h_00 = 0xc49e0c;\n                        goto code_r0x00c0c7d5;\n                    }\n                    fcn.00b99997();\n                    fcn.00b97e0b(**(iVar4 + 8));\ncode_r0x00c0c6f1:\n                    bVar3 = true;\n                }\n            }\n            else if (uVar1 == 0x40) {\n                if (puVar2[iVar5] == 0x40) goto code_r0x00c0c662;\n                fcn.00b97d2c(0xc1f910);\n                while( true ) {\n                    uVar1 = puVar2[iVar5];\n                    if ((uVar1 == 0x40) || (uVar1 == 0)) break;\n                    fcn.00b97a84(uVar1);\n                    iVar5 = iVar5 + 1;\n                }\n                if (puVar2[iVar5] == 0) {\n                    bVar3 = true;\n                    fcn.00b97e0b(0xc4ad20);\n                    fcn.00b97c8e(&var_3ch);\n                    break;\n                }\n                iVar5 = iVar5 + 1;\n                fcn.00b981a7(&var_3ch);\n                fcn.00b97faf();\n                arg_8h_00 = cchLength;\n                (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz);\n                var_4ch = &var_4ch;\n                iVar4 = fcn.00b9c707(&lpsz, var_4ch);\n                if (-1 < iVar4) {\n                    fcn.00b99997();\n                    fcn.00b97c8e(0);\n                    goto code_r0x00c0c6f1;\n                }\n                fcn.00b97e0b(0xc4ad20);\n                fcn.00b97c8e(&var_3ch);\n                arg_8h_00 = 0xc4ad20;\ncode_r0x00c0c7d5:\n                bVar3 = true;\n                fcn.00b97e0b(arg_8h_00);\n            }\n            else {\n                fcn.00b97a84(arg_8h_00);\n            }\n            uVar1 = puVar2[iVar5];\n            iVar4 = iVar5;\n            unaff_EDI = arg_8h_00;\n        } while (uVar1 != 0);\n        if (bVar3) {\ncode_r0x00c0c830:\n            fcn.00b99b9c(&var_1ch);\n        }\n    }\n    fcn.00b99a20();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    fcn.00b95a64();\n    return;\n}\n",
        "token_count": 1304
    },
    "00c0c865": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0c865(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint var_4h;\n    \n    while( true ) {\n        if (*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) != 0x35) {\n            return 0;\n        }\n        iVar1 = *arg_ch;\n        if (*(*arg_10h + 0xc) != 0xf) break;\n        arg_8h_00 = **(*(arg_8h + 4) + iVar1 * 4);\n        *arg_ch = iVar1 + 1;\n        iVar1 = fcn.00bf1f32(arg_8h_00, 0x10);\n        *arg_10h = iVar1;\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    fcn.00bfa0b5(0x7a, *(*(*(arg_8h + 4) + iVar1 * 4) + 10));\n    return 0xffffffff;\n}\n",
        "token_count": 267
    },
    "00c0cc82": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00c0cc82(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    *in_ECX = 0xc4b08c;\n    uVar4 = *(arg_8h + 8);\n    in_ECX[2] = uVar4;\n    if (uVar4 == 0) {\n        in_ECX[3] = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        uVar3 = 8;\n        if (7 < uVar4) {\n            uVar3 = uVar4;\n        }\n        in_ECX[3] = uVar3;\n        uVar1 = fcn.00bb0ff6(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        uVar4 = 0;\n        in_ECX[1] = uVar1;\n        if (in_ECX[2] != 0) {\n            do {\n                puVar2 = fcn.00bb0ff6(4);\n                if (puVar2 == NULL) {\n                    puVar2 = NULL;\n                }\n                else {\n                    *puVar2 = **(*(arg_8h + 4) + uVar4 * 4);\n                }\n                *(in_ECX[1] + uVar4 * 4) = puVar2;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < in_ECX[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 370
    },
    "00c0cd60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00c0cd60(uint *param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    *param_1 = 0xc4b08c;\n    if (param_1[2] != 0) {\n        do {\n            fcn.00bb106c(*(param_1[1] + uVar1 * 4));\n            *(param_1[1] + uVar1 * 4) = 0;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_1[2]);\n    }\n    param_1[2] = 0;\n    fcn.00bb106c(param_1[1]);\n    return;\n}\n",
        "token_count": 167
    },
    "00c0fe50": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00c0fe50(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            iVar1 = *(*(param_1 + 4) + uVar2 * 4);\n            if (iVar1 != 0) {\n                fcn.00b95a64();\n                fcn.00bb106c(iVar1);\n            }\n            *(*(param_1 + 4) + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 186
    },
    "00c11702": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00c11702(int32_t **arg_8h, int32_t **arg_ch)\n\n{\n    int32_t *piVar1;\n    double in_stack_0000000c;\n    uint *var_ch;\n    uint var_4h;\n    double dStack12;\n    \n    piVar1 = *arg_ch;\n    while( true ) {\n        if (piVar1 == NULL) {\n            *arg_8h = NULL;\n            return;\n        }\n        dStack12 = *(*piVar1 + 4);\n        if (*(*piVar1 + 4) < 0) {\n            dStack12 = dStack12 + *0xc4bac8;\n        }\n        if (dStack12 == in_stack_0000000c) break;\n        var_ch = &var_ch;\n        fcn.00be6cea(var_ch);\n    }\n    *arg_8h = piVar1;\n    return;\n}\n",
        "token_count": 230
    },
    "00c12192": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c12192(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t arg_8h_00;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00b99997();\n    uVar1 = *(*(iVar2 + 8) + 4);\n    fcn.00b99a20();\n    arg_8h_00 = 0;\n    arg_ch[3] = 1;\n    *arg_ch = 0;\n    if (uVar1 != 0) {\n        do {\n            fcn.00b97b20(arg_8h_00);\n            iVar2 = fcn.00bf4ce9();\n            if (iVar2 == 0) {\n                return 0;\n            }\n            arg_8h_00 = arg_8h_00 + 1;\n        } while (arg_8h_00 < uVar1);\n    }\n    fcn.00b99a20();\n    arg_ch[3] = 1;\n    *arg_ch = 1;\n    return 0;\n}\n",
        "token_count": 260
    },
    "00c1b602": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00c1b602(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint32_t noname_4;\n    uint uVar3;\n    int32_t iVar4;\n    char cVar5;\n    uint uStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint auStack56 [2];\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint auStack24 [2];\n    uint uStack16;\n    uint uStack12;\n    \n    iVar4 = *0xc56408;\n    iStack60 = *0xc56408;\n    if ((*0xc56408 == 1) || (*0xc56287 != '\\0')) {\ncode_r0x00c013c0:\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0;\n        uStack12 = 1;\n        noname_4 = 0;\n        *0xc56408 = 0;\n        auStack24[0] = 0;\n        uStack16 = 0;\n        auStack56[0] = 0;\n        uStack48 = 0;\n        uStack44 = 1;\n        uStack40 = 0xc1fb84;\n        uStack36 = 0;\n        uStack32 = 0;\n        uStack28 = 0;\n        iStack64 = 0;\n        if (*0xc56800 != 0) {\n            do {\n                uVar1 = *0xc567ec;\n                if (noname_4 == 0) {\n                    fcn.00b99a20();\n                    auStack56[0] = uVar1;\n                    uStack44 = 1;\n                }\n                else {\n                    if (noname_4 == 1) {\n                        fcn.00b99a20();\n                        auStack56[0] = param_1;\n                    }\n                    else {\n                        if (noname_4 != 2) {\n                            if (noname_4 == 3) {\n                                fcn.00b99a20();\n                                uStack44 = 1;\n                                auStack56[0] = param_3;\n                            }\n                            goto code_r0x00c01314;\n                        }\n                        fcn.00b99a20();\n                        auStack56[0] = param_2;\n                    }\n                    uStack44 = 1;\n                }\ncode_r0x00c01314:\n                fcn.00be6665(auStack56);\n                noname_4 = uStack68 + 1;\n                iVar4 = iStack64;\n                uStack68 = noname_4;\n            } while (noname_4 < *0xc56800);\n        }\n        uStack68 = uStack68 & 0xffffff;\n        cVar5 = '\\0';\n        cVar2 = fcn.00c03bb3(0xc567f0, &uStack40, auStack24, 0, noname_4, &uStack68 + 3);\n        if ((cVar2 != '\\0') && (*0xc56408 != 1)) {\n            *0xc56408 = iVar4;\n            if (cVar5 == '\\0') {\n                fcn.00be66f4();\n                fcn.00b99a20();\n                fcn.00b99a20();\n                goto code_r0x00c013c0;\n            }\n            uVar3 = fcn.00b99c9c();\n        }\n        fcn.00be66f4();\n        fcn.00b99a20();\n        fcn.00b99a20();\n    }\n    return uVar3;\n}\n",
        "token_count": 837
    },
    "00c1e163": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00c1e163(int32_t param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = \"no error\";\n    while( true ) {\n        if (param_1 < 1) {\n            return pcVar2;\n        }\n        do {\n            cVar1 = *pcVar2;\n            pcVar2 = pcVar2 + 1;\n        } while (cVar1 != '\\0');\n        if (*pcVar2 == '\\0') break;\n        param_1 = param_1 + -1;\n    }\n    return \"Error text not found (please report)\";\n}\n",
        "token_count": 143
    },
    "00bfb839": {
        "rules": [
            "set current directory"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfb839(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.00b99997();\n    iVar1 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(**(iVar1 + 8));\n    if (iVar1 == 0) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "00bb0b9b": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.00bb0b9b(void)\n\n{\n    uchar auStackY65540 [65516];\n    uint uStackY24;\n    \n    fcn.00bc1b90();\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n    uStackY24 = 0xbb0bcb;\n    fcn.00b97d2c(&stack0xfffefffc);\n    return;\n}\n",
        "token_count": 92
    },
    "00bf49ff": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00bf49ff(uint param_1)\n\n{\n    uint hwndOwner;\n    \n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, param_1, 0, 0, &hwndOwner);\n    fcn.00b97d2c(&hwndOwner);\n    return;\n}\n",
        "token_count": 71
    },
    "00bf9b6d": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bf9b6d(uint arg_8h)\n\n{\n    uint lpBuffer;\n    \n    (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, &lpBuffer);\n    (*_sym.imp.KERNEL32.dll_GetTempFileNameW)(&lpBuffer, 0xc4a4f4, 0, arg_8h);\n    return;\n}\n",
        "token_count": 87
    },
    "00bf189f": {
        "rules": [
            "log keystrokes"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00bf189f(uint arg_8h)\n\n{\n    char cVar1;\n    char *in_ECX;\n    \n    *(in_ECX + 6) = 0;\n    *(in_ECX + 1) = 0;\n    in_ECX[5] = '\\0';\n    in_ECX[10] = '\\0';\n    *in_ECX = arg_8h;\n    if (arg_8h != -1) {\n        cVar1 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(arg_8h, 0);\n        in_ECX[7] = cVar1;\n    }\n    return arg_8h != -1;\n}\n",
        "token_count": 153
    },
    "00b94fe9": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00b94fe9(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint hResData;\n    \n    ppiVar1 = param_1 + 0x10;\n    iVar2 = (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(0, 1, ppiVar1);\n    if ((((-1 < iVar2) &&\n         (iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceExW)(*(param_1 + 0xc), 10, 0xc1faf0, 0),  iVar2 != 0)) &&\n        (iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(*(param_1 + 0xc), iVar2),  iVar3 != 0)) &&\n       ((iVar2 = (*_sym.imp.KERNEL32.dll_SizeofResource)(*(param_1 + 0xc), iVar2),  iVar2 != 0 &&\n        (iVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar3),  iVar3 != 0)))) {\n        (**(**ppiVar1 + 0x10))(*ppiVar1, iVar3, iVar2, 0);\n        (**(**ppiVar1 + 0x14))(*ppiVar1, 0, 0, 0, 0);\n        *(param_1 + 0x14) = 1;\n    }\n    return;\n}\n",
        "token_count": 327
    },
    "00c04583": {
        "rules": [
            "query environment variable"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c04583(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    ushort *var_8h;\n    int32_t *var_4h;\n    \n    arg_8h_00 = fcn.00bb0ff6(0x10000);\n    fcn.00b9538e(arg_8h_00);\n    *var_8h = 0;\n    iVar1 = **(arg_8h + 4);\n    fcn.00b99997();\n    (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(**(iVar1 + 8), var_8h, 0x7fff);\n    fcn.00bf7738(&var_8h);\n    *var_4h = *var_4h + -1;\n    if (*var_4h == 0) {\n        fcn.00bb106c(var_4h);\n        fcn.00bb106c(var_8h);\n    }\n    return 0;\n}\n",
        "token_count": 238
    },
    "00bba007": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00bba007(uint arg_8h)\n\n{\n    if ((*0xc551a8 ^ *0xc4fd50) != NULL) {\n        (*(*0xc551a8 ^ *0xc4fd50))();\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_TlsGetValue)(arg_8h);\n    return;\n}\n",
        "token_count": 82
    },
    "00c0412d": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00c0412d(uint noname_0, uint arg_ch)\n\n{\n    uint arg_8h;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = fcn.00bb0ff6(0x10000);\n    fcn.00b9538e(arg_8h);\n    (*_sym.imp.USER32.dll_GetWindowTextW)(*0xc562ac, in_ECX, 0x7fff);\n    fcn.00b99bf8(in_ECX);\n    *in_ECX = *in_ECX + -1;\n    if (*in_ECX == 0) {\n        fcn.00bb106c(in_ECX);\n        fcn.00bb106c(in_ECX);\n    }\n    return 0;\n}\n",
        "token_count": 185
    },
    "00bf3c40": {
        "rules": [
            "copy file"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00bf3c40(uint *param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CopyFileExW)(*param_1, *param_2, 0, 0, &var_4h, 8);\n    return iVar1 == 1;\n}\n",
        "token_count": 99
    },
    "00bf53c5": {
        "rules": [
            "delete directory"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ah\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00bf53c5(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    uint unaff_EBX;\n    uchar auStackY65572 [2];\n    ushort auStackY65570 [32767];\n    uint lpFileOp;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    ushort var_10h;\n    uint var_eh;\n    uint var_ah;\n    uint var_6h;\n    ushort uStack6;\n    \n    var_6h._2_1_ = 0xd2;\n    var_6h._3_1_ = 0x53;\n    uStack6 = 0xbf;\n    fcn.00bc1b90();\n    var_6h._2_1_ = unaff_EBX;\n    var_6h._3_1_ = unaff_EBX >> 8;\n    uStack6 = unaff_EBX >> 0x10;\n    var_ah._2_1_ = SUB41(auStackY65572, 0);\n    var_ah._3_1_ = auStackY65572 >> 8;\n    var_6h._0_2_ = auStackY65572 >> 0x10;\n    var_eh._2_1_ = 0xe8;\n    var_eh._3_1_ = 0x53;\n    var_ah._0_2_ = 0xbf;\n    fcn.00bf48aa(auStackY65572);\n    var_ah._2_1_ = 0xf4;\n    var_ah._3_1_ = 0x53;\n    var_6h._0_2_ = 0xbf;\n    uVar1 = fcn.00bf4cd3();\n    if (uVar1 != '\\0') {\n        var_ah._2_1_ = SUB41(auStackY65572, 0);\n        var_ah._3_1_ = auStackY65572 >> 8;\n        var_6h._0_2_ = auStackY65572 >> 0x10;\n        if (extraout_DL == '\\0') {\n            var_eh._2_1_ = 9;\n            var_eh._3_1_ = 0x54;\n            var_ah._0_2_ = 0xbf;\n            uVar1 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)();\n            uVar1 = uVar1 & 0xffffff00 | uVar1 != 0;\n        }\n        else {\n            var_eh._2_1_ = 0x15;\n            var_eh._3_1_ = 0x54;\n            var_ah._0_2_ = 0xbf;\n            iVar2 = fcn.00bb2e3c(auStackY65572);\n            var_1ch = 3;\n            auStackY65570[iVar2] = 0;\n            var_18h = auStackY65572;\n            var_14h = 0;\n            var_6h._2_1_ = 0;\n            var_6h._3_1_ = 0;\n            var_eh._0_2_ = 0;\n            lpFileOp = 0;\n            var_10h = 0x614;\n            var_ah._2_1_ = SUB41(&lpFileOp, 0);\n            var_ah._3_1_ = &lpFileOp >> 8;\n            var_6h._0_2_ = &lpFileOp >> 0x10;\n            var_eh._2_1_ = 0x54;\n            var_eh._3_1_ = 0x54;\n            var_ah._0_2_ = 0xbf;\n            iVar2 = (*_sym.imp.SHELL32.dll_SHFileOperationW)();\n            uVar1 = -iVar2 & 0xffffff00U | 1 - (iVar2 != 0);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 925
    },
    "00bf545f": {
        "rules": [
            "shutdown system"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00bf545f(uint32_t param_1, uint param_2)\n\n{\n    char cVar1;\n    uint extraout_ECX;\n    uint uVar2;\n    uint var_10h;\n    \n    fcn.00bf37e9(L\"SeShutdownPrivilege\");\n    cVar1 = fcn.00be8cc3(extraout_ECX);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        if (param_1 == 0x20) {\n            uVar2 = 1;\n        }\n        else {\n            if (param_1 != 0x40) {\n                if ((param_1 & 0xb) == 0) {\n                    uVar2 = (*_sym.imp.USER32.dll_ExitWindowsEx)(param_1, 0);\n                }\n                else {\n                    uVar2 = (*_sym.imp.ADVAPI32.dll_InitiateSystemShutdownExW)\n                                      (0, 0, 0, (param_1 & 0x14) != 0, (param_1 & 2) != 0, param_2);\n                }\n                goto code_r0x00bf54d6;\n            }\n            uVar2 = 0;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_SetSystemPowerState)(uVar2, 0);\n    }\ncode_r0x00bf54d6:\n    fcn.00be8713();\n    return uVar2;\n}\n",
        "token_count": 333
    },
    "00bfd797": {
        "rules": [
            "empty the recycle bin"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfd797(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = 0;\n    if (*(arg_8h + 8) != 0) {\n        iVar2 = **(arg_8h + 4);\n        fcn.00b99997();\n        uVar1 = **(iVar2 + 8);\n    }\n    iVar2 = (*_sym.imp.SHELL32.dll_SHEmptyRecycleBinW)(0, uVar1, 7);\n    if (iVar2 != 0) {\n        fcn.00b99a20();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 176
    },
    "00bfe1dd": {
        "rules": [
            "read .ini file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00bfe1dd(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_18h;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    fcn.00b977c7();\n    uVar3 = fcn.00bb0ff6(0x1fffe);\n    fcn.00b9538e(uVar3);\n    fcn.00b99997();\n    fcn.00b948ae();\n    iVar1 = *(*(arg_8h + 4) + 0xc);\n    fcn.00b99997();\n    uVar3 = **(iVar1 + 8);\n    iVar1 = *(*(arg_8h + 4) + 8);\n    fcn.00b99997();\n    uVar2 = **(iVar1 + 8);\n    iVar1 = *(*(arg_8h + 4) + 4);\n    fcn.00b99997();\n    (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)(**(iVar1 + 8), uVar2, uVar3, var_8h, 0xffff, var_18h);\n    fcn.00b99bf8(var_8h);\n    *var_4h = *var_4h + -1;\n    if (*var_4h == 0) {\n        fcn.00bb106c(var_4h);\n        fcn.00bb106c(var_8h);\n    }\n    fcn.00b95a64();\n    return 0;\n}\n",
        "token_count": 368
    }
}