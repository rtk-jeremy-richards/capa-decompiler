{
    "00401005": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401005(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x30) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar2 = arg_8h % 10 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = uVar2 + (arg_ch ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x30) = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n        arg_8h = arg_8h / 10;\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 368
    },
    "0040108c": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040108c(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar2 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00402a68();\n    iVar2 = iVar2 + (iVar1 + -1) * 2;\n    *(in_ECX + 0x30) = iVar2;\n    iVar1 = iVar2;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        **(in_ECX + 0x30) = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar2 - iVar1 >> 1;\n    *(in_ECX + 0x30) = iVar1 + 2;\n    return;\n}\n",
        "token_count": 328
    },
    "004010d7": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004010d7(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar3 = iVar3 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = iVar3;\n    var_4h = iVar3;\n    do {\n        iVar2 = *(in_ECX + 0x24);\n        if (iVar2 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar3 - var_4h >> 1;\n                *(in_ECX + 0x30) = var_4h + 2;\n                return;\n            }\n            iVar2 = *(in_ECX + 0x24);\n        }\n        uVar1 = arg_8h;\n        *(in_ECX + 0x24) = iVar2 + -1;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        arg_ch = arg_ch >> 3;\n        **(in_ECX + 0x30) = (uVar1 & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        var_4h = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 423
    },
    "004011c7": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004011c7(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *in_ECX;\n    uint arg_8h_00;\n    uint *arg_8h_01;\n    int64_t iVar2;\n    uint var_20h;\n    uchar uStack13;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = CONCAT44(arg_ch, arg_8h);\n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    var_8h._0_1_ = 0;\n    arg_8h_01 = &var_8h;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    do {\n        arg_8h_00 = iVar2 >> 0x20;\n        arg_8h_01 = arg_8h_01 + -1;\n        cVar1 = fcn.0040310c(iVar2, 10, 0);\n        *arg_8h_01 = cVar1 + '0';\n        iVar2 = fcn.00403242();\n    } while (iVar2 != 0);\n    fcn.00404534(arg_8h_01, &var_8h - arg_8h_01);\n    fcn.0040241e(arg_8h_00);\n    return;\n}\n",
        "token_count": 314
    },
    "00401271": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401271(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar3 = iVar3 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = iVar3;\n    var_4h = iVar3;\n    do {\n        iVar2 = *(in_ECX + 0x24);\n        if (iVar2 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar3 - var_4h >> 1;\n                *(in_ECX + 0x30) = var_4h + 2;\n                return;\n            }\n            iVar2 = *(in_ECX + 0x24);\n        }\n        uVar1 = arg_8h;\n        *(in_ECX + 0x24) = iVar2 + -1;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        arg_ch = arg_ch >> 3;\n        **(in_ECX + 0x30) = (uVar1 & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        var_4h = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 422
    },
    "004012d5": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012d5(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00403d37();\n    iVar4 = iVar2 + -1 + iVar4;\n    *(in_ECX + 0x30) = iVar4;\n    iVar2 = iVar4;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar4 - iVar2;\n                *(in_ECX + 0x30) = iVar2 + 1;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        uVar1 = arg_8h;\n        *(in_ECX + 0x24) = iVar3 + -1;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        arg_ch = arg_ch >> 3;\n        **(in_ECX + 0x30) = (uVar1 & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar2 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 400
    },
    "00401311": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401311(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar4 = iVar1 + -1 + iVar4;\n    *(in_ECX + 0x30) = iVar4;\n    iVar1 = iVar4;\n    do {\n        iVar2 = *(in_ECX + 0x24);\n        if (iVar2 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar4 - iVar1;\n                *(in_ECX + 0x30) = iVar1 + 1;\n                return;\n            }\n            iVar2 = *(in_ECX + 0x24);\n        }\n        uVar3 = arg_8h;\n        *(in_ECX + 0x24) = iVar2 + -1;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        uVar3 = (uVar3 & 0xf) + 0x30;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_10h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x30) = uVar3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 462
    },
    "00401370": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401370(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint32_t uVar4;\n    ulong uVar5;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar2 = iVar3 + iVar2 * 2 + -2;\n    var_4h = arg_8h;\n    *(in_ECX + 0x30) = iVar2;\n    iVar3 = iVar2;\n    while ((iVar1 = *(in_ECX + 0x24),  0 < iVar1 || ((var_4h | arg_ch) != 0))) {\n        *(in_ECX + 0x24) = iVar1 + -1;\n        uVar5 = fcn.0040150a(var_4h, arg_ch, 10, 0, iVar1);\n        arg_ch = uVar5 >> 0x20;\n        var_4h = uVar5;\n        uVar4 = extraout_ECX + 0x30U & 0xffff;\n        if (0x39 < uVar4) {\n            uVar4 = (arg_10h ^ 1) * ' ' + '\\a' + uVar4;\n        }\n        **(in_ECX + 0x30) = uVar4;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar2 - iVar3 >> 1;\n    *(in_ECX + 0x30) = iVar3 + 2;\n    return;\n}\n",
        "token_count": 475
    },
    "00401410": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401410(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar4 = iVar4 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = iVar4;\n    iVar2 = iVar4;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar3 = arg_8h & 0xf;\n        arg_8h = arg_8h >> 4;\n        uVar3 = uVar3 + 0x30;\n        uVar1 = uVar3;\n        if (0x39 < uVar3) {\n            uVar1 = (arg_ch ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x30) = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar2 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar4 - iVar2 >> 1;\n    *(in_ECX + 0x30) = iVar2 + 2;\n    return;\n}\n",
        "token_count": 411
    },
    "004014ba": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004014ba(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char extraout_CL;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00403d37();\n    iVar4 = iVar4 + iVar2 + -1;\n    *(in_ECX + 0x30) = iVar4;\n    var_4h = arg_8h;\n    iVar2 = iVar4;\n    while ((iVar1 = *(in_ECX + 0x24),  0 < iVar1 || ((var_4h | arg_ch) != 0))) {\n        *(in_ECX + 0x24) = iVar1 + -1;\n        uVar5 = fcn.0040150a(var_4h, arg_ch, 10, 0, iVar1);\n        arg_ch = uVar5 >> 0x20;\n        var_4h = uVar5;\n        cVar3 = extraout_CL + '0';\n        if ('9' < cVar3) {\n            cVar3 = cVar3 + (arg_10h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x30) = cVar3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar2 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar4 - iVar2;\n    *(in_ECX + 0x30) = iVar2 + 1;\n    return;\n}\n",
        "token_count": 454
    },
    "004015cd": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004015cd(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar3 = iVar1 + -1 + iVar3;\n    *(in_ECX + 0x30) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        uVar2 = arg_8h;\n        arg_8h = arg_8h >> 4;\n        uVar2 = (uVar2 & 0xf) + 0x30;\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        if (0x39 < uVar2) {\n            uVar2 = (arg_ch ^ 1) * ' ' + '\\a' + uVar2;\n        }\n        **(in_ECX + 0x30) = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 388
    },
    "0040166d": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040166d(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar4 = iVar4 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = iVar4;\n    iVar2 = iVar4;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar3 = arg_8h & 0xf;\n        arg_8h = arg_8h >> 4;\n        uVar3 = uVar3 + 0x30;\n        uVar1 = uVar3;\n        if (0x39 < uVar3) {\n            uVar1 = (arg_ch ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x30) = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar2 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar4 - iVar2 >> 1;\n    *(in_ECX + 0x30) = iVar2 + 2;\n    return;\n}\n",
        "token_count": 412
    },
    "004018fc": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004018fc(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar3 = iVar1 + -1 + iVar3;\n    *(in_ECX + 0x30) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        uVar2 = arg_8h;\n        arg_8h = arg_8h >> 4;\n        uVar2 = (uVar2 & 0xf) + 0x30;\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        if (0x39 < uVar2) {\n            uVar2 = (arg_ch ^ 1) * ' ' + '\\a' + uVar2;\n        }\n        **(in_ECX + 0x30) = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 388
    },
    "0040196a": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040196a(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    uint32_t uVar4;\n    \n    iVar5 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar5 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar5 = iVar5 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = iVar5;\n    iVar2 = iVar5;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar5 - iVar2 >> 1;\n                *(in_ECX + 0x30) = iVar2 + 2;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar3 + -1;\n        uVar4 = (arg_8h & 0xf) + 0x30;\n        uVar1 = uVar4;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar4) {\n            uVar1 = (arg_10h ^ 1) * ' ' + '\\a' + uVar4;\n        }\n        **(in_ECX + 0x30) = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar2 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 479
    },
    "004019ba": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004019ba(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    uint32_t uVar4;\n    \n    iVar5 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar5 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar5 = iVar5 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = iVar5;\n    iVar2 = iVar5;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar5 - iVar2 >> 1;\n                *(in_ECX + 0x30) = iVar2 + 2;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar3 + -1;\n        uVar4 = (arg_8h & 0xf) + 0x30;\n        uVar1 = uVar4;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar4) {\n            uVar1 = (arg_10h ^ 1) * ' ' + '\\a' + uVar4;\n        }\n        **(in_ECX + 0x30) = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar2 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 478
    },
    "00401d4d": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401d4d(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar4 = iVar4 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = iVar4;\n    iVar2 = iVar4;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar3 = arg_8h & 0xf;\n        arg_8h = arg_8h >> 4;\n        uVar3 = uVar3 + 0x30;\n        uVar1 = uVar3;\n        if (0x39 < uVar3) {\n            uVar1 = (arg_ch ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x30) = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar2 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar4 - iVar2 >> 1;\n    *(in_ECX + 0x30) = iVar2 + 2;\n    return;\n}\n",
        "token_count": 413
    },
    "00401dc5": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401dc5(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char extraout_CL;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00403d37();\n    iVar4 = iVar4 + iVar2 + -1;\n    *(in_ECX + 0x30) = iVar4;\n    var_4h = arg_8h;\n    iVar2 = iVar4;\n    while ((iVar1 = *(in_ECX + 0x24),  0 < iVar1 || ((var_4h | arg_ch) != 0))) {\n        *(in_ECX + 0x24) = iVar1 + -1;\n        uVar5 = fcn.0040150a(var_4h, arg_ch, 10, 0, iVar1);\n        arg_ch = uVar5 >> 0x20;\n        var_4h = uVar5;\n        cVar3 = extraout_CL + '0';\n        if ('9' < cVar3) {\n            cVar3 = cVar3 + (arg_10h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x30) = cVar3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar2 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar4 - iVar2;\n    *(in_ECX + 0x30) = iVar2 + 1;\n    return;\n}\n",
        "token_count": 455
    },
    "00401f05": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401f05(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x30) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar2 = arg_8h % 10 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = uVar2 + (arg_ch ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x30) = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n        arg_8h = arg_8h / 10;\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 369
    },
    "00401f8c": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401f8c(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar2 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar2 = iVar1 + -1 + iVar2;\n    *(in_ECX + 0x30) = iVar2;\n    iVar1 = iVar2;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        **(in_ECX + 0x30) = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar2 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 314
    },
    "00401fc8": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401fc8(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint32_t uVar4;\n    ulong uVar5;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar2 = iVar3 + iVar2 * 2 + -2;\n    var_4h = arg_8h;\n    *(in_ECX + 0x30) = iVar2;\n    iVar3 = iVar2;\n    while ((iVar1 = *(in_ECX + 0x24),  0 < iVar1 || ((var_4h | arg_ch) != 0))) {\n        *(in_ECX + 0x24) = iVar1 + -1;\n        uVar5 = fcn.0040150a(var_4h, arg_ch, 10, 0, iVar1);\n        arg_ch = uVar5 >> 0x20;\n        var_4h = uVar5;\n        uVar4 = extraout_ECX + 0x30U & 0xffff;\n        if (0x39 < uVar4) {\n            uVar4 = (arg_10h ^ 1) * ' ' + '\\a' + uVar4;\n        }\n        **(in_ECX + 0x30) = uVar4;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar2 - iVar3 >> 1;\n    *(in_ECX + 0x30) = iVar3 + 2;\n    return;\n}\n",
        "token_count": 476
    },
    "00402040": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402040(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00403d37();\n    iVar4 = iVar2 + -1 + iVar4;\n    *(in_ECX + 0x30) = iVar4;\n    iVar2 = iVar4;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar4 - iVar2;\n                *(in_ECX + 0x30) = iVar2 + 1;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        uVar1 = arg_8h;\n        *(in_ECX + 0x24) = iVar3 + -1;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        arg_ch = arg_ch >> 3;\n        **(in_ECX + 0x30) = (uVar1 & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar2 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 399
    },
    "004020bd": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004020bd(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar2 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar2 = iVar1 + -1 + iVar2;\n    *(in_ECX + 0x30) = iVar2;\n    iVar1 = iVar2;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        **(in_ECX + 0x30) = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar2 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 312
    },
    "00402220": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402220(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char extraout_CL;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00403d37();\n    iVar4 = iVar4 + iVar2 + -1;\n    *(in_ECX + 0x30) = iVar4;\n    var_4h = arg_8h;\n    iVar2 = iVar4;\n    while ((iVar1 = *(in_ECX + 0x24),  0 < iVar1 || ((var_4h | arg_ch) != 0))) {\n        *(in_ECX + 0x24) = iVar1 + -1;\n        uVar5 = fcn.0040150a(var_4h, arg_ch, 10, 0, iVar1);\n        arg_ch = uVar5 >> 0x20;\n        var_4h = uVar5;\n        cVar3 = extraout_CL + '0';\n        if ('9' < cVar3) {\n            cVar3 = cVar3 + (arg_10h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x30) = cVar3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar2 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar4 - iVar2;\n    *(in_ECX + 0x30) = iVar2 + 1;\n    return;\n}\n",
        "token_count": 454
    },
    "004022ca": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004022ca(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00403d37();\n    iVar4 = iVar2 + -1 + iVar4;\n    *(in_ECX + 0x30) = iVar4;\n    iVar2 = iVar4;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar4 - iVar2;\n                *(in_ECX + 0x30) = iVar2 + 1;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        uVar1 = arg_8h;\n        *(in_ECX + 0x24) = iVar3 + -1;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        arg_ch = arg_ch >> 3;\n        **(in_ECX + 0x30) = (uVar1 & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar2 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 399
    },
    "00402626": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402626(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar4 = iVar1 + -1 + iVar4;\n    *(in_ECX + 0x30) = iVar4;\n    iVar1 = iVar4;\n    do {\n        iVar2 = *(in_ECX + 0x24);\n        if (iVar2 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar4 - iVar1;\n                *(in_ECX + 0x30) = iVar1 + 1;\n                return;\n            }\n            iVar2 = *(in_ECX + 0x24);\n        }\n        uVar3 = arg_8h;\n        *(in_ECX + 0x24) = iVar2 + -1;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        uVar3 = (uVar3 & 0xf) + 0x30;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_10h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x30) = uVar3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 462
    },
    "004026b2": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004026b2(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x30) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar2 = arg_8h % 10 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = uVar2 + (arg_ch ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x30) = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n        arg_8h = arg_8h / 10;\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 369
    },
    "004026d0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004026d0(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar4 = iVar4 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = iVar4;\n    iVar2 = iVar4;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar3 = arg_8h & 0xf;\n        arg_8h = arg_8h >> 4;\n        uVar3 = uVar3 + 0x30;\n        uVar1 = uVar3;\n        if (0x39 < uVar3) {\n            uVar1 = (arg_ch ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x30) = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar2 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar4 - iVar2 >> 1;\n    *(in_ECX + 0x30) = iVar2 + 2;\n    return;\n}\n",
        "token_count": 412
    },
    "004026f8": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004026f8(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar2 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar2 = iVar1 + -1 + iVar2;\n    *(in_ECX + 0x30) = iVar2;\n    iVar1 = iVar2;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        **(in_ECX + 0x30) = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar2 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 313
    },
    "004027a7": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004027a7(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint32_t uVar4;\n    ulong uVar5;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar2 = iVar3 + iVar2 * 2 + -2;\n    var_4h = arg_8h;\n    *(in_ECX + 0x30) = iVar2;\n    iVar3 = iVar2;\n    while ((iVar1 = *(in_ECX + 0x24),  0 < iVar1 || ((var_4h | arg_ch) != 0))) {\n        *(in_ECX + 0x24) = iVar1 + -1;\n        uVar5 = fcn.0040150a(var_4h, arg_ch, 10, 0, iVar1);\n        arg_ch = uVar5 >> 0x20;\n        var_4h = uVar5;\n        uVar4 = extraout_ECX + 0x30U & 0xffff;\n        if (0x39 < uVar4) {\n            uVar4 = (arg_10h ^ 1) * ' ' + '\\a' + uVar4;\n        }\n        **(in_ECX + 0x30) = uVar4;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar2 - iVar3 >> 1;\n    *(in_ECX + 0x30) = iVar3 + 2;\n    return;\n}\n",
        "token_count": 476
    },
    "0040290f": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040290f(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar2 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00402a68();\n    iVar2 = iVar2 + (iVar1 + -1) * 2;\n    *(in_ECX + 0x30) = iVar2;\n    iVar1 = iVar2;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        **(in_ECX + 0x30) = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar2 - iVar1 >> 1;\n    *(in_ECX + 0x30) = iVar1 + 2;\n    return;\n}\n",
        "token_count": 328
    },
    "00402973": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402973(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar3 = iVar1 + -1 + iVar3;\n    *(in_ECX + 0x30) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        uVar2 = arg_8h;\n        arg_8h = arg_8h >> 4;\n        uVar2 = (uVar2 & 0xf) + 0x30;\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        if (0x39 < uVar2) {\n            uVar2 = (arg_ch ^ 1) * ' ' + '\\a' + uVar2;\n        }\n        **(in_ECX + 0x30) = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 388
    },
    "00402c1b": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402c1b(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char extraout_CL;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00403d37();\n    iVar4 = iVar4 + iVar2 + -1;\n    *(in_ECX + 0x30) = iVar4;\n    var_4h = arg_8h;\n    iVar2 = iVar4;\n    while ((iVar1 = *(in_ECX + 0x24),  0 < iVar1 || ((var_4h | arg_ch) != 0))) {\n        *(in_ECX + 0x24) = iVar1 + -1;\n        uVar5 = fcn.0040150a(var_4h, arg_ch, 10, 0, iVar1);\n        arg_ch = uVar5 >> 0x20;\n        var_4h = uVar5;\n        cVar3 = extraout_CL + '0';\n        if ('9' < cVar3) {\n            cVar3 = cVar3 + (arg_10h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x30) = cVar3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar2 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar4 - iVar2;\n    *(in_ECX + 0x30) = iVar2 + 1;\n    return;\n}\n",
        "token_count": 456
    },
    "00402c70": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402c70(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char extraout_CL;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00403d37();\n    iVar4 = iVar4 + iVar2 + -1;\n    *(in_ECX + 0x30) = iVar4;\n    var_4h = arg_8h;\n    iVar2 = iVar4;\n    while ((iVar1 = *(in_ECX + 0x24),  0 < iVar1 || ((var_4h | arg_ch) != 0))) {\n        *(in_ECX + 0x24) = iVar1 + -1;\n        uVar5 = fcn.0040150a(var_4h, arg_ch, 10, 0, iVar1);\n        arg_ch = uVar5 >> 0x20;\n        var_4h = uVar5;\n        cVar3 = extraout_CL + '0';\n        if ('9' < cVar3) {\n            cVar3 = cVar3 + (arg_10h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x30) = cVar3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar2 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar4 - iVar2;\n    *(in_ECX + 0x30) = iVar2 + 1;\n    return;\n}\n",
        "token_count": 455
    },
    "00402cb1": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402cb1(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar3 = iVar3 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = iVar3;\n    var_4h = iVar3;\n    do {\n        iVar2 = *(in_ECX + 0x24);\n        if (iVar2 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar3 - var_4h >> 1;\n                *(in_ECX + 0x30) = var_4h + 2;\n                return;\n            }\n            iVar2 = *(in_ECX + 0x24);\n        }\n        uVar1 = arg_8h;\n        *(in_ECX + 0x24) = iVar2 + -1;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        arg_ch = arg_ch >> 3;\n        **(in_ECX + 0x30) = (uVar1 & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        var_4h = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 423
    },
    "00402d42": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d42(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    uint32_t uVar4;\n    \n    iVar5 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar5 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar5 = iVar5 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = iVar5;\n    iVar2 = iVar5;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar5 - iVar2 >> 1;\n                *(in_ECX + 0x30) = iVar2 + 2;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar3 + -1;\n        uVar4 = (arg_8h & 0xf) + 0x30;\n        uVar1 = uVar4;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar4) {\n            uVar1 = (arg_10h ^ 1) * ' ' + '\\a' + uVar4;\n        }\n        **(in_ECX + 0x30) = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar2 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 479
    },
    "00402d56": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d56(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar3 = iVar1 + -1 + iVar3;\n    *(in_ECX + 0x30) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        uVar2 = arg_8h;\n        arg_8h = arg_8h >> 4;\n        uVar2 = (uVar2 & 0xf) + 0x30;\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        if (0x39 < uVar2) {\n            uVar2 = (arg_ch ^ 1) * ' ' + '\\a' + uVar2;\n        }\n        **(in_ECX + 0x30) = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 389
    },
    "00402db5": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402db5(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x30) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar2 = arg_8h % 10 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = uVar2 + (arg_ch ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x30) = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n        arg_8h = arg_8h / 10;\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 369
    },
    "00402dba": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402dba(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar3 = iVar3 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = iVar3;\n    var_4h = iVar3;\n    do {\n        iVar2 = *(in_ECX + 0x24);\n        if (iVar2 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar3 - var_4h >> 1;\n                *(in_ECX + 0x30) = var_4h + 2;\n                return;\n            }\n            iVar2 = *(in_ECX + 0x24);\n        }\n        uVar1 = arg_8h;\n        *(in_ECX + 0x24) = iVar2 + -1;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        arg_ch = arg_ch >> 3;\n        **(in_ECX + 0x30) = (uVar1 & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        var_4h = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 422
    },
    "00402df6": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402df6(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar2 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00402a68();\n    iVar2 = iVar2 + (iVar1 + -1) * 2;\n    *(in_ECX + 0x30) = iVar2;\n    iVar1 = iVar2;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        **(in_ECX + 0x30) = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar2 - iVar1 >> 1;\n    *(in_ECX + 0x30) = iVar1 + 2;\n    return;\n}\n",
        "token_count": 328
    },
    "00402e5a": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402e5a(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x30) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar2 = arg_8h % 10 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = uVar2 + (arg_ch ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x30) = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n        arg_8h = arg_8h / 10;\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 370
    },
    "00402ea5": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402ea5(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar2 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00402a68();\n    iVar2 = iVar2 + (iVar1 + -1) * 2;\n    *(in_ECX + 0x30) = iVar2;\n    iVar1 = iVar2;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        **(in_ECX + 0x30) = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar2 - iVar1 >> 1;\n    *(in_ECX + 0x30) = iVar1 + 2;\n    return;\n}\n",
        "token_count": 328
    },
    "00402f1d": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402f1d(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    uint32_t uVar4;\n    \n    iVar5 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar5 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar5 = iVar5 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = iVar5;\n    iVar2 = iVar5;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar5 - iVar2 >> 1;\n                *(in_ECX + 0x30) = iVar2 + 2;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar3 + -1;\n        uVar4 = (arg_8h & 0xf) + 0x30;\n        uVar1 = uVar4;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar4) {\n            uVar1 = (arg_10h ^ 1) * ' ' + '\\a' + uVar4;\n        }\n        **(in_ECX + 0x30) = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar2 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 480
    },
    "00403035": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403035(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar3 = iVar3 + iVar1 + -1;\n    *(in_ECX + 0x30) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar2 = arg_8h % 10 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = uVar2 + (arg_ch ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x30) = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n        arg_8h = arg_8h / 10;\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 368
    },
    "004030fd": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004030fd(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00403d37();\n    iVar4 = iVar2 + -1 + iVar4;\n    *(in_ECX + 0x30) = iVar4;\n    iVar2 = iVar4;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar4 - iVar2;\n                *(in_ECX + 0x30) = iVar2 + 1;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        uVar1 = arg_8h;\n        *(in_ECX + 0x24) = iVar3 + -1;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        arg_ch = arg_ch >> 3;\n        **(in_ECX + 0x30) = (uVar1 & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar2 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 399
    },
    "0040312a": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040312a(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar4 = iVar1 + -1 + iVar4;\n    *(in_ECX + 0x30) = iVar4;\n    iVar1 = iVar4;\n    do {\n        iVar2 = *(in_ECX + 0x24);\n        if (iVar2 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar4 - iVar1;\n                *(in_ECX + 0x30) = iVar1 + 1;\n                return;\n            }\n            iVar2 = *(in_ECX + 0x24);\n        }\n        uVar3 = arg_8h;\n        *(in_ECX + 0x24) = iVar2 + -1;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        uVar3 = (uVar3 & 0xf) + 0x30;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_10h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x30) = uVar3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 463
    },
    "00403396": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403396(int32_t arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint *in_ECX;\n    uint arg_8h_00;\n    char *pcVar3;\n    char *arg_8h_01;\n    int64_t iVar4;\n    uint var_24h;\n    uint var_1dh;\n    char acStack13 [5];\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    acStack13[2] = 0;\n    bVar1 = false;\n    arg_8h_01 = acStack13 + 2;\n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    if ((arg_ch < 1) && (iVar4 = CONCAT44(arg_ch, arg_8h),  arg_ch < 0)) {\n        bVar1 = true;\n        iVar4 = CONCAT44(-(arg_ch + (arg_8h != 0)), -arg_8h);\n    }\n    do {\n        pcVar3 = arg_8h_01;\n        arg_8h_00 = iVar4 >> 0x20;\n        arg_8h_01 = pcVar3 + -1;\n        cVar2 = fcn.0040310c(iVar4, 10, 0);\n        *arg_8h_01 = cVar2 + '0';\n        iVar4 = fcn.00403242();\n    } while (iVar4 != 0);\n    if (bVar1) {\n        arg_8h_01 = pcVar3 + -2;\n        *arg_8h_01 = '-';\n    }\n    fcn.00404534(arg_8h_01, acStack13 + (2 - arg_8h_01));\n    fcn.0040241e(arg_8h_00);\n    return;\n}\n",
        "token_count": 448
    },
    "00403454": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403454(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar4 = iVar1 + -1 + iVar4;\n    *(in_ECX + 0x30) = iVar4;\n    iVar1 = iVar4;\n    do {\n        iVar2 = *(in_ECX + 0x24);\n        if (iVar2 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar4 - iVar1;\n                *(in_ECX + 0x30) = iVar1 + 1;\n                return;\n            }\n            iVar2 = *(in_ECX + 0x24);\n        }\n        uVar3 = arg_8h;\n        *(in_ECX + 0x24) = iVar2 + -1;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        uVar3 = (uVar3 & 0xf) + 0x30;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_10h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x30) = uVar3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 462
    },
    "0040349f": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040349f(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar4 = iVar4 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = iVar4;\n    iVar2 = iVar4;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar3 = arg_8h & 0xf;\n        arg_8h = arg_8h >> 4;\n        uVar3 = uVar3 + 0x30;\n        uVar1 = uVar3;\n        if (0x39 < uVar3) {\n            uVar1 = (arg_ch ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x30) = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar2 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar4 - iVar2 >> 1;\n    *(in_ECX + 0x30) = iVar2 + 2;\n    return;\n}\n",
        "token_count": 412
    },
    "004034ef": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004034ef(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    uint32_t uVar4;\n    \n    iVar5 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar5 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar5 = iVar5 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = iVar5;\n    iVar2 = iVar5;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar5 - iVar2 >> 1;\n                *(in_ECX + 0x30) = iVar2 + 2;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar3 + -1;\n        uVar4 = (arg_8h & 0xf) + 0x30;\n        uVar1 = uVar4;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar4) {\n            uVar1 = (arg_10h ^ 1) * ' ' + '\\a' + uVar4;\n        }\n        **(in_ECX + 0x30) = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar2 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 478
    },
    "0040358a": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040358a(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00403d37();\n    iVar4 = iVar2 + -1 + iVar4;\n    *(in_ECX + 0x30) = iVar4;\n    iVar2 = iVar4;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar4 - iVar2;\n                *(in_ECX + 0x30) = iVar2 + 1;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        uVar1 = arg_8h;\n        *(in_ECX + 0x24) = iVar3 + -1;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        arg_ch = arg_ch >> 3;\n        **(in_ECX + 0x30) = (uVar1 & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar2 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 400
    },
    "004035da": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004035da(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar2 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00402a68();\n    iVar2 = iVar2 + (iVar1 + -1) * 2;\n    *(in_ECX + 0x30) = iVar2;\n    iVar1 = iVar2;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        **(in_ECX + 0x30) = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar2 - iVar1 >> 1;\n    *(in_ECX + 0x30) = iVar1 + 2;\n    return;\n}\n",
        "token_count": 327
    },
    "00403715": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403715(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar4 = iVar4 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = iVar4;\n    iVar2 = iVar4;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar3 = arg_8h & 0xf;\n        arg_8h = arg_8h >> 4;\n        uVar3 = uVar3 + 0x30;\n        uVar1 = uVar3;\n        if (0x39 < uVar3) {\n            uVar1 = (arg_ch ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x30) = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar2 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar4 - iVar2 >> 1;\n    *(in_ECX + 0x30) = iVar2 + 2;\n    return;\n}\n",
        "token_count": 411
    },
    "00403805": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403805(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar3 = iVar1 + -1 + iVar3;\n    *(in_ECX + 0x30) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        uVar2 = arg_8h;\n        arg_8h = arg_8h >> 4;\n        uVar2 = (uVar2 & 0xf) + 0x30;\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        if (0x39 < uVar2) {\n            uVar2 = (arg_ch ^ 1) * ' ' + '\\a' + uVar2;\n        }\n        **(in_ECX + 0x30) = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 388
    },
    "00403855": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403855(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar4 = iVar1 + -1 + iVar4;\n    *(in_ECX + 0x30) = iVar4;\n    iVar1 = iVar4;\n    do {\n        iVar2 = *(in_ECX + 0x24);\n        if (iVar2 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar4 - iVar1;\n                *(in_ECX + 0x30) = iVar1 + 1;\n                return;\n            }\n            iVar2 = *(in_ECX + 0x24);\n        }\n        uVar3 = arg_8h;\n        *(in_ECX + 0x24) = iVar2 + -1;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        uVar3 = (uVar3 & 0xf) + 0x30;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_10h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x30) = uVar3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 462
    },
    "0040394f": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040394f(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar3 = iVar1 + -1 + iVar3;\n    *(in_ECX + 0x30) = iVar3;\n    iVar1 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        uVar2 = arg_8h;\n        arg_8h = arg_8h >> 4;\n        uVar2 = (uVar2 & 0xf) + 0x30;\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        if (0x39 < uVar2) {\n            uVar2 = (arg_ch ^ 1) * ' ' + '\\a' + uVar2;\n        }\n        **(in_ECX + 0x30) = uVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 389
    },
    "00403a85": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_970h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00403a85(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint *arg_18h, uint32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    code *pcVar1;\n    bool bVar2;\n    uint64_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    uchar *puVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t *puVar12;\n    uint32_t *puVar13;\n    char cVar14;\n    uint32_t uVar15;\n    uint32_t *puVar16;\n    uint32_t *puVar17;\n    char *arg_10h_00;\n    uint var_970h;\n    uint var_96ch;\n    uint32_t var_7a0h;\n    uint var_79ch;\n    uint var_794h;\n    uint32_t *var_78ch;\n    uint *var_788h;\n    uint32_t var_784h;\n    uint32_t *var_780h;\n    uint32_t *var_77ch;\n    uint32_t *var_778h;\n    uint32_t var_774h;\n    uint32_t var_770h;\n    uint32_t var_76ch;\n    uint32_t *var_768h;\n    uint32_t *var_764h;\n    uint32_t *var_760h;\n    uint32_t *var_75ch;\n    uint32_t *var_755h;\n    uint32_t *var_750h;\n    uint32_t *var_74ch;\n    uint32_t *var_748h;\n    uint32_t *var_744h;\n    uint var_740h;\n    uint32_t *var_574h;\n    uint32_t var_570h;\n    uint var_56ch;\n    uint32_t *var_3a4h;\n    uint32_t *var_3a0h;\n    uint32_t *apuStack928 [114];\n    uint32_t *var_1d4h;\n    uint32_t *var_1d0h;\n    uint32_t var_1cch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    var_788h = arg_18h;\n    var_75ch = arg_1ch;\n    fcn.00402446(&var_79ch);\n    var_794h._0_1_ = (var_79ch & 0x1f) != 0x1f;\n    if (var_794h) {\n        fcn.00403d96(&var_79ch);\n    }\n    uVar11 = arg_ch;\n    uVar4 = 0x20;\n    if ((arg_ch < 1) && (arg_ch < 0)) {\n        uVar4 = 0x2d;\n    }\n    *var_788h = uVar4;\n    var_788h[2] = var_75ch;\n    fcn.00403deb(&var_7a0h, 0, 0);\n    if (((uVar11 & 0x7ff00000) == 0) && (((arg_8h | uVar11 & 0xfffff) == 0 || ((var_7a0h & 0x1000000) != 0)))) {\n        arg_10h_00 = 0x47198c;\n        var_788h[1] = 0;\ncode_r0x004561d2:\n        iVar5 = fcn.00404098(var_75ch, arg_20h, arg_10h_00);\n    }\n    else {\n        iVar5 = fcn.00403053(&arg_8h);\n        if (iVar5 == 0) {\ncode_r0x00456213:\n            arg_ch = uVar11 & 0x7fffffff;\n            var_78ch = NULL;\n            var_784h = arg_10h + 1;\n            _var_774h = CONCAT44(uVar11, arg_8h) & 0x7fffffffffffffff;\n            var_770h = _var_774h >> 0x20;\n            uVar11 = var_770h >> 0x14;\n            if (uVar11 != 0) {\n                uVar15 = 0;\n                iVar5 = 0x100000;\n            }\n            else {\n                iVar5 = 0;\n                uVar15 = uVar11;\n            }\n            var_748h = uVar11 == 0;\n            var_780h = var_774h + uVar15;\n            var_1cch = (var_770h & 0xfffff) + iVar5 + CARRY4(var_774h, uVar15);\n            var_74ch = var_748h + uVar11;\n            fcn.00403909();\n            fcn.00404232();\n            var_76ch = fcn.0040185c();\n            if ((var_76ch == 0x7fffffff) || (var_76ch == 0x80000000)) {\n                var_76ch = 0;\n            }\n            var_1d0h = var_780h;\n            var_748h = (var_1cch != 0) + 1;\n            var_1d4h = var_748h;\n            if (var_74ch < 0x433) {\n                if (var_74ch == 0x35) {\ncode_r0x004567b7:\n                    _var_774h = _var_774h & 0xffffffff;\n                    uVar11 = (&var_1d0h)[var_1cch != 0];\n                    iVar5 = 0x1f;\n                    if (uVar11 != 0) {\n                        for (; uVar11 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                        }\n                    }\n                    if (uVar11 == 0) {\n                        iVar5 = 0;\n                    }\n                    else {\n                        iVar5 = iVar5 + 1;\n                    }\n                    puVar13 = (iVar5 == 0x20) + var_748h;\n                    if (puVar13 < 0x74) {\n                        puVar16 = puVar13 + -1;\n                        if (puVar16 != 0xffffffff) {\n                            puVar17 = puVar13 + -2;\n                            puVar12 = var_748h;\n                            do {\n                                if (puVar16 < puVar12) {\n                                    iVar5 = (&var_1d0h)[puVar16];\n                                }\n                                else {\n                                    iVar5 = 0;\n                                }\n                                if (puVar17 < puVar12) {\n                                    uVar11 = (&var_1d4h)[puVar16];\n                                }\n                                else {\n                                    uVar11 = 0;\n                                }\n                                (&var_1d0h)[puVar16] = uVar11 >> 0x1f | iVar5 * 2;\n                                puVar16 = puVar16 + -1;\n                                puVar17 = puVar17 + -1;\n                                puVar12 = var_1d4h;\n                            } while (puVar16 != 0xffffffff);\n                        }\n                    }\n                    else {\n                        var_574h = NULL;\n                        var_1d4h = NULL;\n                        fcn.00457b41(&var_1d0h, 0x1cc, &var_570h, 0);\n                        puVar13 = var_1d4h;\n                    }\n                    var_1d4h = puVar13;\n                    uVar11 = 0x434 - var_74ch;\n                    uVar15 = uVar11 >> 5;\n                    fcn.0040248c(&var_570h);\n                    (&var_570h)[uVar15] = 1 << (uVar11 & 0x1f);\n                }\n                else {\n                    var_570h = 0;\n                    var_56ch = 0x100000;\n                    var_574h = 0x2;\n                    if (var_1cch == 0) goto code_r0x004567b7;\n                    iVar5 = 0;\n                    do {\n                        if (*(&var_570h + iVar5) != *(&var_1d0h + iVar5)) goto code_r0x004567b7;\n                        iVar5 = iVar5 + 4;\n                    } while (iVar5 != 8);\n                    iVar5 = 0x1f;\n                    if (var_1cch != 0) {\n                        for (; var_1cch >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                        }\n                    }\n                    _var_774h = _var_774h & 0xffffffff;\n                    if (var_1cch == 0) {\n                        iVar5 = 0;\n                    }\n                    else {\n                        iVar5 = iVar5 + 1;\n                    }\n                    puVar13 = (0x20U - iVar5 < 2) + var_748h;\n                    if (puVar13 < 0x74) {\n                        puVar16 = puVar13 + -1;\n                        if (puVar16 != 0xffffffff) {\n                            puVar17 = puVar13 + -2;\n                            puVar12 = var_748h;\n                            do {\n                                if (puVar16 < puVar12) {\n                                    iVar5 = (&var_1d0h)[puVar16];\n                                }\n                                else {\n                                    iVar5 = 0;\n                                }\n                                if (puVar17 < puVar12) {\n                                    uVar11 = (&var_1d4h)[puVar16];\n                                }\n                                else {\n                                    uVar11 = 0;\n                                }\n                                (&var_1d0h)[puVar16] = uVar11 >> 0x1e | iVar5 << 2;\n                                puVar16 = puVar16 + -1;\n                                puVar17 = puVar17 + -1;\n                                puVar12 = var_1d4h;\n                            } while (puVar16 != 0xffffffff);\n                        }\n                    }\n                    else {\n                        var_574h = NULL;\n                        var_1d4h = NULL;\n                        fcn.00457b41(&var_1d0h, 0x1cc, &var_570h, 0);\n                        puVar13 = var_1d4h;\n                    }\n                    var_1d4h = puVar13;\n                    uVar11 = 0x435 - var_74ch;\n                    uVar15 = uVar11 >> 5;\n                    fcn.0040248c(&var_570h);\n                    (&var_570h)[uVar15] = 1 << (uVar11 & 0x1f);\n                }\n                var_574h = uVar15 + 1;\n                var_3a4h = var_574h;\n                fcn.00457b41(&var_3a0h, 0x1cc, &var_570h, var_574h * 4);\n            }\n            else {\n                var_570h = 0;\n                var_56ch = 0x100000;\n                var_574h = 0x2;\n                if (var_1cch == 0) {\ncode_r0x00456502:\n                    var_764h = var_74ch + -0x432 & 0x1f;\n                    *NULL = var_74ch + -0x432 >> 5;\n                    var_780h = 0x20 - var_764h;\n                    iVar5 = fcn.00402de7();\n                    puVar13 = var_748h;\n                    var_750h = iVar5 + -1;\n                    _var_774h = _var_774h & 0xffffffff;\n                    var_77ch = ~var_750h;\n                    uVar11 = (&var_1d4h)[var_748h];\n                    iVar5 = 0x1f;\n                    if (uVar11 != 0) {\n                        for (; uVar11 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                        }\n                    }\n                    if (uVar11 == 0) {\n                        var_748h = NULL;\n                    }\n                    else {\n                        var_748h = iVar5 + 1;\n                    }\n                    if ((stack0xfffff8a8 + puVar13 < 0x74) &&\n                       (var_778h = (0x20 - var_748h < var_764h) + stack0xfffff8a8 + puVar13,  var_778h < 0x74)) {\n                        var_768h = stack0xfffff8a8 + -1;\n                        var_74ch = var_778h + -1;\n                        if (var_74ch != var_768h) {\n                            puVar16 = var_74ch - stack0xfffff8a8;\n                            var_760h = &var_1d4h + puVar16;\n                            do {\n                                if (puVar16 < puVar13) {\n                                    var_748h = var_760h[1];\n                                }\n                                else {\n                                    var_748h = NULL;\n                                }\n                                if (puVar16 + -1 < puVar13) {\n                                    uVar11 = *var_760h;\n                                }\n                                else {\n                                    uVar11 = 0;\n                                }\n                                (&var_1d0h)[var_74ch] =\n                                     (uVar11 & var_77ch) >> (var_780h & 0x1f) |\n                                     (var_748h & var_750h) << (var_764h & 0x1f);\n                                var_74ch = var_74ch + -1;\n                                var_760h = var_760h + -1;\n                                puVar16 = puVar16 + -1;\n                                puVar13 = var_1d4h;\n                            } while (var_74ch != var_768h);\n                        }\n                        var_1d4h = var_778h;\n                        if (stack0xfffff8a8 != NULL) {\n                            puVar8 = &var_1d0h;\n                            for (puVar13 = stack0xfffff8a8; puVar13 != NULL; puVar13 = puVar13 + -1) {\n                                *puVar8 = 0;\n                                puVar8 = puVar8 + 1;\n                            }\n                        }\n                    }\n                    else {\n                        var_574h = NULL;\n                        var_1d4h = NULL;\n                        fcn.00457b41(&var_1d0h, 0x1cc, &var_570h, 0);\n                    }\n                    var_570h = 2;\n                }\n                else {\n                    iVar5 = 0;\n                    do {\n                        if (*(&var_570h + iVar5) != *(&var_1d0h + iVar5)) goto code_r0x00456502;\n                        iVar5 = iVar5 + 4;\n                    } while (iVar5 != 8);\n                    var_764h = var_74ch + -0x431 & 0x1f;\n                    *NULL = var_74ch + -0x431 >> 5;\n                    var_750h = 0x20 - var_764h;\n                    iVar5 = fcn.00402de7();\n                    puVar13 = var_748h;\n                    var_768h = iVar5 + -1;\n                    _var_774h = _var_774h & 0xffffffff;\n                    var_780h = ~var_768h;\n                    uVar11 = (&var_1d4h)[var_748h];\n                    iVar5 = 0x1f;\n                    if (uVar11 != 0) {\n                        for (; uVar11 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                        }\n                    }\n                    if (uVar11 == 0) {\n                        var_748h = NULL;\n                    }\n                    else {\n                        var_748h = iVar5 + 1;\n                    }\n                    if ((stack0xfffff8a8 + puVar13 < 0x74) &&\n                       (var_77ch = (0x20 - var_748h < var_764h) + stack0xfffff8a8 + puVar13,  var_77ch < 0x74)) {\n                        var_778h = stack0xfffff8a8 + -1;\n                        var_74ch = var_77ch + -1;\n                        if (var_74ch != var_778h) {\n                            puVar16 = var_74ch - stack0xfffff8a8;\n                            var_760h = &var_1d4h + puVar16;\n                            do {\n                                if (puVar16 < puVar13) {\n                                    var_748h = var_760h[1];\n                                }\n                                else {\n                                    var_748h = NULL;\n                                }\n                                if (puVar16 + -1 < puVar13) {\n                                    uVar11 = *var_760h;\n                                }\n                                else {\n                                    uVar11 = 0;\n                                }\n                                (&var_1d0h)[var_74ch] =\n                                     (uVar11 & var_780h) >> (var_750h & 0x1f) |\n                                     (var_748h & var_768h) << (var_764h & 0x1f);\n                                var_74ch = var_74ch + -1;\n                                var_760h = var_760h + -1;\n                                puVar16 = puVar16 + -1;\n                                puVar13 = var_1d4h;\n                            } while (var_74ch != var_778h);\n                        }\n                        var_1d4h = var_77ch;\n                        if (stack0xfffff8a8 != NULL) {\n                            puVar8 = &var_1d0h;\n                            for (puVar13 = stack0xfffff8a8; puVar13 != NULL; puVar13 = puVar13 + -1) {\n                                *puVar8 = 0;\n                                puVar8 = puVar8 + 1;\n                            }\n                        }\n                    }\n                    else {\n                        var_574h = NULL;\n                        var_1d4h = NULL;\n                        fcn.00457b41(&var_1d0h, 0x1cc, &var_570h, 0);\n                    }\n                    var_570h = 4;\n                }\n                var_56ch = 0;\n                var_3a4h = 0x1;\n                var_574h = 0x1;\n                fcn.00457b41(&var_3a0h, 0x1cc, &var_570h, 4);\n            }\n            var_780h = 0xa;\n            if (var_76ch < 0) {\n                var_778h = -var_76ch / 10;\n                var_770h = -var_76ch % 10;\n                _var_774h = _var_774h & 0xffffffff | var_770h << 0x20;\n                if (var_778h != NULL) {\n                    do {\n                        unique0x10001420 = var_778h;\n                        if (0x26 < var_778h) {\n                            stack0xfffff67c = 0x26;\n                        }\n                        uVar11 = *(*NULL * 4 + 0x4718a6);\n                        uVar15 = *(*NULL * 4 + 0x4718a7);\n                        var_574h = uVar15 + uVar11;\n                        fcn.0040248c(&var_570h);\n                        fcn.00403c38(&var_570h + uVar11, *(stack0xfffff8a8 * 4 + 0x4718a4) * 4 + 0x470dd0, uVar15 << 2);\n                        puVar13 = var_1d0h;\n                        var_74ch = var_574h;\n                        if (var_574h < 0x2) {\n                            if (var_570h == 0) {\n                                var_970h = 0;\n                                var_1d4h = NULL;\n                                fcn.00457b41(&var_1d0h, 0x1cc, &var_96ch, 0);\n                            }\n                            else if ((var_570h != 1) && (var_1d4h != NULL)) {\n                                uVar11 = 0;\n                                var_78ch = var_1d4h;\n                                puVar13 = NULL;\n                                do {\n                                    uVar15 = (&var_1d0h)[puVar13];\n                                    uVar10 = var_570h * uVar15;\n                                    (&var_1d0h)[puVar13] = uVar10 + uVar11;\n                                    uVar11 = (var_570h * uVar15 >> 0x20) + CARRY4(uVar10, uVar11);\n                                    puVar13 = puVar13 + 1;\n                                } while (puVar13 != var_1d4h);\n                                if (uVar11 == 0) goto code_r0x00456ea7;\n                                if (var_1d4h < 0x73) {\n                                    (&var_1d0h)[var_1d4h] = uVar11;\n                                    var_1d4h = var_1d4h + 1;\n                                    goto code_r0x00456ea7;\n                                }\n                                var_970h = 0;\n                                var_1d4h = NULL;\n                                fcn.00457b41(&var_1d0h, 0x1cc, &var_96ch, 0);\n                                bVar2 = false;\n                                goto code_r0x004571ad;\n                            }\ncode_r0x00456ea7:\n                            bVar2 = true;\n                        }\n                        else {\n                            if (var_1d4h < 0x2) {\n                                var_78ch = var_1d0h;\n                                var_1d4h = var_574h;\n                                fcn.00457b41(&var_1d0h, 0x1cc, &var_570h, var_574h << 2);\n                                if (puVar13 == NULL) {\n                                    var_970h = 0;\n                                    var_1d4h = NULL;\n                                    iVar5 = 0;\n                                    puVar8 = &var_96ch;\n                                    goto code_r0x0045719a;\n                                }\n                                if ((puVar13 != 0x1) && (var_1d4h != NULL)) {\n                                    uVar11 = 0;\n                                    var_77ch = var_1d4h;\n                                    puVar13 = NULL;\n                                    do {\n                                        uVar15 = (&var_1d0h)[puVar13];\n                                        uVar10 = ZEXT48(var_78ch) * uVar15;\n                                        (&var_1d0h)[puVar13] = uVar10 + uVar11;\n                                        uVar11 = (ZEXT48(var_78ch) * uVar15 >> 0x20) + CARRY4(uVar10, uVar11);\n                                        puVar13 = puVar13 + 1;\n                                    } while (puVar13 != var_1d4h);\n                                    if (uVar11 != 0) {\n                                        if (0x72 < var_1d4h) {\ncode_r0x0045725e:\n                                            var_970h = 0;\n                                            var_1d4h = NULL;\n                                            fcn.00457b41(&var_1d0h, 0x1cc, &var_96ch, 0);\n                                            bVar2 = false;\n                                            goto code_r0x004571ad;\n                                        }\n                                        (&var_1d0h)[var_1d4h] = uVar11;\n                                        var_1d4h = var_1d4h + 1;\n                                    }\n                                }\n                            }\n                            else {\n                                var_760h = &var_570h;\n                                if (var_574h < var_1d4h) {\n                                    var_764h = var_1d4h;\n                                    var_750h = &var_1d0h;\n                                }\n                                else {\n                                    var_760h = &var_1d0h;\n                                    var_764h = var_574h;\n                                    var_750h = &var_570h;\n                                    var_74ch = var_1d4h;\n                                }\n                                var_1d4h = NULL;\n                                puVar13 = NULL;\n                                var_744h = NULL;\n                                if (var_74ch != NULL) {\n                                    do {\n                                        if (var_760h[puVar13] == 0) {\n                                            if (puVar13 == var_1d4h) {\n                                                (&var_740h)[puVar13] = 0;\n                                                var_1d4h = puVar13 + 1;\n                                                var_744h = var_1d4h;\n                                            }\n                                        }\n                                        else {\n                                            var_748h = NULL;\n                                            var_768h = NULL;\n                                            puVar16 = puVar13;\n                                            if (var_764h != NULL) {\n                                                do {\n                                                    if (puVar16 == 0x73) break;\n                                                    if (puVar16 == var_1d4h) {\n                                                        (&var_740h)[puVar16] = 0;\n                                                        var_744h = puVar13 + 1 + var_768h;\n                                                    }\n                                                    uVar11 = var_750h[var_768h];\n                                                    uVar15 = var_760h[puVar13];\n                                                    uVar6 = uVar11 * uVar15;\n                                                    puVar9 = uVar6 + var_748h;\n                                                    puVar17 = &var_740h + puVar16;\n                                                    uVar10 = *puVar17;\n                                                    *puVar17 = puVar9 + *puVar17;\n                                                    var_748h = (uVar11 * uVar15 >> 0x20) + CARRY4(uVar6, var_748h) +\n                                                               CARRY4(uVar10, puVar9);\n                                                    var_768h = var_768h + 1;\n                                                    puVar16 = puVar16 + 1;\n                                                    var_1d4h = var_744h;\n                                                } while (var_768h != var_764h);\n                                                if (var_748h != NULL) {\n                                                    puVar17 = var_748h;\n                                                    var_748h = &var_740h + puVar16;\n                                                    do {\n                                                        if (puVar16 == 0x73) break;\n                                                        if (puVar16 == var_1d4h) {\n                                                            *var_748h = 0;\n                                                            var_744h = puVar16 + 1;\n                                                        }\n                                                        puVar12 = var_748h + 1;\n                                                        puVar16 = puVar16 + 1;\n                                                        uVar11 = *var_748h;\n                                                        *var_748h = *var_748h + puVar17;\n                                                        puVar17 = CARRY4(uVar11, puVar17);\n                                                        var_1d4h = var_744h;\n                                                        var_748h = puVar12;\n                                                    } while (puVar17 != NULL);\n                                                }\n                                            }\n                                            if (puVar16 == 0x73) goto code_r0x0045725e;\n                                        }\n                                        puVar13 = puVar13 + 1;\n                                    } while (puVar13 != var_74ch);\n                                }\n                                iVar5 = var_1d4h << 2;\n                                puVar8 = &var_740h;\ncode_r0x0045719a:\n                                fcn.00457b41(&var_1d0h, 0x1cc, puVar8, iVar5);\n                            }\n                            bVar2 = true;\n                        }\ncode_r0x004571ad:\n                        if (!bVar2) goto code_r0x004572ac;\n                        var_778h = var_778h - stack0xfffff8a8;\n                    } while (var_778h != NULL);\n                }\n                if (var_770h != 0) {\n                    uVar11 = *(var_770h * 4 + 0x47195c);\n                    _var_774h = _var_774h & 0xffffffff | uVar11 << 0x20;\n                    if (uVar11 == 0) {\ncode_r0x004572ac:\n                        var_1d4h = NULL;\n                        puVar8 = &var_1d0h;\n                        goto code_r0x004572b9;\n                    }\n                    if ((uVar11 != 1) && (var_1d4h != NULL)) {\n                        var_750h = NULL;\n                        puVar13 = NULL;\n                        do {\n                            uVar15 = (&var_1d0h)[puVar13];\n                            uVar10 = uVar11 * uVar15;\n                            (&var_1d0h)[puVar13] = uVar10 + var_750h;\n                            var_750h = (uVar11 * uVar15 >> 0x20) + CARRY4(uVar10, var_750h);\n                            puVar13 = puVar13 + 1;\n                        } while (puVar13 != var_1d4h);\n                        if (var_750h != NULL) {\n                            if (0x72 < var_1d4h) goto code_r0x004572ac;\n                            (&var_1d0h)[var_1d4h] = var_750h;\n                            var_1d4h = var_1d4h + 1;\n                        }\n                    }\n                }\n            }\n            else {\n                var_78ch = var_76ch % 10;\n                for (var_750h = var_76ch / 10; var_750h != NULL; var_750h = var_750h - var_748h) {\n                    var_748h = var_750h;\n                    if (0x26 < var_750h) {\n                        var_748h = 0x26;\n                    }\n                    uVar11 = *(var_748h * 4 + 0x4718a6);\n                    uVar15 = *(var_748h * 4 + 0x4718a7);\n                    var_574h = uVar15 + uVar11;\n                    fcn.0040248c(&var_570h);\n                    fcn.00403c38(&var_570h + uVar11, *(var_748h * 4 + 0x4718a4) * 4 + 0x470dd0, uVar15 << 2);\n                    puVar13 = var_3a0h;\n                    var_74ch = var_574h;\n                    if (var_574h < 0x2) {\n                        if (var_570h == 0) {\n                            var_744h = NULL;\n                            var_3a4h = NULL;\n                            fcn.00457b41(&var_3a0h, 0x1cc, &var_740h, 0);\n                        }\n                        else if ((var_570h != 1) && (var_3a4h != NULL)) {\n                            puVar13 = NULL;\n                            var_77ch = var_3a4h;\n                            puVar16 = NULL;\n                            do {\n                                puVar17 = apuStack928[puVar16 + -1];\n                                uVar11 = var_570h * ZEXT48(puVar17);\n                                apuStack928[puVar16 + -1] = uVar11 + puVar13;\n                                puVar13 = (var_570h * ZEXT48(puVar17) >> 0x20) + CARRY4(uVar11, puVar13);\n                                puVar16 = puVar16 + 1;\n                            } while (puVar16 != var_3a4h);\n                            if (puVar13 == NULL) goto code_r0x004569ad;\n                            if (var_3a4h < 0x73) {\n                                apuStack928[var_3a4h + -1] = puVar13;\n                                var_3a4h = var_3a4h + 1;\n                                goto code_r0x004569ad;\n                            }\n                            var_574h = NULL;\n                            var_3a4h = NULL;\n                            fcn.00457b41(&var_3a0h, 0x1cc, &var_570h, 0);\n                            bVar2 = false;\n                            goto code_r0x00456cd0;\n                        }\ncode_r0x004569ad:\n                        bVar2 = true;\n                    }\n                    else {\n                        if (var_3a4h < 0x2) {\n                            var_77ch = var_3a0h;\n                            var_3a4h = var_574h;\n                            fcn.00457b41(&var_3a0h, 0x1cc, &var_570h, var_574h << 2);\n                            if (puVar13 == NULL) {\n                                var_574h = NULL;\n                                var_3a4h = NULL;\n                                iVar5 = 0;\n                                puVar8 = &var_570h;\n                                goto code_r0x00456cbd;\n                            }\n                            if ((puVar13 != 0x1) && (var_3a4h != NULL)) {\n                                puVar13 = NULL;\n                                var_768h = var_3a4h;\n                                puVar16 = NULL;\n                                do {\n                                    puVar17 = apuStack928[puVar16 + -1];\n                                    uVar11 = ZEXT48(var_77ch) * ZEXT48(puVar17);\n                                    apuStack928[puVar16 + -1] = uVar11 + puVar13;\n                                    puVar13 = (ZEXT48(var_77ch) * ZEXT48(puVar17) >> 0x20) + CARRY4(uVar11, puVar13);\n                                    puVar16 = puVar16 + 1;\n                                } while (puVar16 != var_3a4h);\n                                if (puVar13 != NULL) {\n                                    if (0x72 < var_3a4h) {\n                                        var_574h = NULL;\n                                        puVar8 = &var_570h;\ncode_r0x00456d36:\n                                        var_3a4h = NULL;\n                                        fcn.00457b41(&var_3a0h, 0x1cc, puVar8, 0);\n                                        bVar2 = false;\n                                        goto code_r0x00456cd0;\n                                    }\n                                    apuStack928[var_3a4h + -1] = puVar13;\n                                    var_3a4h = var_3a4h + 1;\n                                }\n                            }\n                        }\n                        else {\n                            var_764h = &var_570h;\n                            if (var_574h < var_3a4h) {\n                                var_760h = var_3a4h;\n                                var_778h = &var_3a0h;\n                            }\n                            else {\n                                var_764h = &var_3a0h;\n                                var_760h = var_574h;\n                                var_778h = &var_570h;\n                                var_74ch = var_3a4h;\n                            }\n                            var_3a4h = NULL;\n                            puVar13 = NULL;\n                            var_744h = NULL;\n                            if (var_74ch != NULL) {\n                                do {\n                                    if (var_764h[puVar13] == 0) {\n                                        if (puVar13 == var_3a4h) {\n                                            (&var_740h)[puVar13] = 0;\n                                            var_3a4h = puVar13 + 1;\n                                            var_744h = var_3a4h;\n                                        }\n                                    }\n                                    else {\n                                        stack0xfffff8a8 = NULL;\n                                        var_768h = NULL;\n                                        puVar16 = puVar13;\n                                        if (var_760h != NULL) {\n                                            do {\n                                                if (puVar16 == 0x73) break;\n                                                if (puVar16 == var_3a4h) {\n                                                    (&var_740h)[puVar16] = 0;\n                                                    var_744h = puVar13 + 1 + var_768h;\n                                                }\n                                                uVar11 = var_778h[var_768h];\n                                                uVar15 = var_764h[puVar13];\n                                                uVar6 = uVar11 * uVar15;\n                                                uVar10 = (&var_740h)[puVar16];\n                                                uVar7 = uVar6 + (&var_740h)[puVar16];\n                                                (&var_740h)[puVar16] = uVar7 + stack0xfffff8a8;\n                                                *0x8 = (uVar11 * uVar15 >> 0x20) + CARRY4(uVar6, uVar10) +\n                                                       CARRY4(uVar7, stack0xfffff8a8);\n                                                var_768h = var_768h + 1;\n                                                puVar16 = puVar16 + 1;\n                                                var_3a4h = var_744h;\n                                            } while (var_768h != var_760h);\n                                            if (stack0xfffff8a8 != NULL) {\n                                                puVar17 = stack0xfffff8a8;\n                                                unique0x100014a0 = &var_740h + puVar16;\n                                                do {\n                                                    if (puVar16 == 0x73) break;\n                                                    if (puVar16 == var_3a4h) {\n                                                        *stack0xfffff8a8 = 0;\n                                                        var_744h = puVar16 + 1;\n                                                    }\n                                                    puVar12 = stack0xfffff8a8 + 1;\n                                                    puVar16 = puVar16 + 1;\n                                                    uVar11 = *stack0xfffff8a8;\n                                                    *stack0xfffff8a8 = *stack0xfffff8a8 + puVar17;\n                                                    puVar17 = CARRY4(uVar11, puVar17);\n                                                    var_3a4h = var_744h;\n                                                    unique0x100014a4 = puVar12;\n                                                } while (puVar17 != NULL);\n                                            }\n                                        }\n                                        if (puVar16 == 0x73) {\n                                            var_970h = 0;\n                                            puVar8 = &var_96ch;\n                                            goto code_r0x00456d36;\n                                        }\n                                    }\n                                    puVar13 = puVar13 + 1;\n                                } while (puVar13 != var_74ch);\n                            }\n                            iVar5 = var_3a4h << 2;\n                            puVar8 = &var_740h;\ncode_r0x00456cbd:\n                            fcn.00457b41(&var_3a0h, 0x1cc, puVar8, iVar5);\n                        }\n                        bVar2 = true;\n                    }\ncode_r0x00456cd0:\n                    if (!bVar2) goto code_r0x00456d5b;\n                }\n                if (var_78ch != NULL) {\n                    var_78ch = *(var_78ch * 4 + 0x47195c);\n                    if (var_78ch == NULL) {\ncode_r0x00456d5b:\n                        var_3a4h = NULL;\n                        puVar8 = &var_3a0h;\ncode_r0x004572b9:\n                        var_970h = 0;\n                        fcn.00457b41(puVar8, 0x1cc, &var_96ch, 0);\n                    }\n                    else if ((var_78ch != 0x1) && (var_3a4h != NULL)) {\n                        var_750h = NULL;\n                        puVar13 = NULL;\n                        do {\n                            puVar16 = apuStack928[puVar13 + -1];\n                            uVar11 = ZEXT48(var_78ch) * ZEXT48(puVar16);\n                            apuStack928[puVar13 + -1] = uVar11 + var_750h;\n                            var_750h = (ZEXT48(var_78ch) * ZEXT48(puVar16) >> 0x20) + CARRY4(uVar11, var_750h);\n                            puVar13 = puVar13 + 1;\n                        } while (puVar13 != var_3a4h);\n                        if (var_750h != NULL) {\n                            if (0x72 < var_3a4h) goto code_r0x00456d5b;\n                            apuStack928[var_3a4h + -1] = var_750h;\n                            var_3a4h = var_3a4h + 1;\n                        }\n                    }\n                }\n            }\n            puVar13 = var_75ch;\n            var_74ch = var_75ch;\n            if (var_1d4h != NULL) {\n                var_750h = NULL;\n                puVar16 = NULL;\n                do {\n                    uVar11 = (&var_1d0h)[puVar16];\n                    uVar15 = uVar11 * 10;\n                    (&var_1d0h)[puVar16] = uVar15 + var_750h;\n                    var_750h = (uVar11 * 10 >> 0x20) + CARRY4(uVar15, var_750h);\n                    puVar16 = puVar16 + 1;\n                } while (puVar16 != var_1d4h);\n                if (var_750h != NULL) {\n                    if (var_1d4h < 0x73) {\n                        (&var_1d0h)[var_1d4h] = var_750h;\n                        var_1d4h = var_1d4h + 1;\n                    }\n                    else {\n                        var_970h = 0;\n                        var_1d4h = NULL;\n                        fcn.00457b41(&var_1d0h, 0x1cc, &var_96ch, 0);\n                    }\n                }\n            }\n            iVar5 = fcn.0040321f(&var_1d4h, &var_3a4h);\n            puVar16 = var_75ch;\n            if (iVar5 == 10) {\n                var_74ch = var_75ch + 1;\n                var_76ch = var_76ch + 1;\n                *var_75ch = 0x31;\n                uVar3 = _var_774h & 0xffffffff;\n                _var_774h = uVar3 | ZEXT48(var_3a4h) << 0x20;\n                if (var_3a4h != NULL) {\n                    puVar17 = NULL;\n                    puVar13 = NULL;\n                    do {\n                        puVar12 = apuStack928[puVar13 + -1];\n                        uVar11 = ZEXT48(puVar12) * 10;\n                        apuStack928[puVar13 + -1] = uVar11 + puVar17;\n                        puVar17 = (ZEXT48(puVar12) * 10 >> 0x20) + CARRY4(uVar11, puVar17);\n                        puVar13 = puVar13 + 1;\n                    } while (puVar13 != var_3a4h);\n                    _var_774h = uVar3 | ZEXT48(puVar17) << 0x20;\n                    if (puVar17 != NULL) {\n                        if (var_3a4h < 0x73) {\n                            apuStack928[var_3a4h + -1] = puVar17;\n                            var_3a4h = var_3a4h + 1;\n                        }\n                        else {\n                            var_970h = 0;\n                            var_3a4h = NULL;\n                            fcn.00457b41(&var_3a0h, 0x1cc, &var_96ch, 0);\n                        }\n                    }\n                }\ncode_r0x004573fa:\n                puVar13 = puVar16 + 1;\n                uVar11 = var_76ch;\n            }\n            else {\n                if (iVar5 != 0) {\n                    var_74ch = var_75ch + 1;\n                    *var_75ch = iVar5 + '0';\n                    goto code_r0x004573fa;\n                }\n                uVar11 = var_76ch - 1;\n            }\n            var_788h[1] = uVar11;\n            uVar15 = var_784h;\n            if (((-1 < uVar11) && (var_784h < 0x80000000)) && (arg_14h == 0)) {\n                uVar15 = var_784h + uVar11;\n            }\n            uVar11 = arg_20h - 1U;\n            if (uVar15 <= arg_20h - 1U) {\n                uVar11 = uVar15;\n            }\n            var_750h = uVar11 + var_75ch;\n            var_755h._0_1_ = 0;\n            if (puVar13 != var_750h) {\n                do {\n                    puVar16 = var_74ch;\n                    uVar3 = _var_774h & 0xffffffff;\n                    _var_774h = uVar3 | ZEXT48(var_1d4h) << 0x20;\n                    if (var_1d4h == NULL) break;\n                    uVar11 = 0;\n                    puVar13 = NULL;\n                    do {\n                        uVar15 = (&var_1d0h)[puVar13];\n                        uVar10 = uVar15 * 1000000000;\n                        (&var_1d0h)[puVar13] = uVar10 + uVar11;\n                        uVar11 = (uVar15 * 1000000000 >> 0x20) + CARRY4(uVar10, uVar11);\n                        puVar13 = puVar13 + 1;\n                    } while (puVar13 != var_1d4h);\n                    _var_774h = uVar3 | uVar11 << 0x20;\n                    if (uVar11 != 0) {\n                        if (var_1d4h < 0x73) {\n                            (&var_1d0h)[var_1d4h] = uVar11;\n                            var_1d4h = var_1d4h + 1;\n                        }\n                        else {\n                            var_970h = 0;\n                            var_1d4h = NULL;\n                            fcn.00457b41(&var_1d0h, 0x1cc, &var_96ch, 0);\n                        }\n                    }\n                    uVar11 = fcn.0040321f(&var_1d4h, &var_3a4h);\n                    var_784h = 8;\n                    uVar15 = var_750h - puVar16;\n                    do {\n                        _var_774h = _var_774h & 0xffffffff | uVar11 / var_780h << 0x20;\n                        cVar14 = uVar11 % var_780h + '0';\n                        if (var_784h < uVar15) {\n                            *(var_784h + puVar16) = cVar14;\n                        }\n                        else if (cVar14 != '0') {\n                            var_755h._0_1_ = 1;\n                        }\n                        var_784h = var_784h - 1;\n                        uVar11 = uVar11 / var_780h;\n                    } while (var_784h != 0xffffffff);\n                    if (9 < uVar15) {\n                        uVar15 = 9;\n                    }\n                    puVar13 = puVar16 + uVar15;\n                    var_74ch = puVar13;\n                } while (puVar13 != var_750h);\n            }\n            *puVar13 = 0;\n            goto code_r0x004575bf;\n        }\n        var_788h[1] = 1;\n        if (iVar5 != 1) {\n            if (iVar5 == 2) {\n                arg_10h_00 = \"1#QNAN\";\n            }\n            else if (iVar5 == 3) {\n                arg_10h_00 = \"1#SNAN\";\n            }\n            else {\n                if (iVar5 != 4) goto code_r0x00456213;\n                arg_10h_00 = \"1#IND\";\n            }\n            goto code_r0x004561d2;\n        }\n        iVar5 = fcn.00404098(var_75ch, arg_20h, \"1#INF\");\n    }\n    if (iVar5 != 0) {\n        fcn.0040277f(0, 0, 0, 0, 0);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\ncode_r0x004575bf:\n    if (var_794h != '\\0') {\n        fcn.00403062(&var_79ch);\n    }\n    fcn.0040241e(var_970h);\n    return;\n}\n",
        "token_count": 10965
    },
    "00403ab7": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403ab7(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar2 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar2 = iVar1 + -1 + iVar2;\n    *(in_ECX + 0x30) = iVar2;\n    iVar1 = iVar2;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        **(in_ECX + 0x30) = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar2 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 313
    },
    "00403b43": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403b43(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar4 = iVar1 + -1 + iVar4;\n    *(in_ECX + 0x30) = iVar4;\n    iVar1 = iVar4;\n    do {\n        iVar2 = *(in_ECX + 0x24);\n        if (iVar2 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar4 - iVar1;\n                *(in_ECX + 0x30) = iVar1 + 1;\n                return;\n            }\n            iVar2 = *(in_ECX + 0x24);\n        }\n        uVar3 = arg_8h;\n        *(in_ECX + 0x24) = iVar2 + -1;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        uVar3 = (uVar3 & 0xf) + 0x30;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar3) {\n            uVar3 = (arg_10h ^ 1) * ' ' + '\\a' + uVar3;\n        }\n        **(in_ECX + 0x30) = uVar3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 463
    },
    "00403c9c": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403c9c(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char extraout_CL;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00403d37();\n    iVar4 = iVar4 + iVar2 + -1;\n    *(in_ECX + 0x30) = iVar4;\n    var_4h = arg_8h;\n    iVar2 = iVar4;\n    while ((iVar1 = *(in_ECX + 0x24),  0 < iVar1 || ((var_4h | arg_ch) != 0))) {\n        *(in_ECX + 0x24) = iVar1 + -1;\n        uVar5 = fcn.0040150a(var_4h, arg_ch, 10, 0, iVar1);\n        arg_ch = uVar5 >> 0x20;\n        var_4h = uVar5;\n        cVar3 = extraout_CL + '0';\n        if ('9' < cVar3) {\n            cVar3 = cVar3 + (arg_10h ^ 1) * ' ' + '\\a';\n        }\n        **(in_ECX + 0x30) = cVar3;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar2 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar4 - iVar2;\n    *(in_ECX + 0x30) = iVar2 + 1;\n    return;\n}\n",
        "token_count": 456
    },
    "00403ce2": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403ce2(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    uint32_t uVar4;\n    \n    iVar5 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar5 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar5 = iVar5 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = iVar5;\n    iVar2 = iVar5;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar5 - iVar2 >> 1;\n                *(in_ECX + 0x30) = iVar2 + 2;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        *(in_ECX + 0x24) = iVar3 + -1;\n        uVar4 = (arg_8h & 0xf) + 0x30;\n        uVar1 = uVar4;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        arg_ch = arg_ch >> 4;\n        if (0x39 < uVar4) {\n            uVar1 = (arg_10h ^ 1) * ' ' + '\\a' + uVar4;\n        }\n        **(in_ECX + 0x30) = uVar1;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar2 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 479
    },
    "00403f12": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00403f12(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    ushort uVar2;\n    uint32_t arg_8h_00;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint uVar6;\n    ushort *puVar7;\n    uint8_t *puVar8;\n    ushort *puVar9;\n    uint unaff_EBX;\n    uint8_t *puVar10;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t uVar11;\n    int32_t var_24h;\n    uint var_20h;\n    uint8_t *var_1ch;\n    int32_t lpCPInfo;\n    uint var_12h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    arg_8h_00 = fcn.00443048(arg_8h);\n    if (arg_8h_00 != 0) {\n        uVar11 = 0;\n        uVar3 = 0;\n        var_1ch = NULL;\ncode_r0x00443740:\n        if (*(uVar3 + 0x4755a0) != arg_8h_00) goto code_r0x0044374c;\n        fcn.0040248c(arg_ch + 0x18, 0, 0x101);\n        var_24h = var_1ch * 0x30;\n        var_1ch = var_24h + 0x4755b0;\n        do {\n            uVar1 = *var_1ch;\n            puVar8 = var_1ch;\n            while ((uVar1 != 0 && (puVar8[1] != 0))) {\n                uVar3 = *puVar8;\n                if (uVar3 <= puVar8[1]) {\n                    puVar10 = arg_ch + 0x19 + uVar3;\n                    do {\n                        if (0xff < uVar3) break;\n                        *puVar10 = *puVar10 | *(uVar11 + 0x47559c);\n                        uVar3 = uVar3 + 1;\n                        puVar10 = puVar10 + 1;\n                    } while (uVar3 <= puVar8[1]);\n                }\n                puVar8 = puVar8 + 2;\n                uVar1 = *puVar8;\n            }\n            uVar11 = uVar11 + 1;\n            var_1ch = var_1ch + 8;\n        } while (uVar11 < 4);\n        *(arg_ch + 4) = arg_8h_00;\n        *(arg_ch + 8) = 1;\n        uVar6 = fcn.00442ff5(arg_8h_00);\n        *(arg_ch + 0x21c) = uVar6;\n        puVar7 = arg_ch + 0xc;\n        puVar9 = var_24h + 0x4755a4;\n        iVar4 = 6;\n        do {\n            uVar2 = *puVar9;\n            puVar9 = puVar9 + 1;\n            *puVar7 = uVar2;\n            puVar7 = puVar7 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        goto code_r0x0044379c;\n    }\ncode_r0x004438f9:\n    fcn.004430f8(arg_ch);\ncode_r0x00443902:\n    fcn.0040241e(var_24h);\n    return;\ncode_r0x0044374c:\n    var_1ch = var_1ch + 1;\n    uVar3 = uVar3 + 0x30;\n    if (0xef < uVar3) goto code_r0x0044375a;\n    goto code_r0x00443740;\ncode_r0x0044375a:\n    if ((arg_8h_00 == 65000) || (iVar4 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(arg_8h_00 & 0xffff),  iVar4 == 0))\n    goto code_r0x00443902;\n    if (arg_8h_00 == 0xfde9) {\n        *(arg_ch + 4) = 0xfde9;\n        *(arg_ch + 0x21c) = 0;\n        *(arg_ch + 0x18) = 0;\n        *(arg_ch + 0x1c) = 0;\n    }\n    else {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(arg_8h_00, &lpCPInfo);\n        if (iVar4 == 0) {\n            if (*0x4771c8 == 0) goto code_r0x00443902;\n            goto code_r0x004438f9;\n        }\n        fcn.0040248c(arg_ch + 0x18, 0, 0x101);\n        *(arg_ch + 4) = arg_8h_00;\n        *(arg_ch + 0x21c) = 0;\n        if (lpCPInfo == 2) {\n            puVar5 = &var_12h;\n            while ((var_12h != 0 && (uVar1 = *(puVar5 + 1),  uVar1 != 0))) {\n                uVar3 = *puVar5;\n                if (uVar3 <= uVar1) {\n                    puVar8 = arg_ch + 0x19 + uVar3;\n                    iVar4 = (uVar1 - uVar3) + 1;\n                    do {\n                        *puVar8 = *puVar8 | 4;\n                        puVar8 = puVar8 + 1;\n                        iVar4 = iVar4 + -1;\n                    } while (iVar4 != 0);\n                }\n                puVar5 = puVar5 + 2;\n                var_12h._0_1_ = *puVar5;\n            }\n            puVar8 = arg_ch + 0x1a;\n            iVar4 = 0xfe;\n            do {\n                *puVar8 = *puVar8 | 8;\n                puVar8 = puVar8 + 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            uVar6 = fcn.00442ff5(*(arg_ch + 4));\n            *(arg_ch + 0x21c) = uVar6;\n            uVar11 = 1;\n        }\n    }\n    *(arg_ch + 8) = uVar11;\n    *(arg_ch + 0xc) = 0;\n    *(arg_ch + 0x10) = 0;\n    *(arg_ch + 0x14) = 0;\ncode_r0x0044379c:\n    fcn.00443173(arg_ch, unaff_EDI, unaff_ESI, unaff_EBX, var_24h, arg_8h_00, var_1ch);\n    goto code_r0x00443902;\n}\n",
        "token_count": 1634
    },
    "00403f4e": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403f4e(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar3 = iVar3 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = iVar3;\n    var_4h = iVar3;\n    do {\n        iVar2 = *(in_ECX + 0x24);\n        if (iVar2 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar3 - var_4h >> 1;\n                *(in_ECX + 0x30) = var_4h + 2;\n                return;\n            }\n            iVar2 = *(in_ECX + 0x24);\n        }\n        uVar1 = arg_8h;\n        *(in_ECX + 0x24) = iVar2 + -1;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        arg_ch = arg_ch >> 3;\n        **(in_ECX + 0x30) = (uVar1 & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        var_4h = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 424
    },
    "00404034": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404034(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar3 = iVar3 + (iVar2 + -1) * 2;\n    *(in_ECX + 0x30) = iVar3;\n    var_4h = iVar3;\n    do {\n        iVar2 = *(in_ECX + 0x24);\n        if (iVar2 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar3 - var_4h >> 1;\n                *(in_ECX + 0x30) = var_4h + 2;\n                return;\n            }\n            iVar2 = *(in_ECX + 0x24);\n        }\n        uVar1 = arg_8h;\n        *(in_ECX + 0x24) = iVar2 + -1;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        arg_ch = arg_ch >> 3;\n        **(in_ECX + 0x30) = (uVar1 & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        var_4h = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 422
    },
    "004042b4": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004042b4(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint32_t uVar4;\n    ulong uVar5;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar2 = iVar3 + iVar2 * 2 + -2;\n    var_4h = arg_8h;\n    *(in_ECX + 0x30) = iVar2;\n    iVar3 = iVar2;\n    while ((iVar1 = *(in_ECX + 0x24),  0 < iVar1 || ((var_4h | arg_ch) != 0))) {\n        *(in_ECX + 0x24) = iVar1 + -1;\n        uVar5 = fcn.0040150a(var_4h, arg_ch, 10, 0, iVar1);\n        arg_ch = uVar5 >> 0x20;\n        var_4h = uVar5;\n        uVar4 = extraout_ECX + 0x30U & 0xffff;\n        if (0x39 < uVar4) {\n            uVar4 = (arg_10h ^ 1) * ' ' + '\\a' + uVar4;\n        }\n        **(in_ECX + 0x30) = uVar4;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar2 - iVar3 >> 1;\n    *(in_ECX + 0x30) = iVar3 + 2;\n    return;\n}\n",
        "token_count": 476
    },
    "004042fa": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004042fa(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar2 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00402a68();\n    iVar2 = iVar2 + (iVar1 + -1) * 2;\n    *(in_ECX + 0x30) = iVar2;\n    iVar1 = iVar2;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        **(in_ECX + 0x30) = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar2 - iVar1 >> 1;\n    *(in_ECX + 0x30) = iVar1 + 2;\n    return;\n}\n",
        "token_count": 327
    },
    "0040433b": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040433b(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar2 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar2 = iVar1 + -1 + iVar2;\n    *(in_ECX + 0x30) = iVar2;\n    iVar1 = iVar2;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        **(in_ECX + 0x30) = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar2 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 313
    },
    "0040435e": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040435e(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00403d37();\n    iVar4 = iVar2 + -1 + iVar4;\n    *(in_ECX + 0x30) = iVar4;\n    iVar2 = iVar4;\n    do {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 < 1) {\n            if ((arg_8h | arg_ch) == 0) {\n                *(in_ECX + 0x34) = iVar4 - iVar2;\n                *(in_ECX + 0x30) = iVar2 + 1;\n                return;\n            }\n            iVar3 = *(in_ECX + 0x24);\n        }\n        uVar1 = arg_8h;\n        *(in_ECX + 0x24) = iVar3 + -1;\n        arg_8h = arg_8h >> 3 | arg_ch << 0x1d;\n        arg_ch = arg_ch >> 3;\n        **(in_ECX + 0x30) = (uVar1 & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar2 = *(in_ECX + 0x30);\n    } while( true );\n}\n",
        "token_count": 400
    },
    "004043f9": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004043f9(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint32_t uVar4;\n    ulong uVar5;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar2 = iVar3 + iVar2 * 2 + -2;\n    var_4h = arg_8h;\n    *(in_ECX + 0x30) = iVar2;\n    iVar3 = iVar2;\n    while ((iVar1 = *(in_ECX + 0x24),  0 < iVar1 || ((var_4h | arg_ch) != 0))) {\n        *(in_ECX + 0x24) = iVar1 + -1;\n        uVar5 = fcn.0040150a(var_4h, arg_ch, 10, 0, iVar1);\n        arg_ch = uVar5 >> 0x20;\n        var_4h = uVar5;\n        uVar4 = extraout_ECX + 0x30U & 0xffff;\n        if (0x39 < uVar4) {\n            uVar4 = (arg_10h ^ 1) * ' ' + '\\a' + uVar4;\n        }\n        **(in_ECX + 0x30) = uVar4;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar2 - iVar3 >> 1;\n    *(in_ECX + 0x30) = iVar3 + 2;\n    return;\n}\n",
        "token_count": 476
    },
    "00404408": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404408(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar2 = in_ECX + 0x3c;\n    }\n    iVar1 = fcn.00403d37();\n    iVar2 = iVar1 + -1 + iVar2;\n    *(in_ECX + 0x30) = iVar2;\n    iVar1 = iVar2;\n    for (; (0 < *(in_ECX + 0x24) || (arg_8h != 0)); arg_8h = arg_8h >> 3) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        **(in_ECX + 0x30) = (arg_8h & 7) + 0x30;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        iVar1 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar2 - iVar1;\n    *(in_ECX + 0x30) = iVar1 + 1;\n    return;\n}\n",
        "token_count": 312
    },
    "0040446c": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040446c(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint32_t uVar4;\n    ulong uVar5;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    iVar3 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar3 = in_ECX + 0x3c;\n    }\n    iVar2 = fcn.00402a68();\n    iVar2 = iVar3 + iVar2 * 2 + -2;\n    var_4h = arg_8h;\n    *(in_ECX + 0x30) = iVar2;\n    iVar3 = iVar2;\n    while ((iVar1 = *(in_ECX + 0x24),  0 < iVar1 || ((var_4h | arg_ch) != 0))) {\n        *(in_ECX + 0x24) = iVar1 + -1;\n        uVar5 = fcn.0040150a(var_4h, arg_ch, 10, 0, iVar1);\n        arg_ch = uVar5 >> 0x20;\n        var_4h = uVar5;\n        uVar4 = extraout_ECX + 0x30U & 0xffff;\n        if (0x39 < uVar4) {\n            uVar4 = (arg_10h ^ 1) * ' ' + '\\a' + uVar4;\n        }\n        **(in_ECX + 0x30) = uVar4;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar3 = *(in_ECX + 0x30);\n    }\n    *(in_ECX + 0x34) = iVar2 - iVar3 >> 1;\n    *(in_ECX + 0x30) = iVar3 + 2;\n    return;\n}\n",
        "token_count": 476
    },
    "0042c648": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042c648(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0x30;\n    if (arg_8h < 0x30) goto code_r0x0042c7e4;\n    if (0x39 < arg_8h) {\n        iVar3 = 0xff10;\n        if (arg_8h < 0xff10) {\n            iVar3 = 0x660;\n            if (arg_8h < 0x660) goto code_r0x0042c7e4;\n            if (0x669 < arg_8h) {\n                iVar3 = 0x6f0;\n                if (arg_8h < 0x6f0) goto code_r0x0042c7e4;\n                if (0x6f9 < arg_8h) {\n                    iVar3 = 0x966;\n                    if (arg_8h < 0x966) goto code_r0x0042c7e4;\n                    if (0x96f < arg_8h) {\n                        iVar3 = 0x9e6;\n                        if (arg_8h < 0x9e6) goto code_r0x0042c7e4;\n                        if (0x9ef < arg_8h) {\n                            iVar3 = 0xa66;\n                            if (arg_8h < 0xa66) goto code_r0x0042c7e4;\n                            if (0xa6f < arg_8h) {\n                                iVar3 = 0xae6;\n                                if (arg_8h < 0xae6) goto code_r0x0042c7e4;\n                                if (0xaef < arg_8h) {\n                                    iVar3 = 0xb66;\n                                    if (arg_8h < 0xb66) goto code_r0x0042c7e4;\n                                    if (0xb6f < arg_8h) {\n                                        iVar3 = 0xc66;\n                                        if (arg_8h < 0xc66) goto code_r0x0042c7e4;\n                                        if (0xc6f < arg_8h) {\n                                            iVar3 = 0xce6;\n                                            if (arg_8h < 0xce6) goto code_r0x0042c7e4;\n                                            if (0xcef < arg_8h) {\n                                                iVar3 = 0xd66;\n                                                if (arg_8h < 0xd66) goto code_r0x0042c7e4;\n                                                if (0xd6f < arg_8h) {\n                                                    iVar3 = 0xe50;\n                                                    if (arg_8h < 0xe50) goto code_r0x0042c7e4;\n                                                    if (0xe59 < arg_8h) {\n                                                        iVar3 = 0xed0;\n                                                        if (arg_8h < 0xed0) goto code_r0x0042c7e4;\n                                                        if (0xed9 < arg_8h) {\n                                                            iVar3 = 0xf20;\n                                                            if (arg_8h < 0xf20) goto code_r0x0042c7e4;\n                                                            if (0xf29 < arg_8h) {\n                                                                iVar3 = 0x1040;\n                                                                if (arg_8h < 0x1040) goto code_r0x0042c7e4;\n                                                                if (0x1049 < arg_8h) {\n                                                                    iVar3 = 0x17e0;\n                                                                    if (arg_8h < 0x17e0) goto code_r0x0042c7e4;\n                                                                    if (0x17e9 < arg_8h) {\n                                                                        iVar3 = 0x1810;\n                                                                        if (arg_8h < 0x1810) goto code_r0x0042c7e4;\n                                                                        uVar2 = 0x181a;\n                                                                        goto code_r0x0042c7d1;\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            uVar2 = 0xff1a;\ncode_r0x0042c7d1:\n            if (uVar2 <= arg_8h) goto code_r0x0042c7e4;\n        }\n    }\n    if (arg_8h - iVar3 != -1) {\n        return arg_8h - iVar3;\n    }\ncode_r0x0042c7e4:\n    uVar1 = arg_8h;\n    if (((uVar1 < 0x41) || (0x5a < uVar1)) && (0x19 < uVar1 - 0x61)) {\n        return -1;\n    }\n    if (uVar1 - 0x61 < 0x1a) {\n        uVar1 = uVar1 - 0x20;\n    }\n    return uVar1 - 0x37;\n}\n",
        "token_count": 1130
    },
    "0044df0a": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl\nfcn.0044df0a(uint32_t *arg_8h, uchar *arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, \n            uint arg_20h, uint arg_24h, uint arg_28h, int32_t arg_2ch)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t extraout_ECX_01;\n    char *pcVar11;\n    char *pcVar12;\n    bool bVar13;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_1ch < 0) {\n        arg_1ch = 0;\n    }\n    *arg_ch = 0;\n    if (arg_10h <= arg_1ch + 0xbU) {\n        *(arg_2ch + 0x1c) = 1;\n        *(arg_2ch + 0x18) = 0x22;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_2ch);\n        return 0x22;\n    }\n    uVar9 = arg_8h[1];\n    if ((uVar9 >> 0x14 & 0x7ff) == 0x7ff) {\n        iVar6 = fcn.0044e301(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, 0, arg_24h, arg_28h, arg_2ch);\n        if (iVar6 != 0) {\n            *arg_ch = 0;\n            return iVar6;\n        }\n        pcVar7 = fcn.00401771(arg_ch, 0x65);\n        if (pcVar7 == NULL) {\n            return 0;\n        }\n        *pcVar7 = (arg_20h ^ 1) * ' ' + 'P';\n        pcVar7[3] = '\\0';\n        return 0;\n    }\n    if ((uVar9 < 1) && (uVar9 < 0)) {\n        *arg_ch = 0x2d;\n        arg_ch = arg_ch + 1;\n        uVar9 = arg_8h[1];\n    }\n    pcVar7 = arg_ch + 1;\n    var_10h = 0x3ff;\n    iVar2 = (arg_20h ^ 1) * 0x20 + 7;\n    if ((uVar9 & 0x7ff00000) == 0) {\n        *arg_ch = 0x30;\n        uVar9 = *arg_8h | arg_8h[1] & 0xfffff;\n        var_10h = uVar9;\n        if (uVar9 != 0) {\n            var_10h = 0x3fe;\n            goto code_r0x0044e021;\n        }\n    }\n    else {\n        *arg_ch = 0x31;\ncode_r0x0044e021:\n        uVar9 = 0;\n    }\n    pcVar11 = arg_ch + 2;\n    if (arg_1ch == 0) {\n        cVar1 = uVar9;\n    }\n    else {\n        if (*(arg_2ch + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        uVar9 = 0;\n        cVar1 = ***(*(arg_2ch + 0xc) + 0x88);\n    }\n    *pcVar7 = cVar1;\n    if (((arg_8h[1] & 0xfffff) != 0) || (uVar9 <= *arg_8h && *arg_8h != uVar9)) {\n        uVar5 = 0x30;\n        var_18h = 0xf0000;\n        do {\n            if (arg_1ch < 1) {\n                cVar1 = fcn.0044e945(arg_8h, uVar9, var_18h, uVar5, arg_28h);\n                pcVar12 = pcVar11;\n                if (cVar1 != '\\0') {\n                    while( true ) {\n                        pcVar8 = pcVar12 + -1;\n                        cVar1 = *pcVar8;\n                        if ((cVar1 != 'f') && (cVar1 != 'F')) break;\n                        *pcVar8 = '0';\n                        pcVar12 = pcVar8;\n                    }\n                    if (pcVar8 == pcVar7) {\n                        pcVar12[-2] = pcVar12[-2] + '\\x01';\n                    }\n                    else {\n                        if (cVar1 == '9') {\n                            cVar1 = iVar2 + ':';\n                        }\n                        else {\n                            cVar1 = cVar1 + '\\x01';\n                        }\n                        *pcVar8 = cVar1;\n                    }\n                }\n                break;\n            }\n            iVar3 = fcn.0040174e();\n            uVar4 = iVar3 + 0x30;\n            if (0x39 < uVar4) {\n                uVar4 = uVar4 + iVar2;\n            }\n            uVar9 = uVar9 >> 4 | var_18h << 0x1c;\n            *pcVar11 = uVar4;\n            pcVar11 = pcVar11 + 1;\n            var_18h = var_18h >> 4;\n            uVar5 = uVar5 - 4;\n            arg_1ch = arg_1ch + -1;\n        } while (-1 < uVar5);\n    }\n    if (0 < arg_1ch) {\n        fcn.0040248c(pcVar11, 0x30, arg_1ch);\n        pcVar11 = pcVar11 + arg_1ch;\n    }\n    if (*pcVar7 == '\\0') {\n        pcVar11 = pcVar7;\n    }\n    *pcVar11 = (arg_20h ^ 1) * ' ' + 'P';\n    uVar9 = fcn.0040174e();\n    pcVar7 = pcVar11 + 2;\n    uVar10 = (uVar9 & 0x7ff) - var_10h;\n    uVar9 = (uVar9 & 0x7ff) < var_10h;\n    iVar6 = -uVar9;\n    if (uVar9 == 0) {\n        cVar1 = '+';\n    }\n    else {\n        bVar13 = uVar10 != 0;\n        uVar10 = -uVar10;\n        iVar6 = -(iVar6 + bVar13);\n        cVar1 = '-';\n    }\n    pcVar11[1] = cVar1;\n    *pcVar7 = '0';\n    pcVar12 = pcVar7;\n    if (iVar6 < 0) {\ncode_r0x0044e203:\n        if ((iVar6 < 0) || ((iVar6 < 1 && (uVar10 < 10)))) goto code_r0x0044e228;\n    }\n    else {\n        if ((iVar6 < 1) && (uVar10 < 1000)) {\ncode_r0x0044e1d2:\n            if ((iVar6 < 0) || ((iVar6 < 1 && (uVar10 < 100)))) goto code_r0x0044e203;\n        }\n        else {\n            cVar1 = fcn.00403f67(uVar10, iVar6, 1000, 0, 0);\n            iVar6 = 0;\n            pcVar12 = pcVar11 + 3;\n            *pcVar7 = cVar1 + '0';\n            uVar10 = extraout_ECX;\n            if (pcVar12 == pcVar7) goto code_r0x0044e1d2;\n        }\n        cVar1 = fcn.00403f67(uVar10, iVar6, 100, 0, 0);\n        iVar6 = 0;\n        *pcVar12 = cVar1 + '0';\n        pcVar12 = pcVar12 + 1;\n        uVar10 = extraout_ECX_00;\n        if (pcVar12 == pcVar7) goto code_r0x0044e203;\n    }\n    cVar1 = fcn.00403f67(uVar10, iVar6, 10, 0, 0);\n    *pcVar12 = cVar1 + '0';\n    pcVar12 = pcVar12 + 1;\n    uVar10 = extraout_ECX_01;\ncode_r0x0044e228:\n    *pcVar12 = uVar10 + '0';\n    pcVar12[1] = '\\0';\n    return 0;\n}\n",
        "token_count": 2097
    },
    "004533ee": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_954h\n\nvoid __cdecl\nfcn.004533ee(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t *arg_18h, char *arg_1ch, \n            int32_t arg_20h)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char cVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    char *pcVar11;\n    uint32_t *puVar12;\n    uint32_t uVar13;\n    bool bVar14;\n    uint var_954h;\n    uint var_950h;\n    uint32_t *var_784h;\n    uint32_t var_77ch;\n    char *var_778h;\n    uint32_t var_774h;\n    uint32_t *var_770h;\n    uint32_t var_76ch;\n    uint32_t *var_768h;\n    uint32_t *var_764h;\n    uint32_t *var_760h;\n    uint32_t *var_75ch;\n    uint32_t *var_758h;\n    uint32_t *var_754h;\n    uchar var_74dh;\n    uint32_t *var_74ch;\n    char *var_748h;\n    uint32_t *var_744h;\n    uint var_740h;\n    uint32_t *var_574h;\n    uint32_t var_570h;\n    uint var_56ch;\n    uint32_t *var_3a4h;\n    uint32_t var_3a0h;\n    uint32_t auStack928 [114];\n    uint32_t *var_1d4h;\n    uint32_t var_1d0h;\n    uint32_t var_1cch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    var_77ch = 0;\n    var_778h = arg_1ch;\n    var_784h = arg_18h;\n    uVar2 = arg_ch >> 0x14 & 0x7ff;\n    bVar14 = uVar2 != 0;\n    if (bVar14) {\n        uVar2 = 0;\n        iVar7 = 0x100000;\n    }\n    else {\n        iVar7 = 0;\n    }\n    var_1cch = (arg_ch & 0xfffff) + iVar7 + CARRY4(arg_8h, uVar2);\n    puVar12 = !bVar14 + (arg_ch >> 0x14 & 0x7ff);\n    var_74ch = puVar12;\n    fcn.00403909();\n    fcn.00404232();\n    var_76ch = fcn.0040185c();\n    if ((var_76ch == 0x7fffffff) || (var_76ch == 0x80000000)) {\n        var_76ch = 0;\n    }\n    var_1d0h = arg_8h + uVar2;\n    uVar2 = (var_1cch != 0) + 1;\n    var_1d4h = uVar2;\n    if (puVar12 < 0x433) {\n        if (puVar12 == 0x35) {\ncode_r0x0045396e:\n            var_77ch = 0;\n            uVar9 = (&var_1d0h)[var_1cch != 0];\n            iVar7 = 0x1f;\n            if (uVar9 != 0) {\n                for (; uVar9 >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                }\n            }\n            if (uVar9 == 0) {\n                iVar7 = 0;\n            }\n            else {\n                iVar7 = iVar7 + 1;\n            }\n            puVar10 = (iVar7 == 0x20) + uVar2;\n            if (puVar10 < 0x74) {\n                uVar9 = puVar10 - 1;\n                if (uVar9 != 0xffffffff) {\n                    uVar13 = puVar10 - 2;\n                    do {\n                        if (uVar9 < uVar2) {\n                            iVar7 = (&var_1d0h)[uVar9];\n                        }\n                        else {\n                            iVar7 = 0;\n                        }\n                        if (uVar13 < uVar2) {\n                            uVar2 = (&var_1d4h)[uVar9];\n                        }\n                        else {\n                            uVar2 = 0;\n                        }\n                        (&var_1d0h)[uVar9] = uVar2 >> 0x1f | iVar7 * 2;\n                        uVar9 = uVar9 - 1;\n                        uVar13 = uVar13 - 1;\n                        uVar2 = var_1d4h;\n                        puVar12 = var_74ch;\n                    } while (uVar9 != 0xffffffff);\n                }\n            }\n            else {\n                var_574h = NULL;\n                var_1d4h = NULL;\n                fcn.00457b41(&var_1d0h, 0x1cc, &var_570h, 0);\n                puVar10 = var_1d4h;\n            }\n            var_1d4h = puVar10;\n            uVar2 = 0x434U - puVar12 >> 5;\n            fcn.0040248c(&var_570h);\n            (&var_570h)[uVar2] = 1 << (0x434U - puVar12 & 0x1f);\n        }\n        else {\n            var_570h = 0;\n            var_56ch = 0x100000;\n            var_574h = 0x2;\n            if (var_1cch == 0) goto code_r0x0045396e;\n            iVar7 = 0;\n            do {\n                if (*(&var_570h + iVar7) != *(&var_1d0h + iVar7)) goto code_r0x0045396e;\n                iVar7 = iVar7 + 4;\n            } while (iVar7 != 8);\n            var_77ch = 0;\n            iVar7 = 0x1f;\n            if (var_1cch != 0) {\n                for (; var_1cch >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                }\n            }\n            if (var_1cch == 0) {\n                iVar7 = 0;\n            }\n            else {\n                iVar7 = iVar7 + 1;\n            }\n            puVar10 = (0x20U - iVar7 < 2) + uVar2;\n            if (puVar10 < 0x74) {\n                uVar9 = puVar10 - 1;\n                if (uVar9 != 0xffffffff) {\n                    uVar13 = puVar10 - 2;\n                    do {\n                        if (uVar9 < uVar2) {\n                            iVar7 = (&var_1d0h)[uVar9];\n                        }\n                        else {\n                            iVar7 = 0;\n                        }\n                        if (uVar13 < uVar2) {\n                            uVar2 = (&var_1d4h)[uVar9];\n                        }\n                        else {\n                            uVar2 = 0;\n                        }\n                        (&var_1d0h)[uVar9] = uVar2 >> 0x1e | iVar7 << 2;\n                        uVar9 = uVar9 - 1;\n                        uVar13 = uVar13 - 1;\n                        uVar2 = var_1d4h;\n                        puVar12 = var_74ch;\n                    } while (uVar9 != 0xffffffff);\n                }\n            }\n            else {\n                var_574h = NULL;\n                var_1d4h = NULL;\n                fcn.00457b41(&var_1d0h, 0x1cc, &var_570h, 0);\n                puVar10 = var_1d4h;\n            }\n            var_1d4h = puVar10;\n            uVar2 = 0x435U - puVar12 >> 5;\n            fcn.0040248c(&var_570h);\n            (&var_570h)[uVar2] = 1 << (0x435U - puVar12 & 0x1f);\n        }\n        var_574h = uVar2 + 1;\n        var_3a4h = var_574h;\n        fcn.00457b41(&var_3a0h, 0x1cc, &var_570h, var_574h * 4);\n    }\n    else {\n        var_570h = 0;\n        var_56ch = 0x100000;\n        var_574h = 0x2;\n        if (var_1cch == 0) {\ncode_r0x004536b1:\n            var_74ch = puVar12 - 0x432U & 0x1f;\n            var_768h = 0x20 - var_74ch;\n            puVar12 = puVar12 - 0x432U >> 5;\n            var_754h = puVar12;\n            iVar7 = fcn.00402de7();\n            var_760h = iVar7 + -1;\n            var_774h = ~var_760h;\n            uVar9 = (&var_1d4h)[uVar2];\n            iVar7 = 0x1f;\n            if (uVar9 != 0) {\n                for (; uVar9 >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                }\n            }\n            var_77ch = 0;\n            if (uVar9 == 0) {\n                iVar7 = 0;\n            }\n            else {\n                iVar7 = iVar7 + 1;\n            }\n            if ((uVar2 + puVar12 < 0x74) && (var_758h = (0x20 - iVar7 < var_74ch) + uVar2 + puVar12,  var_758h < 0x74))\n            {\n                var_764h = puVar12 + -1;\n                var_75ch = var_758h + -1;\n                puVar10 = var_74ch;\n                if (var_75ch != var_764h) {\n                    uVar9 = var_75ch - puVar12;\n                    puVar8 = &var_1d4h + uVar9;\n                    do {\n                        if (uVar9 < uVar2) {\n                            puVar10 = puVar8[1];\n                        }\n                        else {\n                            puVar10 = NULL;\n                        }\n                        if (uVar9 - 1 < uVar2) {\n                            uVar2 = *puVar8;\n                        }\n                        else {\n                            uVar2 = 0;\n                        }\n                        puVar8 = puVar8 + -1;\n                        (&var_1d0h)[var_75ch] =\n                             (uVar2 & var_774h) >> (var_768h & 0x1f) | (puVar10 & var_760h) << (var_74ch & 0x1f);\n                        var_75ch = var_75ch + -1;\n                        uVar9 = uVar9 - 1;\n                        uVar2 = var_1d4h;\n                        puVar12 = var_754h;\n                    } while (var_75ch != var_764h);\n                }\n                var_74ch = puVar10;\n                var_1d4h = var_758h;\n                if (puVar12 != NULL) {\n                    puVar5 = &var_1d0h;\n                    for (; puVar12 != NULL; puVar12 = puVar12 + -1) {\n                        *puVar5 = 0;\n                        puVar5 = puVar5 + 1;\n                    }\n                }\n            }\n            else {\n                var_1d4h = NULL;\n                var_574h = NULL;\n                fcn.00457b41(&var_1d0h, 0x1cc, &var_570h, 0);\n            }\n            var_570h = 2;\n        }\n        else {\n            iVar7 = 0;\n            do {\n                if (*(&var_570h + iVar7) != *(&var_1d0h + iVar7)) goto code_r0x004536b1;\n                iVar7 = iVar7 + 4;\n            } while (iVar7 != 8);\n            var_74ch = puVar12 - 0x431U & 0x1f;\n            var_760h = 0x20 - var_74ch;\n            uVar13 = puVar12 - 0x431U >> 5;\n            var_748h = uVar13;\n            iVar7 = fcn.00402de7();\n            var_774h = iVar7 - 1;\n            var_768h = ~var_774h;\n            uVar9 = (&var_1d4h)[uVar2];\n            iVar7 = 0x1f;\n            if (uVar9 != 0) {\n                for (; uVar9 >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                }\n            }\n            var_77ch = 0;\n            if (uVar9 == 0) {\n                iVar7 = 0;\n            }\n            else {\n                iVar7 = iVar7 + 1;\n            }\n            if ((uVar2 + uVar13 < 0x74) && (var_754h = (0x20 - iVar7 < var_74ch) + uVar2 + uVar13,  var_754h < 0x74)) {\n                var_758h = uVar13 - 1;\n                var_75ch = var_754h + -1;\n                if (var_75ch != var_758h) {\n                    uVar9 = var_75ch - uVar13;\n                    var_764h = &var_1d4h + uVar9;\n                    do {\n                        if (uVar9 < uVar2) {\n                            uVar13 = var_764h[1];\n                        }\n                        else {\n                            uVar13 = 0;\n                        }\n                        if (uVar9 - 1 < uVar2) {\n                            uVar2 = *var_764h;\n                        }\n                        else {\n                            uVar2 = 0;\n                        }\n                        var_764h = var_764h + -1;\n                        (&var_1d0h)[var_75ch] =\n                             (uVar13 & var_774h) << (var_74ch & 0x1f) | (uVar2 & var_768h) >> (var_760h & 0x1f);\n                        var_75ch = var_75ch + -1;\n                        uVar9 = uVar9 - 1;\n                        uVar2 = var_1d4h;\n                        uVar13 = var_748h;\n                    } while (var_75ch != var_758h);\n                }\n                var_1d4h = var_754h;\n                if (uVar13 != 0) {\n                    puVar5 = &var_1d0h;\n                    for (; uVar13 != 0; uVar13 = uVar13 - 1) {\n                        *puVar5 = 0;\n                        puVar5 = puVar5 + 1;\n                    }\n                }\n            }\n            else {\n                var_1d4h = NULL;\n                var_574h = NULL;\n                fcn.00457b41(&var_1d0h, 0x1cc, &var_570h, 0);\n            }\n            var_570h = 4;\n        }\n        var_3a4h = 0x1;\n        var_56ch = 0;\n        var_574h = 0x1;\n        fcn.00457b41(&var_3a0h, 0x1cc, &var_570h, 4);\n    }\n    var_774h = 10;\n    if (var_76ch < 0) {\n        var_77ch = -var_76ch % 10;\n        for (var_760h = -var_76ch / 10; var_760h != NULL; var_760h = var_760h - var_764h) {\n            var_764h = var_760h;\n            if (0x26 < var_760h) {\n                var_764h = 0x26;\n            }\n            uVar2 = *(var_764h * 4 + 0x4718a6);\n            uVar9 = *(var_764h * 4 + 0x4718a7);\n            var_574h = uVar2 + uVar9;\n            fcn.0040248c(&var_570h);\n            fcn.00403c38(&var_570h + uVar2, *(var_764h * 4 + 0x4718a4) * 4 + 0x470dd0, uVar9 << 2);\n            uVar2 = var_1d0h;\n            var_754h = var_574h;\n            if (var_574h < 0x2) {\n                if (var_570h == 0) {\ncode_r0x00453faa:\n                    var_954h = 0;\n                    var_1d4h = NULL;\n                    iVar7 = 0;\n                    puVar5 = &var_950h;\n                    goto code_r0x00454242;\n                }\n                if ((var_570h == 1) || (var_1d4h == NULL)) goto code_r0x00454253;\n                uVar9 = 0;\n                puVar12 = NULL;\n                do {\n                    uVar2 = (&var_1d0h)[puVar12];\n                    uVar13 = var_570h * uVar2;\n                    (&var_1d0h)[puVar12] = uVar13 + uVar9;\n                    uVar9 = (var_570h * uVar2 >> 0x20) + CARRY4(uVar13, uVar9);\n                    puVar12 = puVar12 + 1;\n                } while (puVar12 != var_1d4h);\ncode_r0x0045400a:\n                var_770h = var_1d4h;\n                if (uVar9 == 0) goto code_r0x00454253;\n                if (var_1d4h < 0x73) {\n                    (&var_1d0h)[var_1d4h] = uVar9;\n                    var_1d4h = var_1d4h + 1;\n                    goto code_r0x00454253;\n                }\ncode_r0x004542f1:\n                var_954h = 0;\n                var_1d4h = NULL;\n                fcn.00457b41(&var_1d0h, 0x1cc, &var_950h, 0);\n                bVar14 = false;\n            }\n            else {\n                if (var_1d4h < 0x2) {\n                    var_1d4h = var_574h;\n                    fcn.00457b41(&var_1d0h, 0x1cc, &var_570h, var_574h << 2);\n                    if (uVar2 != 0) {\n                        if ((uVar2 != 1) && (var_1d4h != NULL)) {\n                            uVar9 = 0;\n                            puVar12 = NULL;\n                            do {\n                                uVar13 = (&var_1d0h)[puVar12];\n                                uVar3 = uVar2 * uVar13;\n                                (&var_1d0h)[puVar12] = uVar3 + uVar9;\n                                uVar9 = (uVar2 * uVar13 >> 0x20) + CARRY4(uVar3, uVar9);\n                                puVar12 = puVar12 + 1;\n                            } while (puVar12 != var_1d4h);\n                            goto code_r0x0045400a;\n                        }\n                        goto code_r0x00454253;\n                    }\n                    goto code_r0x00453faa;\n                }\n                var_75ch = &var_570h;\n                if (var_574h < var_1d4h) {\n                    var_74ch = var_1d4h;\n                    var_768h = &var_1d0h;\n                }\n                else {\n                    var_75ch = &var_1d0h;\n                    var_74ch = var_574h;\n                    var_768h = &var_570h;\n                    var_754h = var_1d4h;\n                }\n                var_1d4h = NULL;\n                puVar12 = NULL;\n                var_744h = NULL;\n                if (var_754h != NULL) {\n                    do {\n                        if (var_75ch[puVar12] == 0) {\n                            if (puVar12 == var_1d4h) {\n                                (&var_740h)[puVar12] = 0;\n                                var_1d4h = puVar12 + 1;\n                                var_744h = var_1d4h;\n                            }\n                        }\n                        else {\n                            var_758h = NULL;\n                            var_748h = NULL;\n                            puVar10 = puVar12;\n                            if (var_74ch != NULL) {\n                                do {\n                                    if (puVar10 == 0x73) break;\n                                    if (puVar10 == var_1d4h) {\n                                        (&var_740h)[puVar10] = 0;\n                                        var_744h = var_758h + 1 + puVar12;\n                                    }\n                                    uVar2 = var_768h[var_758h];\n                                    uVar9 = var_75ch[puVar12];\n                                    uVar3 = uVar2 * uVar9;\n                                    uVar4 = uVar3 + var_748h;\n                                    puVar8 = &var_740h + puVar10;\n                                    uVar13 = *puVar8;\n                                    *puVar8 = *puVar8 + uVar4;\n                                    var_748h = (uVar2 * uVar9 >> 0x20) + CARRY4(uVar3, var_748h) + CARRY4(uVar13, uVar4)\n                                    ;\n                                    var_758h = var_758h + 1;\n                                    puVar10 = puVar10 + 1;\n                                    var_1d4h = var_744h;\n                                } while (var_758h != var_74ch);\n                                if (var_748h != NULL) {\n                                    puVar8 = &var_740h + puVar10;\n                                    do {\n                                        if (puVar10 == 0x73) break;\n                                        if (puVar10 == var_1d4h) {\n                                            *puVar8 = 0;\n                                            var_744h = puVar10 + 1;\n                                        }\n                                        puVar10 = puVar10 + 1;\n                                        uVar2 = *puVar8;\n                                        *puVar8 = *puVar8 + var_748h;\n                                        var_748h = CARRY4(uVar2, var_748h);\n                                        var_1d4h = var_744h;\n                                        puVar8 = puVar8 + 1;\n                                    } while (var_748h != NULL);\n                                }\n                            }\n                            if (puVar10 == 0x73) goto code_r0x004542f1;\n                        }\n                        puVar12 = puVar12 + 1;\n                    } while (puVar12 != var_754h);\n                }\n                iVar7 = var_1d4h << 2;\n                puVar5 = &var_740h;\ncode_r0x00454242:\n                fcn.00457b41(&var_1d0h, 0x1cc, puVar5, iVar7);\ncode_r0x00454253:\n                bVar14 = true;\n            }\n            if (!bVar14) goto code_r0x0045433f;\n        }\n        if (var_77ch != 0) {\n            var_77ch = *(var_77ch * 4 + 0x47195c);\n            if (var_77ch == 0) {\ncode_r0x0045433f:\n                var_1d4h = NULL;\n                puVar5 = &var_1d0h;\n                goto code_r0x0045434c;\n            }\n            if ((var_77ch != 1) && (var_1d4h != NULL)) {\n                uVar2 = 0;\n                puVar12 = NULL;\n                do {\n                    uVar9 = (&var_1d0h)[puVar12];\n                    uVar13 = var_77ch * uVar9;\n                    (&var_1d0h)[puVar12] = uVar13 + uVar2;\n                    uVar2 = (var_77ch * uVar9 >> 0x20) + CARRY4(uVar13, uVar2);\n                    puVar12 = puVar12 + 1;\n                } while (puVar12 != var_1d4h);\n                if (uVar2 != 0) {\n                    if (0x72 < var_1d4h) goto code_r0x0045433f;\n                    (&var_1d0h)[var_1d4h] = uVar2;\n                    var_1d4h = var_1d4h + 1;\n                }\n            }\n        }\n    }\n    else {\n        var_770h = var_76ch % 10;\n        for (var_768h = var_76ch / 10; var_768h != NULL; var_768h = var_768h - var_74ch) {\n            var_74ch = var_768h;\n            if (0x26 < var_768h) {\n                var_74ch = 0x26;\n            }\n            uVar2 = *(var_74ch * 4 + 0x4718a6);\n            uVar9 = *(var_74ch * 4 + 0x4718a7);\n            var_574h = uVar2 + uVar9;\n            fcn.0040248c(&var_570h);\n            fcn.00403c38(&var_570h + uVar2, *(var_74ch * 4 + 0x4718a4) * 4 + 0x470dd0, uVar9 << 2);\n            uVar2 = var_3a0h;\n            var_758h = var_574h;\n            if (var_574h < 0x2) {\n                if (var_570h == 0) {\n                    iVar7 = 0;\n                    var_744h = NULL;\n                    var_3a4h = NULL;\ncode_r0x00453df3:\n                    puVar5 = &var_740h;\n                    goto code_r0x00453dfa;\n                }\n                if ((var_570h == 1) || (var_3a4h == NULL)) goto code_r0x00453e0b;\n                uVar9 = 0;\n                puVar12 = NULL;\n                do {\n                    uVar2 = auStack928[puVar12 + -1];\n                    uVar13 = var_570h * uVar2;\n                    auStack928[puVar12 + -1] = uVar13 + uVar9;\n                    uVar9 = (var_570h * uVar2 >> 0x20) + CARRY4(uVar13, uVar9);\n                    puVar12 = puVar12 + 1;\n                } while (puVar12 != var_3a4h);\ncode_r0x00453c43:\n                var_760h = var_3a4h;\n                if (uVar9 == 0) goto code_r0x00453e0b;\n                if (var_3a4h < 0x73) {\n                    auStack928[var_3a4h + -1] = uVar9;\n                    var_3a4h = var_3a4h + 1;\n                    goto code_r0x00453e0b;\n                }\n                var_574h = NULL;\n                puVar5 = &var_570h;\ncode_r0x00453e6e:\n                var_3a4h = NULL;\n                fcn.00457b41(&var_3a0h, 0x1cc, puVar5, 0);\n                bVar14 = false;\n            }\n            else {\n                if (0x1 < var_3a4h) {\n                    var_75ch = &var_570h;\n                    if (var_574h < var_3a4h) {\n                        var_764h = var_3a4h;\n                        var_760h = &var_3a0h;\n                    }\n                    else {\n                        var_75ch = &var_3a0h;\n                        var_764h = var_574h;\n                        var_760h = &var_570h;\n                        var_758h = var_3a4h;\n                    }\n                    var_3a4h = NULL;\n                    puVar12 = NULL;\n                    var_744h = NULL;\n                    if (var_758h != NULL) {\n                        do {\n                            if (var_75ch[puVar12] == 0) {\n                                if (puVar12 == var_3a4h) {\n                                    (&var_740h)[puVar12] = 0;\n                                    var_3a4h = puVar12 + 1;\n                                    var_744h = var_3a4h;\n                                }\n                            }\n                            else {\n                                var_754h = NULL;\n                                var_748h = NULL;\n                                puVar10 = puVar12;\n                                if (var_764h != NULL) {\n                                    do {\n                                        if (puVar10 == 0x73) break;\n                                        if (puVar10 == var_3a4h) {\n                                            (&var_740h)[puVar10] = 0;\n                                            var_744h = var_754h + 1 + puVar12;\n                                        }\n                                        uVar2 = var_760h[var_754h];\n                                        uVar9 = var_75ch[puVar12];\n                                        uVar3 = uVar2 * uVar9;\n                                        uVar4 = uVar3 + var_748h;\n                                        puVar8 = &var_740h + puVar10;\n                                        uVar13 = *puVar8;\n                                        *puVar8 = *puVar8 + uVar4;\n                                        var_748h = (uVar2 * uVar9 >> 0x20) + CARRY4(uVar3, var_748h) +\n                                                   CARRY4(uVar13, uVar4);\n                                        var_754h = var_754h + 1;\n                                        puVar10 = puVar10 + 1;\n                                        var_3a4h = var_744h;\n                                    } while (var_754h != var_764h);\n                                    if (var_748h != NULL) {\n                                        puVar8 = &var_740h + puVar10;\n                                        do {\n                                            if (puVar10 == 0x73) break;\n                                            if (puVar10 == var_3a4h) {\n                                                *puVar8 = 0;\n                                                var_744h = puVar10 + 1;\n                                            }\n                                            puVar10 = puVar10 + 1;\n                                            uVar2 = *puVar8;\n                                            *puVar8 = *puVar8 + var_748h;\n                                            var_748h = CARRY4(uVar2, var_748h);\n                                            var_3a4h = var_744h;\n                                            puVar8 = puVar8 + 1;\n                                        } while (var_748h != NULL);\n                                    }\n                                }\n                                if (puVar10 == 0x73) {\n                                    var_954h = 0;\n                                    puVar5 = &var_950h;\n                                    goto code_r0x00453e6e;\n                                }\n                            }\n                            puVar12 = puVar12 + 1;\n                        } while (puVar12 != var_758h);\n                    }\n                    iVar7 = var_3a4h << 2;\n                    goto code_r0x00453df3;\n                }\n                var_3a4h = var_574h;\n                fcn.00457b41(&var_3a0h, 0x1cc, &var_570h, var_574h << 2);\n                if (uVar2 != 0) {\n                    if ((uVar2 != 1) && (var_3a4h != NULL)) {\n                        uVar9 = 0;\n                        puVar12 = NULL;\n                        do {\n                            uVar13 = auStack928[puVar12 + -1];\n                            uVar3 = uVar2 * uVar13;\n                            auStack928[puVar12 + -1] = uVar3 + uVar9;\n                            uVar9 = (uVar2 * uVar13 >> 0x20) + CARRY4(uVar3, uVar9);\n                            puVar12 = puVar12 + 1;\n                        } while (puVar12 != var_3a4h);\n                        goto code_r0x00453c43;\n                    }\n                    goto code_r0x00453e0b;\n                }\n                var_574h = NULL;\n                var_3a4h = NULL;\n                iVar7 = 0;\n                puVar5 = &var_570h;\ncode_r0x00453dfa:\n                fcn.00457b41(&var_3a0h, 0x1cc, puVar5, iVar7);\ncode_r0x00453e0b:\n                bVar14 = true;\n            }\n            if (!bVar14) goto code_r0x00453e93;\n        }\n        if (var_770h != NULL) {\n            var_770h = *(var_770h * 4 + 0x47195c);\n            if (var_770h == NULL) {\ncode_r0x00453e93:\n                var_3a4h = NULL;\n                puVar5 = &var_3a0h;\ncode_r0x0045434c:\n                var_954h = 0;\n                fcn.00457b41(puVar5, 0x1cc, &var_950h, 0);\n            }\n            else if ((var_770h != 0x1) && (var_3a4h != NULL)) {\n                uVar2 = 0;\n                puVar12 = NULL;\n                do {\n                    uVar9 = auStack928[puVar12 + -1];\n                    uVar13 = ZEXT48(var_770h) * uVar9;\n                    auStack928[puVar12 + -1] = uVar13 + uVar2;\n                    uVar2 = (ZEXT48(var_770h) * uVar9 >> 0x20) + CARRY4(uVar13, uVar2);\n                    puVar12 = puVar12 + 1;\n                } while (puVar12 != var_3a4h);\n                if (uVar2 != 0) {\n                    if (0x72 < var_3a4h) goto code_r0x00453e93;\n                    auStack928[var_3a4h + -1] = uVar2;\n                    var_3a4h = var_3a4h + 1;\n                }\n            }\n        }\n    }\n    pcVar11 = var_778h;\n    var_748h = var_778h;\n    if (var_1d4h != NULL) {\n        uVar2 = 0;\n        puVar12 = NULL;\n        do {\n            uVar9 = (&var_1d0h)[puVar12];\n            uVar13 = uVar9 * 10;\n            (&var_1d0h)[puVar12] = uVar13 + uVar2;\n            uVar2 = (uVar9 * 10 >> 0x20) + CARRY4(uVar13, uVar2);\n            puVar12 = puVar12 + 1;\n        } while (puVar12 != var_1d4h);\n        if (uVar2 != 0) {\n            if (var_1d4h < 0x73) {\n                (&var_1d0h)[var_1d4h] = uVar2;\n                var_1d4h = var_1d4h + 1;\n            }\n            else {\n                var_954h = 0;\n                var_1d4h = NULL;\n                fcn.00457b41(&var_1d0h, 0x1cc, &var_950h, 0);\n            }\n        }\n    }\n    iVar7 = fcn.0040321f(&var_1d4h, &var_3a4h);\n    if (iVar7 == 10) {\n        var_76ch = var_76ch + 1;\n        var_748h = pcVar11 + 1;\n        *pcVar11 = '1';\n        if (var_3a4h != NULL) {\n            uVar2 = 0;\n            puVar12 = NULL;\n            do {\n                uVar9 = auStack928[puVar12 + -1];\n                uVar13 = uVar9 * 10;\n                auStack928[puVar12 + -1] = uVar13 + uVar2;\n                uVar2 = (uVar9 * 10 >> 0x20) + CARRY4(uVar13, uVar2);\n                puVar12 = puVar12 + 1;\n            } while (puVar12 != var_3a4h);\n            if (uVar2 != 0) {\n                if (var_3a4h < 0x73) {\n                    auStack928[var_3a4h + -1] = uVar2;\n                    var_3a4h = var_3a4h + 1;\n                }\n                else {\n                    var_954h = 0;\n                    var_3a4h = NULL;\n                    fcn.00457b41(&var_3a0h, 0x1cc, &var_950h, 0);\n                }\n            }\n        }\n    }\n    else {\n        if (iVar7 == 0) {\n            uVar2 = var_76ch - 1;\n            goto code_r0x004544ae;\n        }\n        var_748h = pcVar11 + 1;\n        *pcVar11 = iVar7 + '0';\n    }\n    pcVar11 = pcVar11 + 1;\n    uVar2 = var_76ch;\ncode_r0x004544ae:\n    *var_784h = uVar2;\n    if (((-1 < uVar2) && (arg_10h < 0x80000000)) && (arg_14h == 0)) {\n        arg_10h = arg_10h + uVar2;\n    }\n    uVar2 = arg_20h - 1U;\n    if (arg_10h <= arg_20h - 1U) {\n        uVar2 = arg_10h;\n    }\n    var_768h = var_778h + uVar2;\n    var_74dh = 0;\n    if (pcVar11 != var_768h) {\n        do {\n            pcVar1 = var_748h;\n            if (var_1d4h == NULL) break;\n            uVar2 = 0;\n            puVar12 = NULL;\n            do {\n                uVar9 = (&var_1d0h)[puVar12];\n                uVar13 = uVar9 * 1000000000;\n                (&var_1d0h)[puVar12] = uVar13 + uVar2;\n                uVar2 = (uVar9 * 1000000000 >> 0x20) + CARRY4(uVar13, uVar2);\n                puVar12 = puVar12 + 1;\n            } while (puVar12 != var_1d4h);\n            if (uVar2 != 0) {\n                if (var_1d4h < 0x73) {\n                    (&var_1d0h)[var_1d4h] = uVar2;\n                    var_1d4h = var_1d4h + 1;\n                }\n                else {\n                    var_954h = 0;\n                    var_1d4h = NULL;\n                    fcn.00457b41(&var_1d0h, 0x1cc, &var_950h, 0);\n                }\n            }\n            uVar2 = fcn.0040321f(&var_1d4h, &var_3a4h);\n            uVar13 = 8;\n            uVar9 = var_768h - pcVar1;\n            do {\n                cVar6 = uVar2 % var_774h + '0';\n                if (uVar13 < uVar9) {\n                    pcVar1[uVar13] = cVar6;\n                }\n                else if (cVar6 != '0') {\n                    var_74dh = 1;\n                }\n                uVar13 = uVar13 - 1;\n                uVar2 = uVar2 / var_774h;\n            } while (uVar13 != 0xffffffff);\n            if (9 < uVar9) {\n                uVar9 = 9;\n            }\n            pcVar11 = pcVar1 + uVar9;\n            var_748h = pcVar11;\n        } while (pcVar11 != var_768h);\n    }\n    *pcVar11 = '\\0';\n    fcn.0040241e(var_954h);\n    return;\n}\n",
        "token_count": 9360
    },
    "00401b2c": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401b2c(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.00402a68();\n    iVar3 = iVar4 + iVar3 * 2 + -2;\n    *(in_ECX + 0x30) = iVar3;\n    iVar4 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar1 = arg_8h % 10 + 0x30;\n        cVar2 = uVar1;\n        if (0x39 < uVar1) {\n            cVar2 = (arg_ch ^ 1) * ' ' + '\\a' + cVar2;\n        }\n        **(in_ECX + 0x30) = cVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar4 = *(in_ECX + 0x30);\n        arg_8h = arg_8h / 10;\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar4 >> 1;\n    *(in_ECX + 0x30) = iVar4 + 2;\n    return;\n}\n",
        "token_count": 392
    },
    "0040227a": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040227a(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.00402a68();\n    iVar3 = iVar4 + iVar3 * 2 + -2;\n    *(in_ECX + 0x30) = iVar3;\n    iVar4 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar1 = arg_8h % 10 + 0x30;\n        cVar2 = uVar1;\n        if (0x39 < uVar1) {\n            cVar2 = (arg_ch ^ 1) * ' ' + '\\a' + cVar2;\n        }\n        **(in_ECX + 0x30) = cVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar4 = *(in_ECX + 0x30);\n        arg_8h = arg_8h / 10;\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar4 >> 1;\n    *(in_ECX + 0x30) = iVar4 + 2;\n    return;\n}\n",
        "token_count": 391
    },
    "004025a9": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004025a9(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.00402a68();\n    iVar3 = iVar4 + iVar3 * 2 + -2;\n    *(in_ECX + 0x30) = iVar3;\n    iVar4 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar1 = arg_8h % 10 + 0x30;\n        cVar2 = uVar1;\n        if (0x39 < uVar1) {\n            cVar2 = (arg_ch ^ 1) * ' ' + '\\a' + cVar2;\n        }\n        **(in_ECX + 0x30) = cVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar4 = *(in_ECX + 0x30);\n        arg_8h = arg_8h / 10;\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar4 >> 1;\n    *(in_ECX + 0x30) = iVar4 + 2;\n    return;\n}\n",
        "token_count": 391
    },
    "004026e4": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004026e4(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.00402a68();\n    iVar3 = iVar4 + iVar3 * 2 + -2;\n    *(in_ECX + 0x30) = iVar3;\n    iVar4 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar1 = arg_8h % 10 + 0x30;\n        cVar2 = uVar1;\n        if (0x39 < uVar1) {\n            cVar2 = (arg_ch ^ 1) * ' ' + '\\a' + cVar2;\n        }\n        **(in_ECX + 0x30) = cVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar4 = *(in_ECX + 0x30);\n        arg_8h = arg_8h / 10;\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar4 >> 1;\n    *(in_ECX + 0x30) = iVar4 + 2;\n    return;\n}\n",
        "token_count": 391
    },
    "004030e9": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004030e9(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.00402a68();\n    iVar3 = iVar4 + iVar3 * 2 + -2;\n    *(in_ECX + 0x30) = iVar3;\n    iVar4 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar1 = arg_8h % 10 + 0x30;\n        cVar2 = uVar1;\n        if (0x39 < uVar1) {\n            cVar2 = (arg_ch ^ 1) * ' ' + '\\a' + cVar2;\n        }\n        **(in_ECX + 0x30) = cVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar4 = *(in_ECX + 0x30);\n        arg_8h = arg_8h / 10;\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar4 >> 1;\n    *(in_ECX + 0x30) = iVar4 + 2;\n    return;\n}\n",
        "token_count": 391
    },
    "00403512": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403512(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar4 = *(in_ECX + 0x440);\n    if (*(in_ECX + 0x440) == 0) {\n        iVar4 = in_ECX + 0x3c;\n    }\n    iVar3 = fcn.00402a68();\n    iVar3 = iVar4 + iVar3 * 2 + -2;\n    *(in_ECX + 0x30) = iVar3;\n    iVar4 = iVar3;\n    while ((0 < *(in_ECX + 0x24) || (arg_8h != 0))) {\n        *(in_ECX + 0x24) = *(in_ECX + 0x24) + -1;\n        uVar1 = arg_8h % 10 + 0x30;\n        cVar2 = uVar1;\n        if (0x39 < uVar1) {\n            cVar2 = (arg_ch ^ 1) * ' ' + '\\a' + cVar2;\n        }\n        **(in_ECX + 0x30) = cVar2;\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        iVar4 = *(in_ECX + 0x30);\n        arg_8h = arg_8h / 10;\n    }\n    *(in_ECX + 0x34) = iVar3 - iVar4 >> 1;\n    *(in_ECX + 0x30) = iVar4 + 2;\n    return;\n}\n",
        "token_count": 390
    },
    "00403a8a": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00403a8a(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, ulong *arg_18h, ulong *arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint32_t *puVar1;\n    ulong *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    puVar1 = arg_ch;\n    arg_8h[1] = 0;\n    uVar4 = 0xc000000d;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    if ((arg_10h & 0x10) != 0) {\n        uVar4 = 0xc000008f;\n        arg_8h[1] = arg_8h[1] | 1;\n    }\n    if ((arg_10h & 2) != 0) {\n        uVar4 = 0xc0000093;\n        arg_8h[1] = arg_8h[1] | 2;\n    }\n    if ((arg_10h & 1) != 0) {\n        uVar4 = 0xc0000091;\n        arg_8h[1] = arg_8h[1] | 4;\n    }\n    if ((arg_10h & 4) != 0) {\n        uVar4 = 0xc000008e;\n        arg_8h[1] = arg_8h[1] | 8;\n    }\n    if ((arg_10h & 8) != 0) {\n        uVar4 = 0xc0000090;\n        arg_8h[1] = arg_8h[1] | 0x10;\n    }\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch << 4) ^ arg_8h[2]) & 0x10;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch * 2) ^ arg_8h[2]) & 8;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 1) ^ arg_8h[2]) & 4;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 3) ^ arg_8h[2]) & 2;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 5) ^ arg_8h[2]) & 1;\n    uVar3 = fcn.00402199();\n    puVar2 = arg_1ch;\n    if ((uVar3 & 1) != 0) {\n        arg_8h[3] = arg_8h[3] | 0x10;\n    }\n    if ((uVar3 & 4) != 0) {\n        arg_8h[3] = arg_8h[3] | 8;\n    }\n    if ((uVar3 & 8) != 0) {\n        arg_8h[3] = arg_8h[3] | 4;\n    }\n    if ((uVar3 & 0x10) != 0) {\n        arg_8h[3] = arg_8h[3] | 2;\n    }\n    if ((uVar3 & 0x20) != 0) {\n        arg_8h[3] = arg_8h[3] | 1;\n    }\n    uVar3 = *puVar1 & 0xc00;\n    if (uVar3 == 0) {\n        *arg_8h = *arg_8h & 0xfffffffc;\n    }\n    else {\n        if (uVar3 == 0x400) {\n            uVar3 = *arg_8h & 0xfffffffd | 1;\n        }\n        else {\n            if (uVar3 != 0x800) {\n                if (uVar3 == 0xc00) {\n                    *arg_8h = *arg_8h | 3;\n                }\n                goto code_r0x0045e925;\n            }\n            uVar3 = *arg_8h & 0xfffffffe | 2;\n        }\n        *arg_8h = uVar3;\n    }\ncode_r0x0045e925:\n    uVar3 = *puVar1 & 0x300;\n    if (uVar3 == 0) {\n        uVar3 = *arg_8h & 0xffffffeb | 8;\ncode_r0x0045e95b:\n        *arg_8h = uVar3;\n    }\n    else {\n        if (uVar3 == 0x200) {\n            uVar3 = *arg_8h & 0xffffffe7 | 4;\n            goto code_r0x0045e95b;\n        }\n        if (uVar3 == 0x300) {\n            *arg_8h = *arg_8h & 0xffffffe3;\n        }\n    }\n    *arg_8h = *arg_8h ^ (arg_14h << 5 ^ *arg_8h) & 0x1ffe0;\n    arg_8h[8] = arg_8h[8] | 1;\n    if (arg_20h == 0) {\n        arg_8h[8] = arg_8h[8] & 0xffffffe3 | 2;\n        *(arg_8h + 4) = *arg_18h;\n        arg_8h[0x18] = arg_8h[0x18] | 1;\n        arg_8h[0x18] = arg_8h[0x18] & 0xffffffe3 | 2;\n        *(arg_8h + 0x14) = *arg_1ch;\n    }\n    else {\n        arg_8h[8] = arg_8h[8] & 0xffffffe1;\n        arg_8h[4] = *arg_18h;\n        arg_8h[0x18] = arg_8h[0x18] | 1;\n        arg_8h[0x18] = arg_8h[0x18] & 0xffffffe1;\n        arg_8h[0x14] = *arg_1ch;\n    }\n    fcn.0040153c();\n    (*_sym.imp.KERNEL32.dll_RaiseException)(uVar4, 0, 1, &arg_8h);\n    uVar3 = arg_8h[2];\n    if ((uVar3 & 0x10) != 0) {\n        *puVar1 = *puVar1 & 0xfffffffe;\n        uVar3 = arg_8h[2];\n    }\n    if ((uVar3 & 8) != 0) {\n        *puVar1 = *puVar1 & 0xfffffffb;\n        uVar3 = arg_8h[2];\n    }\n    if ((uVar3 & 4) != 0) {\n        *puVar1 = *puVar1 & 0xfffffff7;\n        uVar3 = arg_8h[2];\n    }\n    if ((uVar3 & 2) != 0) {\n        *puVar1 = *puVar1 & 0xffffffef;\n        uVar3 = arg_8h[2];\n    }\n    if ((uVar3 & 1) != 0) {\n        *puVar1 = *puVar1 & 0xffffffdf;\n    }\n    uVar3 = *arg_8h & 3;\n    if (uVar3 == 0) {\n        *puVar1 = *puVar1 & 0xfffff3ff;\n    }\n    else {\n        if (uVar3 == 1) {\n            uVar3 = *puVar1 & 0xfffff7ff | 0x400;\n        }\n        else {\n            if (uVar3 != 2) {\n                if (uVar3 == 3) {\n                    *puVar1 = *puVar1 | 0xc00;\n                }\n                goto code_r0x0045ea71;\n            }\n            uVar3 = *puVar1 & 0xfffffbff | 0x800;\n        }\n        *puVar1 = uVar3;\n    }\ncode_r0x0045ea71:\n    uVar3 = *arg_8h >> 2 & 7;\n    if (uVar3 == 0) {\n        uVar3 = *puVar1 & 0xfffff3ff | 0x300;\n    }\n    else {\n        if (uVar3 != 1) {\n            if (uVar3 == 2) {\n                *puVar1 = *puVar1 & 0xfffff3ff;\n            }\n            goto code_r0x0045eaa2;\n        }\n        uVar3 = *puVar1 & 0xfffff3ff | 0x200;\n    }\n    *puVar1 = uVar3;\ncode_r0x0045eaa2:\n    if (arg_20h == 0) {\n        *puVar2 = *(arg_8h + 0x14);\n    }\n    else {\n        *puVar2 = arg_8h[0x14];\n    }\n    return;\n}\n",
        "token_count": 2106
    },
    "0045b68b": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045b68b(uint32_t arg_8h)\n\n{\n    return (arg_8h & 8 | arg_8h >> 3 & 6) >> 1 | ((arg_8h & 2) << 2 | arg_8h & 4) * 2 | (arg_8h & 1) << 5;\n}\n",
        "token_count": 88
    },
    "0045b6d3": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045b6d3(uint32_t arg_8h)\n\n{\n    return (arg_8h & 8 | arg_8h >> 3 & 6) >> 1 | ((arg_8h & 2) << 2 | arg_8h & 4) * 2 | (arg_8h & 1) << 5;\n}\n",
        "token_count": 89
    },
    "0040100a": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040100a(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint arg_10h;\n    char *pcVar4;\n    int32_t iVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    iVar5 = param_1[9];\n    if (iVar5 < 0) {\n        if ((*(param_1 + 0x2d) == 'a') || (*(param_1 + 0x2d) == 'A')) {\n            iVar5 = 0xd;\n        }\n        else {\n            iVar5 = 6;\n        }\n        param_1[9] = iVar5;\n    }\n    else if ((iVar5 == 0) && ((*(param_1 + 0x2d) == 'g' || (iVar5 = 0,  *(param_1 + 0x2d) == 'G')))) {\n        param_1[9] = 1;\n        iVar5 = 1;\n    }\n    cVar2 = fcn.00404345(iVar5 + 0x15d, param_1[2]);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.00403d37();\n        iVar5 = iVar5 + -0x15d;\n        param_1[9] = iVar5;\n    }\n    else {\n        iVar5 = param_1[9];\n    }\n    puVar3 = param_1[0x110];\n    if (param_1[0x110] == NULL) {\n        puVar3 = param_1 + 0xf;\n    }\n    param_1[0xc] = puVar3;\n    param_1[4] = param_1[4] + 8;\n    var_14h = *(param_1[4] + -8);\n    var_10h = *(param_1[4] + -4);\n    var_4h = *(param_1 + 0x2d);\n    var_8h = fcn.00403d37();\n    var_ch = fcn.0040245a();\n    arg_10h = fcn.00403d37();\n    puVar3 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar3 = param_1[0x110];\n    }\n    fcn.00402e5f(&var_14h, puVar3, arg_10h, var_ch, var_8h, var_4h, iVar5, *param_1, param_1[1], 1, param_1[2]);\n    if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n        iVar5 = param_1[2];\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        fcn.00401b63(param_1[0xc], iVar5 + 0xc);\n    }\n    if (((*(param_1 + 0x2d) == 'g') || (*(param_1 + 0x2d) == 'G')) && ((param_1[7] >> 5 & 1) == 0)) {\n        iVar5 = param_1[2];\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        fcn.00403e36(param_1[0xc], iVar5 + 0xc);\n    }\n    pcVar4 = param_1[0xc];\n    cVar2 = *pcVar4;\n    if (cVar2 == '-') {\n        param_1[7] = param_1[7] | 0x40;\n        pcVar4 = pcVar4 + 1;\n        param_1[0xc] = pcVar4;\n        cVar2 = *pcVar4;\n    }\n    if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n        param_1[7] = param_1[7] & 0xfffffff7;\n        *(param_1 + 0x2d) = 0x73;\n    }\n    pcVar1 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    param_1[0xd] = pcVar4 - pcVar1;\n    return 1;\n}\n",
        "token_count": 1085
    },
    "0040130c": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040130c(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    cVar2 = fcn.0040372e();\n    if (cVar2 == '\\0') {\ncode_r0x00436ddf:\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.0040443f();\n        if (cVar2 != '\\0') {\n            iVar6 = param_1[9];\n            if (iVar6 < 0) {\n                if ((*(param_1 + 0x2d) == 'a') || (*(param_1 + 0x2d) == 'A')) {\n                    iVar6 = 0xd;\n                }\n                else {\n                    iVar6 = 6;\n                }\n                param_1[9] = iVar6;\n            }\n            else if ((iVar6 == 0) && ((*(param_1 + 0x2d) == 'g' || (iVar6 = 0,  *(param_1 + 0x2d) == 'G')))) {\n                param_1[9] = 1;\n                iVar6 = 1;\n            }\n            cVar2 = fcn.00404345(iVar6 + 0x15d, param_1[2]);\n            if (cVar2 == '\\0') {\n                iVar6 = fcn.00403d37();\n                param_1[9] = iVar6 + -0x15d;\n            }\n            puVar3 = param_1[0x110];\n            if (param_1[0x110] == NULL) {\n                puVar3 = param_1 + 0xf;\n            }\n            var_10h = 0;\n            var_ch = 0;\n            param_1[0xc] = puVar3;\n            cVar2 = fcn.00401357(&var_10h);\n            if (cVar2 == '\\0') goto code_r0x00436ddf;\n            cVar2 = *(param_1 + 0x2d);\n            var_4h = fcn.00403d37();\n            var_8h = fcn.0040245a();\n            uVar4 = fcn.00403d37();\n            puVar3 = param_1 + 0xf;\n            if (param_1[0x110] != NULL) {\n                puVar3 = param_1[0x110];\n            }\n            fcn.00402e5f(&var_10h, puVar3, uVar4, var_8h, var_4h, cVar2, param_1[9], *param_1, param_1[1], 1, param_1[2]\n                        );\n            if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n                iVar6 = param_1[2];\n                if (*(iVar6 + 0x14) == '\\0') {\n                    fcn.004024f0();\n                }\n                fcn.00401b63(param_1[0xc], iVar6 + 0xc);\n            }\n            if (((*(param_1 + 0x2d) == 'g') || (*(param_1 + 0x2d) == 'G')) && ((param_1[7] >> 5 & 1) == 0)) {\n                iVar6 = param_1[2];\n                if (*(iVar6 + 0x14) == '\\0') {\n                    fcn.004024f0();\n                }\n                fcn.00403e36(param_1[0xc], iVar6 + 0xc);\n            }\n            pcVar5 = param_1[0xc];\n            cVar2 = *pcVar5;\n            if (cVar2 == '-') {\n                param_1[7] = param_1[7] | 0x40;\n                pcVar5 = pcVar5 + 1;\n                param_1[0xc] = pcVar5;\n                cVar2 = *pcVar5;\n            }\n            if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n                param_1[7] = param_1[7] & 0xfffffff7;\n                *(param_1 + 0x2d) = 0x73;\n            }\n            pcVar1 = pcVar5 + 1;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            param_1[0xd] = pcVar5 - pcVar1;\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 1140
    },
    "00401398": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401398(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.00402ae5(0);\n    return;\n}\n",
        "token_count": 91
    },
    "0040167c": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040167c(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.0040429b(0);\n    return;\n}\n",
        "token_count": 92
    },
    "004016e0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004016e0(int32_t param_1)\n\n{\n    int16_t iVar1;\n    int32_t *arg_10h;\n    int32_t iVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint unaff_EBX;\n    int32_t iVar7;\n    ushort uVar8;\n    int32_t iVar9;\n    bool bVar10;\n    uint16_t uVar11;\n    uint uVar12;\n    uint var_28h;\n    int32_t *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    iVar7 = 0;\n    uVar11 = *(param_1 + 0x2e);\n    var_10h = 0x41;\n    if (uVar11 < 0x65) {\n        if (uVar11 == 100) {\ncode_r0x004344c2:\n            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x10;\ncode_r0x004344c6:\n            cVar4 = fcn.00401393(0);\n        }\n        else if (uVar11 < 0x59) {\n            if (uVar11 == 0x58) {\n                uVar12 = 1;\ncode_r0x00434469:\n                cVar4 = fcn.004010af(uVar12);\n            }\n            else {\n                if (uVar11 != 0x41) {\n                    if (uVar11 == 0x43) goto code_r0x00434482;\n                    if (uVar11 < 0x45) goto code_r0x0043474f;\n                    if (0x47 < uVar11) {\n                        if (uVar11 != 0x53) goto code_r0x0043474f;\n                        goto code_r0x00434451;\n                    }\n                }\ncode_r0x004344d0:\n                cVar4 = fcn.004018d9();\n            }\n        }\n        else if (uVar11 == 0x5a) {\n            cVar4 = fcn.00402243();\n        }\n        else {\n            if (uVar11 == 0x61) goto code_r0x004344d0;\n            if (uVar11 != 99) goto code_r0x0043474f;\ncode_r0x00434482:\n            cVar4 = fcn.00403689(0);\n        }\n    }\n    else if (uVar11 < 0x71) {\n        if (uVar11 == 0x70) {\n            cVar4 = fcn.00402d24();\n        }\n        else {\n            if (uVar11 < 0x68) goto code_r0x004344d0;\n            if (uVar11 == 0x69) goto code_r0x004344c2;\n            if (uVar11 == 0x6e) {\n                cVar4 = fcn.00403a4e();\n            }\n            else {\n                if (uVar11 != 0x6f) goto code_r0x0043474f;\n                cVar4 = fcn.0040167c();\n            }\n        }\n    }\n    else {\n        if (uVar11 != 0x73) {\n            if (uVar11 != 0x75) {\n                if (uVar11 != 0x78) goto code_r0x0043474f;\n                uVar12 = 0;\n                goto code_r0x00434469;\n            }\n            goto code_r0x004344c6;\n        }\ncode_r0x00434451:\n        cVar4 = fcn.00401136();\n    }\n    if ((cVar4 == '\\0') || (*(param_1 + 0x2c) != '\\0')) goto code_r0x0043474f;\n    var_ch = 0;\n    var_24h = NULL;\n    var_8h._0_2_ = 0;\n    var_14h = NULL;\n    if ((*(param_1 + 0x1c) >> 4 & 1) != 0) {\n        if ((*(param_1 + 0x1c) >> 6 & 1) == 0) {\n            if ((*(param_1 + 0x1c) & 1) == 0) {\n                if ((*(param_1 + 0x1c) >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    var_24h = 0x1;\n                    var_14h = 0x1;\n                }\n                goto code_r0x0043455f;\n            }\n            uVar11 = 0x2b;\n        }\n        else {\n            uVar11 = 0x2d;\n        }\n        var_ch = uVar11;\n        var_14h = 0x1;\n        var_24h = 0x1;\n    }\ncode_r0x0043455f:\n    iVar1 = *(param_1 + 0x2e);\n    if (((iVar1 != 0x78) && (iVar1 != 0x58)) || (bVar10 = true,  (*(param_1 + 0x1c) >> 5 & 1) == 0)) {\n        bVar10 = false;\n    }\n    if ((iVar1 == 0x61) || (bVar3 = false,  iVar1 == var_10h)) {\n        bVar3 = true;\n    }\n    var_18h = 0x30;\n    if ((bVar10) || (bVar3)) {\n        *(&fcn.004016e0::var_ch + var_24h * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar8 = 0x78,  iVar1 == var_10h)) {\n            uVar8 = 0x58;\n        }\n        *(&fcn.004016e0::var_ch + var_24h * 2 + 2) = uVar8;\n        var_24h = var_24h + 2;\n        var_14h = var_24h;\n    }\n    iVar9 = (*(param_1 + 0x20) - *(param_1 + 0x34)) - var_24h;\n    if ((*(param_1 + 0x1c) & 0xc) == 0) {\n        arg_10h = *(param_1 + 8);\n        piVar6 = param_1 + 0x14;\n        var_10h = piVar6;\n        if (0 < iVar9) {\n            do {\n                var_18h = 0x20;\n                var_14h = piVar6;\n                var_10h = arg_10h;\n                fcn.00401af0(0x20, piVar6, arg_10h);\n                if (*piVar6 == -1) break;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar9);\n            param_1 = 0x4345f7;\n            var_24h = var_14h;\n        }\n    }\n    unaff_EBX = 0x43462e;\n    fcn.00402126(&fcn.004016e0::var_ch, var_24h, param_1 + 0x14, *(param_1 + 8));\n    if (((*(param_1 + 0x1c) >> 3 & 1) != 0) && ((*(param_1 + 0x1c) >> 2 & 1) == 0)) {\n        uVar12 = *(param_1 + 8);\n        var_10h = NULL;\n        if (0 < iVar9) {\n            var_24h = param_1 + 0x14;\n            do {\n                unaff_EBX = 0x434662;\n                fcn.00401af0(var_18h, var_24h, uVar12);\n                if (*var_24h == -1) break;\n                var_10h = var_10h + 1;\n            } while (var_10h < iVar9);\n        }\n    }\n    iVar7 = 0;\n    if ((*(param_1 + 0x38) == '\\0') && (iVar5 = *(param_1 + 0x34),  0 < iVar5)) {\n        iVar2 = *(param_1 + 8);\n        if (*(iVar2 + 0x14) == '\\0') {\n            unaff_EBX = 0x43469b;\n            fcn.004024f0();\n            iVar5 = *(param_1 + 0x34);\n        }\n        var_10h = *(param_1 + 0x30);\n        var_14h = NULL;\n        bVar10 = iVar5 == 0;\n        while (!bVar10) {\n            var_18h = var_18h & 0xffff0000;\n            iVar5 = fcn.0040123f(&fcn.004016e0::var_18h, var_10h, *(*(iVar2 + 0xc) + 4), *(param_1 + 8));\n            if (iVar5 < 1) {\n                *(param_1 + 0x14) = 0xffffffff;\n                break;\n            }\n            fcn.00401af0(var_18h, param_1 + 0x14, *(param_1 + 8));\n            var_10h = var_10h + iVar5;\n            var_14h = var_14h + 1;\n            bVar10 = var_14h == *(param_1 + 0x34);\n        }\n    }\n    else {\n        unaff_EBX = *(param_1 + 8);\n        fcn.00402126(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14, unaff_EBX);\n    }\n    if (((-1 < *(param_1 + 0x14)) && ((*(param_1 + 0x1c) >> 2 & 1) != 0)) &&\n       (uVar12 = *(param_1 + 8),  piVar6 = param_1 + 0x14,  0 < iVar9)) {\n        do {\n            fcn.00401af0(0x20, piVar6, uVar12);\n            if (*var_24h == -1) break;\n            iVar7 = iVar7 + 1;\n            piVar6 = var_24h;\n        } while (iVar7 < iVar9);\n    }\ncode_r0x0043474f:\n    fcn.0040241e(unaff_EBX);\n    return;\n}\n",
        "token_count": 2600
    },
    "004018c0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004018c0(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.00404403(0);\n    return;\n}\n",
        "token_count": 91
    },
    "004018d9": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004018d9(uint *param_1)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint *puVar4;\n    uint arg_10h;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    iVar7 = param_1[9];\n    if (iVar7 < 0) {\n        if ((*(param_1 + 0x2e) == 0x61) || (*(param_1 + 0x2e) == 0x41)) {\n            iVar7 = 0xd;\n        }\n        else {\n            iVar7 = 6;\n        }\n        param_1[9] = iVar7;\n    }\n    else if ((iVar7 == 0) && ((*(param_1 + 0x2e) == 0x67 || (iVar7 = 0,  *(param_1 + 0x2e) == 0x47)))) {\n        param_1[9] = 1;\n        iVar7 = 1;\n    }\n    cVar3 = fcn.00404345(iVar7 + 0x15d, param_1[2]);\n    if (cVar3 == '\\0') {\n        iVar7 = fcn.00403d37();\n        iVar7 = iVar7 + -0x15d;\n        param_1[9] = iVar7;\n    }\n    else {\n        iVar7 = param_1[9];\n    }\n    puVar4 = param_1[0x110];\n    if (param_1[0x110] == NULL) {\n        puVar4 = param_1 + 0xf;\n    }\n    param_1[0xc] = puVar4;\n    param_1[4] = param_1[4] + 8;\n    var_14h = *(param_1[4] + -8);\n    var_10h = *(param_1[4] + -4);\n    var_4h = *(param_1 + 0x2e);\n    var_8h = fcn.00403d37();\n    var_ch = fcn.0040245a();\n    arg_10h = fcn.00403d37();\n    puVar4 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar4 = param_1[0x110];\n    }\n    fcn.00402e5f(&var_14h, puVar4, arg_10h, var_ch, var_8h, var_4h, iVar7, *param_1, param_1[1], 1, param_1[2]);\n    if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n        iVar7 = param_1[2];\n        if (*(iVar7 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        fcn.00401b63(param_1[0xc], iVar7 + 0xc);\n    }\n    uVar2 = *(param_1 + 0x2e);\n    uVar5 = uVar2;\n    if (((uVar2 == 0x67) || (uVar2 == 0x47)) && (uVar5 = param_1[7] >> 5,  (uVar5 & 1) == 0)) {\n        iVar7 = param_1[2];\n        if (*(iVar7 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        uVar5 = fcn.00403e36(param_1[0xc], iVar7 + 0xc);\n    }\n    pcVar6 = param_1[0xc];\n    cVar3 = *pcVar6;\n    uVar5 = uVar5 & 0xffffff00;\n    if (cVar3 == '-') {\n        param_1[7] = param_1[7] | 0x40;\n        pcVar6 = pcVar6 + 1;\n        param_1[0xc] = pcVar6;\n        cVar3 = *pcVar6;\n    }\n    if (((cVar3 == 'i') || (cVar3 == 'I')) || ((cVar3 == 'n' || (cVar3 == 'N')))) {\n        param_1[7] = param_1[7] & 0xfffffff7;\n        uVar5 = 0;\n        *(param_1 + 0x2e) = 0x73;\n    }\n    pcVar1 = pcVar6 + 1;\n    do {\n        cVar3 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar3 != '\\0');\n    param_1[0xd] = pcVar6 - pcVar1;\n    return CONCAT31(uVar5 >> 8, 1);\n}\n",
        "token_count": 1166
    },
    "00404390": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00404390(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_10h;\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    int32_t *piVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    uchar uVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint16_t *puVar10;\n    int32_t iVar11;\n    uint unaff_EBX;\n    int32_t iVar12;\n    uint arg_8h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uchar var_ch [8];\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    cVar6 = *(in_ECX + 0x2d);\n    if (cVar6 < 'e') {\n        if (cVar6 == 'd') {\ncode_r0x00433bc8:\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) | 0x10;\ncode_r0x00433bcc:\n            cVar6 = fcn.00403ea9(0);\n        }\n        else if (cVar6 < 'Y') {\n            if (cVar6 == 'X') {\n                arg_8h = 1;\ncode_r0x00433b6f:\n                cVar6 = fcn.00401055(arg_8h);\n            }\n            else {\n                if (cVar6 != 'A') {\n                    if (cVar6 == 'C') goto code_r0x00433b88;\n                    if (cVar6 < 'E') goto code_r0x00433e92;\n                    if ('G' < cVar6) {\n                        if (cVar6 != 'S') goto code_r0x00433e92;\n                        goto code_r0x00433b57;\n                    }\n                }\ncode_r0x00433bd6:\n                cVar6 = fcn.00403d4b();\n            }\n        }\n        else if (cVar6 == 'Z') {\n            cVar6 = fcn.00404480();\n        }\n        else {\n            if (cVar6 == 'a') goto code_r0x00433bd6;\n            if (cVar6 != 'c') goto code_r0x00433e92;\ncode_r0x00433b88:\n            cVar6 = fcn.004025ef(0);\n        }\n    }\n    else if (cVar6 < 'q') {\n        if (cVar6 == 'p') {\n            cVar6 = fcn.00401c71();\n        }\n        else {\n            if (cVar6 < 'h') goto code_r0x00433bd6;\n            if (cVar6 == 'i') goto code_r0x00433bc8;\n            if (cVar6 == 'n') {\n                cVar6 = fcn.00402b67();\n            }\n            else {\n                if (cVar6 != 'o') goto code_r0x00433e92;\n                cVar6 = fcn.00403e22();\n            }\n        }\n    }\n    else {\n        if (cVar6 != 's') {\n            if (cVar6 != 'u') {\n                if (cVar6 != 'x') goto code_r0x00433e92;\n                arg_8h = 0;\n                goto code_r0x00433b6f;\n            }\n            goto code_r0x00433bcc;\n        }\ncode_r0x00433b57:\n        cVar6 = fcn.00401276();\n    }\n    if (((cVar6 == '\\0') || (cVar6 = fcn.00401a8c(),  cVar6 != '\\0')) || (*(in_ECX + 0x2c) != '\\0'))\n    goto code_r0x00433e92;\n    iVar8 = 0;\n    var_10h = (var_10h >> 0x10 & 0xff00) << 0x10;\n    var_18h = 0;\n    if ((*(in_ECX + 0x1c) >> 4 & 1) != 0) {\n        var_10h._1_3_ = var_10h >> 8;\n        if ((*(in_ECX + 0x1c) >> 6 & 1) == 0) {\n            if ((*(in_ECX + 0x1c) & 1) == 0) {\n                if ((*(in_ECX + 0x1c) >> 1 & 1) != 0) {\n                    var_10h = CONCAT31(var_10h._1_3_, 0x20);\n                    iVar8 = 1;\n                    var_18h = 1;\n                }\n                goto code_r0x00433c6f;\n            }\n            var_10h = CONCAT31(var_10h._1_3_, 0x2b);\n        }\n        else {\n            var_10h = CONCAT31(var_10h._1_3_, 0x2d);\n        }\n        var_18h = 1;\n        iVar8 = 1;\n    }\ncode_r0x00433c6f:\n    cVar6 = *(in_ECX + 0x2d);\n    if (((cVar6 != 'x') && (cVar6 != 'X')) || (bVar4 = true,  (*(in_ECX + 0x1c) >> 5 & 1) == 0)) {\n        bVar4 = false;\n    }\n    if ((cVar6 == 'a') || (bVar5 = false,  cVar6 == 'A')) {\n        bVar5 = true;\n    }\n    if ((bVar4) || (bVar5)) {\n        var_ch[iVar8 + -4] = 0x30;\n        if ((cVar6 == 'X') || (cVar6 == 'A')) {\n            uVar7 = 0x58;\n        }\n        else {\n            uVar7 = 0x78;\n        }\n        var_ch[iVar8 + -3] = uVar7;\n        iVar8 = iVar8 + 2;\n        var_18h = iVar8;\n    }\n    iVar11 = (*(in_ECX + 0x20) - *(in_ECX + 0x34)) - iVar8;\n    if (((*(in_ECX + 0x1c) & 0xc) == 0) && (0 < iVar11)) {\n        iVar12 = *(in_ECX + 0x14);\n        iVar9 = 0;\n        do {\n            iVar8 = *(in_ECX + 0x448);\n            if (*(*(in_ECX + 0x448) + 8) == *(iVar8 + 4)) {\n                if (*(iVar8 + 0xc) == '\\0') {\n                    iVar12 = -1;\n                }\n                else {\n                    iVar12 = iVar12 + 1;\n                }\n                *(in_ECX + 0x14) = iVar12;\n            }\n            else {\n                *(in_ECX + 0x14) = iVar12 + 1;\n                *(iVar8 + 8) = *(iVar8 + 8) + 1;\n                ***(in_ECX + 0x448) = 0x20;\n                **(in_ECX + 0x448) = **(in_ECX + 0x448) + 1;\n                iVar12 = *(in_ECX + 0x14);\n            }\n            iVar8 = var_18h;\n        } while ((iVar12 != -1) && (iVar9 = iVar9 + 1,  iVar9 < iVar11));\n    }\n    arg_10h = in_ECX + 0x14;\n    ppiVar1 = in_ECX + 0x448;\n    fcn.00404485(&var_10h, iVar8, arg_10h);\n    if (((*(in_ECX + 0x1c) >> 3 & 1) != 0) && (((*(in_ECX + 0x1c) >> 2 & 1) == 0 && (var_10h = 0,  0 < iVar11)))) {\n        iVar8 = *arg_10h;\n        do {\n            var_14h = *ppiVar1;\n            if (var_14h[2] == var_14h[1]) {\n                if (*(var_14h + 3) == '\\0') {\n                    iVar8 = -1;\n                }\n                else {\n                    iVar8 = iVar8 + 1;\n                }\n                *arg_10h = iVar8;\n            }\n            else {\n                *arg_10h = iVar8 + 1;\n                var_14h[2] = var_14h[2] + 1;\n                ***ppiVar1 = 0x30;\n                **ppiVar1 = **ppiVar1 + 1;\n                iVar8 = *arg_10h;\n            }\n        } while ((iVar8 != -1) && (var_10h = var_10h + 1,  var_10h < iVar11));\n    }\n    iVar8 = 0;\n    if ((*(in_ECX + 0x38) == '\\0') || (*(in_ECX + 0x34) < 1)) {\n        fcn.00404485(*(in_ECX + 0x30), *(in_ECX + 0x34), arg_10h);\n    }\n    else {\n        puVar10 = *(in_ECX + 0x30);\n        var_10h = 0;\n        do {\n            uVar2 = *puVar10;\n            puVar10 = puVar10 + 1;\n            var_14h = NULL;\n            iVar12 = fcn.00402f72(&var_14h, var_ch, 6, uVar2, *(in_ECX + 8));\n            if ((iVar12 != 0) || (var_14h == NULL)) {\n                *arg_10h = -1;\n                break;\n            }\n            fcn.00404485(var_ch, var_14h, arg_10h);\n            var_10h = var_10h + 1;\n        } while (var_10h != *(in_ECX + 0x34));\n    }\n    iVar12 = *arg_10h;\n    if (((-1 < iVar12) && ((*(in_ECX + 0x1c) >> 2 & 1) != 0)) && (0 < iVar11)) {\n        do {\n            piVar3 = *ppiVar1;\n            if (piVar3[2] == piVar3[1]) {\n                if (*(piVar3 + 3) == '\\0') {\n                    iVar12 = -1;\n                }\n                else {\n                    iVar12 = iVar12 + 1;\n                }\n                *arg_10h = iVar12;\n            }\n            else {\n                *arg_10h = iVar12 + 1;\n                piVar3[2] = piVar3[2] + 1;\n                ***ppiVar1 = 0x20;\n                **ppiVar1 = **ppiVar1 + 1;\n                iVar12 = *arg_10h;\n            }\n        } while ((iVar12 != -1) && (iVar8 = iVar8 + 1,  iVar8 < iVar11));\n    }\ncode_r0x00433e92:\n    fcn.0040241e(unaff_EBX);\n    return;\n}\n",
        "token_count": 2655
    },
    "0040192e": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040192e(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_10h;\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    int32_t *piVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    uchar uVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint16_t *puVar10;\n    int32_t iVar11;\n    uint unaff_EBX;\n    int32_t iVar12;\n    uint arg_8h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uchar var_ch [8];\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    cVar6 = *(in_ECX + 0x2d);\n    if (cVar6 < 'e') {\n        if (cVar6 == 'd') {\ncode_r0x0043404c:\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) | 0x10;\ncode_r0x00434050:\n            cVar6 = fcn.00401cbc(0);\n        }\n        else if (cVar6 < 'Y') {\n            if (cVar6 == 'X') {\n                arg_8h = 1;\ncode_r0x00433ff3:\n                cVar6 = fcn.00402630(arg_8h);\n            }\n            else {\n                if (cVar6 != 'A') {\n                    if (cVar6 == 'C') goto code_r0x0043400c;\n                    if (cVar6 < 'E') goto code_r0x00434307;\n                    if ('G' < cVar6) {\n                        if (cVar6 != 'S') goto code_r0x00434307;\n                        goto code_r0x00433fdb;\n                    }\n                }\ncode_r0x0043405a:\n                cVar6 = fcn.0040100a();\n            }\n        }\n        else if (cVar6 == 'Z') {\n            cVar6 = fcn.00403f99();\n        }\n        else {\n            if (cVar6 == 'a') goto code_r0x0043405a;\n            if (cVar6 != 'c') goto code_r0x00434307;\ncode_r0x0043400c:\n            cVar6 = fcn.00402397(0);\n        }\n    }\n    else if (cVar6 < 'q') {\n        if (cVar6 == 'p') {\n            cVar6 = fcn.0040453e();\n        }\n        else {\n            if (cVar6 < 'h') goto code_r0x0043405a;\n            if (cVar6 == 'i') goto code_r0x0043404c;\n            if (cVar6 == 'n') {\n                cVar6 = fcn.004026d5();\n            }\n            else {\n                if (cVar6 != 'o') goto code_r0x00434307;\n                cVar6 = fcn.00402fb3();\n            }\n        }\n    }\n    else {\n        if (cVar6 != 's') {\n            if (cVar6 != 'u') {\n                if (cVar6 != 'x') goto code_r0x00434307;\n                arg_8h = 0;\n                goto code_r0x00433ff3;\n            }\n            goto code_r0x00434050;\n        }\ncode_r0x00433fdb:\n        cVar6 = fcn.00403544();\n    }\n    if ((cVar6 == '\\0') || (*(in_ECX + 0x2c) != '\\0')) goto code_r0x00434307;\n    iVar8 = 0;\n    var_10h = (var_10h >> 0x10 & 0xff00) << 0x10;\n    var_18h = 0;\n    if ((*(in_ECX + 0x1c) >> 4 & 1) != 0) {\n        var_10h._1_3_ = var_10h >> 8;\n        if ((*(in_ECX + 0x1c) >> 6 & 1) == 0) {\n            if ((*(in_ECX + 0x1c) & 1) == 0) {\n                if ((*(in_ECX + 0x1c) >> 1 & 1) != 0) {\n                    var_10h = CONCAT31(var_10h._1_3_, 0x20);\n                    iVar8 = 1;\n                    var_18h = 1;\n                }\n                goto code_r0x004340e4;\n            }\n            var_10h = CONCAT31(var_10h._1_3_, 0x2b);\n        }\n        else {\n            var_10h = CONCAT31(var_10h._1_3_, 0x2d);\n        }\n        var_18h = 1;\n        iVar8 = 1;\n    }\ncode_r0x004340e4:\n    cVar6 = *(in_ECX + 0x2d);\n    if (((cVar6 != 'x') && (cVar6 != 'X')) || (bVar4 = true,  (*(in_ECX + 0x1c) >> 5 & 1) == 0)) {\n        bVar4 = false;\n    }\n    if ((cVar6 == 'a') || (bVar5 = false,  cVar6 == 'A')) {\n        bVar5 = true;\n    }\n    if ((bVar4) || (bVar5)) {\n        var_ch[iVar8 + -4] = 0x30;\n        if ((cVar6 == 'X') || (cVar6 == 'A')) {\n            uVar7 = 0x58;\n        }\n        else {\n            uVar7 = 0x78;\n        }\n        var_ch[iVar8 + -3] = uVar7;\n        iVar8 = iVar8 + 2;\n        var_18h = iVar8;\n    }\n    iVar11 = (*(in_ECX + 0x20) - *(in_ECX + 0x34)) - iVar8;\n    if (((*(in_ECX + 0x1c) & 0xc) == 0) && (0 < iVar11)) {\n        iVar12 = *(in_ECX + 0x14);\n        iVar9 = 0;\n        do {\n            iVar8 = *(in_ECX + 0x448);\n            if (*(*(in_ECX + 0x448) + 8) == *(iVar8 + 4)) {\n                if (*(iVar8 + 0xc) == '\\0') {\n                    iVar12 = -1;\n                }\n                else {\n                    iVar12 = iVar12 + 1;\n                }\n                *(in_ECX + 0x14) = iVar12;\n            }\n            else {\n                *(in_ECX + 0x14) = iVar12 + 1;\n                *(iVar8 + 8) = *(iVar8 + 8) + 1;\n                ***(in_ECX + 0x448) = 0x20;\n                **(in_ECX + 0x448) = **(in_ECX + 0x448) + 1;\n                iVar12 = *(in_ECX + 0x14);\n            }\n            iVar8 = var_18h;\n        } while ((iVar12 != -1) && (iVar9 = iVar9 + 1,  iVar9 < iVar11));\n    }\n    arg_10h = in_ECX + 0x14;\n    ppiVar1 = in_ECX + 0x448;\n    fcn.00404485(&var_10h, iVar8, arg_10h);\n    if (((*(in_ECX + 0x1c) >> 3 & 1) != 0) && (((*(in_ECX + 0x1c) >> 2 & 1) == 0 && (var_10h = 0,  0 < iVar11)))) {\n        iVar8 = *arg_10h;\n        do {\n            var_14h = *ppiVar1;\n            if (var_14h[2] == var_14h[1]) {\n                if (*(var_14h + 3) == '\\0') {\n                    iVar8 = -1;\n                }\n                else {\n                    iVar8 = iVar8 + 1;\n                }\n                *arg_10h = iVar8;\n            }\n            else {\n                *arg_10h = iVar8 + 1;\n                var_14h[2] = var_14h[2] + 1;\n                ***ppiVar1 = 0x30;\n                **ppiVar1 = **ppiVar1 + 1;\n                iVar8 = *arg_10h;\n            }\n        } while ((iVar8 != -1) && (var_10h = var_10h + 1,  var_10h < iVar11));\n    }\n    iVar8 = 0;\n    if ((*(in_ECX + 0x38) == '\\0') || (*(in_ECX + 0x34) < 1)) {\n        fcn.00404485(*(in_ECX + 0x30), *(in_ECX + 0x34), arg_10h);\n    }\n    else {\n        puVar10 = *(in_ECX + 0x30);\n        var_10h = 0;\n        do {\n            uVar2 = *puVar10;\n            puVar10 = puVar10 + 1;\n            var_14h = NULL;\n            iVar12 = fcn.00402f72(&var_14h, var_ch, 6, uVar2, *(in_ECX + 8));\n            if ((iVar12 != 0) || (var_14h == NULL)) {\n                *arg_10h = -1;\n                break;\n            }\n            fcn.00404485(var_ch, var_14h, arg_10h);\n            var_10h = var_10h + 1;\n        } while (var_10h != *(in_ECX + 0x34));\n    }\n    iVar12 = *arg_10h;\n    if (((-1 < iVar12) && ((*(in_ECX + 0x1c) >> 2 & 1) != 0)) && (0 < iVar11)) {\n        do {\n            piVar3 = *ppiVar1;\n            if (piVar3[2] == piVar3[1]) {\n                if (*(piVar3 + 3) == '\\0') {\n                    iVar12 = -1;\n                }\n                else {\n                    iVar12 = iVar12 + 1;\n                }\n                *arg_10h = iVar12;\n            }\n            else {\n                *arg_10h = iVar12 + 1;\n                piVar3[2] = piVar3[2] + 1;\n                ***ppiVar1 = 0x20;\n                **ppiVar1 = **ppiVar1 + 1;\n                iVar12 = *arg_10h;\n            }\n        } while ((iVar12 != -1) && (iVar8 = iVar8 + 1,  iVar8 < iVar11));\n    }\ncode_r0x00434307:\n    fcn.0040241e(unaff_EBX);\n    return;\n}\n",
        "token_count": 2618
    },
    "00401ded": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00401ded(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    uint16_t uVar4;\n    int16_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    bool bVar8;\n    bool bVar9;\n    char cVar10;\n    uint32_t arg_ch;\n    int32_t iVar11;\n    int32_t arg_ch_00;\n    int32_t iVar12;\n    uint unaff_EBX;\n    ushort uVar13;\n    int32_t iVar14;\n    uint arg_8h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    uVar4 = *(param_1 + 0x2e);\n    var_10h = 0x41;\n    if (uVar4 < 0x65) {\n        if (uVar4 == 100) {\ncode_r0x00435bf1:\n            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x10;\ncode_r0x00435bf5:\n            cVar10 = fcn.004035f8(0);\n        }\n        else if (uVar4 < 0x59) {\n            if (uVar4 == 0x58) {\n                arg_8h = 1;\ncode_r0x00435b98:\n                cVar10 = fcn.00404340(arg_8h);\n            }\n            else {\n                if (uVar4 != 0x41) {\n                    if (uVar4 == 0x43) goto code_r0x00435bb1;\n                    if (uVar4 < 0x45) goto code_r0x00435f3d;\n                    if (0x47 < uVar4) {\n                        if (uVar4 != 0x53) goto code_r0x00435f3d;\n                        goto code_r0x00435b80;\n                    }\n                }\ncode_r0x00435bff:\n                cVar10 = fcn.0040385a();\n            }\n        }\n        else if (uVar4 == 0x5a) {\n            cVar10 = fcn.00401f4b();\n        }\n        else {\n            if (uVar4 == 0x61) goto code_r0x00435bff;\n            if (uVar4 != 99) goto code_r0x00435f3d;\ncode_r0x00435bb1:\n            cVar10 = fcn.0040442b(0);\n        }\n    }\n    else if (uVar4 < 0x71) {\n        if (uVar4 == 0x70) {\n            cVar10 = fcn.00401bf9();\n        }\n        else {\n            if (uVar4 < 0x68) goto code_r0x00435bff;\n            if (uVar4 == 0x69) goto code_r0x00435bf1;\n            if (uVar4 == 0x6e) {\n                cVar10 = fcn.00404386();\n            }\n            else {\n                if (uVar4 != 0x6f) goto code_r0x00435f3d;\n                cVar10 = fcn.004018c0();\n            }\n        }\n    }\n    else {\n        if (uVar4 != 0x73) {\n            if (uVar4 != 0x75) {\n                if (uVar4 != 0x78) goto code_r0x00435f3d;\n                arg_8h = 0;\n                goto code_r0x00435b98;\n            }\n            goto code_r0x00435bf5;\n        }\ncode_r0x00435b80:\n        cVar10 = fcn.00401532();\n    }\n    if ((cVar10 == '\\0') || (*(param_1 + 0x2c) != '\\0')) goto code_r0x00435f3d;\n    var_ch = 0;\n    arg_ch = 0;\n    var_8h._0_2_ = 0;\n    var_14h = 0;\n    if ((*(param_1 + 0x1c) >> 4 & 1) != 0) {\n        if ((*(param_1 + 0x1c) >> 6 & 1) == 0) {\n            if ((*(param_1 + 0x1c) & 1) == 0) {\n                if ((*(param_1 + 0x1c) >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                    var_14h = 1;\n                }\n                goto code_r0x00435c8e;\n            }\n            uVar4 = 0x2b;\n        }\n        else {\n            uVar4 = 0x2d;\n        }\n        var_ch = uVar4;\n        var_14h = 1;\n        arg_ch = 1;\n    }\ncode_r0x00435c8e:\n    iVar5 = *(param_1 + 0x2e);\n    if (((iVar5 != 0x78) && (iVar5 != 0x58)) || (bVar8 = true,  (*(param_1 + 0x1c) >> 5 & 1) == 0)) {\n        bVar8 = false;\n    }\n    if ((iVar5 == 0x61) || (bVar9 = false,  iVar5 == var_10h)) {\n        bVar9 = true;\n    }\n    if ((bVar8) || (bVar9)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar5 == 0x58) || (uVar13 = 0x78,  iVar5 == var_10h)) {\n            uVar13 = 0x58;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = uVar13;\n        arg_ch = arg_ch + 2;\n        var_14h = arg_ch;\n    }\n    iVar14 = (*(param_1 + 0x20) - *(param_1 + 0x34)) - arg_ch;\n    if (((*(param_1 + 0x1c) & 0xc) == 0) && (0 < iVar14)) {\n        iVar12 = *(param_1 + 0x14);\n        iVar11 = 0;\n        do {\n            if (*(*(param_1 + 0x448) + 8) == *(*(param_1 + 0x448) + 4)) {\n                if (*(*(param_1 + 0x448) + 0xc) == '\\0') {\n                    iVar12 = -1;\n                }\n                else {\n                    iVar12 = iVar12 + 1;\n                }\n                *(param_1 + 0x14) = iVar12;\n            }\n            else {\n                *(param_1 + 0x14) = iVar12 + 1;\n                piVar1 = *(param_1 + 0x448) + 8;\n                *piVar1 = *piVar1 + 1;\n                ***(param_1 + 0x448) = 0x20;\n                **(param_1 + 0x448) = **(param_1 + 0x448) + 2;\n                iVar12 = *(param_1 + 0x14);\n            }\n            arg_ch = var_14h;\n        } while ((iVar12 != -1) && (iVar11 = iVar11 + 1,  iVar11 < iVar14));\n    }\n    piVar1 = param_1 + 0x14;\n    fcn.00403657(&var_ch, arg_ch, piVar1);\n    if (((*(param_1 + 0x1c) >> 3 & 1) != 0) &&\n       ((piVar2 = param_1 + 0x14,  (*(param_1 + 0x1c) >> 2 & 1) == 0 && (var_14h = 0,  0 < iVar14)))) {\n        iVar12 = *piVar2;\n        do {\n            var_10h = *(param_1 + 0x448);\n            if (*(var_10h + 8) == *(var_10h + 4)) {\n                if (*(var_10h + 0xc) == '\\0') {\n                    iVar12 = -1;\n                }\n                else {\n                    iVar12 = iVar12 + 1;\n                }\n                *piVar2 = iVar12;\n            }\n            else {\n                *piVar2 = iVar12 + 1;\n                *(var_10h + 8) = *(var_10h + 8) + 1;\n                ***(param_1 + 0x448) = 0x30;\n                piVar6 = *(param_1 + 0x448);\n                *piVar6 = *piVar6 + 2;\n                iVar12 = *piVar2;\n            }\n        } while ((iVar12 != -1) && (var_14h = var_14h + 1,  var_14h < iVar14));\n    }\n    iVar12 = 0;\n    if ((*(param_1 + 0x38) == '\\0') && (iVar11 = *(param_1 + 0x34),  0 < iVar11)) {\n        iVar7 = *(param_1 + 8);\n        if (*(iVar7 + 0x14) == '\\0') {\n            fcn.004024f0();\n            iVar11 = *(param_1 + 0x34);\n        }\n        arg_ch_00 = *(param_1 + 0x30);\n        var_10h = 0;\n        if (iVar11 != 0) {\n            do {\n                var_14h = var_14h & 0xffff0000;\n                var_ch = fcn.0040123f(&var_14h, arg_ch_00, *(*(iVar7 + 0xc) + 4), *(param_1 + 8));\n                ppiVar3 = param_1 + 0x448;\n                if (var_ch < 1) {\n                    *(param_1 + 0x14) = 0xffffffff;\n                    break;\n                }\n                piVar2 = *ppiVar3;\n                if (piVar2[2] == piVar2[1]) {\n                    if (*(piVar2 + 3) == '\\0') {\n                        *(param_1 + 0x14) = 0xffffffff;\n                    }\n                    else {\n                        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                    }\n                }\n                else {\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                    piVar2[2] = piVar2[2] + 1;\n                    ***ppiVar3 = var_14h;\n                    **ppiVar3 = **ppiVar3 + 2;\n                }\n                arg_ch_00 = arg_ch_00 + var_ch;\n                var_10h = var_10h + 1;\n            } while (var_10h != *(param_1 + 0x34));\n        }\n    }\n    else {\n        fcn.00403657(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14);\n    }\n    iVar11 = *(param_1 + 0x14);\n    if (((-1 < iVar11) && ((*(param_1 + 0x1c) >> 2 & 1) != 0)) && (0 < iVar14)) {\n        do {\n            iVar7 = *(param_1 + 0x448);\n            if (*(iVar7 + 8) == *(iVar7 + 4)) {\n                if (*(iVar7 + 0xc) == '\\0') {\n                    iVar11 = -1;\n                }\n                else {\n                    iVar11 = iVar11 + 1;\n                }\n                *piVar1 = iVar11;\n            }\n            else {\n                *piVar1 = iVar11 + 1;\n                *(iVar7 + 8) = *(iVar7 + 8) + 1;\n                ***(param_1 + 0x448) = 0x20;\n                piVar2 = *(param_1 + 0x448);\n                *piVar2 = *piVar2 + 2;\n                iVar11 = *piVar1;\n            }\n        } while ((iVar11 != -1) && (iVar12 = iVar12 + 1,  iVar12 < iVar14));\n    }\ncode_r0x00435f3d:\n    fcn.0040241e(unaff_EBX);\n    return;\n}\n",
        "token_count": 2939
    },
    "00401b18": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401b18(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.0040228e(0);\n    return;\n}\n",
        "token_count": 92
    },
    "00401bcc": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.00401bcc(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_10h;\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    uchar uVar7;\n    int32_t in_ECX;\n    uint16_t *puVar8;\n    uint unaff_EBX;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint uVar11;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    iVar9 = 0;\n    cVar6 = *(in_ECX + 0x2d);\n    if (cVar6 < 'e') {\n        if (cVar6 == 'd') {\ncode_r0x00432af4:\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) | 0x10;\ncode_r0x00432af8:\n            cVar6 = fcn.00402d65(0);\n        }\n        else if (cVar6 < 'Y') {\n            if (cVar6 == 'X') {\n                uVar11 = 1;\ncode_r0x00432a9b:\n                cVar6 = fcn.00402c98(uVar11);\n            }\n            else {\n                if (cVar6 != 'A') {\n                    if (cVar6 == 'C') goto code_r0x00432ab4;\n                    if (cVar6 < 'E') goto code_r0x00432d6c;\n                    if ('G' < cVar6) {\n                        if (cVar6 != 'S') goto code_r0x00432d6c;\n                        goto code_r0x00432a83;\n                    }\n                }\ncode_r0x00432b02:\n                cVar6 = fcn.004033af();\n            }\n        }\n        else if (cVar6 == 'Z') {\n            cVar6 = fcn.004034e5();\n        }\n        else {\n            if (cVar6 == 'a') goto code_r0x00432b02;\n            if (cVar6 != 'c') goto code_r0x00432d6c;\ncode_r0x00432ab4:\n            cVar6 = fcn.004034e0(0);\n        }\n    }\n    else if (cVar6 < 'q') {\n        if (cVar6 == 'p') {\n            cVar6 = fcn.00401b9f();\n        }\n        else {\n            if (cVar6 < 'h') goto code_r0x00432b02;\n            if (cVar6 == 'i') goto code_r0x00432af4;\n            if (cVar6 == 'n') {\n                cVar6 = fcn.00401bdb();\n            }\n            else {\n                if (cVar6 != 'o') goto code_r0x00432d6c;\n                cVar6 = fcn.0040313e();\n            }\n        }\n    }\n    else {\n        if (cVar6 != 's') {\n            if (cVar6 != 'u') {\n                if (cVar6 != 'x') goto code_r0x00432d6c;\n                uVar11 = 0;\n                goto code_r0x00432a9b;\n            }\n            goto code_r0x00432af8;\n        }\ncode_r0x00432a83:\n        cVar6 = fcn.00402d1a();\n    }\n    if ((cVar6 == '\\0') || (*(in_ECX + 0x2c) != '\\0')) goto code_r0x00432d6c;\n    uVar2 = *(in_ECX + 0x1c);\n    var_ch = (var_ch >> 0x10 & 0xff00) << 0x10;\n    iVar10 = 0;\n    var_10h = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        var_ch._1_3_ = var_ch >> 8;\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = CONCAT31(var_ch._1_3_, 0x20);\n                    iVar10 = 1;\n                    var_10h = 1;\n                }\n                goto code_r0x00432b8c;\n            }\n            var_ch = CONCAT31(var_ch._1_3_, 0x2b);\n        }\n        else {\n            var_ch = CONCAT31(var_ch._1_3_, 0x2d);\n        }\n        var_10h = 1;\n        iVar10 = 1;\n    }\ncode_r0x00432b8c:\n    cVar6 = *(in_ECX + 0x2d);\n    if (((cVar6 != 'x') && (cVar6 != 'X')) || (bVar4 = true,  (uVar2 >> 5 & 1) == 0)) {\n        bVar4 = false;\n    }\n    if ((cVar6 == 'a') || (bVar5 = false,  cVar6 == 'A')) {\n        bVar5 = true;\n    }\n    if ((bVar4) || (bVar5)) {\n        *(&fcn.00401bcc::var_ch + iVar10) = 0x30;\n        if ((cVar6 == 'X') || (cVar6 == 'A')) {\n            uVar7 = 0x58;\n        }\n        else {\n            uVar7 = 0x78;\n        }\n        *(&fcn.00401bcc::var_ch + iVar10 + 1) = uVar7;\n        iVar10 = iVar10 + 2;\n        var_10h = iVar10;\n    }\n    iVar10 = (*(in_ECX + 0x20) - *(in_ECX + 0x34)) - iVar10;\n    if (((uVar2 & 0xc) == 0) && (uVar2 = *(in_ECX + 8),  0 < iVar10)) {\n        while( true ) {\n            var_10h = 0x20;\n            var_ch = uVar2;\n            cVar6 = fcn.00401965(0x20, uVar2);\n            if (cVar6 == '\\0') break;\n            iVar3 = *(in_ECX + 0x14);\n            *(in_ECX + 0x14) = iVar3 + 1;\n            if ((iVar3 == -2) || (iVar10 < 0x432c0e)) goto code_r0x00432c38;\n        }\n        *(in_ECX + 0x14) = 0xffffffff;\n    }\ncode_r0x00432c38:\n    iVar10 = var_10h;\n    arg_10h = in_ECX + 0x14;\n    var_1ch = var_10h;\n    unaff_EBX = 0x432c56;\n    fcn.00402db0(&fcn.00401bcc::var_ch, var_10h, arg_10h, *(in_ECX + 8));\n    if (((*(in_ECX + 0x1c) >> 3 & 1) != 0) && ((*(in_ECX + 0x1c) >> 2 & 1) == 0)) {\n        iVar3 = *(in_ECX + 8);\n        var_14h = 0;\n        if (0 < iVar10) {\n            while( true ) {\n                unaff_EBX = 0x432c86;\n                cVar6 = fcn.00401965(0x30, iVar3);\n                var_1ch = iVar3;\n                if (cVar6 == '\\0') break;\n                iVar10 = *arg_10h;\n                *arg_10h = iVar10 + 1;\n                if ((iVar10 == -2) || (var_14h = var_14h + 1,  iVar3 <= var_14h)) goto code_r0x00432caa;\n            }\n            *arg_10h = -1;\n        }\n    }\ncode_r0x00432caa:\n    if ((*(in_ECX + 0x38) == '\\0') || (*(in_ECX + 0x34) < 1)) {\n        unaff_EBX = *(in_ECX + 8);\n        fcn.00402db0(*(in_ECX + 0x30), *(in_ECX + 0x34), arg_10h, unaff_EBX);\n    }\n    else {\n        puVar8 = *(in_ECX + 0x30);\n        var_14h = 0;\n        do {\n            uVar1 = *puVar8;\n            puVar8 = puVar8 + 1;\n            var_10h = 0;\n            iVar10 = fcn.00402f72(&fcn.00401bcc::var_10h, &fcn.00401bcc::var_ch, 6, uVar1, *(in_ECX + 8));\n            if ((iVar10 != 0) || (var_10h == 0)) {\n                *arg_10h = -1;\n                break;\n            }\n            fcn.00402db0(&fcn.00401bcc::var_ch, var_10h, arg_10h, *(in_ECX + 8));\n            var_14h = var_14h + 1;\n        } while (var_14h != *(in_ECX + 0x34));\n    }\n    if (((-1 < *arg_10h) && ((*(in_ECX + 0x1c) >> 2 & 1) != 0)) && (uVar11 = *(in_ECX + 8),  0 < var_1ch)) {\n        while (cVar6 = fcn.00401965(0x20, uVar11),  cVar6 != '\\0') {\n            iVar10 = *arg_10h;\n            *arg_10h = iVar10 + 1;\n            if ((iVar10 == -2) || (iVar9 = iVar9 + 1,  var_1ch <= iVar9)) goto code_r0x00432d6c;\n        }\n        *arg_10h = -1;\n    }\ncode_r0x00432d6c:\n    fcn.0040241e(unaff_EBX);\n    return;\n}\n",
        "token_count": 2558
    },
    "00401d70": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401d70(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.00403206(0);\n    return;\n}\n",
        "token_count": 91
    },
    "00401d93": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401d93(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.0040277a(0);\n    return;\n}\n",
        "token_count": 92
    },
    "00401f41": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401f41(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.00401d8e(0);\n    return;\n}\n",
        "token_count": 93
    },
    "00401f46": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.00401f46(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_10h;\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    uchar uVar7;\n    int32_t in_ECX;\n    uint16_t *puVar8;\n    uint unaff_EBX;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint uVar11;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    iVar9 = 0;\n    cVar6 = *(in_ECX + 0x2d);\n    if (cVar6 < 'e') {\n        if (cVar6 == 'd') {\ncode_r0x0043333a:\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) | 0x10;\ncode_r0x0043333e:\n            cVar6 = fcn.004028a1(0);\n        }\n        else if (cVar6 < 'Y') {\n            if (cVar6 == 'X') {\n                uVar11 = 1;\ncode_r0x004332e1:\n                cVar6 = fcn.00403af3(uVar11);\n            }\n            else {\n                if (cVar6 != 'A') {\n                    if (cVar6 == 'C') goto code_r0x004332fa;\n                    if (cVar6 < 'E') goto code_r0x004335b2;\n                    if ('G' < cVar6) {\n                        if (cVar6 != 'S') goto code_r0x004335b2;\n                        goto code_r0x004332c9;\n                    }\n                }\ncode_r0x00433348:\n                cVar6 = fcn.00402991();\n            }\n        }\n        else if (cVar6 == 'Z') {\n            cVar6 = fcn.00401843();\n        }\n        else {\n            if (cVar6 == 'a') goto code_r0x00433348;\n            if (cVar6 != 'c') goto code_r0x004335b2;\ncode_r0x004332fa:\n            cVar6 = fcn.00401992(0);\n        }\n    }\n    else if (cVar6 < 'q') {\n        if (cVar6 == 'p') {\n            cVar6 = fcn.004010e1();\n        }\n        else {\n            if (cVar6 < 'h') goto code_r0x00433348;\n            if (cVar6 == 'i') goto code_r0x0043333a;\n            if (cVar6 == 'n') {\n                cVar6 = fcn.0040303f();\n            }\n            else {\n                if (cVar6 != 'o') goto code_r0x004335b2;\n                cVar6 = fcn.00401d70();\n            }\n        }\n    }\n    else {\n        if (cVar6 != 's') {\n            if (cVar6 != 'u') {\n                if (cVar6 != 'x') goto code_r0x004335b2;\n                uVar11 = 0;\n                goto code_r0x004332e1;\n            }\n            goto code_r0x0043333e;\n        }\ncode_r0x004332c9:\n        cVar6 = fcn.00401a82();\n    }\n    if ((cVar6 == '\\0') || (*(in_ECX + 0x2c) != '\\0')) goto code_r0x004335b2;\n    uVar2 = *(in_ECX + 0x1c);\n    var_ch = (var_ch >> 0x10 & 0xff00) << 0x10;\n    iVar10 = 0;\n    var_10h = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        var_ch._1_3_ = var_ch >> 8;\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = CONCAT31(var_ch._1_3_, 0x20);\n                    iVar10 = 1;\n                    var_10h = 1;\n                }\n                goto code_r0x004333d2;\n            }\n            var_ch = CONCAT31(var_ch._1_3_, 0x2b);\n        }\n        else {\n            var_ch = CONCAT31(var_ch._1_3_, 0x2d);\n        }\n        var_10h = 1;\n        iVar10 = 1;\n    }\ncode_r0x004333d2:\n    cVar6 = *(in_ECX + 0x2d);\n    if (((cVar6 != 'x') && (cVar6 != 'X')) || (bVar4 = true,  (uVar2 >> 5 & 1) == 0)) {\n        bVar4 = false;\n    }\n    if ((cVar6 == 'a') || (bVar5 = false,  cVar6 == 'A')) {\n        bVar5 = true;\n    }\n    if ((bVar4) || (bVar5)) {\n        *(&fcn.00401f46::var_ch + iVar10) = 0x30;\n        if ((cVar6 == 'X') || (cVar6 == 'A')) {\n            uVar7 = 0x58;\n        }\n        else {\n            uVar7 = 0x78;\n        }\n        *(&fcn.00401f46::var_ch + iVar10 + 1) = uVar7;\n        iVar10 = iVar10 + 2;\n        var_10h = iVar10;\n    }\n    iVar10 = (*(in_ECX + 0x20) - *(in_ECX + 0x34)) - iVar10;\n    if (((uVar2 & 0xc) == 0) && (uVar2 = *(in_ECX + 8),  0 < iVar10)) {\n        while( true ) {\n            var_10h = 0x20;\n            var_ch = uVar2;\n            cVar6 = fcn.00401965(0x20, uVar2);\n            if (cVar6 == '\\0') break;\n            iVar3 = *(in_ECX + 0x14);\n            *(in_ECX + 0x14) = iVar3 + 1;\n            if ((iVar3 == -2) || (iVar10 < 0x433454)) goto code_r0x0043347e;\n        }\n        *(in_ECX + 0x14) = 0xffffffff;\n    }\ncode_r0x0043347e:\n    iVar10 = var_10h;\n    arg_10h = in_ECX + 0x14;\n    var_1ch = var_10h;\n    unaff_EBX = 0x43349c;\n    fcn.00402db0(&fcn.00401f46::var_ch, var_10h, arg_10h, *(in_ECX + 8));\n    if (((*(in_ECX + 0x1c) >> 3 & 1) != 0) && ((*(in_ECX + 0x1c) >> 2 & 1) == 0)) {\n        iVar3 = *(in_ECX + 8);\n        var_14h = 0;\n        if (0 < iVar10) {\n            while( true ) {\n                unaff_EBX = 0x4334cc;\n                cVar6 = fcn.00401965(0x30, iVar3);\n                var_1ch = iVar3;\n                if (cVar6 == '\\0') break;\n                iVar10 = *arg_10h;\n                *arg_10h = iVar10 + 1;\n                if ((iVar10 == -2) || (var_14h = var_14h + 1,  iVar3 <= var_14h)) goto code_r0x004334f0;\n            }\n            *arg_10h = -1;\n        }\n    }\ncode_r0x004334f0:\n    if ((*(in_ECX + 0x38) == '\\0') || (*(in_ECX + 0x34) < 1)) {\n        unaff_EBX = *(in_ECX + 8);\n        fcn.00402db0(*(in_ECX + 0x30), *(in_ECX + 0x34), arg_10h, unaff_EBX);\n    }\n    else {\n        puVar8 = *(in_ECX + 0x30);\n        var_14h = 0;\n        do {\n            uVar1 = *puVar8;\n            puVar8 = puVar8 + 1;\n            var_10h = 0;\n            iVar10 = fcn.00402f72(&fcn.00401f46::var_10h, &fcn.00401f46::var_ch, 6, uVar1, *(in_ECX + 8));\n            if ((iVar10 != 0) || (var_10h == 0)) {\n                *arg_10h = -1;\n                break;\n            }\n            fcn.00402db0(&fcn.00401f46::var_ch, var_10h, arg_10h, *(in_ECX + 8));\n            var_14h = var_14h + 1;\n        } while (var_14h != *(in_ECX + 0x34));\n    }\n    if (((-1 < *arg_10h) && ((*(in_ECX + 0x1c) >> 2 & 1) != 0)) && (uVar11 = *(in_ECX + 8),  0 < var_1ch)) {\n        while (cVar6 = fcn.00401965(0x20, uVar11),  cVar6 != '\\0') {\n            iVar10 = *arg_10h;\n            *arg_10h = iVar10 + 1;\n            if ((iVar10 == -2) || (iVar9 = iVar9 + 1,  var_1ch <= iVar9)) goto code_r0x004335b2;\n        }\n        *arg_10h = -1;\n    }\ncode_r0x004335b2:\n    fcn.0040241e(unaff_EBX);\n    return;\n}\n",
        "token_count": 2545
    },
    "0040237e": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040237e(int32_t param_1)\n\n{\n    int16_t iVar1;\n    int32_t *arg_10h;\n    int32_t iVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint unaff_EBX;\n    int32_t iVar7;\n    ushort uVar8;\n    int32_t iVar9;\n    bool bVar10;\n    uint16_t uVar11;\n    uint uVar12;\n    uint var_28h;\n    int32_t *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    iVar7 = 0;\n    uVar11 = *(param_1 + 0x2e);\n    var_10h = 0x41;\n    if (uVar11 < 0x65) {\n        if (uVar11 == 100) {\ncode_r0x00434d51:\n            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x10;\ncode_r0x00434d55:\n            cVar4 = fcn.00401938(0);\n        }\n        else if (uVar11 < 0x59) {\n            if (uVar11 == 0x58) {\n                uVar12 = 1;\ncode_r0x00434cf8:\n                cVar4 = fcn.004021c6(uVar12);\n            }\n            else {\n                if (uVar11 != 0x41) {\n                    if (uVar11 == 0x43) goto code_r0x00434d11;\n                    if (uVar11 < 0x45) goto code_r0x00434fde;\n                    if (0x47 < uVar11) {\n                        if (uVar11 != 0x53) goto code_r0x00434fde;\n                        goto code_r0x00434ce0;\n                    }\n                }\ncode_r0x00434d5f:\n                cVar4 = fcn.0040459d();\n            }\n        }\n        else if (uVar11 == 0x5a) {\n            cVar4 = fcn.004041a6();\n        }\n        else {\n            if (uVar11 == 0x61) goto code_r0x00434d5f;\n            if (uVar11 != 99) goto code_r0x00434fde;\ncode_r0x00434d11:\n            cVar4 = fcn.0040101e(0);\n        }\n    }\n    else if (uVar11 < 0x71) {\n        if (uVar11 == 0x70) {\n            cVar4 = fcn.00404502();\n        }\n        else {\n            if (uVar11 < 0x68) goto code_r0x00434d5f;\n            if (uVar11 == 0x69) goto code_r0x00434d51;\n            if (uVar11 == 0x6e) {\n                cVar4 = fcn.004019ec();\n            }\n            else {\n                if (uVar11 != 0x6f) goto code_r0x00434fde;\n                cVar4 = fcn.00401f41();\n            }\n        }\n    }\n    else {\n        if (uVar11 != 0x73) {\n            if (uVar11 != 0x75) {\n                if (uVar11 != 0x78) goto code_r0x00434fde;\n                uVar12 = 0;\n                goto code_r0x00434cf8;\n            }\n            goto code_r0x00434d55;\n        }\ncode_r0x00434ce0:\n        cVar4 = fcn.00402239();\n    }\n    if ((cVar4 == '\\0') || (*(param_1 + 0x2c) != '\\0')) goto code_r0x00434fde;\n    var_ch = 0;\n    var_24h = NULL;\n    var_8h._0_2_ = 0;\n    var_14h = NULL;\n    if ((*(param_1 + 0x1c) >> 4 & 1) != 0) {\n        if ((*(param_1 + 0x1c) >> 6 & 1) == 0) {\n            if ((*(param_1 + 0x1c) & 1) == 0) {\n                if ((*(param_1 + 0x1c) >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    var_24h = 0x1;\n                    var_14h = 0x1;\n                }\n                goto code_r0x00434dee;\n            }\n            uVar11 = 0x2b;\n        }\n        else {\n            uVar11 = 0x2d;\n        }\n        var_ch = uVar11;\n        var_14h = 0x1;\n        var_24h = 0x1;\n    }\ncode_r0x00434dee:\n    iVar1 = *(param_1 + 0x2e);\n    if (((iVar1 != 0x78) && (iVar1 != 0x58)) || (bVar10 = true,  (*(param_1 + 0x1c) >> 5 & 1) == 0)) {\n        bVar10 = false;\n    }\n    if ((iVar1 == 0x61) || (bVar3 = false,  iVar1 == var_10h)) {\n        bVar3 = true;\n    }\n    var_18h = 0x30;\n    if ((bVar10) || (bVar3)) {\n        *(&fcn.0040237e::var_ch + var_24h * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar8 = 0x78,  iVar1 == var_10h)) {\n            uVar8 = 0x58;\n        }\n        *(&fcn.0040237e::var_ch + var_24h * 2 + 2) = uVar8;\n        var_24h = var_24h + 2;\n        var_14h = var_24h;\n    }\n    iVar9 = (*(param_1 + 0x20) - *(param_1 + 0x34)) - var_24h;\n    if ((*(param_1 + 0x1c) & 0xc) == 0) {\n        arg_10h = *(param_1 + 8);\n        piVar6 = param_1 + 0x14;\n        var_10h = piVar6;\n        if (0 < iVar9) {\n            do {\n                var_18h = 0x20;\n                var_14h = piVar6;\n                var_10h = arg_10h;\n                fcn.00401af0(0x20, piVar6, arg_10h);\n                if (*piVar6 == -1) break;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar9);\n            param_1 = 0x434e86;\n            var_24h = var_14h;\n        }\n    }\n    unaff_EBX = 0x434ebd;\n    fcn.00402126(&fcn.0040237e::var_ch, var_24h, param_1 + 0x14, *(param_1 + 8));\n    if (((*(param_1 + 0x1c) >> 3 & 1) != 0) && ((*(param_1 + 0x1c) >> 2 & 1) == 0)) {\n        uVar12 = *(param_1 + 8);\n        var_10h = NULL;\n        if (0 < iVar9) {\n            var_24h = param_1 + 0x14;\n            do {\n                unaff_EBX = 0x434ef1;\n                fcn.00401af0(var_18h, var_24h, uVar12);\n                if (*var_24h == -1) break;\n                var_10h = var_10h + 1;\n            } while (var_10h < iVar9);\n        }\n    }\n    iVar7 = 0;\n    if ((*(param_1 + 0x38) == '\\0') && (iVar5 = *(param_1 + 0x34),  0 < iVar5)) {\n        iVar2 = *(param_1 + 8);\n        if (*(iVar2 + 0x14) == '\\0') {\n            unaff_EBX = 0x434f2a;\n            fcn.004024f0();\n            iVar5 = *(param_1 + 0x34);\n        }\n        var_10h = *(param_1 + 0x30);\n        var_14h = NULL;\n        bVar10 = iVar5 == 0;\n        while (!bVar10) {\n            var_18h = var_18h & 0xffff0000;\n            iVar5 = fcn.0040123f(&fcn.0040237e::var_18h, var_10h, *(*(iVar2 + 0xc) + 4), *(param_1 + 8));\n            if (iVar5 < 1) {\n                *(param_1 + 0x14) = 0xffffffff;\n                break;\n            }\n            fcn.00401af0(var_18h, param_1 + 0x14, *(param_1 + 8));\n            var_10h = var_10h + iVar5;\n            var_14h = var_14h + 1;\n            bVar10 = var_14h == *(param_1 + 0x34);\n        }\n    }\n    else {\n        unaff_EBX = *(param_1 + 8);\n        fcn.00402126(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14, unaff_EBX);\n    }\n    if (((-1 < *(param_1 + 0x14)) && ((*(param_1 + 0x1c) >> 2 & 1) != 0)) &&\n       (uVar12 = *(param_1 + 8),  piVar6 = param_1 + 0x14,  0 < iVar9)) {\n        do {\n            fcn.00401af0(0x20, piVar6, uVar12);\n            if (*var_24h == -1) break;\n            iVar7 = iVar7 + 1;\n            piVar6 = var_24h;\n        } while (iVar7 < iVar9);\n    }\ncode_r0x00434fde:\n    fcn.0040241e(unaff_EBX);\n    return;\n}\n",
        "token_count": 2608
    },
    "00404313": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00404313(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_10h;\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    int32_t *piVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    uchar uVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint16_t *puVar10;\n    int32_t iVar11;\n    uint unaff_EBX;\n    int32_t iVar12;\n    uint arg_8h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uchar var_ch [8];\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    cVar6 = *(in_ECX + 0x2d);\n    if (cVar6 < 'e') {\n        if (cVar6 == 'd') {\ncode_r0x00433757:\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) | 0x10;\ncode_r0x0043375b:\n            cVar6 = fcn.00402775(0);\n        }\n        else if (cVar6 < 'Y') {\n            if (cVar6 == 'X') {\n                arg_8h = 1;\ncode_r0x004336fe:\n                cVar6 = fcn.00404066(arg_8h);\n            }\n            else {\n                if (cVar6 != 'A') {\n                    if (cVar6 == 'C') goto code_r0x00433717;\n                    if (cVar6 < 'E') goto code_r0x00433a12;\n                    if ('G' < cVar6) {\n                        if (cVar6 != 'S') goto code_r0x00433a12;\n                        goto code_r0x004336e6;\n                    }\n                }\ncode_r0x00433765:\n                cVar6 = fcn.00402a9a();\n            }\n        }\n        else if (cVar6 == 'Z') {\n            cVar6 = fcn.004036a7();\n        }\n        else {\n            if (cVar6 == 'a') goto code_r0x00433765;\n            if (cVar6 != 'c') goto code_r0x00433a12;\ncode_r0x00433717:\n            cVar6 = fcn.00402e23(0);\n        }\n    }\n    else if (cVar6 < 'q') {\n        if (cVar6 == 'p') {\n            cVar6 = fcn.00403021();\n        }\n        else {\n            if (cVar6 < 'h') goto code_r0x00433765;\n            if (cVar6 == 'i') goto code_r0x00433757;\n            if (cVar6 == 'n') {\n                cVar6 = fcn.004021c1();\n            }\n            else {\n                if (cVar6 != 'o') goto code_r0x00433a12;\n                cVar6 = fcn.00401398();\n            }\n        }\n    }\n    else {\n        if (cVar6 != 's') {\n            if (cVar6 != 'u') {\n                if (cVar6 != 'x') goto code_r0x00433a12;\n                arg_8h = 0;\n                goto code_r0x004336fe;\n            }\n            goto code_r0x0043375b;\n        }\ncode_r0x004336e6:\n        cVar6 = fcn.00402789();\n    }\n    if ((cVar6 == '\\0') || (*(in_ECX + 0x2c) != '\\0')) goto code_r0x00433a12;\n    iVar8 = 0;\n    var_10h = (var_10h >> 0x10 & 0xff00) << 0x10;\n    var_18h = 0;\n    if ((*(in_ECX + 0x1c) >> 4 & 1) != 0) {\n        var_10h._1_3_ = var_10h >> 8;\n        if ((*(in_ECX + 0x1c) >> 6 & 1) == 0) {\n            if ((*(in_ECX + 0x1c) & 1) == 0) {\n                if ((*(in_ECX + 0x1c) >> 1 & 1) != 0) {\n                    var_10h = CONCAT31(var_10h._1_3_, 0x20);\n                    iVar8 = 1;\n                    var_18h = 1;\n                }\n                goto code_r0x004337ef;\n            }\n            var_10h = CONCAT31(var_10h._1_3_, 0x2b);\n        }\n        else {\n            var_10h = CONCAT31(var_10h._1_3_, 0x2d);\n        }\n        var_18h = 1;\n        iVar8 = 1;\n    }\ncode_r0x004337ef:\n    cVar6 = *(in_ECX + 0x2d);\n    if (((cVar6 != 'x') && (cVar6 != 'X')) || (bVar4 = true,  (*(in_ECX + 0x1c) >> 5 & 1) == 0)) {\n        bVar4 = false;\n    }\n    if ((cVar6 == 'a') || (bVar5 = false,  cVar6 == 'A')) {\n        bVar5 = true;\n    }\n    if ((bVar4) || (bVar5)) {\n        var_ch[iVar8 + -4] = 0x30;\n        if ((cVar6 == 'X') || (cVar6 == 'A')) {\n            uVar7 = 0x58;\n        }\n        else {\n            uVar7 = 0x78;\n        }\n        var_ch[iVar8 + -3] = uVar7;\n        iVar8 = iVar8 + 2;\n        var_18h = iVar8;\n    }\n    iVar11 = (*(in_ECX + 0x20) - *(in_ECX + 0x34)) - iVar8;\n    if (((*(in_ECX + 0x1c) & 0xc) == 0) && (0 < iVar11)) {\n        iVar12 = *(in_ECX + 0x14);\n        iVar9 = 0;\n        do {\n            iVar8 = *(in_ECX + 0x448);\n            if (*(*(in_ECX + 0x448) + 8) == *(iVar8 + 4)) {\n                if (*(iVar8 + 0xc) == '\\0') {\n                    iVar12 = -1;\n                }\n                else {\n                    iVar12 = iVar12 + 1;\n                }\n                *(in_ECX + 0x14) = iVar12;\n            }\n            else {\n                *(in_ECX + 0x14) = iVar12 + 1;\n                *(iVar8 + 8) = *(iVar8 + 8) + 1;\n                ***(in_ECX + 0x448) = 0x20;\n                **(in_ECX + 0x448) = **(in_ECX + 0x448) + 1;\n                iVar12 = *(in_ECX + 0x14);\n            }\n            iVar8 = var_18h;\n        } while ((iVar12 != -1) && (iVar9 = iVar9 + 1,  iVar9 < iVar11));\n    }\n    arg_10h = in_ECX + 0x14;\n    ppiVar1 = in_ECX + 0x448;\n    fcn.00404485(&var_10h, iVar8, arg_10h);\n    if (((*(in_ECX + 0x1c) >> 3 & 1) != 0) && (((*(in_ECX + 0x1c) >> 2 & 1) == 0 && (var_10h = 0,  0 < iVar11)))) {\n        iVar8 = *arg_10h;\n        do {\n            var_14h = *ppiVar1;\n            if (var_14h[2] == var_14h[1]) {\n                if (*(var_14h + 3) == '\\0') {\n                    iVar8 = -1;\n                }\n                else {\n                    iVar8 = iVar8 + 1;\n                }\n                *arg_10h = iVar8;\n            }\n            else {\n                *arg_10h = iVar8 + 1;\n                var_14h[2] = var_14h[2] + 1;\n                ***ppiVar1 = 0x30;\n                **ppiVar1 = **ppiVar1 + 1;\n                iVar8 = *arg_10h;\n            }\n        } while ((iVar8 != -1) && (var_10h = var_10h + 1,  var_10h < iVar11));\n    }\n    iVar8 = 0;\n    if ((*(in_ECX + 0x38) == '\\0') || (*(in_ECX + 0x34) < 1)) {\n        fcn.00404485(*(in_ECX + 0x30), *(in_ECX + 0x34), arg_10h);\n    }\n    else {\n        puVar10 = *(in_ECX + 0x30);\n        var_10h = 0;\n        do {\n            uVar2 = *puVar10;\n            puVar10 = puVar10 + 1;\n            var_14h = NULL;\n            iVar12 = fcn.00402f72(&var_14h, var_ch, 6, uVar2, *(in_ECX + 8));\n            if ((iVar12 != 0) || (var_14h == NULL)) {\n                *arg_10h = -1;\n                break;\n            }\n            fcn.00404485(var_ch, var_14h, arg_10h);\n            var_10h = var_10h + 1;\n        } while (var_10h != *(in_ECX + 0x34));\n    }\n    iVar12 = *arg_10h;\n    if (((-1 < iVar12) && ((*(in_ECX + 0x1c) >> 2 & 1) != 0)) && (0 < iVar11)) {\n        do {\n            piVar3 = *ppiVar1;\n            if (piVar3[2] == piVar3[1]) {\n                if (*(piVar3 + 3) == '\\0') {\n                    iVar12 = -1;\n                }\n                else {\n                    iVar12 = iVar12 + 1;\n                }\n                *arg_10h = iVar12;\n            }\n            else {\n                *arg_10h = iVar12 + 1;\n                piVar3[2] = piVar3[2] + 1;\n                ***ppiVar1 = 0x20;\n                **ppiVar1 = **ppiVar1 + 1;\n                iVar12 = *arg_10h;\n            }\n        } while ((iVar12 != -1) && (iVar8 = iVar8 + 1,  iVar8 < iVar11));\n    }\ncode_r0x00433a12:\n    fcn.0040241e(unaff_EBX);\n    return;\n}\n",
        "token_count": 2617
    },
    "00402707": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00402707(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    uint16_t uVar4;\n    int16_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    bool bVar8;\n    bool bVar9;\n    char cVar10;\n    uint32_t arg_ch;\n    int32_t iVar11;\n    int32_t arg_ch_00;\n    int32_t iVar12;\n    uint unaff_EBX;\n    ushort uVar13;\n    int32_t iVar14;\n    uint arg_8h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    uVar4 = *(param_1 + 0x2e);\n    var_10h = 0x41;\n    if (uVar4 < 0x65) {\n        if (uVar4 == 100) {\ncode_r0x0043518c:\n            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x10;\ncode_r0x00435190:\n            cVar10 = fcn.00401d66(0);\n        }\n        else if (uVar4 < 0x59) {\n            if (uVar4 == 0x58) {\n                arg_8h = 1;\ncode_r0x00435133:\n                cVar10 = fcn.004036ac(arg_8h);\n            }\n            else {\n                if (uVar4 != 0x41) {\n                    if (uVar4 == 0x43) goto code_r0x0043514c;\n                    if (uVar4 < 0x45) goto code_r0x004354d8;\n                    if (0x47 < uVar4) {\n                        if (uVar4 != 0x53) goto code_r0x004354d8;\n                        goto code_r0x0043511b;\n                    }\n                }\ncode_r0x0043519a:\n                cVar10 = fcn.00403760();\n            }\n        }\n        else if (uVar4 == 0x5a) {\n            cVar10 = fcn.00404688();\n        }\n        else {\n            if (uVar4 == 0x61) goto code_r0x0043519a;\n            if (uVar4 != 99) goto code_r0x004354d8;\ncode_r0x0043514c:\n            cVar10 = fcn.00402d92(0);\n        }\n    }\n    else if (uVar4 < 0x71) {\n        if (uVar4 == 0x70) {\n            cVar10 = fcn.00401753();\n        }\n        else {\n            if (uVar4 < 0x68) goto code_r0x0043519a;\n            if (uVar4 == 0x69) goto code_r0x0043518c;\n            if (uVar4 == 0x6e) {\n                cVar10 = fcn.00403044();\n            }\n            else {\n                if (uVar4 != 0x6f) goto code_r0x004354d8;\n                cVar10 = fcn.00401b18();\n            }\n        }\n    }\n    else {\n        if (uVar4 != 0x73) {\n            if (uVar4 != 0x75) {\n                if (uVar4 != 0x78) goto code_r0x004354d8;\n                arg_8h = 0;\n                goto code_r0x00435133;\n            }\n            goto code_r0x00435190;\n        }\ncode_r0x0043511b:\n        cVar10 = fcn.00401b31();\n    }\n    if ((cVar10 == '\\0') || (*(param_1 + 0x2c) != '\\0')) goto code_r0x004354d8;\n    var_ch = 0;\n    arg_ch = 0;\n    var_8h._0_2_ = 0;\n    var_14h = 0;\n    if ((*(param_1 + 0x1c) >> 4 & 1) != 0) {\n        if ((*(param_1 + 0x1c) >> 6 & 1) == 0) {\n            if ((*(param_1 + 0x1c) & 1) == 0) {\n                if ((*(param_1 + 0x1c) >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                    var_14h = 1;\n                }\n                goto code_r0x00435229;\n            }\n            uVar4 = 0x2b;\n        }\n        else {\n            uVar4 = 0x2d;\n        }\n        var_ch = uVar4;\n        var_14h = 1;\n        arg_ch = 1;\n    }\ncode_r0x00435229:\n    iVar5 = *(param_1 + 0x2e);\n    if (((iVar5 != 0x78) && (iVar5 != 0x58)) || (bVar8 = true,  (*(param_1 + 0x1c) >> 5 & 1) == 0)) {\n        bVar8 = false;\n    }\n    if ((iVar5 == 0x61) || (bVar9 = false,  iVar5 == var_10h)) {\n        bVar9 = true;\n    }\n    if ((bVar8) || (bVar9)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar5 == 0x58) || (uVar13 = 0x78,  iVar5 == var_10h)) {\n            uVar13 = 0x58;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = uVar13;\n        arg_ch = arg_ch + 2;\n        var_14h = arg_ch;\n    }\n    iVar14 = (*(param_1 + 0x20) - *(param_1 + 0x34)) - arg_ch;\n    if (((*(param_1 + 0x1c) & 0xc) == 0) && (0 < iVar14)) {\n        iVar12 = *(param_1 + 0x14);\n        iVar11 = 0;\n        do {\n            if (*(*(param_1 + 0x448) + 8) == *(*(param_1 + 0x448) + 4)) {\n                if (*(*(param_1 + 0x448) + 0xc) == '\\0') {\n                    iVar12 = -1;\n                }\n                else {\n                    iVar12 = iVar12 + 1;\n                }\n                *(param_1 + 0x14) = iVar12;\n            }\n            else {\n                *(param_1 + 0x14) = iVar12 + 1;\n                piVar1 = *(param_1 + 0x448) + 8;\n                *piVar1 = *piVar1 + 1;\n                ***(param_1 + 0x448) = 0x20;\n                **(param_1 + 0x448) = **(param_1 + 0x448) + 2;\n                iVar12 = *(param_1 + 0x14);\n            }\n            arg_ch = var_14h;\n        } while ((iVar12 != -1) && (iVar11 = iVar11 + 1,  iVar11 < iVar14));\n    }\n    piVar1 = param_1 + 0x14;\n    fcn.00403657(&var_ch, arg_ch, piVar1);\n    if (((*(param_1 + 0x1c) >> 3 & 1) != 0) &&\n       ((piVar2 = param_1 + 0x14,  (*(param_1 + 0x1c) >> 2 & 1) == 0 && (var_14h = 0,  0 < iVar14)))) {\n        iVar12 = *piVar2;\n        do {\n            var_10h = *(param_1 + 0x448);\n            if (*(var_10h + 8) == *(var_10h + 4)) {\n                if (*(var_10h + 0xc) == '\\0') {\n                    iVar12 = -1;\n                }\n                else {\n                    iVar12 = iVar12 + 1;\n                }\n                *piVar2 = iVar12;\n            }\n            else {\n                *piVar2 = iVar12 + 1;\n                *(var_10h + 8) = *(var_10h + 8) + 1;\n                ***(param_1 + 0x448) = 0x30;\n                piVar6 = *(param_1 + 0x448);\n                *piVar6 = *piVar6 + 2;\n                iVar12 = *piVar2;\n            }\n        } while ((iVar12 != -1) && (var_14h = var_14h + 1,  var_14h < iVar14));\n    }\n    iVar12 = 0;\n    if ((*(param_1 + 0x38) == '\\0') && (iVar11 = *(param_1 + 0x34),  0 < iVar11)) {\n        iVar7 = *(param_1 + 8);\n        if (*(iVar7 + 0x14) == '\\0') {\n            fcn.004024f0();\n            iVar11 = *(param_1 + 0x34);\n        }\n        arg_ch_00 = *(param_1 + 0x30);\n        var_10h = 0;\n        if (iVar11 != 0) {\n            do {\n                var_14h = var_14h & 0xffff0000;\n                var_ch = fcn.0040123f(&var_14h, arg_ch_00, *(*(iVar7 + 0xc) + 4), *(param_1 + 8));\n                ppiVar3 = param_1 + 0x448;\n                if (var_ch < 1) {\n                    *(param_1 + 0x14) = 0xffffffff;\n                    break;\n                }\n                piVar2 = *ppiVar3;\n                if (piVar2[2] == piVar2[1]) {\n                    if (*(piVar2 + 3) == '\\0') {\n                        *(param_1 + 0x14) = 0xffffffff;\n                    }\n                    else {\n                        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                    }\n                }\n                else {\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                    piVar2[2] = piVar2[2] + 1;\n                    ***ppiVar3 = var_14h;\n                    **ppiVar3 = **ppiVar3 + 2;\n                }\n                arg_ch_00 = arg_ch_00 + var_ch;\n                var_10h = var_10h + 1;\n            } while (var_10h != *(param_1 + 0x34));\n        }\n    }\n    else {\n        fcn.00403657(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14);\n    }\n    iVar11 = *(param_1 + 0x14);\n    if (((-1 < iVar11) && ((*(param_1 + 0x1c) >> 2 & 1) != 0)) && (0 < iVar14)) {\n        do {\n            iVar7 = *(param_1 + 0x448);\n            if (*(iVar7 + 8) == *(iVar7 + 4)) {\n                if (*(iVar7 + 0xc) == '\\0') {\n                    iVar11 = -1;\n                }\n                else {\n                    iVar11 = iVar11 + 1;\n                }\n                *piVar1 = iVar11;\n            }\n            else {\n                *piVar1 = iVar11 + 1;\n                *(iVar7 + 8) = *(iVar7 + 8) + 1;\n                ***(param_1 + 0x448) = 0x20;\n                piVar2 = *(param_1 + 0x448);\n                *piVar2 = *piVar2 + 2;\n                iVar11 = *piVar1;\n            }\n        } while ((iVar11 != -1) && (iVar12 = iVar12 + 1,  iVar12 < iVar14));\n    }\ncode_r0x004354d8:\n    fcn.0040241e(unaff_EBX);\n    return;\n}\n",
        "token_count": 2924
    },
    "0040272f": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.0040272f(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_10h;\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    bool bVar5;\n    char cVar6;\n    uchar uVar7;\n    int32_t in_ECX;\n    uint16_t *puVar8;\n    uint unaff_EBX;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint uVar11;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    iVar9 = 0;\n    cVar6 = *(in_ECX + 0x2d);\n    if (cVar6 < 'e') {\n        if (cVar6 == 'd') {\ncode_r0x00432f0e:\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) | 0x10;\ncode_r0x00432f12:\n            cVar6 = fcn.004033c8(0);\n        }\n        else if (cVar6 < 'Y') {\n            if (cVar6 == 'X') {\n                uVar11 = 1;\ncode_r0x00432eb5:\n                cVar6 = fcn.00401a0a(uVar11);\n            }\n            else {\n                if (cVar6 != 'A') {\n                    if (cVar6 == 'C') goto code_r0x00432ece;\n                    if (cVar6 < 'E') goto code_r0x00433195;\n                    if ('G' < cVar6) {\n                        if (cVar6 != 'S') goto code_r0x00433195;\n                        goto code_r0x00432e9d;\n                    }\n                }\ncode_r0x00432f1c:\n                cVar6 = fcn.0040130c();\n            }\n        }\n        else if (cVar6 == 'Z') {\n            cVar6 = fcn.0040400c();\n        }\n        else {\n            if (cVar6 == 'a') goto code_r0x00432f1c;\n            if (cVar6 != 'c') goto code_r0x00433195;\ncode_r0x00432ece:\n            cVar6 = fcn.004038eb(0);\n        }\n    }\n    else if (cVar6 < 'q') {\n        if (cVar6 == 'p') {\n            cVar6 = fcn.00404188();\n        }\n        else {\n            if (cVar6 < 'h') goto code_r0x00432f1c;\n            if (cVar6 == 'i') goto code_r0x00432f0e;\n            if (cVar6 == 'n') {\n                cVar6 = fcn.0040443a();\n            }\n            else {\n                if (cVar6 != 'o') goto code_r0x00433195;\n                cVar6 = fcn.00402c5c();\n            }\n        }\n    }\n    else {\n        if (cVar6 != 's') {\n            if (cVar6 != 'u') {\n                if (cVar6 != 'x') goto code_r0x00433195;\n                uVar11 = 0;\n                goto code_r0x00432eb5;\n            }\n            goto code_r0x00432f12;\n        }\ncode_r0x00432e9d:\n        cVar6 = fcn.00401a6e();\n    }\n    if (((cVar6 == '\\0') || (cVar6 = fcn.00402423(),  cVar6 != '\\0')) || (*(in_ECX + 0x2c) != '\\0'))\n    goto code_r0x00433195;\n    uVar2 = *(in_ECX + 0x1c);\n    var_ch = (var_ch >> 0x10 & 0xff00) << 0x10;\n    iVar10 = 0;\n    var_10h = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        var_ch._1_3_ = var_ch >> 8;\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = CONCAT31(var_ch._1_3_, 0x20);\n                    iVar10 = 1;\n                    var_10h = 1;\n                }\n                goto code_r0x00432fb5;\n            }\n            var_ch = CONCAT31(var_ch._1_3_, 0x2b);\n        }\n        else {\n            var_ch = CONCAT31(var_ch._1_3_, 0x2d);\n        }\n        var_10h = 1;\n        iVar10 = 1;\n    }\ncode_r0x00432fb5:\n    cVar6 = *(in_ECX + 0x2d);\n    if (((cVar6 != 'x') && (cVar6 != 'X')) || (bVar4 = true,  (uVar2 >> 5 & 1) == 0)) {\n        bVar4 = false;\n    }\n    if ((cVar6 == 'a') || (bVar5 = false,  cVar6 == 'A')) {\n        bVar5 = true;\n    }\n    if ((bVar4) || (bVar5)) {\n        *(&fcn.0040272f::var_ch + iVar10) = 0x30;\n        if ((cVar6 == 'X') || (cVar6 == 'A')) {\n            uVar7 = 0x58;\n        }\n        else {\n            uVar7 = 0x78;\n        }\n        *(&fcn.0040272f::var_ch + iVar10 + 1) = uVar7;\n        iVar10 = iVar10 + 2;\n        var_10h = iVar10;\n    }\n    iVar10 = (*(in_ECX + 0x20) - *(in_ECX + 0x34)) - iVar10;\n    if (((uVar2 & 0xc) == 0) && (uVar2 = *(in_ECX + 8),  0 < iVar10)) {\n        while( true ) {\n            var_10h = 0x20;\n            var_ch = uVar2;\n            cVar6 = fcn.00401965(0x20, uVar2);\n            if (cVar6 == '\\0') break;\n            iVar3 = *(in_ECX + 0x14);\n            *(in_ECX + 0x14) = iVar3 + 1;\n            if ((iVar3 == -2) || (iVar10 < 0x433037)) goto code_r0x00433061;\n        }\n        *(in_ECX + 0x14) = 0xffffffff;\n    }\ncode_r0x00433061:\n    iVar10 = var_10h;\n    arg_10h = in_ECX + 0x14;\n    var_1ch = var_10h;\n    unaff_EBX = 0x43307f;\n    fcn.00402db0(&fcn.0040272f::var_ch, var_10h, arg_10h, *(in_ECX + 8));\n    if (((*(in_ECX + 0x1c) >> 3 & 1) != 0) && ((*(in_ECX + 0x1c) >> 2 & 1) == 0)) {\n        iVar3 = *(in_ECX + 8);\n        var_14h = 0;\n        if (0 < iVar10) {\n            while( true ) {\n                unaff_EBX = 0x4330af;\n                cVar6 = fcn.00401965(0x30, iVar3);\n                var_1ch = iVar3;\n                if (cVar6 == '\\0') break;\n                iVar10 = *arg_10h;\n                *arg_10h = iVar10 + 1;\n                if ((iVar10 == -2) || (var_14h = var_14h + 1,  iVar3 <= var_14h)) goto code_r0x004330d3;\n            }\n            *arg_10h = -1;\n        }\n    }\ncode_r0x004330d3:\n    if ((*(in_ECX + 0x38) == '\\0') || (*(in_ECX + 0x34) < 1)) {\n        unaff_EBX = *(in_ECX + 8);\n        fcn.00402db0(*(in_ECX + 0x30), *(in_ECX + 0x34), arg_10h, unaff_EBX);\n    }\n    else {\n        puVar8 = *(in_ECX + 0x30);\n        var_14h = 0;\n        do {\n            uVar1 = *puVar8;\n            puVar8 = puVar8 + 1;\n            var_10h = 0;\n            iVar10 = fcn.00402f72(&fcn.0040272f::var_10h, &fcn.0040272f::var_ch, 6, uVar1, *(in_ECX + 8));\n            if ((iVar10 != 0) || (var_10h == 0)) {\n                *arg_10h = -1;\n                break;\n            }\n            fcn.00402db0(&fcn.0040272f::var_ch, var_10h, arg_10h, *(in_ECX + 8));\n            var_14h = var_14h + 1;\n        } while (var_14h != *(in_ECX + 0x34));\n    }\n    if (((-1 < *arg_10h) && ((*(in_ECX + 0x1c) >> 2 & 1) != 0)) && (uVar11 = *(in_ECX + 8),  0 < var_1ch)) {\n        while (cVar6 = fcn.00401965(0x20, uVar11),  cVar6 != '\\0') {\n            iVar10 = *arg_10h;\n            *arg_10h = iVar10 + 1;\n            if ((iVar10 == -2) || (iVar9 = iVar9 + 1,  var_1ch <= iVar9)) goto code_r0x00433195;\n        }\n        *arg_10h = -1;\n    }\ncode_r0x00433195:\n    fcn.0040241e(unaff_EBX);\n    return;\n}\n",
        "token_count": 2571
    },
    "0040371a": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040371a(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    uint16_t uVar4;\n    int16_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    bool bVar8;\n    bool bVar9;\n    char cVar10;\n    uint32_t arg_ch;\n    int32_t iVar11;\n    int32_t arg_ch_00;\n    int32_t iVar12;\n    uint unaff_EBX;\n    ushort uVar13;\n    int32_t iVar14;\n    uint arg_8h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    uVar4 = *(param_1 + 0x2e);\n    var_10h = 0x41;\n    if (uVar4 < 0x65) {\n        if (uVar4 == 100) {\ncode_r0x004356b5:\n            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x10;\ncode_r0x004356b9:\n            cVar10 = fcn.00402031(0);\n        }\n        else if (uVar4 < 0x59) {\n            if (uVar4 == 0x58) {\n                arg_8h = 1;\ncode_r0x0043565c:\n                cVar10 = fcn.00402086(arg_8h);\n            }\n            else {\n                if (uVar4 != 0x41) {\n                    if (uVar4 == 0x43) goto code_r0x00435675;\n                    if (uVar4 < 0x45) goto code_r0x00435a10;\n                    if (0x47 < uVar4) {\n                        if (uVar4 != 0x53) goto code_r0x00435a10;\n                        goto code_r0x00435644;\n                    }\n                }\ncode_r0x004356c3:\n                cVar10 = fcn.00402d8d();\n            }\n        }\n        else if (uVar4 == 0x5a) {\n            cVar10 = fcn.004033cd();\n        }\n        else {\n            if (uVar4 == 0x61) goto code_r0x004356c3;\n            if (uVar4 != 99) goto code_r0x00435a10;\ncode_r0x00435675:\n            cVar10 = fcn.00401dfc(0);\n        }\n    }\n    else if (uVar4 < 0x71) {\n        if (uVar4 == 0x70) {\n            cVar10 = fcn.004012a8();\n        }\n        else {\n            if (uVar4 < 0x68) goto code_r0x004356c3;\n            if (uVar4 == 0x69) goto code_r0x004356b5;\n            if (uVar4 == 0x6e) {\n                cVar10 = fcn.00401c7b();\n            }\n            else {\n                if (uVar4 != 0x6f) goto code_r0x00435a10;\n                cVar10 = fcn.00401d93();\n            }\n        }\n    }\n    else {\n        if (uVar4 != 0x73) {\n            if (uVar4 != 0x75) {\n                if (uVar4 != 0x78) goto code_r0x00435a10;\n                arg_8h = 0;\n                goto code_r0x0043565c;\n            }\n            goto code_r0x004356b9;\n        }\ncode_r0x00435644:\n        cVar10 = fcn.00402b12();\n    }\n    if (((cVar10 == '\\0') || (cVar10 = fcn.00401d6b(),  cVar10 != '\\0')) || (*(param_1 + 0x2c) != '\\0'))\n    goto code_r0x00435a10;\n    var_ch = 0;\n    arg_ch = 0;\n    var_8h._0_2_ = 0;\n    var_14h = 0;\n    if ((*(param_1 + 0x1c) >> 4 & 1) != 0) {\n        if ((*(param_1 + 0x1c) >> 6 & 1) == 0) {\n            if ((*(param_1 + 0x1c) & 1) == 0) {\n                if ((*(param_1 + 0x1c) >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                    var_14h = 1;\n                }\n                goto code_r0x00435761;\n            }\n            uVar4 = 0x2b;\n        }\n        else {\n            uVar4 = 0x2d;\n        }\n        var_ch = uVar4;\n        var_14h = 1;\n        arg_ch = 1;\n    }\ncode_r0x00435761:\n    iVar5 = *(param_1 + 0x2e);\n    if (((iVar5 != 0x78) && (iVar5 != 0x58)) || (bVar8 = true,  (*(param_1 + 0x1c) >> 5 & 1) == 0)) {\n        bVar8 = false;\n    }\n    if ((iVar5 == 0x61) || (bVar9 = false,  iVar5 == var_10h)) {\n        bVar9 = true;\n    }\n    if ((bVar8) || (bVar9)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar5 == 0x58) || (uVar13 = 0x78,  iVar5 == var_10h)) {\n            uVar13 = 0x58;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = uVar13;\n        arg_ch = arg_ch + 2;\n        var_14h = arg_ch;\n    }\n    iVar14 = (*(param_1 + 0x20) - *(param_1 + 0x34)) - arg_ch;\n    if (((*(param_1 + 0x1c) & 0xc) == 0) && (0 < iVar14)) {\n        iVar12 = *(param_1 + 0x14);\n        iVar11 = 0;\n        do {\n            if (*(*(param_1 + 0x448) + 8) == *(*(param_1 + 0x448) + 4)) {\n                if (*(*(param_1 + 0x448) + 0xc) == '\\0') {\n                    iVar12 = -1;\n                }\n                else {\n                    iVar12 = iVar12 + 1;\n                }\n                *(param_1 + 0x14) = iVar12;\n            }\n            else {\n                *(param_1 + 0x14) = iVar12 + 1;\n                piVar1 = *(param_1 + 0x448) + 8;\n                *piVar1 = *piVar1 + 1;\n                ***(param_1 + 0x448) = 0x20;\n                **(param_1 + 0x448) = **(param_1 + 0x448) + 2;\n                iVar12 = *(param_1 + 0x14);\n            }\n            arg_ch = var_14h;\n        } while ((iVar12 != -1) && (iVar11 = iVar11 + 1,  iVar11 < iVar14));\n    }\n    piVar1 = param_1 + 0x14;\n    fcn.00403657(&var_ch, arg_ch, piVar1);\n    if (((*(param_1 + 0x1c) >> 3 & 1) != 0) &&\n       ((piVar2 = param_1 + 0x14,  (*(param_1 + 0x1c) >> 2 & 1) == 0 && (var_14h = 0,  0 < iVar14)))) {\n        iVar12 = *piVar2;\n        do {\n            var_10h = *(param_1 + 0x448);\n            if (*(var_10h + 8) == *(var_10h + 4)) {\n                if (*(var_10h + 0xc) == '\\0') {\n                    iVar12 = -1;\n                }\n                else {\n                    iVar12 = iVar12 + 1;\n                }\n                *piVar2 = iVar12;\n            }\n            else {\n                *piVar2 = iVar12 + 1;\n                *(var_10h + 8) = *(var_10h + 8) + 1;\n                ***(param_1 + 0x448) = 0x30;\n                piVar6 = *(param_1 + 0x448);\n                *piVar6 = *piVar6 + 2;\n                iVar12 = *piVar2;\n            }\n        } while ((iVar12 != -1) && (var_14h = var_14h + 1,  var_14h < iVar14));\n    }\n    iVar12 = 0;\n    if ((*(param_1 + 0x38) == '\\0') && (iVar11 = *(param_1 + 0x34),  0 < iVar11)) {\n        iVar7 = *(param_1 + 8);\n        if (*(iVar7 + 0x14) == '\\0') {\n            fcn.004024f0();\n            iVar11 = *(param_1 + 0x34);\n        }\n        arg_ch_00 = *(param_1 + 0x30);\n        var_10h = 0;\n        if (iVar11 != 0) {\n            do {\n                var_14h = var_14h & 0xffff0000;\n                var_ch = fcn.0040123f(&var_14h, arg_ch_00, *(*(iVar7 + 0xc) + 4), *(param_1 + 8));\n                ppiVar3 = param_1 + 0x448;\n                if (var_ch < 1) {\n                    *(param_1 + 0x14) = 0xffffffff;\n                    break;\n                }\n                piVar2 = *ppiVar3;\n                if (piVar2[2] == piVar2[1]) {\n                    if (*(piVar2 + 3) == '\\0') {\n                        *(param_1 + 0x14) = 0xffffffff;\n                    }\n                    else {\n                        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                    }\n                }\n                else {\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                    piVar2[2] = piVar2[2] + 1;\n                    ***ppiVar3 = var_14h;\n                    **ppiVar3 = **ppiVar3 + 2;\n                }\n                arg_ch_00 = arg_ch_00 + var_ch;\n                var_10h = var_10h + 1;\n            } while (var_10h != *(param_1 + 0x34));\n        }\n    }\n    else {\n        fcn.00403657(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14);\n    }\n    iVar11 = *(param_1 + 0x14);\n    if (((-1 < iVar11) && ((*(param_1 + 0x1c) >> 2 & 1) != 0)) && (0 < iVar14)) {\n        do {\n            iVar7 = *(param_1 + 0x448);\n            if (*(iVar7 + 8) == *(iVar7 + 4)) {\n                if (*(iVar7 + 0xc) == '\\0') {\n                    iVar11 = -1;\n                }\n                else {\n                    iVar11 = iVar11 + 1;\n                }\n                *piVar1 = iVar11;\n            }\n            else {\n                *piVar1 = iVar11 + 1;\n                *(iVar7 + 8) = *(iVar7 + 8) + 1;\n                ***(param_1 + 0x448) = 0x20;\n                piVar2 = *(param_1 + 0x448);\n                *piVar2 = *piVar2 + 2;\n                iVar11 = *piVar1;\n            }\n        } while ((iVar11 != -1) && (iVar12 = iVar12 + 1,  iVar12 < iVar14));\n    }\ncode_r0x00435a10:\n    fcn.0040241e(unaff_EBX);\n    return;\n}\n",
        "token_count": 2953
    },
    "00402991": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402991(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint arg_10h;\n    char *pcVar4;\n    int32_t iVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    iVar5 = param_1[9];\n    if (iVar5 < 0) {\n        if ((*(param_1 + 0x2d) == 'a') || (*(param_1 + 0x2d) == 'A')) {\n            iVar5 = 0xd;\n        }\n        else {\n            iVar5 = 6;\n        }\n        param_1[9] = iVar5;\n    }\n    else if ((iVar5 == 0) && ((*(param_1 + 0x2d) == 'g' || (iVar5 = 0,  *(param_1 + 0x2d) == 'G')))) {\n        param_1[9] = 1;\n        iVar5 = 1;\n    }\n    cVar2 = fcn.00404345(iVar5 + 0x15d, param_1[2]);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.00403d37();\n        iVar5 = iVar5 + -0x15d;\n        param_1[9] = iVar5;\n    }\n    else {\n        iVar5 = param_1[9];\n    }\n    puVar3 = param_1[0x110];\n    if (param_1[0x110] == NULL) {\n        puVar3 = param_1 + 0xf;\n    }\n    param_1[0xc] = puVar3;\n    param_1[4] = param_1[4] + 8;\n    var_14h = *(param_1[4] + -8);\n    var_10h = *(param_1[4] + -4);\n    var_4h = *(param_1 + 0x2d);\n    var_8h = fcn.00403d37();\n    var_ch = fcn.0040245a();\n    arg_10h = fcn.00403d37();\n    puVar3 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar3 = param_1[0x110];\n    }\n    fcn.00402e5f(&var_14h, puVar3, arg_10h, var_ch, var_8h, var_4h, iVar5, *param_1, param_1[1], 1, param_1[2]);\n    if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n        iVar5 = param_1[2];\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        fcn.00401b63(param_1[0xc], iVar5 + 0xc);\n    }\n    if (((*(param_1 + 0x2d) == 'g') || (*(param_1 + 0x2d) == 'G')) && ((param_1[7] >> 5 & 1) == 0)) {\n        iVar5 = param_1[2];\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        fcn.00403e36(param_1[0xc], iVar5 + 0xc);\n    }\n    pcVar4 = param_1[0xc];\n    cVar2 = *pcVar4;\n    if (cVar2 == '-') {\n        param_1[7] = param_1[7] | 0x40;\n        pcVar4 = pcVar4 + 1;\n        param_1[0xc] = pcVar4;\n        cVar2 = *pcVar4;\n    }\n    if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n        param_1[7] = param_1[7] & 0xfffffff7;\n        *(param_1 + 0x2d) = 0x73;\n    }\n    pcVar1 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    param_1[0xd] = pcVar4 - pcVar1;\n    return 1;\n}\n",
        "token_count": 1084
    },
    "00402a9a": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402a9a(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint arg_10h;\n    char *pcVar4;\n    int32_t iVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    iVar5 = param_1[9];\n    if (iVar5 < 0) {\n        if ((*(param_1 + 0x2d) == 'a') || (*(param_1 + 0x2d) == 'A')) {\n            iVar5 = 0xd;\n        }\n        else {\n            iVar5 = 6;\n        }\n        param_1[9] = iVar5;\n    }\n    else if ((iVar5 == 0) && ((*(param_1 + 0x2d) == 'g' || (iVar5 = 0,  *(param_1 + 0x2d) == 'G')))) {\n        param_1[9] = 1;\n        iVar5 = 1;\n    }\n    cVar2 = fcn.00404345(iVar5 + 0x15d, param_1[2]);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.00403d37();\n        iVar5 = iVar5 + -0x15d;\n        param_1[9] = iVar5;\n    }\n    else {\n        iVar5 = param_1[9];\n    }\n    puVar3 = param_1[0x110];\n    if (param_1[0x110] == NULL) {\n        puVar3 = param_1 + 0xf;\n    }\n    param_1[0xc] = puVar3;\n    param_1[4] = param_1[4] + 8;\n    var_14h = *(param_1[4] + -8);\n    var_10h = *(param_1[4] + -4);\n    var_4h = *(param_1 + 0x2d);\n    var_8h = fcn.00403d37();\n    var_ch = fcn.0040245a();\n    arg_10h = fcn.00403d37();\n    puVar3 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar3 = param_1[0x110];\n    }\n    fcn.00402e5f(&var_14h, puVar3, arg_10h, var_ch, var_8h, var_4h, iVar5, *param_1, param_1[1], 1, param_1[2]);\n    if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n        iVar5 = param_1[2];\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        fcn.00401b63(param_1[0xc], iVar5 + 0xc);\n    }\n    if (((*(param_1 + 0x2d) == 'g') || (*(param_1 + 0x2d) == 'G')) && ((param_1[7] >> 5 & 1) == 0)) {\n        iVar5 = param_1[2];\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        fcn.00403e36(param_1[0xc], iVar5 + 0xc);\n    }\n    pcVar4 = param_1[0xc];\n    cVar2 = *pcVar4;\n    if (cVar2 == '-') {\n        param_1[7] = param_1[7] | 0x40;\n        pcVar4 = pcVar4 + 1;\n        param_1[0xc] = pcVar4;\n        cVar2 = *pcVar4;\n    }\n    if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n        param_1[7] = param_1[7] & 0xfffffff7;\n        *(param_1 + 0x2d) = 0x73;\n    }\n    pcVar1 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    param_1[0xd] = pcVar4 - pcVar1;\n    return 1;\n}\n",
        "token_count": 1086
    },
    "00402c5c": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402c5c(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.00402d06(0);\n    return;\n}\n",
        "token_count": 93
    },
    "00402d8d": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402d8d(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    cVar2 = fcn.00403fbc();\n    if (cVar2 == '\\0') {\ncode_r0x0043802b:\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.00403d23();\n        if (cVar2 != '\\0') {\n            iVar6 = param_1[9];\n            if (iVar6 < 0) {\n                if ((*(param_1 + 0x2e) == 0x61) || (*(param_1 + 0x2e) == 0x41)) {\n                    iVar6 = 0xd;\n                }\n                else {\n                    iVar6 = 6;\n                }\n                param_1[9] = iVar6;\n            }\n            else if ((iVar6 == 0) && ((*(param_1 + 0x2e) == 0x67 || (iVar6 = 0,  *(param_1 + 0x2e) == 0x47)))) {\n                param_1[9] = 1;\n                iVar6 = 1;\n            }\n            cVar2 = fcn.00404345(iVar6 + 0x15d, param_1[2]);\n            if (cVar2 == '\\0') {\n                iVar6 = fcn.00403d37();\n                param_1[9] = iVar6 + -0x15d;\n            }\n            puVar3 = param_1[0x110];\n            if (param_1[0x110] == NULL) {\n                puVar3 = param_1 + 0xf;\n            }\n            var_10h = 0;\n            var_ch = 0;\n            param_1[0xc] = puVar3;\n            cVar2 = fcn.00401014(&var_10h);\n            if (cVar2 == '\\0') goto code_r0x0043802b;\n            cVar2 = *(param_1 + 0x2e);\n            var_4h = fcn.00403d37();\n            var_8h = fcn.0040245a();\n            uVar4 = fcn.00403d37();\n            puVar3 = param_1 + 0xf;\n            if (param_1[0x110] != NULL) {\n                puVar3 = param_1[0x110];\n            }\n            fcn.00402e5f(&var_10h, puVar3, uVar4, var_8h, var_4h, cVar2, param_1[9], *param_1, param_1[1], 1, param_1[2]\n                        );\n            if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n                iVar6 = param_1[2];\n                if (*(iVar6 + 0x14) == '\\0') {\n                    fcn.004024f0();\n                }\n                fcn.00401b63(param_1[0xc], iVar6 + 0xc);\n            }\n            if (((*(param_1 + 0x2e) == 0x67) || (*(param_1 + 0x2e) == 0x47)) && ((param_1[7] >> 5 & 1) == 0)) {\n                iVar6 = param_1[2];\n                if (*(iVar6 + 0x14) == '\\0') {\n                    fcn.004024f0();\n                }\n                fcn.00403e36(param_1[0xc], iVar6 + 0xc);\n            }\n            pcVar5 = param_1[0xc];\n            cVar2 = *pcVar5;\n            if (cVar2 == '-') {\n                param_1[7] = param_1[7] | 0x40;\n                pcVar5 = pcVar5 + 1;\n                param_1[0xc] = pcVar5;\n                cVar2 = *pcVar5;\n            }\n            if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n                param_1[7] = param_1[7] & 0xfffffff7;\n                *(param_1 + 0x2e) = 0x73;\n            }\n            pcVar1 = pcVar5 + 1;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            param_1[0xd] = pcVar5 - pcVar1;\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 1153
    },
    "004037b0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031",
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004037b0(int32_t param_1)\n\n{\n    int16_t iVar1;\n    int32_t *arg_10h;\n    int32_t iVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint unaff_EBX;\n    int32_t iVar7;\n    ushort uVar8;\n    int32_t iVar9;\n    bool bVar10;\n    uint16_t uVar11;\n    uint uVar12;\n    uint var_28h;\n    int32_t *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    iVar7 = 0;\n    uVar11 = *(param_1 + 0x2e);\n    var_10h = 0x41;\n    if (uVar11 < 0x65) {\n        if (uVar11 == 100) {\ncode_r0x00434900:\n            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x10;\ncode_r0x00434904:\n            cVar4 = fcn.00401735(0);\n        }\n        else if (uVar11 < 0x59) {\n            if (uVar11 == 0x58) {\n                uVar12 = 1;\ncode_r0x004348a7:\n                cVar4 = fcn.004028f6(uVar12);\n            }\n            else {\n                if (uVar11 != 0x41) {\n                    if (uVar11 == 0x43) goto code_r0x004348c0;\n                    if (uVar11 < 0x45) goto code_r0x00434b9c;\n                    if (0x47 < uVar11) {\n                        if (uVar11 != 0x53) goto code_r0x00434b9c;\n                        goto code_r0x0043488f;\n                    }\n                }\ncode_r0x0043490e:\n                cVar4 = fcn.00404381();\n            }\n        }\n        else if (uVar11 == 0x5a) {\n            cVar4 = fcn.00402d15();\n        }\n        else {\n            if (uVar11 == 0x61) goto code_r0x0043490e;\n            if (uVar11 != 99) goto code_r0x00434b9c;\ncode_r0x004348c0:\n            cVar4 = fcn.00402f2c(0);\n        }\n    }\n    else if (uVar11 < 0x71) {\n        if (uVar11 == 0x70) {\n            cVar4 = fcn.00403cd3();\n        }\n        else {\n            if (uVar11 < 0x68) goto code_r0x0043490e;\n            if (uVar11 == 0x69) goto code_r0x00434900;\n            if (uVar11 == 0x6e) {\n                cVar4 = fcn.004017b7();\n            }\n            else {\n                if (uVar11 != 0x6f) goto code_r0x00434b9c;\n                cVar4 = fcn.00403bf7();\n            }\n        }\n    }\n    else {\n        if (uVar11 != 0x73) {\n            if (uVar11 != 0x75) {\n                if (uVar11 != 0x78) goto code_r0x00434b9c;\n                uVar12 = 0;\n                goto code_r0x004348a7;\n            }\n            goto code_r0x00434904;\n        }\ncode_r0x0043488f:\n        cVar4 = fcn.0040232e();\n    }\n    if (((cVar4 == '\\0') || (cVar4 = fcn.0040272a(),  cVar4 != '\\0')) || (*(param_1 + 0x2c) != '\\0'))\n    goto code_r0x00434b9c;\n    var_ch = 0;\n    var_24h = NULL;\n    var_8h._0_2_ = 0;\n    var_14h = NULL;\n    if ((*(param_1 + 0x1c) >> 4 & 1) != 0) {\n        if ((*(param_1 + 0x1c) >> 6 & 1) == 0) {\n            if ((*(param_1 + 0x1c) & 1) == 0) {\n                if ((*(param_1 + 0x1c) >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    var_24h = 0x1;\n                    var_14h = 0x1;\n                }\n                goto code_r0x004349ac;\n            }\n            uVar11 = 0x2b;\n        }\n        else {\n            uVar11 = 0x2d;\n        }\n        var_ch = uVar11;\n        var_14h = 0x1;\n        var_24h = 0x1;\n    }\ncode_r0x004349ac:\n    iVar1 = *(param_1 + 0x2e);\n    if (((iVar1 != 0x78) && (iVar1 != 0x58)) || (bVar10 = true,  (*(param_1 + 0x1c) >> 5 & 1) == 0)) {\n        bVar10 = false;\n    }\n    if ((iVar1 == 0x61) || (bVar3 = false,  iVar1 == var_10h)) {\n        bVar3 = true;\n    }\n    var_18h = 0x30;\n    if ((bVar10) || (bVar3)) {\n        *(&fcn.004037b0::var_ch + var_24h * 2) = 0x30;\n        if ((iVar1 == 0x58) || (uVar8 = 0x78,  iVar1 == var_10h)) {\n            uVar8 = 0x58;\n        }\n        *(&fcn.004037b0::var_ch + var_24h * 2 + 2) = uVar8;\n        var_24h = var_24h + 2;\n        var_14h = var_24h;\n    }\n    iVar9 = (*(param_1 + 0x20) - *(param_1 + 0x34)) - var_24h;\n    if ((*(param_1 + 0x1c) & 0xc) == 0) {\n        arg_10h = *(param_1 + 8);\n        piVar6 = param_1 + 0x14;\n        var_10h = piVar6;\n        if (0 < iVar9) {\n            do {\n                var_18h = 0x20;\n                var_14h = piVar6;\n                var_10h = arg_10h;\n                fcn.00401af0(0x20, piVar6, arg_10h);\n                if (*piVar6 == -1) break;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar9);\n            param_1 = 0x434a44;\n            var_24h = var_14h;\n        }\n    }\n    unaff_EBX = 0x434a7b;\n    fcn.00402126(&fcn.004037b0::var_ch, var_24h, param_1 + 0x14, *(param_1 + 8));\n    if (((*(param_1 + 0x1c) >> 3 & 1) != 0) && ((*(param_1 + 0x1c) >> 2 & 1) == 0)) {\n        uVar12 = *(param_1 + 8);\n        var_10h = NULL;\n        if (0 < iVar9) {\n            var_24h = param_1 + 0x14;\n            do {\n                unaff_EBX = 0x434aaf;\n                fcn.00401af0(var_18h, var_24h, uVar12);\n                if (*var_24h == -1) break;\n                var_10h = var_10h + 1;\n            } while (var_10h < iVar9);\n        }\n    }\n    iVar7 = 0;\n    if ((*(param_1 + 0x38) == '\\0') && (iVar5 = *(param_1 + 0x34),  0 < iVar5)) {\n        iVar2 = *(param_1 + 8);\n        if (*(iVar2 + 0x14) == '\\0') {\n            unaff_EBX = 0x434ae8;\n            fcn.004024f0();\n            iVar5 = *(param_1 + 0x34);\n        }\n        var_10h = *(param_1 + 0x30);\n        var_14h = NULL;\n        bVar10 = iVar5 == 0;\n        while (!bVar10) {\n            var_18h = var_18h & 0xffff0000;\n            iVar5 = fcn.0040123f(&fcn.004037b0::var_18h, var_10h, *(*(iVar2 + 0xc) + 4), *(param_1 + 8));\n            if (iVar5 < 1) {\n                *(param_1 + 0x14) = 0xffffffff;\n                break;\n            }\n            fcn.00401af0(var_18h, param_1 + 0x14, *(param_1 + 8));\n            var_10h = var_10h + iVar5;\n            var_14h = var_14h + 1;\n            bVar10 = var_14h == *(param_1 + 0x34);\n        }\n    }\n    else {\n        unaff_EBX = *(param_1 + 8);\n        fcn.00402126(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14, unaff_EBX);\n    }\n    if (((-1 < *(param_1 + 0x14)) && ((*(param_1 + 0x1c) >> 2 & 1) != 0)) &&\n       (uVar12 = *(param_1 + 8),  piVar6 = param_1 + 0x14,  0 < iVar9)) {\n        do {\n            fcn.00401af0(0x20, piVar6, uVar12);\n            if (*var_24h == -1) break;\n            iVar7 = iVar7 + 1;\n            piVar6 = var_24h;\n        } while (iVar7 < iVar9);\n    }\ncode_r0x00434b9c:\n    fcn.0040241e(unaff_EBX);\n    return;\n}\n",
        "token_count": 2634
    },
    "00402fb3": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402fb3(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.00403e68(0);\n    return;\n}\n",
        "token_count": 92
    },
    "0040313e": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040313e(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.0040211c(0);\n    return;\n}\n",
        "token_count": 92
    },
    "004033af": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004033af(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint arg_10h;\n    char *pcVar4;\n    int32_t iVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    iVar5 = param_1[9];\n    if (iVar5 < 0) {\n        if ((*(param_1 + 0x2d) == 'a') || (*(param_1 + 0x2d) == 'A')) {\n            iVar5 = 0xd;\n        }\n        else {\n            iVar5 = 6;\n        }\n        param_1[9] = iVar5;\n    }\n    else if ((iVar5 == 0) && ((*(param_1 + 0x2d) == 'g' || (iVar5 = 0,  *(param_1 + 0x2d) == 'G')))) {\n        param_1[9] = 1;\n        iVar5 = 1;\n    }\n    cVar2 = fcn.00404345(iVar5 + 0x15d, param_1[2]);\n    if (cVar2 == '\\0') {\n        iVar5 = fcn.00403d37();\n        iVar5 = iVar5 + -0x15d;\n        param_1[9] = iVar5;\n    }\n    else {\n        iVar5 = param_1[9];\n    }\n    puVar3 = param_1[0x110];\n    if (param_1[0x110] == NULL) {\n        puVar3 = param_1 + 0xf;\n    }\n    param_1[0xc] = puVar3;\n    param_1[4] = param_1[4] + 8;\n    var_14h = *(param_1[4] + -8);\n    var_10h = *(param_1[4] + -4);\n    var_4h = *(param_1 + 0x2d);\n    var_8h = fcn.00403d37();\n    var_ch = fcn.0040245a();\n    arg_10h = fcn.00403d37();\n    puVar3 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar3 = param_1[0x110];\n    }\n    fcn.00402e5f(&var_14h, puVar3, arg_10h, var_ch, var_8h, var_4h, iVar5, *param_1, param_1[1], 1, param_1[2]);\n    if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n        iVar5 = param_1[2];\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        fcn.00401b63(param_1[0xc], iVar5 + 0xc);\n    }\n    if (((*(param_1 + 0x2d) == 'g') || (*(param_1 + 0x2d) == 'G')) && ((param_1[7] >> 5 & 1) == 0)) {\n        iVar5 = param_1[2];\n        if (*(iVar5 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        fcn.00403e36(param_1[0xc], iVar5 + 0xc);\n    }\n    pcVar4 = param_1[0xc];\n    cVar2 = *pcVar4;\n    if (cVar2 == '-') {\n        param_1[7] = param_1[7] | 0x40;\n        pcVar4 = pcVar4 + 1;\n        param_1[0xc] = pcVar4;\n        cVar2 = *pcVar4;\n    }\n    if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n        param_1[7] = param_1[7] & 0xfffffff7;\n        *(param_1 + 0x2d) = 0x73;\n    }\n    pcVar1 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    param_1[0xd] = pcVar4 - pcVar1;\n    return 1;\n}\n",
        "token_count": 1084
    },
    "00403760": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403760(uint *param_1)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint *puVar4;\n    uint arg_10h;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    iVar7 = param_1[9];\n    if (iVar7 < 0) {\n        if ((*(param_1 + 0x2e) == 0x61) || (*(param_1 + 0x2e) == 0x41)) {\n            iVar7 = 0xd;\n        }\n        else {\n            iVar7 = 6;\n        }\n        param_1[9] = iVar7;\n    }\n    else if ((iVar7 == 0) && ((*(param_1 + 0x2e) == 0x67 || (iVar7 = 0,  *(param_1 + 0x2e) == 0x47)))) {\n        param_1[9] = 1;\n        iVar7 = 1;\n    }\n    cVar3 = fcn.00404345(iVar7 + 0x15d, param_1[2]);\n    if (cVar3 == '\\0') {\n        iVar7 = fcn.00403d37();\n        iVar7 = iVar7 + -0x15d;\n        param_1[9] = iVar7;\n    }\n    else {\n        iVar7 = param_1[9];\n    }\n    puVar4 = param_1[0x110];\n    if (param_1[0x110] == NULL) {\n        puVar4 = param_1 + 0xf;\n    }\n    param_1[0xc] = puVar4;\n    param_1[4] = param_1[4] + 8;\n    var_14h = *(param_1[4] + -8);\n    var_10h = *(param_1[4] + -4);\n    var_4h = *(param_1 + 0x2e);\n    var_8h = fcn.00403d37();\n    var_ch = fcn.0040245a();\n    arg_10h = fcn.00403d37();\n    puVar4 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar4 = param_1[0x110];\n    }\n    fcn.00402e5f(&var_14h, puVar4, arg_10h, var_ch, var_8h, var_4h, iVar7, *param_1, param_1[1], 1, param_1[2]);\n    if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n        iVar7 = param_1[2];\n        if (*(iVar7 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        fcn.00401b63(param_1[0xc], iVar7 + 0xc);\n    }\n    uVar2 = *(param_1 + 0x2e);\n    uVar5 = uVar2;\n    if (((uVar2 == 0x67) || (uVar2 == 0x47)) && (uVar5 = param_1[7] >> 5,  (uVar5 & 1) == 0)) {\n        iVar7 = param_1[2];\n        if (*(iVar7 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        uVar5 = fcn.00403e36(param_1[0xc], iVar7 + 0xc);\n    }\n    pcVar6 = param_1[0xc];\n    cVar3 = *pcVar6;\n    uVar5 = uVar5 & 0xffffff00;\n    if (cVar3 == '-') {\n        param_1[7] = param_1[7] | 0x40;\n        pcVar6 = pcVar6 + 1;\n        param_1[0xc] = pcVar6;\n        cVar3 = *pcVar6;\n    }\n    if (((cVar3 == 'i') || (cVar3 == 'I')) || ((cVar3 == 'n' || (cVar3 == 'N')))) {\n        param_1[7] = param_1[7] & 0xfffffff7;\n        uVar5 = 0;\n        *(param_1 + 0x2e) = 0x73;\n    }\n    pcVar1 = pcVar6 + 1;\n    do {\n        cVar3 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar3 != '\\0');\n    param_1[0xd] = pcVar6 - pcVar1;\n    return CONCAT31(uVar5 >> 8, 1);\n}\n",
        "token_count": 1165
    },
    "0040385a": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040385a(uint *param_1)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint *puVar4;\n    uint arg_10h;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    iVar7 = param_1[9];\n    if (iVar7 < 0) {\n        if ((*(param_1 + 0x2e) == 0x61) || (*(param_1 + 0x2e) == 0x41)) {\n            iVar7 = 0xd;\n        }\n        else {\n            iVar7 = 6;\n        }\n        param_1[9] = iVar7;\n    }\n    else if ((iVar7 == 0) && ((*(param_1 + 0x2e) == 0x67 || (iVar7 = 0,  *(param_1 + 0x2e) == 0x47)))) {\n        param_1[9] = 1;\n        iVar7 = 1;\n    }\n    cVar3 = fcn.00404345(iVar7 + 0x15d, param_1[2]);\n    if (cVar3 == '\\0') {\n        iVar7 = fcn.00403d37();\n        iVar7 = iVar7 + -0x15d;\n        param_1[9] = iVar7;\n    }\n    else {\n        iVar7 = param_1[9];\n    }\n    puVar4 = param_1[0x110];\n    if (param_1[0x110] == NULL) {\n        puVar4 = param_1 + 0xf;\n    }\n    param_1[0xc] = puVar4;\n    param_1[4] = param_1[4] + 8;\n    var_14h = *(param_1[4] + -8);\n    var_10h = *(param_1[4] + -4);\n    var_4h = *(param_1 + 0x2e);\n    var_8h = fcn.00403d37();\n    var_ch = fcn.0040245a();\n    arg_10h = fcn.00403d37();\n    puVar4 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar4 = param_1[0x110];\n    }\n    fcn.00402e5f(&var_14h, puVar4, arg_10h, var_ch, var_8h, var_4h, iVar7, *param_1, param_1[1], 1, param_1[2]);\n    if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n        iVar7 = param_1[2];\n        if (*(iVar7 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        fcn.00401b63(param_1[0xc], iVar7 + 0xc);\n    }\n    uVar2 = *(param_1 + 0x2e);\n    uVar5 = uVar2;\n    if (((uVar2 == 0x67) || (uVar2 == 0x47)) && (uVar5 = param_1[7] >> 5,  (uVar5 & 1) == 0)) {\n        iVar7 = param_1[2];\n        if (*(iVar7 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        uVar5 = fcn.00403e36(param_1[0xc], iVar7 + 0xc);\n    }\n    pcVar6 = param_1[0xc];\n    cVar3 = *pcVar6;\n    uVar5 = uVar5 & 0xffffff00;\n    if (cVar3 == '-') {\n        param_1[7] = param_1[7] | 0x40;\n        pcVar6 = pcVar6 + 1;\n        param_1[0xc] = pcVar6;\n        cVar3 = *pcVar6;\n    }\n    if (((cVar3 == 'i') || (cVar3 == 'I')) || ((cVar3 == 'n' || (cVar3 == 'N')))) {\n        param_1[7] = param_1[7] & 0xfffffff7;\n        uVar5 = 0;\n        *(param_1 + 0x2e) = 0x73;\n    }\n    pcVar1 = pcVar6 + 1;\n    do {\n        cVar3 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar3 != '\\0');\n    param_1[0xd] = pcVar6 - pcVar1;\n    return CONCAT31(uVar5 >> 8, 1);\n}\n",
        "token_count": 1166
    },
    "00403bf7": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403bf7(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.004032ec(0);\n    return;\n}\n",
        "token_count": 91
    },
    "00403c38": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint64_t fcn.00403c38(ulong *param_1, ulong *param_2, uint32_t param_3)\n\n{\n    ulong uVar1;\n    uchar auVar2 [32];\n    uchar auVar3 [32];\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    int32_t iVar32;\n    uint32_t uVar33;\n    uint32_t uVar34;\n    int32_t iVar35;\n    ulong *puVar36;\n    uint *puVar37;\n    uint *puVar38;\n    ulong *puVar39;\n    uint *puVar40;\n    uint *puVar41;\n    uint uVar42;\n    uint uVar43;\n    uint uVar44;\n    uint64_t uVar45;\n    \n    if ((param_2 < param_1) && (param_1 < param_3 + param_2)) {\n        puVar37 = param_2 + param_3;\n        puVar40 = param_1 + param_3;\n        uVar33 = param_3;\n        if (0x1f < param_3) {\n            if ((*0x475040 >> 1 & 1) == 0) {\n                if ((puVar40 & 3) != 0) {\n                    uVar33 = puVar40 & 3;\n                    param_3 = param_3 - uVar33;\n                    do {\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        puVar37 = puVar37 + -1;\n                        puVar40 = puVar40 - 1;\n                        uVar33 = uVar33 - 1;\n                    } while (uVar33 != 0);\n                }\n                if (0x1f < param_3) {\n                    uVar33 = param_3 >> 2;\n                    while( true ) {\n                        if (uVar33 == 0) break;\n                        uVar33 = uVar33 - 1;\n                        puVar40[-1] = puVar37[-1];\n                        puVar37 = puVar37 + -1;\n                        puVar40 = puVar40 + -1;\n                    }\n    // switch table (4 cases) at 0x4159c0\n                    switch(param_3 & 3) {\n                    case 0:\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    case 1:\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    case 2:\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        *(puVar40 - 2) = *(puVar37 + -2);\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    case 3:\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        *(puVar40 - 2) = *(puVar37 + -2);\n                        *(puVar40 - 3) = *(puVar37 + -3);\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    }\n                }\n            }\n            else {\n                while (puVar38 = puVar37,  puVar41 = puVar40,  (puVar40 & 0xf) != 0) {\n                    puVar37 = puVar37 + -1;\n                    puVar40 = puVar40 + -1;\n                    *puVar40 = *puVar37;\n                    param_3 = param_3 - 1;\n                }\n                do {\n                    puVar37 = puVar38;\n                    puVar40 = puVar41;\n                    if (param_3 < 0x80) break;\n                    puVar37 = puVar38 + -0x20;\n                    puVar40 = puVar41 + -0x20;\n                    uVar42 = puVar38[-0x1f];\n                    uVar43 = puVar38[-0x1e];\n                    uVar44 = puVar38[-0x1d];\n                    uVar4 = puVar38[-0x1c];\n                    uVar5 = puVar38[-0x1b];\n                    uVar6 = puVar38[-0x1a];\n                    uVar7 = puVar38[-0x19];\n                    uVar8 = puVar38[-0x18];\n                    uVar9 = puVar38[-0x17];\n                    uVar10 = puVar38[-0x16];\n                    uVar11 = puVar38[-0x15];\n                    uVar12 = puVar38[-0x14];\n                    uVar13 = puVar38[-0x13];\n                    uVar14 = puVar38[-0x12];\n                    uVar15 = puVar38[-0x11];\n                    uVar16 = puVar38[-0x10];\n                    uVar17 = puVar38[-0xf];\n                    uVar18 = puVar38[-0xe];\n                    uVar19 = puVar38[-0xd];\n                    uVar20 = puVar38[-0xc];\n                    uVar21 = puVar38[-0xb];\n                    uVar22 = puVar38[-10];\n                    uVar23 = puVar38[-9];\n                    uVar24 = puVar38[-8];\n                    uVar25 = puVar38[-7];\n                    uVar26 = puVar38[-6];\n                    uVar27 = puVar38[-5];\n                    uVar28 = puVar38[-4];\n                    uVar29 = puVar38[-3];\n                    uVar30 = puVar38[-2];\n                    uVar31 = puVar38[-1];\n                    *puVar40 = *puVar37;\n                    puVar41[-0x1f] = uVar42;\n                    puVar41[-0x1e] = uVar43;\n                    puVar41[-0x1d] = uVar44;\n                    puVar41[-0x1c] = uVar4;\n                    puVar41[-0x1b] = uVar5;\n                    puVar41[-0x1a] = uVar6;\n                    puVar41[-0x19] = uVar7;\n                    puVar41[-0x18] = uVar8;\n                    puVar41[-0x17] = uVar9;\n                    puVar41[-0x16] = uVar10;\n                    puVar41[-0x15] = uVar11;\n                    puVar41[-0x14] = uVar12;\n                    puVar41[-0x13] = uVar13;\n                    puVar41[-0x12] = uVar14;\n                    puVar41[-0x11] = uVar15;\n                    puVar41[-0x10] = uVar16;\n                    puVar41[-0xf] = uVar17;\n                    puVar41[-0xe] = uVar18;\n                    puVar41[-0xd] = uVar19;\n                    puVar41[-0xc] = uVar20;\n                    puVar41[-0xb] = uVar21;\n                    puVar41[-10] = uVar22;\n                    puVar41[-9] = uVar23;\n                    puVar41[-8] = uVar24;\n                    puVar41[-7] = uVar25;\n                    puVar41[-6] = uVar26;\n                    puVar41[-5] = uVar27;\n                    puVar41[-4] = uVar28;\n                    puVar41[-3] = uVar29;\n                    puVar41[-2] = uVar30;\n                    puVar41[-1] = uVar31;\n                    param_3 = param_3 - 0x80;\n                    puVar38 = puVar37;\n                    puVar41 = puVar40;\n                } while ((param_3 & 0xffffff80) != 0);\n                puVar38 = puVar37;\n                puVar41 = puVar40;\n                if (0x1f < param_3) {\n                    do {\n                        puVar37 = puVar38 + -8;\n                        puVar40 = puVar41 + -8;\n                        uVar42 = puVar38[-7];\n                        uVar43 = puVar38[-6];\n                        uVar44 = puVar38[-5];\n                        uVar4 = puVar38[-4];\n                        uVar5 = puVar38[-3];\n                        uVar6 = puVar38[-2];\n                        uVar7 = puVar38[-1];\n                        *puVar40 = *puVar37;\n                        puVar41[-7] = uVar42;\n                        puVar41[-6] = uVar43;\n                        puVar41[-5] = uVar44;\n                        puVar41[-4] = uVar4;\n                        puVar41[-3] = uVar5;\n                        puVar41[-2] = uVar6;\n                        puVar41[-1] = uVar7;\n                        param_3 = param_3 - 0x20;\n                        puVar38 = puVar37;\n                        puVar41 = puVar40;\n                    } while ((param_3 & 0xffffffe0) != 0);\n                }\n            }\n        }\n        for (; (param_3 & 0xfffffffc) != 0; param_3 = param_3 - 4) {\n            puVar40 = puVar40 + -1;\n            puVar37 = puVar37 + -1;\n            *puVar40 = *puVar37;\n        }\n        for (; param_3 != 0; param_3 = param_3 - 1) {\n            puVar40 = puVar40 - 1;\n            puVar37 = puVar37 + -1;\n            *puVar40 = *puVar37;\n        }\n        return CONCAT44(uVar33, param_1);\n    }\n    uVar33 = param_3;\n    puVar39 = param_1;\n    if (0x1f < param_3) {\n        if (param_3 < 0x80) {\n            if ((*0x475040 >> 1 & 1) != 0) {\ncode_r0x00415b7d:\n                if (uVar33 == 0) goto code_r0x00415be0;\n                for (param_3 = uVar33 >> 5; param_3 != 0; param_3 = param_3 - 1) {\n                    uVar42 = *(param_2 + 4);\n                    uVar43 = *(param_2 + 1);\n                    uVar44 = *(param_2 + 0xc);\n                    uVar4 = *(param_2 + 2);\n                    uVar5 = *(param_2 + 0x14);\n                    uVar6 = *(param_2 + 3);\n                    uVar7 = *(param_2 + 0x1c);\n                    *puVar39 = *param_2;\n                    *(puVar39 + 4) = uVar42;\n                    *(puVar39 + 1) = uVar43;\n                    *(puVar39 + 0xc) = uVar44;\n                    *(puVar39 + 2) = uVar4;\n                    *(puVar39 + 0x14) = uVar5;\n                    *(puVar39 + 3) = uVar6;\n                    *(puVar39 + 0x1c) = uVar7;\n                    param_2 = param_2 + 4;\n                    puVar39 = puVar39 + 4;\n                }\n                goto code_r0x00415bab;\n            }\ncode_r0x004158d7:\n            uVar33 = param_1 & 3;\n            while (uVar33 != 0) {\n                *puVar39 = *param_2;\n                param_3 = param_3 - 1;\n                param_2 = param_2 + 1;\n                puVar39 = puVar39 + 1;\n                uVar33 = puVar39 & 3;\n            }\n        }\n        else {\n            if ((*0x4763ac >> 1 & 1) != 0) {\n                for (; uVar33 != 0; uVar33 = uVar33 - 1) {\n                    *puVar39 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar39 = puVar39 + 1;\n                }\n                return CONCAT44(param_3, param_1);\n            }\n            if ((((param_1 ^ param_2) & 0xf) == 0) && ((*0x475040 >> 1 & 1) != 0)) {\n                if ((param_2 & 0xf) != 0) {\n                    uVar34 = 0x10 - (param_2 & 0xf);\n                    param_3 = param_3 - uVar34;\n                    for (uVar33 = uVar34 & 3; uVar33 != 0; uVar33 = uVar33 - 1) {\n                        *puVar39 = *param_2;\n                        param_2 = param_2 + 1;\n                        puVar39 = puVar39 + 1;\n                    }\n                    for (uVar34 = uVar34 >> 2; uVar34 != 0; uVar34 = uVar34 - 1) {\n                        *puVar39 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar39 = puVar39 + 4;\n                    }\n                }\n                uVar33 = param_3 & 0x7f;\n                for (param_3 = param_3 >> 7; param_3 != 0; param_3 = param_3 - 1) {\n                    uVar42 = *(param_2 + 4);\n                    uVar43 = *(param_2 + 1);\n                    uVar44 = *(param_2 + 0xc);\n                    uVar4 = *(param_2 + 2);\n                    uVar5 = *(param_2 + 0x14);\n                    uVar6 = *(param_2 + 3);\n                    uVar7 = *(param_2 + 0x1c);\n                    uVar8 = *(param_2 + 4);\n                    uVar9 = *(param_2 + 0x24);\n                    uVar10 = *(param_2 + 5);\n                    uVar11 = *(param_2 + 0x2c);\n                    uVar12 = *(param_2 + 6);\n                    uVar13 = *(param_2 + 0x34);\n                    uVar14 = *(param_2 + 7);\n                    uVar15 = *(param_2 + 0x3c);\n                    *puVar39 = *param_2;\n                    *(puVar39 + 4) = uVar42;\n                    *(puVar39 + 1) = uVar43;\n                    *(puVar39 + 0xc) = uVar44;\n                    *(puVar39 + 2) = uVar4;\n                    *(puVar39 + 0x14) = uVar5;\n                    *(puVar39 + 3) = uVar6;\n                    *(puVar39 + 0x1c) = uVar7;\n                    *(puVar39 + 4) = uVar8;\n                    *(puVar39 + 0x24) = uVar9;\n                    *(puVar39 + 5) = uVar10;\n                    *(puVar39 + 0x2c) = uVar11;\n                    *(puVar39 + 6) = uVar12;\n                    *(puVar39 + 0x34) = uVar13;\n                    *(puVar39 + 7) = uVar14;\n                    *(puVar39 + 0x3c) = uVar15;\n                    uVar42 = *(param_2 + 0x44);\n                    uVar43 = *(param_2 + 9);\n                    uVar44 = *(param_2 + 0x4c);\n                    uVar4 = *(param_2 + 10);\n                    uVar5 = *(param_2 + 0x54);\n                    uVar6 = *(param_2 + 0xb);\n                    uVar7 = *(param_2 + 0x5c);\n                    uVar8 = *(param_2 + 0xc);\n                    uVar9 = *(param_2 + 100);\n                    uVar10 = *(param_2 + 0xd);\n                    uVar11 = *(param_2 + 0x6c);\n                    uVar12 = *(param_2 + 0xe);\n                    uVar13 = *(param_2 + 0x74);\n                    uVar14 = *(param_2 + 0xf);\n                    uVar15 = *(param_2 + 0x7c);\n                    *(puVar39 + 8) = *(param_2 + 8);\n                    *(puVar39 + 0x44) = uVar42;\n                    *(puVar39 + 9) = uVar43;\n                    *(puVar39 + 0x4c) = uVar44;\n                    *(puVar39 + 10) = uVar4;\n                    *(puVar39 + 0x54) = uVar5;\n                    *(puVar39 + 0xb) = uVar6;\n                    *(puVar39 + 0x5c) = uVar7;\n                    *(puVar39 + 0xc) = uVar8;\n                    *(puVar39 + 100) = uVar9;\n                    *(puVar39 + 0xd) = uVar10;\n                    *(puVar39 + 0x6c) = uVar11;\n                    *(puVar39 + 0xe) = uVar12;\n                    *(puVar39 + 0x74) = uVar13;\n                    *(puVar39 + 0xf) = uVar14;\n                    *(puVar39 + 0x7c) = uVar15;\n                    param_2 = param_2 + 0x10;\n                    puVar39 = puVar39 + 0x10;\n                }\n                goto code_r0x00415b7d;\n            }\n            if (((*0x4763ac & 1) == 0) || ((param_1 & 3) != 0)) goto code_r0x004158d7;\n            if ((param_2 & 3) == 0) {\n                if ((param_1 >> 2 & 1) != 0) {\n                    uVar42 = *param_2;\n                    param_3 = param_3 - 4;\n                    param_2 = param_2 + 4;\n                    *param_1 = uVar42;\n                    param_1 = param_1 + 4;\n                }\n                if ((param_1 >> 3 & 1) != 0) {\n                    uVar1 = *param_2;\n                    param_3 = param_3 - 8;\n                    param_2 = param_2 + 1;\n                    *param_1 = uVar1;\n                    param_1 = param_1 + 1;\n                }\n                if ((param_2 & 7) == 0) {\n                    puVar39 = param_2 + -1;\n                    uVar42 = *param_2;\n                    uVar43 = *(param_2 + 4);\n                    do {\n                        puVar36 = puVar39;\n                        uVar5 = *(puVar36 + 4);\n                        uVar6 = *(puVar36 + 0x24);\n                        param_3 = param_3 - 0x30;\n                        auVar2 = *(puVar36 + 2);\n                        uVar44 = *(puVar36 + 7);\n                        uVar4 = *(puVar36 + 0x3c);\n                        auVar3 = *(puVar36 + 4);\n                        *(param_1 + 1) = uVar42;\n                        *(param_1 + 0xc) = uVar43;\n                        *(param_1 + 2) = uVar5;\n                        *(param_1 + 0x14) = uVar6;\n                        *(param_1 + 2) = SUB3216(auVar2 >> 0x40, 0);\n                        *(param_1 + 4) = SUB3216(auVar3 >> 0x40, 0);\n                        param_1 = param_1 + 6;\n                        puVar39 = puVar36 + 6;\n                        uVar42 = uVar44;\n                        uVar43 = uVar4;\n                    } while (0x2f < param_3);\n                    puVar36 = puVar36 + 7;\n                }\n                else if ((param_2 >> 3 & 1) == 0) {\n                    iVar32 = param_2 + -4;\n                    uVar42 = *param_2;\n                    uVar43 = *(param_2 + 4);\n                    uVar44 = *(param_2 + 1);\n                    do {\n                        iVar35 = iVar32;\n                        uVar7 = *(iVar35 + 0x20);\n                        param_3 = param_3 - 0x30;\n                        auVar2 = *(iVar35 + 0x10);\n                        uVar4 = *(iVar35 + 0x34);\n                        uVar5 = *(iVar35 + 0x38);\n                        uVar6 = *(iVar35 + 0x3c);\n                        auVar3 = *(iVar35 + 0x20);\n                        *(param_1 + 4) = uVar42;\n                        *(param_1 + 1) = uVar43;\n                        *(param_1 + 0xc) = uVar44;\n                        *(param_1 + 2) = uVar7;\n                        *(param_1 + 2) = SUB3216(auVar2 >> 0x20, 0);\n                        *(param_1 + 4) = SUB3216(auVar3 >> 0x20, 0);\n                        param_1 = param_1 + 6;\n                        iVar32 = iVar35 + 0x30;\n                        uVar42 = uVar4;\n                        uVar43 = uVar5;\n                        uVar44 = uVar6;\n                    } while (0x2f < param_3);\n                    puVar36 = iVar35 + 0x34;\n                }\n                else {\n                    iVar32 = param_2 + -0xc;\n                    uVar42 = *param_2;\n                    do {\n                        iVar35 = iVar32;\n                        uVar44 = *(iVar35 + 0x20);\n                        uVar4 = *(iVar35 + 0x24);\n                        uVar5 = *(iVar35 + 0x28);\n                        param_3 = param_3 - 0x30;\n                        auVar2 = *(iVar35 + 0x10);\n                        uVar43 = *(iVar35 + 0x3c);\n                        auVar3 = *(iVar35 + 0x20);\n                        *(param_1 + 0xc) = uVar42;\n                        *(param_1 + 2) = uVar44;\n                        *(param_1 + 0x14) = uVar4;\n                        *(param_1 + 3) = uVar5;\n                        *(param_1 + 2) = SUB3216(auVar2 >> 0x60, 0);\n                        *(param_1 + 4) = SUB3216(auVar3 >> 0x60, 0);\n                        param_1 = param_1 + 6;\n                        iVar32 = iVar35 + 0x30;\n                        uVar42 = uVar43;\n                    } while (0x2f < param_3);\n                    puVar36 = iVar35 + 0x3c;\n                }\n                for (; 0xf < param_3; param_3 = param_3 - 0x10) {\n                    uVar42 = *puVar36;\n                    uVar43 = *(puVar36 + 4);\n                    uVar44 = *(puVar36 + 1);\n                    uVar4 = *(puVar36 + 0xc);\n                    puVar36 = puVar36 + 2;\n                    *param_1 = uVar42;\n                    *(param_1 + 4) = uVar43;\n                    *(param_1 + 1) = uVar44;\n                    *(param_1 + 0xc) = uVar4;\n                    param_1 = param_1 + 2;\n                }\n                if ((param_3 >> 2 & 1) != 0) {\n                    uVar42 = *puVar36;\n                    param_3 = param_3 - 4;\n                    puVar36 = puVar36 + 4;\n                    *param_1 = uVar42;\n                    param_1 = param_1 + 4;\n                }\n                if ((param_3 >> 3 & 1) != 0) {\n                    param_3 = param_3 - 8;\n                    *param_1 = *puVar36;\n                }\n    // WARNING: Could not recover jumptable at 0x004158d5. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (4 cases) at 0x415914\n                uVar45 = (**(param_3 * 4 + 0x415914))();\n                return uVar45;\n            }\n        }\n        uVar33 = param_3;\n        if (0x1f < param_3) {\n            for (uVar33 = param_3 >> 2; uVar33 != 0; uVar33 = uVar33 - 1) {\n                *puVar39 = *param_2;\n                param_2 = param_2 + 4;\n                puVar39 = puVar39 + 4;\n            }\n    // switch table (4 cases) at 0x415914\n            switch(param_3 & 3) {\n            case 0:\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            case 1:\n                *puVar39 = *param_2;\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            case 2:\n                *puVar39 = *param_2;\n                *(puVar39 + 1) = *(param_2 + 1);\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            case 3:\n                *puVar39 = *param_2;\n                *(puVar39 + 1) = *(param_2 + 1);\n                *(puVar39 + 2) = *(param_2 + 2);\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            }\n        }\n    }\ncode_r0x00415bab:\n    if ((uVar33 & 0x1f) != 0) {\n        for (uVar34 = (uVar33 & 0x1f) >> 2; uVar34 != 0; uVar34 = uVar34 - 1) {\n            param_3 = *param_2;\n            *puVar39 = param_3;\n            puVar39 = puVar39 + 4;\n            param_2 = param_2 + 4;\n        }\n        for (uVar33 = uVar33 & 3; uVar33 != 0; uVar33 = uVar33 - 1) {\n            *puVar39 = *param_2;\n            param_2 = param_2 + 1;\n            puVar39 = puVar39 + 1;\n        }\n    }\ncode_r0x00415be0:\n    return CONCAT44(param_3, param_1);\n}\n",
        "token_count": 6176
    },
    "00403d1e": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint64_t fcn.00403d1e(ulong *param_1, ulong *param_2, uint32_t param_3)\n\n{\n    ulong uVar1;\n    uchar auVar2 [32];\n    uchar auVar3 [32];\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    int32_t iVar32;\n    uint32_t uVar33;\n    uint32_t uVar34;\n    int32_t iVar35;\n    ulong *puVar36;\n    uint *puVar37;\n    uint *puVar38;\n    ulong *puVar39;\n    uint *puVar40;\n    uint *puVar41;\n    uint uVar42;\n    uint uVar43;\n    uint uVar44;\n    uint64_t uVar45;\n    \n    if ((param_2 < param_1) && (param_1 < param_3 + param_2)) {\n        puVar37 = param_2 + param_3;\n        puVar40 = param_1 + param_3;\n        uVar33 = param_3;\n        if (0x1f < param_3) {\n            if ((*0x475040 >> 1 & 1) == 0) {\n                if ((puVar40 & 3) != 0) {\n                    uVar33 = puVar40 & 3;\n                    param_3 = param_3 - uVar33;\n                    do {\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        puVar37 = puVar37 + -1;\n                        puVar40 = puVar40 - 1;\n                        uVar33 = uVar33 - 1;\n                    } while (uVar33 != 0);\n                }\n                if (0x1f < param_3) {\n                    uVar33 = param_3 >> 2;\n                    while( true ) {\n                        if (uVar33 == 0) break;\n                        uVar33 = uVar33 - 1;\n                        puVar40[-1] = puVar37[-1];\n                        puVar37 = puVar37 + -1;\n                        puVar40 = puVar40 + -1;\n                    }\n    // switch table (4 cases) at 0x4176b0\n                    switch(param_3 & 3) {\n                    case 0:\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    case 1:\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    case 2:\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        *(puVar40 - 2) = *(puVar37 + -2);\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    case 3:\n                        *(puVar40 - 1) = *(puVar37 + -1);\n                        *(puVar40 - 2) = *(puVar37 + -2);\n                        *(puVar40 - 3) = *(puVar37 + -3);\n                        return CONCAT44(param_3, param_1) & 0x3ffffffff;\n                    }\n                }\n            }\n            else {\n                while (puVar38 = puVar37,  puVar41 = puVar40,  (puVar40 & 0xf) != 0) {\n                    puVar37 = puVar37 + -1;\n                    puVar40 = puVar40 + -1;\n                    *puVar40 = *puVar37;\n                    param_3 = param_3 - 1;\n                }\n                do {\n                    puVar37 = puVar38;\n                    puVar40 = puVar41;\n                    if (param_3 < 0x80) break;\n                    puVar37 = puVar38 + -0x20;\n                    puVar40 = puVar41 + -0x20;\n                    uVar42 = puVar38[-0x1f];\n                    uVar43 = puVar38[-0x1e];\n                    uVar44 = puVar38[-0x1d];\n                    uVar4 = puVar38[-0x1c];\n                    uVar5 = puVar38[-0x1b];\n                    uVar6 = puVar38[-0x1a];\n                    uVar7 = puVar38[-0x19];\n                    uVar8 = puVar38[-0x18];\n                    uVar9 = puVar38[-0x17];\n                    uVar10 = puVar38[-0x16];\n                    uVar11 = puVar38[-0x15];\n                    uVar12 = puVar38[-0x14];\n                    uVar13 = puVar38[-0x13];\n                    uVar14 = puVar38[-0x12];\n                    uVar15 = puVar38[-0x11];\n                    uVar16 = puVar38[-0x10];\n                    uVar17 = puVar38[-0xf];\n                    uVar18 = puVar38[-0xe];\n                    uVar19 = puVar38[-0xd];\n                    uVar20 = puVar38[-0xc];\n                    uVar21 = puVar38[-0xb];\n                    uVar22 = puVar38[-10];\n                    uVar23 = puVar38[-9];\n                    uVar24 = puVar38[-8];\n                    uVar25 = puVar38[-7];\n                    uVar26 = puVar38[-6];\n                    uVar27 = puVar38[-5];\n                    uVar28 = puVar38[-4];\n                    uVar29 = puVar38[-3];\n                    uVar30 = puVar38[-2];\n                    uVar31 = puVar38[-1];\n                    *puVar40 = *puVar37;\n                    puVar41[-0x1f] = uVar42;\n                    puVar41[-0x1e] = uVar43;\n                    puVar41[-0x1d] = uVar44;\n                    puVar41[-0x1c] = uVar4;\n                    puVar41[-0x1b] = uVar5;\n                    puVar41[-0x1a] = uVar6;\n                    puVar41[-0x19] = uVar7;\n                    puVar41[-0x18] = uVar8;\n                    puVar41[-0x17] = uVar9;\n                    puVar41[-0x16] = uVar10;\n                    puVar41[-0x15] = uVar11;\n                    puVar41[-0x14] = uVar12;\n                    puVar41[-0x13] = uVar13;\n                    puVar41[-0x12] = uVar14;\n                    puVar41[-0x11] = uVar15;\n                    puVar41[-0x10] = uVar16;\n                    puVar41[-0xf] = uVar17;\n                    puVar41[-0xe] = uVar18;\n                    puVar41[-0xd] = uVar19;\n                    puVar41[-0xc] = uVar20;\n                    puVar41[-0xb] = uVar21;\n                    puVar41[-10] = uVar22;\n                    puVar41[-9] = uVar23;\n                    puVar41[-8] = uVar24;\n                    puVar41[-7] = uVar25;\n                    puVar41[-6] = uVar26;\n                    puVar41[-5] = uVar27;\n                    puVar41[-4] = uVar28;\n                    puVar41[-3] = uVar29;\n                    puVar41[-2] = uVar30;\n                    puVar41[-1] = uVar31;\n                    param_3 = param_3 - 0x80;\n                    puVar38 = puVar37;\n                    puVar41 = puVar40;\n                } while ((param_3 & 0xffffff80) != 0);\n                puVar38 = puVar37;\n                puVar41 = puVar40;\n                if (0x1f < param_3) {\n                    do {\n                        puVar37 = puVar38 + -8;\n                        puVar40 = puVar41 + -8;\n                        uVar42 = puVar38[-7];\n                        uVar43 = puVar38[-6];\n                        uVar44 = puVar38[-5];\n                        uVar4 = puVar38[-4];\n                        uVar5 = puVar38[-3];\n                        uVar6 = puVar38[-2];\n                        uVar7 = puVar38[-1];\n                        *puVar40 = *puVar37;\n                        puVar41[-7] = uVar42;\n                        puVar41[-6] = uVar43;\n                        puVar41[-5] = uVar44;\n                        puVar41[-4] = uVar4;\n                        puVar41[-3] = uVar5;\n                        puVar41[-2] = uVar6;\n                        puVar41[-1] = uVar7;\n                        param_3 = param_3 - 0x20;\n                        puVar38 = puVar37;\n                        puVar41 = puVar40;\n                    } while ((param_3 & 0xffffffe0) != 0);\n                }\n            }\n        }\n        for (; (param_3 & 0xfffffffc) != 0; param_3 = param_3 - 4) {\n            puVar40 = puVar40 + -1;\n            puVar37 = puVar37 + -1;\n            *puVar40 = *puVar37;\n        }\n        for (; param_3 != 0; param_3 = param_3 - 1) {\n            puVar40 = puVar40 - 1;\n            puVar37 = puVar37 + -1;\n            *puVar40 = *puVar37;\n        }\n        return CONCAT44(uVar33, param_1);\n    }\n    uVar33 = param_3;\n    puVar39 = param_1;\n    if (0x1f < param_3) {\n        if (param_3 < 0x80) {\n            if ((*0x475040 >> 1 & 1) != 0) {\ncode_r0x0041786d:\n                if (uVar33 == 0) goto code_r0x004178d0;\n                for (param_3 = uVar33 >> 5; param_3 != 0; param_3 = param_3 - 1) {\n                    uVar42 = *(param_2 + 4);\n                    uVar43 = *(param_2 + 1);\n                    uVar44 = *(param_2 + 0xc);\n                    uVar4 = *(param_2 + 2);\n                    uVar5 = *(param_2 + 0x14);\n                    uVar6 = *(param_2 + 3);\n                    uVar7 = *(param_2 + 0x1c);\n                    *puVar39 = *param_2;\n                    *(puVar39 + 4) = uVar42;\n                    *(puVar39 + 1) = uVar43;\n                    *(puVar39 + 0xc) = uVar44;\n                    *(puVar39 + 2) = uVar4;\n                    *(puVar39 + 0x14) = uVar5;\n                    *(puVar39 + 3) = uVar6;\n                    *(puVar39 + 0x1c) = uVar7;\n                    param_2 = param_2 + 4;\n                    puVar39 = puVar39 + 4;\n                }\n                goto code_r0x0041789b;\n            }\ncode_r0x004175c7:\n            uVar33 = param_1 & 3;\n            while (uVar33 != 0) {\n                *puVar39 = *param_2;\n                param_3 = param_3 - 1;\n                param_2 = param_2 + 1;\n                puVar39 = puVar39 + 1;\n                uVar33 = puVar39 & 3;\n            }\n        }\n        else {\n            if ((*0x4763ac >> 1 & 1) != 0) {\n                for (; uVar33 != 0; uVar33 = uVar33 - 1) {\n                    *puVar39 = *param_2;\n                    param_2 = param_2 + 1;\n                    puVar39 = puVar39 + 1;\n                }\n                return CONCAT44(param_3, param_1);\n            }\n            if ((((param_1 ^ param_2) & 0xf) == 0) && ((*0x475040 >> 1 & 1) != 0)) {\n                if ((param_2 & 0xf) != 0) {\n                    uVar34 = 0x10 - (param_2 & 0xf);\n                    param_3 = param_3 - uVar34;\n                    for (uVar33 = uVar34 & 3; uVar33 != 0; uVar33 = uVar33 - 1) {\n                        *puVar39 = *param_2;\n                        param_2 = param_2 + 1;\n                        puVar39 = puVar39 + 1;\n                    }\n                    for (uVar34 = uVar34 >> 2; uVar34 != 0; uVar34 = uVar34 - 1) {\n                        *puVar39 = *param_2;\n                        param_2 = param_2 + 4;\n                        puVar39 = puVar39 + 4;\n                    }\n                }\n                uVar33 = param_3 & 0x7f;\n                for (param_3 = param_3 >> 7; param_3 != 0; param_3 = param_3 - 1) {\n                    uVar42 = *(param_2 + 4);\n                    uVar43 = *(param_2 + 1);\n                    uVar44 = *(param_2 + 0xc);\n                    uVar4 = *(param_2 + 2);\n                    uVar5 = *(param_2 + 0x14);\n                    uVar6 = *(param_2 + 3);\n                    uVar7 = *(param_2 + 0x1c);\n                    uVar8 = *(param_2 + 4);\n                    uVar9 = *(param_2 + 0x24);\n                    uVar10 = *(param_2 + 5);\n                    uVar11 = *(param_2 + 0x2c);\n                    uVar12 = *(param_2 + 6);\n                    uVar13 = *(param_2 + 0x34);\n                    uVar14 = *(param_2 + 7);\n                    uVar15 = *(param_2 + 0x3c);\n                    *puVar39 = *param_2;\n                    *(puVar39 + 4) = uVar42;\n                    *(puVar39 + 1) = uVar43;\n                    *(puVar39 + 0xc) = uVar44;\n                    *(puVar39 + 2) = uVar4;\n                    *(puVar39 + 0x14) = uVar5;\n                    *(puVar39 + 3) = uVar6;\n                    *(puVar39 + 0x1c) = uVar7;\n                    *(puVar39 + 4) = uVar8;\n                    *(puVar39 + 0x24) = uVar9;\n                    *(puVar39 + 5) = uVar10;\n                    *(puVar39 + 0x2c) = uVar11;\n                    *(puVar39 + 6) = uVar12;\n                    *(puVar39 + 0x34) = uVar13;\n                    *(puVar39 + 7) = uVar14;\n                    *(puVar39 + 0x3c) = uVar15;\n                    uVar42 = *(param_2 + 0x44);\n                    uVar43 = *(param_2 + 9);\n                    uVar44 = *(param_2 + 0x4c);\n                    uVar4 = *(param_2 + 10);\n                    uVar5 = *(param_2 + 0x54);\n                    uVar6 = *(param_2 + 0xb);\n                    uVar7 = *(param_2 + 0x5c);\n                    uVar8 = *(param_2 + 0xc);\n                    uVar9 = *(param_2 + 100);\n                    uVar10 = *(param_2 + 0xd);\n                    uVar11 = *(param_2 + 0x6c);\n                    uVar12 = *(param_2 + 0xe);\n                    uVar13 = *(param_2 + 0x74);\n                    uVar14 = *(param_2 + 0xf);\n                    uVar15 = *(param_2 + 0x7c);\n                    *(puVar39 + 8) = *(param_2 + 8);\n                    *(puVar39 + 0x44) = uVar42;\n                    *(puVar39 + 9) = uVar43;\n                    *(puVar39 + 0x4c) = uVar44;\n                    *(puVar39 + 10) = uVar4;\n                    *(puVar39 + 0x54) = uVar5;\n                    *(puVar39 + 0xb) = uVar6;\n                    *(puVar39 + 0x5c) = uVar7;\n                    *(puVar39 + 0xc) = uVar8;\n                    *(puVar39 + 100) = uVar9;\n                    *(puVar39 + 0xd) = uVar10;\n                    *(puVar39 + 0x6c) = uVar11;\n                    *(puVar39 + 0xe) = uVar12;\n                    *(puVar39 + 0x74) = uVar13;\n                    *(puVar39 + 0xf) = uVar14;\n                    *(puVar39 + 0x7c) = uVar15;\n                    param_2 = param_2 + 0x10;\n                    puVar39 = puVar39 + 0x10;\n                }\n                goto code_r0x0041786d;\n            }\n            if (((*0x4763ac & 1) == 0) || ((param_1 & 3) != 0)) goto code_r0x004175c7;\n            if ((param_2 & 3) == 0) {\n                if ((param_1 >> 2 & 1) != 0) {\n                    uVar42 = *param_2;\n                    param_3 = param_3 - 4;\n                    param_2 = param_2 + 4;\n                    *param_1 = uVar42;\n                    param_1 = param_1 + 4;\n                }\n                if ((param_1 >> 3 & 1) != 0) {\n                    uVar1 = *param_2;\n                    param_3 = param_3 - 8;\n                    param_2 = param_2 + 1;\n                    *param_1 = uVar1;\n                    param_1 = param_1 + 1;\n                }\n                if ((param_2 & 7) == 0) {\n                    puVar39 = param_2 + -1;\n                    uVar42 = *param_2;\n                    uVar43 = *(param_2 + 4);\n                    do {\n                        puVar36 = puVar39;\n                        uVar5 = *(puVar36 + 4);\n                        uVar6 = *(puVar36 + 0x24);\n                        param_3 = param_3 - 0x30;\n                        auVar2 = *(puVar36 + 2);\n                        uVar44 = *(puVar36 + 7);\n                        uVar4 = *(puVar36 + 0x3c);\n                        auVar3 = *(puVar36 + 4);\n                        *(param_1 + 1) = uVar42;\n                        *(param_1 + 0xc) = uVar43;\n                        *(param_1 + 2) = uVar5;\n                        *(param_1 + 0x14) = uVar6;\n                        *(param_1 + 2) = SUB3216(auVar2 >> 0x40, 0);\n                        *(param_1 + 4) = SUB3216(auVar3 >> 0x40, 0);\n                        param_1 = param_1 + 6;\n                        puVar39 = puVar36 + 6;\n                        uVar42 = uVar44;\n                        uVar43 = uVar4;\n                    } while (0x2f < param_3);\n                    puVar36 = puVar36 + 7;\n                }\n                else if ((param_2 >> 3 & 1) == 0) {\n                    iVar32 = param_2 + -4;\n                    uVar42 = *param_2;\n                    uVar43 = *(param_2 + 4);\n                    uVar44 = *(param_2 + 1);\n                    do {\n                        iVar35 = iVar32;\n                        uVar7 = *(iVar35 + 0x20);\n                        param_3 = param_3 - 0x30;\n                        auVar2 = *(iVar35 + 0x10);\n                        uVar4 = *(iVar35 + 0x34);\n                        uVar5 = *(iVar35 + 0x38);\n                        uVar6 = *(iVar35 + 0x3c);\n                        auVar3 = *(iVar35 + 0x20);\n                        *(param_1 + 4) = uVar42;\n                        *(param_1 + 1) = uVar43;\n                        *(param_1 + 0xc) = uVar44;\n                        *(param_1 + 2) = uVar7;\n                        *(param_1 + 2) = SUB3216(auVar2 >> 0x20, 0);\n                        *(param_1 + 4) = SUB3216(auVar3 >> 0x20, 0);\n                        param_1 = param_1 + 6;\n                        iVar32 = iVar35 + 0x30;\n                        uVar42 = uVar4;\n                        uVar43 = uVar5;\n                        uVar44 = uVar6;\n                    } while (0x2f < param_3);\n                    puVar36 = iVar35 + 0x34;\n                }\n                else {\n                    iVar32 = param_2 + -0xc;\n                    uVar42 = *param_2;\n                    do {\n                        iVar35 = iVar32;\n                        uVar44 = *(iVar35 + 0x20);\n                        uVar4 = *(iVar35 + 0x24);\n                        uVar5 = *(iVar35 + 0x28);\n                        param_3 = param_3 - 0x30;\n                        auVar2 = *(iVar35 + 0x10);\n                        uVar43 = *(iVar35 + 0x3c);\n                        auVar3 = *(iVar35 + 0x20);\n                        *(param_1 + 0xc) = uVar42;\n                        *(param_1 + 2) = uVar44;\n                        *(param_1 + 0x14) = uVar4;\n                        *(param_1 + 3) = uVar5;\n                        *(param_1 + 2) = SUB3216(auVar2 >> 0x60, 0);\n                        *(param_1 + 4) = SUB3216(auVar3 >> 0x60, 0);\n                        param_1 = param_1 + 6;\n                        iVar32 = iVar35 + 0x30;\n                        uVar42 = uVar43;\n                    } while (0x2f < param_3);\n                    puVar36 = iVar35 + 0x3c;\n                }\n                for (; 0xf < param_3; param_3 = param_3 - 0x10) {\n                    uVar42 = *puVar36;\n                    uVar43 = *(puVar36 + 4);\n                    uVar44 = *(puVar36 + 1);\n                    uVar4 = *(puVar36 + 0xc);\n                    puVar36 = puVar36 + 2;\n                    *param_1 = uVar42;\n                    *(param_1 + 4) = uVar43;\n                    *(param_1 + 1) = uVar44;\n                    *(param_1 + 0xc) = uVar4;\n                    param_1 = param_1 + 2;\n                }\n                if ((param_3 >> 2 & 1) != 0) {\n                    uVar42 = *puVar36;\n                    param_3 = param_3 - 4;\n                    puVar36 = puVar36 + 4;\n                    *param_1 = uVar42;\n                    param_1 = param_1 + 4;\n                }\n                if ((param_3 >> 3 & 1) != 0) {\n                    param_3 = param_3 - 8;\n                    *param_1 = *puVar36;\n                }\n    // WARNING: Could not recover jumptable at 0x004175c5. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (4 cases) at 0x417604\n                uVar45 = (**(param_3 * 4 + 0x417604))();\n                return uVar45;\n            }\n        }\n        uVar33 = param_3;\n        if (0x1f < param_3) {\n            for (uVar33 = param_3 >> 2; uVar33 != 0; uVar33 = uVar33 - 1) {\n                *puVar39 = *param_2;\n                param_2 = param_2 + 4;\n                puVar39 = puVar39 + 4;\n            }\n    // switch table (4 cases) at 0x417604\n            switch(param_3 & 3) {\n            case 0:\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            case 1:\n                *puVar39 = *param_2;\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            case 2:\n                *puVar39 = *param_2;\n                *(puVar39 + 1) = *(param_2 + 1);\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            case 3:\n                *puVar39 = *param_2;\n                *(puVar39 + 1) = *(param_2 + 1);\n                *(puVar39 + 2) = *(param_2 + 2);\n                return CONCAT44(param_3, param_1) & 0x3ffffffff;\n            }\n        }\n    }\ncode_r0x0041789b:\n    if ((uVar33 & 0x1f) != 0) {\n        for (uVar34 = (uVar33 & 0x1f) >> 2; uVar34 != 0; uVar34 = uVar34 - 1) {\n            param_3 = *param_2;\n            *puVar39 = param_3;\n            puVar39 = puVar39 + 4;\n            param_2 = param_2 + 4;\n        }\n        for (uVar33 = uVar33 & 3; uVar33 != 0; uVar33 = uVar33 - 1) {\n            *puVar39 = *param_2;\n            param_2 = param_2 + 1;\n            puVar39 = puVar39 + 1;\n        }\n    }\ncode_r0x004178d0:\n    return CONCAT44(param_3, param_1);\n}\n",
        "token_count": 6177
    },
    "00403d4b": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403d4b(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    cVar2 = fcn.00401023();\n    if (cVar2 == '\\0') {\ncode_r0x004373cc:\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.0040383c();\n        if (cVar2 != '\\0') {\n            iVar6 = param_1[9];\n            if (iVar6 < 0) {\n                if ((*(param_1 + 0x2d) == 'a') || (*(param_1 + 0x2d) == 'A')) {\n                    iVar6 = 0xd;\n                }\n                else {\n                    iVar6 = 6;\n                }\n                param_1[9] = iVar6;\n            }\n            else if ((iVar6 == 0) && ((*(param_1 + 0x2d) == 'g' || (iVar6 = 0,  *(param_1 + 0x2d) == 'G')))) {\n                param_1[9] = 1;\n                iVar6 = 1;\n            }\n            cVar2 = fcn.00404345(iVar6 + 0x15d, param_1[2]);\n            if (cVar2 == '\\0') {\n                iVar6 = fcn.00403d37();\n                param_1[9] = iVar6 + -0x15d;\n            }\n            puVar3 = param_1[0x110];\n            if (param_1[0x110] == NULL) {\n                puVar3 = param_1 + 0xf;\n            }\n            var_10h = 0;\n            var_ch = 0;\n            param_1[0xc] = puVar3;\n            cVar2 = fcn.00402388(&var_10h);\n            if (cVar2 == '\\0') goto code_r0x004373cc;\n            cVar2 = *(param_1 + 0x2d);\n            var_4h = fcn.00403d37();\n            var_8h = fcn.0040245a();\n            uVar4 = fcn.00403d37();\n            puVar3 = param_1 + 0xf;\n            if (param_1[0x110] != NULL) {\n                puVar3 = param_1[0x110];\n            }\n            fcn.00402e5f(&var_10h, puVar3, uVar4, var_8h, var_4h, cVar2, param_1[9], *param_1, param_1[1], 1, param_1[2]\n                        );\n            if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n                iVar6 = param_1[2];\n                if (*(iVar6 + 0x14) == '\\0') {\n                    fcn.004024f0();\n                }\n                fcn.00401b63(param_1[0xc], iVar6 + 0xc);\n            }\n            if (((*(param_1 + 0x2d) == 'g') || (*(param_1 + 0x2d) == 'G')) && ((param_1[7] >> 5 & 1) == 0)) {\n                iVar6 = param_1[2];\n                if (*(iVar6 + 0x14) == '\\0') {\n                    fcn.004024f0();\n                }\n                fcn.00403e36(param_1[0xc], iVar6 + 0xc);\n            }\n            pcVar5 = param_1[0xc];\n            cVar2 = *pcVar5;\n            if (cVar2 == '-') {\n                param_1[7] = param_1[7] | 0x40;\n                pcVar5 = pcVar5 + 1;\n                param_1[0xc] = pcVar5;\n                cVar2 = *pcVar5;\n            }\n            if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n                param_1[7] = param_1[7] & 0xfffffff7;\n                *(param_1 + 0x2d) = 0x73;\n            }\n            pcVar1 = pcVar5 + 1;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            param_1[0xd] = pcVar5 - pcVar1;\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 1140
    },
    "00403e22": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403e22(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x1c) >> 5 & 1) != 0) {\n        *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x80;\n    }\n    fcn.00403f6c(0);\n    return;\n}\n",
        "token_count": 93
    },
    "00404381": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404381(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    cVar2 = fcn.00403db4();\n    if (cVar2 == '\\0') {\ncode_r0x004379ea:\n        uVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.00402f18();\n        if (cVar2 != '\\0') {\n            iVar6 = param_1[9];\n            if (iVar6 < 0) {\n                if ((*(param_1 + 0x2e) == 0x61) || (*(param_1 + 0x2e) == 0x41)) {\n                    iVar6 = 0xd;\n                }\n                else {\n                    iVar6 = 6;\n                }\n                param_1[9] = iVar6;\n            }\n            else if ((iVar6 == 0) && ((*(param_1 + 0x2e) == 0x67 || (iVar6 = 0,  *(param_1 + 0x2e) == 0x47)))) {\n                param_1[9] = 1;\n                iVar6 = 1;\n            }\n            cVar2 = fcn.00404345(iVar6 + 0x15d, param_1[2]);\n            if (cVar2 == '\\0') {\n                iVar6 = fcn.00403d37();\n                param_1[9] = iVar6 + -0x15d;\n            }\n            puVar3 = param_1[0x110];\n            if (param_1[0x110] == NULL) {\n                puVar3 = param_1 + 0xf;\n            }\n            var_10h = 0;\n            var_ch = 0;\n            param_1[0xc] = puVar3;\n            cVar2 = fcn.00403c51(&var_10h);\n            if (cVar2 == '\\0') goto code_r0x004379ea;\n            cVar2 = *(param_1 + 0x2e);\n            var_4h = fcn.00403d37();\n            var_8h = fcn.0040245a();\n            uVar4 = fcn.00403d37();\n            puVar3 = param_1 + 0xf;\n            if (param_1[0x110] != NULL) {\n                puVar3 = param_1[0x110];\n            }\n            fcn.00402e5f(&var_10h, puVar3, uVar4, var_8h, var_4h, cVar2, param_1[9], *param_1, param_1[1], 1, param_1[2]\n                        );\n            if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n                iVar6 = param_1[2];\n                if (*(iVar6 + 0x14) == '\\0') {\n                    fcn.004024f0();\n                }\n                fcn.00401b63(param_1[0xc], iVar6 + 0xc);\n            }\n            if (((*(param_1 + 0x2e) == 0x67) || (*(param_1 + 0x2e) == 0x47)) && ((param_1[7] >> 5 & 1) == 0)) {\n                iVar6 = param_1[2];\n                if (*(iVar6 + 0x14) == '\\0') {\n                    fcn.004024f0();\n                }\n                fcn.00403e36(param_1[0xc], iVar6 + 0xc);\n            }\n            pcVar5 = param_1[0xc];\n            cVar2 = *pcVar5;\n            if (cVar2 == '-') {\n                param_1[7] = param_1[7] | 0x40;\n                pcVar5 = pcVar5 + 1;\n                param_1[0xc] = pcVar5;\n                cVar2 = *pcVar5;\n            }\n            if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n                param_1[7] = param_1[7] & 0xfffffff7;\n                *(param_1 + 0x2e) = 0x73;\n            }\n            pcVar1 = pcVar5 + 1;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            param_1[0xd] = pcVar5 - pcVar1;\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 1150
    },
    "0040459d": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040459d(uint *param_1)\n\n{\n    char *pcVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint *puVar4;\n    uint arg_10h;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    param_1[7] = param_1[7] | 0x10;\n    iVar7 = param_1[9];\n    if (iVar7 < 0) {\n        if ((*(param_1 + 0x2e) == 0x61) || (*(param_1 + 0x2e) == 0x41)) {\n            iVar7 = 0xd;\n        }\n        else {\n            iVar7 = 6;\n        }\n        param_1[9] = iVar7;\n    }\n    else if ((iVar7 == 0) && ((*(param_1 + 0x2e) == 0x67 || (iVar7 = 0,  *(param_1 + 0x2e) == 0x47)))) {\n        param_1[9] = 1;\n        iVar7 = 1;\n    }\n    cVar3 = fcn.00404345(iVar7 + 0x15d, param_1[2]);\n    if (cVar3 == '\\0') {\n        iVar7 = fcn.00403d37();\n        iVar7 = iVar7 + -0x15d;\n        param_1[9] = iVar7;\n    }\n    else {\n        iVar7 = param_1[9];\n    }\n    puVar4 = param_1[0x110];\n    if (param_1[0x110] == NULL) {\n        puVar4 = param_1 + 0xf;\n    }\n    param_1[0xc] = puVar4;\n    param_1[4] = param_1[4] + 8;\n    var_14h = *(param_1[4] + -8);\n    var_10h = *(param_1[4] + -4);\n    var_4h = *(param_1 + 0x2e);\n    var_8h = fcn.00403d37();\n    var_ch = fcn.0040245a();\n    arg_10h = fcn.00403d37();\n    puVar4 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar4 = param_1[0x110];\n    }\n    fcn.00402e5f(&var_14h, puVar4, arg_10h, var_ch, var_8h, var_4h, iVar7, *param_1, param_1[1], 1, param_1[2]);\n    if (((param_1[7] >> 5 & 1) != 0) && (param_1[9] == 0)) {\n        iVar7 = param_1[2];\n        if (*(iVar7 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        fcn.00401b63(param_1[0xc], iVar7 + 0xc);\n    }\n    uVar2 = *(param_1 + 0x2e);\n    uVar5 = uVar2;\n    if (((uVar2 == 0x67) || (uVar2 == 0x47)) && (uVar5 = param_1[7] >> 5,  (uVar5 & 1) == 0)) {\n        iVar7 = param_1[2];\n        if (*(iVar7 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        uVar5 = fcn.00403e36(param_1[0xc], iVar7 + 0xc);\n    }\n    pcVar6 = param_1[0xc];\n    cVar3 = *pcVar6;\n    uVar5 = uVar5 & 0xffffff00;\n    if (cVar3 == '-') {\n        param_1[7] = param_1[7] | 0x40;\n        pcVar6 = pcVar6 + 1;\n        param_1[0xc] = pcVar6;\n        cVar3 = *pcVar6;\n    }\n    if (((cVar3 == 'i') || (cVar3 == 'I')) || ((cVar3 == 'n' || (cVar3 == 'N')))) {\n        param_1[7] = param_1[7] & 0xfffffff7;\n        uVar5 = 0;\n        *(param_1 + 0x2e) = 0x73;\n    }\n    pcVar1 = pcVar6 + 1;\n    do {\n        cVar3 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar3 != '\\0');\n    param_1[0xd] = pcVar6 - pcVar1;\n    return CONCAT31(uVar5 >> 8, 1);\n}\n",
        "token_count": 1166
    },
    "00401055": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401055(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00401e3d(*(in_ECX + 0x28));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00401541(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403620(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00403913(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00401366(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00404138(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403d32(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00403319(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403b1b(&var_ch);\n        }\n    }\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.0040383c();\n    if (cVar2 != '\\0') {\n        uVar3 = *(in_ECX + 0x1c);\n        arg_ch = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x1c) = uVar3;\n            arg_ch = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *(in_ECX + 0x1c) = uVar3 & 0xfffffff7;\n            fcn.00404345(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | arg_ch) == 0) {\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 0;\n        if (var_4h == 8) {\n            fcn.0040312a(arg_8h_00, arg_ch, arg_8h);\n        }\n        else {\n            fcn.0040394f(arg_8h_00, arg_8h);\n        }\n        if (((*(in_ECX + 0x1c) >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != '0')))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1057
    },
    "0040105f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040105f(int32_t arg_8h, uint16_t *arg_ch, uint16_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint16_t *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint16_t *puVar5;\n    uint16_t uVar6;\n    uint32_t arg_8h_00;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar1 = arg_ch;\n    cVar2 = fcn.00401d57();\n    if (cVar2 == '\\0') {\ncode_r0x0042236d:\n        if (arg_10h != NULL) {\n            *arg_10h = arg_ch;\n        }\n        return 0;\n    }\n    if ((arg_14h != 0) && ((arg_14h < 2 || (0x24 < arg_14h)))) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_8h);\n        goto code_r0x0042236d;\n    }\n    var_4h = 0;\n    arg_18h = arg_18h & 0xff;\n    arg_8h_00 = *arg_ch;\n    puVar5 = arg_ch + 1;\n    if (arg_8h_00 == 0x2d) {\n        arg_18h = arg_18h | 2;\ncode_r0x004223ab:\n        arg_8h_00 = *puVar5;\n        puVar5 = arg_ch + 2;\n    }\n    else if (arg_8h_00 == 0x2b) goto code_r0x004223ab;\n    var_8h = 0x660;\n    arg_ch = puVar5;\n    if ((arg_14h != 0) && (arg_14h != 0x10)) goto code_r0x004226a2;\n    uVar6 = arg_8h_00;\n    if (uVar6 < 0x30) goto code_r0x0042262f;\n    iVar3 = 0x30;\n    if (uVar6 < 0x3a) {\ncode_r0x004224d2:\n        iVar3 = -iVar3;\ncode_r0x0042262a:\n        iVar3 = arg_8h_00 + iVar3;\n        if (iVar3 == -1) goto code_r0x0042262f;\ncode_r0x00422657:\n        if (iVar3 == 0) {\n            uVar4 = *puVar5;\n            if ((uVar4 == 0x78) || (uVar4 == 0x58)) {\n                if (arg_14h == 0) {\n                    arg_14h = 0x10;\n                }\n                arg_8h_00 = puVar5[1];\n                arg_ch = puVar5 + 2;\n            }\n            else {\n                if (arg_14h == 0) {\n                    arg_14h = 8;\n                }\n                fcn.00402315(uVar4);\n                arg_ch = puVar5 + 1;\n            }\n            goto code_r0x004226a2;\n        }\n    }\n    else {\n        if (uVar6 < 0xff10) {\n            if ((0x65f < uVar6) &&\n               ((iVar3 = var_8h,  uVar6 < 0x66a ||\n                ((iVar3 = 0x6f0,  0x6ef < uVar6 &&\n                 ((uVar6 < 0x6fa ||\n                  ((iVar3 = 0x966,  0x965 < uVar6 &&\n                   ((uVar6 < 0x970 ||\n                    ((iVar3 = 0x9e6,  0x9e5 < uVar6 &&\n                     ((uVar6 < 0x9f0 ||\n                      ((iVar3 = 0xa66,  0xa65 < uVar6 &&\n                       ((uVar6 < 0xa70 ||\n                        ((iVar3 = 0xae6,  0xae5 < uVar6 &&\n                         ((uVar6 < 0xaf0 ||\n                          ((iVar3 = 0xb66,  0xb65 < uVar6 &&\n                           ((uVar6 < 0xb70 ||\n                            ((iVar3 = 0xc66,  0xc65 < uVar6 &&\n                             ((uVar6 < 0xc70 ||\n                              ((iVar3 = 0xce6,  0xce5 < uVar6 &&\n                               ((uVar6 < 0xcf0 ||\n                                ((iVar3 = 0xd66,  0xd65 < uVar6 &&\n                                 ((uVar6 < 0xd70 ||\n                                  ((iVar3 = 0xe50,  0xe4f < uVar6 &&\n                                   ((uVar6 < 0xe5a ||\n                                    ((iVar3 = 0xed0,  0xecf < uVar6 &&\n                                     ((uVar6 < 0xeda ||\n                                      ((iVar3 = 0xf20,  0xf1f < uVar6 &&\n                                       ((uVar6 < 0xf2a ||\n                                        ((iVar3 = 0x1040,  0x103f < uVar6 &&\n                                         ((uVar6 < 0x104a ||\n                                          ((iVar3 = 0x17e0,  0x17df < uVar6 &&\n                                           ((uVar6 < 0x17ea || ((iVar3 = 0x1810,  0x180f < uVar6 && (uVar6 < 0x181a)))))\n                                           )))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n            goto code_r0x004224d2;\n        }\n        else if (uVar6 < 0xff1a) {\n            iVar3 = -0xff10;\n            goto code_r0x0042262a;\n        }\ncode_r0x0042262f:\n        if (((0x40 < arg_8h_00) && (arg_8h_00 < 0x5b)) || (arg_8h_00 - 0x61 < 0x1a)) {\n            uVar4 = arg_8h_00;\n            if (arg_8h_00 - 0x61 < 0x1a) {\n                uVar4 = arg_8h_00 - 0x20;\n            }\n            iVar3 = uVar4 - 0x37;\n            goto code_r0x00422657;\n        }\n    }\n    if (arg_14h == 0) {\n        arg_14h = 10;\n    }\ncode_r0x004226a2:\n    do {\n        iVar3 = 0x30;\n        uVar6 = arg_8h_00;\n        if (uVar6 < 0x30) goto code_r0x00422803;\n        if (uVar6 < 0x3a) {\ncode_r0x004227f9:\n            uVar4 = arg_8h_00 - iVar3;\n            if (uVar4 == 0xffffffff) goto code_r0x00422803;\n        }\n        else {\n            iVar3 = 0xff10;\n            if (uVar6 < 0xff10) {\n                iVar3 = 0x660;\n                if (0x65f < uVar6) {\n                    if (uVar6 < 0x66a) goto code_r0x004227f9;\n                    iVar3 = 0x6f0;\n                    if (0x6ef < uVar6) {\n                        if (uVar6 < 0x6fa) goto code_r0x004227f9;\n                        iVar3 = 0x966;\n                        if (0x965 < uVar6) {\n                            if (uVar6 < 0x970) goto code_r0x004227f9;\n                            iVar3 = 0x9e6;\n                            if (0x9e5 < uVar6) {\n                                if (uVar6 < 0x9f0) goto code_r0x004227f9;\n                                iVar3 = 0xa66;\n                                if (0xa65 < uVar6) {\n                                    if (uVar6 < 0xa70) goto code_r0x004227f9;\n                                    iVar3 = 0xae6;\n                                    if (0xae5 < uVar6) {\n                                        if (uVar6 < 0xaf0) goto code_r0x004227f9;\n                                        iVar3 = 0xb66;\n                                        if (0xb65 < uVar6) {\n                                            if (uVar6 < 0xb70) goto code_r0x004227f9;\n                                            iVar3 = 0xc66;\n                                            if (0xc65 < uVar6) {\n                                                if (uVar6 < 0xc70) goto code_r0x004227f9;\n                                                iVar3 = 0xce6;\n                                                if (0xce5 < uVar6) {\n                                                    if (uVar6 < 0xcf0) goto code_r0x004227f9;\n                                                    iVar3 = 0xd66;\n                                                    if (0xd65 < uVar6) {\n                                                        if (uVar6 < 0xd70) goto code_r0x004227f9;\n                                                        iVar3 = 0xe50;\n                                                        if (0xe4f < uVar6) {\n                                                            if (uVar6 < 0xe5a) goto code_r0x004227f9;\n                                                            iVar3 = 0xed0;\n                                                            if (0xecf < uVar6) {\n                                                                if (uVar6 < 0xeda) goto code_r0x004227f9;\n                                                                iVar3 = 0xf20;\n                                                                if (0xf1f < uVar6) {\n                                                                    if (uVar6 < 0xf2a) goto code_r0x004227f9;\n                                                                    iVar3 = 0x1040;\n                                                                    if (0x103f < uVar6) {\n                                                                        if (uVar6 < 0x104a) goto code_r0x004227f9;\n                                                                        iVar3 = 0x17e0;\n                                                                        if (0x17df < uVar6) {\n                                                                            if (uVar6 < 0x17ea) goto code_r0x004227f9;\n                                                                            iVar3 = 0x1810;\n                                                                            if (0x180f < uVar6) {\n                                                                                var_84h._0_2_ = 0x181a;\n                                                                                goto code_r0x004227f7;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                var_88h._0_2_ = 0xff1a;\n                var_84h._0_2_ = var_88h;\ncode_r0x004227f7:\n                if (uVar6 < var_84h) goto code_r0x004227f9;\n            }\ncode_r0x00422803:\n            if (((arg_8h_00 < 0x41) || (0x5a < arg_8h_00)) && (0x19 < arg_8h_00 - 0x61)) {\n                uVar4 = 0xffffffff;\n            }\n            else {\n                uVar4 = arg_8h_00;\n                if (arg_8h_00 - 0x61 < 0x1a) {\n                    uVar4 = arg_8h_00 - 0x20;\n                }\n                uVar4 = uVar4 - 0x37;\n            }\n        }\n        if (arg_14h <= uVar4) {\n            fcn.00402315(arg_8h_00);\n            if ((arg_18h & 8) == 0) {\n                if (arg_10h == NULL) {\n                    return 0;\n                }\n                *arg_10h = puVar1;\n                return 0;\n            }\n            cVar2 = fcn.004015e1(arg_18h, var_4h);\n            if (cVar2 == '\\0') {\n                if ((arg_18h & 2) != 0) {\n                    var_4h = -var_4h;\n                }\n            }\n            else {\n                *(arg_8h + 0x1c) = 1;\n                *(arg_8h + 0x18) = 0x22;\n                if ((arg_18h & 1) != 0) {\n                    if ((arg_18h & 2) == 0) {\n                        if (arg_10h != NULL) {\n                            *arg_10h = arg_ch;\n                        }\n                        return 0x7fffffff;\n                    }\n                    if (arg_10h != NULL) {\n                        *arg_10h = arg_ch;\n                    }\n                    return 0x80000000;\n                }\n                var_4h = 0xffffffff;\n            }\n            if (arg_10h != NULL) {\n                *arg_10h = arg_ch;\n                return var_4h;\n            }\n            return var_4h;\n        }\n        uVar4 = var_4h * arg_14h + uVar4;\n        arg_18h = arg_18h | (uVar4 < var_4h * arg_14h || 0xffffffff / arg_14h < var_4h) << 2 | 8;\n        arg_8h_00 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        var_4h = uVar4;\n    } while( true );\n}\n",
        "token_count": 3335
    },
    "00401091": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401091(uint8_t *arg_8h, uint8_t *arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint uVar6;\n    bool bVar7;\n    \n    iVar2 = *(arg_8h + 4);\n    if (((iVar2 == 0) || (puVar5 = iVar2 + 8,  *puVar5 == 0)) || (((*arg_8h & 0x80) != 0 && ((*arg_ch & 0x10) != 0)))) {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = 0;\n        if (iVar2 != *(arg_ch + 4)) {\n            puVar3 = *(arg_ch + 4) + 8;\n            do {\n                uVar1 = *puVar5;\n                bVar7 = uVar1 < *puVar3;\n                if (uVar1 != *puVar3) {\ncode_r0x004166cf:\n                    uVar4 = -bVar7 | 1;\n                    goto code_r0x004166d4;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar5[1];\n                bVar7 = uVar1 < puVar3[1];\n                if (uVar1 != puVar3[1]) goto code_r0x004166cf;\n                puVar5 = puVar5 + 2;\n                puVar3 = puVar3 + 2;\n            } while (uVar1 != 0);\n            uVar4 = 0;\ncode_r0x004166d4:\n            if (uVar4 != 0) {\n                return 0;\n            }\n        }\n        if ((((*arg_ch & 2) == 0) || ((*arg_8h & 8) != 0)) &&\n           ((((*arg_10h & 1) == 0 || ((*arg_8h & 1) != 0)) && (((*arg_10h & 2) == 0 || ((*arg_8h & 2) != 0)))))) {\n            uVar6 = 1;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 527
    },
    "004010af": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004010af(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x004267de;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x004267de:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00403e1d(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar1 == 8) {\n        fcn.00403ce2(arg_8h_00, var_4h, arg_8h);\n    }\n    else {\n        fcn.00403715(arg_8h_00, arg_8h);\n    }\n    piVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar3 = *(in_ECX + 0x30),  *piVar3 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar3 >> 8, 1);\n}\n",
        "token_count": 1243
    },
    "004010eb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.004010eb(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (arg_8h == 0xfffffffe) {\n        *(arg_ch + 0x20) = 0;\n        *(arg_ch + 0x24) = 1;\n        *(arg_ch + 0x1c) = 1;\n        *(arg_ch + 0x18) = 9;\n    }\n    else {\n        if (((-1 < arg_8h) && (arg_8h < *0x477458)) &&\n           ((*(*((arg_8h >> 6) * 4 + 0x4771f0) + 0x28 + (arg_8h & 0x3f) * 0x38) & 1) != 0)) {\n            var_14h = &arg_8h;\n            var_8h = arg_8h;\n            var_10h = arg_ch;\n            var_ch = arg_8h;\n            uVar1 = fcn.0045c89c(&var_ch, &var_14h);\n            return uVar1;\n        }\n        *(arg_ch + 0x24) = 1;\n        *(arg_ch + 0x20) = 0;\n        *(arg_ch + 0x1c) = 1;\n        *(arg_ch + 0x18) = 9;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_ch);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 410
    },
    "0040116d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nvoid __cdecl fcn.0040116d(int16_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint32_t *puVar8;\n    int32_t *piVar9;\n    uint *puVar10;\n    int32_t iVar11;\n    uint16_t uVar12;\n    code **ppcVar13;\n    int32_t *piVar14;\n    int32_t *piVar15;\n    bool bVar16;\n    int32_t *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    fcn.00403e4f();\n    fcn.0040396d();\n    if ((*arg_8h == 0x5a4d) && ((*(arg_8h + 0x1e) & 3) == 0)) {\n        fcn.0040396d();\n        piVar14 = *(arg_8h + 0x1e) + arg_8h;\n        if (*piVar14 == 0x4550) {\n            fcn.0040396d();\n            fcn.0040396d();\n            if ((piVar14[10] != 0) && (piVar14[0x28] != 0)) {\n                arg_8h_00 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, piVar14[0x14], 0x3000, 0x40);\n                fcn.0040396d();\n                if (arg_8h_00 != 0) {\n                    iVar3 = *(piVar14 + 5) + 0x18;\n                    fcn.0040293c(arg_8h_00, arg_8h, piVar14[0x15]);\n                    fcn.0040396d();\n                    uVar12 = 0;\n                    bVar16 = *(piVar14 + 6) != 0;\n                    while (bVar16) {\n                        iVar4 = uVar12 * 0x28;\n                        fcn.0040293c(*(piVar14 + iVar4 + 0xc + iVar3) + arg_8h_00, \n                                     *(piVar14 + iVar4 + 0x14 + iVar3) + arg_8h, *(piVar14 + iVar4 + 0x10 + iVar3));\n                        uVar12 = uVar12 + 1;\n                        bVar16 = uVar12 < *(piVar14 + 6);\n                    }\n                    fcn.0040396d();\n                    if (piVar14[0x21] != 0) {\n                        iVar4 = (piVar14[0x20] + arg_8h_00)[3];\n                        piVar9 = piVar14[0x20] + arg_8h_00;\n                        while (iVar4 != 0) {\n                            iVar4 = (**0x475f68)(piVar9[3] + arg_8h_00);\n                            if (iVar4 != 0) {\n                                iVar11 = piVar9[4];\n                                puVar10 = iVar11 + arg_8h_00;\n                                if (*piVar9 != 0) {\n                                    iVar11 = *piVar9;\n                                }\n                                puVar8 = iVar11 + arg_8h_00;\n                                uVar5 = *puVar8;\n                                while (uVar5 != 0) {\n                                    if (uVar5 < 0) {\n                                        uVar5 = uVar5 & 0xffff;\n                                    }\n                                    else {\n                                        uVar5 = uVar5 + 2 + arg_8h_00;\n                                    }\n                                    uVar6 = fcn.004016e5(iVar4, uVar5);\n                                    puVar8 = puVar8 + 1;\n                                    *puVar10 = uVar6;\n                                    puVar10 = puVar10 + 1;\n                                    uVar5 = *puVar8;\n                                }\n                            }\n                            iVar4 = piVar9[8];\n                            piVar9 = piVar9 + 5;\n                        }\n                    }\n                    iVar4 = piVar14[0xd];\n                    piVar9 = piVar14[0x28] + arg_8h_00;\n                    var_2ch = piVar14[0x29] + piVar9;\n                    for (; (piVar9 < var_2ch && (iVar11 = *piVar9,  iVar11 != 0)); piVar9 = piVar9 + piVar9[1]) {\n                        piVar15 = piVar9 + 2;\n                        for (uVar5 = piVar9[1] - 8U >> 1; uVar5 != 0; uVar5 = uVar5 - 1) {\n                            if ((*piVar15 & 0xf000) == 0x3000) {\n                                piVar1 = (*piVar15 & 0xfff) + iVar11 + arg_8h_00;\n                                *piVar1 = *piVar1 + (arg_8h_00 - iVar4);\n                            }\n                            piVar15 = piVar15 + 2;\n                        }\n                    }\n                    (**0x475f6c)(arg_8h_00, piVar14[0x15], 2, &var_8h);\n                    uVar12 = 0;\n                    if (*(piVar14 + 6) != 0) {\n                        do {\n                            iVar4 = uVar12 * 0x28;\n                            uVar5 = *(piVar14 + iVar4 + 0x24 + iVar3);\n                            iVar11 = *(piVar14 + iVar4 + 0xc + iVar3) + arg_8h_00;\n                            uVar6 = *(piVar14 + iVar4 + 8 + iVar3);\n                            if ((uVar5 & 0x2000000) == 0) {\n                                uVar2 = *((((uVar5 >> 0x1e & 1) + (uVar5 >> 0x1d & 1) * 2) * 2 - (uVar5 >> 0x1f)) * 4 +\n                                         0x475000);\n                                uVar7 = uVar2 | 0x200;\n                                if ((uVar5 & 0x4000000) == 0) {\n                                    uVar7 = uVar2;\n                                }\n                                (**0x475f6c)(iVar11, uVar6, uVar7, &var_8h);\n                            }\n                            else {\n                                (*_sym.imp.KERNEL32.dll_VirtualFree)(iVar11, uVar6, 0x4000);\n                            }\n                            uVar12 = uVar12 + 1;\n                        } while (uVar12 < *(piVar14 + 6));\n                    }\n                    if (piVar14[0x31] != 0) {\n                        for (ppcVar13 = *(piVar14[0x30] + 0xc + arg_8h_00); (ppcVar13 != NULL && (*ppcVar13 != NULL));\n                            ppcVar13 = ppcVar13 + 1) {\n                            (**ppcVar13)(arg_8h_00, 1, 0);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    fcn.0040241e(var_2ch);\n    return;\n}\n",
        "token_count": 1744
    },
    "0040122b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nchar ** __cdecl fcn.0040122b(char **arg_8h)\n\n{\n    char cVar1;\n    uint arg_ch;\n    uint var_28h;\n    uint var_20h;\n    char *var_18h;\n    char *var_14h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    cVar1 = **0x476418;\n    if (cVar1 == '\\0') {\n        var_10h = \"`unknown ecsu\\'\";\n        var_ch = 0xe;\n        fcn.00402211(&var_10h);\n        fcn.00404223(arg_8h, 1);\n        return arg_8h;\n    }\n    var_10h = NULL;\n    var_ch = NULL;\n    if (cVar1 == 'W') {\n        if ((~(*0x476420 >> 0xf) & 1) != 0) {\ncode_r0x0041006f:\n            *0x476418 = *0x476418 + 1;\n            var_8h = NULL;\n            var_4h = NULL;\n            if (cVar1 == 'T') {\n                var_18h = \"union \";\ncode_r0x00410129:\n                var_14h = 0x6;\ncode_r0x00410130:\n                fcn.00401b68(&var_18h);\n            }\n            else {\n                if (cVar1 == 'U') {\n                    var_18h = \"struct \";\n                    var_14h = 0x7;\n                    goto code_r0x00410130;\n                }\n                if (cVar1 == 'V') {\n                    var_18h = \"class \";\n                    goto code_r0x00410129;\n                }\n                if (cVar1 != 'W') {\n                    if (cVar1 == 'X') {\n                        var_18h = \"coclass \";\n                        var_14h = 0x8;\n                    }\n                    else {\n                        if (cVar1 != 'Y') goto code_r0x0041013c;\n                        var_18h = \"cointerface \";\n                        var_14h = 0xc;\n                    }\n                    goto code_r0x00410130;\n                }\n                var_18h = \"enum \";\n                var_14h = 0x5;\n                arg_ch = fcn.00401ef6(&var_20h);\n                fcn.00402211(&var_18h);\n                fcn.0040395e(&var_18h, arg_ch);\n                var_8h = var_18h;\n                var_4h = var_14h;\n            }\ncode_r0x0041013c:\n            var_10h = var_8h;\n            var_ch = var_4h;\n            goto code_r0x0041002e;\n        }\n    }\n    else if (((~(*0x476420 >> 0xf) & 1) != 0) && ((*0x476420 & 0x1000) == 0)) goto code_r0x0041006f;\n    *0x476418 = *0x476418 + 1;\n    if (cVar1 == 'W') {\n        fcn.00401ef6(&var_28h);\n    }\ncode_r0x0041002e:\n    fcn.0040436d(&var_18h);\n    fcn.00402310(&var_18h);\n    *arg_8h = var_10h;\n    arg_8h[1] = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 801
    },
    "00401244": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401244(uint32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    \n    fcn.0040406b(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        *(arg_10h + 0x18) = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) == 0) {\ncode_r0x004586ee:\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 2;\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffff7;\n                arg_ch[2] = 0;\n                if ((arg_ch[3] & 0x4c0) == 0) {\n                    cVar1 = fcn.0040392c(arg_ch);\n                    if (cVar1 == '\\0') {\n                        fcn.004019b0(arg_ch);\n                    }\n                }\n                cVar1 = fcn.004588d4(arg_8h, arg_ch, arg_10h);\n                if (cVar1 == '\\0') {\n                    LOCK();\n                    arg_ch[3] = arg_ch[3] | 0x10;\n                    arg_8h = 0xffffffff;\n                }\n                else {\n                    arg_8h = arg_8h & 0xff;\n                }\n                return arg_8h;\n            }\n            cVar1 = fcn.00458af2(arg_ch);\n            arg_ch[2] = 0;\n            if (cVar1 != '\\0') {\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n                goto code_r0x004586ee;\n            }\n            goto code_r0x00458693;\n        }\n        *(arg_10h + 0x18) = 0x22;\n    }\n    *(arg_10h + 0x1c) = 1;\ncode_r0x00458693:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffffffff;\n}\n",
        "token_count": 511
    },
    "00401267": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar ** __cdecl fcn.00401267(char **arg_8h, char **arg_ch, int32_t arg_10h, char **arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    uint *arg_8h_00;\n    char **ppcVar2;\n    uint *puVar3;\n    code **ppcVar4;\n    int32_t arg_8h_01;\n    uint uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    char *pcVar8;\n    ulong uVar9;\n    uint var_84h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    char *var_4ch;\n    char *var_48h;\n    char *var_44h;\n    char *var_40h;\n    char *var_3ch;\n    char *var_38h;\n    char *var_34h;\n    char *var_30h;\n    uint var_2ch;\n    char *var_24h;\n    char *var_20h;\n    char *var_19h;\n    char *var_14h;\n    char *var_dh;\n    char *var_8h;\n    uint var_1h;\n    \n    ppcVar2 = arg_14h;\n    var_19h._0_1_ = '\\0';\n    if (**0x476418 == '\\0') {\n        if (arg_18h == 0) {\n            if (*arg_ch == NULL) {\n                arg_ch = arg_14h;\n                if (*arg_14h == NULL) goto code_r0x0040f7c3;\n            }\n            else if (((arg_ch[1] & 0x100) == 0) && (*arg_14h != NULL)) {\n                fcn.004014dd(1);\n                fcn.0040395e(&var_4ch, ppcVar2);\n                fcn.0040256d(&var_54h, 0x20);\n                fcn.0040395e(arg_8h, arg_ch);\n                return arg_8h;\n            }\n            fcn.004011db(arg_8h, 1, arg_ch);\n            return arg_8h;\n        }\ncode_r0x0040f7c3:\n        uVar5 = 1;\ncode_r0x0040f7c5:\n        fcn.004014dd(uVar5);\n        return arg_8h;\n    }\n    if ((**0x476418 != '$') || (fcn.004024c8(&var_3ch, &arg_10h, &var_19h, arg_18h),  var_3ch == NULL)) {\n        pcVar7 = NULL;\n        var_40h = NULL;\n        pcVar8 = NULL;\n        var_34h = NULL;\n        var_30h = NULL;\n        var_1h._0_1_ = '\\0';\n        var_dh._0_1_ = '\\0';\n        uVar6 = **0x476418 - (((**0x476418 < 'A') - 1 & 0x2b) + 0x16);\n        var_44h = NULL;\n        do {\n            if (uVar6 == 4) {\n                if ((~((*0x476420 >> 0x10 | *0x476420) >> 1) & 1) != 0) {\n                    uVar9 = fcn.004021fd(0xc);\n                    if (pcVar7 == NULL) {\n                        puVar3 = &var_19h + 1;\ncode_r0x0040f22f:\n                        unique0x100012e8 = uVar9;\n                        fcn.00401b68(puVar3);\n                        pcVar7 = var_34h;\n                        pcVar8 = var_30h;\n                    }\n                    else {\n                        var_3ch = pcVar7;\n                        var_38h = pcVar8;\n                        _var_7ch = uVar9;\n                        fcn.00402b99(0x20);\n                        puVar3 = &var_7ch;\n                        arg_8h_00 = &var_2ch;\ncode_r0x0040f128:\n                        ppcVar2 = fcn.004037d3(arg_8h_00, puVar3);\n                        var_34h = *ppcVar2;\n                        var_30h = ppcVar2[1];\n                        pcVar7 = var_34h;\n                        pcVar8 = var_30h;\n                    }\n                }\n            }\n            else if (uVar6 == 5) {\n                if ((~(*0x476420 >> 1) & 1) != 0) {\n                    if (var_44h == NULL) {\n                        uVar9 = fcn.004021fd(0xe);\n                        _var_74h = uVar9;\n                        fcn.00401b68(&var_74h);\n                    }\n                    else {\n                        uVar9 = fcn.004021fd(0xe);\n                        stack0xfffffff0 = var_44h;\n                        var_8h = var_40h;\n                        _var_6ch = uVar9;\n                        fcn.00402b99(0x20);\n                        ppcVar2 = fcn.004037d3(&var_54h, &var_6ch);\n                        var_44h = *ppcVar2;\n                        var_40h = ppcVar2[1];\n                    }\n                }\n            }\n            else if (uVar6 == 6) {\n                if (arg_18h == 0) goto code_r0x0040f74b;\n                var_1h._0_1_ = '\\x01';\n            }\n            else if (uVar6 == 7) {\n                if (arg_18h == 0) goto code_r0x0040f74b;\n                var_dh._0_1_ = '\\x01';\n            }\n            else {\n                if (uVar6 != 8) {\n                    if (**0x476418 != '\\0') {\n                        *0x476418 = *0x476418 + 1;\n                    }\n                    if (uVar6 < 0x20) {\n                        unique0x00007a00 = *(arg_10h * 8 + 0x46a1f8);\n                        pcVar8 = *(arg_10h * 8 + 0x46a1fc);\n                        var_14h = pcVar8;\n                        fcn.00402211(&var_19h + 1);\n                        var_24h = NULL;\n                        var_20h = NULL;\n                        fcn.00402310(&var_dh + 1);\n                        stack0xfffffff0 = var_24h;\n                        var_8h = var_20h;\n                        if (pcVar7 != NULL) {\n                            if (var_20h < '\\x02') {\n                                if (var_24h == NULL) {\n                                    var_24h = NULL;\n                                    var_20h = NULL;\n                                    fcn.0040307b(0x20);\n                                }\n                                else {\n                                    ppcVar4 = fcn.004038c8(8);\n                                    if (ppcVar4 == NULL) {\n                                        ppcVar4 = NULL;\n                                    }\n                                    else {\n                                        fcn.004014e7();\n                                        *ppcVar4 = vtable.charNode.0;\n                                        *(ppcVar4 + 1) = 0x20;\n                                    }\n                                    fcn.00403bb6(ppcVar4);\n                                }\n                            }\n                            ppcVar2 = fcn.0040395e(&var_2ch, &var_34h);\n                            unique0x00007a00 = *ppcVar2;\n                            var_8h = ppcVar2[1];\n                        }\n                        if (var_44h != NULL) {\n                            var_3ch = var_44h;\n                            var_38h = var_40h;\n                            fcn.00402b99(0x20);\n                            ppcVar2 = fcn.0040395e(&var_2ch, &var_dh + 1);\n                            unique0x00007a00 = *ppcVar2;\n                            var_8h = ppcVar2[1];\n                        }\n                        if ((uVar6 & 0x10) != 0) {\n                            if (arg_18h != 0) goto code_r0x0040f74b;\n                            if (pcVar8 < 1) {\n                                if (**0x476418 != '\\0') {\n                                    uVar5 = fcn.004029f0(&var_2ch);\n                                    fcn.00404692(uVar5);\n                                }\n                            }\n                            else {\n                                stack0xffffffe4 = 0x46aa08;\n                                var_14h = 0x2;\n                                fcn.00402211(&var_19h + 1);\n                                fcn.0040395e(&var_19h + 1, &var_dh + 1);\n                                stack0xfffffff0 = stack0xffffffe4;\n                                var_8h = var_14h;\n                                if (**0x476418 == '\\0') {\n                                    fcn.004014dd(1);\n                                    fcn.0040395e(&var_19h + 1, &var_dh + 1);\n                                    stack0xfffffff0 = stack0xffffffe4;\n                                    var_8h = var_14h;\n                                }\n                                else {\n                                    fcn.004029f0(&var_2ch);\n                                    ppcVar2 = fcn.0040395e(&var_54h, &var_dh + 1);\n                                    unique0x00007a00 = *ppcVar2;\n                                    var_8h = ppcVar2[1];\n                                }\n                            }\n                            cVar1 = **0x476418;\n                            if (cVar1 == '\\0') {\n                                if (var_8h < '\\x02') {\n                                    if (stack0xfffffff0 == NULL) {\n                                        fcn.004022e8(1);\n                                    }\n                                    else {\n                                        fcn.00403b7f(0x46b0a0);\n                                    }\n                                }\n                            }\n                            else {\n                                *0x476418 = *0x476418 + 1;\n                                if (cVar1 != '@') goto code_r0x0040f74b;\n                            }\n                        }\n                        if ((~(*0x476420 >> 1) & 1) == 0) {\n                            if ((uVar6 & 0xc) == 0xc) {\n                                uVar5 = fcn.0040380a(&var_2ch);\n                                fcn.00404692(uVar5);\n                            }\n                        }\n                        else if ((uVar6 & 0xc) == 0xc) {\n                            if (arg_18h != 0) goto code_r0x0040f74b;\n                            fcn.0040380a(&var_2ch);\n                            ppcVar2 = fcn.0040395e(&var_54h, &var_dh + 1);\n                            unique0x00007a00 = *ppcVar2;\n                            var_8h = ppcVar2[1];\n                        }\n                        if ((uVar6 & 2) != 0) {\n                            stack0xffffffe4 = \"volatile \";\n                            var_14h = 0x9;\n                            fcn.00402211(&var_19h + 1);\n                            fcn.0040395e(&var_19h + 1, &var_dh + 1);\n                            stack0xfffffff0 = stack0xffffffe4;\n                            var_8h = var_14h;\n                        }\n                        if ((uVar6 & 1) != 0) {\n                            stack0xffffffe4 = \"const \";\n                            var_14h = 0x6;\n                            fcn.00402211(&var_19h + 1);\n                            fcn.0040395e(&var_19h + 1, &var_dh + 1);\n                            stack0xfffffff0 = stack0xffffffe4;\n                            var_8h = var_14h;\n                        }\n                        if (var_1h != '\\0') {\n                            stack0xffffffe4 = 0x46ae84;\n                            var_24h = stack0xfffffff0;\n                            var_20h = var_8h;\n                            var_14h = 0x2;\n                            if (var_8h < '\\x02') {\n                                if (stack0xfffffff0 == NULL) {\n                                    fcn.00401b68(&var_19h + 1);\n                                }\n                                else {\n                                    ppcVar4 = fcn.004038c8(0xc);\n                                    if (ppcVar4 == NULL) {\n                                        ppcVar4 = NULL;\n                                    }\n                                    else {\n                                        fcn.004014e7();\n                                        *ppcVar4 = vtable.pcharNode.0;\n                                        ppcVar4[1] = 0x46ae84;\n                                        ppcVar4[2] = 0x2;\n                                    }\n                                    fcn.0040243c(ppcVar4);\n                                }\n                            }\n                            stack0xfffffff0 = var_24h;\n                            var_8h = var_20h;\n                        }\n                        if (var_dh != '\\0') {\n                            stack0xffffffe4 = 0x46ae88;\n                            var_14h = 0x3;\n                            var_24h = stack0xfffffff0;\n                            var_20h = var_8h;\n                            if (var_8h < '\\x02') {\n                                if (stack0xfffffff0 == NULL) {\n                                    fcn.00401b68(&var_19h + 1);\n                                }\n                                else {\n                                    ppcVar4 = fcn.004038c8(0xc);\n                                    if (ppcVar4 == NULL) {\n                                        ppcVar4 = NULL;\n                                    }\n                                    else {\n                                        fcn.004014e7();\n                                        *ppcVar4 = vtable.pcharNode.0;\n                                        ppcVar4[1] = 0x46ae88;\n                                        ppcVar4[2] = 0x3;\n                                    }\n                                    fcn.0040243c(ppcVar4);\n                                }\n                            }\n                            stack0xfffffff0 = var_24h;\n                            var_8h = var_20h;\n                        }\n                        pcVar8 = stack0xfffffff0;\n                        pcVar7 = var_8h;\n                        if (arg_18h != 0) goto code_r0x0040f72a;\n                        if (*arg_ch == NULL) {\n                            arg_ch = arg_14h;\n                            if (*arg_14h == NULL) goto code_r0x0040f72a;\ncode_r0x0040f6c0:\n                            ppcVar2 = fcn.004022e3(&var_2ch, 0x20, arg_ch);\n                        }\n                        else {\n                            pcVar7 = arg_ch[1];\n                            if (((pcVar7 & 0x100) != 0) || (*arg_14h == NULL)) {\n                                pcVar8 = *arg_ch;\n                                if ((pcVar7 & 0x800) != 0) goto code_r0x0040f72a;\n                                goto code_r0x0040f6c0;\n                            }\n                            fcn.004022e3(&var_2ch, 0x20, arg_14h);\n                            fcn.0040256d(&var_54h, 0x20);\n                            ppcVar2 = fcn.0040395e(&var_84h, arg_ch);\n                        }\n                        pcVar8 = stack0xfffffff0;\n                        pcVar7 = var_8h;\n                        if ('\\x01' < var_8h) goto code_r0x0040f72a;\n                        pcVar8 = *ppcVar2;\n                        if (stack0xfffffff0 == NULL) {\n                            if (pcVar8 != NULL) {\n                                pcVar7 = ppcVar2[1];\n                                goto code_r0x0040f72a;\n                            }\n                            arg_8h_01 = *(ppcVar2 + 1);\n                        }\n                        else {\n                            if (pcVar8 != NULL) {\n                                fcn.004011f9(pcVar8);\n                                pcVar8 = stack0xfffffff0;\n                                pcVar7 = var_8h;\n                                goto code_r0x0040f72a;\n                            }\n                            arg_8h_01 = *(ppcVar2 + 1);\n                            pcVar8 = stack0xfffffff0;\n                            if (arg_8h_01 == 0) goto code_r0x0040f72a;\n                            if ((arg_8h_01 != 2) && (arg_8h_01 != 3)) {\n                                uVar5 = fcn.004032e2(arg_8h_01);\n                                fcn.00403b7f(uVar5);\n                                pcVar8 = stack0xfffffff0;\n                                pcVar7 = var_8h;\n                                goto code_r0x0040f72a;\n                            }\n                        }\n                        fcn.004022e8(arg_8h_01);\n                        pcVar8 = stack0xfffffff0;\n                        pcVar7 = var_8h;\ncode_r0x0040f72a:\n                        var_8h = pcVar7;\n                        stack0xfffffff0 = pcVar8;\n                        pcVar7 = var_8h | 0x100;\n                        if (var_19h != '\\0') {\n                            pcVar7 = var_8h | 0x2100;\n                        }\n                        *arg_8h = stack0xfffffff0;\n                        arg_8h[1] = pcVar7;\n                        return arg_8h;\n                    }\ncode_r0x0040f74b:\n                    uVar5 = 2;\n                    goto code_r0x0040f7c5;\n                }\n                if ((~(*0x476420 >> 1) & 1) != 0) {\n                    uVar9 = fcn.004021fd(0xd);\n                    if (pcVar7 == NULL) {\n                        puVar3 = &var_64h;\n                        _var_64h = uVar9;\n                        uVar9 = stack0xffffffe4;\n                        goto code_r0x0040f22f;\n                    }\n                    var_24h = pcVar7;\n                    var_20h = pcVar8;\n                    _var_5ch = uVar9;\n                    fcn.00402b99(0x20);\n                    puVar3 = &var_5ch;\n                    arg_8h_00 = &var_84h;\n                    goto code_r0x0040f128;\n                }\n            }\n            *0x476418 = *0x476418 + 1;\n            if (**0x476418 == '$') {\n                fcn.004024c8(&var_4ch, &arg_10h, &var_19h, arg_18h);\n                if (var_4ch != NULL) goto code_r0x0040f74f;\n            }\n            uVar6 = **0x476418 - (((**0x476418 < 'A') - 1 & 0x2b) + 0x16);\n        } while( true );\n    }\n    *arg_8h = var_3ch;\n    goto code_r0x0040f082;\ncode_r0x0040f74f:\n    *arg_8h = var_4ch;\n    var_38h = var_48h;\ncode_r0x0040f082:\n    arg_8h[1] = var_38h;\n    return arg_8h;\n}\n",
        "token_count": 4444
    },
    "00401393": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401393(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x00425108;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x00425108:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00403e1d(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar1 == 8) {\n        fcn.00401370(arg_8h_00, var_4h, arg_8h);\n    }\n    else {\n        fcn.004026e4(arg_8h_00, arg_8h);\n    }\n    piVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar3 = *(in_ECX + 0x30),  *piVar3 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar3 >> 8, 1);\n}\n",
        "token_count": 1243
    },
    "004015e1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004015e1(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    if ((arg_8h & 4) != 0) {\n        return 1;\n    }\n    if ((arg_8h & 1) == 0) {\n        return 0;\n    }\n    if ((arg_8h & 2) == 0) {\n        if (arg_ch < 0x80000000) {\n            return 0;\n        }\n    }\n    else if (arg_ch < 0x80000001) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 139
    },
    "00401735": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401735(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00401e3d(*(in_ECX + 0x28));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00404052(&var_ch);\n        }\n        else {\n            cVar2 = fcn.004013f2(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.0040297d(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00402013(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.004025f9(&var_ch);\n        }\n        else {\n            cVar2 = fcn.0040413d(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00402edc(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403ee0(&var_ch);\n        }\n    }\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.00402f18();\n    if (cVar2 != '\\0') {\n        uVar3 = *(in_ECX + 0x1c);\n        arg_ch = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x1c) = uVar3;\n            arg_ch = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *(in_ECX + 0x1c) = uVar3 & 0xfffffff7;\n            fcn.00403e1d(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | arg_ch) == 0) {\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 1;\n        if (var_4h == 8) {\n            fcn.0040446c(arg_8h_00, arg_ch, arg_8h);\n        }\n        else {\n            fcn.00401b2c(arg_8h_00, arg_8h);\n        }\n        if (((*(in_ECX + 0x1c) >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != 0x30)))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1064
    },
    "0040177b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040177b(int32_t arg_8h, uint8_t *arg_ch, uint8_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar2 = arg_ch;\n    cVar3 = fcn.00402bb2();\n    if (cVar3 == '\\0') {\ncode_r0x0043d9a6:\n        if (arg_10h != NULL) {\n            *arg_10h = arg_ch;\n        }\n        return 0;\n    }\n    if ((arg_14h != 0) && ((arg_14h < 2 || (0x24 < arg_14h)))) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_8h);\n        goto code_r0x0043d9a6;\n    }\n    var_ch = 0;\n    uVar6 = *arg_ch;\n    arg_ch = arg_ch + 1;\n    var_4h = var_4h & 0xffffff00 | uVar6;\n    if (*(arg_8h + 0x14) == '\\0') {\n        fcn.004024f0();\n    }\n    while (iVar4 = fcn.00402b8f(uVar6, 8, arg_8h + 0xc),  iVar4 != 0) {\n        uVar6 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        var_4h = var_4h & 0xffffff00 | uVar6;\n    }\n    var_8h = arg_18h & 0xff;\n    if (uVar6 == 0x2d) {\n        var_8h = var_8h | 2;\ncode_r0x0043da1c:\n        uVar6 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        var_4h = var_4h & 0xffffff00 | uVar6;\n    }\n    else if (uVar6 == 0x2b) goto code_r0x0043da1c;\n    if ((arg_14h != 0) && (arg_14h != 0x10)) goto code_r0x0043daa9;\n    if (uVar6 - 0x30 < 10) {\n        iVar4 = uVar6 + -0x30;\ncode_r0x0043da64:\n        if (iVar4 == 0) {\n            uVar1 = *arg_ch;\n            var_10h = var_10h & 0xffffff00 | uVar1;\n            if ((uVar1 == 0x78) || (uVar1 == 0x58)) {\n                if (arg_14h == 0) {\n                    arg_14h = 0x10;\n                }\n                uVar6 = arg_ch[1];\n                arg_ch = arg_ch + 2;\n                var_4h = var_4h & 0xffffff00 | uVar6;\n            }\n            else {\n                if (arg_14h == 0) {\n                    arg_14h = 8;\n                }\n                fcn.0040227f(var_10h);\n                arg_ch = arg_ch + 1;\n            }\n            goto code_r0x0043daa9;\n        }\n    }\n    else {\n        if (uVar6 + 0x9f < 0x1a) {\n            iVar4 = uVar6 + -0x57;\n            goto code_r0x0043da64;\n        }\n        if (uVar6 + 0xbf < 0x1a) {\n            iVar4 = uVar6 + -0x37;\n            goto code_r0x0043da64;\n        }\n    }\n    if (arg_14h == 0) {\n        arg_14h = 10;\n    }\ncode_r0x0043daa9:\n    while( true ) {\n        if (uVar6 - 0x30 < 10) {\n            uVar5 = uVar6 - 0x30;\n        }\n        else if (uVar6 + 0x9f < 0x1a) {\n            uVar5 = uVar6 - 0x57;\n        }\n        else if (uVar6 + 0xbf < 0x1a) {\n            uVar5 = uVar6 - 0x37;\n        }\n        else {\n            uVar5 = 0xffffffff;\n        }\n        if (arg_14h <= uVar5) break;\n        uVar5 = var_ch * arg_14h + uVar5;\n        uVar6 = *arg_ch;\n        var_4h = var_4h & 0xffffff00 | uVar6;\n        var_8h = var_8h | (uVar5 < var_ch * arg_14h || 0xffffffff / arg_14h < var_ch) << 2 | 8;\n        arg_ch = arg_ch + 1;\n        var_ch = uVar5;\n    }\n    fcn.0040227f(var_4h);\n    if ((var_8h & 8) == 0) {\n        if (arg_10h == NULL) {\n            return 0;\n        }\n        *arg_10h = puVar2;\n        return 0;\n    }\n    cVar3 = fcn.004015e1(var_8h, var_ch);\n    if (cVar3 == '\\0') {\n        if ((var_8h & 2) != 0) {\n            var_ch = -var_ch;\n        }\n    }\n    else {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x22;\n        if ((var_8h & 1) != 0) {\n            if ((var_8h & 2) == 0) {\n                if (arg_10h != NULL) {\n                    *arg_10h = arg_ch;\n                }\n                return 0x7fffffff;\n            }\n            if (arg_10h != NULL) {\n                *arg_10h = arg_ch;\n            }\n            return 0x80000000;\n        }\n        var_ch = 0xffffffff;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n        return var_ch;\n    }\n    return var_ch;\n}\n",
        "token_count": 1547
    },
    "004017d5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043e5ab)\n// WARNING: Removing unreachable block (ram,0x0043e5c3)\n\nuint64_t __cdecl fcn.004017d5(int32_t arg_8h, uint8_t *arg_ch, uint8_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uint8_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint8_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar3 = arg_ch;\n    cVar4 = fcn.00402bb2();\n    if (cVar4 == '\\0') {\ncode_r0x0043e40b:\n        if (arg_10h != NULL) {\n            *arg_10h = arg_ch;\n        }\n        return 0;\n    }\n    if ((arg_14h != 0) && ((arg_14h < 2 || (0x24 < arg_14h)))) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_8h);\n        goto code_r0x0043e40b;\n    }\n    uVar7 = *arg_ch;\n    arg_ch = arg_ch + 1;\n    var_8h = var_8h & 0xffffff00 | uVar7;\n    if (*(arg_8h + 0x14) == '\\0') {\n        fcn.004024f0();\n    }\n    uVar5 = arg_8h + 0xc;\n    iVar6 = fcn.00402b8f(uVar7, 8, uVar5);\n    while (iVar6 != 0) {\n        uVar7 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        var_8h = var_8h & 0xffffff00 | uVar7;\n        iVar6 = fcn.00402b8f(uVar7, 8, uVar5);\n    }\n    var_4h = arg_18h & 0xff;\n    if (uVar7 == 0x2d) {\n        var_4h = var_4h | 2;\ncode_r0x0043e49f:\n        uVar7 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        var_8h = var_8h & 0xffffff00 | uVar7;\n    }\n    else if (uVar7 == 0x2b) goto code_r0x0043e49f;\n    if ((arg_14h != 0) && (arg_14h != 0x10)) goto code_r0x0043e52b;\n    if (uVar7 - 0x30 < 10) {\n        iVar6 = uVar7 + -0x30;\ncode_r0x0043e4e7:\n        if (iVar6 == 0) {\n            uVar1 = *arg_ch;\n            var_ch = uVar5 & 0xffffff00 | uVar1;\n            if ((uVar1 == 0x78) || (uVar1 == 0x58)) {\n                if (arg_14h == 0) {\n                    arg_14h = 0x10;\n                }\n                uVar7 = arg_ch[1];\n                arg_ch = arg_ch + 2;\n                var_8h = var_8h & 0xffffff00 | uVar7;\n            }\n            else {\n                if (arg_14h == 0) {\n                    arg_14h = 8;\n                }\n                fcn.0040227f(var_ch);\n                arg_ch = arg_ch + 1;\n            }\n            goto code_r0x0043e52b;\n        }\n    }\n    else {\n        if (uVar7 + 0x9f < 0x1a) {\n            iVar6 = uVar7 + -0x57;\n            goto code_r0x0043e4e7;\n        }\n        if (uVar7 + 0xbf < 0x1a) {\n            iVar6 = uVar7 + -0x37;\n            goto code_r0x0043e4e7;\n        }\n    }\n    if (arg_14h == 0) {\n        arg_14h = 10;\n    }\ncode_r0x0043e52b:\n    uVar8 = fcn.00403242(0xffffffff, 0xffffffff, arg_14h, arg_14h >> 0x1f);\n    uVar2 = 0;\n    while( true ) {\n        iVar6 = uVar2 >> 0x20;\n        var_10h = uVar2;\n        if (uVar7 - 0x30 < 10) {\n            uVar5 = uVar7 - 0x30;\n        }\n        else if (uVar7 + 0x9f < 0x1a) {\n            uVar5 = uVar7 - 0x57;\n        }\n        else if (uVar7 + 0xbf < 0x1a) {\n            uVar5 = uVar7 - 0x37;\n        }\n        else {\n            uVar5 = 0xffffffff;\n        }\n        if (arg_14h <= uVar5) break;\n        uVar9 = fcn.00401da2();\n        var_4h = var_4h | (uVar8 < uVar2) << 2 | 8;\n        uVar7 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        var_8h = var_8h & 0xffffff00 | uVar7;\n        uVar2 = uVar9;\n    }\n    fcn.0040227f(var_8h);\n    if ((var_4h & 8) == 0) {\n        if (arg_10h == NULL) {\n            return 0;\n        }\n        *arg_10h = puVar3;\n        return 0;\n    }\n    cVar4 = fcn.00402a90(var_4h, var_10h, iVar6);\n    if (cVar4 == '\\0') {\n        if ((var_4h & 2) != 0) {\n            uVar2 = CONCAT44(-(iVar6 + (var_10h != 0)), -var_10h);\n        }\n    }\n    else {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x22;\n        if ((var_4h & 1) != 0) {\n            if ((var_4h & 2) == 0) {\n                if (arg_10h != NULL) {\n                    *arg_10h = arg_ch;\n                }\n                return 0x7fffffffffffffff;\n            }\n            if (arg_10h != NULL) {\n                *arg_10h = arg_ch;\n            }\n            return 0x8000000000000000;\n        }\n        uVar2 = 0xffffffffffffffff;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n        return uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 1743
    },
    "00401807": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00401807(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    bool bVar8;\n    \n    do {\n        uVar1 = 0;\n        if (**0x476418 == 0x5f) {\n            *0x476418 = *0x476418 + 1;\n            uVar1 = 0x4000;\n        }\n        uVar7 = **0x476418;\n        if (('@' < uVar7) && (uVar7 < '[')) {\n            uVar3 = uVar1 | 0x8000;\n            uVar6 = uVar7 - 0x41;\n            *0x476418 = *0x476418 + 1;\n            if ((uVar6 & 1) != 0) {\n                uVar3 = uVar1 | 0xa000;\n            }\n            if (0x17 < uVar6) {\n                return uVar3;\n            }\n            uVar1 = uVar3 | 0x800;\n            uVar4 = uVar6 & 0x18;\n            if (uVar4 == 0) {\n                uVar1 = uVar3 | 0x840;\n            }\n            else if (uVar4 == 8) {\n                uVar1 = uVar3 | 0x880;\n            }\n            else if (uVar4 != 0x10) {\n                return 0xffff;\n            }\n            uVar6 = uVar6 & 6;\n            if (uVar6 != 0) {\n                if (uVar6 == 2) {\n                    return uVar1 | 0x200;\n                }\n                if (uVar6 != 4) {\n                    if (uVar6 != 6) {\n                        return 0xffff;\n                    }\n                    return uVar1 | 0x400;\n                }\n                return uVar1 | 0x100;\n            }\n            return uVar1;\n        }\n        if (uVar7 != 0x24) {\n            if (uVar7 - 0x30 < 9) {\n                *0x476418 = *0x476418 + 1;\n    // switch table (9 cases) at 0x4139b6\n                switch(uVar7) {\n                case 0x30:\n                    return 0x800;\n                case 0x31:\n                    return 0x1000;\n                case 0x32:\n                    return 0;\n                case 0x33:\n                    return 0x4000;\n                case 0x34:\n                    return 0x2000;\n                case 0x35:\n                    return 0x6000;\n                case 0x36:\n                    return 0x6800;\n                case 0x37:\n                    return 0x7000;\n                case 0x38:\n                    return 0x7800;\n                default:\n                    return 0xffff;\n                }\n            }\n            if (uVar7 == 0x39) {\n                *0x476418 = *0x476418 + 1;\n                return 0xfffd;\n            }\n            if (uVar7 == 0x3b) {\n                *0x476418 = *0x476418 + 1;\n                return 0x6c00;\n            }\n            bVar8 = uVar7 != 0;\ncode_r0x004139aa:\n            return bVar8 + 0xfffe;\n        }\n        puVar5 = *0x476418 + 1;\n        uVar7 = *puVar5;\n        if ('5' < uVar7) {\n            if (uVar7 == 0x41) {\n                uVar3 = uVar1 | 0x9000;\n                goto code_r0x00413911;\n            }\n            if (uVar7 == 0x42) {\n                uVar3 = uVar1 | 0x9800;\n                goto code_r0x00413911;\n            }\n            if (uVar7 == 0x43) {\n                uVar3 = 0x7c00;\n                goto code_r0x00413911;\n            }\n            if (uVar7 == 0x44) {\n                uVar3 = uVar1 | 0x9100;\n                goto code_r0x00413911;\n            }\n            if (uVar7 == 0x45) {\n                uVar3 = uVar1 | 0x9200;\n                goto code_r0x00413911;\n            }\n            if (uVar7 != 0x52) {\n                *0x476418 = puVar5;\n                return 0xffff;\n            }\n            *0x476418 = *0x476418 + 2;\n            uVar7 = **0x476418;\n            if ((uVar7 < '0') || (iVar2 = 1,  puVar5 = *0x476418,  '5' < uVar7)) {\n                bVar8 = uVar7 == 0;\n                goto code_r0x004139aa;\n            }\ncode_r0x004138a9:\n            *0x476418 = puVar5;\n            uVar1 = (iVar2 + 5) * 0x100 | uVar1;\n            uVar3 = uVar1 | 0x8800;\n            if ((uVar7 & 1) != 0) {\n                uVar3 = uVar1 | 0xa800;\n            }\n            uVar7 = uVar7 & 6;\n            puVar5 = *0x476418;\n            if (uVar7 == 0) {\n                uVar3 = uVar3 | 0x40;\n            }\n            else if (uVar7 == 2) {\n                uVar3 = uVar3 | 0x80;\n            }\n            else if (uVar7 != 4) {\n                return 0xffff;\n            }\ncode_r0x00413911:\n            *0x476418 = puVar5 + 1;\n            return uVar3;\n        }\n        iVar2 = 0;\n        if (uVar7 == 0x35) goto code_r0x004138a9;\n        if (uVar7 == 0) {\n            uVar3 = 0xfffe;\n            puVar5 = *0x476418;\n            goto code_r0x00413911;\n        }\n        if (uVar7 != 0x24) {\n            if ((((uVar7 != 0x30) && (uVar7 != 0x31)) && (uVar7 != 0x32)) && ((uVar7 != 0x33 && (uVar7 != 0x34)))) {\n                *0x476418 = puVar5;\n                return 0xffff;\n            }\n            goto code_r0x004138a9;\n        }\n        if ((*0x476418)[2] == 0x50) {\n            puVar5 = *0x476418 + 2;\n        }\n        *0x476418 = puVar5 + 1;\n        uVar7 = **0x476418;\n        if (uVar7 < 'N') {\n            if (uVar7 != 0x4d) {\n                if (uVar7 == 0) {\n                    return 0xfffe;\n                }\n                if ((uVar7 != 0x46) && (uVar7 != 0x48)) {\n                    if (uVar7 == 0x4a) goto code_r0x00413809;\n                    if (uVar7 != 0x4c) {\n                        return 0xffff;\n                    }\n                }\n            }\n        }\n        else {\n            if ((uVar7 == 0x4e) || (uVar7 == 0x4f)) {\ncode_r0x00413809:\n                uVar7 = puVar5[2];\n                if (('/' < uVar7) && (uVar7 < ':')) {\n                    *0x476418 = puVar5 + uVar7 + -0x2d;\n                    uVar1 = fcn.00401807();\n                    return uVar1 | 0x10000;\n                }\n                uVar3 = 0xffff;\n                puVar5 = puVar5 + 2;\n                goto code_r0x00413911;\n            }\n            if (uVar7 != 0x51) {\n                if (uVar7 != 0x68) {\n                    return 0xffff;\n                }\n                *0x47642c = 0;\n            }\n        }\n        *0x476418 = puVar5 + 2;\n    } while( true );\n}\n",
        "token_count": 1936
    },
    "0040189d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040189d(uint32_t arg_8h, char *arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_30h;\n    int32_t var_2ch;\n    uint lpNumberOfBytesWritten;\n    uint uStack40;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t nNumberOfBytesToWrite;\n    char *lpBuffer;\n    uint var_1h;\n    \n    lpBuffer = arg_ch;\n    nNumberOfBytesToWrite = arg_10h;\n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_ch == NULL) {\ncode_r0x00452b76:\n        *(arg_14h + 0x24) = 1;\n        *(arg_14h + 0x20) = 0;\n        *(arg_14h + 0x1c) = 1;\n        *(arg_14h + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_14h);\n        return -1;\n    }\n    var_10h = arg_8h >> 6;\n    var_14h = (arg_8h & 0x3f) * 0x38;\n    iVar3 = *(var_10h * 4 + 0x4771f0);\n    var_1h._0_1_ = *(var_14h + 0x29 + iVar3);\n    if (((var_1h == '\\x02') || (var_1h == '\\x01')) && ((~arg_10h & 1) == 0)) goto code_r0x00452b76;\n    if ((*(var_14h + 0x28 + iVar3) & 0x20) != 0) {\n        fcn.00402ec3(arg_8h, 0, 0, 2, arg_14h);\n    }\n    cVar1 = fcn.0045255b(arg_8h, arg_14h);\n    if (cVar1 == '\\0') {\n        iVar3 = *(var_10h * 4 + 0x4771f0);\n        if (*(var_14h + 0x28 + iVar3) < '\\0') {\n            if (var_1h == '\\0') {\n                piVar2 = fcn.004525f8(&var_2ch, arg_8h, lpBuffer, nNumberOfBytesToWrite);\n            }\n            else if (var_1h == '\\x01') {\n                piVar2 = fcn.0045282c(&var_2ch, arg_8h, lpBuffer, nNumberOfBytesToWrite);\n            }\n            else {\n                if (var_1h != '\\x02') goto code_r0x00452d0e;\n                piVar2 = fcn.00452709(&var_2ch, arg_8h, lpBuffer, nNumberOfBytesToWrite);\n            }\n        }\n        else {\n            var_2ch = 0;\n            lpNumberOfBytesWritten = 0;\n            uStack40 = 0;\n            iVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                              (*(var_14h + 0x18 + iVar3), lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n            if (iVar3 == 0) {\n                var_2ch = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            piVar2 = &var_2ch;\n        }\n    }\n    else if (var_1h == '\\0') {\n        piVar2 = fcn.00452013(&var_2ch, arg_8h, lpBuffer, nNumberOfBytesToWrite, arg_14h);\n    }\n    else {\n        if (1 < var_1h - 1U) goto code_r0x00452d0e;\n        piVar2 = fcn.004524d9(&var_2ch, lpBuffer, nNumberOfBytesToWrite);\n    }\n    var_20h = *piVar2;\n    var_1ch = piVar2[1];\n    var_18h = piVar2[2];\n    if (var_1ch != 0) {\n        return var_1ch - var_18h;\n    }\n    if (var_20h != 0) {\n        if (var_20h == 5) {\n            *(arg_14h + 0x1c) = 1;\n            *(arg_14h + 0x18) = 9;\n            *(arg_14h + 0x24) = 1;\n            *(arg_14h + 0x20) = 5;\n            return -1;\n        }\n        fcn.00402004(var_20h, arg_14h);\n        return -1;\n    }\ncode_r0x00452d0e:\n    if (((*(var_14h + 0x28 + *(var_10h * 4 + 0x4771f0)) & 0x40) != 0) && (*lpBuffer == '\\x1a')) {\n        return 0;\n    }\n    *(arg_14h + 0x1c) = 1;\n    *(arg_14h + 0x18) = 0x1c;\n    *(arg_14h + 0x24) = 1;\n    *(arg_14h + 0x20) = 0;\n    return -1;\n}\n",
        "token_count": 1319
    },
    "00401938": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401938(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x004254e4;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x004254e4:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00403e1d(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar1 == 8) {\n        fcn.004043f9(arg_8h_00, var_4h, arg_8h);\n    }\n    else {\n        fcn.00403512(arg_8h_00, arg_8h);\n    }\n    piVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar3 = *(in_ECX + 0x30),  *piVar3 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar3 >> 8, 1);\n}\n",
        "token_count": 1245
    },
    "00401965": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401965(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    \n    if (((*(*in_ECX + 0xc) >> 0xc & 1) == 0) || (*(*in_ECX + 4) != 0)) {\n        uVar1 = fcn.00402c34(arg_8h, *in_ECX, arg_ch);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n    }\n    else {\n        uVar1 = CONCAT31(*in_ECX >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 160
    },
    "00401a0a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401a0a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00401e3d(*(in_ECX + 0x28));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00401dbb(&var_ch);\n        }\n        else {\n            cVar2 = fcn.0040178f(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.0040386e(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00401f73(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.0040341d(&var_ch);\n        }\n        else {\n            cVar2 = fcn.0040374c(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00404516(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403bf2(&var_ch);\n        }\n    }\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.0040443f();\n    if (cVar2 != '\\0') {\n        uVar3 = *(in_ECX + 0x1c);\n        arg_ch = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x1c) = uVar3;\n            arg_ch = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *(in_ECX + 0x1c) = uVar3 & 0xfffffff7;\n            fcn.00404345(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | arg_ch) == 0) {\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 0;\n        if (var_4h == 8) {\n            fcn.00401311(arg_8h_00, arg_ch, arg_8h);\n        }\n        else {\n            fcn.00402973(arg_8h_00, arg_8h);\n        }\n        if (((*(in_ECX + 0x1c) >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != '0')))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1061
    },
    "00401abe": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nushort fcn.00401abe(void)\n\n{\n    uint lpStartupInfo;\n    uint var_18h;\n    uint var_14h;\n    \n    fcn.0040248c(&lpStartupInfo, 0, 0x44);\n    (*_sym.imp.KERNEL32.dll_GetStartupInfoW)(&lpStartupInfo);\n    if ((var_18h & 1) != 0) {\n        return var_14h;\n    }\n    return 10;\n}\n",
        "token_count": 113
    },
    "00401ac8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.00401ac8(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h_2;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_10h_2;\n    code *pcStack16;\n    uint32_t uStack12;\n    uint var_4h;\n    \n    pcStack16 = fcn.0040af70;\n    var_10h_2 = *in_FS_OFFSET;\n    uStack12 = *0x47502c ^ 0x474928;\n    *in_FS_OFFSET = &var_10h_2;\n    var_4h = 0;\n    iVar2 = fcn.0040182f(0x400000);\n    if (iVar2 != 0) {\n        iVar2 = fcn.00401730(0x400000, var_8h_2 + -0x400000);\n        if (iVar2 != 0) {\n            uVar1 = *(iVar2 + 0x24);\n            *in_FS_OFFSET = var_10h_2;\n            return ~(uVar1 >> 0x1f) & 1;\n        }\n    }\n    *in_FS_OFFSET = var_10h_2;\n    return 0;\n}\n",
        "token_count": 309
    },
    "00401ba4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00401ba4(uint *arg_8h)\n\n{\n    char cVar1;\n    uint *arg_8h_00;\n    uint uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((**0x476418 != '\\0') && (**0x476418 == '_')) {\n        cVar1 = (*0x476418)[1];\n        if ((cVar1 != '\\0') && (cVar1 < 'E')) {\n            uVar5 = (*0x476418)[1] - 0x41;\n            *0x476418 = *0x476418 + 2;\n            if (3 < uVar5) {\ncode_r0x004121f8:\n                fcn.004014dd(2);\n                return arg_8h;\n            }\n            var_8h = 0;\n            var_4h = 0;\n            uVar2 = 0;\n            uVar3 = 0;\n            if ((~(*0x476420 >> 1) & 1) != 0) {\n                fcn.00402b99(0x20);\n                _var_10h = fcn.004021fd(0xf);\n                fcn.00403f03(&var_10h);\n                if (uVar5 != 0) {\n                    while( true ) {\n                        uVar4 = -uVar5 & uVar5;\n                        if (uVar4 == 1) {\n                            var_18h = 0x46ad1c;\n                            arg_8h_00 = &var_18h;\n                            var_14h = 3;\n                        }\n                        else {\n                            if (uVar4 != 2) goto code_r0x004121f8;\n                            arg_8h_00 = &var_10h;\n                            _var_10h = 0x30046ad20;\n                        }\n                        fcn.00403f03(arg_8h_00);\n                        uVar5 = uVar5 & ~uVar4;\n                        if (uVar5 == 0) break;\n                        var_20h = 0x46ad24;\n                        var_1ch = 2;\n                        fcn.00403f03(&var_20h);\n                    }\n                }\n                fcn.00402b99(0x29);\n                uVar2 = var_8h;\n                uVar3 = var_4h;\n            }\n            arg_8h[1] = uVar3;\n            goto code_r0x0041220f;\n        }\n    }\n    uVar2 = 0;\n    arg_8h[1] = 0;\ncode_r0x0041220f:\n    *arg_8h = uVar2;\n    return arg_8h;\n}\n",
        "token_count": 674
    },
    "00401bc2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401bc2(uint32_t arg_8h)\n\n{\n    return;\n}\n",
        "token_count": 24
    },
    "00401bd1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint16_t __cdecl fcn.00401bd1(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == -1) {\n        return 0xffff;\n    }\n    fcn.00403c79(arg_ch);\n    uVar2 = arg_8h;\n    if (*(var_10h + 8) == 0xfde9) {\n        if (arg_8h < 0x80) {\n            if ((*(\n                  L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10      (                          \\b\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0112\\x10\\x100\\x10\\x10\\x10\\x10\\x14\\x14\\x10\u0112\\x10\\x10\\x10\\x14\u0112\\x10\\x10\\x10\\x10\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0101\"\n                  + (arg_8h & 0xff)) & 1) != 0) {\n                uVar2 = *(*(var_10h + 0x94) + (arg_8h & 0xff));\n            }\n            arg_8h._0_2_ = uVar2;\n            goto code_r0x004596d2;\n        }\n        iVar1 = *(var_10h + 0xa8);\n    }\n    else {\n        if (arg_8h < 0x100) {\n            if ((*(\n                  L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10      (                          \\b\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0112\\x10\\x100\\x10\\x10\\x10\\x10\\x14\\x14\\x10\u0112\\x10\\x10\\x10\\x14\u0112\\x10\\x10\\x10\\x10\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0101\"\n                  + (arg_8h & 0xff)) & 1) == 0) {\n                arg_8h._0_2_ = arg_8h & 0xff;\n            }\n            else {\n                arg_8h._0_2_ = *(*(var_10h + 0x94) + (arg_8h & 0xff));\n            }\n            goto code_r0x004596d2;\n        }\n        iVar1 = *(var_10h + 0xa8);\n        if (iVar1 == 0) goto code_r0x004596d2;\n    }\n    iVar1 = fcn.0040198d(iVar1, 0x100, &arg_8h, 1, &var_4h, 1);\n    arg_8h._0_2_ = var_4h;\n    if (iVar1 == 0) {\n    }\ncode_r0x004596d2:\n    if (var_8h != '\\0') {\n        *(var_14h + 0x350) = *(var_14h + 0x350) & 0xfffffffd;\n    }\n    return arg_8h;\n}\n",
        "token_count": 1219
    },
    "00401cbc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401cbc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x00424f2c;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x00424f2c:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00404345(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar1 == 8) {\n        fcn.00402220(arg_8h_00, var_4h, arg_8h);\n    }\n    else {\n        fcn.00402e5a(arg_8h_00, arg_8h);\n    }\n    pcVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar3 = *(in_ECX + 0x30),  *pcVar3 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar3 >> 8, 1);\n}\n",
        "token_count": 1243
    },
    "00401d66": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401d66(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x004256c6;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x004256c6:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00403e1d(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar1 == 8) {\n        fcn.004042b4(arg_8h_00, var_4h, arg_8h);\n    }\n    else {\n        fcn.0040227a(arg_8h_00, arg_8h);\n    }\n    piVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar3 = *(in_ECX + 0x30),  *piVar3 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar3 >> 8, 1);\n}\n",
        "token_count": 1247
    },
    "00401d8e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401d8e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x00423e0e;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x00423e0e:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00403e1d(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar1 == 8) {\n        fcn.00403f4e(arg_8h_00, var_4h);\n    }\n    else {\n        fcn.00402df6(arg_8h_00);\n    }\n    piVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar3 = *(in_ECX + 0x30),  *piVar3 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar3 >> 8, 1);\n}\n",
        "token_count": 1241
    },
    "00401fc3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401fc3(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    puVar2 = &var_20h;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00402031": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402031(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00401e3d(*(in_ECX + 0x28));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.004022c5(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403ed6(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.004039a4(&var_ch);\n        }\n        else {\n            cVar2 = fcn.004045b6(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.004018ac(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403d0f(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00401dd9(&var_ch);\n        }\n        else {\n            cVar2 = fcn.0040137a(&var_ch);\n        }\n    }\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.00403d23();\n    if (cVar2 != '\\0') {\n        uVar3 = *(in_ECX + 0x1c);\n        arg_ch = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x1c) = uVar3;\n            arg_ch = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *(in_ECX + 0x1c) = uVar3 & 0xfffffff7;\n            fcn.00403e1d(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | arg_ch) == 0) {\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 1;\n        if (var_4h == 8) {\n            fcn.004027a7(arg_8h_00, arg_ch, arg_8h);\n        }\n        else {\n            fcn.004025a9(arg_8h_00, arg_8h);\n        }\n        if (((*(in_ECX + 0x1c) >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != 0x30)))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1065
    },
    "00402086": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402086(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00401e3d(*(in_ECX + 0x28));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.004022c5(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403ed6(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.004039a4(&var_ch);\n        }\n        else {\n            cVar2 = fcn.004045b6(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.004018ac(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403d0f(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00401dd9(&var_ch);\n        }\n        else {\n            cVar2 = fcn.0040137a(&var_ch);\n        }\n    }\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.00403d23();\n    if (cVar2 != '\\0') {\n        uVar3 = *(in_ECX + 0x1c);\n        arg_ch = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x1c) = uVar3;\n            arg_ch = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *(in_ECX + 0x1c) = uVar3 & 0xfffffff7;\n            fcn.00403e1d(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | arg_ch) == 0) {\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 1;\n        if (var_4h == 8) {\n            fcn.00402d42(arg_8h_00, arg_ch, arg_8h);\n        }\n        else {\n            fcn.00401410(arg_8h_00, arg_8h);\n        }\n        if (((*(in_ECX + 0x1c) >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != 0x30)))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1064
    },
    "0040211c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040211c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x00422ed8;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x00422ed8:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00404345(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar1 == 8) {\n        fcn.004012d5(arg_8h_00, var_4h);\n    }\n    else {\n        fcn.00404408(arg_8h_00);\n    }\n    pcVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar3 = *(in_ECX + 0x30),  *pcVar3 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar3 >> 8, 1);\n}\n",
        "token_count": 1231
    },
    "00402126": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402126(uint16_t *arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    uint16_t *puVar1;\n    uint uVar2;\n    uint uVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(*in_ECX + 0xc) >> 0xc & 1) != 0) && (*(*in_ECX + 4) == 0)) {\n        *arg_10h = *arg_10h + arg_ch;\n        return;\n    }\n    uVar2 = *(arg_14h + 0x18);\n    uVar3 = *(arg_14h + 0x1c);\n    puVar1 = arg_8h + arg_ch;\n    if (arg_8h != puVar1) {\n        do {\n            cVar4 = fcn.00403e40(*arg_8h, arg_14h);\n            if (cVar4 == '\\0') {\n                if ((*(arg_14h + 0x1c) == '\\0') || (*(arg_14h + 0x18) != 0x2a)) {\n                    *arg_10h = -1;\n                    break;\n                }\n                cVar4 = fcn.00403e40(0x3f, arg_14h);\n                if (cVar4 != '\\0') goto code_r0x0043d032;\n                *arg_10h = -1;\n            }\n            else {\ncode_r0x0043d032:\n                *arg_10h = *arg_10h + 1;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != puVar1);\n    }\n    *(arg_14h + 0x18) = uVar2;\n    *(arg_14h + 0x1c) = uVar3;\n    return;\n}\n",
        "token_count": 470
    },
    "004021c6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004021c6(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x00426bba;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x00426bba:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00403e1d(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar1 == 8) {\n        fcn.0040196a(arg_8h_00, var_4h, arg_8h);\n    }\n    else {\n        fcn.00401d4d(arg_8h_00, arg_8h);\n    }\n    piVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar3 = *(in_ECX + 0x30),  *piVar3 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar3 >> 8, 1);\n}\n",
        "token_count": 1248
    },
    "004021fd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004021fd(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *(arg_8h * 8 + 0x469eb0);\n    iVar2 = *(arg_8h * 8 + 0x469eb4);\n    if ((~*0x476420 & 1) == 0) {\n        iVar1 = iVar1 + 2;\n        iVar2 = iVar2 + -2;\n    }\n    return CONCAT44(iVar2, iVar1);\n}\n",
        "token_count": 126
    },
    "0040228e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040228e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x00423ff0;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x00423ff0:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00403e1d(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar1 == 8) {\n        fcn.00402cb1(arg_8h_00, var_4h);\n    }\n    else {\n        fcn.004035da(arg_8h_00);\n    }\n    piVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar3 = *(in_ECX + 0x30),  *piVar3 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar3 >> 8, 1);\n}\n",
        "token_count": 1236
    },
    "004022d9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043ecdf)\n// WARNING: Removing unreachable block (ram,0x0043ecf7)\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.004022d9(int32_t arg_8h, uint16_t *arg_ch, uint16_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint64_t uVar1;\n    uint16_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint16_t uVar7;\n    uint32_t arg_8h_00;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    int32_t var_90h;\n    uint var_8ch;\n    uint var_88h;\n    int32_t var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar2 = arg_ch;\n    cVar3 = fcn.00401d57();\n    if (cVar3 == '\\0') {\ncode_r0x0043e788:\n        if (arg_10h != NULL) {\n            *arg_10h = arg_ch;\n        }\n        return 0;\n    }\n    if ((arg_14h != 0) && ((arg_14h < 2 || (0x24 < arg_14h)))) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_8h);\n        goto code_r0x0043e788;\n    }\n    arg_8h_00 = *arg_ch;\n    arg_ch = arg_ch + 1;\n    if (*(arg_8h + 0x14) == '\\0') {\n        fcn.004024f0();\n    }\n    while (iVar4 = fcn.00401a96(arg_8h_00, 8),  iVar4 != 0) {\n        arg_8h_00 = *arg_ch;\n        arg_ch = arg_ch + 1;\n    }\n    var_4h = arg_18h & 0xff;\n    if (arg_8h_00 == 0x2d) {\n        var_4h = var_4h | 2;\ncode_r0x0043e7f9:\n        arg_8h_00 = *arg_ch;\n        arg_ch = arg_ch + 1;\n    }\n    else if (arg_8h_00 == 0x2b) goto code_r0x0043e7f9;\n    var_90h = 0x660;\n    var_84h = 0x1810;\n    if ((arg_14h != 0) && (arg_14h != 0x10)) goto code_r0x0043eb03;\n    uVar7 = arg_8h_00;\n    if (uVar7 < 0x30) goto code_r0x0043ea93;\n    iVar4 = 0x30;\n    if (uVar7 < 0x3a) {\ncode_r0x0043e928:\n        iVar4 = -iVar4;\ncode_r0x0043ea8e:\n        iVar4 = arg_8h_00 + iVar4;\n        if (iVar4 == -1) goto code_r0x0043ea93;\ncode_r0x0043eab8:\n        if (iVar4 == 0) {\n            uVar5 = *arg_ch;\n            if ((uVar5 == 0x78) || (uVar5 == 0x58)) {\n                if (arg_14h == 0) {\n                    arg_14h = 0x10;\n                }\n                arg_8h_00 = arg_ch[1];\n                arg_ch = arg_ch + 2;\n            }\n            else {\n                if (arg_14h == 0) {\n                    arg_14h = 8;\n                }\n                fcn.00402315(uVar5);\n                arg_ch = arg_ch + 1;\n            }\n            goto code_r0x0043eb03;\n        }\n    }\n    else {\n        if (uVar7 < 0xff10) {\n            if ((0x65f < uVar7) &&\n               ((iVar4 = var_90h,  uVar7 < 0x66a ||\n                ((iVar4 = 0x6f0,  0x6ef < uVar7 &&\n                 ((uVar7 < 0x6fa ||\n                  ((iVar4 = 0x966,  0x965 < uVar7 &&\n                   ((uVar7 < 0x970 ||\n                    ((iVar4 = 0x9e6,  0x9e5 < uVar7 &&\n                     ((uVar7 < 0x9f0 ||\n                      ((iVar4 = 0xa66,  0xa65 < uVar7 &&\n                       ((uVar7 < 0xa70 ||\n                        ((iVar4 = 0xae6,  0xae5 < uVar7 &&\n                         ((uVar7 < 0xaf0 ||\n                          ((iVar4 = 0xb66,  0xb65 < uVar7 &&\n                           ((uVar7 < 0xb70 ||\n                            ((iVar4 = 0xc66,  0xc65 < uVar7 &&\n                             ((uVar7 < 0xc70 ||\n                              ((iVar4 = 0xce6,  0xce5 < uVar7 &&\n                               ((uVar7 < 0xcf0 ||\n                                ((iVar4 = 0xd66,  0xd65 < uVar7 &&\n                                 ((uVar7 < 0xd70 ||\n                                  ((iVar4 = 0xe50,  0xe4f < uVar7 &&\n                                   ((uVar7 < 0xe5a ||\n                                    ((iVar4 = 0xed0,  0xecf < uVar7 &&\n                                     ((uVar7 < 0xeda ||\n                                      ((iVar4 = 0xf20,  0xf1f < uVar7 &&\n                                       ((uVar7 < 0xf2a ||\n                                        ((iVar4 = 0x1040,  0x103f < uVar7 &&\n                                         ((uVar7 < 0x104a ||\n                                          ((iVar4 = 0x17e0,  0x17df < uVar7 &&\n                                           ((uVar7 < 0x17ea || ((iVar4 = 0x1810,  0x180f < uVar7 && (uVar7 < 0x181a)))))\n                                           )))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n            goto code_r0x0043e928;\n        }\n        else if (uVar7 < 0xff1a) {\n            iVar4 = -0xff10;\n            goto code_r0x0043ea8e;\n        }\ncode_r0x0043ea93:\n        if (((0x40 < arg_8h_00) && (arg_8h_00 < 0x5b)) || (arg_8h_00 - 0x61 < 0x1a)) {\n            uVar5 = arg_8h_00;\n            if (arg_8h_00 - 0x61 < 0x1a) {\n                uVar5 = arg_8h_00 - 0x20;\n            }\n            iVar4 = uVar5 - 0x37;\n            goto code_r0x0043eab8;\n        }\n    }\n    if (arg_14h == 0) {\n        arg_14h = 10;\n    }\ncode_r0x0043eb03:\n    uVar8 = fcn.00403242(0xffffffff, 0xffffffff, arg_14h, arg_14h >> 0x1f);\n    uVar1 = 0;\n    do {\n        iVar4 = uVar1 >> 0x20;\n        var_8h = uVar1;\n        uVar7 = arg_8h_00;\n        if (uVar7 < 0x30) goto code_r0x0043ec8e;\n        iVar6 = 0x30;\n        if (uVar7 < 0x3a) {\ncode_r0x0043ec84:\n            uVar5 = arg_8h_00 - iVar6;\n            if (uVar5 == 0xffffffff) goto code_r0x0043ec8e;\n        }\n        else {\n            iVar6 = 0xff10;\n            if (uVar7 < 0xff10) {\n                if (0x65f < uVar7) {\n                    iVar6 = var_90h;\n                    if (uVar7 < 0x66a) goto code_r0x0043ec84;\n                    iVar6 = 0x6f0;\n                    if (0x6ef < uVar7) {\n                        if (uVar7 < 0x6fa) goto code_r0x0043ec84;\n                        iVar6 = 0x966;\n                        if (0x965 < uVar7) {\n                            if (uVar7 < 0x970) goto code_r0x0043ec84;\n                            iVar6 = 0x9e6;\n                            if (0x9e5 < uVar7) {\n                                if (uVar7 < 0x9f0) goto code_r0x0043ec84;\n                                iVar6 = 0xa66;\n                                if (0xa65 < uVar7) {\n                                    if (uVar7 < 0xa70) goto code_r0x0043ec84;\n                                    iVar6 = 0xae6;\n                                    if (0xae5 < uVar7) {\n                                        if (uVar7 < 0xaf0) goto code_r0x0043ec84;\n                                        iVar6 = 0xb66;\n                                        if (0xb65 < uVar7) {\n                                            if (uVar7 < 0xb70) goto code_r0x0043ec84;\n                                            iVar6 = 0xc66;\n                                            if (0xc65 < uVar7) {\n                                                if (uVar7 < 0xc70) goto code_r0x0043ec84;\n                                                iVar6 = 0xce6;\n                                                if (0xce5 < uVar7) {\n                                                    if (uVar7 < 0xcf0) goto code_r0x0043ec84;\n                                                    iVar6 = 0xd66;\n                                                    if (0xd65 < uVar7) {\n                                                        if (uVar7 < 0xd70) goto code_r0x0043ec84;\n                                                        iVar6 = 0xe50;\n                                                        if (0xe4f < uVar7) {\n                                                            if (uVar7 < 0xe5a) goto code_r0x0043ec84;\n                                                            iVar6 = 0xed0;\n                                                            if (0xecf < uVar7) {\n                                                                if (uVar7 < 0xeda) goto code_r0x0043ec84;\n                                                                iVar6 = 0xf20;\n                                                                if (0xf1f < uVar7) {\n                                                                    if (uVar7 < 0xf2a) goto code_r0x0043ec84;\n                                                                    iVar6 = 0x1040;\n                                                                    if (0x103f < uVar7) {\n                                                                        if (uVar7 < 0x104a) goto code_r0x0043ec84;\n                                                                        iVar6 = 0x17e0;\n                                                                        if (0x17df < uVar7) {\n                                                                            if (uVar7 < 0x17ea) goto code_r0x0043ec84;\n                                                                            if (0x180f < uVar7) {\n                                                                                var_88h._0_2_ = 0x181a;\n                                                                                iVar6 = var_84h;\n                                                                                goto code_r0x0043ec82;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                var_8ch._0_2_ = 0xff1a;\n                var_88h._0_2_ = var_8ch;\ncode_r0x0043ec82:\n                if (uVar7 < var_88h) goto code_r0x0043ec84;\n            }\ncode_r0x0043ec8e:\n            if (((arg_8h_00 < 0x41) || (0x5a < arg_8h_00)) && (0x19 < arg_8h_00 - 0x61)) {\n                uVar5 = 0xffffffff;\n            }\n            else {\n                uVar5 = arg_8h_00;\n                if (arg_8h_00 - 0x61 < 0x1a) {\n                    uVar5 = arg_8h_00 - 0x20;\n                }\n                uVar5 = uVar5 - 0x37;\n            }\n        }\n        if (arg_14h <= uVar5) {\n            fcn.00402315(arg_8h_00);\n            if ((var_4h & 8) == 0) {\n                if (arg_10h == NULL) {\n                    return 0;\n                }\n                *arg_10h = puVar2;\n                return 0;\n            }\n            cVar3 = fcn.00402a90(var_4h, var_8h, iVar4);\n            if (cVar3 == '\\0') {\n                if ((var_4h & 2) != 0) {\n                    uVar1 = CONCAT44(-(iVar4 + (var_8h != 0)), -var_8h);\n                }\n            }\n            else {\n                *(arg_8h + 0x1c) = 1;\n                *(arg_8h + 0x18) = 0x22;\n                if ((var_4h & 1) != 0) {\n                    if ((var_4h & 2) == 0) {\n                        if (arg_10h != NULL) {\n                            *arg_10h = arg_ch;\n                        }\n                        return 0x7fffffffffffffff;\n                    }\n                    if (arg_10h != NULL) {\n                        *arg_10h = arg_ch;\n                    }\n                    return 0x8000000000000000;\n                }\n                uVar1 = 0xffffffffffffffff;\n            }\n            if (arg_10h != NULL) {\n                *arg_10h = arg_ch;\n                return uVar1;\n            }\n            return uVar1;\n        }\n        uVar9 = fcn.00401da2();\n        var_4h = var_4h | (uVar9 + 0x1c < uVar9 || uVar8 < uVar1) << 2 | 8;\n        arg_8h_00 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        uVar1 = uVar9 + 0x1c;\n    } while( true );\n}\n",
        "token_count": 3589
    },
    "0040235b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.0040235b(uint32_t arg_8h, double *arg_ch, uint32_t arg_10h)\n\n{\n    double dVar1;\n    double dVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    double dVar5;\n    int32_t iVar6;\n    uint32_t extraout_ECX;\n    uint32_t uVar7;\n    float10 fVar8;\n    float10 fVar9;\n    uint32_t var_24h;\n    uint8_t var_20h;\n    uchar uStack35;\n    uint var_1eh;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint var_ch;\n    double dStack20;\n    uint32_t var_8h;\n    char var_2h;\n    uint var_1h;\n    \n    uVar7 = arg_8h & 0x1f;\n    if (((arg_8h & 8) != 0) && ((arg_10h & 1) != 0)) {\n        fcn.00401bc2(1);\n        uVar7 = arg_8h & 0x17;\n        goto code_r0x0045e6c9;\n    }\n    if ((arg_8h & arg_10h & 4) != 0) {\n        fcn.00401bc2(4);\n        uVar7 = arg_8h & 0x1b;\n        goto code_r0x0045e6c9;\n    }\n    if (((arg_8h & 1) == 0) || ((arg_10h & 8) == 0)) {\n        if (((arg_8h & 2) == 0) || ((arg_10h & 0x10) == 0)) goto code_r0x0045e6c9;\n        dVar2 = *arg_ch;\n        uVar7 = arg_8h >> 4 & 1;\n        var_8h = uVar7;\n        if (dVar2 == 0.0) {\ncode_r0x0045e6bd:\n            fcn.00401bc2(0x10);\n        }\n        else {\n            fVar8 = fcn.004029f5(SUB84(dVar2, 0), dVar2 >> 0x20, &var_18h);\n            var_18h = var_18h + -0x600;\n            dVar2 = fVar8;\n            var_24h = SUB84(dVar2, 0);\n            var_20h = dVar2 >> 0x20;\n            uStack35 = dVar2 >> 0x28;\n            var_1eh._0_2_ = dVar2 >> 0x30;\n            fVar9 = 0;\n            if (var_18h < -0x432) {\n                fVar9 = fVar9 * fVar8;\n                uVar7 = 1;\n            }\n            else {\n                var_1h._0_1_ = ((fVar9 < fVar8) << 8 | (fVar9 == fVar8) << 0xe) == 0;\n                var_14h = extraout_ECX & 0xffffff00;\n                var_2h = '\\0';\n                var_1eh._0_2_ = var_1eh & 0xf | 0x10;\n                if (var_18h < -0x3fd) {\n                    var_18h = -0x3fd - var_18h;\n                    do {\n                        var_14h = var_24h & 1;\n                        if (var_14h != 0) {\n                            if (uVar7 == 0) {\n                                uVar7 = 1;\n                            }\n                            var_2h = '\\x01';\n                        }\n                        var_24h = var_24h >> 1;\n                        if ((var_20h & 1) != 0) {\n                            var_24h = var_24h | 0x80000000;\n                        }\n                        uVar3 = CONCAT22(var_1eh, CONCAT11(uStack35, var_20h)) >> 1;\n                        var_20h = uVar3;\n                        uStack35 = uVar3 >> 8;\n                        var_1eh._0_2_ = var_1eh >> 1;\n                        var_18h = var_18h + -1;\n                        var_8h = uVar7;\n                    } while (var_18h != 0);\n                }\n                dStack20 = CONCAT26(var_1eh, CONCAT15(uStack35, CONCAT14(var_20h, var_24h)));\n                fVar9 = dStack20;\n                if (var_1h) {\n                    fVar9 = -fVar9;\n                    dStack20 = fVar9;\n                    dVar2 = fVar9;\n                    var_24h = SUB84(dVar2, 0);\n                    var_20h = dVar2 >> 0x20;\n                    uStack35 = dVar2 >> 0x28;\n                    var_1eh._0_2_ = dVar2 >> 0x30;\n                }\n                if ((var_14h != '\\0') || (uVar7 = var_8h,  var_2h != '\\0')) {\n                    iVar6 = fcn.0040344f();\n                    uVar7 = var_8h;\n                    if (iVar6 == 0) {\n                        if (var_14h == '\\0') goto code_r0x0045e6aa;\n                        if (var_2h == '\\0') {\n                            uVar4 = var_24h & 1;\n                            goto code_r0x0045e699;\n                        }\n                    }\n                    else {\n                        uVar4 = var_1h;\n                        if (iVar6 != 0x100) {\n                            if (iVar6 != 0x200) goto code_r0x0045e6aa;\n                            uVar4 = var_1h ^ 1;\n                        }\ncode_r0x0045e699:\n                        if (uVar4 == 0) {\ncode_r0x0045e6aa:\n                            fVar9 = dStack20;\n                            goto code_r0x0045e6b0;\n                        }\n                    }\n                    iVar6 = CONCAT22(var_1eh, CONCAT11(uStack35, var_20h)) + (0xfffffffe < var_24h);\n                    var_20h = iVar6;\n                    uStack35 = iVar6 >> 8;\n                    var_1eh._0_2_ = iVar6 >> 0x10;\n                    fVar9 = CONCAT26(var_1eh, CONCAT15(uStack35, CONCAT14(var_20h, var_24h + 1)));\n                }\n            }\ncode_r0x0045e6b0:\n            *arg_ch = fVar9;\n            if (uVar7 != 0) goto code_r0x0045e6bd;\n        }\n        uVar7 = arg_8h & 0x1d;\n        goto code_r0x0045e6c9;\n    }\n    fcn.00401bc2(8);\n    uVar7 = arg_10h & 0xc00;\n    dVar2 = *0x4728e8;\n    dVar5 = *0x4728e8;\n    if (uVar7 == 0) {\n        dVar1 = *arg_ch;\njoined_r0x0045e512:\n        if (dVar1 <= 0.0) {\n            dVar2 = -dVar5;\n        }\n        *arg_ch = dVar2;\n    }\n    else {\n        if (uVar7 == 0x400) {\n            dVar1 = *arg_ch;\n            dVar2 = *0x472908;\n            goto joined_r0x0045e512;\n        }\n        dVar5 = *0x472908;\n        if (uVar7 == 0x800) {\n            dVar1 = *arg_ch;\n            goto joined_r0x0045e512;\n        }\n        if (uVar7 == 0xc00) {\n            dVar1 = *arg_ch;\n            dVar2 = *0x472908;\n            goto joined_r0x0045e512;\n        }\n    }\n    uVar7 = arg_8h & 0x1e;\ncode_r0x0045e6c9:\n    if (((arg_8h & 0x10) != 0) && ((arg_10h & 0x20) != 0)) {\n        fcn.00401bc2(0x20);\n        uVar7 = uVar7 & 0xffffffef;\n    }\n    return uVar7 == 0;\n}\n",
        "token_count": 1959
    },
    "00402496": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_8ch\n\nchar ** __cdecl fcn.00402496(char **arg_8h, char **arg_ch)\n\n{\n    uint uVar1;\n    char **ppcVar2;\n    uint *puVar3;\n    char *pcVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    uint *var_8ch;\n    char **var_84h;\n    uint var_7ch;\n    char **var_78h;\n    char *var_74h;\n    uint var_70h;\n    uint32_t var_68h;\n    char *var_64h;\n    int32_t var_60h;\n    char *var_5ch;\n    uint32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    char **var_48h;\n    uint var_44h;\n    char **var_40h;\n    char *var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    char *var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    char **var_18h;\n    uint32_t var_14h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    var_34h = *0x476418 - *0x47641c;\n    pcVar8 = NULL;\n    var_10h = NULL;\n    var_ch = NULL;\n    var_14h = fcn.00401807();\n    var_18h = arg_ch + 1;\n    if ((*arg_ch == NULL) || ((*var_18h & 0x200) == 0)) {\n        var_60h = 0;\n    }\n    else {\n        var_60h = 1;\n    }\n    if (var_14h == 0xffff) {\n        fcn.004014dd(2);\n        return arg_8h;\n    }\n    if (var_14h == 0xfffe) {\n        fcn.004011db(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    if (var_14h == 0xfffd) {\n        *arg_8h = *arg_ch;\n        pcVar4 = *var_18h;\n        goto code_r0x0040dafa;\n    }\n    uVar6 = var_14h & 0x8000;\n    var_30h = uVar6;\n    if (uVar6 == 0) {\ncode_r0x0040d52c:\n        fcn.00402310(arg_ch);\n        var_34h = var_14h & 0x7c00;\n        if (uVar6 == 0) {\n            if ((var_34h == 0x6800) || (var_34h == 0x7000)) {\n                fcn.004033b9(arg_8h, &fcn.00402496::var_10h);\n                return arg_8h;\n            }\n            if (var_34h == 0x6000) {\n                var_8h = var_10h;\n                var_3ch = 0x46ab40;\n                var_38h = 2;\n                var_4h = var_ch;\n                fcn.00402b99(0x7b);\n                fcn.004026ee(&fcn.00402496::var_54h, 0);\n                fcn.0040395e(&fcn.00402496::var_2ch, &fcn.00402496::var_54h);\n                fcn.004037d3(arg_8h, &fcn.00402496::var_3ch);\n                return arg_8h;\n            }\n        }\n        if ((var_14h & 0xfc00) == 0x7c00) {\n            fcn.00403cb5(arg_8h, &fcn.00402496::var_10h);\n            return arg_8h;\n        }\n        uVar9 = var_14h & 0x6000;\n        uVar5 = var_14h & 0x1800;\n        if (uVar6 == 0) {\n            bVar10 = uVar9 == 0;\n        }\n        else {\n            bVar10 = uVar5 == 0x800;\n        }\n        var_48h = var_14h & 0x1000;\n        var_40h = var_14h & 0x400;\n        ppcVar2 = var_40h;\n        if (!bVar10) {\n            ppcVar2 = var_48h;\n        }\n        var_1ch = uVar9;\n        if ((ppcVar2 == NULL) || ((var_14h & 0x1b00) != 0x1000 || uVar6 == 0)) {\n            if (uVar6 == 0) {\n                bVar10 = uVar9 == 0;\n            }\n            else {\n                bVar10 = uVar5 == 0x800;\n            }\n            ppcVar2 = var_40h;\n            if (!bVar10) {\n                ppcVar2 = var_48h;\n            }\n            if ((ppcVar2 != NULL) && ((var_14h & 0x1b00) == 0x1100 && uVar6 != 0)) {\n                var_8h = \"`template static data member constructor helper\\'\";\n                var_4h = 0x30;\n                goto code_r0x0040d6f4;\n            }\n            if (uVar6 == 0) {\n                bVar10 = uVar9 == 0;\n            }\n            else {\n                bVar10 = uVar5 == 0x800;\n            }\n            ppcVar2 = var_40h;\n            if (!bVar10) {\n                ppcVar2 = var_48h;\n            }\n            if ((ppcVar2 != NULL) && ((var_14h & 0x1b00) == 0x1200 && uVar6 != 0)) {\n                var_8h = \"`template static data member destructor helper\\'\";\n                var_4h = 0x2f;\n                goto code_r0x0040d6f4;\n            }\n            if (uVar6 == 0) {\n                pcVar4 = var_ch;\n                if (var_34h == 0x7800) goto code_r0x0040daf5;\n                goto code_r0x0040d778;\n            }\ncode_r0x0040d707:\n            bVar10 = uVar5 == 0x800;\n        }\n        else {\n            var_8h = \"`local static destructor helper\\'\";\n            var_4h = 0x20;\ncode_r0x0040d6f4:\n            fcn.00403f03(&fcn.00402496::var_8h);\n            if (uVar6 != 0) goto code_r0x0040d707;\ncode_r0x0040d778:\n            bVar10 = uVar9 == 0;\n        }\n        ppcVar2 = var_40h;\n        if (!bVar10) {\n            ppcVar2 = var_48h;\n        }\n        if ((ppcVar2 == NULL) ||\n           (((var_14h & 0x1b00) != 0x1100 || uVar6 == 0 && ((var_14h & 0x1b00) != 0x1200 || uVar6 == 0)))) {\n            ppcVar2 = fcn.0040147e(&fcn.00402496::var_2ch, &fcn.00402496::var_10h);\n        }\n        else {\n            ppcVar2 = fcn.004022e3(&fcn.00402496::var_2ch, 0x20, &fcn.00402496::var_10h);\n        }\n        var_18h = ppcVar2[1];\n        var_10h = *ppcVar2;\n        pcVar4 = var_18h;\n        var_ch = var_18h;\n        if (var_30h == 0) {\n            bVar10 = var_1ch == 0;\n            var_ch = var_18h;\n        }\n        else {\ncode_r0x0040d7a8:\n            var_18h = pcVar4;\n            bVar10 = uVar5 == 0x800;\n        }\n        var_4h = var_18h;\n        uVar6 = var_30h;\n        if (bVar10) {\n            if ((~(*0x476420 >> 9) & 1) != 0) {\n                if (var_30h == 0) {\n                    bVar10 = var_1ch == 0;\n                }\n                else {\n                    bVar10 = uVar5 == 0x800;\n                }\n                if (bVar10) {\n                    if ((var_30h == 0) || ((var_14h & 0x700) == 0x200)) {\n                        var_8h = \"static \";\n                        var_4h = 0x7;\n                        fcn.00402211(&fcn.00402496::var_8h);\n                        fcn.0040395e(&fcn.00402496::var_8h, &fcn.00402496::var_10h);\n                        var_10h = var_8h;\n                        var_18h = var_4h;\n                        var_ch = var_4h;\n                        goto code_r0x0040d83d;\n                    }\ncode_r0x0040d844:\n                    uVar6 = var_14h & 0x700;\n                    if (uVar6 != 0x100) {\n                        bVar10 = uVar5 == 0x800;\n                        goto code_r0x0040d875;\n                    }\n                }\n                else {\ncode_r0x0040d83d:\n                    if (var_30h != 0) goto code_r0x0040d844;\n                    bVar10 = var_1ch == 0;\n                    uVar6 = var_14h & 0x700;\ncode_r0x0040d875:\n                    if ((var_14h & (-bVar10 & 0xfffff400) + 0x1000) == 0) goto code_r0x0040d941;\n                    if (var_30h == 0) {\n                        bVar10 = var_1ch == 0;\n                    }\n                    else {\n                        bVar10 = uVar5 == 0x800;\n                    }\n                    var_20h = bVar10;\n                    if ((var_20h == 0) || (uVar6 != 0x500)) {\n                        if (var_30h == 0) {\n                            bVar10 = var_1ch == 0;\n                        }\n                        else {\n                            bVar10 = uVar5 == 0x800;\n                        }\n                        var_20h = bVar10;\n                        if ((var_20h == 0) || (uVar6 != 0x600)) {\n                            if (var_30h == 0) {\n                                bVar10 = var_1ch == 0;\n                            }\n                            else {\n                                bVar10 = uVar5 == 0x800;\n                            }\n                            if ((!bVar10) || (uVar6 != 0x400)) goto code_r0x0040d941;\n                        }\n                    }\n                }\n                var_8h = \"virtual \";\n                var_4h = 0x8;\n                fcn.00402211(&fcn.00402496::var_8h);\n                fcn.0040395e(&fcn.00402496::var_8h, &fcn.00402496::var_10h);\n                var_10h = var_8h;\n                var_18h = var_4h;\n                var_ch = var_4h;\n            }\ncode_r0x0040d941:\n            uVar6 = var_30h;\n            var_4h = var_18h;\n            if ((~(*0x476420 >> 7) & 1) != 0) {\n                if (var_30h == 0) {\n                    bVar10 = var_1ch == 0;\n                }\n                else {\n                    bVar10 = uVar5 == 0x800;\n                }\n                if (bVar10) {\n                    if (var_30h == 0) {\n                        bVar10 = uVar5 == 0x800;\n                    }\n                    else {\n                        var_34h = 0;\n                        bVar10 = (var_14h & 0xc0) == 0x40;\n                    }\n                    if (!bVar10) goto code_r0x0040d9a2;\n                    var_8h = \"private: \";\n                    var_4h = 0x9;\ncode_r0x0040d9e9:\n                    fcn.00402211(&fcn.00402496::var_8h);\n                    fcn.0040395e(&fcn.00402496::var_8h, &fcn.00402496::var_10h);\n                    var_10h = var_8h;\n                    var_ch = var_4h;\n                }\n                else {\ncode_r0x0040d9a2:\n                    if (var_30h == 0) {\n                        bVar10 = var_1ch == 0;\n                    }\n                    else {\n                        bVar10 = uVar5 == 0x800;\n                    }\n                    if (bVar10) {\n                        if (var_30h == 0) {\n                            bVar10 = uVar5 == 0x1000;\n                        }\n                        else {\n                            var_34h = 0;\n                            bVar10 = (var_14h & 0xc0) == 0x80;\n                        }\n                        if (bVar10) {\n                            var_8h = \"protected: \";\n                            var_4h = 0xb;\n                            goto code_r0x0040d9e9;\n                        }\n                    }\n                    if (var_30h == 0) {\n                        bVar10 = var_1ch == 0;\n                    }\n                    else {\n                        bVar10 = uVar5 == 0x800;\n                    }\n                    if (bVar10) {\n                        uVar9 = uVar5;\n                        if (var_30h != 0) {\n                            uVar9 = var_14h & 0xc0;\n                        }\n                        if (uVar9 == 0) {\n                            var_8h = \"public: \";\n                            var_4h = 0x8;\n                            goto code_r0x0040d9e9;\n                        }\n                    }\n                }\n            }\n        }\n        uVar9 = var_14h;\n        if (uVar6 == 0) {\n            bVar10 = var_1ch == 0;\n        }\n        else {\n            bVar10 = uVar5 == 0x800;\n        }\n        if (((var_14h & (-bVar10 & 0xfffff400) + 0x1000) != 0) && ((*0x476420 & 0x1000) == 0)) {\n            var_8h = \"[thunk]:\";\n            var_4h = 0x8;\n            fcn.00402211(&fcn.00402496::var_8h);\n            fcn.0040395e(&fcn.00402496::var_8h, &fcn.00402496::var_10h);\n            var_10h = var_8h;\n            var_ch = var_4h;\n        }\n        pcVar4 = var_4h;\n        if ((uVar9 & 0x10000) != 0) {\n            var_8h = \"extern \\\"C\\\" \";\n            var_4h = 0xb;\n            fcn.00402211(&fcn.00402496::var_8h);\n            fcn.0040395e(&fcn.00402496::var_8h, &fcn.00402496::var_10h);\n            pcVar4 = var_4h;\n            var_10h = var_8h;\n        }\n    }\n    else {\n        var_1ch = var_14h & 0x6000;\n        uVar5 = var_14h & 0x1800;\n        var_78h = var_14h & 0x400;\n        var_48h = var_14h & 0x1000;\n        ppcVar2 = var_48h;\n        if (uVar5 == 0x800) {\n            ppcVar2 = var_78h;\n        }\n        if ((ppcVar2 != NULL) && ((var_14h & 0x1b00) == 0x1000)) goto code_r0x0040d52c;\n        var_40h = var_48h;\n        if (uVar5 == 0x800) {\n            var_40h = var_78h;\n        }\n        if ((var_40h != NULL) && (((var_14h & 0x1b00) == 0x1100 || ((var_14h & 0x1b00) == 0x1200))))\n        goto code_r0x0040d52c;\n        if ((var_14h & 0x4000) != 0) {\n            if ((~((*0x476420 >> 2 | *0x476420) >> 1) & 1) == 0) {\n                uVar1 = fcn.0040380a(&fcn.00402496::var_8h);\n                fcn.00404692(uVar1);\n            }\n            else {\n                uVar1 = fcn.0040380a(&fcn.00402496::var_8h);\n                ppcVar2 = fcn.004022e3(&fcn.00402496::var_3ch, 0x20, uVar1);\n                var_10h = *ppcVar2;\n                var_ch = ppcVar2[1];\n            }\n        }\n        ppcVar2 = var_78h;\n        if (uVar5 != 0x800) {\n            ppcVar2 = var_48h;\n        }\n        if ((ppcVar2 != NULL) && (uVar5 == 0x1800)) {\n            var_84h = &fcn.00402496::var_3ch;\n            fcn.0040256d(var_84h, 0x7b);\n            var_8ch = &fcn.00402496::var_8h;\n            fcn.004026ee(var_8ch, 0);\n            var_8ch = &fcn.00402496::var_54h;\n            uVar1 = fcn.0040395e(var_8ch, &fcn.00402496::var_8h);\n            fcn.00402310(uVar1);\n            fcn.00402b2b(&fcn.00402496::var_3ch);\n            if ((*0x476420 & 0x1000) == 0) {\n                var_8h = 0x46ab3c;\n                var_4h = 0x3;\n                fcn.004022e3(&fcn.00402496::var_54h, 0x2c, &fcn.00402496::var_3ch);\n                uVar1 = fcn.004037d3(&fcn.00402496::var_5ch, &fcn.00402496::var_8h);\n                fcn.00402310(uVar1);\n            }\n            var_8h = 0x46ab40;\n            var_4h = 0x2;\n            fcn.00403f03(&fcn.00402496::var_8h);\n            fcn.00402987(&fcn.00402496::var_8h);\n            pcVar4 = var_ch;\n            if ((((~(*0x476420 >> 1) & 1) != 0) && (pcVar4 = var_ch,  (~(*0x476420 >> 4) & 1) != 0)) &&\n               (pcVar4 = var_ch,  (*0x476420 & 0x1000) == 0)) {\n                fcn.004022e3(&fcn.00402496::var_3ch, 0x20, &fcn.00402496::var_8h);\n                fcn.0040256d(&fcn.00402496::var_54h, 0x20);\n                ppcVar2 = fcn.0040395e(&fcn.00402496::var_5ch, &fcn.00402496::var_10h);\n                var_10h = *ppcVar2;\n                var_ch = ppcVar2[1];\n                pcVar4 = var_ch;\n            }\n            goto code_r0x0040d7a8;\n        }\n        var_3ch = NULL;\n        var_38h = 0;\n        var_8h = NULL;\n        var_4h = NULL;\n        var_5ch = NULL;\n        var_58h = 0;\n        var_74h = NULL;\n        var_20h = 0;\n        var_54h = 0;\n        var_50h = 0;\n        ppcVar2 = var_78h;\n        if (uVar5 != 0x800) {\n            ppcVar2 = var_48h;\n        }\n        uVar6 = var_14h & 0x700;\n        var_68h = uVar6;\n        if (ppcVar2 != NULL) {\n            if (uVar5 == 0x800) {\n                if (uVar6 == 0x600) {\n                    var_84h = &fcn.00402496::var_24h;\n                    fcn.004026ee(var_84h, 1);\n                    var_3ch = var_24h;\n                    var_38h = var_20h;\n                    var_8ch = &fcn.00402496::var_24h;\n                    fcn.004026ee(var_8ch, 1);\n                    var_8h = var_24h;\n                    var_4h = var_20h;\n                    fcn.004026ee(&fcn.00402496::var_24h, 1);\n                }\n                else {\n                    if (uVar6 != 0x500) goto code_r0x0040d164;\n                    var_84h = &fcn.00402496::var_24h;\n                    fcn.004026ee(var_84h, 1);\n                }\n                var_5ch = var_24h;\n            }\ncode_r0x0040d164:\n            var_84h = &fcn.00402496::var_24h;\n            var_58h = var_20h;\n            fcn.004026ee(var_84h, 1);\n            var_74h = var_24h;\n        }\n        if ((uVar5 == 0x800) && (uVar6 != 0x200)) {\n            if ((*0x476420 & 0x60) == 0x60) {\n                var_84h = 0x40d1b6;\n                uVar1 = fcn.00403c5b(&fcn.00402496::var_44h);\n                var_84h = 0x40d1c0;\n                fcn.00404692(uVar1);\n            }\n            else {\n                var_84h = 0x40d1a3;\n                puVar3 = fcn.00403c5b(&fcn.00402496::var_44h);\n                var_54h = *puVar3;\n                var_50h = puVar3[1];\n            }\n        }\n        if (((~(*0x476420 >> 1) & 1) == 0) || ((~(*0x476420 >> 4) & 1) == 0)) {\n            var_84h = 0x40d209;\n            puVar3 = fcn.00402987(&fcn.00402496::var_70h);\n            var_84h = 0x40d213;\n            fcn.00404692(puVar3);\n        }\n        else {\n            var_84h = 0x40d1e3;\n            fcn.00402987(&fcn.00402496::var_44h);\n            puVar3 = &fcn.00402496::var_10h;\n            var_84h = &fcn.00402496::var_70h;\n            ppcVar2 = fcn.0040395e(var_84h, puVar3);\n            var_10h = *ppcVar2;\n            var_ch = ppcVar2[1];\n        }\n        if (*arg_ch != NULL) {\n            if ((var_10h == NULL) || ((*0x476420 & 0x1000) != 0)) {\n                var_ch = *var_18h;\n                var_10h = *arg_ch;\n            }\n            else {\n                var_84h = arg_ch;\n                var_8ch = &fcn.00402496::var_70h;\n                var_84h = fcn.004022e3(var_8ch, 0x20, arg_ch);\n                fcn.00402310(var_84h);\n            }\n        }\n        pcVar7 = NULL;\n        var_40h = NULL;\n        var_18h = NULL;\n        if (var_60h == 0) {\n            var_84h = 0x8;\n            var_40h = fcn.004038c8(8);\n            if (var_40h == NULL) {\n                var_40h = NULL;\n            }\n            else {\n                *var_40h = NULL;\n                var_40h[1] = NULL;\n            }\n            var_8ch = &fcn.00402496::var_70h;\n            ppcVar2 = fcn.00402e6e(var_8ch, var_40h);\n            pcVar7 = ppcVar2[1];\n            pcVar8 = *ppcVar2;\n            var_18h = pcVar7;\ncode_r0x0040d2cb:\n            ppcVar2 = var_78h;\n            if (uVar5 != 0x800) {\n                ppcVar2 = var_48h;\n            }\n            if (ppcVar2 != NULL) {\n                if (uVar5 == 0x800) {\n                    if (var_68h == 0x600) {\n                        var_64h = \"`vtordispex{\";\n                        var_60h = 0xc;\n                        var_8ch = 0x40d30e;\n                        fcn.00402211(&fcn.00402496::var_64h);\n                        var_8ch = &fcn.00402496::var_3ch;\n                        fcn.0040395e(&fcn.00402496::var_64h, var_8ch);\n                        fcn.0040256d(&fcn.00402496::var_7ch, 0x2c);\n                        fcn.0040395e(&fcn.00402496::var_4ch, &fcn.00402496::var_8h);\n                        fcn.0040256d(&fcn.00402496::var_8ch, 0x2c);\n                        fcn.0040395e(&fcn.00402496::var_84h, &fcn.00402496::var_5ch);\n                    }\n                    else {\n                        if (var_68h != 0x500) goto code_r0x0040d3b2;\n                        var_8h = \"`vtordisp{\";\n                        var_4h = 0xa;\n                        var_8ch = 0x40d387;\n                        fcn.00402211(&fcn.00402496::var_8h);\n                        var_8ch = &fcn.00402496::var_5ch;\n                        fcn.0040395e(&fcn.00402496::var_8h, var_8ch);\n                    }\n                    uVar1 = fcn.0040256d(var_84h, puVar3);\n                    var_8ch = 0x40d3b0;\n                    fcn.00402310(uVar1);\n                }\n                else {\ncode_r0x0040d3b2:\n                    var_8h = \"`adjustor{\";\n                    var_4h = 0xa;\n                    var_8ch = 0x40d3cc;\n                    fcn.00403f03(&fcn.00402496::var_8h);\n                }\n                var_8h = var_74h;\n                var_4h = var_20h;\n                var_8ch = &fcn.00402496::var_3ch;\n                var_3ch = 0x46ab3c;\n                var_38h = 3;\n                fcn.00403f03(var_8ch);\n                fcn.00402310(&fcn.00402496::var_8h);\n            }\n            if ((*0x476430 == 1) && (*0x47642c == 0)) {\n                *0x47642c = var_34h;\n            }\n            uVar1 = fcn.004045cf(&fcn.00402496::var_2ch);\n            fcn.004022e3(&fcn.00402496::var_84h, 0x28, uVar1);\n            uVar1 = fcn.0040256d(&fcn.00402496::var_8ch, 0x29);\n            fcn.00402310(uVar1);\n            if ((uVar5 == 0x800) && (var_68h != 0x200)) {\n                fcn.00402310(&fcn.00402496::var_54h);\n            }\n            if ((~(*0x476420 >> 0x13) & 1) == 0) {\n                uVar1 = fcn.00401ba4(&fcn.00402496::var_2ch);\n                fcn.00404692(uVar1);\n            }\n            else {\n                uVar1 = fcn.00401ba4(&fcn.00402496::var_2ch);\n                fcn.00402310(uVar1);\n            }\n            uVar1 = fcn.004018a2(&fcn.00402496::var_2ch);\n            fcn.00402310(uVar1);\n            if ((~(*0x476420 >> 8) & 1) == 0) {\n                uVar1 = fcn.00403d9b(&fcn.00402496::var_2ch);\n                fcn.00404692(uVar1);\n            }\n            else {\n                uVar1 = fcn.00403d9b(&fcn.00402496::var_2ch);\n                fcn.00402310(uVar1);\n            }\n            uVar1 = fcn.004030d0(&fcn.00402496::var_2ch);\n            fcn.00404692(uVar1);\n            pcVar4 = var_ch;\n            if (((~(*0x476420 >> 2) & 1) != 0) && (pcVar4 = var_ch,  var_40h != NULL)) {\n                *var_40h = var_10h;\n                var_40h[1] = var_ch;\n                pcVar4 = var_18h;\n                var_10h = pcVar8;\n                var_ch = pcVar7;\n            }\n            goto code_r0x0040d7a8;\n        }\n        var_84h = NULL;\n        var_8ch = 0x40d269;\n        var_8ch = fcn.00402e6e(&fcn.00402496::var_70h, 0);\n        var_84h = fcn.004022e3(&fcn.00402496::var_64h, 0x20, var_8ch);\n        fcn.00402310(var_84h);\n        pcVar4 = var_ch;\n        if ((*0x476420 & 0x1000) == 0) goto code_r0x0040d2cb;\n    }\ncode_r0x0040daf5:\n    *arg_8h = var_10h;\ncode_r0x0040dafa:\n    arg_8h[1] = pcVar4;\n    return arg_8h;\n}\n",
        "token_count": 7315
    },
    "004024b9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004024b9(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((-1 < arg_8h) && (arg_8h < *0x477458)) {\n        iVar3 = (arg_8h & 0x3f) * 0x38;\n        iVar1 = *((arg_8h >> 6) * 4 + 0x4771f0);\n        if (((*(iVar3 + 0x28 + iVar1) & 1) != 0) && (*(iVar3 + 0x18 + iVar1) != -1)) {\n            iVar1 = fcn.004015fa();\n            if (iVar1 == 1) {\n                if (arg_8h == 0) {\n                    uVar4 = 0xfffffff6;\n                }\n                else if (arg_8h == 1) {\n                    uVar4 = 0xfffffff5;\n                }\n                else {\n                    if (arg_8h != 2) goto code_r0x004452db;\n                    uVar4 = 0xfffffff4;\n                }\n                (*_sym.imp.KERNEL32.dll_SetStdHandle)(uVar4, 0);\n            }\ncode_r0x004452db:\n            *(iVar3 + 0x18 + *((arg_8h >> 6) * 4 + 0x4771f0)) = 0xffffffff;\n            return 0;\n        }\n    }\n    puVar2 = fcn.004029b9();\n    *puVar2 = 9;\n    puVar2 = fcn.00401523();\n    *puVar2 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 394
    },
    "00402630": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402630(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x00426602;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x00426602:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00404345(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar1 == 8) {\n        fcn.00402626(arg_8h_00, var_4h, arg_8h);\n    }\n    else {\n        fcn.004018fc(arg_8h_00, arg_8h);\n    }\n    pcVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar3 = *(in_ECX + 0x30),  *pcVar3 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar3 >> 8, 1);\n}\n",
        "token_count": 1237
    },
    "00402671": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402671(uint *arg_8h)\n\n{\n    uint32_t *puVar1;\n    \n    puVar1 = arg_8h + 3;\n    if (((*puVar1 >> 0xd & 1) != 0) && ((*puVar1 >> 6 & 1) != 0)) {\n        fcn.004042f5(arg_8h[1]);\n        LOCK();\n        *puVar1 = *puVar1 & 0xfffffebf;\n        arg_8h[1] = 0;\n        *arg_8h = 0;\n        arg_8h[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00402775": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402775(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x00424b5b;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x00424b5b:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00404345(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar1 == 8) {\n        fcn.00402c70(arg_8h_00, var_4h, arg_8h);\n    }\n    else {\n        fcn.00402db5(arg_8h_00, arg_8h);\n    }\n    pcVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar3 = *(in_ECX + 0x30),  *pcVar3 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar3 >> 8, 1);\n}\n",
        "token_count": 1243
    },
    "0040277a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040277a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00401e3d(*(in_ECX + 0x28));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.004022c5(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403ed6(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.004039a4(&var_ch);\n        }\n        else {\n            cVar2 = fcn.004045b6(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.004018ac(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403d0f(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00401dd9(&var_ch);\n        }\n        else {\n            cVar2 = fcn.0040137a(&var_ch);\n        }\n    }\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.00403d23();\n    if (cVar2 != '\\0') {\n        uVar3 = *(in_ECX + 0x1c);\n        arg_ch = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x1c) = uVar3;\n            arg_ch = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *(in_ECX + 0x1c) = uVar3 & 0xfffffff7;\n            fcn.00403e1d(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | arg_ch) == 0) {\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 1;\n        if (var_4h == 8) {\n            fcn.00402dba(arg_8h_00, arg_ch);\n        }\n        else {\n            fcn.00402ea5(arg_8h_00);\n        }\n        if (((*(in_ECX + 0x1c) >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != 0x30)))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1055
    },
    "0040278e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040278e(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    if (arg_8h < 0x100) {\n        if ((*(\n              L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10      (                          \\b\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0112\\x10\\x100\\x10\\x10\\x10\\x10\\x14\\x14\\x10\u0112\\x10\\x10\\x10\\x14\u0112\\x10\\x10\\x10\\x10\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0101\"\n              + (arg_8h & 0xff)) & 1) != 0) {\n            arg_8h = *((arg_8h & 0xff) + *(*arg_ch + 0x94));\n        }\n        return arg_8h & 0xff;\n    }\n    uVar1 = fcn.00401bd1(arg_8h, arg_ch);\n    return uVar1;\n}\n",
        "token_count": 486
    },
    "0040283d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040283d(int32_t arg_8h, uint16_t *arg_ch, uint16_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint16_t *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint16_t uVar5;\n    uint32_t arg_8h_00;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar1 = arg_ch;\n    cVar2 = fcn.00401d57();\n    if (cVar2 == '\\0') {\ncode_r0x0043dc82:\n        if (arg_10h != NULL) {\n            *arg_10h = arg_ch;\n        }\n        return 0;\n    }\n    if ((arg_14h != 0) && ((arg_14h < 2 || (0x24 < arg_14h)))) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_8h);\n        goto code_r0x0043dc82;\n    }\n    var_4h = 0;\n    arg_8h_00 = *arg_ch;\n    arg_ch = arg_ch + 1;\n    if (*(arg_8h + 0x14) == '\\0') {\n        fcn.004024f0();\n    }\n    while (iVar3 = fcn.00401a96(arg_8h_00, 8),  iVar3 != 0) {\n        arg_8h_00 = *arg_ch;\n        arg_ch = arg_ch + 1;\n    }\n    arg_18h = arg_18h & 0xff;\n    if (arg_8h_00 == 0x2d) {\n        arg_18h = arg_18h | 2;\ncode_r0x0043dcec:\n        arg_8h_00 = *arg_ch;\n        arg_ch = arg_ch + 1;\n    }\n    else if (arg_8h_00 == 0x2b) goto code_r0x0043dcec;\n    var_8h = 0x660;\n    if ((arg_14h != 0) && (arg_14h != 0x10)) goto code_r0x0043dfeb;\n    uVar5 = arg_8h_00;\n    if (uVar5 < 0x30) goto code_r0x0043df78;\n    iVar3 = 0x30;\n    if (uVar5 < 0x3a) {\ncode_r0x0043de1b:\n        iVar3 = -iVar3;\ncode_r0x0043df73:\n        iVar3 = arg_8h_00 + iVar3;\n        if (iVar3 == -1) goto code_r0x0043df78;\ncode_r0x0043df9d:\n        if (iVar3 == 0) {\n            uVar4 = *arg_ch;\n            if ((uVar4 == 0x78) || (uVar4 == 0x58)) {\n                if (arg_14h == 0) {\n                    arg_14h = 0x10;\n                }\n                arg_8h_00 = arg_ch[1];\n                arg_ch = arg_ch + 2;\n            }\n            else {\n                if (arg_14h == 0) {\n                    arg_14h = 8;\n                }\n                fcn.00402315(uVar4);\n                arg_ch = arg_ch + 1;\n            }\n            goto code_r0x0043dfeb;\n        }\n    }\n    else {\n        if (uVar5 < 0xff10) {\n            if ((0x65f < uVar5) &&\n               ((iVar3 = var_8h,  uVar5 < 0x66a ||\n                ((iVar3 = 0x6f0,  0x6ef < uVar5 &&\n                 ((uVar5 < 0x6fa ||\n                  ((iVar3 = 0x966,  0x965 < uVar5 &&\n                   ((uVar5 < 0x970 ||\n                    ((iVar3 = 0x9e6,  0x9e5 < uVar5 &&\n                     ((uVar5 < 0x9f0 ||\n                      ((iVar3 = 0xa66,  0xa65 < uVar5 &&\n                       ((uVar5 < 0xa70 ||\n                        ((iVar3 = 0xae6,  0xae5 < uVar5 &&\n                         ((uVar5 < 0xaf0 ||\n                          ((iVar3 = 0xb66,  0xb65 < uVar5 &&\n                           ((uVar5 < 0xb70 ||\n                            ((iVar3 = 0xc66,  0xc65 < uVar5 &&\n                             ((uVar5 < 0xc70 ||\n                              ((iVar3 = 0xce6,  0xce5 < uVar5 &&\n                               ((uVar5 < 0xcf0 ||\n                                ((iVar3 = 0xd66,  0xd65 < uVar5 &&\n                                 ((uVar5 < 0xd70 ||\n                                  ((iVar3 = 0xe50,  0xe4f < uVar5 &&\n                                   ((uVar5 < 0xe5a ||\n                                    ((iVar3 = 0xed0,  0xecf < uVar5 &&\n                                     ((uVar5 < 0xeda ||\n                                      ((iVar3 = 0xf20,  0xf1f < uVar5 &&\n                                       ((uVar5 < 0xf2a ||\n                                        ((iVar3 = 0x1040,  0x103f < uVar5 &&\n                                         ((uVar5 < 0x104a ||\n                                          ((iVar3 = 0x17e0,  0x17df < uVar5 &&\n                                           ((uVar5 < 0x17ea || ((iVar3 = 0x1810,  0x180f < uVar5 && (uVar5 < 0x181a)))))\n                                           )))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n            goto code_r0x0043de1b;\n        }\n        else if (uVar5 < 0xff1a) {\n            iVar3 = -0xff10;\n            goto code_r0x0043df73;\n        }\ncode_r0x0043df78:\n        if (((0x40 < arg_8h_00) && (arg_8h_00 < 0x5b)) || (arg_8h_00 - 0x61 < 0x1a)) {\n            uVar4 = arg_8h_00;\n            if (arg_8h_00 - 0x61 < 0x1a) {\n                uVar4 = arg_8h_00 - 0x20;\n            }\n            iVar3 = uVar4 - 0x37;\n            goto code_r0x0043df9d;\n        }\n    }\n    if (arg_14h == 0) {\n        arg_14h = 10;\n    }\ncode_r0x0043dfeb:\n    do {\n        uVar5 = arg_8h_00;\n        if (uVar5 < 0x30) {\ncode_r0x0043e150:\n            if (((arg_8h_00 < 0x41) || (0x5a < arg_8h_00)) && (0x19 < arg_8h_00 - 0x61)) {\n                uVar4 = 0xffffffff;\n            }\n            else {\n                uVar4 = arg_8h_00;\n                if (arg_8h_00 - 0x61 < 0x1a) {\n                    uVar4 = arg_8h_00 - 0x20;\n                }\n                uVar4 = uVar4 - 0x37;\n            }\n        }\n        else {\n            if (0x39 < uVar5) {\n                iVar3 = 0xff10;\n                if (uVar5 < 0xff10) {\n                    iVar3 = 0x660;\n                    if (0x65f < uVar5) {\n                        if (uVar5 < 0x66a) {\ncode_r0x0043e146:\n                            iVar3 = -iVar3;\n                            goto code_r0x0043e14b;\n                        }\n                        iVar3 = 0x6f0;\n                        if (0x6ef < uVar5) {\n                            if (uVar5 < 0x6fa) goto code_r0x0043e146;\n                            iVar3 = 0x966;\n                            if (0x965 < uVar5) {\n                                if (uVar5 < 0x970) goto code_r0x0043e146;\n                                iVar3 = 0x9e6;\n                                if (0x9e5 < uVar5) {\n                                    if (uVar5 < 0x9f0) goto code_r0x0043e146;\n                                    iVar3 = 0xa66;\n                                    if (0xa65 < uVar5) {\n                                        if (uVar5 < 0xa70) goto code_r0x0043e146;\n                                        iVar3 = 0xae6;\n                                        if (0xae5 < uVar5) {\n                                            if (uVar5 < 0xaf0) goto code_r0x0043e146;\n                                            iVar3 = 0xb66;\n                                            if (0xb65 < uVar5) {\n                                                if (uVar5 < 0xb70) goto code_r0x0043e146;\n                                                iVar3 = 0xc66;\n                                                if (0xc65 < uVar5) {\n                                                    if (uVar5 < 0xc70) goto code_r0x0043e146;\n                                                    iVar3 = 0xce6;\n                                                    if (0xce5 < uVar5) {\n                                                        if (uVar5 < 0xcf0) goto code_r0x0043e146;\n                                                        iVar3 = 0xd66;\n                                                        if (0xd65 < uVar5) {\n                                                            if (uVar5 < 0xd70) goto code_r0x0043e146;\n                                                            iVar3 = 0xe50;\n                                                            if (0xe4f < uVar5) {\n                                                                if (uVar5 < 0xe5a) goto code_r0x0043e146;\n                                                                iVar3 = 0xed0;\n                                                                if (0xecf < uVar5) {\n                                                                    if (uVar5 < 0xeda) goto code_r0x0043e146;\n                                                                    iVar3 = 0xf20;\n                                                                    if (0xf1f < uVar5) {\n                                                                        if (uVar5 < 0xf2a) goto code_r0x0043e146;\n                                                                        iVar3 = 0x1040;\n                                                                        if (0x103f < uVar5) {\n                                                                            if (uVar5 < 0x104a) goto code_r0x0043e146;\n                                                                            iVar3 = 0x17e0;\n                                                                            if (0x17df < uVar5) {\n                                                                                if (uVar5 < 0x17ea)\n                                                                                goto code_r0x0043e146;\n                                                                                iVar3 = 0x1810;\n                                                                                if (0x180f < uVar5) {\n                                                                                    var_84h._0_2_ = 0x181a;\n                                                                                    goto code_r0x0043e144;\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    var_88h._0_2_ = 0xff1a;\n                    var_84h._0_2_ = var_88h;\ncode_r0x0043e144:\n                    if (uVar5 < var_84h) goto code_r0x0043e146;\n                }\n                goto code_r0x0043e150;\n            }\n            iVar3 = -0x30;\ncode_r0x0043e14b:\n            uVar4 = arg_8h_00 + iVar3;\n            if (uVar4 == 0xffffffff) goto code_r0x0043e150;\n        }\n        if (arg_14h <= uVar4) {\n            fcn.00402315(arg_8h_00);\n            if ((arg_18h & 8) == 0) {\n                if (arg_10h == NULL) {\n                    return 0;\n                }\n                *arg_10h = puVar1;\n                return 0;\n            }\n            cVar2 = fcn.004015e1(arg_18h, var_4h);\n            if (cVar2 == '\\0') {\n                if ((arg_18h & 2) != 0) {\n                    var_4h = -var_4h;\n                }\n            }\n            else {\n                *(arg_8h + 0x1c) = 1;\n                *(arg_8h + 0x18) = 0x22;\n                if ((arg_18h & 1) != 0) {\n                    if ((arg_18h & 2) == 0) {\n                        if (arg_10h != NULL) {\n                            *arg_10h = arg_ch;\n                        }\n                        return 0x7fffffff;\n                    }\n                    if (arg_10h != NULL) {\n                        *arg_10h = arg_ch;\n                    }\n                    return 0x80000000;\n                }\n                var_4h = 0xffffffff;\n            }\n            if (arg_10h != NULL) {\n                *arg_10h = arg_ch;\n                return var_4h;\n            }\n            return var_4h;\n        }\n        uVar4 = var_4h * arg_14h + uVar4;\n        arg_18h = arg_18h | (uVar4 < var_4h * arg_14h || 0xffffffff / arg_14h < var_4h) << 2 | 8;\n        arg_8h_00 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        var_4h = uVar4;\n    } while( true );\n}\n",
        "token_count": 3432
    },
    "004028a1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004028a1(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x0042497f;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x0042497f:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00404345(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar1 == 8) {\n        fcn.00402c1b(arg_8h_00, var_4h, arg_8h);\n    }\n    else {\n        fcn.00401005(arg_8h_00, arg_8h);\n    }\n    pcVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar3 = *(in_ECX + 0x30),  *pcVar3 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar3 >> 8, 1);\n}\n",
        "token_count": 1242
    },
    "004028f6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004028f6(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00401e3d(*(in_ECX + 0x28));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00404052(&var_ch);\n        }\n        else {\n            cVar2 = fcn.004013f2(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.0040297d(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00402013(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.004025f9(&var_ch);\n        }\n        else {\n            cVar2 = fcn.0040413d(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00402edc(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403ee0(&var_ch);\n        }\n    }\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.00402f18();\n    if (cVar2 != '\\0') {\n        uVar3 = *(in_ECX + 0x1c);\n        arg_ch = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x1c) = uVar3;\n            arg_ch = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *(in_ECX + 0x1c) = uVar3 & 0xfffffff7;\n            fcn.00403e1d(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | arg_ch) == 0) {\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 1;\n        if (var_4h == 8) {\n            fcn.004034ef(arg_8h_00, arg_ch, arg_8h);\n        }\n        else {\n            fcn.0040349f(arg_8h_00, arg_8h);\n        }\n        if (((*(in_ECX + 0x1c) >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != 0x30)))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1063
    },
    "00416a4a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416a4a(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::exception.0;\n    fcn.00403de1(in_ECX + 1);\n    if ((arg_8h & 1) != 0) {\n        fcn.0040164a(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "00402987": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00402987(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x476418 == '\\0') {\n        uVar2 = 1;\n    }\n    else {\n        uVar1 = **0x476418 - 0x41;\n        *0x476418 = *0x476418 + 1;\n        uVar2 = 2;\n        if (uVar1 < 0x17) {\n            var_8h = 0;\n            var_4h = 2;\n            if ((~(*0x476420 >> 1) & 1) != 0) {\n                uVar1 = uVar1 & 0xfffffffe;\n                if (uVar1 < 0xd) {\n                    if (uVar1 == 0xc) {\n                        uVar2 = 7;\n                    }\n                    else if (uVar1 == 0) {\n                        uVar2 = 1;\n                    }\n                    else if (uVar1 == 2) {\n                        uVar2 = 2;\n                    }\n                    else if (uVar1 == 4) {\n                        uVar2 = 4;\n                    }\n                    else if (uVar1 == 6) {\n                        uVar2 = 3;\n                    }\n                    else {\n                        if (uVar1 != 8) goto code_r0x0040efe4;\n                        uVar2 = 5;\n                    }\n                }\n                else if (uVar1 == 0xe) {\n                    uVar2 = 8;\n                }\n                else if (uVar1 == 0x10) {\n                    uVar2 = 6;\n                }\n                else if (uVar1 == 0x12) {\n                    uVar2 = 9;\n                }\n                else if (uVar1 == 0x14) {\n                    uVar2 = 10;\n                }\n                else {\n                    if (uVar1 != 0x16) goto code_r0x0040efe4;\n                    uVar2 = 0xb;\n                }\n                _var_10h = fcn.004021fd(uVar2);\n                fcn.00401b68(&var_10h);\n            }\ncode_r0x0040efe4:\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n    }\n    fcn.004014dd(uVar2);\n    return arg_8h;\n}\n",
        "token_count": 578
    },
    "00402a90": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00402a90(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    if ((arg_8h & 4) != 0) {\n        return 1;\n    }\n    if ((arg_8h & 1) != 0) {\n        if ((arg_8h & 2) == 0) {\n            if (0x7fffffff < arg_10h) {\n                return 1;\n            }\n        }\n        else if ((0x7fffffff < arg_10h) && ((0x80000000 < arg_10h || (arg_ch != 0)))) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 162
    },
    "00402ae5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402ae5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x00423485;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x00423485:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00404345(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar1 == 8) {\n        fcn.004022ca(arg_8h_00, var_4h);\n    }\n    else {\n        fcn.00401f8c(arg_8h_00);\n    }\n    pcVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar3 = *(in_ECX + 0x30),  *pcVar3 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar3 >> 8, 1);\n}\n",
        "token_count": 1230
    },
    "00402c61": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402c61(int16_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uchar (*pauVar5) [32];\n    uchar auVar6 [16];\n    uchar auVar7 [32];\n    uchar in_YMM1 [32];\n    int16_t *piVar2;\n    uint16_t uVar8;\n    \n    piVar2 = arg_8h;\n    if (*0x4763a8 < 5) {\n        if (*0x4763a8 < 1) {\n            if (arg_8h != arg_8h + arg_ch) {\n                do {\n                    if (*piVar2 == 0) break;\n                    piVar2 = piVar2 + 1;\n                } while (piVar2 != arg_8h + arg_ch);\n            }\n            iVar1 = piVar2 - arg_8h;\n            goto code_r0x0044802f;\n        }\n        if ((arg_8h & 1) == 0) {\n            uVar4 = (-((arg_8h & 0xf) != 0) & 0x10 - (arg_8h & 0xf)) >> 1;\n            if (arg_ch < uVar4) {\n                uVar4 = arg_ch;\n            }\n            if (arg_8h != arg_8h + uVar4) {\n                do {\n                    if (*piVar2 == 0) break;\n                    piVar2 = piVar2 + 1;\n                } while (piVar2 != arg_8h + uVar4);\n            }\n            uVar3 = piVar2 - arg_8h >> 1;\n            if (uVar3 != uVar4) {\n                return uVar3;\n            }\n            for (piVar2 = arg_8h + uVar3; piVar2 != arg_8h + (arg_ch - uVar4 & 0xfffffff0) + uVar3; piVar2 = piVar2 + 8)\n            {\n                uVar8 = -(piVar2[7] == 0);\n                auVar6 = CONCAT214(uVar8, CONCAT212(-(piVar2[6] == 0), \n                                                    CONCAT210(-(piVar2[5] == 0), \n                                                              CONCAT28(-(piVar2[4] == 0), \n                                                                       CONCAT26(-(piVar2[3] == 0), \n                                                                                CONCAT24(-(piVar2[2] == 0), \n                                                                                         CONCAT22(-(piVar2[1] == 0), \n                                                                                                  -(*piVar2 == 0))))))))\n                ;\n                if ((SUB161(auVar6 >> 7, 0) & 1 | (SUB161(auVar6 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar6 >> 0x17, 0) & 1) << 2 | (SUB161(auVar6 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar6 >> 0x27, 0) & 1) << 4 | (SUB161(auVar6 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar6 >> 0x37, 0) & 1) << 6 | (SUB161(auVar6 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar6 >> 0x47, 0) & 1) << 8 | (SUB161(auVar6 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar6 >> 0x57, 0) & 1) << 10 | (SUB161(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                     (uVar8 >> 7 & 1) << 0xe | uVar8 & 0x8000) != 0) break;\n            }\n            for (; (piVar2 != arg_8h + arg_ch && (*piVar2 != 0)); piVar2 = piVar2 + 1) {\n            }\n        }\n        else if (arg_8h != arg_8h + arg_ch) {\n            do {\n                if (*piVar2 == 0) break;\n                piVar2 = piVar2 + 1;\n            } while (piVar2 != arg_8h + arg_ch);\n        }\n    }\n    else {\n        if ((arg_8h & 1) == 0) {\n            uVar4 = (-((arg_8h & 0x1f) != 0) & 0x20 - (arg_8h & 0x1f)) >> 1;\n            if (arg_ch < uVar4) {\n                uVar4 = arg_ch;\n            }\n            if (arg_8h != arg_8h + uVar4) {\n                do {\n                    if (*piVar2 == 0) break;\n                    piVar2 = piVar2 + 1;\n                } while (piVar2 != arg_8h + uVar4);\n            }\n            uVar3 = piVar2 - arg_8h >> 1;\n            if (uVar3 != uVar4) {\n                return uVar3;\n            }\n            pauVar5 = arg_8h + uVar3;\n            auVar6 = vpxor_avx(SUB3216(in_YMM1, 0), SUB3216(in_YMM1, 0));\n            while ((pauVar5 != arg_8h + (arg_ch - uVar4 & 0xffffffe0) + uVar3 &&\n                   (auVar7 = vpcmpeqw_avx2(ZEXT1632(auVar6), *pauVar5), \n                   (SUB321(auVar7 >> 7, 0) & 1 | (SUB321(auVar7 >> 0xf, 0) & 1) << 1 |\n                    (SUB321(auVar7 >> 0x17, 0) & 1) << 2 | (SUB321(auVar7 >> 0x1f, 0) & 1) << 3 |\n                    (SUB321(auVar7 >> 0x27, 0) & 1) << 4 | (SUB321(auVar7 >> 0x2f, 0) & 1) << 5 |\n                    (SUB321(auVar7 >> 0x37, 0) & 1) << 6 | (SUB321(auVar7 >> 0x3f, 0) & 1) << 7 |\n                    (SUB321(auVar7 >> 0x47, 0) & 1) << 8 | (SUB321(auVar7 >> 0x4f, 0) & 1) << 9 |\n                    (SUB321(auVar7 >> 0x57, 0) & 1) << 10 | (SUB321(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB321(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB321(auVar7 >> 0x77, 0) & 1) << 0xe | SUB321(auVar7 >> 0x7f, 0) << 0xf |\n                    (SUB321(auVar7 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar7 >> 0x8f, 0) & 1) << 0x11 |\n                    (SUB321(auVar7 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar7 >> 0x9f, 0) & 1) << 0x13 |\n                    (SUB321(auVar7 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar7 >> 0xaf, 0) & 1) << 0x15 |\n                    (SUB321(auVar7 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar7 >> 0xbf, 0) << 0x17 |\n                    (SUB321(auVar7 >> 199, 0) & 1) << 0x18 | (SUB321(auVar7 >> 0xcf, 0) & 1) << 0x19 |\n                    (SUB321(auVar7 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar7 >> 0xdf, 0) & 1) << 0x1b |\n                    (SUB321(auVar7 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar7 >> 0xef, 0) & 1) << 0x1d |\n                    (SUB321(auVar7 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar7 >> 0xff, 0) << 0x1f) == 0))) {\n                pauVar5 = pauVar5[1];\n            }\n            for (; (pauVar5 != arg_8h + arg_ch && (**pauVar5 != 0)); pauVar5 = *pauVar5 + 2) {\n            }\n            vzeroupper_avx();\n            return pauVar5 - arg_8h >> 1;\n        }\n        if (arg_8h != arg_8h + arg_ch) {\n            do {\n                if (*piVar2 == 0) break;\n                piVar2 = piVar2 + 1;\n            } while (piVar2 != arg_8h + arg_ch);\n        }\n    }\n    iVar1 = piVar2 - arg_8h;\ncode_r0x0044802f:\n    return iVar1 >> 1;\n}\n",
        "token_count": 2361
    },
    "00402c98": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402c98(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x00425c84;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x00425c84:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00404345(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar1 == 8) {\n        fcn.00403454(arg_8h_00, var_4h, arg_8h);\n    }\n    else {\n        fcn.00402d56(arg_8h_00, arg_8h);\n    }\n    pcVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar3 = *(in_ECX + 0x30),  *pcVar3 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar3 >> 8, 1);\n}\n",
        "token_count": 1241
    },
    "00402ca2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.00402ca2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t lpCriticalSection;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00401b59(0x474748, 0x10);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        iVar2 = *(unaff_EBP + 0x14);\n        *(iVar2 + 0x24) = 1;\n        *(iVar2 + 0x20) = 0;\n        *(iVar2 + 0x1c) = 1;\n        *(iVar2 + 0x18) = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x477458)) {\n            iVar2 = (lpCriticalSection & 0x3f) * 0x38;\n            *(unaff_EBP + -0x20) = iVar2;\n            if ((*(iVar2 + 0x28 + *((lpCriticalSection >> 6) * 4 + 0x4771f0)) & 1) != 0) {\n                fcn.00401348(lpCriticalSection);\n                uVar1 = 0xffffffff;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*(unaff_EBP + -0x20) + 0x28 + *((lpCriticalSection >> 6) * 4 + 0x4771f0)) & 1) == 0) {\n                    iVar2 = *(unaff_EBP + 0x14);\n                    *(iVar2 + 0x1c) = 1;\n                    *(iVar2 + 0x18) = 9;\n                    *(iVar2 + 0x24) = 1;\n                    *(iVar2 + 0x20) = 0;\n                }\n                else {\n                    uVar1 = fcn.0040189d(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14)\n                                        );\n                    *(unaff_EBP + -0x1c) = uVar1;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00452acb();\n                goto code_r0x00452afb;\n            }\n        }\n        iVar2 = *(unaff_EBP + 0x14);\n        *(iVar2 + 0x24) = 1;\n        *(iVar2 + 0x20) = 0;\n        *(iVar2 + 0x1c) = 1;\n        *(iVar2 + 0x18) = 9;\n        fcn.00402c20(0, 0, 0, 0, 0, iVar2);\n    }\n    uVar1 = 0xffffffff;\ncode_r0x00452afb:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 789
    },
    "00402d06": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402d06(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00401e3d(*(in_ECX + 0x28));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00401dbb(&var_ch);\n        }\n        else {\n            cVar2 = fcn.0040178f(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.0040386e(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00401f73(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.0040341d(&var_ch);\n        }\n        else {\n            cVar2 = fcn.0040374c(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00404516(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403bf2(&var_ch);\n        }\n    }\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.0040443f();\n    if (cVar2 != '\\0') {\n        uVar3 = *(in_ECX + 0x1c);\n        arg_ch = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x1c) = uVar3;\n            arg_ch = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *(in_ECX + 0x1c) = uVar3 & 0xfffffff7;\n            fcn.00404345(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | arg_ch) == 0) {\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 0;\n        if (var_4h == 8) {\n            fcn.00402040(arg_8h_00, arg_ch);\n        }\n        else {\n            fcn.004026f8(arg_8h_00);\n        }\n        if (((*(in_ECX + 0x1c) >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != '0')))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1051
    },
    "00402d65": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402d65(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x004245ae;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x004245ae:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00404345(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar1 == 8) {\n        fcn.00401dc5(arg_8h_00, var_4h, arg_8h);\n    }\n    else {\n        fcn.00401f05(arg_8h_00, arg_8h);\n    }\n    pcVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar3 = *(in_ECX + 0x30),  *pcVar3 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar3 >> 8, 1);\n}\n",
        "token_count": 1240
    },
    "00402db0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402db0(uint8_t *arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    uint8_t *puVar4;\n    int32_t *in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(*in_ECX + 0xc) >> 0xc & 1) != 0) && (*(*in_ECX + 4) == 0)) {\n        *arg_10h = *arg_10h + arg_ch;\n        return;\n    }\n    uVar1 = *(arg_14h + 0x18);\n    uVar2 = *(arg_14h + 0x1c);\n    puVar4 = arg_8h + arg_ch;\n    if (arg_8h != puVar4) {\n        do {\n            cVar3 = fcn.00401965(*arg_8h, arg_14h);\n            if (cVar3 == '\\0') {\n                if ((*(arg_14h + 0x1c) == '\\0') || (*(arg_14h + 0x18) != 0x2a)) {\n                    *arg_10h = -1;\n                    break;\n                }\n                cVar3 = fcn.00401965(0x3f, arg_14h);\n                if (cVar3 != '\\0') goto code_r0x0043cf93;\n                *arg_10h = -1;\n            }\n            else {\ncode_r0x0043cf93:\n                *arg_10h = *arg_10h + 1;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != puVar4);\n    }\n    *(arg_14h + 0x18) = uVar1;\n    *(arg_14h + 0x1c) = uVar2;\n    return;\n}\n",
        "token_count": 469
    },
    "00402ed7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402ed7(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t arg_10h;\n    \n    puVar1 = arg_8h + 3;\n    if (((*puVar1 & 3) == 2) && ((*puVar1 & 0xc0) != 0)) {\n        iVar2 = arg_8h[1];\n        arg_10h = *arg_8h - iVar2;\n        *arg_8h = iVar2;\n        arg_8h[2] = 0;\n        if (0 < arg_10h) {\n            arg_8h_00 = fcn.0040406b(arg_8h);\n            iVar2 = fcn.00402ca2(arg_8h_00, iVar2, arg_10h, arg_ch);\n            if (arg_10h != iVar2) {\n                LOCK();\n                *puVar1 = *puVar1 | 0x10;\n                return 0xffffffff;\n            }\n            if ((*puVar1 >> 2 & 1) != 0) {\n                LOCK();\n                *puVar1 = *puVar1 & 0xfffffffd;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 300
    },
    "00403094": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403094(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    if ((*(arg_8h + 0xc) >> 0xc & 1) == 0) {\n        uVar1 = fcn.0040406b(arg_8h);\n        iVar4 = 0x4756c0;\n        if ((uVar1 == 0xffffffff) || (uVar1 == 0xfffffffe)) {\n            iVar5 = 0x4756c0;\n        }\n        else {\n            iVar5 = (uVar1 & 0x3f) * 0x38 + *((uVar1 >> 6) * 4 + 0x4771f0);\n        }\n        if (*(iVar5 + 0x29) == '\\0') {\n            if ((uVar1 != 0xffffffff) && (uVar1 != 0xfffffffe)) {\n                iVar4 = (uVar1 & 0x3f) * 0x38 + *((uVar1 >> 6) * 4 + 0x4771f0);\n            }\n            if ((*(iVar4 + 0x2d) & 1) == 0) goto code_r0x0043bf31;\n        }\n        puVar2 = fcn.004029b9();\n        *puVar2 = 0x16;\n        fcn.00402842();\n        uVar3 = 0;\n    }\n    else {\ncode_r0x0043bf31:\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 379
    },
    "004030b2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004030b2(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar2 = fcn.00401523();\n        *puVar2 = 0;\n        puVar2 = fcn.004029b9();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h) && (arg_8h < *0x477458)) {\n            iVar3 = (arg_8h & 0x3f) * 0x38;\n            iVar1 = *((arg_8h >> 6) * 4 + 0x4771f0);\n            if ((*(iVar1 + 0x28 + iVar3) & 1) != 0) {\n                return *(iVar1 + 0x18 + iVar3);\n            }\n        }\n        puVar2 = fcn.00401523();\n        *puVar2 = 0;\n        puVar2 = fcn.004029b9();\n        *puVar2 = 9;\n        fcn.00402842();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 278
    },
    "004030f3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004030f3(int32_t arg_8h, uint8_t *arg_ch, uint8_t **arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    uint8_t *puVar7;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar2 = arg_ch;\n    cVar3 = fcn.00402bb2();\n    if (cVar3 == '\\0') {\ncode_r0x004220d7:\n        if (arg_10h != NULL) {\n            *arg_10h = arg_ch;\n        }\n        return 0;\n    }\n    if ((arg_14h != 0) && ((arg_14h < 2 || (0x24 < arg_14h)))) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_8h);\n        goto code_r0x004220d7;\n    }\n    var_ch = 0;\n    uVar6 = *arg_ch;\n    puVar7 = arg_ch + 1;\n    var_8h = arg_18h & 0xff;\n    uVar5 = var_4h & 0xffffff00;\n    if (uVar6 == 0x2d) {\n        var_8h = var_8h | 2;\ncode_r0x0042211c:\n        uVar6 = *puVar7;\n        puVar7 = arg_ch + 2;\n    }\n    else if (uVar6 == 0x2b) goto code_r0x0042211c;\n    var_4h = uVar5 | uVar6;\n    arg_ch = puVar7;\n    if ((arg_14h != 0) && (arg_14h != 0x10)) goto code_r0x004221a3;\n    if (uVar6 - 0x30 < 10) {\n        iVar4 = uVar6 + -0x30;\ncode_r0x0042215c:\n        if (iVar4 == 0) {\n            uVar1 = *puVar7;\n            var_10h = var_10h & 0xffffff00 | uVar1;\n            if ((uVar1 == 0x78) || (uVar1 == 0x58)) {\n                if (arg_14h == 0) {\n                    arg_14h = 0x10;\n                }\n                uVar6 = puVar7[1];\n                var_4h = uVar5 | uVar6;\n                arg_ch = puVar7 + 2;\n            }\n            else {\n                if (arg_14h == 0) {\n                    arg_14h = 8;\n                }\n                fcn.0040227f(var_10h);\n                arg_ch = puVar7 + 1;\n            }\n            goto code_r0x004221a3;\n        }\n    }\n    else {\n        if (uVar6 + 0x9f < 0x1a) {\n            iVar4 = uVar6 + -0x57;\n            goto code_r0x0042215c;\n        }\n        if (uVar6 + 0xbf < 0x1a) {\n            iVar4 = uVar6 + -0x37;\n            goto code_r0x0042215c;\n        }\n    }\n    if (arg_14h == 0) {\n        arg_14h = 10;\n    }\ncode_r0x004221a3:\n    while( true ) {\n        if (uVar6 - 0x30 < 10) {\n            uVar5 = uVar6 - 0x30;\n        }\n        else if (uVar6 + 0x9f < 0x1a) {\n            uVar5 = uVar6 - 0x57;\n        }\n        else if (uVar6 + 0xbf < 0x1a) {\n            uVar5 = uVar6 - 0x37;\n        }\n        else {\n            uVar5 = 0xffffffff;\n        }\n        if (arg_14h <= uVar5) break;\n        uVar6 = *arg_ch;\n        var_4h = var_4h & 0xffffff00 | uVar6;\n        uVar5 = uVar5 + var_ch * arg_14h;\n        var_8h = var_8h | (uVar5 < var_ch * arg_14h || 0xffffffff / arg_14h < var_ch) << 2 | 8;\n        arg_ch = arg_ch + 1;\n        var_ch = uVar5;\n    }\n    fcn.0040227f(var_4h);\n    if ((var_8h & 8) == 0) {\n        if (arg_10h == NULL) {\n            return 0;\n        }\n        *arg_10h = puVar2;\n        return 0;\n    }\n    cVar3 = fcn.004015e1(var_8h, var_ch);\n    if (cVar3 == '\\0') {\n        if ((var_8h & 2) != 0) {\n            var_ch = -var_ch;\n        }\n    }\n    else {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x22;\n        if ((var_8h & 1) != 0) {\n            if ((var_8h & 2) == 0) {\n                if (arg_10h != NULL) {\n                    *arg_10h = arg_ch;\n                }\n                return 0x7fffffff;\n            }\n            if (arg_10h != NULL) {\n                *arg_10h = arg_ch;\n            }\n            return 0x80000000;\n        }\n        var_ch = 0xffffffff;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n        return var_ch;\n    }\n    return var_ch;\n}\n",
        "token_count": 1437
    },
    "00403206": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403206(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x004232a9;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x004232a9:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00404345(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar1 == 8) {\n        fcn.0040435e(arg_8h_00, var_4h);\n    }\n    else {\n        fcn.0040433b(arg_8h_00);\n    }\n    pcVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar3 = *(in_ECX + 0x30),  *pcVar3 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar3 >> 8, 1);\n}\n",
        "token_count": 1231
    },
    "00403210": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00403210(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar1 = fcn.004029b9();\n        *puVar1 = 9;\n    }\n    else {\n        if (((-1 < arg_8h) && (arg_8h < *0x477458)) &&\n           ((*(*((arg_8h >> 6) * 4 + 0x4771f0) + 0x28 + (arg_8h & 0x3f) * 0x38) & 1) != 0)) {\n            var_ch = &arg_8h;\n            var_8h = arg_8h;\n            var_10h = arg_8h;\n            uVar2 = fcn.00451d5c(&var_10h, &var_ch);\n            return uVar2;\n        }\n        puVar1 = fcn.004029b9();\n        *puVar1 = 9;\n        fcn.00402842();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 305
    },
    "004032b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.004032b0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUStatusWord;\n    uint var_4h;\n    \n    uVar1 = in_FPUStatusWord;\n    uVar1 = ((in_FPUStatusWord >> 2 & 8 | uVar1 & 0x10) >> 2 | uVar1 & 8) >> 1 | ((uVar1 & 2) << 3 | uVar1 & 4) * 2 |\n            (uVar1 & 1) << 4;\n    if (*0x4763a8 < 1) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = in_MXCSR & 0x3f;\n    }\n    uVar2 = ((uVar2 >> 2 & 8 | uVar2 & 0x10) >> 2 | uVar2 & 8) >> 1 | ((uVar2 & 2) << 3 | uVar2 & 4) * 2 |\n            (uVar2 & 1) << 4;\n    return (uVar2 << 8 | uVar1) << 0x10 | uVar2 | uVar1;\n}\n",
        "token_count": 296
    },
    "004032dd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004032dd(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h, int32_t arg_1ch, uint arg_20h\n            , uint32_t arg_24h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    fcn.00401e7e(arg_10h);\n    iVar2 = fcn.004020a9();\n    if ((((*(iVar2 + 0x20) != 0) || (*arg_8h == -0x1f928c9d)) || (*arg_8h == -0x7fffffda)) ||\n       (((*arg_18h & 0x1fffffff) < 0x19930522 || ((*(arg_18h + 8) & 1) == 0)))) {\n        if ((*(arg_8h + 1) & 0x66) == 0) {\n            if (((arg_18h[3] != 0) || ((0x19930520 < (*arg_18h & 0x1fffffff) && (arg_18h[7] != 0)))) ||\n               ((0x19930521 < (*arg_18h & 0x1fffffff) && ((arg_18h[8] >> 2 & 1) != 0)))) {\n                if ((((*arg_8h == -0x1f928c9d) && (2 < arg_8h[4])) && (0x19930522 < arg_8h[5])) &&\n                   (pcVar1 = *(arg_8h[7] + 8),  pcVar1 != NULL)) {\n                    (**0x47a000)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h & 0xff);\n                    uVar3 = (*pcVar1)();\n                    return uVar3;\n                }\n                fcn.0041606d(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_24h, arg_1ch, arg_20h);\n            }\n        }\n        else if ((arg_18h[1] != 0) && (arg_1ch == 0)) {\n            fcn.00402c16(arg_ch, arg_14h, arg_18h);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 565
    },
    "004032ec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004032ec(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00401e3d(*(in_ECX + 0x28));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00404052(&var_ch);\n        }\n        else {\n            cVar2 = fcn.004013f2(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.0040297d(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00402013(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.004025f9(&var_ch);\n        }\n        else {\n            cVar2 = fcn.0040413d(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00402edc(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403ee0(&var_ch);\n        }\n    }\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.00402f18();\n    if (cVar2 != '\\0') {\n        uVar3 = *(in_ECX + 0x1c);\n        arg_ch = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x1c) = uVar3;\n            arg_ch = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *(in_ECX + 0x1c) = uVar3 & 0xfffffff7;\n            fcn.00403e1d(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | arg_ch) == 0) {\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 1;\n        if (var_4h == 8) {\n            fcn.004010d7(arg_8h_00, arg_ch);\n        }\n        else {\n            fcn.004042fa(arg_8h_00);\n        }\n        if (((*(in_ECX + 0x1c) >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != 0x30)))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1052
    },
    "00403323": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403323(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.004030b2(arg_8h);\n    if (iVar1 != -1) {\n        if (((arg_8h == 1) && ((*(*0x4771f0 + 0x98) & 1) != 0)) || ((arg_8h == 2 && ((*(*0x4771f0 + 0x60) & 1) != 0))))\n        {\n            iVar1 = fcn.004030b2(2);\n            iVar2 = fcn.004030b2(1);\n            if (iVar2 == iVar1) goto code_r0x0045cc0a;\n        }\n        uVar3 = fcn.004030b2(arg_8h);\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            goto code_r0x0045cc5c;\n        }\n    }\ncode_r0x0045cc0a:\n    iVar1 = 0;\ncode_r0x0045cc5c:\n    fcn.004024b9(arg_8h);\n    *(*((arg_8h >> 6) * 4 + 0x4771f0) + 0x28 + (arg_8h & 0x3f) * 0x38) = 0;\n    if (iVar1 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        fcn.00402004(iVar1, arg_ch);\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 411
    },
    "004033c8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004033c8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00401e3d(*(in_ECX + 0x28));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00401dbb(&var_ch);\n        }\n        else {\n            cVar2 = fcn.0040178f(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.0040386e(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00401f73(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.0040341d(&var_ch);\n        }\n        else {\n            cVar2 = fcn.0040374c(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00404516(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403bf2(&var_ch);\n        }\n    }\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.0040443f();\n    if (cVar2 != '\\0') {\n        uVar3 = *(in_ECX + 0x1c);\n        arg_ch = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x1c) = uVar3;\n            arg_ch = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *(in_ECX + 0x1c) = uVar3 & 0xfffffff7;\n            fcn.00404345(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | arg_ch) == 0) {\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 0;\n        if (var_4h == 8) {\n            fcn.00403c9c(arg_8h_00, arg_ch, arg_8h);\n        }\n        else {\n            fcn.004026b2(arg_8h_00, arg_8h);\n        }\n        if (((*(in_ECX + 0x1c) >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != '0')))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1063
    },
    "0040353f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040353f(uint32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    \n    fcn.0040406b(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        *(arg_10h + 0x18) = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) == 0) {\ncode_r0x00458823:\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 2;\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffff7;\n                arg_ch[2] = 0;\n                if ((arg_ch[3] & 0x4c0) == 0) {\n                    cVar1 = fcn.0040392c(arg_ch);\n                    if (cVar1 == '\\0') {\n                        fcn.004019b0(arg_ch);\n                    }\n                }\n                cVar1 = fcn.004589da(arg_8h, arg_ch, arg_10h);\n                if (cVar1 == '\\0') {\n                    LOCK();\n                    arg_ch[3] = arg_ch[3] | 0x10;\n                    arg_8h = 0xffff;\n                }\n                else {\n                    arg_8h = arg_8h & 0xffff;\n                }\n                return arg_8h;\n            }\n            cVar1 = fcn.00458af2(arg_ch);\n            arg_ch[2] = 0;\n            if (cVar1 != '\\0') {\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n                goto code_r0x00458823;\n            }\n            goto code_r0x004587c6;\n        }\n        *(arg_10h + 0x18) = 0x22;\n    }\n    *(arg_10h + 0x1c) = 1;\ncode_r0x004587c6:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffff;\n}\n",
        "token_count": 513
    },
    "00403599": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint8_t * __cdecl fcn.00403599(uint8_t *arg_8h, uint8_t *arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint8_t *puVar2;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.004029b9();\n        *puVar1 = 0x16;\n        fcn.00402842();\n        return NULL;\n    }\n    if (arg_ch == NULL) {\n        puVar1 = fcn.004029b9();\n        *puVar1 = 0x16;\n        fcn.00402842();\n    }\n    else if (arg_8h < arg_ch) {\n        fcn.00403c79(arg_10h);\n        puVar2 = arg_ch + -1;\n        if (*(var_8h + 8) != 0) {\n            do {\n                puVar2 = puVar2 + -1;\n                if (puVar2 < arg_8h) break;\n            } while ((*(*puVar2 + 0x19 + var_8h) & 4) != 0);\n            puVar2 = arg_ch + (-1 - (arg_ch - puVar2 & 1U));\n        }\n        if (var_4h == '\\0') {\n            return puVar2;\n        }\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n        return puVar2;\n    }\n    return NULL;\n}\n",
        "token_count": 377
    },
    "004035a8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.004035a8(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint uStack16;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    pcVar1 = fcn.0044a63a(8, \"GetProcessWindowStation\", 0x46e204, 0x46e20c);\n    if ((pcVar1 != NULL) &&\n       (pcVar2 = fcn.0044a63a(0xc, \"GetUserObjectInformationW\", 0x46e2a4, 0x46e2ac),  pcVar2 != NULL)) {\n        (**0x47a000)();\n        iVar3 = (*pcVar1)();\n        if (iVar3 != 0) {\n            var_10h = 0;\n            uStack16 = 0;\n            var_8h = 0;\n            (**0x47a000)(iVar3, 1, &var_10h, 0xc, 0);\n            (*pcVar2)();\n        }\n    }\n    fcn.0040241e(var_10h);\n    return;\n}\n",
        "token_count": 302
    },
    "004035f8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004035f8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x00425aa2;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x00425aa2:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00403e1d(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar1 == 8) {\n        fcn.00401fc8(arg_8h_00, var_4h, arg_8h);\n    }\n    else {\n        fcn.004030e9(arg_8h_00, arg_8h);\n    }\n    piVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar3 = *(in_ECX + 0x30),  *piVar3 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar3 >> 8, 1);\n}\n",
        "token_count": 1247
    },
    "004036ac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004036ac(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x00426d9c;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x00426d9c:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00403e1d(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar1 == 8) {\n        fcn.00402f1d(arg_8h_00, var_4h, arg_8h);\n    }\n    else {\n        fcn.004026d0(arg_8h_00, arg_8h);\n    }\n    piVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar3 = *(in_ECX + 0x30),  *piVar3 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar3 >> 8, 1);\n}\n",
        "token_count": 1249
    },
    "00403729": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t fcn.00403729(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t lpCriticalSection;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00401b59(0x474528, 0x1c);\n    fcn.004043a4(7);\n    lpCriticalSection = 0xffffffff;\n    *(unaff_EBP + -0x1c) = 0xffffffff;\n    iVar3 = 0;\n    *(unaff_EBP + -4) = 0;\n    do {\n        *(unaff_EBP + -0x2c) = iVar3;\n        if (0x7f < iVar3) {\ncode_r0x0044518c:\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.00445228();\n            *in_FS_OFFSET = *(unaff_EBP + -0x10);\n            return lpCriticalSection;\n        }\n        iVar1 = *(iVar3 * 4 + 0x4771f0);\n        *(unaff_EBP + -0x28) = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = fcn.0040428c();\n            *(iVar3 * 4 + 0x4771f0) = iVar1;\n            if (iVar1 != 0) {\n                *0x477458 = *0x477458 + 0x40;\n                lpCriticalSection = iVar3 << 6;\n                fcn.00401348(lpCriticalSection);\n                *(*((lpCriticalSection >> 6) * 4 + 0x4771f0) + 0x28) = 1;\ncode_r0x00445189:\n                *(unaff_EBP + -0x1c) = lpCriticalSection;\n            }\n            goto code_r0x0044518c;\n        }\n        iVar2 = iVar1 + 0xe00;\n        *(unaff_EBP + -0x20) = iVar2;\n        for (; *(unaff_EBP + -0x24) = iVar1,  iVar1 != iVar2; iVar1 = iVar1 + 0x38) {\n            if ((*(iVar1 + 0x28) & 1) == 0) {\n                (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar1);\n                if ((*(iVar1 + 0x28) & 1) == 0) {\n                    lpCriticalSection = iVar3 * 0x40 + (iVar1 - *(unaff_EBP + -0x28)) / 0x38;\n                    iVar3 = (lpCriticalSection & 0x3f) * 0x38;\n                    *(*((lpCriticalSection >> 6) * 4 + 0x4771f0) + 0x28 + iVar3) = 1;\n                    *(*((lpCriticalSection >> 6) * 4 + 0x4771f0) + 0x18 + iVar3) = 0xffffffff;\n                    goto code_r0x00445189;\n                }\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n                iVar2 = *(unaff_EBP + -0x20);\n            }\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 794
    },
    "00403959": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403959(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint arg_8h_00;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t arg_8h_01;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = (in_FPUControlWord & 1) << 4;\n    if ((in_FPUControlWord & 4) != 0) {\n        uVar3 = uVar3 | 8;\n    }\n    if ((in_FPUControlWord & 8) != 0) {\n        uVar3 = uVar3 | 4;\n    }\n    if ((in_FPUControlWord & 0x10) != 0) {\n        uVar3 = uVar3 | 2;\n    }\n    if ((in_FPUControlWord & 0x20) != 0) {\n        uVar3 = uVar3 | 1;\n    }\n    if ((in_FPUControlWord & 2) != 0) {\n        uVar3 = uVar3 | 0x80000;\n    }\n    uVar1 = in_FPUControlWord & 0xc00;\n    if ((in_FPUControlWord & 0xc00) != 0) {\n        if (uVar1 == 0x400) {\n            uVar3 = uVar3 | 0x100;\n        }\n        else if (uVar1 == 0x800) {\n            uVar3 = uVar3 | 0x200;\n        }\n        else if (uVar1 == 0xc00) {\n            uVar3 = uVar3 | 0x300;\n        }\n    }\n    if ((in_FPUControlWord & 0x300) == 0) {\n        uVar3 = uVar3 | 0x20000;\n    }\n    else if ((in_FPUControlWord & 0x300) == 0x200) {\n        uVar3 = uVar3 | 0x10000;\n    }\n    if ((in_FPUControlWord & 0x1000) != 0) {\n        uVar3 = uVar3 | 0x40000;\n    }\n    arg_8h_01 = ~arg_ch & uVar3 | arg_8h & arg_ch;\n    if (arg_8h_01 != uVar3) {\n        uVar1 = fcn.0044da08(arg_8h_01);\n        arg_8h_01 = (uVar1 & 1) << 4;\n        if ((uVar1 & 4) != 0) {\n            arg_8h_01 = arg_8h_01 | 8;\n        }\n        if ((uVar1 & 8) != 0) {\n            arg_8h_01 = arg_8h_01 | 4;\n        }\n        if ((uVar1 & 0x10) != 0) {\n            arg_8h_01 = arg_8h_01 | 2;\n        }\n        if ((uVar1 & 0x20) != 0) {\n            arg_8h_01 = arg_8h_01 | 1;\n        }\n        if ((uVar1 & 2) != 0) {\n            arg_8h_01 = arg_8h_01 | 0x80000;\n        }\n        uVar2 = uVar1 & 0xc00;\n        if ((uVar1 & 0xc00) != 0) {\n            if (uVar2 == 0x400) {\n                arg_8h_01 = arg_8h_01 | 0x100;\n            }\n            else if (uVar2 == 0x800) {\n                arg_8h_01 = arg_8h_01 | 0x200;\n            }\n            else if (uVar2 == 0xc00) {\n                arg_8h_01 = arg_8h_01 | 0x300;\n            }\n        }\n        if ((uVar1 & 0x300) == 0) {\n            arg_8h_01 = arg_8h_01 | 0x20000;\n        }\n        else if ((uVar1 & 0x300) == 0x200) {\n            arg_8h_01 = arg_8h_01 | 0x10000;\n        }\n        if ((uVar1 & 0x1000) != 0) {\n            arg_8h_01 = arg_8h_01 | 0x40000;\n        }\n    }\n    if (0 < *0x4763a8) {\n        uVar3 = in_MXCSR >> 3 & 0x10;\n        if ((in_MXCSR & 0x200) != 0) {\n            uVar3 = uVar3 | 8;\n        }\n        if ((in_MXCSR & 0x400) != 0) {\n            uVar3 = uVar3 | 4;\n        }\n        if ((in_MXCSR & 0x800) != 0) {\n            uVar3 = uVar3 | 2;\n        }\n        if ((in_MXCSR & 0x1000) != 0) {\n            uVar3 = uVar3 | 1;\n        }\n        if ((in_MXCSR & 0x100) != 0) {\n            uVar3 = uVar3 | 0x80000;\n        }\n        uVar4 = in_MXCSR & 0x6000;\n        if (uVar4 != 0) {\n            if (uVar4 == 0x2000) {\n                uVar3 = uVar3 | 0x100;\n            }\n            else if (uVar4 == 0x4000) {\n                uVar3 = uVar3 | 0x200;\n            }\n            else if (uVar4 == 0x6000) {\n                uVar3 = uVar3 | 0x300;\n            }\n        }\n        uVar4 = in_MXCSR & 0x8040;\n        if (uVar4 == 0x40) {\n            uVar3 = uVar3 | 0x2000000;\n        }\n        else if (uVar4 == 0x8000) {\n            uVar3 = uVar3 | 0x3000000;\n        }\n        else if (uVar4 == 0x8040) {\n            uVar3 = uVar3 | 0x1000000;\n        }\n        uVar4 = ~(arg_ch & 0x308031f) & uVar3 | arg_ch & 0x308031f & arg_8h;\n        if (uVar4 != uVar3) {\n            arg_8h_00 = fcn.0044d292(uVar4);\n            fcn.004044cb(arg_8h_00);\n            uVar3 = in_MXCSR >> 3 & 0x10;\n            if ((in_MXCSR & 0x200) != 0) {\n                uVar3 = uVar3 | 8;\n            }\n            if ((in_MXCSR & 0x400) != 0) {\n                uVar3 = uVar3 | 4;\n            }\n            if ((in_MXCSR & 0x800) != 0) {\n                uVar3 = uVar3 | 2;\n            }\n            if ((in_MXCSR & 0x1000) != 0) {\n                uVar3 = uVar3 | 1;\n            }\n            if ((in_MXCSR & 0x100) != 0) {\n                uVar3 = uVar3 | 0x80000;\n            }\n            uVar4 = in_MXCSR & 0x6000;\n            if (uVar4 != 0) {\n                if (uVar4 == 0x2000) {\n                    uVar3 = uVar3 | 0x100;\n                }\n                else if (uVar4 == 0x4000) {\n                    uVar3 = uVar3 | 0x200;\n                }\n                else if (uVar4 == 0x6000) {\n                    uVar3 = uVar3 | 0x300;\n                }\n            }\n            uVar4 = in_MXCSR & 0x8040;\n            if (uVar4 == 0x40) {\n                uVar3 = uVar3 | 0x2000000;\n            }\n            else if (uVar4 == 0x8000) {\n                uVar3 = uVar3 | 0x3000000;\n            }\n            else if (uVar4 == 0x8040) {\n                uVar3 = uVar3 | 0x1000000;\n            }\n        }\n        uVar4 = uVar3 ^ arg_8h_01;\n        arg_8h_01 = uVar3 | arg_8h_01;\n        if ((uVar4 & 0x8031f) != 0) {\n            arg_8h_01 = arg_8h_01 | 0x80000000;\n        }\n    }\n    return arg_8h_01;\n}\n",
        "token_count": 2089
    },
    "00403a80": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403a80(uint32_t arg_8h)\n\n{\n    int32_t iStack8;\n    \n    if ((arg_8h & 0x20) == 0) {\n        if ((arg_8h & 8) != 0) {\n            return 1;\n        }\n        if ((arg_8h & 4) == 0) {\n            if ((arg_8h & 1) == 0) {\n                return (arg_8h & 2) * 2;\n            }\n            iStack8 = 3;\n        }\n        else {\n            iStack8 = 2;\n        }\n    }\n    else {\n        iStack8 = 5;\n    }\n    return iStack8;\n}\n",
        "token_count": 166
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00403af3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403af3(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x00426055;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x00426055:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00404345(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar1 == 8) {\n        fcn.00403855(arg_8h_00, var_4h, arg_8h);\n    }\n    else {\n        fcn.00403805(arg_8h_00, arg_8h);\n    }\n    pcVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar3 = *(in_ECX + 0x30),  *pcVar3 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar3 >> 8, 1);\n}\n",
        "token_count": 1238
    },
    "00403d5a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d5a(uint arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    uint32_t *puVar1;\n    \n    if ((arg_8h != '\\0') && (puVar1 = arg_ch + 3,  (*puVar1 >> 9 & 1) != 0)) {\n        fcn.00402ed7(arg_ch, arg_10h);\n        LOCK();\n        *puVar1 = *puVar1 & 0xfffffd7f;\n        arg_ch[6] = 0;\n        arg_ch[1] = 0;\n        *arg_ch = 0;\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00403e40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403e40(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    \n    if (((*(*in_ECX + 0xc) >> 0xc & 1) == 0) || (*(*in_ECX + 4) != 0)) {\n        uVar1 = fcn.00403e8b(arg_8h, *in_ECX, arg_ch);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != -1;\n    }\n    else {\n        uVar1 = CONCAT31(*in_ECX >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 161
    },
    "00403e68": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403e68(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x00423856;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x00423856:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00404345(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar1 == 8) {\n        fcn.004030fd(arg_8h_00, var_4h);\n    }\n    else {\n        fcn.004020bd(arg_8h_00);\n    }\n    pcVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar3 = *(in_ECX + 0x30),  *pcVar3 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar3 >> 8, 1);\n}\n",
        "token_count": 1228
    },
    "00403e8b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00403e8b(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    if ((*(arg_ch + 0xc) >> 0xc & 1) == 0) {\n        iVar1 = fcn.0040406b(arg_ch);\n        if ((iVar1 == -1) || (iVar1 = fcn.0040406b(arg_ch),  iVar1 == -2)) {\n            iVar1 = 0x4756c0;\n        }\n        else {\n            iVar1 = fcn.0040406b(arg_ch);\n            uVar2 = fcn.0040406b(arg_ch);\n            iVar1 = *((iVar1 >> 6) * 4 + 0x4771f0) + (uVar2 & 0x3f) * 0x38;\n        }\n        iVar3 = 0x4756c0;\n        if ((*(iVar1 + 0x29) != '\\x02') && (*(iVar1 + 0x29) != '\\x01')) {\n            iVar1 = fcn.0040406b(arg_ch);\n            if ((iVar1 != -1) && (iVar1 = fcn.0040406b(arg_ch),  iVar1 != -2)) {\n                iVar1 = fcn.0040406b(arg_ch);\n                uVar2 = fcn.0040406b(arg_ch);\n                iVar3 = *((iVar1 >> 6) * 4 + 0x4771f0) + (uVar2 & 0x3f) * 0x38;\n            }\n            if (*(iVar3 + 0x28) < '\\0') {\n                iVar1 = fcn.00402f72(&var_10h, &var_ch, 5, arg_8h, arg_10h);\n                if ((iVar1 == 0) && (iVar1 = 0,  0 < var_10h)) {\n                    do {\n                        iVar3 = fcn.00402c34(*(&var_ch + iVar1), arg_ch, arg_10h);\n                        if (iVar3 == -1) break;\n                        iVar1 = iVar1 + 1;\n                    } while (iVar1 < var_10h);\n                }\n                goto code_r0x0044f43f;\n            }\n        }\n        fcn.0044f291(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        fcn.0044f291(arg_8h, arg_ch, arg_10h);\n    }\ncode_r0x0044f43f:\n    fcn.0040241e(var_10h);\n    return;\n}\n",
        "token_count": 668
    },
    "00416a82": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416a82(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::exception.0;\n    fcn.00403de1(in_ECX + 1);\n    if ((arg_8h & 1) != 0) {\n        fcn.0040164a(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "00403ea9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403ea9(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00401e3d(*(in_ECX + 0x28));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00401541(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403620(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00403913(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00401366(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00404138(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403d32(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00403319(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403b1b(&var_ch);\n        }\n    }\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.0040383c();\n    if (cVar2 != '\\0') {\n        uVar3 = *(in_ECX + 0x1c);\n        arg_ch = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x1c) = uVar3;\n            arg_ch = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *(in_ECX + 0x1c) = uVar3 & 0xfffffff7;\n            fcn.00404345(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | arg_ch) == 0) {\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 0;\n        if (var_4h == 8) {\n            fcn.004014ba(arg_8h_00, arg_ch, arg_8h);\n        }\n        else {\n            fcn.00403035(arg_8h_00, arg_8h);\n        }\n        if (((*(in_ECX + 0x1c) >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != '0')))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1056
    },
    "00403f6c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403f6c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t arg_ch;\n    uint32_t arg_8h_00;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00401e3d(*(in_ECX + 0x28));\n    var_ch = 0;\n    var_8h = 0;\n    if (var_4h == 1) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00401541(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403620(&var_ch);\n        }\n    }\n    else if (var_4h == 2) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00403913(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00401366(&var_ch);\n        }\n    }\n    else if (var_4h == 4) {\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00404138(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403d32(&var_ch);\n        }\n    }\n    else {\n        if (var_4h != 8) {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if ((*(in_ECX + 0x1c) >> 4 & 1) == 0) {\n            cVar2 = fcn.00403319(&var_ch);\n        }\n        else {\n            cVar2 = fcn.00403b1b(&var_ch);\n        }\n    }\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.0040383c();\n    if (cVar2 != '\\0') {\n        uVar3 = *(in_ECX + 0x1c);\n        arg_ch = var_8h;\n        arg_8h_00 = var_ch;\n        if ((((uVar3 >> 4 & 1) != 0) && (var_8h < 1)) && (var_8h < 0)) {\n            uVar3 = uVar3 | 0x40;\n            *(in_ECX + 0x1c) = uVar3;\n            arg_ch = -(var_8h + (var_ch != 0));\n            arg_8h_00 = -var_ch;\n        }\n        if (*(in_ECX + 0x24) < 0) {\n            *(in_ECX + 0x24) = 1;\n        }\n        else {\n            *(in_ECX + 0x1c) = uVar3 & 0xfffffff7;\n            fcn.00404345(*(in_ECX + 0x24), *(in_ECX + 8));\n        }\n        if ((arg_8h_00 | arg_ch) == 0) {\n            *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n        }\n        *(in_ECX + 0x38) = 0;\n        if (var_4h == 8) {\n            fcn.0040358a(arg_8h_00, arg_ch);\n        }\n        else {\n            fcn.00403ab7(arg_8h_00);\n        }\n        if (((*(in_ECX + 0x1c) >> 7 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (**(in_ECX + 0x30) != '0')))) {\n            *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n            **(in_ECX + 0x30) = 0x30;\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1049
    },
    "00404066": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404066(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x00426231;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x00426231:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00404345(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 0;\n    if (iVar1 == 8) {\n        fcn.00403b43(arg_8h_00, var_4h, arg_8h);\n    }\n    else {\n        fcn.004015cd(arg_8h_00, arg_8h);\n    }\n    pcVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((pcVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (pcVar3 = *(in_ECX + 0x30),  *pcVar3 != '0')))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -1;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(pcVar3 >> 8, 1);\n}\n",
        "token_count": 1238
    },
    "0040429b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040429b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x00423a32;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x00423a32:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00403e1d(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar1 == 8) {\n        fcn.00401271(arg_8h_00, var_4h);\n    }\n    else {\n        fcn.0040290f(arg_8h_00);\n    }\n    piVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar3 = *(in_ECX + 0x30),  *piVar3 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar3 >> 8, 1);\n}\n",
        "token_count": 1236
    },
    "00404340": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404340(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x00427178;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x00427178:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00403e1d(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar1 == 8) {\n        fcn.004019ba(arg_8h_00, var_4h, arg_8h);\n    }\n    else {\n        fcn.0040166d(arg_8h_00, arg_8h);\n    }\n    piVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar3 = *(in_ECX + 0x30),  *piVar3 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar3 >> 8, 1);\n}\n",
        "token_count": 1243
    },
    "004043d1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004043d1(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    uint var_28h;\n    \n    uVar2 = 0;\n    fcn.00401b40(0);\n    if (arg_8h == 0) {\n        uVar2 = fcn.0044c443(0);\n        goto code_r0x0044c69d;\n    }\n    iVar1 = fcn.00402ed7(arg_8h, &var_28h);\n    if (iVar1 == 0) {\n        if ((*(arg_8h + 0xc) >> 0xb & 1) == 0) goto code_r0x0044c69d;\n        arg_8h_00 = fcn.0040406b(arg_8h);\n        iVar1 = fcn.00403210(arg_8h_00);\n        if (iVar1 == 0) goto code_r0x0044c69d;\n    }\n    uVar2 = 0xffffffff;\ncode_r0x0044c69d:\n    fcn.004024dc();\n    return uVar2;\n}\n",
        "token_count": 271
    },
    "00404403": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404403(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    bool bVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = fcn.00401e3d(*(in_ECX + 0x28));\n    if (iVar1 == 1) {\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 2) {\n            if (iVar1 == 4) {\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n                if ((uVar2 >> 4 & 1) == 0) {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = 0;\n                }\n                else {\n                    arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n                    var_4h = arg_8h_00 >> 0x1f;\n                }\n            }\n            else {\n                if (iVar1 != 8) {\n                    iVar1 = *(in_ECX + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                uVar2 = *(in_ECX + 0x1c);\n                *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n                arg_8h_00 = *(*(in_ECX + 0x10) + -8);\n                var_4h = *(*(in_ECX + 0x10) + -4);\n            }\n            goto code_r0x004243cc;\n        }\n        uVar2 = *(in_ECX + 0x1c);\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        if ((uVar2 >> 4 & 1) == 0) {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n        else {\n            arg_8h_00 = *(*(in_ECX + 0x10) + -4);\n        }\n    }\n    var_4h = arg_8h_00 >> 0x1f;\ncode_r0x004243cc:\n    if ((((uVar2 >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n        bVar4 = arg_8h_00 != 0;\n        arg_8h_00 = -arg_8h_00;\n        var_4h = -(var_4h + bVar4);\n        uVar2 = uVar2 | 0x40;\n        *(in_ECX + 0x1c) = uVar2;\n    }\n    if (*(in_ECX + 0x24) < 0) {\n        *(in_ECX + 0x24) = 1;\n    }\n    else {\n        *(in_ECX + 0x1c) = uVar2 & 0xfffffff7;\n        fcn.00403e1d(*(in_ECX + 0x24), *(in_ECX + 8));\n    }\n    if ((arg_8h_00 | var_4h) == 0) {\n        *(in_ECX + 0x1c) = *(in_ECX + 0x1c) & 0xffffffdf;\n    }\n    *(in_ECX + 0x38) = 1;\n    if (iVar1 == 8) {\n        fcn.00404034(arg_8h_00, var_4h);\n    }\n    else {\n        fcn.0040108c(arg_8h_00);\n    }\n    piVar3 = *(in_ECX + 0x1c) >> 7;\n    if (((piVar3 & 1) != 0) && ((*(in_ECX + 0x34) == 0 || (piVar3 = *(in_ECX + 0x30),  *piVar3 != 0x30)))) {\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + -2;\n        **(in_ECX + 0x30) = 0x30;\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    return CONCAT31(piVar3 >> 8, 1);\n}\n",
        "token_count": 1233
    },
    "004098bd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004098bd(uint32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.type_info.0;\n    if ((arg_8h & 1) != 0) {\n        fcn.0040164a(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "004045cf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004045cf(uint *arg_8h)\n\n{\n    char cVar1;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x476418 == 'X') {\n        var_10h = \"void\";\n        var_ch = 4;\n    }\n    else {\n        if (**0x476418 != 'Z') {\n            fcn.004030d5(&var_8h);\n            if ((var_4h == '\\0') && (cVar1 = **0x476418,  cVar1 != '\\0')) {\n                if (cVar1 != '@') {\n                    if (cVar1 != 'Z') {\n                        fcn.004014dd(2);\n                        return arg_8h;\n                    }\n                    *0x476418 = *0x476418 + 1;\n                    if ((~(*0x476420 >> 0x12) & 1) == 0) {\n                        var_10h = \",<ellipsis>\";\n                        var_ch = 0xb;\n                    }\n                    else {\n                        var_10h = \",...\";\n                        var_ch = 4;\n                    }\n                    fcn.004037d3(arg_8h, &var_10h);\n                    return arg_8h;\n                }\n                *0x476418 = *0x476418 + 1;\n            }\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n        if ((~(*0x476420 >> 0x12) & 1) == 0) {\n            var_10h = \"<ellipsis>\";\n            var_ch = 10;\n        }\n        else {\n            var_10h = 0x46aa98;\n            var_ch = 3;\n        }\n    }\n    *0x476418 = *0x476418 + 1;\n    fcn.00402211(&var_10h);\n    return arg_8h;\n}\n",
        "token_count": 451
    },
    "0040463d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n\nuint * __cdecl fcn.0040463d(uint *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    uint *var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar1 = **0x476418;\n    pcVar5 = *0x476418;\n    if (cVar1 == '\\0') {\ncode_r0x00410a31:\n        *0x476418 = pcVar5;\n        fcn.004011db(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    if ((('5' < cVar1) && (cVar1 < ':')) || (cVar1 == '_')) {\n        uVar6 = cVar1 - 0x36;\n        pcVar5 = *0x476418 + 1;\n        if (uVar6 == 0x29) {\n            if (*pcVar5 == '\\0') goto code_r0x00410a31;\n            uVar6 = *pcVar5 - 0x3d;\n            *0x476418 = *0x476418 + 2;\n            if ((uVar6 < 4) || (7 < uVar6)) {\n                uVar6 = 0xffffffff;\n            }\n        }\n        else {\n            *0x476418 = pcVar5;\n            if ((uVar6 < 0) || (3 < uVar6)) goto code_r0x00410a2d;\n        }\n        if (uVar6 != 0xffffffff) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = *arg_ch;\n            var_4h = arg_ch[1];\n            if ((uVar6 & 2) != 0) {\n                if (**0x476418 == '@') {\n                    *0x476418 = *0x476418 + 1;\n                }\n                else {\n                    var_18h = 0x46aa08;\n                    var_14h = 2;\n                    fcn.00402211(&fcn.0040463d::var_18h);\n                    fcn.0040395e(&fcn.0040463d::var_18h, &fcn.0040463d::var_8h);\n                    var_8h = var_18h;\n                    var_4h = var_14h;\n                    if (**0x476418 == '\\0') {\n                        fcn.004014dd(1);\n                        fcn.0040395e(&fcn.0040463d::var_18h, &fcn.0040463d::var_8h);\n                        var_8h = var_18h;\n                        var_4h = var_14h;\n                    }\n                    else {\n                        uVar2 = fcn.004029f0(&fcn.0040463d::var_28h);\n                        fcn.004022e3(&fcn.0040463d::var_18h, 0x20, uVar2);\n                        piVar3 = fcn.0040395e(&fcn.0040463d::var_30h, &fcn.0040463d::var_8h);\n                        var_8h = *piVar3;\n                        var_4h = piVar3[1];\n                    }\n                }\n                if (**0x476418 == '\\0') {\n                    fcn.004014dd(1);\n                    fcn.0040395e(arg_8h, &fcn.0040463d::var_8h);\n                    return arg_8h;\n                }\n                if (**0x476418 != '@') goto code_r0x00410a2d;\n                *0x476418 = *0x476418 + 1;\n                if ((*0x476420 & 0x60) == 0x60) {\n                    uVar2 = fcn.00403c5b(&fcn.0040463d::var_30h);\n                    fcn.00404692(uVar2);\n                }\n                else {\n                    puVar4 = fcn.00403c5b(&fcn.0040463d::var_30h);\n                    var_10h = *puVar4;\n                    var_ch = puVar4[1];\n                }\n            }\n            if ((uVar6 & 4) != 0) {\n                if ((~(*0x476420 >> 1) & 1) == 0) {\n                    var_30h = fcn.0040380a(&fcn.0040463d::var_30h);\n                    fcn.00404692(var_30h);\n                }\n                else {\n                    uVar2 = fcn.0040380a(&fcn.0040463d::var_30h);\n                    fcn.004022e3(&fcn.0040463d::var_28h, 0x20, uVar2);\n                    var_30h = &fcn.0040463d::var_18h;\n                    piVar3 = fcn.0040395e(var_30h, &fcn.0040463d::var_8h);\n                    var_8h = *piVar3;\n                    var_4h = piVar3[1];\n                }\n            }\n            if ((~(*0x476420 >> 1) & 1) == 0) {\n                uVar2 = fcn.00402987(&fcn.0040463d::var_30h);\n                fcn.00404692(uVar2);\n            }\n            else {\n                fcn.00402987(&fcn.0040463d::var_30h);\n                piVar3 = fcn.0040395e(&fcn.0040463d::var_28h, &fcn.0040463d::var_28h);\n                var_8h = *piVar3;\n                var_4h = piVar3[1];\n            }\n            if (*arg_ch != 0) {\n                fcn.004022e3(&fcn.0040463d::var_30h, 0x28, &fcn.0040463d::var_8h);\n                piVar3 = fcn.0040256d(&fcn.0040463d::var_28h, 0x29);\n                var_8h = *piVar3;\n                var_4h = piVar3[1];\n            }\n            piVar3 = fcn.004038c8(8);\n            if (piVar3 == NULL) {\n                piVar3 = NULL;\n            }\n            else {\n                *piVar3 = 0;\n                piVar3[1] = 0;\n            }\n            fcn.00402e6e(&fcn.0040463d::var_20h, piVar3);\n            uVar2 = fcn.004045cf(&fcn.0040463d::var_30h);\n            fcn.004022e3(&fcn.0040463d::var_28h, 0x28, uVar2);\n            fcn.0040256d(&fcn.0040463d::var_18h, 0x29);\n            fcn.00402310(0x41096a);\n            if (((*0x476420 & 0x60) != 0x60) && ((uVar6 & 2) != 0)) {\n                fcn.00402310(&fcn.0040463d::var_10h);\n            }\n            if ((~(*0x476420 >> 0x13) & 1) == 0) {\n                uVar2 = fcn.00401ba4(&fcn.0040463d::var_30h);\n                fcn.00404692(uVar2);\n            }\n            else {\n                uVar2 = fcn.00401ba4(&fcn.0040463d::var_30h);\n                fcn.00402310(uVar2);\n            }\n            uVar2 = fcn.004018a2(&fcn.0040463d::var_30h);\n            fcn.00402310(uVar2);\n            if ((~(*0x476420 >> 8) & 1) == 0) {\n                uVar2 = fcn.00403d9b(&fcn.0040463d::var_30h);\n                fcn.00404692(uVar2);\n            }\n            else {\n                uVar2 = fcn.00403d9b(&fcn.0040463d::var_30h);\n                fcn.00402310(uVar2);\n            }\n            if (piVar3 != NULL) {\n                *piVar3 = var_8h;\n                piVar3[1] = var_4h;\n                *arg_8h = var_20h;\n                arg_8h[1] = var_1ch;\n                return arg_8h;\n            }\n            uVar2 = 3;\n            goto code_r0x00410a23;\n        }\n    }\ncode_r0x00410a2d:\n    uVar2 = 2;\ncode_r0x00410a23:\n    fcn.004014dd(uVar2);\n    return arg_8h;\n}\n",
        "token_count": 2121
    },
    "00404679": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.00404679(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00401b59(0x474790, 0x10);\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.004043a4(8);\n    *(unaff_EBP + -4) = 0;\n    for (iVar3 = 3; *(unaff_EBP + -0x20) = iVar3,  iVar3 != *0x477590; iVar3 = iVar3 + 1) {\n        iVar2 = *(*0x477594 + iVar3 * 4);\n        if (iVar2 != 0) {\n            if ((*(iVar2 + 0xc) >> 0xd & 1) != 0) {\n                iVar2 = fcn.00401fff(*(*0x477594 + iVar3 * 4));\n                if (iVar2 != -1) {\n                    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 1;\n                }\n            }\n            (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(*(*0x477594 + iVar3 * 4) + 0x20);\n            fcn.004042f5(*(*0x477594 + iVar3 * 4));\n            *(*0x477594 + iVar3 * 4) = 0;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00452e7e();\n    uVar1 = *(unaff_EBP + -0x1c);\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 453
    },
    "00403e4a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar ** __cdecl fcn.00403e4a(char **arg_8h, int32_t *arg_ch)\n\n{\n    char **ppcVar1;\n    uint uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint var_24h;\n    char *var_1ch;\n    char *var_18h;\n    char *var_14h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    uint var_1h;\n    \n    if (**0x476418 == 0) {\n        fcn.004011db(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    puVar3 = *0x476418 + 1;\n    uVar4 = **0x476418;\n    var_1h._0_1_ = 0;\n    var_ch = NULL;\n    var_8h = NULL;\n    if (uVar4 < 0x59) {\n    // switch table (17 cases) at 0x40ec43\n        switch(uVar4) {\n        case 0x43:\n        case 0x44:\n        case 0x45:\n            var_1ch = \"char\";\n            goto code_r0x0040e7a3;\n        case 0x46:\n        case 0x47:\n            var_1ch = \"short\";\n            var_18h = 0x5;\n            break;\n        case 0x48:\n        case 0x49:\n            var_1ch = 0x46ad38;\n            var_18h = 0x3;\n            break;\n        case 0x4a:\n        case 0x4b:\n            var_1ch = \"long\";\ncode_r0x0040e7a3:\n            var_18h = 0x4;\n            break;\n        case 0x4c:\n            goto code_r0x0040e856;\n        case 0x4d:\n            var_1ch = \"float\";\n            var_18h = 0x5;\n            goto code_r0x0040e7f2;\n        case 0x4f:\n            var_1ch = \"long \";\n            var_18h = 0x5;\n            *0x476418 = puVar3;\n            fcn.00401b68(&var_1ch);\n            puVar3 = *0x476418;\n        case 0x4e:\n            *0x476418 = puVar3;\n            var_1ch = \"double\";\n            var_18h = 0x6;\n            fcn.00403f03(&var_1ch);\n            goto code_r0x0040e87b;\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n            uVar4 = uVar4 & 3;\n            *0x476418 = puVar3;\ncode_r0x0040e9e0:\n            var_ch = NULL;\n            var_8h = NULL;\n            var_1ch = *arg_ch;\n            var_18h = arg_ch[1];\n            if (uVar4 != 0xfffffffe) {\n                if (var_1ch == NULL) {\n                    if ((uVar4 & 1) == 0) {\n                        if ((uVar4 & 2) != 0) {\n                            var_14h = \"volatile\";\n                            var_10h = 0x8;\n                            fcn.00401b68(&var_14h);\n                        }\n                    }\n                    else {\n                        var_14h = \"const\";\n                        var_10h = 0x5;\n                        fcn.00401b68(&var_14h);\n                        if ((uVar4 & 2) != 0) {\n                            var_14h = \" volatile\";\n                            var_10h = 0x9;\n                            fcn.00403f03(&var_14h);\n                        }\n                    }\n                }\n                fcn.00403530(arg_8h, &var_ch, &var_1ch, 1);\n                return arg_8h;\n            }\n            var_18h = var_18h | 0x800;\n            fcn.00403530(&var_14h, &var_ch, &var_1ch, 0);\n            if ((var_10h & 0x800) == 0) {\n                var_1ch = 0x46a3ec;\n                var_18h = 0x2;\n                fcn.00403f03(&var_1ch);\n            }\n            goto code_r0x0040eb86;\n        default:\n            var_1ch = \"void\";\n            var_18h = 0x4;\ncode_r0x0040e7f2:\n            *0x476418 = puVar3;\n            fcn.00401b68(&var_1ch);\n            goto code_r0x0040ebfb;\n        }\n        *0x476418 = puVar3;\n        fcn.00401b68(&var_1ch);\ncode_r0x0040e87b:\n        if (uVar4 != 0x43) {\n            if ((((uVar4 != 0x45) && (uVar4 != 0x47)) && (uVar4 != 0x49)) && (uVar4 != 0x4b)) {\n                if (uVar4 != 0x5f) goto code_r0x0040ebfb;\n                goto code_r0x0040ebad;\n            }\n            goto code_r0x0040ebc9;\n        }\n        var_1ch = \"signed \";\n        var_18h = 0x7;\n        goto code_r0x0040ebd7;\n    }\n    if (uVar4 != 0x5f) {\ncode_r0x0040e856:\n        ppcVar1 = fcn.0040122b(&var_1ch);\n        var_14h = *ppcVar1;\n        var_10h = ppcVar1[1];\n        var_ch = var_14h;\n        var_8h = var_10h;\n        if (var_14h == NULL) {\ncode_r0x0040eb86:\n            *arg_8h = var_14h;\n            arg_8h[1] = var_10h;\n            return arg_8h;\n        }\n        goto code_r0x0040e87b;\n    }\n    var_1h._0_1_ = *puVar3;\n    *0x476418 = *0x476418 + 2;\n    if (var_1h < 0x4f) {\n        if (var_1h != 0x4e) {\n            if (var_1h < 0x49) {\n                if (var_1h == 0x48) {\ncode_r0x0040e9a9:\n                    var_1ch = \"__int32\";\n                }\n                else {\n                    if (var_1h == 0) {\n                        *0x476418 = puVar3;\n                        fcn.004022e8(1);\n                        goto code_r0x0040ebad;\n                    }\n                    if (var_1h == 0x24) {\n                        var_1ch = \"__w64 \";\n                        var_18h = 0x6;\n                        uVar2 = fcn.00403e4a(&var_14h, arg_ch);\n                        fcn.00402d97(arg_8h, &var_1ch, uVar2);\n                        return arg_8h;\n                    }\n                    if ((var_1h == 0x44) || (var_1h == 0x45)) {\n                        var_1ch = \"__int8\";\n                        var_18h = 0x6;\n                        goto code_r0x0040eba1;\n                    }\n                    if ((var_1h != 0x46) && (var_1h != 0x47)) goto code_r0x0040eb93;\n                    var_1ch = \"__int16\";\n                }\n            }\n            else {\n                if (var_1h == 0x49) goto code_r0x0040e9a9;\n                if ((var_1h != 0x4a) && (var_1h != 0x4b)) {\n                    if ((var_1h != 0x4c) && (var_1h != 0x4d)) goto code_r0x0040eb93;\n                    var_1ch = \"__int128\";\n                    goto code_r0x0040e991;\n                }\n                var_1ch = \"__int64\";\n            }\n            goto code_r0x0040eb9a;\n        }\n        var_1ch = \"bool\";\ncode_r0x0040e9bc:\n        var_18h = 0x4;\n        goto code_r0x0040eba1;\n    }\n    // switch table (11 cases) at 0x40ec7b\n    switch(var_1h) {\n    case 0x4f:\n        uVar4 = 0xfffffffe;\n        goto code_r0x0040e9e0;\n    case 0x50:\n        var_1ch = \"auto\";\n        goto code_r0x0040e9bc;\n    case 0x51:\n        var_1ch = \"char8_t\";\n        goto code_r0x0040eb9a;\n    case 0x52:\n        var_1ch = \"<unknown>\";\n        var_18h = 0x9;\n        break;\n    case 0x53:\n        var_1ch = \"char16_t\";\n        goto code_r0x0040e991;\n    case 0x54:\n        var_1ch = \"decltype(auto)\";\n        var_18h = 0xe;\n        break;\n    case 0x55:\n        var_1ch = \"char32_t\";\ncode_r0x0040e991:\n        var_18h = 0x8;\n        break;\n    case 0x56:\n        var_1ch = \"this \";\n        var_18h = 0x5;\n        uVar2 = fcn.00402798(&var_14h, arg_ch);\n        fcn.00402211(&var_1ch);\n        fcn.0040395e(&var_1ch, uVar2);\n        var_ch = var_1ch;\n        var_8h = var_18h;\n        goto code_r0x0040ebad;\n    case 0x57:\n        var_1ch = \"wchar_t\";\n        goto code_r0x0040eb9a;\n    case 0x58:\n    case 0x59:\n        *0x476418 = puVar3;\n        ppcVar1 = fcn.0040122b(&var_24h);\n        var_14h = *ppcVar1;\n        var_10h = ppcVar1[1];\n        var_ch = var_14h;\n        var_8h = var_10h;\n        if (var_14h == NULL) goto code_r0x0040eb86;\n        goto code_r0x0040ebad;\n    default:\ncode_r0x0040eb93:\n        var_1ch = \"UNKNOWN\";\ncode_r0x0040eb9a:\n        var_18h = 0x7;\n    }\ncode_r0x0040eba1:\n    fcn.00401b68(&var_1ch);\ncode_r0x0040ebad:\n    if ((((var_1h == 0x45) || (var_1h == 0x47)) || (var_1h == 0x49)) || ((var_1h == 0x4b || (var_1h == 0x4d)))) {\ncode_r0x0040ebc9:\n        var_1ch = \"unsigned \";\n        var_18h = 0x9;\ncode_r0x0040ebd7:\n        fcn.00402211(&var_1ch);\n        fcn.0040395e(&var_1ch, &var_ch);\n        var_ch = var_1ch;\n        var_8h = var_18h;\n    }\ncode_r0x0040ebfb:\n    if (*arg_ch != 0) {\n        uVar2 = fcn.004022e3(&var_24h, 0x20, arg_ch);\n        fcn.00402310(uVar2);\n    }\n    *arg_8h = var_ch;\n    arg_8h[1] = var_8h;\n    return arg_8h;\n}\n",
        "token_count": 2838
    },
    "0041606d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0041606d(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h, uint arg_1ch, \n            int32_t arg_20h, int32_t arg_24h)\n\n{\n    code *pcVar1;\n    uint32_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t *piVar8;\n    int32_t var_64h;\n    int32_t var_60h;\n    int32_t var_58h;\n    uint *var_54h;\n    uint var_50h;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    int32_t *var_40h;\n    uint32_t *var_3ch;\n    uint32_t *var_34h;\n    uint32_t *var_30h;\n    uint var_2ch;\n    int32_t *var_28h;\n    int32_t var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint *var_14h;\n    int32_t var_10h;\n    uint32_t *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_18h = var_18h & 0xffffff00;\n    var_8h = fcn.00402b3f(arg_ch, arg_14h, arg_18h);\n    if ((var_8h < -1) || (arg_18h[1] <= var_8h)) goto code_r0x0041640c;\n    if (((*arg_8h != -0x1f928c9d) || (arg_8h[4] != 3)) ||\n       ((((arg_8h[5] != 0x19930520 && (arg_8h[5] != 0x19930521)) && (arg_8h[5] != 0x19930522)) || (arg_8h[7] != 0)))) {\n        var_4h = arg_10h;\n        goto code_r0x004161bb;\n    }\n    iVar4 = fcn.004020a9();\n    if (*(iVar4 + 0x10) == 0) {\n        return;\n    }\n    iVar4 = fcn.004020a9();\n    arg_8h = *(iVar4 + 0x10);\n    iVar4 = fcn.004020a9();\n    var_18h = CONCAT31(var_18h._1_3_, 1);\n    var_4h = *(iVar4 + 0x14);\n    if ((arg_8h == NULL) ||\n       ((((*arg_8h == -0x1f928c9d && (arg_8h[4] == 3)) &&\n         ((arg_8h[5] == 0x19930520 || ((arg_8h[5] == 0x19930521 || (arg_8h[5] == 0x19930522)))))) && (arg_8h[7] == 0))))\n    goto code_r0x0041640c;\n    iVar4 = fcn.004020a9();\n    if (*(iVar4 + 0x1c) == 0) {\ncode_r0x004161bb:\n        var_30h = arg_18h;\n        var_2ch = 0;\n        if (((*arg_8h == -0x1f928c9d) && (arg_8h[4] == 3)) &&\n           ((arg_8h[5] == 0x19930520 || ((arg_8h[5] == 0x19930521 || (arg_8h[5] == 0x19930522)))))) {\n            if (arg_18h[3] != 0) {\n                fcn.00402a9f(&var_40h, &var_30h, var_8h, arg_14h, arg_18h, arg_20h);\n                var_28h = var_40h;\n                var_ch = var_3ch;\n                if (var_3ch < var_34h) {\n                    var_1ch = var_3ch * 0x14;\n                    do {\n                        iVar4 = var_8h;\n                        puVar6 = *(*var_28h + 0x10) + var_1ch;\n                        puVar7 = &var_64h;\n                        var_ch = var_3ch;\n                        for (iVar5 = 5; iVar5 != 0; iVar5 = iVar5 + -1) {\n                            *puVar7 = *puVar6;\n                            puVar6 = puVar6 + 1;\n                            puVar7 = puVar7 + 1;\n                        }\n                        if (((var_64h <= iVar4) && (iVar4 <= var_60h)) && (var_10h = 0,  var_58h != 0)) {\n                            iVar4 = arg_8h[7];\n                            var_24h = **(iVar4 + 0xc);\n                            var_20h = *(iVar4 + 0xc) + 1;\n                            var_14h = var_54h;\n                            do {\n                                var_50h = *var_14h;\n                                uStack80 = var_14h[1];\n                                uStack76 = var_14h[2];\n                                uStack72 = var_14h[3];\n                                piVar8 = var_20h;\n                                var_3ch = var_ch;\n                                for (iVar5 = var_24h; var_ch = var_3ch,  0 < iVar5; iVar5 = iVar5 + -1) {\n                                    iVar4 = fcn.00401091(&var_50h, *piVar8, iVar4);\n                                    if (iVar4 != 0) {\n                                        fcn.00415fcd(arg_8h, arg_ch, var_4h, arg_14h, arg_18h, &var_50h, *piVar8, \n                                                     &var_64h, arg_20h, arg_24h);\n                                        var_3ch = var_ch;\n                                        goto code_r0x004162f6;\n                                    }\n                                    iVar4 = arg_8h[7];\n                                    piVar8 = piVar8 + 1;\n                                    var_3ch = var_ch;\n                                }\n                                var_10h = var_10h + 1;\n                                var_14h = var_14h + 4;\n                            } while (var_10h != var_58h);\n                        }\ncode_r0x004162f6:\n                        var_3ch = var_3ch + 1;\n                        var_1ch = var_1ch + 0x14;\n                        var_ch = var_3ch;\n                    } while (var_3ch < var_34h);\n                }\n            }\n            if (arg_1ch != '\\0') {\n                fcn.004024ff(arg_8h);\n            }\n            if (0x19930520 < (*arg_18h & 0x1fffffff)) {\n                if (arg_18h[7] != 0) {\n                    if ((arg_18h[8] >> 2 & 1) != 0) goto code_r0x0041634f;\n                    cVar3 = fcn.00416f03(arg_8h, arg_18h[7]);\n                    if (cVar3 != '\\0') goto code_r0x0041639b;\n                    goto code_r0x004163d0;\n                }\n                if (((arg_18h[8] >> 2 & 1) != 0) && (arg_20h == 0)) {\ncode_r0x0041634f:\n                    iVar4 = fcn.004020a9();\n                    *(iVar4 + 0x10) = arg_8h;\n                    iVar4 = fcn.004020a9();\n                    *(iVar4 + 0x14) = var_4h;\n                    goto code_r0x004163ab;\n                }\n            }\n        }\n        else if (arg_18h[3] != 0) {\n            if (arg_1ch != '\\0') goto code_r0x0041640c;\n            fcn.004164fb(arg_8h, arg_ch, var_4h, arg_14h, arg_18h, var_8h, arg_20h, arg_24h);\n        }\ncode_r0x0041639b:\n        iVar4 = fcn.004020a9();\n        if (*(iVar4 + 0x1c) == 0) {\n            return;\n        }\n    }\n    else {\n        iVar4 = fcn.004020a9();\n        var_ch = *(iVar4 + 0x1c);\n        iVar4 = fcn.004020a9();\n        *(iVar4 + 0x1c) = 0;\n        cVar3 = fcn.00416f03(arg_8h, var_ch);\n        puVar2 = var_ch;\n        if (cVar3 != '\\0') goto code_r0x004161bb;\n        arg_24h = 0;\n        arg_18h = puVar2;\n        if (0 < *var_ch) {\n            do {\n                cVar3 = fcn.004010be(0x475bdc);\n                if (cVar3 != '\\0') goto code_r0x004163b0;\n                arg_24h = arg_24h + 0x10;\n                var_10h = var_10h + 1;\n            } while (var_10h < *puVar2);\n        }\ncode_r0x004163ab:\n        fcn.0040106e();\ncode_r0x004163b0:\n        fcn.004024ff(arg_8h);\n        fcn.0040123a();\n        fcn.00404561(&var_3ch, 0x474028);\ncode_r0x004163d0:\n        iVar4 = fcn.004020a9();\n        *(iVar4 + 0x10) = arg_8h;\n        iVar4 = fcn.004020a9();\n        *(iVar4 + 0x14) = var_4h;\n        if (arg_24h == 0) {\n            arg_24h = arg_ch;\n        }\n        fcn.00403e13(arg_24h, arg_8h);\n        fcn.00402c16(arg_ch, arg_14h, arg_18h);\n        arg_8h_00 = fcn.00403977(arg_18h);\n        fcn.00416d0c(arg_8h_00);\n    }\ncode_r0x0041640c:\n    fcn.00403693();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 2481
    },
    "00415d81": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t __cdecl fcn.00415d81(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    int32_t *piVar8;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint uVar9;\n    uint var_4h;\n    \n    fcn.00401b59(0x473fe8, 0x10);\n    iVar7 = 0;\n    puVar1 = *(unaff_EBP + 0x10);\n    if (((puVar1[1] == 0) || (*(puVar1[1] + 8) == '\\0')) || ((puVar1[2] == 0 && (-1 < *puVar1)))) {\n        iVar7 = 0;\n        goto code_r0x00415ea9;\n    }\n    uVar2 = *puVar1;\n    piVar8 = *(unaff_EBP + 0xc);\n    if (-1 < uVar2) {\n        piVar8 = piVar8 + puVar1[2] + 0xc;\n    }\n    *(unaff_EBP + -4) = 0;\n    iVar5 = *0x4763b4;\n    puVar3 = *(unaff_EBP + 0x14);\n    if (((uVar2 < '\\0') && ((*puVar3 & 0x10) != 0)) && (*(unaff_EBP + -0x1c) = *0x4763b4,  iVar5 != 0)) {\n        (**0x47a000)();\n        iVar5 = (**(unaff_EBP + -0x1c))();\ncode_r0x00415df8:\n        if ((iVar5 == 0) || (piVar8 == NULL)) {\ncode_r0x00415eb9:\n            fcn.00403693();\n            pcVar4 = swi(3);\n            iVar7 = (*pcVar4)();\n            return iVar7;\n        }\n        *piVar8 = iVar5;\ncode_r0x00415e48:\n        iVar5 = fcn.0040113b(iVar5, puVar3 + 8);\n        *piVar8 = iVar5;\n    }\n    else {\n        iVar5 = *(unaff_EBP + 8);\n        if ((uVar2 & 8) != 0) {\n            iVar5 = *(iVar5 + 0x18);\n            goto code_r0x00415df8;\n        }\n        if ((*puVar3 & 1) != 0) {\n            if ((*(iVar5 + 0x18) == 0) || (piVar8 == NULL)) goto code_r0x00415eb9;\n            fcn.00403d1e(piVar8, *(iVar5 + 0x18), *(puVar3 + 0x14));\n            if ((*(puVar3 + 0x14) != 4) || (*piVar8 == 0)) goto code_r0x00415e93;\n            iVar5 = *piVar8;\n            goto code_r0x00415e48;\n        }\n        iVar5 = *(iVar5 + 0x18);\n        if (*(puVar3 + 0x18) == 0) {\n            if ((iVar5 == 0) || (piVar8 == NULL)) goto code_r0x00415eb9;\n            uVar9 = *(puVar3 + 0x14);\n            uVar6 = fcn.0040113b(iVar5, puVar3 + 8);\n            fcn.00403d1e(piVar8, uVar6, uVar9);\n        }\n        else {\n            if ((iVar5 == 0) || (piVar8 == NULL)) goto code_r0x00415eb9;\n            iVar7 = ((*puVar3 & 4) != 0) + 1;\n            *(unaff_EBP + -0x20) = iVar7;\n        }\n    }\ncode_r0x00415e93:\n    *(unaff_EBP + -4) = 0xfffffffe;\ncode_r0x00415ea9:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return iVar7;\n}\n",
        "token_count": 1036
    },
    "00418cda": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00418cda(int16_t *arg_8h, int16_t **arg_ch, int16_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    int16_t iVar3;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    *arg_18h = 0;\n    *arg_14h = 1;\n    if (arg_ch != NULL) {\n        *arg_ch = arg_10h;\n        arg_ch = arg_ch + 1;\n    }\n    bVar1 = false;\n    bVar2 = false;\n    do {\n        if (*arg_8h == 0x22) {\n            bVar1 = !bVar1;\n            iVar3 = 0x22;\n            bVar2 = bVar1;\n        }\n        else {\n            *arg_18h = *arg_18h + 1;\n            if (arg_10h != NULL) {\n                *arg_10h = *arg_8h;\n                arg_10h = arg_10h + 1;\n            }\n            iVar3 = *arg_8h;\n            if (iVar3 == 0) goto code_r0x00418d70;\n        }\n        arg_8h = arg_8h + 1;\n    } while ((bVar2) || ((iVar3 != 0x20 && (iVar3 != 9))));\n    if (arg_10h != NULL) {\n        arg_10h[-1] = 0;\n    }\ncode_r0x00418d70:\n    bVar1 = false;\n    while( true ) {\n        iVar3 = *arg_8h;\n        if (iVar3 != 0) {\n            while ((iVar3 == 0x20 || (iVar3 == 9))) {\n                arg_8h = arg_8h + 1;\n                iVar3 = *arg_8h;\n            }\n        }\n        if (iVar3 == 0) break;\n        if (arg_ch != NULL) {\n            *arg_ch = arg_10h;\n            arg_ch = arg_ch + 1;\n        }\n        *arg_14h = *arg_14h + 1;\n        while( true ) {\n            uVar4 = 0;\n            bVar2 = true;\n            iVar3 = *arg_8h;\n            while (iVar3 == 0x5c) {\n                arg_8h = arg_8h + 1;\n                uVar4 = uVar4 + 1;\n                iVar3 = *arg_8h;\n            }\n            if (iVar3 == 0x22) {\n                if ((uVar4 & 1) == 0) {\n                    if ((bVar1) && (arg_8h[1] == 0x22)) {\n                        arg_8h = arg_8h + 1;\n                    }\n                    else {\n                        bVar2 = false;\n                        bVar1 = !bVar1;\n                    }\n                }\n                uVar4 = uVar4 >> 1;\n            }\n            while (uVar4 != 0) {\n                uVar4 = uVar4 - 1;\n                if (arg_10h != NULL) {\n                    *arg_10h = 0x5c;\n                    arg_10h = arg_10h + 1;\n                }\n                *arg_18h = *arg_18h + 1;\n            }\n            iVar3 = *arg_8h;\n            if ((iVar3 == 0) || ((!bVar1 && ((iVar3 == 0x20 || (iVar3 == 9)))))) break;\n            if (bVar2) {\n                if (arg_10h != NULL) {\n                    *arg_10h = iVar3;\n                    arg_10h = arg_10h + 1;\n                }\n                *arg_18h = *arg_18h + 1;\n            }\n            arg_8h = arg_8h + 1;\n        }\n        if (arg_10h != NULL) {\n            *arg_10h = 0;\n            arg_10h = arg_10h + 1;\n        }\n        *arg_18h = *arg_18h + 1;\n    }\n    if (arg_ch != NULL) {\n        *arg_ch = NULL;\n    }\n    *arg_14h = *arg_14h + 1;\n    return;\n}\n",
        "token_count": 1014
    },
    "0041e0e2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041e0e2(uint32_t arg_8h, uint arg_ch, uchar *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h)\n\n{\n    uint var_474h;\n    uchar *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_420h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        *(arg_1ch + 0x1c) = 1;\n        arg_18h = 0;\n        *(arg_1ch + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch);\n        goto code_r0x0041e248;\n    }\n    var_470h = arg_10h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if (((arg_8h & 2) != 0) || (var_464h = 0,  arg_10h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.00402b71(&var_460h, arg_8h, arg_ch, arg_18h, arg_1ch, arg_20h);\n    var_ch = 0;\n    var_460h = fcn.00402905();\n    if (arg_10h != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if ((arg_8h & 2) == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h == arg_14h) {\n                        arg_10h[arg_14h + -1] = 0;\n                    }\n                    else {\ncode_r0x0041e231:\n                        arg_10h[var_468h] = 0;\n                    }\n                }\n            }\n            else if (arg_14h != 0) {\n                if (var_460h < 0) {\n                    *arg_10h = 0;\n                }\n                else {\n                    if (var_468h != arg_14h) goto code_r0x0041e231;\n                    arg_10h[arg_14h + -1] = 0;\n                }\n            }\n        }\n        else if (((arg_14h != 0) || (var_460h == NULL)) && (var_468h != arg_14h)) {\n            arg_10h[var_468h] = 0;\n        }\n    }\n    fcn.00403189();\ncode_r0x0041e248:\n    fcn.0040241e(arg_18h);\n    return;\n}\n",
        "token_count": 724
    },
    "0041e2b3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041e2b3(uint32_t arg_8h, uint arg_ch, ushort *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h)\n\n{\n    uint var_474h;\n    ushort *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_420h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        *(arg_1ch + 0x1c) = 1;\n        arg_18h = 0;\n        *(arg_1ch + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch);\n        goto code_r0x0041e428;\n    }\n    var_470h = arg_10h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if (((arg_8h & 2) != 0) || (var_464h = 0,  arg_10h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.00403602(&var_460h, arg_8h, arg_ch, arg_18h, arg_1ch, arg_20h);\n    var_ch = 0;\n    var_460h = fcn.0040303a();\n    if (arg_10h != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if ((arg_8h & 2) == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h == arg_14h) {\n                        arg_10h[arg_14h + -1] = 0;\n                    }\n                    else {\ncode_r0x0041e40e:\n                        arg_10h[var_468h] = 0;\n                    }\n                }\n            }\n            else if (arg_14h != 0) {\n                if (var_460h < 0) {\n                    *arg_10h = 0;\n                }\n                else {\n                    if (var_468h != arg_14h) goto code_r0x0041e40e;\n                    arg_10h[arg_14h + -1] = 0;\n                }\n            }\n        }\n        else if (((arg_14h != 0) || (var_460h == NULL)) && (var_468h != arg_14h)) {\n            arg_10h[var_468h] = 0;\n        }\n    }\n    fcn.00403189();\ncode_r0x0041e428:\n    fcn.0040241e(arg_18h);\n    return;\n}\n",
        "token_count": 726
    },
    "0041e496": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041e496(uint32_t arg_8h, uint arg_ch, uchar *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uchar *arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t var_adch;\n    uint var_ad8h;\n    uint32_t var_ad4h;\n    int32_t var_ad0h;\n    uchar *var_acch;\n    int32_t var_ac8h;\n    int32_t var_ac4h;\n    uint var_ac0h;\n    uint *var_abch;\n    uchar *var_ab8h;\n    uint var_ab4h;\n    uint var_a78h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    var_ab8h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        *(arg_1ch + 0x1c) = 1;\n        iVar1 = 0;\n        *(arg_1ch + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch);\n        arg_1ch = iVar1;\n        goto code_r0x0041e625;\n    }\n    var_ad4h = arg_8h & 2;\n    var_acch = arg_10h;\n    var_ac8h = arg_14h;\n    var_ac4h = 0;\n    if ((var_ad4h != 0) || (var_ac0h = 0,  arg_10h == NULL)) {\n        var_ac0h = 1;\n    }\n    var_abch = &var_acch;\n    var_adch = arg_8h;\n    var_ab8h = arg_20h;\n    var_ad0h = arg_18h;\n    var_ad8h = arg_ch;\n    fcn.00401b3b(&var_abch, &var_adch, &var_ad0h, arg_1ch, &var_ab8h);\n    var_abch = fcn.004024d7();\n    if (arg_10h != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_ad4h == 0) {\n                if (arg_14h != 0) {\n                    if (var_ac4h == arg_14h) {\n                        arg_10h[arg_14h + -1] = 0;\n                    }\n                    else {\ncode_r0x0041e60e:\n                        arg_10h[var_ac4h] = 0;\n                    }\n                }\n            }\n            else if (arg_14h != 0) {\n                if (var_abch < 0) {\n                    *arg_10h = 0;\n                }\n                else {\n                    if (var_ac4h != arg_14h) goto code_r0x0041e60e;\n                    arg_10h[arg_14h + -1] = 0;\n                }\n            }\n        }\n        else if (((arg_14h != 0) || (var_abch == NULL)) && (var_ac4h != arg_14h)) {\n            arg_10h[var_ac4h] = 0;\n        }\n    }\n    fcn.00403189();\ncode_r0x0041e625:\n    fcn.0040241e(arg_1ch);\n    return;\n}\n",
        "token_count": 800
    },
    "0041e69a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041e69a(uint32_t arg_8h, uint arg_ch, ushort *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            ushort *arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t var_adch;\n    uint var_ad8h;\n    uint32_t var_ad4h;\n    int32_t var_ad0h;\n    ushort *var_acch;\n    int32_t var_ac8h;\n    int32_t var_ac4h;\n    uint var_ac0h;\n    uint *var_abch;\n    ushort *var_ab8h;\n    uint var_ab4h;\n    uint var_a78h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    var_ab8h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        *(arg_1ch + 0x1c) = 1;\n        iVar1 = 0;\n        *(arg_1ch + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch);\n        arg_1ch = iVar1;\n        goto code_r0x0041e838;\n    }\n    var_ad4h = arg_8h & 2;\n    var_acch = arg_10h;\n    var_ac8h = arg_14h;\n    var_ac4h = 0;\n    if ((var_ad4h != 0) || (var_ac0h = 0,  arg_10h == NULL)) {\n        var_ac0h = 1;\n    }\n    var_abch = &var_acch;\n    var_adch = arg_8h;\n    var_ab8h = arg_20h;\n    var_ad0h = arg_18h;\n    var_ad8h = arg_ch;\n    fcn.004014f6(&var_abch, &var_adch, &var_ad0h, arg_1ch, &var_ab8h);\n    var_abch = fcn.004027cf();\n    if (arg_10h != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_ad4h == 0) {\n                if (arg_14h != 0) {\n                    if (var_ac4h == arg_14h) {\n                        arg_10h[arg_14h + -1] = 0;\n                    }\n                    else {\ncode_r0x0041e81e:\n                        arg_10h[var_ac4h] = 0;\n                    }\n                }\n            }\n            else if (arg_14h != 0) {\n                if (var_abch < 0) {\n                    *arg_10h = 0;\n                }\n                else {\n                    if (var_ac4h != arg_14h) goto code_r0x0041e81e;\n                    arg_10h[arg_14h + -1] = 0;\n                }\n            }\n        }\n        else if (((arg_14h != 0) || (var_abch == NULL)) && (var_ac4h != arg_14h)) {\n            arg_10h[var_ac4h] = 0;\n        }\n    }\n    fcn.00403189();\ncode_r0x0041e838:\n    fcn.0040241e(arg_1ch);\n    return;\n}\n",
        "token_count": 799
    },
    "0041e8b1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041e8b1(uint32_t arg_8h, uint arg_ch, uchar *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h)\n\n{\n    uint var_474h;\n    uchar *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_420h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        *(arg_1ch + 0x1c) = 1;\n        arg_18h = 0;\n        *(arg_1ch + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch);\n        goto code_r0x0041ea17;\n    }\n    var_470h = arg_10h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if (((arg_8h & 2) != 0) || (var_464h = 0,  arg_10h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.00402b71(&var_460h, arg_8h, arg_ch, arg_18h, arg_1ch, arg_20h);\n    var_ch = 0;\n    var_460h = fcn.00402eb9();\n    if (arg_10h != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if ((arg_8h & 2) == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h == arg_14h) {\n                        arg_10h[arg_14h + -1] = 0;\n                    }\n                    else {\ncode_r0x0041ea00:\n                        arg_10h[var_468h] = 0;\n                    }\n                }\n            }\n            else if (arg_14h != 0) {\n                if (var_460h < 0) {\n                    *arg_10h = 0;\n                }\n                else {\n                    if (var_468h != arg_14h) goto code_r0x0041ea00;\n                    arg_10h[arg_14h + -1] = 0;\n                }\n            }\n        }\n        else if (((arg_14h != 0) || (var_460h == NULL)) && (var_468h != arg_14h)) {\n            arg_10h[var_468h] = 0;\n        }\n    }\n    fcn.00403189();\ncode_r0x0041ea17:\n    fcn.0040241e(arg_18h);\n    return;\n}\n",
        "token_count": 725
    },
    "0041ea82": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041ea82(uint32_t arg_8h, uint arg_ch, ushort *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h)\n\n{\n    uint var_474h;\n    ushort *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_420h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        *(arg_1ch + 0x1c) = 1;\n        arg_18h = 0;\n        *(arg_1ch + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch);\n        goto code_r0x0041ebf7;\n    }\n    var_470h = arg_10h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if (((arg_8h & 2) != 0) || (var_464h = 0,  arg_10h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.00403602(&var_460h, arg_8h, arg_ch, arg_18h, arg_1ch, arg_20h);\n    var_ch = 0;\n    var_460h = fcn.004023ba();\n    if (arg_10h != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if ((arg_8h & 2) == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h == arg_14h) {\n                        arg_10h[arg_14h + -1] = 0;\n                    }\n                    else {\ncode_r0x0041ebdd:\n                        arg_10h[var_468h] = 0;\n                    }\n                }\n            }\n            else if (arg_14h != 0) {\n                if (var_460h < 0) {\n                    *arg_10h = 0;\n                }\n                else {\n                    if (var_468h != arg_14h) goto code_r0x0041ebdd;\n                    arg_10h[arg_14h + -1] = 0;\n                }\n            }\n        }\n        else if (((arg_14h != 0) || (var_460h == NULL)) && (var_468h != arg_14h)) {\n            arg_10h[var_468h] = 0;\n        }\n    }\n    fcn.00403189();\ncode_r0x0041ebf7:\n    fcn.0040241e(arg_18h);\n    return;\n}\n",
        "token_count": 723
    },
    "00443173": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_720h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00443173(int32_t arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_20h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint8_t *puVar7;\n    int32_t var_720h;\n    uint var_71ch;\n    uint lpCPInfo;\n    uint var_712h;\n    uint var_704h;\n    uint var_304h;\n    uint var_204h;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    if ((*(arg_8h + 4) == 0xfde9) || (iVar4 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(*(arg_8h + 4), &lpCPInfo),  iVar4 == 0)\n       ) {\n        puVar7 = arg_8h + 0x19;\n        var_720h = -0x5a - arg_8h;\n        do {\n            if (puVar7 + var_720h < 0x1a) {\n                *puVar7 = *puVar7 | 0x10;\n                cVar2 = puVar7 + ' ';\ncode_r0x004432f6:\n                uVar3 = cVar2 + (-0x19 - arg_8h);\n            }\n            else {\n                if (puVar7 + (-0x7a - arg_8h) < 0x1a) {\n                    *puVar7 = *puVar7 | 0x20;\n                    cVar2 = puVar7 + -0x20;\n                    goto code_r0x004432f6;\n                }\n                uVar3 = 0;\n            }\n            puVar7[0x100] = uVar3;\n            puVar7 = puVar7 + 1;\n        } while (puVar7 + (-0x19 - arg_8h) < 0x100);\n    }\n    else {\n        uVar5 = 0;\n        do {\n            *(&var_104h + uVar5) = uVar5;\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < 0x100);\n        puVar6 = &var_712h;\n        var_104h._0_1_ = 0x20;\n        while (var_712h != 0) {\n            uVar3 = *(puVar6 + 1);\n            for (uVar5 = var_712h; (uVar5 <= uVar3 && (uVar5 < 0x100)); uVar5 = uVar5 + 1) {\n                *(&var_104h + uVar5) = 0x20;\n            }\n            puVar6 = puVar6 + 2;\n            var_712h._0_1_ = *puVar6;\n        }\n        fcn.004011e0(0, 1, &var_104h, 0x100, &var_704h, *(arg_8h + 4), 0);\n        fcn.00403f8f(0, *(arg_8h + 0x21c), 0x100, &var_104h, 0x100, &var_204h, 0x100, *(arg_8h + 4), 0);\n        fcn.00403f8f(0, *(arg_8h + 0x21c), 0x200, &var_104h, 0x100, &var_304h, 0x100, *(arg_8h + 4), 0);\n        puVar7 = arg_8h + 0x19;\n        iVar4 = 0;\n        do {\n            uVar1 = *(&var_704h + iVar4 * 2);\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 & 2) == 0) {\n                    uVar3 = 0;\n                }\n                else {\n                    *puVar7 = *puVar7 | 0x20;\n                    uVar3 = *(&var_304h + iVar4);\n                }\n            }\n            else {\n                *puVar7 = *puVar7 | 0x10;\n                uVar3 = *(&var_204h + iVar4);\n            }\n            puVar7[0x100] = uVar3;\n            iVar4 = iVar4 + 1;\n            puVar7 = puVar7 + 1;\n        } while (puVar7 + (-0x19 - arg_8h) < 0x100);\n    }\n    fcn.0040241e(var_720h);\n    return;\n}\n",
        "token_count": 1131
    },
    "00447d15": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00447d15(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar (*pauVar3) [32];\n    int16_t *piVar4;\n    int16_t *piVar5;\n    uint32_t uVar6;\n    uchar auVar7 [16];\n    uchar auVar8 [32];\n    uchar in_YMM1 [32];\n    uint16_t uVar9;\n    \n    piVar5 = arg_8h;\n    if (*0x4763a8 < 5) {\n        if (*0x4763a8 < 1) {\n            for (; *piVar5 != 0; piVar5 = piVar5 + 1) {\n            }\n        }\n        else {\n            if ((arg_8h & 1) != 0) {\n                for (; *piVar5 != 0; piVar5 = piVar5 + 1) {\n                }\n                goto code_r0x00447d3f;\n            }\n            uVar6 = -((arg_8h & 0xf) != 0) & 0x10 - (arg_8h & 0xf);\n            piVar5 = arg_8h + (uVar6 & 0xfffffffe);\n            piVar4 = arg_8h;\n            if (arg_8h != piVar5) {\n                do {\n                    if (*piVar4 == 0) break;\n                    piVar4 = piVar4 + 1;\n                } while (piVar4 != piVar5);\n            }\n            uVar2 = piVar4 - arg_8h >> 1;\n            if (uVar2 != uVar6 >> 1) {\n                return uVar2;\n            }\n            piVar5 = arg_8h + uVar2;\n            while( true ) {\n                uVar9 = -(piVar5[7] == 0);\n                auVar7 = CONCAT214(uVar9, CONCAT212(-(piVar5[6] == 0), \n                                                    CONCAT210(-(piVar5[5] == 0), \n                                                              CONCAT28(-(piVar5[4] == 0), \n                                                                       CONCAT26(-(piVar5[3] == 0), \n                                                                                CONCAT24(-(piVar5[2] == 0), \n                                                                                         CONCAT22(-(piVar5[1] == 0), \n                                                                                                  -(*piVar5 == 0))))))))\n                ;\n                if ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                     (uVar9 >> 7 & 1) << 0xe | uVar9 & 0x8000) != 0) break;\n                piVar5 = piVar5 + 8;\n            }\n            for (; *piVar5 != 0; piVar5 = piVar5 + 1) {\n            }\n        }\n        iVar1 = piVar5 - arg_8h;\n    }\n    else {\n        if ((arg_8h & 1) == 0) {\n            uVar6 = -((arg_8h & 0x1f) != 0) & 0x20 - (arg_8h & 0x1f);\n            piVar5 = arg_8h + (uVar6 & 0xfffffffe);\n            piVar4 = arg_8h;\n            if (arg_8h != piVar5) {\n                do {\n                    if (*piVar4 == 0) break;\n                    piVar4 = piVar4 + 1;\n                } while (piVar4 != piVar5);\n            }\n            uVar2 = piVar4 - arg_8h >> 1;\n            if (uVar2 != uVar6 >> 1) {\n                return uVar2;\n            }\n            pauVar3 = arg_8h + uVar2;\n            auVar7 = vpxor_avx(SUB3216(in_YMM1, 0), SUB3216(in_YMM1, 0));\n            while (auVar8 = vpcmpeqw_avx2(ZEXT1632(auVar7), *pauVar3), \n                  (SUB321(auVar8 >> 7, 0) & 1 | (SUB321(auVar8 >> 0xf, 0) & 1) << 1 |\n                   (SUB321(auVar8 >> 0x17, 0) & 1) << 2 | (SUB321(auVar8 >> 0x1f, 0) & 1) << 3 |\n                   (SUB321(auVar8 >> 0x27, 0) & 1) << 4 | (SUB321(auVar8 >> 0x2f, 0) & 1) << 5 |\n                   (SUB321(auVar8 >> 0x37, 0) & 1) << 6 | (SUB321(auVar8 >> 0x3f, 0) & 1) << 7 |\n                   (SUB321(auVar8 >> 0x47, 0) & 1) << 8 | (SUB321(auVar8 >> 0x4f, 0) & 1) << 9 |\n                   (SUB321(auVar8 >> 0x57, 0) & 1) << 10 | (SUB321(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                   (SUB321(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                   (SUB321(auVar8 >> 0x77, 0) & 1) << 0xe | SUB321(auVar8 >> 0x7f, 0) << 0xf |\n                   (SUB321(auVar8 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar8 >> 0x8f, 0) & 1) << 0x11 |\n                   (SUB321(auVar8 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar8 >> 0x9f, 0) & 1) << 0x13 |\n                   (SUB321(auVar8 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar8 >> 0xaf, 0) & 1) << 0x15 |\n                   (SUB321(auVar8 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar8 >> 0xbf, 0) << 0x17 |\n                   (SUB321(auVar8 >> 199, 0) & 1) << 0x18 | (SUB321(auVar8 >> 0xcf, 0) & 1) << 0x19 |\n                   (SUB321(auVar8 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar8 >> 0xdf, 0) & 1) << 0x1b |\n                   (SUB321(auVar8 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar8 >> 0xef, 0) & 1) << 0x1d |\n                   (SUB321(auVar8 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar8 >> 0xff, 0) << 0x1f) == 0) {\n                pauVar3 = pauVar3[1];\n            }\n            for (; **pauVar3 != 0; pauVar3 = *pauVar3 + 2) {\n            }\n            vzeroupper_avx();\n            return pauVar3 - arg_8h >> 1;\n        }\n        for (; *piVar5 != 0; piVar5 = piVar5 + 1) {\n        }\ncode_r0x00447d3f:\n        iVar1 = piVar5 - arg_8h;\n    }\n    return iVar1 >> 1;\n}\n",
        "token_count": 2172
    },
    "0044c3e4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044c3e4(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_8h == 0) {\n        uVar1 = fcn.0044c443(0);\n        return uVar1;\n    }\n    iVar2 = fcn.00402ed7(arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        if ((*(arg_8h + 0xc) >> 0xb & 1) != 0) {\n            uVar1 = fcn.0040406b(arg_8h);\n            iVar2 = fcn.00403210(uVar1);\n            if (iVar2 != 0) goto code_r0x0044c42a;\n        }\n        uVar1 = 0;\n    }\n    else {\ncode_r0x0044c42a:\n        uVar1 = 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 224
    },
    "0044f525": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint __cdecl fcn.0044f525(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00401b59(0x474708, 0x10);\n    iVar4 = *(unaff_EBP + 0xc);\n    if (iVar4 == 0) {\n        iVar4 = *(unaff_EBP + 0x10);\n        *(iVar4 + 0x1c) = 1;\n        *(iVar4 + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, iVar4);\n    }\n    else {\n        *(unaff_EBP + -0x20) = 0;\n        fcn.0040127b(iVar4);\n        *(unaff_EBP + -4) = 0;\n        if ((*(iVar4 + 0xc) >> 0xc & 1) != 0) {\ncode_r0x0044f612:\n            uVar1 = fcn.00402c34(*(unaff_EBP + 8), iVar4, *(unaff_EBP + 0x10));\n            *(unaff_EBP + -0x20) = uVar1;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0044f64a();\n            goto code_r0x0044f634;\n        }\n        uVar2 = fcn.0040406b(iVar4);\n        if ((uVar2 == 0xffffffff) || (uVar2 == 0xfffffffe)) {\n            *(unaff_EBP + -0x1c) = 0x4756c0;\n        }\n        else {\n            *(unaff_EBP + -0x1c) = (uVar2 & 0x3f) * 0x38 + *((uVar2 >> 6) * 4 + 0x4771f0);\n        }\n        iVar3 = 0x4756c0;\n        iVar4 = *(unaff_EBP + 0xc);\n        if (*(*(unaff_EBP + -0x1c) + 0x29) == '\\0') {\n            if ((uVar2 != 0xffffffff) && (uVar2 != 0xfffffffe)) {\n                iVar3 = (uVar2 & 0x3f) * 0x38 + *((uVar2 >> 6) * 4 + 0x4771f0);\n            }\n            if ((*(iVar3 + 0x2d) & 1) == 0) goto code_r0x0044f612;\n        }\n        iVar4 = *(unaff_EBP + 0x10);\n        *(iVar4 + 0x1c) = 1;\n        *(iVar4 + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, iVar4);\n        fcn.004022de(0x47502c, unaff_EBP + -0x10, 0xfffffffe);\n    }\n    uVar1 = 0xffffffff;\ncode_r0x0044f634:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 866
    },
    "00453219": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00453219(char *arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    if (arg_18h == 0) {\n        return '4' < *arg_ch;\n    }\n    iVar1 = fcn.0040344f();\n    if (iVar1 == 0) {\n        if (*arg_ch < '6') {\n            if (*arg_ch < '5') {\n                return false;\n            }\n            pcVar2 = arg_ch;\n            if (arg_14h != 0) {\n                do {\n                    pcVar2 = pcVar2 + 1;\n                } while (*pcVar2 == '0');\n                if (*pcVar2 == '\\0') {\n                    if (arg_ch == arg_8h) {\n                        return false;\n                    }\n                    return arg_ch[-1] & 1;\n                }\n            }\n        }\n    }\n    else if (iVar1 == 0x200) {\n        if ((*arg_ch == '0') || (arg_10h == 0x2d)) {\n            return false;\n        }\n    }\n    else {\n        if (iVar1 != 0x100) {\n            return false;\n        }\n        if (*arg_ch == '0') {\n            return false;\n        }\n        if (arg_10h != 0x2d) {\n            return false;\n        }\n    }\n    return true;\n}\n",
        "token_count": 337
    },
    "00459732": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.00459732(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t lpCriticalSection;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00401b59(0x474848, 0x10);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        iVar2 = *(unaff_EBP + 0x14);\n        *(iVar2 + 0x24) = 1;\n        *(iVar2 + 0x20) = 0;\n        *(iVar2 + 0x1c) = 1;\n        *(iVar2 + 0x18) = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x477458)) {\n            iVar2 = (lpCriticalSection & 0x3f) * 0x38;\n            *(unaff_EBP + -0x20) = iVar2;\n            if ((*(iVar2 + 0x28 + *((lpCriticalSection >> 6) * 4 + 0x4771f0)) & 1) != 0) {\n                fcn.00401348(lpCriticalSection);\n                uVar1 = 0xffffffff;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*(unaff_EBP + -0x20) + 0x28 + *((lpCriticalSection >> 6) * 4 + 0x4771f0)) & 1) == 0) {\n                    iVar2 = *(unaff_EBP + 0x14);\n                    *(iVar2 + 0x1c) = 1;\n                    *(iVar2 + 0x18) = 9;\n                    *(iVar2 + 0x24) = 1;\n                    *(iVar2 + 0x20) = 0;\n                }\n                else {\n                    uVar1 = fcn.004599eb(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14)\n                                        );\n                    *(unaff_EBP + -0x1c) = uVar1;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.004597fa();\n                goto code_r0x0045982a;\n            }\n        }\n        iVar2 = *(unaff_EBP + 0x14);\n        *(iVar2 + 0x24) = 1;\n        *(iVar2 + 0x20) = 0;\n        *(iVar2 + 0x1c) = 1;\n        *(iVar2 + 0x18) = 9;\n        fcn.00402c20(0, 0, 0, 0, 0, iVar2);\n    }\n    uVar1 = 0xffffffff;\ncode_r0x0045982a:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 789
    },
    "0045987c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nulong __cdecl fcn.0045987c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t lpCriticalSection;\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    ulong uVar2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00401b59(0x474868, 0x18);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        iVar1 = *(unaff_EBP + 0x18);\n        *(iVar1 + 0x24) = 1;\n        *(iVar1 + 0x20) = 0;\n        *(iVar1 + 0x1c) = 1;\n        *(iVar1 + 0x18) = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x477458)) {\n            *(unaff_EBP + -0x1c) = lpCriticalSection >> 6;\n            iVar1 = (lpCriticalSection & 0x3f) * 0x38;\n            *(unaff_EBP + -0x20) = iVar1;\n            if ((*(iVar1 + 0x28 + *((lpCriticalSection >> 6) * 4 + 0x4771f0)) & 1) != 0) {\n                fcn.00401348(lpCriticalSection);\n                *(unaff_EBP + -0x28) = 0xffffffff;\n                uVar2 = 0xffffffffffffffff;\n                *(unaff_EBP + -0x24) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*(unaff_EBP + -0x20) + 0x28 + *(*(unaff_EBP + -0x1c) * 4 + 0x4771f0)) & 1) == 0) {\n                    iVar1 = *(unaff_EBP + 0x18);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 9;\n                    *(iVar1 + 0x24) = 1;\n                    *(iVar1 + 0x20) = 0;\n                }\n                else {\n                    uVar2 = fcn.00459a5f(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14)\n                                         , *(unaff_EBP + 0x18));\n                    *(unaff_EBP + -0x28) = uVar2;\n                    *(unaff_EBP + -0x24) = uVar2 >> 0x20;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0045995e();\n                goto code_r0x00459990;\n            }\n        }\n        iVar1 = *(unaff_EBP + 0x18);\n        *(iVar1 + 0x24) = 1;\n        *(iVar1 + 0x20) = 0;\n        *(iVar1 + 0x1c) = 1;\n        *(iVar1 + 0x18) = 9;\n        fcn.00402c20(0, 0, 0, 0, 0, iVar1);\n    }\n    uVar2 = 0xffffffffffffffff;\ncode_r0x00459990:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 887
    },
    "0045ab79": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.0045ab79(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00401b59(0x4748c8, 0x10);\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = iVar1;\n    if (iVar1 == 0) {\n        iVar1 = *(unaff_EBP + 0xc);\n        *(iVar1 + 0x1c) = 1;\n        *(iVar1 + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, iVar1);\n    }\n    else {\n        if ((*(iVar1 + 0xc) >> 0xc & 1) == 0) {\n            *(unaff_EBP + -0x1c) = 0;\n            fcn.0040127b(iVar1);\n            *(unaff_EBP + -4) = 0;\n            uVar2 = fcn.0045ac35(iVar1, *(unaff_EBP + 0xc));\n            *(unaff_EBP + -0x1c) = uVar2;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0045ac08();\n            goto code_r0x0045abf2;\n        }\n        fcn.00404449(iVar1);\n    }\n    uVar2 = 0xffffffff;\ncode_r0x0045abf2:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 470
    },
    "0045ac35": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ac35(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    \n    if (arg_8h == 0) {\n        *(arg_ch + 0x1c) = 1;\n        *(arg_ch + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_ch);\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = 0xffffffff;\n        if ((*(arg_8h + 0xc) >> 0xd & 1) != 0) {\n            uVar1 = fcn.00402ed7(arg_8h, arg_ch);\n            fcn.00402671(arg_8h);\n            arg_8h_00 = fcn.0040406b(arg_8h);\n            iVar2 = fcn.004010eb(arg_8h_00, arg_ch);\n            if (iVar2 < 0) {\n                uVar1 = 0xffffffff;\n            }\n            else if (*(arg_8h + 0x1c) != 0) {\n                fcn.004042f5(*(arg_8h + 0x1c));\n                *(arg_8h + 0x1c) = 0;\n            }\n        }\n        fcn.00404449(arg_8h);\n    }\n    return uVar1;\n}\n",
        "token_count": 342
    },
    "0045b238": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045b238(uint32_t arg_8h)\n\n{\n    return (arg_8h & 8 | (arg_8h >> 2 & 8 | arg_8h & 0x10) >> 2) >> 1 | ((arg_8h & 2) << 3 | arg_8h & 4) * 2 |\n           (arg_8h & 1) << 4;\n}\n",
        "token_count": 103
    },
    "0045b28d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045b28d(uint32_t arg_8h)\n\n{\n    return (arg_8h & 8 | (arg_8h >> 2 & 8 | arg_8h & 0x10) >> 2) >> 1 | ((arg_8h & 2) << 3 | arg_8h & 4) * 2 |\n           (arg_8h & 1) << 4;\n}\n",
        "token_count": 104
    },
    "0045b338": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045b338(uint32_t arg_8h)\n\n{\n    return (arg_8h & 8 | (arg_8h >> 2 & 8 | arg_8h & 0x10) >> 2) >> 1 | ((arg_8h & 2) << 3 | arg_8h & 4) * 2 |\n           (arg_8h & 1) << 4;\n}\n",
        "token_count": 103
    },
    "0045b38d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045b38d(uint32_t arg_8h)\n\n{\n    return (((arg_8h & 4 | ((arg_8h & 1) << 2 | arg_8h & 2) << 2) << 2 | arg_8h & 8) << 3 | arg_8h & 0x30) << 3;\n}\n",
        "token_count": 90
    },
    "0045b3d5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045b3d5(uint32_t arg_8h)\n\n{\n    return (arg_8h & 4 | ((arg_8h & 1) << 2 | arg_8h & 2) << 2) * 2 | arg_8h >> 4 & 3 | arg_8h >> 1 & 4;\n}\n",
        "token_count": 87
    },
    "0045b5e1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045b5e1(uint32_t arg_8h)\n\n{\n    return (arg_8h & 8 | (arg_8h >> 2 & 8 | arg_8h & 0x10) >> 2) >> 1 | ((arg_8h & 2) << 3 | arg_8h & 4) * 2 |\n           (arg_8h & 1) << 4;\n}\n",
        "token_count": 105
    },
    "0045b636": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045b636(uint32_t arg_8h)\n\n{\n    return (arg_8h & 8 | (arg_8h >> 2 & 8 | arg_8h & 0x10) >> 2) >> 1 | ((arg_8h & 2) << 3 | arg_8h & 4) * 2 |\n           (arg_8h & 1) << 4;\n}\n",
        "token_count": 103
    },
    "0045bb72": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045bb72(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t var_4h;\n    \n    var_4h = 0x1000;\n    uVar2 = 0;\n    if ((arg_8h & 0x300) == 0) {\n        var_4h = 0x2000;\n    }\n    else if ((arg_8h & 0x300) != 0x200) {\n        var_4h = 0;\n    }\n    uVar1 = arg_8h & 0xc00;\n    if (uVar1 != 0) {\n        if (uVar1 == 0x400) {\n            uVar2 = 0x100;\n        }\n        else if (uVar1 == 0x800) {\n            uVar2 = 0x200;\n        }\n        else if (uVar1 == 0xc00) {\n            uVar2 = 0x300;\n        }\n    }\n    return (arg_8h & 4 | (arg_8h & 2) << 3) * 2 | ((arg_8h >> 2 & 8 | arg_8h & 0x10) >> 2 | arg_8h & 8) >> 1 |\n           (arg_8h & 1) << 4 | (arg_8h & 0x1000) << 2 | var_4h | uVar2;\n}\n",
        "token_count": 343
    },
    "0045bc4a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045bc4a(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar1 = arg_8h >> 2;\n    uVar2 = arg_8h & 0xc00;\n    uVar3 = (arg_8h & 0xc03fffff) >> 0x16;\n    uVar4 = 0;\n    if (uVar2 == 0x400) {\n        uVar2 = 0x8040;\n    }\n    else if (uVar2 == 0x800) {\n        uVar2 = 0x40;\n    }\n    else if (uVar2 == 0xc00) {\n        uVar2 = 0x8000;\n    }\n    else {\n        uVar2 = 0;\n    }\n    if (uVar3 != 0) {\n        if (uVar3 == 0x100) {\n            uVar4 = 0x2000;\n        }\n        else if (uVar3 == 0x200) {\n            uVar4 = 0x4000;\n        }\n        else if (uVar3 == 0x300) {\n            uVar4 = 0x6000;\n        }\n    }\n    return ((((uVar1 & 0x1000000) >> 0x16 | (((uVar1 & 0x400000) >> 0x16) << 2 | (uVar1 & 0x800000) >> 0x16) << 2) << 2\n            | (uVar1 & 0x2000000) >> 0x16) << 3 | (uVar1 & 0xc000000) >> 0x16) << 3 | uVar2 | uVar4;\n}\n",
        "token_count": 421
    },
    "0045bd85": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045bd85(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    uVar3 = arg_8h >> 2;\n    uVar4 = 0;\n    if ((arg_8h & 0x3000) == 0) {\n        uVar2 = 0x300;\n    }\n    else {\n        uVar2 = uVar4;\n        if ((arg_8h & 0x3000) == 0x1000) {\n            uVar2 = 0x200;\n        }\n    }\n    uVar1 = (arg_8h & 0xc00000) >> 0xe;\n    if (uVar1 != 0) {\n        if (uVar1 == 0x100) {\n            uVar4 = 0x400;\n        }\n        else if (uVar1 == 0x200) {\n            uVar4 = 0x800;\n        }\n        else if (uVar1 == 0x300) {\n            uVar4 = 0xc00;\n        }\n    }\n    return ((uVar3 & 0x10000) >> 0xe | (((uVar3 & 0x4000) >> 0xe) << 2 | (uVar3 & 0x8000) >> 0xe) << 2) * 2 |\n           (uVar3 & 0xc0000) >> 0x12 | (uVar3 & 0x20000) >> 0xf | arg_8h >> 2 & 0x1000 | uVar2 | uVar4;\n}\n",
        "token_count": 393
    },
    "0045c89c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0045c89c(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint32_t *arg_ch_00;\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.00401b59();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00401348(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = ***(unaff_EBP + 0xc);\n    arg_ch_00 = (*(unaff_EBP + 0xc))[1];\n    if ((*(*((arg_8h_00 >> 6) * 4 + 0x4771f0) + 0x28 + (arg_8h_00 & 0x3f) * 0x38) & 1) == 0) {\n        *(arg_ch_00 + 7) = 1;\n        arg_ch_00[6] = 9;\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = fcn.00403323(arg_8h_00, arg_ch_00);\n    }\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0045c921(0x4748e8, noname_1, unaff_retaddr);\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 433
    },
    "00401014": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401014(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n        uVar4 = *(*(in_ECX + 0x10) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x10) + -4);\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00404057(in_ECX + 0x464 + uVar1 * 0x10, 4, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar4 = puVar3[1];\n        *arg_8h = *puVar3;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 412
    },
    "00401023": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401023(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        if (99 < *(param_1 + 0xaa8)) {\n            iVar1 = *(param_1 + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        uVar2 = fcn.00401f23(param_1 + 0x464 + *(param_1 + 0xaa8) * 0x10, 4, *(param_1 + 0x2d), *(param_1 + 0x28));\n        return uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 238
    },
    "004010aa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004010aa(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    if (arg_8h != 0) {\n        uVar1 = fcn.00451b27(arg_8h);\n        if ((-1 < uVar1) && (uVar1 < 0xe4)) {\n            return *(uVar1 * 8 + 0x46e5d8);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 108
    },
    "0040114f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0040114f(uint arg_8h)\n\n{\n    if (arg_8h == '\\0') {\n        fcn.00401e6a();\n        fcn.0040373d();\n    }\n    return 1;\n}\n",
        "token_count": 57
    },
    "00401177": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401177(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == 0) {\n        puVar1 = fcn.004029b9();\n        *puVar1 = 0x16;\n        fcn.00402842();\n        return 0xffffffff;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_HeapSize)(*0x477570, 0, arg_8h);\n    return uVar2;\n}\n",
        "token_count": 122
    },
    "00401181": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar ** __cdecl fcn.00401181(char **arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint arg_ch;\n    char **ppcVar3;\n    uint var_18h;\n    uint var_10h;\n    char *var_8h;\n    char *var_4h;\n    \n    pcVar2 = *0x47641c;\n    *arg_8h = NULL;\n    arg_8h[1] = NULL;\n    if (pcVar2 == NULL) {\n        return arg_8h;\n    }\n    if (*pcVar2 == '?') {\n        cVar1 = pcVar2[1];\n        if (cVar1 == '@') {\n            *0x476418 = *0x476418 + 2;\n            var_8h = \"CV: \";\n            var_4h = 0x4;\n            arg_ch = fcn.00401852(&var_10h);\n            fcn.00402211(&var_8h);\n            fcn.0040395e(&var_8h, arg_ch);\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n        if (cVar1 == '$') {\n            ppcVar3 = fcn.004021bc(&var_18h, 0);\n            *arg_8h = *ppcVar3;\n            pcVar2 = ppcVar3[1];\n            arg_8h[1] = pcVar2;\n            if (pcVar2 != '\\x02') {\n                if ((*0x476420 & 0x1000) != 0) {\n                    return arg_8h;\n                }\n                if (**0x476418 == '\\0') {\n                    return arg_8h;\n                }\n            }\n            *0x476418 = *0x47641c;\n            ppcVar3 = fcn.00401852(&var_18h);\n            *arg_8h = *ppcVar3;\n            arg_8h[1] = ppcVar3[1];\n            return arg_8h;\n        }\n        if ((cVar1 == '?') && (pcVar2[2] == '@')) {\n            *(arg_8h + 1) = 2;\n            return arg_8h;\n        }\n    }\n    ppcVar3 = fcn.00401852(&var_18h);\n    *arg_8h = *ppcVar3;\n    arg_8h[1] = ppcVar3[1];\n    return arg_8h;\n}\n",
        "token_count": 579
    },
    "0040119a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040119a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    \n    *(param_1 + 0x458) = *(param_1 + 0x458) + 1;\n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if ((iVar1 != 3) && ((iVar1 != 2 || (*(param_1 + 0x45c) != 1)))) {\n        *(param_1 + 0xaa4) = 0xffffffff;\n        *(param_1 + 0xaa8) = 0xffffffff;\n        *(param_1 + 0x45c) = 0;\n        *(param_1 + 0x20) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0xc) = *(param_1 + 0x460);\n        return CONCAT31(Var2, 1);\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 240
    },
    "004011e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004011e0(uint arg_8h, uint dwInfoType, uint arg_10h, uint arg_14h, uint lpCharType, int32_t arg_1ch, int32_t arg_20h\n            )\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t arg_8h_00;\n    uint *lpWideCharStr;\n    uint *puVar3;\n    uint var_28h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar3 = &stack0xffffffd0;\n    lpWideCharStr = &stack0xffffffd0;\n    fcn.00403c79(arg_8h);\n    if (arg_1ch == 0) {\n        arg_1ch = *(var_18h + 8);\n    }\n    iVar2 = fcn.00401726(arg_1ch, (arg_20h != 0) * 8 + 1, arg_10h, arg_14h, 0, 0);\n    if (iVar2 == 0) goto code_r0x00448251;\n    uVar1 = iVar2 * 2;\n    arg_8h_00 = -(uVar1 < uVar1 + 8) & uVar1 + 8;\n    if (arg_8h_00 == 0) {\n        lpWideCharStr = NULL;\n    }\n    else {\n        if (arg_8h_00 < 0x401) {\n            fcn.0040268f();\n            if (*0x10 != 0x30) {\ncode_r0x00448204:\n                lpWideCharStr = puVar3 + 2;\n            }\n        }\n        else {\n            lpWideCharStr = fcn.00402d88(arg_8h_00);\n            if (lpWideCharStr != NULL) {\n                *lpWideCharStr = 0xdddd;\n                puVar3 = lpWideCharStr;\n                goto code_r0x00448204;\n            }\n        }\n        if (lpWideCharStr != NULL) {\n            fcn.0040248c(lpWideCharStr, 0, uVar1);\n            iVar2 = fcn.00401726(arg_1ch, 1, arg_10h, arg_14h, lpWideCharStr, iVar2);\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_GetStringTypeW)(dwInfoType, lpWideCharStr, iVar2, lpCharType);\n            }\n        }\n    }\n    fcn.0040124e(lpWideCharStr);\ncode_r0x00448251:\n    if (var_10h != '\\0') {\n        *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n    }\n    fcn.0040241e(var_1ch);\n    return;\n}\n",
        "token_count": 719
    },
    "00445956": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n\nvoid __cdecl fcn.00445956(uint *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uchar *puVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    ushort *puVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uint *var_58h;\n    uint var_54h;\n    uint *var_50h;\n    uint *var_4ch;\n    ushort *var_48h;\n    uint *var_44h;\n    int32_t var_40h;\n    ushort *var_3ch;\n    uint32_t var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uchar *var_2ch;\n    uint *var_28h;\n    int32_t var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint32_t var_18h;\n    uint var_12h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    var_34h = arg_8h;\n    puVar8 = NULL;\n    var_1ch = NULL;\n    var_20h = NULL;\n    var_24h = 0;\n    var_58h = arg_8h;\n    var_54h = 0;\n    if (arg_8h[0x2a] == 0) {\n        piVar2 = arg_8h[0x23];\n        if (piVar2 != NULL) {\n            LOCK();\n            *piVar2 = *piVar2 + -1;\n        }\n        arg_8h[0x23] = 0;\n        arg_8h[0x24] = 0;\n        *arg_8h = 0x46c218;\n        arg_8h[0x25] = 0x46c538;\n        arg_8h[0x26] = 0x46c708;\n        arg_8h[1] = 1;\n        goto code_r0x00445da4;\n    }\n    var_30h = NULL;\n    if ((arg_8h[2] == 0) && (iVar4 = fcn.004016b8(&var_58h, 0, arg_8h[0x2a], 0x1004, arg_8h + 2),  iVar4 != 0)) {\ncode_r0x00445d37:\n        fcn.004042f5(var_30h);\n        fcn.004042f5(var_1ch);\n        fcn.004042f5(var_20h);\n        fcn.004042f5(puVar8);\n    }\n    else {\n        var_30h = fcn.0040375b(1, 4);\n        fcn.004042f5(0);\n        var_1ch = fcn.0040375b(0x180, 2);\n        fcn.004042f5(0);\n        var_20h = fcn.0040375b(0x180, 1);\n        fcn.004042f5(0);\n        puVar8 = fcn.0040375b(0x180, 1);\n        var_28h = puVar8;\n        fcn.004042f5(0);\n        var_24h = fcn.0040375b(0x101, 1);\n        fcn.004042f5(0);\n        if ((var_30h == NULL) || ((((var_1ch == NULL || (var_24h == 0)) || (var_20h == NULL)) || (puVar8 == NULL))))\n        goto code_r0x00445d37;\n        iVar4 = 0;\n        do {\n            *(iVar4 + var_24h) = iVar4;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 0x100);\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(arg_8h[2], &var_18h);\n        if ((iVar4 == 0) || (5 < var_18h)) goto code_r0x00445d37;\n        var_38h = var_18h & 0xffff;\n        if (1 < var_38h) {\n            if (arg_8h[2] == 0xfde9) {\n                fcn.0040248c(var_24h + 0x80, 0x20, 0x80);\n            }\n            else {\n                puVar6 = &var_12h;\n                uVar1 = var_12h;\n                while ((uVar1 != 0 && (arg_8h = var_34h,  *(puVar6 + 1) != 0))) {\n                    uVar5 = *puVar6;\n                    if (uVar5 <= *(puVar6 + 1)) {\n                        do {\n                            *(uVar5 + var_24h) = 0x20;\n                            uVar5 = uVar5 + 1;\n                        } while (uVar5 <= *(puVar6 + 1));\n                    }\n                    puVar6 = puVar6 + 2;\n                    uVar1 = *puVar6;\n                }\n            }\n        }\n        var_2ch = var_24h + 1;\n        iVar4 = fcn.00403f8f(0, arg_8h[0x2a], 0x100, var_2ch, 0xff, var_20h + 0x81, 0xff, arg_8h[2], 0);\n        if ((iVar4 == 0) ||\n           (iVar4 = fcn.00403f8f(0, arg_8h[0x2a], 0x200, var_2ch, 0xff, puVar8 + 0x81, 0xff, arg_8h[2], 0),  iVar4 == 0)\n           ) goto code_r0x00445d37;\n        var_44h = var_1ch + 0x40;\n        iVar4 = fcn.004011e0(0, 1, var_24h, 0x100, var_44h, arg_8h[2], 0);\n        puVar12 = var_28h;\n        puVar6 = var_34h;\n        if (iVar4 == 0) goto code_r0x00445d37;\n        var_48h = var_1ch + 0xfe;\n        *var_48h = 0;\n        var_4ch = var_20h + 0x20;\n        *(var_20h + 0x7f) = 0;\n        *(var_28h + 0x7f) = 0;\n        *var_4ch = 0;\n        var_50h = var_28h + 0x20;\n        *var_50h = 0;\n        if (1 < var_38h) {\n            if (arg_8h[2] == 0xfde9) {\n                puVar8 = var_28h + 0x40;\n                iVar9 = var_20h - var_28h;\n                iVar4 = -0x142 - var_28h;\n                var_2ch = -0x80 - var_28h;\n                var_28h = var_1ch + 0x80;\n                do {\n                    puVar11 = var_28h + 2;\n                    *var_28h = (-(0x32 < iVar4 + puVar8) & 0x8000) + 0x8000;\n                    cVar3 = puVar8 + var_2ch;\n                    *(iVar9 + puVar8) = cVar3;\n                    *puVar8 = cVar3;\n                    puVar8 = puVar8 + 1;\n                    var_28h = puVar11;\n                } while (var_2ch + puVar8 < 0x100);\n            }\n            else {\n                puVar8 = &var_12h;\n                while ((var_12h != 0 && (*(puVar8 + 1) != 0))) {\n                    uVar5 = *puVar8;\n                    if (uVar5 <= *(puVar8 + 1)) {\n                        var_2ch = var_28h + uVar5 + 0x80;\n                        var_40h = var_20h - var_28h;\n                        var_3ch = var_1ch + uVar5 * 2 + 0x100;\n                        puVar7 = var_2ch;\n                        puVar10 = var_3ch;\n                        do {\n                            *puVar10 = 0x8000;\n                            puVar10 = puVar10 + 1;\n                            puVar7[var_40h] = uVar5;\n                            *puVar7 = uVar5;\n                            uVar5 = uVar5 + 1;\n                            puVar7 = puVar7 + 1;\n                        } while (uVar5 <= *(puVar8 + 1));\n                    }\n                    puVar8 = puVar8 + 2;\n                    var_12h._0_1_ = *puVar8;\n                }\n            }\n        }\n        puVar8 = var_1ch + 0x80;\n        puVar11 = var_1ch;\n        for (iVar4 = 0x3f; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar11 = *puVar8;\n            puVar8 = puVar8 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        *puVar11 = *puVar8;\n        puVar8 = var_20h + 0x40;\n        puVar11 = var_20h;\n        for (iVar4 = 0x1f; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar11 = *puVar8;\n            puVar8 = puVar8 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        *puVar11 = *puVar8;\n        *(puVar11 + 2) = *(puVar8 + 2);\n        puVar8 = puVar12 + 0x40;\n        for (iVar4 = 0x1f; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar12 = *puVar8;\n            puVar8 = puVar8 + 1;\n            puVar12 = puVar12 + 1;\n        }\n        *puVar12 = *puVar8;\n        *(puVar12 + 2) = *(puVar8 + 2);\n        piVar2 = var_34h[0x23];\n        if (piVar2 != NULL) {\n            LOCK();\n            iVar4 = *piVar2;\n            *piVar2 = iVar4 + -1;\n            if (iVar4 + -1 == 0) {\n                fcn.004042f5(var_34h[0x24] + -0xfe);\n                fcn.004042f5(puVar6[0x25] + -0x80);\n                fcn.004042f5(puVar6[0x26] + -0x80);\n                fcn.004042f5(puVar6[0x23]);\n            }\n        }\n        *var_30h = 1;\n        puVar6[0x23] = var_30h;\n        *puVar6 = var_44h;\n        puVar6[0x24] = var_48h;\n        puVar6[0x25] = var_4ch;\n        puVar6[0x26] = var_50h;\n        puVar6[1] = var_38h;\n    }\n    fcn.004042f5(var_24h);\ncode_r0x00445da4:\n    fcn.0040241e(var_58h);\n    return;\n}\n",
        "token_count": 2721
    },
    "0040123f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040123f(uint16_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t cbMultiByte;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if ((arg_ch == NULL) || (arg_10h == 0)) {\n        *0x4775a8 = 0;\n        *0x4775ac = 0;\n    }\n    else {\n        if (*arg_ch != 0) {\n            if (*(arg_14h + 0x14) == '\\0') {\n                fcn.004024f0();\n            }\n            piVar1 = *(arg_14h + 0xc);\n            iVar2 = piVar1[2];\n            if (iVar2 == 0xfde9) {\n                iVar2 = fcn.00401483(arg_8h, arg_ch, arg_10h, 0x4775a8, arg_14h);\n                if (-1 < iVar2) {\n                    return iVar2;\n                }\n            }\n            else {\n                if (piVar1[0x2a] == 0) {\n                    if (arg_8h != NULL) {\n                        *arg_8h = *arg_ch;\n                    }\n                    return 1;\n                }\n                if (*(*piVar1 + *arg_ch * 2) < 0) {\n                    cbMultiByte = *(*(arg_14h + 0xc) + 4);\n                    if ((((1 < cbMultiByte) && (cbMultiByte <= arg_10h)) &&\n                        (iVar2 = fcn.00401726(iVar2, 9, arg_ch, cbMultiByte, arg_8h, arg_8h != NULL),  iVar2 != 0)) ||\n                       ((*(*(arg_14h + 0xc) + 4) <= arg_10h && (arg_ch[1] != 0)))) {\n                        return *(*(arg_14h + 0xc) + 4);\n                    }\n                }\n                else {\n                    iVar2 = fcn.00401726(iVar2, 9, arg_ch, 1, arg_8h, arg_8h != NULL);\n                    if (iVar2 != 0) {\n                        return 1;\n                    }\n                }\n                *(arg_14h + 0x1c) = 1;\n                *(arg_14h + 0x18) = 0x2a;\n            }\n            return -1;\n        }\n        if (arg_8h != NULL) {\n            *arg_8h = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 600
    },
    "0040128f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040128f(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    int32_t iStack20;\n    \n    iStack20 = param_1;\n    uStack28 = 0x414a20;\n    uStack32 = *in_FS_OFFSET;\n    uVar2 = *0x47502c ^ &uStack32;\n    *in_FS_OFFSET = &uStack32;\n    while( true ) {\n        uVar1 = *(param_1 + 0xc);\n        if ((uVar1 == 0xffffffff) || ((param_2 != 0xffffffff && (uVar1 <= param_2)))) break;\n        uStack24 = *(*(param_1 + 8) + uVar1 * 0xc);\n        *(param_1 + 0xc) = uStack24;\n        if (*(*(param_1 + 8) + 4 + uVar1 * 0xc) == 0) {\n            fcn.0040401b(0x101, uVar2);\n            fcn.00402b0d();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 296
    },
    "004012b7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004012b7(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 8) == '\\0') {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *(param_1 + 4) = 0;\n        *(param_1 + 8) = 1;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        return 0;\n    }\n    return *(param_1 + 4);\n}\n",
        "token_count": 117
    },
    "004012f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004012f8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    bool bVar3;\n    \n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if (iVar1 == 1) {\n        bVar3 = *(param_1 + 0x45c) == 2;\n    }\n    else {\n        if (iVar1 != 2) goto code_r0x0042f7b3;\n        bVar3 = *(param_1 + 0x45c) == 0;\n    }\n    if (bVar3) {\n        return CONCAT31(Var2, 1);\n    }\ncode_r0x0042f7b3:\n    return Var2 << 8;\n}\n",
        "token_count": 185
    },
    "00401307": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00401307(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    bool bVar3;\n    \n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if (iVar1 == 1) {\n        bVar3 = *(param_1 + 0x45c) == 2;\n    }\n    else {\n        if (iVar1 != 2) goto code_r0x0042f7e5;\n        bVar3 = *(param_1 + 0x45c) == 0;\n    }\n    if (bVar3) {\n        return CONCAT31(Var2, 1);\n    }\ncode_r0x0042f7e5:\n    return Var2 << 8;\n}\n",
        "token_count": 184
    },
    "0040132a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040132a(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00403c79(arg_ch);\n    if ((var_8h == 0) || (*(var_8h + 4) != 0x3a4)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00443a34(arg_ch, arg_8h, 0, 3);\n    }\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return uVar1;\n}\n",
        "token_count": 197
    },
    "0040134d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040134d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int16_t *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n        *(param_1 + 0x20) = *(*(param_1 + 0x10) + -4);\n    }\n    else {\n        var_4h = *(param_1 + 0xc);\n        iVar1 = fcn.0040105f(*(param_1 + 8), var_4h, &var_4h, 10, 1);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0xc) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == 0x24)) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.004028bf(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x2e), *(param_1 + 0x28));\n                return uVar3;\n            }\n            iVar1 = *(param_1 + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        *(param_1 + 0x20) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 489
    },
    "00401357": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401357(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n        uVar4 = *(*(in_ECX + 0x10) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x10) + -4);\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00401122(in_ECX + 0x464 + uVar1 * 0x10, 4, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar4 = puVar3[1];\n        *arg_8h = *puVar3;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 431
    },
    "00401366": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401366(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        iVar1 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401f23(in_ECX + 0x464 + uVar3 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        iVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 405
    },
    "0040137a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040137a(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n        uVar4 = *(*(in_ECX + 0x10) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x10) + -4);\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00404057(in_ECX + 0x464 + uVar1 * 0x10, 2, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar4 = puVar3[1];\n        *arg_8h = *puVar3;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 413
    },
    "004013f2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004013f2(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        cVar1 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028bf(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar3;\n        }\n        cVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 389
    },
    "0040143d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0040143d(int32_t param_1)\n\n{\n    return *(param_1 + 4) < '\\x02';\n}\n",
        "token_count": 35
    },
    "00401474": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.00401474(uint *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = **0x476418;\n    if (cVar1 == '\\0') {\n        fcn.004014dd(1);\n    }\n    else if ((cVar1 < '0') || ('9' < cVar1)) {\n        fcn.004015a0(&var_10h);\n        if (var_8h == '\\0') {\ncode_r0x0041063f:\n            if (**0x476418 == '\\0') {\n                puVar2 = fcn.004014dd(1);\n                uVar3 = *puVar2;\n            }\n            else {\n                uVar3 = 0;\n                var_4h = 2;\n                puVar2 = &var_8h;\n            }\n            *arg_8h = uVar3;\n            arg_8h[1] = puVar2[1];\n            return arg_8h;\n        }\n        *0x476418 = *0x476418 + 1;\n        if (arg_ch == 0x42) {\n            fcn.0040c353(arg_8h);\n        }\n        else {\n            if (arg_ch != 0x41) goto code_r0x0041063f;\n            fcn.0040c2db(arg_8h);\n        }\n    }\n    else {\n        *0x476418 = *0x476418 + 1;\n        fcn.004011c7(cVar1 + -0x2f, cVar1 + -0x2f >> 0x1f);\n    }\n    return arg_8h;\n}\n",
        "token_count": 425
    },
    "004014bf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004014bf(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        *arg_8h = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00404057(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 339
    },
    "004014dd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004014dd(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    in_ECX[1] = 0;\n    iVar1 = arg_8h;\n    if ((arg_8h != 2) && (arg_8h != 3)) {\n        iVar1 = 0;\n    }\n    *in_ECX = 0;\n    *(in_ECX + 1) = iVar1;\n    if (arg_8h == 1) {\n        iVar1 = fcn.004032e2(1);\n        *in_ECX = iVar1;\n        if (iVar1 == 0) {\n            *(in_ECX + 1) = 3;\n        }\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "0040152d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040152d(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    iVar1 = *(in_ECX + 8);\n    if (*(iVar1 + 0x14) == '\\0') {\n        fcn.004024f0();\n    }\n    puVar3 = *(in_ECX + 0x30);\n    iVar4 = 0;\n    if (0 < arg_8h) {\n        do {\n            if (*puVar3 == 0) {\n                return iVar4;\n            }\n            iVar2 = fcn.00404192(**(iVar1 + 0xc), *puVar3, 0x8000);\n            if (iVar2 != 0) {\n                puVar3 = puVar3 + 1;\n            }\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < arg_8h);\n    }\n    return iVar4;\n}\n",
        "token_count": 250
    },
    "00401541": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401541(uint32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        uVar1 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401f23(in_ECX + 0x464 + uVar3 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 394
    },
    "00401550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.00401550(uint *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint unaff_EBX;\n    int32_t iVar4;\n    uint *in_stack_ffffffc4;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x476418 == '\\0') {\n        if (*arg_ch != 0) {\n            var_18h = 0x46aeac;\n            var_14h = 2;\n            fcn.004022e3(&var_28h, 0x28, arg_ch);\n            fcn.004037d3(&var_20h, &var_18h);\n            fcn.00404223(&var_10h, 1);\n            puVar3 = &var_8h;\n            goto code_r0x0040e592;\n        }\n    }\n    else {\n        iVar1 = fcn.00402abd();\n        if ((-1 < iVar1) && (iVar1 != 0)) {\n            var_8h = 0;\n            var_4h = 0;\n            iVar4 = iVar1;\n            if ((arg_ch[1] & 0x800U) == 0) goto code_r0x0040e4b4;\n            in_stack_ffffffc4 = &var_10h;\n            var_10h = 0x46a3ec;\n            var_ch = 2;\n            fcn.00403f03(in_stack_ffffffc4);\n            while (iVar4 = iVar1,  var_4h < '\\x02') {\ncode_r0x0040e4b4:\n                iVar1 = iVar4 + -1;\n                if ((iVar4 == 0) || (**0x476418 == '\\0')) break;\n                uVar2 = fcn.004026ee(&var_10h, 0);\n                fcn.004022e3(&var_20h, 0x5b, uVar2);\n                in_stack_ffffffc4 = fcn.0040256d(&var_28h, 0x5d);\n                fcn.00402310(in_stack_ffffffc4);\n            }\n            if (*arg_ch != 0) {\n                if ((arg_ch[1] & 0x800U) == 0) {\n                    fcn.004022e3(&var_28h, 0x28, arg_ch);\n                    fcn.0040256d(&var_20h, 0x29);\n                }\n                puVar3 = fcn.0040395e(in_stack_ffffffc4, unaff_EBX);\n                var_8h = *puVar3;\n                var_4h = puVar3[1];\n            }\n            fcn.00402798(&var_18h, &var_8h);\n            *arg_8h = var_18h;\n            arg_8h[1] = var_14h | 0x800;\n            return arg_8h;\n        }\n    }\n    var_8h = 0;\n    var_4h = 0;\n    fcn.0040307b(0x5b);\n    fcn.00404223(&var_28h, 1);\n    puVar3 = &var_20h;\ncode_r0x0040e592:\n    uVar2 = fcn.0040256d(puVar3, 0x5d);\n    fcn.00403e4a(arg_8h, uVar2);\n    return arg_8h;\n}\n",
        "token_count": 852
    },
    "0040155a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040155a(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 1;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.004030f3(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 365
    },
    "0040164f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040164f(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 != 0) {\n        if (arg_8h != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(arg_8h);\n        }\n        iVar3 = fcn.004016d6();\n        if (iVar3 != 1) {\n            return 4;\n        }\n    }\n    iVar3 = fcn.004034a4();\n    if ((iVar3 == 2) && (cVar1 = fcn.004022b1(),  cVar1 != '\\0')) {\n        cVar1 = fcn.004035a8();\n        if (cVar1 == '\\0') {\n            arg_10h = arg_10h | 0x200000;\n            arg_8h_00 = 0;\n        }\n        else {\n            arg_8h_00 = fcn.00401695();\n        }\n        iVar2 = fcn.00403594(arg_8h_00, arg_8h, arg_ch, arg_10h);\n        return iVar2;\n    }\n    return (iVar2 != 0) + 3;\n}\n",
        "token_count": 323
    },
    "00401686": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401686(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint arg_8h_00;\n    \n    if ((*(in_ECX + 1) < '\\x02') && (arg_8h != 0)) {\n        arg_8h_00 = 0;\n        if (*in_ECX == 0) {\n            fcn.00401bea(arg_8h);\n        }\n        else {\n            cVar1 = *(arg_8h + 4);\n            if ((cVar1 == '\\0') || (cVar1 == '\\x01')) {\n                iVar2 = fcn.004038c8(8);\n                if (iVar2 != 0) {\n                    arg_8h_00 = fcn.00402969(arg_8h);\n                }\n                fcn.00404291(arg_8h_00);\n            }\n            else {\n                fcn.004043ef(cVar1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "004016a9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004016a9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int16_t *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n        *(param_1 + 0x24) = *(*(param_1 + 0x10) + -4);\n    }\n    else {\n        var_4h = *(param_1 + 0xc);\n        iVar1 = fcn.0040105f(*(param_1 + 8), var_4h, &var_4h, 10, 1);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0xc) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == 0x24)) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.004028bf(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x2e), *(param_1 + 0x28));\n                return uVar3;\n            }\n            iVar1 = *(param_1 + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        *(param_1 + 0x24) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 489
    },
    "004016b3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004016b3(uchar *arg_8h, int32_t arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    uint *in_ECX;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (arg_ch < 1)) {\n        *(in_ECX + 1) = 2;\n        return;\n    }\n    if (arg_ch == 1) {\n        ppcVar3 = fcn.004038c8(8);\n        if (ppcVar3 != NULL) {\n            uVar1 = *arg_8h;\n            *ppcVar3 = vtable.charNode.0;\n            *(ppcVar3 + 1) = uVar1;\n            goto code_r0x0040c287;\n        }\n    }\n    else {\n        iVar2 = fcn.004038c8(0xc);\n        if (iVar2 != 0) {\n            ppcVar3 = fcn.00403bd9(arg_8h, arg_ch);\n            goto code_r0x0040c287;\n        }\n    }\n    ppcVar3 = NULL;\ncode_r0x0040c287:\n    *in_ECX = ppcVar3;\n    if (ppcVar3 == NULL) {\n        *(in_ECX + 1) = 3;\n    }\n    return;\n}\n",
        "token_count": 313
    },
    "004016b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004016b8(uint arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h, int32_t *arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_stack_ffffff5c;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    var_88h = arg_10h;\n    *arg_18h = 0;\n    if (arg_ch == 1) {\n        iVar2 = fcn.00450968(arg_8h, arg_10h, arg_14h, &fcn.004016b8::var_84h, 0x80);\n        if (iVar2 != 0) {\n            in_stack_ffffff5c = 1;\n            iVar3 = fcn.0040375b(iVar2, 1);\n            *arg_18h = iVar3;\n            fcn.004042f5(0);\n            if (*arg_18h != 0) {\n                in_stack_ffffff5c = iVar2 + -1;\n                iVar2 = fcn.00401fe6(*arg_18h, iVar2, &fcn.004016b8::var_84h, in_stack_ffffff5c);\n                if (iVar2 != 0) {\n                    fcn.0040277f(0, 0, 0, 0, 0);\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n            goto code_r0x00450c1e;\n        }\n        in_stack_ffffff5c = 0x450b34;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if ((iVar2 != 0x7a) || (iVar2 = fcn.00450968(arg_8h, arg_10h, arg_14h, 0, 0),  iVar2 == 0))\n        goto code_r0x00450c1e;\n        iVar3 = fcn.0040375b(iVar2, 1);\n        if (iVar3 != 0) {\n            iVar2 = fcn.00450968(arg_8h, var_88h, arg_14h, iVar3, iVar2);\ncode_r0x00450b8d:\n            if (iVar2 != 0) {\n                *arg_18h = iVar3;\n                iVar3 = 0;\n            }\n        }\n    }\n    else {\n        if (arg_ch != 2) {\n            if (arg_ch == 0) {\n                in_stack_ffffff5c = 2;\n                var_88h = 0;\n                iVar2 = fcn.0040321a(arg_10h, arg_14h | 0x20000000, &fcn.004016b8::var_88h, 2);\n                if (iVar2 != 0) {\n                    *arg_18h = var_88h;\n                }\n            }\n            goto code_r0x00450c1e;\n        }\n        in_stack_ffffff5c = 0;\n        iVar2 = fcn.0040321a(arg_10h, arg_14h, 0, 0);\n        if (iVar2 == 0) goto code_r0x00450c1e;\n        iVar3 = fcn.0040375b(iVar2, 2);\n        if (iVar3 != 0) {\n            iVar2 = fcn.0040321a(var_88h, arg_14h, iVar3, iVar2);\n            goto code_r0x00450b8d;\n        }\n    }\n    fcn.004042f5(iVar3);\ncode_r0x00450c1e:\n    fcn.0040241e(in_stack_ffffff5c);\n    return;\n}\n",
        "token_count": 908
    },
    "004016d6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004016d6(void)\n\n{\n    int32_t in_FS_OFFSET;\n    int32_t iStackY20;\n    int32_t var_4h;\n    \n    if (*0x4771b0 == 0) {\n        var_4h = 2;\n        if (-1 < *(*(*(in_FS_OFFSET + 0x30) + 0x10) + 8)) {\n            fcn.00403d7d(&var_4h);\n        }\n        *0x4771b0 = 2;\n        if (var_4h != 1) {\n            if (var_4h == 2) {\n                *0x4771b0 = 1;\n            }\n            else if (var_4h == 3) {\n                iStackY20 = 3;\n                *0x4771b0 = iStackY20;\n            }\n            else {\n                iStackY20 = 4;\n                *0x4771b0 = iStackY20;\n            }\n        }\n    }\n    return *0x4771b0;\n}\n",
        "token_count": 239
    },
    "004016f9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004016f9(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if ((arg_ch._2_2_ & 0x7ff0) == 0x7ff0) {\n        iVar1 = fcn.004038aa(arg_8h, CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h)) >> 0x20);\n        if (iVar1 == 1) {\n            return 0x200;\n        }\n        if (iVar1 == 2) {\n            iVar1 = 4;\n        }\n        else {\n            if (iVar1 != 3) {\n                return 1;\n            }\n            iVar1 = 2;\n        }\n        return iVar1;\n    }\n    if (((arg_ch & 0x7ff00000) == 0) && (((arg_ch & 0xfffff) != 0 || (arg_8h != 0)))) {\n        return (-((arg_ch & 0x80000000) != 0) & 0xffffff90) + 0x80;\n    }\n    if (CONCAT26(arg_ch._2_2_, CONCAT24(arg_ch, arg_8h)) == 0.0) {\n        return (-((arg_ch & 0x80000000) != 0) & 0xffffffe0) + 0x40;\n    }\n    return (-((arg_ch & 0x80000000) != 0) & 0xffffff08) + 0x100;\n}\n",
        "token_count": 345
    },
    "00401721": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00401721(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint var_14h;\n    uint var_ch;\n    uchar *lpOutputString;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    if (arg_8h != NULL) {\n        pcVar3 = arg_8h;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        iVar2 = (pcVar3 - (arg_8h + 1)) + 1;\n        if (iVar2 != 0) {\n            fcn.0040268f();\n            lpOutputString = &var_14h;\n            iVar2 = fcn.00401c2b(&var_ch, &var_14h, iVar2, arg_8h, pcVar3 - (arg_8h + 1));\n            if (iVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(lpOutputString);\n            }\n        }\n    }\n    fcn.0040241e(var_ch);\n    return;\n}\n",
        "token_count": 317
    },
    "00401771": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar (*) [16] __cdecl fcn.00401771(uchar (*arg_8h) [16], uint arg_ch)\n\n{\n    char *pcVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uchar (*pauVar4) [16];\n    uint32_t uVar5;\n    int32_t iVar6;\n    uchar (*pauVar7) [16];\n    char *pcVar8;\n    uint8_t *puVar9;\n    uchar auVar11 [16];\n    uchar auVar13 [16];\n    char cVar16;\n    char cVar17;\n    char cVar18;\n    char cVar19;\n    char cVar20;\n    char cVar21;\n    char cVar22;\n    uchar auVar15 [16];\n    uint8_t *puVar10;\n    uint8_t uVar12;\n    uint8_t uVar14;\n    \n    if (*0x4763a8 != 0) {\n        if (*0x4763a8 < 2) {\n            auVar15 = pshuflw(ZEXT216(CONCAT11(arg_ch, arg_ch)), ZEXT216(CONCAT11(arg_ch, arg_ch)), 0);\n            uVar3 = -1 << (arg_8h & 0xf);\n            pcVar8 = arg_8h - (arg_8h & 0xf);\n            pauVar7 = NULL;\n            while( true ) {\n                uVar14 = -(pcVar8[0xf] == '\\0');\n                auVar13 = CONCAT115(uVar14, CONCAT114(-(pcVar8[0xe] == '\\0'), \n                                                      CONCAT113(-(pcVar8[0xd] == '\\0'), \n                                                                CONCAT112(-(pcVar8[0xc] == '\\0'), \n                                                                          CONCAT111(-(pcVar8[0xb] == '\\0'), \n                                                                                    CONCAT110(-(pcVar8[10] == '\\0'), \n                                                                                              CONCAT19(-(pcVar8[9] ==\n                                                                                                        '\\0'), CONCAT18(\n                                                            -(pcVar8[8] == '\\0'), \n                                                            CONCAT17(-(pcVar8[7] == '\\0'), \n                                                                     CONCAT16(-(pcVar8[6] == '\\0'), \n                                                                              CONCAT15(-(pcVar8[5] == '\\0'), \n                                                                                       CONCAT14(-(pcVar8[4] == '\\0'), \n                                                                                                CONCAT13(-(pcVar8[3] ==\n                                                                                                          '\\0'), \n                                                            CONCAT12(-(pcVar8[2] == '\\0'), \n                                                                     CONCAT11(-(pcVar8[1] == '\\0'), -(*pcVar8 == '\\0')))\n                                                            )))))))))))));\n                cVar16 = SUB161(auVar15 >> 8, 0);\n                cVar17 = SUB161(auVar15 >> 0x10, 0);\n                cVar18 = SUB161(auVar15 >> 0x18, 0);\n                cVar19 = SUB161(auVar15 >> 0x20, 0);\n                cVar20 = SUB161(auVar15 >> 0x28, 0);\n                cVar21 = SUB161(auVar15 >> 0x30, 0);\n                cVar22 = SUB161(auVar15 >> 0x38, 0);\n                uVar12 = -(pcVar8[0xf] == cVar22);\n                auVar11 = CONCAT115(uVar12, CONCAT114(-(pcVar8[0xe] == cVar21), \n                                                      CONCAT113(-(pcVar8[0xd] == cVar20), \n                                                                CONCAT112(-(pcVar8[0xc] == cVar19), \n                                                                          CONCAT111(-(pcVar8[0xb] == cVar18), \n                                                                                    CONCAT110(-(pcVar8[10] == cVar17), \n                                                                                              CONCAT19(-(pcVar8[9] ==\n                                                                                                        cVar16), \n                                                                                                       CONCAT18(-(pcVar8\n                                                            [8] == SUB161(auVar15, 0)), \n                                                            CONCAT17(-(pcVar8[7] == cVar22), \n                                                                     CONCAT16(-(pcVar8[6] == cVar21), \n                                                                              CONCAT15(-(pcVar8[5] == cVar20), \n                                                                                       CONCAT14(-(pcVar8[4] == cVar19), \n                                                                                                CONCAT13(-(pcVar8[3] ==\n                                                                                                          cVar18), \n                                                                                                         CONCAT12(-(\n                                                            pcVar8[2] == cVar17), \n                                                            CONCAT11(-(pcVar8[1] == cVar16), \n                                                                     -(*pcVar8 == SUB161(auVar15, 0)))))))))))))))));\n                uVar5 = (SUB161(auVar13 >> 7, 0) & 1 | (SUB161(auVar13 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar13 >> 0x17, 0) & 1) << 2 | (SUB161(auVar13 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar13 >> 0x27, 0) & 1) << 4 | (SUB161(auVar13 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar13 >> 0x37, 0) & 1) << 6 | (SUB161(auVar13 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar13 >> 0x47, 0) & 1) << 8 | (SUB161(auVar13 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar13 >> 0x57, 0) & 1) << 10 | (SUB161(auVar13 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar13 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar13 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar13 >> 0x77, 0) & 1) << 0xe | (uVar14 >> 7) << 0xf) & uVar3;\n                if (uVar5 != 0) break;\n                uVar3 = (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf) & uVar3;\n                iVar6 = 0x1f;\n                if (uVar3 != 0) {\n                    for (; uVar3 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                    }\n                }\n                if (uVar3 != 0) {\n                    pauVar7 = pcVar8 + iVar6;\n                }\n                uVar3 = 0xffffffff;\n                pcVar8 = pcVar8 + 0x10;\n            }\n            uVar3 = (uVar5 * 2 & uVar5 * -2) - 1 &\n                    (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf) & uVar3;\n            iVar6 = 0x1f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                }\n            }\n            pauVar4 = pcVar8 + iVar6;\n            if (uVar3 == 0) {\n                pauVar4 = pauVar7;\n            }\n            return pauVar4;\n        }\n        uVar3 = arg_ch;\n        if (uVar3 == 0) {\n            pcVar8 = arg_8h & 0xfffffff0;\n            auVar15 = CONCAT115(-(pcVar8[0xf] == '\\0'), \n                                CONCAT114(-(pcVar8[0xe] == '\\0'), \n                                          CONCAT113(-(pcVar8[0xd] == '\\0'), \n                                                    CONCAT112(-(pcVar8[0xc] == '\\0'), \n                                                              CONCAT111(-(pcVar8[0xb] == '\\0'), \n                                                                        CONCAT110(-(pcVar8[10] == '\\0'), \n                                                                                  CONCAT19(-(pcVar8[9] == '\\0'), \n                                                                                           CONCAT18(-(pcVar8[8] == '\\0')\n                                                                                                    , CONCAT17(-(pcVar8[\n                                                            7] == '\\0'), \n                                                            CONCAT16(-(pcVar8[6] == '\\0'), \n                                                                     CONCAT15(-(pcVar8[5] == '\\0'), \n                                                                              CONCAT14(-(pcVar8[4] == '\\0'), \n                                                                                       CONCAT13(-(pcVar8[3] == '\\0'), \n                                                                                                CONCAT12(-(pcVar8[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(pcVar8[1] == '\\0'), -(*pcVar8 == '\\0'))))))))))))\n                                                            ))));\n            uVar3 = (SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar15 >> 0x47, 0) & 1) << 8 | (SUB161(auVar15 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar15 >> 0x57, 0) & 1) << 10 | (SUB161(auVar15 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar15 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar15 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar15 >> 0x77, 0) & 1) << 0xe | (-(pcVar8[0xf] == '\\0') >> 7) << 0xf) &\n                    -1 << (arg_8h & 0xf);\n            while (uVar3 == 0) {\n                pcVar1 = pcVar8 + 0x1f;\n                auVar15 = CONCAT115(-(*pcVar1 == '\\0'), \n                                    CONCAT114(-(pcVar8[0x1e] == '\\0'), \n                                              CONCAT113(-(pcVar8[0x1d] == '\\0'), \n                                                        CONCAT112(-(pcVar8[0x1c] == '\\0'), \n                                                                  CONCAT111(-(pcVar8[0x1b] == '\\0'), \n                                                                            CONCAT110(-(pcVar8[0x1a] == '\\0'), \n                                                                                      CONCAT19(-(pcVar8[0x19] == '\\0'), \n                                                                                               CONCAT18(-(pcVar8[0x18]\n                                                                                                         == '\\0'), \n                                                                                                        CONCAT17(-(\n                                                            pcVar8[0x17] == '\\0'), \n                                                            CONCAT16(-(pcVar8[0x16] == '\\0'), \n                                                                     CONCAT15(-(pcVar8[0x15] == '\\0'), \n                                                                              CONCAT14(-(pcVar8[0x14] == '\\0'), \n                                                                                       CONCAT13(-(pcVar8[0x13] == '\\0')\n                                                                                                , CONCAT12(-(pcVar8[0x12\n                                                            ] == '\\0'), \n                                                            CONCAT11(-(pcVar8[0x11] == '\\0'), -(pcVar8[0x10] == '\\0'))))\n                                                            ))))))))))));\n                pcVar8 = pcVar8 + 0x10;\n                uVar3 = SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar15 >> 0x47, 0) & 1) << 8 | (SUB161(auVar15 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar15 >> 0x57, 0) & 1) << 10 | (SUB161(auVar15 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar15 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar15 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar15 >> 0x77, 0) & 1) << 0xe | (-(*pcVar1 == '\\0') >> 7) << 0xf;\n            }\n            iVar6 = 0;\n            if (uVar3 != 0) {\n                for (; (uVar3 >> iVar6 & 1) == 0; iVar6 = iVar6 + 1) {\n                }\n            }\n            pauVar7 = pcVar8 + iVar6;\n        }\n        else {\n            pauVar7 = NULL;\n            uVar5 = arg_8h & 0xf;\n            while (uVar5 != 0) {\n                if ((*arg_8h)[0] == uVar3) {\n                    pauVar7 = arg_8h;\n                }\n                if ((*arg_8h)[0] == 0) {\n                    return pauVar7;\n                }\n                arg_8h = *arg_8h + 1;\n                uVar5 = arg_8h & 0xf;\n            }\n            do {\n                pauVar4 = arg_8h[1];\n                iVar6 = pcmpistri(ZEXT416(uVar3), *arg_8h, 0x40);\n                if (0xffffffef < arg_8h) {\n                    pauVar7 = pauVar4[-1] + iVar6;\n                }\n                arg_8h = pauVar4;\n            } while (pauVar4 != NULL);\n        }\n        return pauVar7;\n    }\n    iVar6 = -1;\n    do {\n        pauVar7 = arg_8h;\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        pauVar7 = *arg_8h + 1;\n        puVar2 = *arg_8h;\n        arg_8h = pauVar7;\n    } while (*puVar2 != '\\0');\n    iVar6 = -(iVar6 + 1);\n    puVar10 = pauVar7[-1] + 0xf;\n    do {\n        puVar9 = puVar10;\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        puVar9 = puVar10 + -1;\n        uVar12 = *puVar10;\n        puVar10 = puVar9;\n    } while (arg_ch != uVar12);\n    pauVar7 = puVar9 + 1;\n    if ((*pauVar7)[0] != arg_ch) {\n        pauVar7 = NULL;\n    }\n    return pauVar7;\n}\n",
        "token_count": 4343
    },
    "00401785": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401785(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 2;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.0040105f(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 364
    },
    "0040178f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040178f(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        cVar1 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401122(in_ECX + 0x464 + uVar3 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        cVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 408
    },
    "00401794": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401794(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        *arg_8h = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401122(in_ECX + 0x464 + uVar1 * 0x10, 3, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 358
    },
    "0040179e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040179e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n        *(param_1 + 0x24) = *(*(param_1 + 0x10) + -4);\n    }\n    else {\n        var_4h = *(param_1 + 0xc);\n        iVar1 = fcn.004030f3(*(param_1 + 8), var_4h, &var_4h, 10, 1);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0xc) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == '$')) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.00401f23(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x2d), *(param_1 + 0x28));\n                return uVar3;\n            }\n            iVar1 = *(param_1 + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        *(param_1 + 0x24) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 485
    },
    "00401811": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401811(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n        *(param_1 + 0x20) = *(*(param_1 + 0x10) + -4);\n    }\n    else {\n        var_4h = *(param_1 + 0xc);\n        iVar1 = fcn.004030f3(*(param_1 + 8), var_4h, &var_4h, 10, 1);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0xc) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == '$')) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.00401122(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x2d), *(param_1 + 0x28));\n                return uVar3;\n            }\n            iVar1 = *(param_1 + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        *(param_1 + 0x20) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 483
    },
    "00401834": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401834(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    \n    piVar4 = in_EAX & 0xffffff00;\n    if ((*(param_1 + 6) != '\\0') && (*(param_1 + 6) != '\\a')) {\n        iVar1 = param_1[2];\n        *(iVar1 + 0x1c) = 1;\n        *(iVar1 + 0x18) = 0x16;\n        uVar3 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n        return uVar3 & 0xffffff00;\n    }\n    if ((param_1[0x117] == 2) && (param_1[0x116] == 1)) {\n        iVar1 = param_1[0x2a9];\n        piVar4 = param_1 + iVar1 * 4 + 4;\n        if (param_1 != piVar4) {\n            iVar5 = param_1[4];\n            piVar6 = param_1 + 0x119;\n            do {\n                iVar2 = *piVar6;\n                piVar6[2] = iVar5;\n                if (iVar2 == 1) {\ncode_r0x0043b986:\n                    param_1[4] = param_1[4] + 4;\n                }\n                else {\n                    if (iVar2 != 2) {\n                        if (iVar2 == 3) goto code_r0x0043b986;\n                        if (iVar2 != 4) {\n                            iVar1 = param_1[2];\n                            *(iVar1 + 0x1c) = 1;\n                            *(iVar1 + 0x18) = 0x16;\n                            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n                            return uVar3 & 0xffffff00;\n                        }\n                    }\n                    param_1[4] = param_1[4] + 8;\n                }\n                iVar5 = param_1[4];\n                piVar4 = param_1 + iVar1 * 4 + 0x119;\n                bVar7 = piVar6 != piVar4;\n                piVar6 = piVar6 + 4;\n            } while (bVar7);\n        }\n    }\n    return CONCAT31(piVar4 >> 8, 1);\n}\n",
        "token_count": 606
    },
    "00401848": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401848(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if (*0x476fe0 != 0) {\n        iVar2 = fcn.0040402f(arg_8h, arg_ch, arg_10h, 0);\n        return iVar2;\n    }\n    if ((arg_8h != NULL) && (arg_ch != NULL)) {\n        if (arg_10h != 0) {\n            do {\n                uVar3 = *arg_8h;\n                arg_8h = arg_8h + 1;\n                if (uVar3 - 0x41 < 0x1a) {\n                    uVar3 = uVar3 + 0x20;\n                }\n                uVar4 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                if (uVar4 - 0x41 < 0x1a) {\n                    uVar4 = uVar4 + 0x20;\n                }\n            } while (((uVar3 - uVar4 == 0) && (uVar3 != 0)) && (arg_10h = arg_10h + -1,  arg_10h != 0));\n            return uVar3 - uVar4;\n        }\n        return 0;\n    }\n    puVar1 = fcn.004029b9();\n    *puVar1 = 0x16;\n    fcn.00402842();\n    return 0x7fffffff;\n}\n",
        "token_count": 370
    },
    "00401852": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00401852(uint arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t unaff_EBP;\n    uint32_t uVar8;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    uint arg_ch;\n    \n    arg_ch = 0x28;\n    fcn.00402450();\n    *0x476430 = *0x476430 + 1;\n    *(unaff_EBP + -4) = 0;\n    if ((*0x476420 & 0x2000) == 0) {\n        if (**0x476418 != '?') {\n            if (**0x476418 == '\\0') {\n                var_4h = 1;\n            }\n            else {\ncode_r0x0040fcf4:\n                var_4h = 2;\n            }\n            fcn.004014dd(var_4h);\n            goto code_r0x0040fd49;\n        }\n        pcVar1 = *0x476418 + 1;\n        if ((*pcVar1 != '?') || ((*0x476418)[2] != '?')) {\n            *0x476418 = pcVar1;\n            fcn.004012c6(unaff_EBP + -0x18);\n            iVar5 = *(unaff_EBP + -0x18);\n            uVar7 = *(unaff_EBP + -0x14);\n            if ((iVar5 == 0) || ((uVar7 & 0x200) == 0)) {\n                *(unaff_EBP + -0x10) = 0;\n            }\n            else {\n                *(unaff_EBP + -0x10) = 1;\n            }\n            uVar8 = uVar7 >> 0xf;\n            if (uVar7 < '\\x02') {\n                if ((**0x476418 != '\\0') && (**0x476418 != '@')) {\n                    fcn.004029f0(unaff_EBP + -0x28);\n                    if (*(unaff_EBP + -0x28) != 0) {\n                        if (*0x476424 == '\\0') {\n                            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x28);\n                            *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x24);\n                            *(unaff_EBP + -0x30) = 0x46aa08;\n                            *(unaff_EBP + -0x2c) = 2;\n                            fcn.00403f03(unaff_EBP + -0x30);\n                            iVar5 = unaff_EBP + -0x28;\n                        }\n                        else {\n                            *0x476424 = '\\0';\n                            *(unaff_EBP + -0x20) = iVar5;\n                            *(unaff_EBP + -0x1c) = uVar7;\n                            fcn.00402310(unaff_EBP + -0x28);\n                            pcVar1 = *0x476418;\n                            iVar5 = *(unaff_EBP + -0x20);\n                            uVar7 = *(unaff_EBP + -0x1c);\n                            *(unaff_EBP + -0x18) = iVar5;\n                            cVar2 = *pcVar1;\n                            *(unaff_EBP + -0x14) = uVar7;\n                            if (cVar2 == '@') goto code_r0x0040fcae;\n                            puVar4 = fcn.004029f0(unaff_EBP + -0x30);\n                            *(unaff_EBP + -0x28) = 0x46aa08;\n                            *(unaff_EBP + -0x24) = 2;\n                            uVar3 = *puVar4;\n                            *(unaff_EBP + -0x1c) = puVar4[1];\n                            *(unaff_EBP + -0x20) = uVar3;\n                            fcn.00403f03(unaff_EBP + -0x28);\n                            iVar5 = unaff_EBP + -0x30;\n                        }\n                        piVar6 = fcn.0040395e(iVar5, arg_ch);\n                        uVar7 = piVar6[1];\n                        iVar5 = *piVar6;\n                        *(unaff_EBP + -0x14) = uVar7;\n                        *(unaff_EBP + -0x18) = iVar5;\n                    }\n                }\ncode_r0x0040fcae:\n                if ((*(unaff_EBP + -0x10) != 0) && (iVar5 != 0)) {\n                    uVar7 = uVar7 | 0x200;\n                    *(unaff_EBP + -0x14) = uVar7;\n                }\n                if ((uVar8 & 1) != 0) {\n                    uVar7 = uVar7 | 0x8000;\n                    *(unaff_EBP + -0x14) = uVar7;\n                }\n                if ((iVar5 != 0) && ((uVar7 & 0x1000) == 0)) {\n                    if (**0x476418 != '\\0') {\n                        if (**0x476418 != '@') goto code_r0x0040fcf4;\n                        *0x476418 = *0x476418 + 1;\n                    }\n                    if ((((*0x476420 & 0x1000) == 0) || (*(unaff_EBP + -0x10) != 0)) || ((uVar7 & 0x8000) != 0)) {\n                        fcn.00402496(*(unaff_EBP + 8), unaff_EBP + -0x18);\n                        goto code_r0x0040fd49;\n                    }\n                    *(unaff_EBP + -0x30) = 0;\n                    *(unaff_EBP + -0x2c) = 0;\n                    fcn.00402496(unaff_EBP + -0x28, unaff_EBP + -0x30);\n                }\n            }\n            piVar6 = *(unaff_EBP + 8);\n            *piVar6 = iVar5;\n            piVar6[1] = uVar7;\n            goto code_r0x0040fd49;\n        }\n        *0x476418 = pcVar1;\n        fcn.00401852(unaff_EBP + -0x28);\n        for (; **0x476418 != '\\0'; *0x476418 = *0x476418 + 1) {\n        }\n    }\n    else {\n        *0x476420 = *0x476420 & 0xffffdfff;\n        fcn.004034f4(unaff_EBP + -0x28, 0);\n        *0x476420 = *0x476420 | 0x2000;\n    }\n    puVar4 = *(unaff_EBP + 8);\n    *puVar4 = *(unaff_EBP + -0x28);\n    puVar4[1] = *(unaff_EBP + -0x24);\ncode_r0x0040fd49:\n    *0x476430 = *0x476430 + -1;\n    fcn.004010c8();\n    return;\n}\n",
        "token_count": 1694
    },
    "004018ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004018ac(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        uVar3 = *(*(in_ECX + 0x10) + -4);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00404057(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar3;\n        }\n        uVar3 = **(in_ECX + 0x46c + uVar1 * 0x10);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 381
    },
    "004018b1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004018b1(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    bool bVar3;\n    \n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if (iVar1 == 1) {\n        bVar3 = *(param_1 + 0x45c) == 2;\n    }\n    else {\n        if (iVar1 != 2) goto code_r0x0042f74f;\n        bVar3 = *(param_1 + 0x45c) == 0;\n    }\n    if (bVar3) {\n        return CONCAT31(Var2, 1);\n    }\ncode_r0x0042f74f:\n    return Var2 << 8;\n}\n",
        "token_count": 183
    },
    "00401960": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00401960(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    char cVar3;\n    uint32_t in_EAX;\n    uint32_t arg_10h_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    char cVar6;\n    char cVar7;\n    uint var_1h;\n    \n    uVar1 = *(arg_8h + 1);\n    arg_10h_00 = in_EAX & 0xffffff00 | uVar1;\n    cVar2 = arg_10h;\n    if ((uVar1 == 0x70) || (cVar2 == 'p')) {\n        return (uVar1 == 0x70) != (cVar2 != 'p');\n    }\n    cVar3 = '\\0';\n    if ((uVar1 == 0x73) || (var_1h._0_1_ = '\\0',  uVar1 == 0x53)) {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((cVar2 == 's') || (cVar7 = cVar3,  cVar2 == 'S')) {\n        cVar7 = '\\x01';\n    }\n    if ((uVar1 == 99) || (cVar6 = cVar3,  uVar1 == 0x43)) {\n        cVar6 = '\\x01';\n    }\n    if ((cVar2 == 'c') || (cVar2 == 'C')) {\n        cVar3 = '\\x01';\n    }\n    if (var_1h == '\\0') {\n        if (cVar7 != '\\0') {\n            return false;\n        }\n        if (cVar6 == '\\0') {\n            if (cVar3 != '\\0') {\n                return false;\n            }\n            cVar2 = fcn.00403cb0(arg_10h_00);\n            cVar3 = fcn.00403cb0(arg_10h);\n            if (cVar2 == '\\0') {\n                if (cVar3 != '\\0') {\n                    return false;\n                }\n                return *arg_8h == arg_ch;\n            }\n            if (cVar2 != cVar3) {\n                return false;\n            }\n            if ((arg_8h[3] == 9) != (arg_14h == 9)) {\n                return false;\n            }\n            iVar4 = fcn.00401e3d(arg_8h[3]);\n            iVar5 = fcn.00401e3d(arg_14h);\n            return iVar4 == iVar5;\n        }\n    }\n    else if (var_1h != cVar7) {\n        return false;\n    }\n    if (cVar6 == cVar3) {\n        cVar2 = fcn.00403215(*in_ECX, in_ECX[1], arg_10h_00, arg_8h[3]);\n        cVar3 = fcn.00403215(*in_ECX, in_ECX[1], arg_10h, arg_14h);\n        if (cVar2 == cVar3) {\n            return true;\n        }\n    }\n    return false;\n}\n",
        "token_count": 768
    },
    "00401988": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t * fcn.00401988(uint32_t *param_1, char param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    uchar auVar8 [16];\n    char cVar10;\n    char cVar11;\n    char cVar12;\n    char cVar13;\n    char cVar14;\n    char cVar15;\n    char cVar16;\n    uchar auVar9 [16];\n    \n    if (*0x4763a8 != 0) {\n        auVar9 = pshuflw(ZEXT216(CONCAT11(param_2, param_2)), ZEXT216(CONCAT11(param_2, param_2)), 0);\n        uVar3 = -1 << (param_1 & 0xf);\n        pcVar7 = param_1 - (param_1 & 0xf);\n        while( true ) {\n            cVar2 = SUB161(auVar9, 0);\n            cVar10 = SUB161(auVar9 >> 8, 0);\n            cVar11 = SUB161(auVar9 >> 0x10, 0);\n            cVar12 = SUB161(auVar9 >> 0x18, 0);\n            cVar13 = SUB161(auVar9 >> 0x20, 0);\n            cVar14 = SUB161(auVar9 >> 0x28, 0);\n            cVar15 = SUB161(auVar9 >> 0x30, 0);\n            cVar16 = SUB161(auVar9 >> 0x38, 0);\n            auVar8 = CONCAT115(-(pcVar7[0xf] == '\\0'), \n                               CONCAT114(-(pcVar7[0xe] == '\\0'), \n                                         CONCAT113(-(pcVar7[0xd] == '\\0'), \n                                                   CONCAT112(-(pcVar7[0xc] == '\\0'), \n                                                             CONCAT111(-(pcVar7[0xb] == '\\0'), \n                                                                       CONCAT110(-(pcVar7[10] == '\\0'), \n                                                                                 CONCAT19(-(pcVar7[9] == '\\0'), \n                                                                                          CONCAT18(-(pcVar7[8] == '\\0')\n                                                                                                   , CONCAT17(-(pcVar7[7\n                                                            ] == '\\0'), \n                                                            CONCAT16(-(pcVar7[6] == '\\0'), \n                                                                     CONCAT15(-(pcVar7[5] == '\\0'), \n                                                                              CONCAT14(-(pcVar7[4] == '\\0'), \n                                                                                       CONCAT13(-(pcVar7[3] == '\\0'), \n                                                                                                CONCAT12(-(pcVar7[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(pcVar7[1] == '\\0'), -(*pcVar7 == '\\0'))))))))))))\n                                                            )))) |\n                     CONCAT115(-(pcVar7[0xf] == cVar16), \n                               CONCAT114(-(pcVar7[0xe] == cVar15), \n                                         CONCAT113(-(pcVar7[0xd] == cVar14), \n                                                   CONCAT112(-(pcVar7[0xc] == cVar13), \n                                                             CONCAT111(-(pcVar7[0xb] == cVar12), \n                                                                       CONCAT110(-(pcVar7[10] == cVar11), \n                                                                                 CONCAT19(-(pcVar7[9] == cVar10), \n                                                                                          CONCAT18(-(pcVar7[8] == cVar2)\n                                                                                                   , CONCAT17(-(pcVar7[7\n                                                            ] == cVar16), \n                                                            CONCAT16(-(pcVar7[6] == cVar15), \n                                                                     CONCAT15(-(pcVar7[5] == cVar14), \n                                                                              CONCAT14(-(pcVar7[4] == cVar13), \n                                                                                       CONCAT13(-(pcVar7[3] == cVar12), \n                                                                                                CONCAT12(-(pcVar7[2] ==\n                                                                                                          cVar11), \n                                                                                                         CONCAT11(-(\n                                                            pcVar7[1] == cVar10), -(*pcVar7 == cVar2))))))))))))))));\n            uVar3 = (SUB161(auVar8 >> 7, 0) & 1 | (SUB161(auVar8 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar8 >> 0x17, 0) & 1) << 2 | (SUB161(auVar8 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar8 >> 0x27, 0) & 1) << 4 | (SUB161(auVar8 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar8 >> 0x37, 0) & 1) << 6 | (SUB161(auVar8 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar8 >> 0x47, 0) & 1) << 8 | (SUB161(auVar8 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar8 >> 0x57, 0) & 1) << 10 | (SUB161(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar8 >> 0x77, 0) & 1) << 0xe | SUB161(auVar8 >> 0x7f, 0) << 0xf) & uVar3;\n            if (uVar3 != 0) break;\n            uVar3 = 0xffffffff;\n            pcVar7 = pcVar7 + 0x10;\n        }\n        iVar1 = 0;\n        if (uVar3 != 0) {\n            for (; (uVar3 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        puVar4 = pcVar7 + iVar1;\n        if (cVar2 != *puVar4) {\n            puVar4 = NULL;\n        }\n        return puVar4;\n    }\n    uVar3 = param_1 & 3;\n    while (uVar3 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar3 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar3 = *param_1;\n            uVar6 = uVar3 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar5 = uVar3 ^ 0xffffffff ^ uVar3 + 0x7efefeff;\n            puVar4 = param_1 + 1;\n            if (((uVar6 ^ 0xffffffff ^ uVar6 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar4;\n            if ((uVar5 & 0x81010100) != 0) {\n                if ((uVar5 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar3 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar3 = *param_1;\n        if (uVar3 == param_2) {\n            return param_1;\n        }\n        if (uVar3 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar3 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar3 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar3 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar4;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 1964
    },
    "004019b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004019b0(int32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    *0x47759c = *0x47759c + 1;\n    iVar4 = 0x1000;\n    iVar2 = fcn.0040375b(0x1000, 1);\n    arg_8h[1] = iVar2;\n    fcn.004042f5(0);\n    puVar1 = arg_8h + 3;\n    if (arg_8h[1] == 0) {\n        LOCK();\n        *puVar1 = *puVar1 | 0x400;\n        piVar3 = arg_8h + 5;\n        arg_8h[1] = piVar3;\n        iVar4 = 2;\n    }\n    else {\n        LOCK();\n        *puVar1 = *puVar1 | 0x40;\n        piVar3 = arg_8h[1];\n    }\n    arg_8h[6] = iVar4;\n    arg_8h[2] = 0;\n    *arg_8h = piVar3;\n    return;\n}\n",
        "token_count": 282
    },
    "004019f6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004019f6(ushort *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        *arg_8h = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401122(in_ECX + 0x464 + uVar1 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 360
    },
    "00401b40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401b40(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    \n    *(in_ECX + 5) = 0;\n    *in_ECX = 0;\n    *(in_ECX + 2) = 0;\n    *(in_ECX + 7) = 0;\n    *(in_ECX + 9) = 0;\n    uVar2 = *0x4757e8;\n    uVar1 = *0x4757e4;\n    if (arg_8h != NULL) {\n        uVar1 = arg_8h[1];\n        in_ECX[3] = *arg_8h;\n        *(in_ECX + 5) = 1;\n        in_ECX[4] = uVar1;\n        return;\n    }\n    if (*0x476fe0 == 0) {\n        *(in_ECX + 5) = 1;\n        in_ECX[4] = uVar2;\n        in_ECX[3] = uVar1;\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "00401b7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401b7c(char *arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h_00;\n    uint arg_8h_01;\n    int32_t *piVar2;\n    \n    if (arg_8h == NULL) {\n        fcn.00402509();\n        *(arg_ch + 8) = 0;\n        *(arg_ch + 0xc) = 0;\n    }\n    else {\n        if (*arg_8h != '\\0') {\n            arg_8h_00 = fcn.00401726(arg_14h, 9, arg_8h, 0xffffffff, 0, 0);\n            if (arg_8h_00 != 0) {\n                if ((*(arg_ch + 0xc) <= arg_8h_00 && arg_8h_00 != *(arg_ch + 0xc)) &&\n                   (iVar1 = fcn.00402b7b(arg_8h_00),  iVar1 != 0)) {\n                    return iVar1;\n                }\n                iVar1 = fcn.00401726(arg_14h, 9, arg_8h, 0xffffffff, *(arg_ch + 8), *(arg_ch + 0xc));\n                if (iVar1 != 0) {\n                    *(arg_ch + 0x10) = iVar1 + -1;\n                    return 0;\n                }\n            }\n            arg_8h_01 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.00403459(arg_8h_01);\n            piVar2 = fcn.004029b9();\n            return *piVar2;\n        }\n        if ((*(arg_ch + 0xc) == 0) && (iVar1 = fcn.00402b7b(1),  iVar1 != 0)) {\n            return iVar1;\n        }\n        **(arg_ch + 8) = 0;\n    }\n    *(arg_ch + 0x10) = 0;\n    return 0;\n}\n",
        "token_count": 473
    },
    "00401bea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401bea(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if (arg_8h != 0) {\n        iVar1 = fcn.004038c8(8);\n        if (iVar1 == 0) {\n            *in_ECX = 0;\n        }\n        else {\n            iVar1 = fcn.00402969(arg_8h);\n            *in_ECX = iVar1;\n            if (iVar1 != 0) {\n                return;\n            }\n        }\n    }\n    *(in_ECX + 1) = 3;\n    return;\n}\n",
        "token_count": 167
    },
    "00401c21": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00401c21(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    \n    *(param_1 + 0x458) = *(param_1 + 0x458) + 1;\n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if ((iVar1 != 3) && ((iVar1 != 2 || (*(param_1 + 0x45c) != 1)))) {\n        *(param_1 + 0xaa4) = 0xffffffff;\n        *(param_1 + 0xaa8) = 0xffffffff;\n        *(param_1 + 0x45c) = 0;\n        *(param_1 + 0x20) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0xc) = *(param_1 + 0x460);\n        return CONCAT31(Var2, 1);\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 240
    },
    "00401c3f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401c3f(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        *arg_8h = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401f23(in_ECX + 0x464 + uVar1 * 0x10, 3, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 361
    },
    "00401cb2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00401cb2(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *dwErrCode;\n    \n    if (*param_1 == 0) {\n        dwErrCode = param_1;\n        dwErrCode = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (*(param_1 + 2) == '\\0') {\n            param_1[1] = 0;\n            iVar2 = 0;\n            *(param_1 + 2) = 1;\n        }\n        else {\n            iVar2 = param_1[1];\n        }\n        iVar2 = fcn.004013b6(&dwErrCode, iVar2);\n        *param_1 = iVar2;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(dwErrCode);\n        if (iVar2 == 0) {\n            fcn.00403693();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n    }\n    return *param_1;\n}\n",
        "token_count": 243
    },
    "00401cda": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00401cda(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    char cVar3;\n    uint32_t in_EAX;\n    uint32_t arg_10h_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    char cVar6;\n    char cVar7;\n    uint var_1h;\n    \n    uVar1 = *(arg_8h + 1);\n    arg_10h_00 = in_EAX & 0xffffff00 | uVar1;\n    cVar2 = arg_10h;\n    if ((uVar1 == 0x70) || (cVar2 == 'p')) {\n        return (uVar1 == 0x70) != (cVar2 != 'p');\n    }\n    cVar3 = '\\0';\n    if ((uVar1 == 0x73) || (var_1h._0_1_ = '\\0',  uVar1 == 0x53)) {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((cVar2 == 's') || (cVar7 = cVar3,  cVar2 == 'S')) {\n        cVar7 = '\\x01';\n    }\n    if ((uVar1 == 99) || (cVar6 = cVar3,  uVar1 == 0x43)) {\n        cVar6 = '\\x01';\n    }\n    if ((cVar2 == 'c') || (cVar2 == 'C')) {\n        cVar3 = '\\x01';\n    }\n    if (var_1h == '\\0') {\n        if (cVar7 != '\\0') {\n            return false;\n        }\n        if (cVar6 == '\\0') {\n            if (cVar3 != '\\0') {\n                return false;\n            }\n            cVar2 = fcn.00403111(arg_10h_00);\n            cVar3 = fcn.00403111(arg_10h);\n            if (cVar2 == '\\0') {\n                if (cVar3 != '\\0') {\n                    return false;\n                }\n                return *arg_8h == arg_ch;\n            }\n            if (cVar2 != cVar3) {\n                return false;\n            }\n            if ((arg_8h[3] == 9) != (arg_14h == 9)) {\n                return false;\n            }\n            iVar4 = fcn.00401e3d(arg_8h[3]);\n            iVar5 = fcn.00401e3d(arg_14h);\n            return iVar4 == iVar5;\n        }\n    }\n    else if (var_1h != cVar7) {\n        return false;\n    }\n    if (cVar6 == cVar3) {\n        cVar2 = fcn.00403215(*in_ECX, in_ECX[1], arg_10h_00, arg_8h[3]);\n        cVar3 = fcn.00403215(*in_ECX, in_ECX[1], arg_10h, arg_14h);\n        if (cVar2 == cVar3) {\n            return true;\n        }\n    }\n    return false;\n}\n",
        "token_count": 767
    },
    "00401d07": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401d07(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    iVar1 = *(in_ECX + 8);\n    if (*(iVar1 + 0x14) == '\\0') {\n        fcn.004024f0();\n    }\n    puVar3 = *(in_ECX + 0x30);\n    iVar4 = 0;\n    if (0 < arg_8h) {\n        do {\n            if (*puVar3 == 0) {\n                return iVar4;\n            }\n            iVar2 = fcn.00404192(**(iVar1 + 0xc), *puVar3, 0x8000);\n            if (iVar2 != 0) {\n                puVar3 = puVar3 + 1;\n            }\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < arg_8h);\n    }\n    return iVar4;\n}\n",
        "token_count": 250
    },
    "00401d57": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401d57(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if (*param_1 == 0) {\n        puVar1 = fcn.004029b9();\n        *puVar1 = 0x16;\n        fcn.00402842();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 84
    },
    "00408392": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00408392(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    \n    fcn.00403e4f();\n    iVar3 = 0;\n    iVar4 = 0;\n    fcn.004014d8(0xc);\n    fcn.004038d2(0);\n    while( true ) {\n        iVar2 = fcn.004020a4();\n        if (iVar2 == 0) break;\n        iVar3 = iVar3 + (*(iVar2 + 8) == '\\x01') + 1;\n        iVar4 = iVar4 + 1;\n        fcn.00403bfc();\n    }\n    fcn.004018e3();\n    if ((1 < iVar4) && (1 < iVar3)) {\n        return;\n    }\n    fcn.00402cfc(1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 226
    },
    "00401d7a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401d7a(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    iVar1 = *(in_ECX + 8);\n    if (*(iVar1 + 0x14) == '\\0') {\n        fcn.004024f0();\n    }\n    puVar3 = *(in_ECX + 0x30);\n    iVar4 = 0;\n    if (0 < arg_8h) {\n        do {\n            if (*puVar3 == 0) {\n                return iVar4;\n            }\n            iVar2 = fcn.00404192(**(iVar1 + 0xc), *puVar3, 0x8000);\n            if (iVar2 != 0) {\n                puVar3 = puVar3 + 1;\n            }\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < arg_8h);\n    }\n    return iVar4;\n}\n",
        "token_count": 251
    },
    "00401dbb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401dbb(uint32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        uVar1 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401122(in_ECX + 0x464 + uVar3 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 394
    },
    "00401dd9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401dd9(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n        uVar4 = *(*(in_ECX + 0x10) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x10) + -4);\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00404057(in_ECX + 0x464 + uVar1 * 0x10, 2, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar4 = puVar3[1];\n        *arg_8h = *puVar3;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 413
    },
    "00401dfc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar __fastcall fcn.00401dfc(uint *param_1)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t var_4h;\n    \n    var_4h = param_1 & 0xffff0000;\n    *(param_1 + 0xe) = 1;\n    cVar1 = fcn.00402586(&var_4h);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00403d23();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.00401555(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n            if (cVar1 == '\\0') {\n                iVar3 = param_1[2];\n                var_4h = var_4h & 0xffff00ff;\n                if (*(iVar3 + 0x14) == '\\0') {\n                    fcn.004024f0();\n                }\n                puVar2 = param_1[0x110];\n                if (param_1[0x110] == NULL) {\n                    puVar2 = param_1 + 0xf;\n                }\n                iVar3 = fcn.0040123f(puVar2, &var_4h, *(*(iVar3 + 0xc) + 4), iVar3);\n                if (iVar3 < 0) {\n                    *(param_1 + 0xb) = 1;\n                }\n            }\n            else {\n                puVar2 = param_1[0x110];\n                if (param_1[0x110] == NULL) {\n                    puVar2 = param_1 + 0xf;\n                }\n                *puVar2 = var_4h;\n            }\n            puVar2 = param_1 + 0xf;\n            if (param_1[0x110] != NULL) {\n                puVar2 = param_1[0x110];\n            }\n            param_1[0xc] = puVar2;\n            param_1[0xd] = 1;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 500
    },
    "00401eab": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401eab(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    cVar1 = *arg_8h;\n    while ((cVar1 != '\\0' && (iVar2 != arg_ch))) {\n        iVar2 = iVar2 + 1;\n        cVar1 = arg_8h[iVar2];\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00401ec9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401ec9(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    if ((((arg_8h != 0) && (arg_8h != 0x400)) && (arg_8h != 0x800)) &&\n       (((arg_ch != 0 || (arg_10h < 1)) && (-1 < arg_10h)))) {\n        iVar5 = 0;\n        iVar4 = 0xe3;\n        do {\n            iVar3 = (iVar4 + iVar5) / 2;\n            iVar1 = *(iVar3 * 8 + 0x46e5d8);\n            if (arg_8h == iVar1) {\n                if (iVar3 < 0) {\n                    return 0;\n                }\n                arg_8h_00 = *(iVar3 * 8 + 0x46e5dc);\n                iVar4 = fcn.00402c61(arg_8h_00, 0x55);\n                if (0 < arg_10h) {\n                    if (arg_10h <= iVar4) {\n                        return 0;\n                    }\n                    iVar5 = fcn.0040295a(arg_ch, arg_10h, arg_8h_00);\n                    if (iVar5 != 0) {\n                        fcn.0040277f(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        iVar4 = (*pcVar2)();\n                        return iVar4;\n                    }\n                }\n                return iVar4 + 1;\n            }\n            if (arg_8h - iVar1 < 0) {\n                iVar4 = iVar3 + -1;\n            }\n            else {\n                iVar5 = iVar3 + 1;\n            }\n        } while (iVar5 <= iVar4);\n    }\n    return 0;\n}\n",
        "token_count": 460
    },
    "00401f0a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401f0a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    \n    if (**0x476418 == '\\0') {\n        arg_8h_00 = 1;\n    }\n    else {\n        iVar1 = fcn.004045ca(*0x476418, \"??_C\", 4);\n        if (iVar1 == 0) {\n            *0x476418 = *0x476418 + 4;\n            fcn.004026c1(arg_8h, 0);\n            return arg_8h;\n        }\n        arg_8h_00 = 2;\n    }\n    fcn.004014dd(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 174
    },
    "00401f73": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401f73(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        iVar1 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401122(in_ECX + 0x464 + uVar3 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        iVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 405
    },
    "00401f82": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00401f82(char **arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    char *pcVar3;\n    char **ppcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint *arg_8h_00;\n    char *pcVar7;\n    uint *unaff_ESI;\n    char *pcVar8;\n    uint var_3ch;\n    uint var_34h;\n    char **var_2ch;\n    uint var_28h;\n    char *var_1dh;\n    char *var_18h;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    pcVar3 = *0x476418;\n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    var_2ch = arg_8h;\n    var_1dh._0_1_ = **0x476418;\n    if (var_1dh - 0x30U < 10) {\n        *0x476418 = *0x476418 + 1;\n        fcn.0040194c(arg_8h, var_1dh - 0x30U);\n        goto code_r0x00414368;\n    }\n    if (var_1dh == '?') {\n        ppcVar4 = fcn.004021bc(&var_28h, 0);\n        unique0x00007a00 = *ppcVar4;\n        var_18h = ppcVar4[1];\n        pcVar7 = var_18h;\n        pcVar8 = unique0x00007a00;\n        pcVar3 = *0x476418 + 1;\n        if (**0x476418 != '@') {\n            fcn.004022e8((**0x476418 != '\\0') + 1);\n            pcVar7 = var_18h;\n            pcVar8 = stack0xffffffe0;\n            pcVar3 = *0x476418;\n        }\n    }\n    else {\n        iVar5 = fcn.00414740(*0x476418, \"template-parameter-\", 0x13);\n        if (iVar5 == 0) {\n            stack0xffffffe0 = \"`template-parameter-\";\n            *0x476418 = pcVar3 + 0x13;\n            var_18h = 0x14;\ncode_r0x00414247:\n            fcn.00404246(&var_28h);\n            if (((*0x476420 & 0x4000) == 0) || (*0x476428 == NULL)) {\n                fcn.00402211(&var_1dh + 1);\n                fcn.0040395e(&var_1dh + 1, &var_28h);\n                arg_8h_00 = &var_3ch;\n            }\n            else {\n                var_14h = 0;\n                uStack20 = 0;\n                uStack16 = 0;\n                uStack12 = 0;\n                fcn.00402c2a(&var_14h, 0x10);\n                pcVar2 = *0x476428;\n                uVar6 = fcn.00404525(&var_14h);\n                (**0x47a000)(uVar6);\n                iVar5 = (*pcVar2)();\n                if (iVar5 != 0) {\n                    var_18h = var_18h & 0xffffff00;\n                    ppcVar4 = fcn.0040351c(iVar5);\n                    goto code_r0x00414328;\n                }\n                fcn.00402211(&var_1dh + 1);\n                unaff_ESI = &var_28h;\n                fcn.0040395e(&var_1dh + 1, unaff_ESI);\n                arg_8h_00 = &var_34h;\n            }\n            ppcVar4 = fcn.0040256d(arg_8h_00, 0x27);\n        }\n        else {\n            iVar5 = fcn.00414740(pcVar3, \"generic-type-\", 0xd);\n            if (iVar5 == 0) {\n                stack0xffffffe0 = \"`generic-type-\";\n                *0x476418 = pcVar3 + 0xd;\n                var_18h = 0xe;\n                goto code_r0x00414247;\n            }\n            if ((arg_10h != '\\0') && (var_1dh == '@')) {\n                pcVar8 = NULL;\n                pcVar7 = NULL;\n                pcVar3 = pcVar3 + 1;\n                goto code_r0x0041432d;\n            }\n            ppcVar4 = fcn.00404598(0x476418, 0x40);\n        }\ncode_r0x00414328:\n        pcVar7 = ppcVar4[1];\n        pcVar8 = *ppcVar4;\n        pcVar3 = *0x476418;\n    }\ncode_r0x0041432d:\n    *0x476418 = pcVar3;\n    piVar1 = *0x476410;\n    if (((arg_ch != '\\0') && (**0x476410 != 9)) && (pcVar8 != NULL)) {\n        ppcVar4 = fcn.004038c8(8);\n        if (ppcVar4 != NULL) {\n            *ppcVar4 = pcVar8;\n            ppcVar4[1] = pcVar7;\n            *piVar1 = *piVar1 + 1;\n            piVar1[*piVar1 + 1] = ppcVar4;\n        }\n    }\n    *var_2ch = pcVar8;\n    var_2ch[1] = pcVar7;\ncode_r0x00414368:\n    fcn.0040241e(unaff_ESI);\n    return;\n}\n",
        "token_count": 1332
    },
    "00401fb9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00401fb9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00403c79(arg_8h);\n    fcn.0045926f(&var_ch, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00401ff5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401ff5(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint32_t *puVar3;\n    uint32_t **ppuVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    uint var_4h;\n    \n    ppuVar4 = fcn.0040461a();\n    if (ppuVar4 != NULL) {\n        puVar1 = *ppuVar4;\n        for (puVar6 = puVar1; puVar6 != puVar1 + 0x24; puVar6 = puVar6 + 3) {\n            if (*puVar6 == arg_8h) {\n                if (puVar6 == NULL) {\n                    return 0;\n                }\n                pcVar2 = puVar6[2];\n                if (pcVar2 == NULL) {\n                    return 0;\n                }\n                if (pcVar2 == 0x5) {\n                    puVar6[2] = 0;\n                    return 1;\n                }\n                if (pcVar2 != 0x1) {\n                    puVar3 = ppuVar4[1];\n                    ppuVar4[1] = arg_ch;\n                    if (puVar6[1] == 8) {\n                        for (puVar5 = puVar1 + 9; puVar5 != puVar1 + 0x24; puVar5 = puVar5 + 3) {\n                            puVar5[2] = 0;\n                        }\n                        puVar1 = ppuVar4[2];\n                        puVar5 = puVar1;\n                        if (*puVar6 < 0xc0000092) {\n                            if (*puVar6 == 0xc0000091) {\n                                puVar5 = 0x84;\n                            }\n                            else if (*puVar6 == 0xc000008d) {\n                                puVar5 = 0x82;\n                            }\n                            else if (*puVar6 == 0xc000008e) {\n                                puVar5 = 0x83;\n                            }\n                            else if (*puVar6 == 0xc000008f) {\n                                puVar5 = 0x86;\n                            }\n                            else {\n                                if (*puVar6 != 0xc0000090) goto code_r0x004183a0;\n                                puVar5 = 0x81;\n                            }\ncode_r0x0041839d:\n                            ppuVar4[2] = puVar5;\n                        }\n                        else {\n                            if (*puVar6 == 0xc0000092) {\n                                puVar5 = 0x8a;\n                                goto code_r0x0041839d;\n                            }\n                            if (*puVar6 == 0xc0000093) {\n                                puVar5 = 0x85;\n                                goto code_r0x0041839d;\n                            }\n                            if (*puVar6 == 0xc00002b4) {\n                                puVar5 = 0x8e;\n                                goto code_r0x0041839d;\n                            }\n                            if (*puVar6 == 0xc00002b5) {\n                                puVar5 = 0x8d;\n                                goto code_r0x0041839d;\n                            }\n                        }\ncode_r0x004183a0:\n                        (**0x47a000)(8, puVar5);\n                        (*pcVar2)();\n                        ppuVar4[2] = puVar1;\n                    }\n                    else {\n                        puVar6[2] = 0;\n                        (**0x47a000)(puVar6[1]);\n                        (*pcVar2)();\n                    }\n                    ppuVar4[1] = puVar3;\n                }\n                return 0xffffffff;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 837
    },
    "00402013": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402013(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        iVar1 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028bf(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar3;\n        }\n        iVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 385
    },
    "0040201d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040201d(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 1;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.004030f3(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 365
    },
    "00402059": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00402059(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    bool bVar3;\n    \n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if (iVar1 == 1) {\n        bVar3 = *(param_1 + 0x45c) == 2;\n    }\n    else {\n        if (iVar1 != 2) goto code_r0x0042f781;\n        bVar3 = *(param_1 + 0x45c) == 0;\n    }\n    if (bVar3) {\n        return CONCAT31(Var2, 1);\n    }\ncode_r0x0042f781:\n    return Var2 << 8;\n}\n",
        "token_count": 180
    },
    "004020d1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004020d1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_10h_00;\n    code *pcVar2;\n    int32_t arg_10h_01;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00401b59(0x473f28, 0x10);\n    arg_10h_01 = fcn.00402b3f(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = arg_10h_01;\n    iVar3 = fcn.004020a9();\n    *(iVar3 + 0x18) = *(iVar3 + 0x18) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (arg_10h_01 != *(unaff_EBP + 0x14)) {\n        if ((arg_10h_01 < 0) || (iVar3 = *(unaff_EBP + 0x10),  *(iVar3 + 4) <= arg_10h_01)) goto code_r0x00416eb6;\n        iVar1 = *(iVar3 + 8);\n        arg_10h_00 = *(iVar1 + arg_10h_01 * 8);\n        *(unaff_EBP + -0x20) = arg_10h_00;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + arg_10h_01 * 8) != 0) {\n            fcn.00401b45(*(unaff_EBP + 8), iVar3, arg_10h_00);\n            fcn.00402a72(*(*(iVar3 + 8) + 4 + arg_10h_01 * 8), *(unaff_EBP + 8), 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        arg_10h_01 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = arg_10h_01;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00416ea2();\n    if (arg_10h_01 == *(unaff_EBP + 0x14)) {\n        fcn.00401b45(*(unaff_EBP + 8), *(unaff_EBP + 0x10), arg_10h_01);\n        *in_FS_OFFSET = *(unaff_EBP + -0x10);\n        return;\n    }\ncode_r0x00416eb6:\n    fcn.00403693();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 727
    },
    "004020d6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004020d6(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    iVar1 = *(in_ECX + 8);\n    if (*(iVar1 + 0x14) == '\\0') {\n        fcn.004024f0();\n    }\n    puVar3 = *(in_ECX + 0x30);\n    iVar4 = 0;\n    if (0 < arg_8h) {\n        do {\n            if (*puVar3 == 0) {\n                return iVar4;\n            }\n            iVar2 = fcn.00404192(**(iVar1 + 0xc), *puVar3, 0x8000);\n            if (iVar2 != 0) {\n                puVar3 = puVar3 + 1;\n            }\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < arg_8h);\n    }\n    return iVar4;\n}\n",
        "token_count": 250
    },
    "00402103": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00402103(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00401b59(0x473e98, 8);\n    *(unaff_EBP + -4) = 0;\n    if (((*0x400000 == 0x5a4d) && (*(*0x40003c + 0x400000) == 0x4550)) && (*(*0x40003c + 0x400018) == 0x10b)) {\n        iVar1 = fcn.0040a020(0x400000, *(unaff_EBP + 8) + -0x400000);\n        if ((iVar1 != 0) && (-1 < *(iVar1 + 0x24))) {\n            *(unaff_EBP + -4) = 0xfffffffe;\n            uVar2 = 1;\n            goto code_r0x0040a364;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    uVar2 = 0;\ncode_r0x0040a364:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 323
    },
    "0040212b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040212b(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    uint uStack16;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        piVar3 = arg_8h;\n        if (arg_10h != 0) {\n            do {\n                if (*piVar3 == 0) {\n                    arg_10h = arg_10h - piVar3;\n                    do {\n                        iVar1 = *(arg_10h + piVar3);\n                        *piVar3 = iVar1;\n                        piVar3 = piVar3 + 1;\n                        if (iVar1 == 0) {\n                            return 0;\n                        }\n                        arg_ch = arg_ch + -1;\n                    } while (arg_ch != 0);\n                    *arg_8h = 0;\n                    puVar2 = fcn.004029b9();\n                    uStack16 = 0x22;\n                    goto code_r0x00440e66;\n                }\n                arg_ch = arg_ch + -1;\n                piVar3 = piVar3 + 1;\n            } while (arg_ch != 0);\n        }\n        *arg_8h = 0;\n    }\n    puVar2 = fcn.004029b9();\n    uStack16 = 0x16;\ncode_r0x00440e66:\n    *puVar2 = uStack16;\n    fcn.00402842();\n    return uStack16;\n}\n",
        "token_count": 359
    },
    "0040214e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0040214e(uint arg_8h)\n\n{\n    uchar uVar1;\n    \n    if (arg_8h != '\\0') {\n        if (*0x477594 != 0) {\n            fcn.00401974();\n        }\n        return 1;\n    }\n    uVar1 = fcn.0040255e(0x46b638, 0x46b6b8);\n    return uVar1;\n}\n",
        "token_count": 101
    },
    "0040218a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040218a(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 2;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.0040105f(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 365
    },
    "004021bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t ** __cdecl fcn.004021bc(int32_t **arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t **ppiVar3;\n    uint arg_8h_00;\n    uint uVar4;\n    uint var_a4h;\n    uint var_78h;\n    uint var_4ch;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    uVar4 = *0x47640c;\n    if ((**0x476418 == '?') && ((*0x476418)[1] == '$')) {\n        var_4ch = 0xffffffff;\n        var_78h = 0xffffffff;\n        var_a4h = 0xffffffff;\n        var_14h = *0x476410;\n        var_18h = *0x476414;\n        cVar2 = '\\0';\n        *0x476410 = &var_78h;\n        *0x476414 = &var_a4h;\n        var_10h = *0x47640c;\n        var_1h._0_1_ = '\\0';\n        *0x47640c = &var_4ch;\n        if ((*0x476418)[2] == '?') {\n            *0x476418 = *0x476418 + 3;\n            ppiVar3 = fcn.00402252(&var_20h, 1, &var_1h);\n            cVar2 = var_1h;\n        }\n        else {\n            *0x476418 = *0x476418 + 2;\n            ppiVar3 = fcn.00401f82(&var_20h, 1, 1);\n        }\n        var_ch = *ppiVar3;\n        var_8h = ppiVar3[1];\n        if (var_ch == NULL) {\n            *0x476424 = 1;\n        }\n        if (cVar2 == '\\0') {\n            fcn.00402b99(0x3c);\n            arg_8h_00 = fcn.00402c93(&var_20h);\n            fcn.00402310(arg_8h_00);\n            if (var_ch != NULL) {\n                pcVar1 = *(*var_ch + 8);\n                (**0x47a000)();\n                cVar2 = (*pcVar1)();\n                uVar4 = var_10h;\n                if (cVar2 == '>') {\n                    fcn.00402b99(0x20);\n                    uVar4 = var_10h;\n                }\n            }\n            fcn.00402b99(0x3e);\n            if ((arg_ch != '\\0') && (**0x476418 != '\\0')) {\n                *0x476418 = *0x476418 + 1;\n            }\n        }\n        *0x476410 = var_14h;\n        *0x476414 = var_18h;\n        *0x47640c = uVar4;\n        *arg_8h = var_ch;\n        arg_8h[1] = var_8h;\n        return arg_8h;\n    }\n    fcn.004014dd(2);\n    return arg_8h;\n}\n",
        "token_count": 775
    },
    "004021e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004021e4(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint arg_8h, uint arg_ch, uint noname_19, uint noname_20, \n            uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_40h_2;\n    code *pcStack64;\n    uint32_t uStack60;\n    uint uStack56;\n    uint *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uchar *var_20h_2;\n    int32_t var_1ch_2;\n    uint *var_18h;\n    uint var_14h;\n    code *var_10h;\n    code *var_ch;\n    uint var_8h;\n    code *var_4h;\n    \n    var_20h_2 = &stack0xfffffffc;\n    puStack40 = &stack0xffffffb8;\n    if (var_3ch == 0x123) {\n        *var_38h = 0x41531d;\n        var_8h = 1;\n    }\n    else {\n        pcStack64 = fcn.004154ed;\n        uStack60 = *0x47502c ^ &fcn.004021e4::var_40h_2;\n        uStack56 = var_2ch;\n        puStack52 = var_38h;\n        uStack48 = var_28h;\n        uStack44 = var_24h;\n        var_1ch_2 = 0;\n        var_40h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.004021e4::var_40h_2;\n        uVar1 = fcn.0040439a(*var_3ch);\n        *var_3ch = uVar1;\n        var_8h = 1;\n        var_18h = var_3ch;\n        var_14h = var_34h;\n        iVar2 = fcn.004020a9();\n        var_4h = *(iVar2 + 8);\n        var_ch = *0x47a000;\n        (**0x47a000)();\n        var_10h = var_4h;\n        (*var_4h)(*var_3ch, &fcn.004021e4::var_18h);\n        var_8h = 0;\n        if (var_1ch_2 == 0) {\n            *in_FS_OFFSET = var_40h_2;\n        }\n        else {\n            *var_40h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_40h_2;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 789
    },
    "00402211": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402211(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if (0 < arg_8h[1]) {\n        fcn.00403d69(*arg_8h, arg_8h[1]);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00402216": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402216(ushort *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        *arg_8h = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401f23(in_ECX + 0x464 + uVar1 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 360
    },
    "0040222a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040222a(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    \n    if ((arg_ch == 0) || (arg_8h == NULL)) {\n        arg_ch = 0;\n    }\n    else {\n        arg_8h_00 = *arg_8h;\n        if (arg_8h_00 != arg_ch) {\n            *arg_8h = arg_ch;\n            fcn.004022ed(arg_ch);\n            if (((arg_8h_00 != 0) && (fcn.00403981(arg_8h_00),  *(arg_8h_00 + 0xc) == 0)) && (arg_8h_00 != 0x475708)) {\n                fcn.00404656(arg_8h_00);\n            }\n        }\n    }\n    return arg_ch;\n}\n",
        "token_count": 206
    },
    "00402252": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t ** __cdecl fcn.00402252(int32_t **arg_8h, uint arg_ch, uchar *arg_10h)\n\n{\n    uint8_t *puVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t **ppiVar4;\n    code **ppcVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    int32_t iVar9;\n    uint8_t *puVar10;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    uint8_t *puVar13;\n    code **ppcVar14;\n    uint uVar15;\n    uint var_28h;\n    char *var_20h;\n    int32_t *var_1ch;\n    code **var_18h;\n    int32_t *var_14h;\n    code **var_10h;\n    int32_t *var_ch;\n    code **var_8h;\n    code **var_4h;\n    \n    iVar9 = **0x476418;\n    puVar13 = *0x476418 + 1;\n    ppcVar14 = NULL;\n    var_10h = NULL;\n    var_ch = NULL;\n    var_18h = NULL;\n    var_14h = NULL;\n    puVar10 = puVar13;\n    // switch table (22 cases) at 0x4116e8\n    switch(iVar9) {\n    case 0x5b:\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n        goto code_r0x00410ebb;\n    case 0x5f:\n        iVar9 = *puVar13;\n        puVar1 = *0x476418 + 2;\n        puVar10 = puVar1;\n    // switch table (24 cases) at 0x41170c\n        switch(iVar9) {\n        case 0x50:\n            *0x476418 = puVar1;\n            fcn.00401b68(*puVar13 * 8 + 0x469e90);\n            ppiVar4 = fcn.00402252(&var_20h, 0, NULL);\n            var_18h = *ppiVar4;\n            var_14h = ppiVar4[1];\n            puVar13 = *0x476418;\n            if ((var_18h == NULL) || (puVar10 = *0x476418,  (var_14h & 0x400) == 0)) goto code_r0x00411271;\n            break;\n        case 0x51:\n            goto code_r0x00411042;\n        case 0x52:\n            *0x476418 = puVar1;\n            fcn.00401b68(*puVar13 * 8 + 0x469e90);\n            if (**0x476418 == 0) {\n                fcn.00404223(arg_8h, 1);\n                return arg_8h;\n            }\n            uVar6 = **0x476418 - 0x30;\n            puVar10 = *0x476418;\n            if ((uVar6 < 0) || (4 < uVar6)) break;\n            fcn.00401b68(uVar6 * 8 + 0x46a1d0);\n            piVar11 = var_ch;\n            ppcVar14 = var_10h;\n            uVar8 = **0x476418;\n            puVar13 = *0x476418 + 1;\n            if (uVar8 == 0x30) {\n                *0x476418 = puVar13;\n                fcn.004034f4(&var_20h, 0);\n                var_8h = var_20h;\n                var_4h = var_1ch;\n                fcn.00402b99(0x20);\n                fcn.0040395e(&var_28h, &var_10h);\n                puVar13 = *0x476418;\ncode_r0x00411271:\n                *0x476418 = puVar13;\n                fcn.0040395e(arg_8h, &var_18h);\n                return arg_8h;\n            }\n            if (uVar8 == 0x31) {\n                var_8h = var_10h;\n                var_4h = var_ch;\n                *0x476418 = puVar13;\n                if (var_ch < '\\x02') {\n                    if (var_10h == NULL) {\n                        if (var_18h == NULL) {\ncode_r0x00411387:\n                            fcn.004022e8(var_14h);\n                        }\n                        else {\n                            var_8h = var_18h;\n                            var_4h = var_14h;\n                        }\n                    }\n                    else if (var_18h == NULL) {\n                        iVar9 = var_14h;\n                        if ((iVar9 != 0) && (iVar7 = fcn.0040143d(),  iVar7 != 0)) {\n                            iVar7 = fcn.00402b1c();\n                            if ((iVar7 != 0) || ((iVar9 == 2 || (iVar9 == 3)))) goto code_r0x00411387;\n                            uVar15 = fcn.004032e2(iVar9);\n                            fcn.00403b7f(uVar15);\n                        }\n                    }\n                    else {\n                        iVar9 = fcn.004027e8(0x10, 0x476434, 0);\n                        if (iVar9 == 0) {\n                            var_8h = NULL;\n                        }\n                        else {\n                            var_8h = fcn.00402dbf(ppcVar14, var_18h);\n                        }\n                        if (var_8h == NULL) {\n                            var_4h = piVar11 & 0xffffff03 | 3;\n                        }\n                    }\n                }\n                fcn.00404246(&var_20h);\n                uVar15 = fcn.0040256d(&var_18h, 0x2c);\n                fcn.00402310(uVar15);\n                fcn.00404246(&var_20h);\n                ppiVar4 = fcn.0040256d(&var_18h, 0x2c);\n                if (var_4h < '\\x02') {\n                    ppcVar14 = *ppiVar4;\n                    if (var_8h == NULL) {\n                        if (ppcVar14 == NULL) {\n                            iVar9 = *(ppiVar4 + 1);\ncode_r0x00411413:\n                            fcn.004022e8(iVar9);\n                        }\n                        else {\n                            var_4h = ppiVar4[1];\n                            var_8h = ppcVar14;\n                        }\n                    }\n                    else if (ppcVar14 == NULL) {\n                        iVar9 = *(ppiVar4 + 1);\n                        if (iVar9 != 0) {\n                            if ((iVar9 == 2) || (iVar9 == 3)) goto code_r0x00411413;\n                            uVar15 = fcn.004032e2(iVar9);\n                            fcn.00403b7f(uVar15);\n                        }\n                    }\n                    else {\n                        fcn.004011f9(ppcVar14);\n                    }\n                }\n                fcn.00404246(&var_20h);\n                ppiVar4 = fcn.0040256d(&var_18h, 0x2c);\n                if (var_4h < '\\x02') {\n                    ppcVar14 = *ppiVar4;\n                    if (var_8h == NULL) {\n                        if (ppcVar14 == NULL) {\n                            iVar9 = *(ppiVar4 + 1);\ncode_r0x00411486:\n                            fcn.004022e8(iVar9);\n                        }\n                        else {\n                            var_4h = ppiVar4[1];\n                            var_8h = ppcVar14;\n                        }\n                    }\n                    else if (ppcVar14 == NULL) {\n                        iVar9 = *(ppiVar4 + 1);\n                        if (iVar9 != 0) {\n                            if ((iVar9 == 2) || (iVar9 == 3)) goto code_r0x00411486;\n                            uVar15 = fcn.004032e2(iVar9);\n                            fcn.00403b7f(uVar15);\n                        }\n                    }\n                    else {\n                        fcn.004011f9(ppcVar14);\n                    }\n                }\n                fcn.004026ee(&var_20h, 0);\n                ppiVar4 = fcn.0040256d(&var_18h, 0x29);\n                if ('\\x01' < var_4h) goto code_r0x00411542;\n                ppcVar14 = *ppiVar4;\n                if (var_8h == NULL) {\n                    if (ppcVar14 != NULL) {\n                        var_4h = ppiVar4[1];\n                        var_8h = ppcVar14;\n                        goto code_r0x00411542;\n                    }\n                    iVar9 = *(ppiVar4 + 1);\n                }\n                else {\n                    if (ppcVar14 != NULL) {\n                        fcn.004011f9(ppcVar14);\n                        goto code_r0x00411542;\n                    }\n                    iVar9 = *(ppiVar4 + 1);\n                    if (iVar9 == 0) goto code_r0x00411542;\n                    if ((iVar9 != 2) && (iVar9 != 3)) {\n                        uVar15 = fcn.004032e2(iVar9);\n                        fcn.00403b7f(uVar15);\n                        goto code_r0x00411542;\n                    }\n                }\n                fcn.004022e8(iVar9);\ncode_r0x00411542:\n                fcn.0040256d(arg_8h, 0x27);\n                return arg_8h;\n            }\n            if (((uVar8 == 0x32) || (uVar8 == 0x33)) || (uVar8 == 0x34)) goto code_r0x00411271;\ncode_r0x00411011:\n            uVar15 = 1;\n            goto code_r0x00410ebd;\n        case 0x55:\n        case 0x56:\n            iVar9 = *puVar13 * 8 + 0x469e90;\n            *0x476418 = puVar1;\n            goto code_r0x0041159b;\n        case 0x57:\n        case 0x5a:\n        case 0x5b:\n        case 0x5c:\n        case 0x5d:\n        case 0x5e:\n            break;\n        case 0x5f:\n            puVar10 = *0x476418 + 3;\n    // switch table (14 cases) at 0x411740\n            switch(*puVar1) {\n            case 0x41:\n            case 0x42:\n            case 0x43:\n            case 0x44:\n            case 0x47:\n            case 0x48:\n            case 0x49:\n            case 0x4a:\n            case 0x4c:\n            case 0x4d:\n                iVar9 = *puVar1 * 8 + 0x469f58;\n                *0x476418 = puVar10;\n                goto code_r0x0041115e;\n            case 0x45:\n            case 0x46:\n                *0x476418 = puVar10;\n                fcn.00402211(*puVar1 * 8 + 0x469f58);\n                if (**0x476418 == 0x3f) {\n                    uVar15 = fcn.00401852(&var_28h);\n                    fcn.00402310(uVar15);\n                    if (**0x476418 == 0x40) {\n                        *0x476418 = *0x476418 + 1;\n                    }\n                }\n                else {\n                    uVar15 = fcn.004012c6(&var_28h);\n                    fcn.00402310(uVar15);\n                }\n                var_20h = 0x46aa64;\n                var_1ch = 0x2;\n                fcn.00403f03(&var_20h);\n                goto code_r0x00410f43;\n            case 0x4b:\n                *0x476418 = puVar10;\n                fcn.00402211(*puVar1 * 8 + 0x469f58);\n                uVar8 = **0x476418;\n                if (uVar8 != 0) {\n                    var_4h = var_4h & 0xffffff00 | uVar8;\n                    do {\n                        if (uVar8 == 0x40) break;\n                        *0x476418 = *0x476418 + 1;\n                        fcn.00402b99(var_4h);\n                        uVar8 = **0x476418;\n                        var_4h = var_4h & 0xffffff00 | uVar8;\n                    } while (uVar8 != 0);\n                }\n                if (uVar8 == 0x40) {\n                    *0x476418 = *0x476418 + 1;\n                }\ncode_r0x00410f43:\n                *arg_8h = var_18h;\n                var_ch = var_14h;\n                goto code_r0x00410f4e;\n            case 0x4e:\n                *0x476418 = *0x476418 + 4;\n                puVar10 = *0x476418;\n                if (*puVar10 == 0x32) {\n                    fcn.004045e8(arg_8h);\n                    return arg_8h;\n                }\n            }\n            break;\n        default:\n            if (iVar9 != 0x47) {\n                if (iVar9 < 0x39) {\n                    if (iVar9 == 0x38) {\ncode_r0x00411153:\n                        iVar9 = (*0x476418)[1] * 8 + 0x469ec8;\n                        *0x476418 = puVar1;\n                        goto code_r0x0041115e;\n                    }\n                    if (iVar9 < 0x34) {\n                        if (iVar9 != 0x33) {\n                            if (iVar9 == 0) {\n                                *0x476418 = *0x476418 + 1;\n                                goto code_r0x00411011;\n                            }\n                            if (((iVar9 != 0x30) && (iVar9 != 0x31)) && (iVar9 != 0x32)) break;\n                        }\n                    }\n                    else if (((iVar9 != 0x34) && (iVar9 != 0x35)) && (iVar9 != 0x36)) {\n                        if (iVar9 != 0x37) break;\n                        goto code_r0x00411153;\n                    }\n                    iVar9 = (*0x476418)[1] * 8 + 0x469ec8;\n                    *0x476418 = puVar1;\n                    goto code_r0x00411036;\n                }\n                if (iVar9 < 0x44) {\n                    if (iVar9 == 0x43) {\n                        uVar15 = 0;\n                        *0x476418 = puVar1;\n                    }\n                    else {\n                        if (iVar9 == 0x39) {\n                            puVar13 = *0x476418 + 1;\n                            *0x476418 = puVar1;\n                            fcn.00402211(*puVar13 * 8 + 0x469ec8);\n                            var_14h = var_14h | 0x8000;\n                            goto code_r0x004111e1;\n                        }\n                        if (iVar9 != 0x3f) {\n                            iVar9 = iVar9 + -0x40;\n                            goto code_r0x00411182;\n                        }\n                        puVar10 = *0x476418 + 3;\n                        *0x476418 = puVar1;\n                        if (*puVar1 == 0) goto code_r0x00411011;\n                        if (*puVar1 != 0x30) break;\n                        uVar15 = 1;\n                        *0x476418 = puVar10;\n                    }\n                    fcn.004026c1(&var_18h, uVar15);\n                    var_14h = var_14h | 0x1000;\ncode_r0x004111e1:\n                    *arg_8h = var_18h;\n                    arg_8h[1] = var_14h;\n                    return arg_8h;\n                }\n                iVar9 = iVar9 + -0x44;\n                if (iVar9 != 0) {\ncode_r0x00411182:\n                    if ((iVar9 != 1) && (iVar9 != 2)) break;\n                }\n            }\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x53:\n        case 0x54:\n        case 0x58:\n        case 0x59:\n            iVar9 = (*0x476418)[1] * 8 + 0x469e90;\n            *0x476418 = puVar1;\ncode_r0x0041115e:\n            fcn.00402211(iVar9);\n            return arg_8h;\n        }\ncode_r0x00410ebb:\n        *0x476418 = puVar10;\n        uVar15 = 2;\ncode_r0x00410ebd:\n        fcn.004014dd(uVar15);\n        break;\n    default:\n        if (iVar9 != 0x49) {\n            if (iVar9 < 0x39) {\n                if (iVar9 != 0x38) {\n                    if (iVar9 < 0x34) {\n                        if (iVar9 != 0x33) {\n                            if (iVar9 == 0) goto code_r0x00411011;\n                            if ((iVar9 == 0x30) || (iVar9 = iVar9 + -0x31,  iVar9 == 0)) {\n                                var_18h = NULL;\n                                var_14h = NULL;\n                                if (arg_ch == '\\0') {\ncode_r0x00410f5d:\n                                    *0x476418 = puVar13;\n                                    ppiVar4 = fcn.00401f82(&var_20h, 0, 0);\n                                    var_10h = *ppiVar4;\n                                    piVar11 = ppiVar4[1];\n                                    *0x476418 = puVar13;\n                                    var_ch = piVar11;\n                                    var_4h = var_10h;\n                                    if ((var_10h != NULL) && (puVar13[-1] == 0x31)) {\n                                        ppiVar4 = fcn.004022e3(&var_20h, 0x7e, &var_10h);\n                                        var_4h = *ppiVar4;\n                                        piVar11 = ppiVar4[1];\n                                    }\n                                    piVar12 = piVar11;\n                                    ppcVar5 = var_4h;\n                                    if (((var_18h != NULL) && (piVar11 < '\\x02')) &&\n                                       (piVar12 = var_14h,  ppcVar5 = var_18h,  var_4h != NULL)) {\n                                        ppcVar5 = fcn.004038c8(0x10);\n                                        if (ppcVar5 != NULL) {\n                                            fcn.004014e7();\n                                            ppcVar5[3] = 0xffffffff;\n                                            ppcVar5[1] = var_4h;\n                                            *ppcVar5 = vtable.pairNode.0;\n                                            ppcVar5[2] = var_18h;\n                                            ppcVar14 = ppcVar5;\n                                        }\n                                        piVar12 = piVar11;\n                                        ppcVar5 = ppcVar14;\n                                        if (ppcVar14 == NULL) {\n                                            piVar12 = piVar11 & 0xffffff03 | 3;\n                                        }\n                                    }\n                                    *arg_8h = ppcVar5;\n                                    arg_8h[1] = piVar12;\n                                    return arg_8h;\n                                }\n                                *0x476418 = puVar13;\n                                uVar15 = fcn.00402c93(&var_20h);\n                                uVar15 = fcn.004022e3(&var_8h, 0x3c, uVar15);\n                                fcn.00402310(uVar15);\n                                if (var_18h != NULL) {\n                                    pcVar2 = *(*var_18h + 8);\n                                    (**0x47a000)();\n                                    cVar3 = (*pcVar2)();\n                                    if (cVar3 == '>') {\n                                        fcn.00402b99(0x20);\n                                    }\n                                }\n                                fcn.00402b99(0x3e);\n                                if (arg_10h != NULL) {\n                                    *arg_10h = 1;\n                                }\n                                if (**0x476418 != 0) {\n                                    puVar13 = *0x476418 + 1;\n                                    goto code_r0x00410f5d;\n                                }\n                                goto code_r0x00410f43;\n                            }\ncode_r0x00410eb2:\n                            if (iVar9 != 1) goto code_r0x00410ebb;\n                        }\n                    }\n                    else if (((iVar9 != 0x34) && (iVar9 != 0x35)) && (iVar9 = iVar9 + -0x36,  iVar9 != 0))\n                    goto code_r0x00410eb2;\n                }\ncode_r0x0041102b:\n                iVar9 = **0x476418 * 8 + 0x469da8;\n                *0x476418 = puVar13;\ncode_r0x00411036:\n                fcn.00401b68(iVar9);\n                puVar1 = *0x476418;\n                goto code_r0x00411042;\n            }\n            if (iVar9 < 0x45) {\n                if (iVar9 != 0x44) {\n                    if (iVar9 == 0x39) goto code_r0x0041102b;\n                    if (iVar9 != 0x41) {\n                        iVar9 = iVar9 + -0x42;\n                        if (iVar9 != 0) goto code_r0x00411096;\n                        ppcVar14 = 0x1;\n                    }\n                }\n            }\n            else if (((iVar9 != 0x45) && (iVar9 != 0x46)) && (iVar9 = iVar9 + -0x47,  iVar9 != 0)) {\ncode_r0x00411096:\n                if (iVar9 != 1) goto code_r0x00410ebb;\n            }\n        }\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x50:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n    case 0x54:\n    case 0x55:\n    case 0x56:\n    case 0x57:\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n        iVar9 = **0x476418 * 8 + 0x469d70;\n        *0x476418 = puVar13;\ncode_r0x0041159b:\n        fcn.00401b68(iVar9);\n        puVar1 = *0x476418;\n        if (ppcVar14 == NULL) {\ncode_r0x00411042:\n            *0x476418 = puVar1;\n            if (var_10h != NULL) {\n                var_20h = \"operator\";\n                var_1ch = 0x8;\n                fcn.00402211(&var_20h);\n                fcn.0040395e(&var_20h, &var_10h);\n                var_ch = var_1ch;\n                var_10h = var_20h;\n            }\n        }\n        else if (var_10h != NULL) {\n            var_ch = var_ch | 0x200;\n        }\n        *arg_8h = var_10h;\ncode_r0x00410f4e:\n        arg_8h[1] = var_ch;\n    }\n    return arg_8h;\n}\n",
        "token_count": 5495
    },
    "00402284": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402284(char **arg_8h, char **arg_ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char *arg_8h_00;\n    char *pcVar3;\n    char *arg_8h_01;\n    \n    if ((*(arg_8h + 1) == '\\0') || (pcVar3 = *arg_8h,  pcVar3 == NULL)) {\n        *arg_ch = *arg_8h;\n        *(arg_ch + 1) = 0;\n    }\n    else {\n        pcVar1 = pcVar3 + 1;\n        do {\n            cVar2 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar2 != '\\0');\n        arg_8h_00 = fcn.0040138e(pcVar3 + (1 - pcVar1));\n        arg_8h_01 = arg_8h_00;\n        if (arg_8h_00 != NULL) {\n            fcn.00404098(arg_8h_00, pcVar3 + (1 - pcVar1), *arg_8h);\n            arg_8h_01 = NULL;\n            *arg_ch = arg_8h_00;\n            *(arg_ch + 1) = 1;\n        }\n        fcn.00402e19(arg_8h_01);\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "00412991": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00412991(uchar *arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    \n    if (*(in_ECX + 4) == 1) {\n        arg_ch = arg_ch - arg_8h;\n        iVar1 = 4;\n        if ((3 < arg_ch) || (iVar1 = arg_ch,  arg_ch != 0)) {\n            iVar2 = iVar1;\n            puVar3 = arg_8h;\n            do {\n                *puVar3 = puVar3[\" ?? \" - arg_8h];\n                puVar3 = puVar3 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        arg_8h = arg_8h + iVar1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 210
    },
    "004022b1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004022b1(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    \n    uVar2 = 0;\n    uVar1 = fcn.004016d6();\n    if (uVar1 == 1) {\n        uVar1 = fcn.0044a47d();\n        if (uVar1 != 0) {\n            uVar1 = fcn.0044a49d();\n            if (uVar1 != 0) {\n                uVar2 = 1;\n            }\n        }\n    }\n    return uVar1 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 143
    },
    "004022c5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004022c5(uint32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        uVar1 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00404057(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 375
    },
    "004022de": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004022de(uint32_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    int32_t iStack24;\n    uint32_t *puStack20;\n    \n    puStack20 = param_1;\n    iStack24 = param_2;\n    uStack28 = param_3;\n    uStack36 = 0x40b8b0;\n    uStack40 = *in_FS_OFFSET;\n    uStack32 = *0x47502c ^ &uStack40;\n    *in_FS_OFFSET = &uStack40;\n    while( true ) {\n        uVar2 = *(param_2 + 0xc);\n        if ((uVar2 == 0xfffffffe) || ((param_3 != 0xfffffffe && (uVar2 <= param_3)))) break;\n        puVar1 = (*(param_2 + 8) ^ *param_1) + 0x10 + uVar2 * 0xc;\n        *(param_2 + 0xc) = *puVar1;\n        if (puVar1[1] == 0) {\n            uStack40 = 0x101;\n            fcn.0040401b();\n            fcn.00402b0d();\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    return;\n}\n",
        "token_count": 342
    },
    "004022e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004022e8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    in_ECX[1] = 0;\n    *(in_ECX + 1) = arg_8h;\n    if (arg_8h == 1) {\n        iVar1 = fcn.004032e2(1);\n        *in_ECX = iVar1;\n        if (iVar1 == 0) {\n            *(in_ECX + 1) = 3;\n        }\n    }\n    else {\n        *in_ECX = 0;\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "004022ed": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004022ed(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    \n    LOCK();\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + 1;\n    piVar1 = *(arg_8h + 0x7c);\n    if (piVar1 != NULL) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n    }\n    piVar1 = *(arg_8h + 0x84);\n    if (piVar1 != NULL) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n    }\n    piVar1 = *(arg_8h + 0x80);\n    if (piVar1 != NULL) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n    }\n    piVar1 = *(arg_8h + 0x8c);\n    if (piVar1 != NULL) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n    }\n    ppiVar2 = arg_8h + 0x28;\n    iVar3 = 6;\n    do {\n        if ((ppiVar2[-2] != 0x4757f0) && (piVar1 = *ppiVar2,  piVar1 != NULL)) {\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n        }\n        if ((ppiVar2[-3] != NULL) && (piVar1 = ppiVar2[-1],  piVar1 != NULL)) {\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n        }\n        ppiVar2 = ppiVar2 + 4;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    fcn.00402257(*(arg_8h + 0x9c));\n    return;\n}\n",
        "token_count": 447
    },
    "004022f2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004022f2(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        *arg_8h = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028bf(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 340
    },
    "00402310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402310(int32_t *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 1) < '\\x02') {\n        arg_8h_00 = *arg_8h;\n        if (*in_ECX == 0) {\n            if (arg_8h_00 == 0) {\n                fcn.004022e8(*(arg_8h + 1));\n            }\n            else {\n                *in_ECX = arg_8h_00;\n                in_ECX[1] = arg_8h[1];\n            }\n        }\n        else if (arg_8h_00 == 0) {\n            if (*(arg_8h + 1) != 0) {\n                fcn.004043ef(*(arg_8h + 1));\n            }\n        }\n        else {\n            fcn.004011f9(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "00402342": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402342(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 2;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.0040105f(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 364
    },
    "00402388": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402388(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n        uVar4 = *(*(in_ECX + 0x10) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x10) + -4);\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00401f23(in_ECX + 0x464 + uVar1 * 0x10, 4, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar4 = puVar3[1];\n        *arg_8h = *puVar3;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 432
    },
    "004023ba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004023ba(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t iVar6;\n    uint32_t arg_8h;\n    uint arg_1ch;\n    \n    cVar4 = fcn.00403175(*(param_1 + 8));\n    if (cVar4 != '\\0') {\n        if (*(param_1 + 0xc) != 0) {\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x14);\n                }\n                *(param_1 + 0x34) = 0;\n                *(param_1 + 0x18) = 0;\n                uVar1 = **(param_1 + 0xc);\n                *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                *(param_1 + 0x2e) = uVar1;\n                while (uVar1 != 0) {\n                    arg_8h = uVar1;\n                    iVar6 = *(param_1 + 0x14);\n                    if (iVar6 < 0) break;\n                    uVar5 = fcn.00402617(arg_8h, *(param_1 + 0x18));\n                    *(param_1 + 0x18) = uVar5;\n    // switch table (8 cases) at 0x42f4e3\n                    switch(uVar5) {\n                    case 0:\n                        *(param_1 + 0x38) = 1;\n                        iVar2 = *(param_1 + 0x448);\n                        if (*(iVar2 + 8) == *(iVar2 + 4)) {\n                            if (*(iVar2 + 0xc) == '\\0') {\n                                iVar6 = -1;\n                            }\n                            else {\n                                iVar6 = iVar6 + 1;\n                            }\n                            *(param_1 + 0x14) = iVar6;\n                        }\n                        else {\n                            *(param_1 + 0x14) = iVar6 + 1;\n                            *(iVar2 + 8) = *(iVar2 + 8) + 1;\n                            ***(param_1 + 0x448) = uVar1;\n                            piVar3 = *(param_1 + 0x448);\n                            *piVar3 = *piVar3 + 2;\n                        }\n                        break;\n                    case 1:\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x1c) = 0;\n                        *(param_1 + 0x24) = 0xffffffff;\n                        *(param_1 + 0x28) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x38) = 0;\n                        break;\n                    case 2:\n                        if (arg_8h == 0x20) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                        }\n                        else if (arg_8h == 0x23) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                        }\n                        else if (arg_8h == 0x2b) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                        }\n                        else if (arg_8h == 0x2d) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                        }\n                        else if (arg_8h == 0x30) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                        }\n                        break;\n                    case 3:\n                        if (uVar1 != 0x2a) {\n                            iVar6 = param_1 + 0x20;\n                            goto code_r0x0042f421;\n                        }\n                        *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n                        iVar6 = *(*(param_1 + 0x10) + -4);\n                        *(param_1 + 0x20) = iVar6;\n                        if (iVar6 < 0) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                            *(param_1 + 0x20) = -iVar6;\n                        }\ncode_r0x0042f445:\n                        cVar4 = '\\x01';\n                        goto code_r0x0042f483;\n                    case 4:\n                        *(param_1 + 0x24) = 0;\n                        break;\n                    case 5:\n                        if (uVar1 == 0x2a) {\n                            *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n                            iVar6 = *(*(param_1 + 0x10) + -4);\n                            *(param_1 + 0x24) = iVar6;\n                            if (iVar6 < 0) {\n                                *(param_1 + 0x24) = 0xffffffff;\n                            }\n                            goto code_r0x0042f445;\n                        }\n                        iVar6 = param_1 + 0x24;\ncode_r0x0042f421:\n                        cVar4 = fcn.0040218a(iVar6);\n                        goto code_r0x0042f483;\n                    case 6:\n                        cVar4 = fcn.004019c4();\n                        goto code_r0x0042f483;\n                    case 7:\n                        cVar4 = fcn.00401ded();\ncode_r0x0042f483:\n                        if (cVar4 == '\\0') {\n                            return 0xffffffff;\n                        }\n                        break;\n                    default:\n                        iVar6 = *(param_1 + 8);\n                        *(iVar6 + 0x1c) = 1;\n                        *(iVar6 + 0x18) = 0x16;\n                        arg_1ch = *(param_1 + 8);\n                        goto code_r0x0042f301;\n                    case 0xbad1abe1:\n                        goto code_r0x0042f30c;\n                    }\n                    uVar1 = **(param_1 + 0xc);\n                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                    *(param_1 + 0x2e) = uVar1;\n                }\n            } while( true );\n        }\n        iVar6 = *(param_1 + 8);\n        *(iVar6 + 0x1c) = 1;\n        *(iVar6 + 0x18) = 0x16;\n        arg_1ch = *(param_1 + 8);\ncode_r0x0042f301:\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch);\n    }\ncode_r0x0042f30c:\n    return 0xffffffff;\n}\n",
        "token_count": 1653
    },
    "004023c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004023c4(int32_t param_1)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    \n    if (*(param_1 + 4) != 0) {\n        puVar1 = *(param_1 + 8);\n        *(param_1 + 0xc) = puVar1;\n        while (puVar1 != NULL) {\n            pcVar2 = *(param_1 + 4);\n            *(param_1 + 8) = *puVar1;\n            (**0x47a000)(puVar1);\n            (*pcVar2)();\n            puVar1 = *(param_1 + 8);\n            *(param_1 + 0xc) = puVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "004023f1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __thiscall fcn.004023f1(int32_t param_1, uint param_2, uint param_3)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint32_t arg_ch;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    uint arg_1ch;\n    uint32_t uVar5;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    cVar1 = fcn.004012da(*(param_1 + 8));\n    if (cVar1 != '\\0') {\n        if (*(param_1 + 0xc) != 0) {\n            do {\n                do {\n                    *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                    if (*(param_1 + 0x450) == 2) {\n                        return *(param_1 + 0x14);\n                    }\n                    *(param_1 + 0x34) = 0;\n                    *(param_1 + 0x18) = 0;\n                    uVar2 = **(param_1 + 0xc);\n                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                    *(param_1 + 0x2d) = uVar2;\n                } while (uVar2 == 0);\n                var_ch = var_ch & 0xffffff00 | uVar2;\n                uVar4 = CONCAT11(uVar2, uVar2);\n                do {\n                    if (*(param_1 + 0x14) < 0) break;\n                    arg_ch = *(param_1 + 0x18);\n                    uVar5 = var_ch;\n                    uVar2 = fcn.0040195b(var_ch, arg_ch);\n                    *(param_1 + 0x18) = uVar2;\n                    if (7 < uVar2) {\n                        iVar3 = *(param_1 + 8);\n                        *(iVar3 + 0x1c) = 1;\n                        *(iVar3 + 0x18) = 0x16;\n                        arg_1ch = *(param_1 + 8);\n                        goto code_r0x0042d6c9;\n                    }\n                    if (7 < uVar2) {\n                        return 0xffffffff;\n                    }\n                    cVar1 = uVar4;\n    // switch table (8 cases) at 0x42d911\n                    switch(uVar2) {\n                    case 0:\n                        iVar3 = *(param_1 + 8);\n                        *(param_1 + 0x38) = 0;\n                        uVar5 = uVar4 & 0xff;\n                        if (*(iVar3 + 0x14) == '\\0') {\n                            fcn.004024f0();\n                            uVar2 = *(param_1 + 0x2d);\n                            uVar5 = uVar2;\n                            uVar4 = CONCAT11(uVar2, uVar2);\n                        }\n                        var_4h = var_4h & 0xffffff00 | uVar5;\n                        uVar2 = uVar4 >> 8;\n                        iVar3 = fcn.00404192(**(iVar3 + 0xc), uVar4, 0x8000);\n                        if (iVar3 != 0) {\n                            fcn.004037c9(var_4h, param_1 + 0x14, *(param_1 + 8));\n                            uVar2 = **(param_1 + 0xc);\n                            *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                            *(param_1 + 0x2d) = uVar2;\n                            if (uVar2 == 0) {\n                                iVar3 = *(param_1 + 8);\n                                *(iVar3 + 0x1c) = 1;\n                                *(iVar3 + 0x18) = 0x16;\n                                fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                                iVar3 = *(param_1 + 8);\n                                *(iVar3 + 0x1c) = 1;\n                                *(iVar3 + 0x18) = 0x16;\n                                fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                                return 0xffffffff;\n                            }\n                        }\n                        var_8h = var_8h & 0xffffff00 | uVar2;\n                        fcn.004037c9(var_8h, param_1 + 0x14, *(param_1 + 8));\n                        break;\n                    case 1:\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x1c) = 0;\n                        *(param_1 + 0x24) = 0xffffffff;\n                        *(param_1 + 0x28) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x38) = 0;\n                        break;\n                    case 2:\n                        if (cVar1 == ' ') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                        }\n                        else if (cVar1 == '#') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                        }\n                        else if (cVar1 == '+') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                        }\n                        else if (cVar1 == '-') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                        }\n                        else if (cVar1 == '0') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                        }\n                        break;\n                    case 3:\n                        if (cVar1 == '*') {\n                            *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n                            iVar3 = *(*(param_1 + 0x10) + -4);\n                            *(param_1 + 0x20) = iVar3;\n                            if (iVar3 < 0) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                                *(param_1 + 0x20) = -iVar3;\n                            }\n                            goto code_r0x0042d83c;\n                        }\n                        iVar3 = param_1 + 0x20;\ncode_r0x0042d818:\n                        cVar1 = fcn.0040409d(iVar3);\n                        goto code_r0x0042d877;\n                    case 4:\n                        *(param_1 + 0x24) = 0;\n                        break;\n                    case 5:\n                        if (cVar1 != '*') {\n                            iVar3 = param_1 + 0x24;\n                            goto code_r0x0042d818;\n                        }\n                        *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n                        iVar3 = *(*(param_1 + 0x10) + -4);\n                        *(param_1 + 0x24) = iVar3;\n                        if (iVar3 < 0) {\n                            *(param_1 + 0x24) = 0xffffffff;\n                        }\ncode_r0x0042d83c:\n                        cVar1 = '\\x01';\n                        goto code_r0x0042d877;\n                    case 6:\n                        cVar1 = fcn.0040203b();\n                        goto code_r0x0042d877;\n                    case 7:\n                        cVar1 = fcn.00401f46(uVar5, arg_ch, unaff_ESI, unaff_EBX, var_ch, var_8h, var_4h, unaff_EBP, \n                                             unaff_retaddr, param_2, param_3);\ncode_r0x0042d877:\n                        if (cVar1 == '\\0') {\n                            return 0xffffffff;\n                        }\n                    }\n                    uVar2 = **(param_1 + 0xc);\n                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                    uVar4 = CONCAT11(uVar2, uVar2);\n                    *(param_1 + 0x2d) = uVar2;\n                    var_ch = var_ch & 0xffffff00 | uVar2;\n                } while (uVar2 != 0);\n            } while( true );\n        }\n        iVar3 = *(param_1 + 8);\n        *(iVar3 + 0x1c) = 1;\n        *(iVar3 + 0x18) = 0x16;\n        arg_1ch = *(param_1 + 8);\ncode_r0x0042d6c9:\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 2146
    },
    "00402487": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402487(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    uint32_t arg_8h;\n    uint in_stack_ffffffd4;\n    uint in_stack_ffffffd8;\n    uint arg_1ch;\n    \n    cVar2 = fcn.0040358f(*(param_1 + 8));\n    if (cVar2 != '\\0') {\n        if (*(param_1 + 0xc) != 0) {\n            do {\n                do {\n                    *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                    if (*(param_1 + 0x450) == 2) {\n                        return *(param_1 + 0x14);\n                    }\n                    *(param_1 + 0x34) = 0;\n                    *(param_1 + 0x18) = 0;\n                    uVar1 = **(param_1 + 0xc);\n                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                    *(param_1 + 0x2e) = uVar1;\n                } while (uVar1 == 0);\n                do {\n                    arg_8h = uVar1;\n                    if (*(param_1 + 0x14) < 0) break;\n                    uVar3 = fcn.004040c0(arg_8h, *(param_1 + 0x18));\n                    *(param_1 + 0x18) = uVar3;\n    // switch table (8 cases) at 0x42e6b9\n                    switch(uVar3) {\n                    case 0:\n                        *(param_1 + 0x38) = 1;\n                        in_stack_ffffffd8 = 0x42e575;\n                        fcn.00401af0(arg_8h, param_1 + 0x14, *(param_1 + 8));\n                        break;\n                    case 1:\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x1c) = 0;\n                        *(param_1 + 0x24) = 0xffffffff;\n                        *(param_1 + 0x28) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x38) = 0;\n                        break;\n                    case 2:\n                        if (arg_8h == 0x20) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                        }\n                        else if (arg_8h == 0x23) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                        }\n                        else if (arg_8h == 0x2b) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                        }\n                        else if (arg_8h == 0x2d) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                        }\n                        else if (arg_8h == 0x30) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                        }\n                        break;\n                    case 3:\n                        if (uVar1 == 0x2a) {\n                            *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n                            iVar4 = *(*(param_1 + 0x10) + -4);\n                            *(param_1 + 0x20) = iVar4;\n                            if (iVar4 < 0) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                                *(param_1 + 0x20) = -iVar4;\n                            }\n                            goto code_r0x0042e60e;\n                        }\n                        iVar4 = param_1 + 0x20;\ncode_r0x0042e5ea:\n                        cVar2 = fcn.00402342(iVar4);\n                        goto code_r0x0042e64c;\n                    case 4:\n                        *(param_1 + 0x24) = 0;\n                        break;\n                    case 5:\n                        if (uVar1 != 0x2a) {\n                            iVar4 = param_1 + 0x24;\n                            goto code_r0x0042e5ea;\n                        }\n                        *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n                        iVar4 = *(*(param_1 + 0x10) + -4);\n                        *(param_1 + 0x24) = iVar4;\n                        if (iVar4 < 0) {\n                            *(param_1 + 0x24) = 0xffffffff;\n                        }\ncode_r0x0042e60e:\n                        cVar2 = '\\x01';\n                        goto code_r0x0042e64c;\n                    case 6:\n                        cVar2 = fcn.00402aea();\n                        goto code_r0x0042e64c;\n                    case 7:\n                        cVar2 = fcn.004016e0();\ncode_r0x0042e64c:\n                        if (cVar2 == '\\0') {\n                            return 0xffffffff;\n                        }\n                        break;\n                    default:\n                        iVar4 = *(param_1 + 8);\n                        *(iVar4 + 0x1c) = 1;\n                        *(iVar4 + 0x18) = 0x16;\n                        arg_1ch = *(param_1 + 8);\n                        in_stack_ffffffd8 = 0;\n                        in_stack_ffffffd4 = 0;\n                        goto code_r0x0042e4fd;\n                    case 0xbad1abe1:\n                        goto code_r0x0042e508;\n                    }\n                    uVar1 = **(param_1 + 0xc);\n                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                    *(param_1 + 0x2e) = uVar1;\n                } while (uVar1 != 0);\n            } while ((*(param_1 + 0x18) == '\\0') || (*(param_1 + 0x18) == '\\a'));\n        }\n        iVar4 = *(param_1 + 8);\n        *(iVar4 + 0x1c) = 1;\n        *(iVar4 + 0x18) = 0x16;\n        arg_1ch = 0;\ncode_r0x0042e4fd:\n        fcn.00402c20(0, in_stack_ffffffd4, in_stack_ffffffd8, 0, 0, arg_1ch);\n    }\ncode_r0x0042e508:\n    return 0xffffffff;\n}\n",
        "token_count": 1592
    },
    "004024c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004024c8(int32_t *arg_8h, int32_t *arg_ch, uchar *arg_10h, int32_t arg_14h)\n\n{\n    char *pcVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint32_t arg_8h_00;\n    uint var_18h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    pcVar4 = *0x476418 + 1;\n    var_10h = 0;\n    iVar5 = *pcVar4;\n    var_8h = 0;\n    var_ch = 0;\n    var_4h = 0;\n    if (iVar5 == 0x41) {\n        *0x476418 = pcVar4;\n        if (arg_14h == 0) {\n            if ((*arg_ch == 2) || (*arg_ch == 3)) {\n                *arg_ch = 5;\n            }\n            else if (*arg_ch == 1) {\n                *arg_ch = 4;\n            }\n        }\ncode_r0x004104b8:\n        *0x476418 = *0x476418 + 1;\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n    }\n    else {\n        if (iVar5 == 0x42) {\n            if (arg_14h == 0) {\n                *0x476418 = pcVar4;\n                *arg_10h = 1;\n                fcn.0040307b(0x3e);\n                goto code_r0x004104b8;\n            }\ncode_r0x00410463:\n            uVar2 = 2;\n        }\n        else {\n            if (iVar5 == 0x43) {\n                *0x476418 = pcVar4;\n                *arg_ch = 5;\n                goto code_r0x004104b8;\n            }\n            if ((*pcVar4 != '\\0') && (pcVar1 = *0x476418 + 2,  *pcVar1 != '\\0')) {\n                if (arg_14h == 0) {\n                    *0x476418 = *0x476418 + 3;\n                    arg_8h_00 = *pcVar1 + -0x30 + (iVar5 + -0x30) * 0x10;\n                    if (1 < arg_8h_00) {\n                        fcn.0040307b(0x2c);\n                        uVar2 = fcn.004011c7(arg_8h_00, 0);\n                        piVar3 = fcn.0040395e(&var_18h, uVar2);\n                        var_10h = *piVar3;\n                        var_ch = piVar3[1];\n                    }\n                    fcn.00402b99(0x3e);\n                    var_8h = var_10h;\n                    var_4h = var_ch;\n                    if (**0x476418 == '$') {\n                        *0x476418 = *0x476418 + 1;\n                    }\n                    else {\n                        fcn.00402b99(0x5e);\n                    }\n                    var_8h = var_10h;\n                    if (**0x476418 == '\\0') {\n                        if (var_ch < '\\x02') {\n                            var_4h = var_ch;\n                            if (var_10h == 0) {\n                                fcn.004022e8(1);\n                                var_ch = var_4h;\n                            }\n                            else {\n                                fcn.00403b7f(0x46b0a0);\n                                var_ch = var_4h;\n                            }\n                        }\n                    }\n                    else {\n                        *0x476418 = *0x476418 + 1;\n                    }\n                    *arg_8h = var_8h;\n                    arg_8h[1] = var_ch | 0x4000;\n                    return arg_8h;\n                }\n                goto code_r0x00410463;\n            }\n            uVar2 = 1;\n        }\n        *0x476418 = pcVar4;\n        fcn.004014dd(uVar2);\n    }\n    return arg_8h;\n}\n",
        "token_count": 966
    },
    "004024d7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __thiscall fcn.004024d7(uint32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t **ppiVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uchar uVar5;\n    uint32_t arg_ch;\n    int32_t iVar6;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint32_t noname_0;\n    uint arg_8h;\n    uint32_t var_4h;\n    \n    arg_8h = *(param_1 + 8);\n    cVar4 = fcn.004036c0(arg_8h);\n    if (cVar4 != '\\0') {\n        var_4h = param_1;\n        if (*(param_1 + 0xc) == 0) {\n            iVar6 = *(param_1 + 8);\n            *(iVar6 + 0x1c) = 1;\n            *(iVar6 + 0x18) = 0x16;\ncode_r0x0042ddaa:\n            fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n        }\n        else {\n            do {\n                cVar4 = fcn.0040119a();\n                if (cVar4 == '\\0') {\n                    return *(param_1 + 0x14);\n                }\n                *(param_1 + 0x34) = 0;\n                *(param_1 + 0x18) = 0;\n                uVar2 = **(param_1 + 0xc);\n                *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                *(param_1 + 0x2d) = uVar2;\n                if (uVar2 != 0) {\n                    var_4h = var_4h & 0xffffff00 | uVar2;\n                    do {\n                        if (*(param_1 + 0x14) < 0) break;\n                        arg_ch = *(param_1 + 0x18);\n                        noname_0 = var_4h;\n                        uVar5 = fcn.00404417(var_4h, arg_ch);\n                        *(param_1 + 0x18) = uVar5;\n                        cVar4 = fcn.004036b6();\n                        if (cVar4 == '\\0') {\n                            return 0xffffffff;\n                        }\n    // switch table (8 cases) at 0x42e054\n                        switch(*(param_1 + 0x18)) {\n                        case 0:\n                            cVar4 = fcn.00402059();\n                            if (cVar4 == '\\0') {\n                                iVar6 = *(param_1 + 8);\n                                *(param_1 + 0x38) = 0;\n                                if (*(iVar6 + 0x14) == '\\0') {\n                                    fcn.004024f0();\n                                }\n                                cVar4 = *(param_1 + 0x2d);\n                                iVar6 = fcn.00404192(**(iVar6 + 0xc), cVar4, 0x8000);\n                                ppiVar1 = param_1 + 0x448;\n                                if (iVar6 != 0) {\n                                    piVar3 = *ppiVar1;\n                                    if (piVar3[2] == piVar3[1]) {\n                                        if (*(piVar3 + 3) == '\\0') {\n                                            *(param_1 + 0x14) = 0xffffffff;\n                                        }\n                                        else {\n                                            *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                        }\n                                    }\n                                    else {\n                                        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                        piVar3[2] = piVar3[2] + 1;\n                                        ***ppiVar1 = cVar4;\n                                        **ppiVar1 = **ppiVar1 + 1;\n                                    }\n                                    cVar4 = **(param_1 + 0xc);\n                                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                                    *(param_1 + 0x2d) = cVar4;\n                                    if (cVar4 == '\\0') {\n                                        iVar6 = *(param_1 + 8);\n                                        *(iVar6 + 0x1c) = 1;\n                                        *(iVar6 + 0x18) = 0x16;\n                                        fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                                        iVar6 = *(param_1 + 8);\n                                        *(iVar6 + 0x1c) = 1;\n                                        *(iVar6 + 0x18) = 0x16;\n                                        fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                                        return 0xffffffff;\n                                    }\n                                }\n                                piVar3 = *ppiVar1;\n                                if (piVar3[2] == piVar3[1]) {\n                                    if (*(piVar3 + 3) == '\\0') {\n                                        *(param_1 + 0x14) = 0xffffffff;\n                                    }\n                                    else {\n                                        *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                    }\n                                }\n                                else {\n                                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                    piVar3[2] = piVar3[2] + 1;\n                                    ***ppiVar1 = cVar4;\n                                    **ppiVar1 = **ppiVar1 + 1;\n                                }\n                            }\n                            break;\n                        case 1:\n                            *(param_1 + 0x24) = 0xffffffff;\n                            *(param_1 + 0x20) = 0;\n                            *(param_1 + 0x2c) = 0;\n                            *(param_1 + 0x1c) = 0;\n                            *(param_1 + 0x28) = 0;\n                            *(param_1 + 0x38) = 0;\n                            break;\n                        case 2:\n                            cVar4 = *(param_1 + 0x2d);\n                            if (cVar4 == ' ') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                            }\n                            else if (cVar4 == '#') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                            }\n                            else if (cVar4 == '+') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                            }\n                            else if (cVar4 == '-') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                            }\n                            else if (cVar4 == '0') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                            }\n                            break;\n                        case 3:\n                            if (*(param_1 + 0x2d) != '*') {\n                                iVar6 = param_1 + 0x20;\ncode_r0x0042df46:\n                                cVar4 = fcn.00403abc(iVar6);\n                                goto code_r0x0042dfbf;\n                            }\n                            cVar4 = fcn.004033fa();\n                            if (cVar4 == '\\0') {\n                                return 0xffffffff;\n                            }\n                            cVar4 = fcn.0040383c();\n                            if (cVar4 != '\\0') {\n                                if (*(param_1 + 0x20) < 0) {\n                                    *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                                    *(param_1 + 0x20) = -*(param_1 + 0x20);\n                                }\ncode_r0x0042df76:\n                                cVar4 = '\\x01';\n                                goto code_r0x0042dfbf;\n                            }\n                            break;\n                        case 4:\n                            *(param_1 + 0x24) = 0;\n                            break;\n                        case 5:\n                            if (*(param_1 + 0x2d) != '*') {\n                                iVar6 = param_1 + 0x24;\n                                goto code_r0x0042df46;\n                            }\n                            cVar4 = fcn.0040179e();\n                            if (cVar4 == '\\0') {\n                                return 0xffffffff;\n                            }\n                            cVar4 = fcn.0040383c();\n                            if (cVar4 != '\\0') {\n                                if (*(param_1 + 0x24) < 0) {\n                                    *(param_1 + 0x24) = 0xffffffff;\n                                }\n                                goto code_r0x0042df76;\n                            }\n                            break;\n                        case 6:\n                            cVar4 = fcn.0040190b();\n                            goto code_r0x0042dfbf;\n                        case 7:\n                            cVar4 = fcn.00404390(noname_0, arg_ch, arg_8h, unaff_EDI, unaff_ESI, unaff_EBX, var_4h, \n                                                 unaff_EBP, unaff_retaddr, param_2, param_3);\ncode_r0x0042dfbf:\n                            if (cVar4 == '\\0') {\n                                return 0xffffffff;\n                            }\n                            break;\n                        default:\n                            iVar6 = *(param_1 + 8);\n                            *(iVar6 + 0x1c) = 1;\n                            *(iVar6 + 0x18) = 0x16;\n                            goto code_r0x0042ddaa;\n                        case 0xbad1abe1:\n                            goto code_r0x0042ddbd;\n                        }\n                        uVar2 = **(param_1 + 0xc);\n                        *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                        *(param_1 + 0x2d) = uVar2;\n                        var_4h = var_4h & 0xffffff00 | uVar2;\n                    } while (uVar2 != 0);\n                }\n                cVar4 = fcn.00403616();\n            } while (cVar4 != '\\0');\n        }\n    }\ncode_r0x0042ddbd:\n    return 0xffffffff;\n}\n",
        "token_count": 2410
    },
    "004024dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004024dc(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 5) == '\\x02') {\n        *(*param_1 + 0x350) = *(*param_1 + 0x350) & 0xfffffffd;\n    }\n    if (*(param_1 + 7) != '\\0') {\n        iVar1 = param_1[6];\n        iVar2 = fcn.00401cb2();\n        *(iVar2 + 0x10) = iVar1;\n    }\n    if (*(param_1 + 9) != '\\0') {\n        iVar1 = param_1[8];\n        iVar2 = fcn.00401cb2();\n        *(iVar2 + 0x14) = iVar1;\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "00402509": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402509(int32_t param_1)\n\n{\n    if (*(param_1 + 0x14) != '\\0') {\n        fcn.004042f5(*(param_1 + 8));\n        *(param_1 + 0x14) = 0;\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00402531": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402531(char *arg_8h)\n\n{\n    int32_t arg_ch;\n    uint *in_ECX;\n    \n    arg_ch = 0;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        do {\n            arg_ch = arg_ch + 1;\n        } while (arg_8h[arg_ch] != '\\0');\n        if (arg_ch != 0) {\n            fcn.00404534(arg_8h, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "00402586": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402586(ushort *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        *arg_8h = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00404057(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 340
    },
    "004025b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004025b8(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    piVar1 = *arg_8h;\n    if ((*piVar1 == -0x1fbcbcae) || (*piVar1 == -0x1fbcb0b3)) {\n        iVar3 = fcn.004020a9();\n        if (0 < *(iVar3 + 0x18)) {\n            iVar3 = fcn.004020a9();\n            *(iVar3 + 0x18) = *(iVar3 + 0x18) + -1;\n        }\n    }\n    else if (*piVar1 == -0x1f928c9d) {\n        iVar3 = fcn.004020a9();\n        *(iVar3 + 0x10) = piVar1;\n        piVar1 = arg_8h[1];\n        iVar3 = fcn.004020a9();\n        *(iVar3 + 0x14) = piVar1;\n        fcn.0040106e();\n        pcVar2 = swi(3);\n        uVar4 = (*pcVar2)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 289
    },
    "004025bd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004025bd(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 2;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.0040105f(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 364
    },
    "004025f9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004025f9(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        uVar3 = *(*(in_ECX + 0x10) + -4);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028bf(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar3;\n        }\n        uVar3 = **(in_ECX + 0x46c + uVar1 * 0x10);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 382
    },
    "004026c6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004026c6(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0040288d();\n    iVar1 = *0x476350;\n    if ((iVar2 != 0) && (arg_8h == '\\0')) {\n        *0x476350 = 0;\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 102
    },
    "004026ee": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.004026ee(uint *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar5 = **0x476418 != 'Q';\n    if (!bVar5) {\n        *0x476418 = *0x476418 + 1;\n    }\n    cVar1 = **0x476418;\n    if (cVar1 == '\\0') {\n        fcn.004014dd(1);\n        return arg_8h;\n    }\n    if ((cVar1 < '0') || ('9' < cVar1)) {\n        fcn.004015a0(&var_28h);\n        if (var_20h == '\\0') {\n            if (**0x476418 != '\\0') {\n                uVar2 = 0;\n                var_4h = 2;\n                var_8h = 0;\n                puVar3 = &var_8h;\n                goto code_r0x0040fee9;\n            }\n            puVar3 = fcn.004014dd(1);\n        }\n        else {\n            *0x476418 = *0x476418 + 1;\n            if (arg_ch == '\\0') {\n                if (bVar5) goto code_r0x0040fe71;\n                goto code_r0x0040fe3e;\n            }\n            if (!bVar5) {\n                uVar2 = fcn.00403396(var_28h, var_24h);\n                goto code_r0x0040fe43;\n            }\n            puVar3 = fcn.00403396(var_28h, var_24h);\n        }\n    }\n    else {\n        *0x476418 = *0x476418 + 1;\n        uVar4 = cVar1;\n        if (bVar5) {\n            var_28h = uVar4 - 0x2f;\n            var_24h = (uVar4 >> 0x1f) + -1 + (0x2e < uVar4);\ncode_r0x0040fe71:\n            puVar3 = fcn.004011c7(var_28h, var_24h);\n        }\n        else {\n            var_28h = uVar4 - 0x2f;\n            var_24h = var_28h >> 0x1f;\ncode_r0x0040fe3e:\n            uVar2 = fcn.004011c7(var_28h, var_24h);\ncode_r0x0040fe43:\n            fcn.00402211(0x475054);\n            fcn.0040395e(&var_8h, uVar2);\n            puVar3 = &var_8h;\n        }\n    }\n    uVar2 = *puVar3;\ncode_r0x0040fee9:\n    *arg_8h = uVar2;\n    arg_8h[1] = puVar3[1];\n    return arg_8h;\n}\n",
        "token_count": 744
    },
    "0040276b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0040276b(uint arg_8h, uint arg_ch)\n\n{\n    if ((*0x476354 == '\\0') || (arg_ch == '\\0')) {\n        fcn.0040214e(arg_8h);\n        fcn.0040114f(arg_8h);\n    }\n    return 1;\n}\n",
        "token_count": 76
    },
    "00402770": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00402770(uint8_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.004029b9();\n        *puVar2 = 0x16;\n        fcn.00402842();\n        iVar3 = 0x7fffffff;\n    }\n    else if (arg_ch == NULL) {\n        puVar2 = fcn.004029b9();\n        *puVar2 = 0x16;\n        fcn.00402842();\n        iVar3 = 0x7fffffff;\n    }\n    else if (arg_10h < 0x80000000) {\n        if (arg_10h == 0) {\n            iVar3 = 0;\n        }\n        else {\n            fcn.00403c79(arg_14h);\n            do {\n                uVar1 = *arg_8h;\n                arg_8h = arg_8h + 1;\n                uVar4 = *(uVar1 + *(var_10h + 0x94));\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                iVar3 = uVar4 - *(uVar1 + *(var_10h + 0x94));\n                if ((iVar3 != 0) || (uVar4 == 0)) break;\n                arg_10h = arg_10h - 1;\n            } while (arg_10h != 0);\n            if (var_8h != '\\0') {\n                *(var_14h + 0x350) = *(var_14h + 0x350) & 0xfffffffd;\n            }\n        }\n    }\n    else {\n        puVar2 = fcn.004029b9();\n        *puVar2 = 0x16;\n        fcn.00402842();\n        iVar3 = 0x7fffffff;\n    }\n    return iVar3;\n}\n",
        "token_count": 518
    },
    "004027e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004027e8(uint arg_8h, uint noname_1, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        fcn.004044c6(arg_8h);\n        return;\n    }\n    fcn.004038c8(arg_8h);\n    return;\n}\n",
        "token_count": 79
    },
    "00402801": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402801(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if (*0x476fe0 != 0) {\n        iVar2 = fcn.0040399f(arg_8h, arg_ch, 0);\n        return iVar2;\n    }\n    if ((arg_8h != NULL) && (arg_ch != NULL)) {\n        do {\n            uVar3 = *arg_8h;\n            arg_8h = arg_8h + 1;\n            if (uVar3 - 0x41 < 0x1a) {\n                uVar3 = uVar3 + 0x20;\n            }\n            uVar4 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            if (uVar4 - 0x41 < 0x1a) {\n                uVar4 = uVar4 + 0x20;\n            }\n        } while ((uVar3 - uVar4 == 0) && (uVar3 != 0));\n        return uVar3 - uVar4;\n    }\n    puVar1 = fcn.004029b9();\n    *puVar1 = 0x16;\n    fcn.00402842();\n    return 0x7fffffff;\n}\n",
        "token_count": 314
    },
    "0040285b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040285b(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_4h;\n    \n    if ((-1 < arg_8h) && (arg_8h < *0x477458)) {\n        iVar3 = (arg_8h & 0x3f) * 0x38;\n        if (*(iVar3 + 0x18 + *((arg_8h >> 6) * 4 + 0x4771f0)) == -1) {\n            iVar1 = fcn.004015fa();\n            if (iVar1 == 1) {\n                if (arg_8h == 0) {\n                    uVar4 = 0xfffffff6;\n                }\n                else if (arg_8h == 1) {\n                    uVar4 = 0xfffffff5;\n                }\n                else {\n                    if (arg_8h != 2) goto code_r0x004450a2;\n                    uVar4 = 0xfffffff4;\n                }\n                (*_sym.imp.KERNEL32.dll_SetStdHandle)(uVar4, arg_ch);\n            }\ncode_r0x004450a2:\n            *(iVar3 + 0x18 + *((arg_8h >> 6) * 4 + 0x4771f0)) = arg_ch;\n            return 0;\n        }\n    }\n    puVar2 = fcn.004029b9();\n    *puVar2 = 9;\n    puVar2 = fcn.00401523();\n    *puVar2 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 377
    },
    "004028b5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004028b5(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (((arg_8h == 0) || (uVar2 = fcn.00402c61(arg_8h, 0x55),  0x54 < uVar2)) ||\n       (iVar3 = fcn.00402d88(uVar2 * 2 + 2),  iVar3 == 0)) {\n        iVar3 = 0;\n    }\n    else {\n        iVar4 = fcn.00403df5(iVar3, uVar2 + 1, arg_8h, uVar2 + 1);\n        if (iVar4 != 0) {\n            fcn.0040277f(0, 0, 0, 0, 0);\n            pcVar1 = swi(3);\n            iVar3 = (*pcVar1)();\n            return iVar3;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 240
    },
    "004028d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004028d8(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint in_stack_ffffffd0;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x476418 != '\\0') {\n        fcn.00403a03(&var_10h);\n        fcn.0040256d(&var_8h, 0x7b);\n        if (**0x476418 != '@') {\n            uVar1 = fcn.00401f82(&var_10h, 0, 0);\n            fcn.00402310(uVar1);\n            fcn.00402b99(0x3a);\n            uVar1 = fcn.00402c43(&var_10h);\n            fcn.00402310(uVar1);\n        }\n        fcn.00402b99(0x7d);\n        if (**0x476418 == '@') {\n            *0x476418 = *0x476418 + 1;\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n        in_stack_ffffffd0 = 2;\n    }\n    fcn.004014dd(in_stack_ffffffd0);\n    return arg_8h;\n}\n",
        "token_count": 305
    },
    "00402905": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __thiscall fcn.00402905(uint32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint32_t arg_ch;\n    int32_t iVar5;\n    uint16_t uVar6;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint uVar7;\n    uint32_t noname_0;\n    uint32_t var_4h;\n    \n    uVar7 = *(param_1 + 8);\n    cVar3 = fcn.004036c0(uVar7);\n    if (cVar3 != '\\0') {\n        var_4h = param_1;\n        if (*(param_1 + 0xc) != 0) {\n            do {\n                do {\n                    *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                    if (*(param_1 + 0x450) == 2) {\n                        return *(param_1 + 0x14);\n                    }\n                    *(param_1 + 0x34) = 0;\n                    *(param_1 + 0x18) = 0;\n                    uVar4 = **(param_1 + 0xc);\n                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                    *(param_1 + 0x2d) = uVar4;\n                } while (uVar4 == 0);\n                var_4h = var_4h & 0xffffff00 | uVar4;\n                uVar6 = CONCAT11(uVar4, uVar4);\n                do {\n                    if (*(param_1 + 0x14) < 0) break;\n                    arg_ch = *(param_1 + 0x18);\n                    noname_0 = var_4h;\n                    uVar4 = fcn.00401465(var_4h, arg_ch);\n                    *(param_1 + 0x18) = uVar4;\n                    if (7 < uVar4) {\n                        iVar5 = *(param_1 + 8);\n                        *(iVar5 + 0x1c) = 1;\n                        *(iVar5 + 0x18) = 0x16;\n                        uVar7 = *(param_1 + 8);\n                        in_stack_ffffffd0 = 0;\n                        in_stack_ffffffcc = 0;\n                        goto code_r0x0042da1e;\n                    }\n                    if (7 < uVar4) {\n                        return 0xffffffff;\n                    }\n                    cVar3 = uVar6;\n    // switch table (8 cases) at 0x42dc9c\n                    switch(uVar4) {\n                    case 0:\n                        iVar5 = *(param_1 + 8);\n                        *(param_1 + 0x38) = 0;\n                        if (*(iVar5 + 0x14) == '\\0') {\n                            fcn.004024f0();\n                            uVar6 = CONCAT11(*(param_1 + 0x2d), *(param_1 + 0x2d));\n                        }\n                        cVar3 = uVar6 >> 8;\n                        in_stack_ffffffd0 = 0x42daae;\n                        iVar5 = fcn.00404192(**(iVar5 + 0xc), uVar6, 0x8000);\n                        ppiVar1 = param_1 + 0x448;\n                        if (iVar5 != 0) {\n                            piVar2 = *ppiVar1;\n                            if (piVar2[2] == piVar2[1]) {\n                                if (*(piVar2 + 3) == '\\0') {\n                                    *(param_1 + 0x14) = 0xffffffff;\n                                }\n                                else {\n                                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                }\n                            }\n                            else {\n                                *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                piVar2[2] = piVar2[2] + 1;\n                                ***ppiVar1 = uVar6;\n                                **ppiVar1 = **ppiVar1 + 1;\n                            }\n                            cVar3 = **(param_1 + 0xc);\n                            *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                            *(param_1 + 0x2d) = cVar3;\n                            if (cVar3 == '\\0') {\n                                iVar5 = *(param_1 + 8);\n                                *(iVar5 + 0x1c) = 1;\n                                *(iVar5 + 0x18) = 0x16;\n                                fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                                iVar5 = *(param_1 + 8);\n                                *(iVar5 + 0x1c) = 1;\n                                *(iVar5 + 0x18) = 0x16;\n                                fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                                return 0xffffffff;\n                            }\n                        }\n                        piVar2 = *ppiVar1;\n                        if (piVar2[2] == piVar2[1]) {\n                            if (*(piVar2 + 3) == '\\0') {\n                                *(param_1 + 0x14) = 0xffffffff;\n                            }\n                            else {\n                                *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                            }\n                        }\n                        else {\n                            *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                            piVar2[2] = piVar2[2] + 1;\n                            ***ppiVar1 = cVar3;\n                            **ppiVar1 = **ppiVar1 + 1;\n                        }\n                        break;\n                    case 1:\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x1c) = 0;\n                        *(param_1 + 0x24) = 0xffffffff;\n                        *(param_1 + 0x28) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x38) = 0;\n                        break;\n                    case 2:\n                        if (cVar3 == ' ') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                        }\n                        else if (cVar3 == '#') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                        }\n                        else if (cVar3 == '+') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                        }\n                        else if (cVar3 == '-') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                        }\n                        else if (cVar3 == '0') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                        }\n                        break;\n                    case 3:\n                        if (cVar3 != '*') {\n                            iVar5 = param_1 + 0x20;\n                            goto code_r0x0042db9a;\n                        }\n                        *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n                        iVar5 = *(*(param_1 + 0x10) + -4);\n                        *(param_1 + 0x20) = iVar5;\n                        if (iVar5 < 0) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                            *(param_1 + 0x20) = -iVar5;\n                        }\ncode_r0x0042dbbe:\n                        cVar3 = '\\x01';\n                        goto code_r0x0042dbf9;\n                    case 4:\n                        *(param_1 + 0x24) = 0;\n                        break;\n                    case 5:\n                        if (cVar3 == '*') {\n                            *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n                            iVar5 = *(*(param_1 + 0x10) + -4);\n                            *(param_1 + 0x24) = iVar5;\n                            if (iVar5 < 0) {\n                                *(param_1 + 0x24) = 0xffffffff;\n                            }\n                            goto code_r0x0042dbbe;\n                        }\n                        iVar5 = param_1 + 0x24;\ncode_r0x0042db9a:\n                        cVar3 = fcn.00403cdd(iVar5);\n                        goto code_r0x0042dbf9;\n                    case 6:\n                        cVar3 = fcn.00402590();\n                        goto code_r0x0042dbf9;\n                    case 7:\n                        cVar3 = fcn.00404313(noname_0, arg_ch, uVar7, unaff_EDI, unaff_ESI, unaff_EBX, var_4h, unaff_EBP\n                                             , unaff_retaddr, param_2, param_3);\ncode_r0x0042dbf9:\n                        if (cVar3 == '\\0') {\n                            return 0xffffffff;\n                        }\n                    }\n                    uVar4 = **(param_1 + 0xc);\n                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                    uVar6 = CONCAT11(uVar4, uVar4);\n                    *(param_1 + 0x2d) = uVar4;\n                    var_4h = var_4h & 0xffffff00 | uVar4;\n                } while (uVar4 != 0);\n            } while ((*(param_1 + 0x18) == '\\0') || (*(param_1 + 0x18) == '\\a'));\n        }\n        iVar5 = *(param_1 + 8);\n        *(iVar5 + 0x1c) = 1;\n        *(iVar5 + 0x18) = 0x16;\n        uVar7 = 0;\ncode_r0x0042da1e:\n        fcn.00402c20(0, in_stack_ffffffcc, in_stack_ffffffd0, 0, 0, uVar7);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 2461
    },
    "00402923": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.00402923(uint32_t arg_8h, uint8_t *arg_ch, uint32_t arg_10h, uint32_t *arg_14h, uint arg_18h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint8_t *var_18h;\n    uint8_t var_11h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    if (arg_14h == NULL) {\n        arg_14h = 0x4775dc;\n    }\n    if (arg_ch == NULL) {\n        var_28h = NULL;\n        var_18h = 0x46a3bc;\n        arg_10h = 1;\n    }\n    else {\n        var_18h = arg_ch;\n        var_28h = -(arg_ch != NULL) & arg_8h;\n        if (arg_10h == 0) goto code_r0x0045c513;\n    }\n    if (*(arg_14h + 6) == 0) {\n        uVar1 = *var_18h;\n        var_18h = var_18h + 1;\n        if (-1 < uVar1) {\n            if (var_28h != NULL) {\n                *var_28h = uVar1;\n            }\n            goto code_r0x0045c513;\n        }\n        if ((uVar1 & 0xe0) == 0xc0) {\n            uVar5 = CONCAT11(2, uVar1);\n        }\n        else if ((uVar1 & 0xf0) == 0xe0) {\n            uVar5 = CONCAT11(3, uVar1);\n        }\n        else {\n            if ((uVar1 & 0xf8) != 0xf0) goto code_r0x0045c508;\n            uVar5 = CONCAT11(4, uVar1);\n        }\n        uVar3 = uVar5 >> 8;\n        var_11h = uVar3;\n        uVar4 = (1 << (7 - uVar3 & 0x1f)) - 1U & uVar5 & 0xff;\ncode_r0x0045c452:\n        uVar2 = uVar3;\n        if (uVar2 < arg_10h) {\n            arg_10h = uVar2;\n        }\n        uVar6 = var_18h - arg_ch;\n        while (uVar6 < arg_10h) {\n            uVar1 = *var_18h;\n            uVar5 = uVar5 & 0xffffff00;\n            uVar6 = uVar6 + 1;\n            var_18h = var_18h + 1;\n            if ((uVar1 & 0xc0) != 0x80) goto code_r0x0045c508;\n            uVar4 = uVar4 << 6 | uVar1 & 0x3f;\n        }\n        if (arg_10h < uVar2) {\n            *(arg_14h + 1) = uVar5 >> 8;\n            *arg_14h = uVar4;\n            *(arg_14h + 6) = uVar3 - arg_10h;\n            goto code_r0x0045c513;\n        }\n        if (((uVar4 < 0xd800) || (0xdfff < uVar4)) && (uVar4 < 0x110000)) {\n            var_10h = 0x80;\n            var_ch = 0x800;\n            var_8h = 0x10000;\n            if ((&var_18h)[uVar5 >> 8] <= uVar4) {\n                if (var_28h != NULL) {\n                    *var_28h = uVar4;\n                }\n                fcn.00404593(-(uVar4 != 0) & uVar2, arg_14h);\n                goto code_r0x0045c513;\n            }\n        }\n    }\n    else {\n        uVar1 = *(arg_14h + 1);\n        uVar5 = uVar1 << 8;\n        uVar4 = *arg_14h;\n        uVar3 = *(arg_14h + 6);\n        if (((uVar1 - 2 < 3) && (uVar3 != 0)) && (uVar3 < uVar1)) goto code_r0x0045c452;\n    }\ncode_r0x0045c508:\n    fcn.0040417e(arg_14h, arg_18h);\ncode_r0x0045c513:\n    fcn.0040241e(var_28h);\n    return;\n}\n",
        "token_count": 1147
    },
    "00402946": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00459141)\n\nuint32_t __cdecl fcn.00402946(uint8_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar4;\n    uint32_t uVar2;\n    uint *puVar3;\n    bool bVar5;\n    \n    if (*0x476fe0 != 0) {\n        uVar2 = fcn.0040294b(arg_8h, arg_ch, arg_10h, 0);\n        return uVar2;\n    }\n    if ((arg_8h == NULL) || (arg_ch == NULL)) {\n        puVar3 = fcn.004029b9();\n        *puVar3 = 0x16;\n        fcn.00402842();\n    }\n    else {\n        if (arg_10h < 0x80000000) {\n            if (arg_10h != 0) {\n                do {\n                    uVar4 = *arg_8h;\n                    uVar1 = *arg_ch;\n                    if ((uVar4 == 0) || (uVar1 == 0)) break;\n                    arg_8h = arg_8h + 1;\n                    arg_ch = arg_ch + 1;\n                    if ((0x40 < uVar4) && (uVar4 < 0x5b)) {\n                        uVar4 = uVar4 + 0x20;\n                    }\n                    if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n                        uVar1 = uVar1 + 0x20;\n                    }\n                    bVar5 = uVar4 < uVar1;\n                    if (uVar4 != uVar1) goto code_r0x0045c6a1;\n                    arg_10h = arg_10h - 1;\n                } while (arg_10h != 0);\n                arg_10h = 0;\n                bVar5 = uVar4 < uVar1;\n                if (uVar4 != uVar1) {\ncode_r0x0045c6a1:\n                    arg_10h = 0xffffffff;\n                    if (!bVar5) {\n                        arg_10h = 1;\n                    }\n                }\n            }\n            return arg_10h;\n        }\n        puVar3 = fcn.004029b9();\n        *puVar3 = 0x16;\n        fcn.00402842();\n    }\n    return 0x7fffffff;\n}\n",
        "token_count": 562
    },
    "0040294b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040294b(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    fcn.00403c79(arg_14h);\n    if (arg_10h == 0) {\n        iVar3 = 0;\n    }\n    else if ((arg_8h == 0) || (arg_ch == 0)) {\n        puVar1 = fcn.004029b9();\n        *puVar1 = 0x16;\n        fcn.00402842();\n        iVar3 = 0x7fffffff;\n    }\n    else {\n        iVar3 = 0x7fffffff;\n        if (arg_10h < 0x80000000) {\n            if (*(var_ch + 0xa4) == 0) {\n                iVar3 = fcn.00402770(arg_8h, arg_ch, arg_10h, &var_ch);\n            }\n            else {\n                iVar2 = fcn.00401fb9(&var_ch, *(var_ch + 0xa4), 0x1001, arg_8h, arg_10h, arg_ch, arg_10h, \n                                     *(var_ch + 0x10));\n                if (iVar2 == 0) {\n                    puVar1 = fcn.004029b9();\n                    *puVar1 = 0x16;\n                }\n                else {\n                    iVar3 = iVar2 + -2;\n                }\n            }\n        }\n        else {\n            puVar1 = fcn.004029b9();\n            *puVar1 = 0x16;\n            fcn.00402842();\n        }\n    }\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return iVar3;\n}\n",
        "token_count": 476
    },
    "0040297d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040297d(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        uVar1 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028bf(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 384
    },
    "004029f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004029f0(int32_t *arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint arg_10h;\n    uint *arg_8h_00;\n    uint var_f0h;\n    uint var_e8h;\n    uint var_e0h;\n    uint var_d8h;\n    uint var_d0h;\n    uint var_c8h;\n    uint var_c0h;\n    uint var_b8h;\n    uint var_b0h;\n    uint var_a8h;\n    uint var_a0h;\n    uint var_98h;\n    uint var_90h;\n    uint var_88h;\n    uint var_80h;\n    uint var_78h;\n    uint var_70h;\n    uint var_68h;\n    uint var_60h;\n    uint var_58h;\n    uint var_50h;\n    uint var_48h;\n    char *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    bVar3 = false;\n    do {\n        if ((**0x476418 == '\\0') || (**0x476418 == '@')) break;\n        if ((*0x476424 != '\\0') && (*0x476425 == '\\0')) {\n            return arg_8h;\n        }\n        if (*arg_8h != 0) {\n            var_28h = 0x46aa08;\n            var_24h = 2;\n            fcn.00402211(&var_28h);\n            fcn.0040395e(&var_30h, arg_8h);\n            *arg_8h = var_30h;\n            arg_8h[1] = var_2ch;\n            if (bVar3) {\n                piVar5 = fcn.004022e3(&var_70h, 0x5b, arg_8h);\n                bVar3 = false;\n                *arg_8h = *piVar5;\n                arg_8h[1] = piVar5[1];\n            }\n        }\n        if (**0x476418 == '?') {\n            pcVar1 = *0x476418 + 1;\n            cVar2 = *pcVar1;\n            if (cVar2 == '$') {\n                fcn.00401f82(&var_f0h, 1, 0);\n                arg_8h_00 = &var_50h;\n                goto code_r0x004125ca;\n            }\n            if (cVar2 != '%') {\n                if (cVar2 == '?') {\n                    if (((*0x476418)[2] != '_') || ((*0x476418)[3] != '?')) {\n                        *0x476418 = pcVar1;\n                        arg_10h = fcn.00401852(&var_c8h);\n                        fcn.004022e3(&var_d0h, 0x60, arg_10h);\n                        fcn.0040256d(&var_d8h, 0x27);\n                        arg_8h_00 = &var_e0h;\n                        goto code_r0x004125ca;\n                    }\n                    *0x476418 = *0x476418 + 2;\n                    fcn.00402252(&var_b8h, 0, 0);\n                    piVar5 = fcn.0040395e(&var_c0h, arg_8h);\n                    *arg_8h = *piVar5;\n                    arg_8h[1] = piVar5[1];\n                    if (**0x476418 == '@') {\ncode_r0x004124fd:\n                        *0x476418 = *0x476418 + 1;\n                    }\n                    goto code_r0x004125df;\n                }\n                if (cVar2 == 'A') goto code_r0x00412541;\n                if (cVar2 != 'I') {\n                    if (cVar2 == 'Q') {\n                        var_8h = 0;\n                        *0x476418 = *0x476418 + 2;\n                        var_4h = 0;\n                        do {\n                            iVar4 = var_8h;\n                            fcn.00401f82(&var_20h, 1, 0);\n                            if (var_1ch == '\\0') {\n                                if (iVar4 == 0) {\n                                    var_8h = var_20h;\n                                    var_4h = var_1ch;\n                                }\n                                else {\n                                    var_18h = var_20h;\n                                    var_14h = var_1ch;\n                                    var_38h = 0x46aa08;\n                                    var_34h = 2;\n                                    fcn.00403f03(&var_38h);\n                                    piVar5 = fcn.0040395e(&var_88h, &var_8h);\n                                    var_8h = *piVar5;\n                                    var_4h = piVar5[1];\n                                }\n                            }\n                            else {\n                                var_8h = 0;\n                                var_4h = 2;\n                            }\n                            if (var_4h != '\\0') {\n                                arg_8h[1] = 0;\n                                *arg_8h = 0;\n                                *(arg_8h + 1) = 2;\n                                goto code_r0x004125df;\n                            }\n                        } while (**0x476418 != '@');\n                        fcn.004022e3(&var_90h, 0x5b, &var_8h);\n                        piVar5 = fcn.0040256d(&var_98h, 0x5d);\n                        *arg_8h = *piVar5;\n                        arg_8h[1] = piVar5[1];\n                        goto code_r0x004124fd;\n                    }\n                    *0x476418 = pcVar1;\n                    fcn.004034b8(&var_78h);\n                    arg_8h_00 = &var_80h;\n                    goto code_r0x004125ca;\n                }\n                *0x476418 = *0x476418 + 2;\n                fcn.00401f82(&var_a0h, 1, 0);\n                fcn.0040256d(&var_a8h, 0x5d);\n                piVar5 = fcn.0040395e(&var_b0h, arg_8h);\n                bVar3 = true;\n                goto code_r0x004125d3;\n            }\ncode_r0x00412541:\n            *0x476418 = pcVar1;\n            fcn.00404598(0x476418, 0x40);\n            var_40h = \"`anonymous namespace\\'\";\n            var_3ch = 0x15;\n            fcn.00402211(&var_40h);\n            fcn.0040395e(&var_10h, arg_8h);\n            *arg_8h = var_10h;\n            arg_8h[1] = var_ch;\n            if (**0x476410 != 9) {\n                fcn.00403c1a(&var_48h);\n            }\n        }\n        else {\n            fcn.00401f82(&var_58h, 1, 0);\n            arg_8h_00 = &var_60h;\ncode_r0x004125ca:\n            piVar5 = fcn.0040395e(arg_8h_00, arg_8h);\ncode_r0x004125d3:\n            *arg_8h = *piVar5;\n            arg_8h[1] = piVar5[1];\n        }\ncode_r0x004125df:\n    } while (*(arg_8h + 1) == '\\0');\n    if (**0x476418 == '\\0') {\n        if (*arg_8h == 0) {\n            fcn.004022e8(1);\n        }\n        else {\n            var_10h = 0x46aa08;\n            var_ch = 2;\n            fcn.004014dd(1);\n            fcn.004037d3(&var_58h, &var_10h);\n            piVar5 = fcn.0040395e(&var_50h, arg_8h);\n            *arg_8h = *piVar5;\n            arg_8h[1] = piVar5[1];\n        }\n    }\n    else if (**0x476418 != '@') {\n        arg_8h[1] = 0;\n        *arg_8h = 0;\n        *(arg_8h + 1) = 2;\n    }\n    return arg_8h;\n}\n",
        "token_count": 2062
    },
    "00402a13": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402a13(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((arg_8h != 0) && (arg_8h != 1)) {\n        puVar1 = fcn.004029b9();\n        *puVar1 = 0x16;\n        fcn.00402842();\n        return 0xffffffff;\n    }\n    uVar2 = *0x476fe4;\n    *0x476fe4 = arg_8h;\n    return uVar2;\n}\n",
        "token_count": 128
    },
    "00402a31": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402a31(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    iVar5 = arg_8h >> 6;\n    iVar4 = (arg_8h & 0x3f) * 0x38;\n    iVar3 = *(iVar5 * 4 + 0x4771f0);\n    uVar1 = *(iVar3 + 0x28 + iVar4);\n    cVar2 = *(iVar3 + 0x29 + iVar4);\n    if (arg_ch == 0x4000) {\n        *(iVar3 + 0x28 + iVar4) = uVar1 | 0x80;\n        *(*(iVar5 * 4 + 0x4771f0) + 0x29 + iVar4) = 0;\n    }\n    else if (arg_ch == 0x8000) {\n        *(iVar3 + 0x28 + iVar4) = uVar1 & 0x7f;\n    }\n    else if ((arg_ch == 0x10000) || (arg_ch == 0x20000)) {\n        *(iVar3 + 0x28 + iVar4) = uVar1 | 0x80;\n        *(*(iVar5 * 4 + 0x4771f0) + 0x29 + iVar4) = 2;\n    }\n    else if (arg_ch == 0x40000) {\n        *(iVar3 + 0x28 + iVar4) = uVar1 | 0x80;\n        *(*(iVar5 * 4 + 0x4771f0) + 0x29 + iVar4) = 1;\n    }\n    if ((uVar1 & 0x80) == 0) {\n        iVar3 = 0x8000;\n    }\n    else if (cVar2 == '\\0') {\n        iVar3 = 0x4000;\n    }\n    else {\n        iVar3 = ((cVar2 != '\\x01') - 1 & 0x30000) + 0x10000;\n    }\n    return iVar3;\n}\n",
        "token_count": 509
    },
    "00402a68": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402a68(int32_t param_1)\n\n{\n    if (*(param_1 + 0x404) == 0) {\n        return 0x100;\n    }\n    return *(param_1 + 0x400) >> 2;\n}\n",
        "token_count": 64
    },
    "00402a95": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00402a95(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    fcn.00403c79(0);\n    uVar2 = 0xfde9;\n    if (*(var_ch + 8) != 0xfde9) {\n        iVar1 = fcn.0040330f();\n        uVar2 = 0;\n        if (iVar1 == 0) {\n            uVar2 = 1;\n        }\n    }\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return uVar2;\n}\n",
        "token_count": 191
    },
    "00402b44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402b44(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    \n    piVar4 = in_EAX & 0xffffff00;\n    if ((*(param_1 + 6) != '\\0') && (*(param_1 + 6) != '\\a')) {\n        iVar1 = param_1[2];\n        *(iVar1 + 0x1c) = 1;\n        *(iVar1 + 0x18) = 0x16;\n        uVar3 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n        return uVar3 & 0xffffff00;\n    }\n    if ((param_1[0x117] == 2) && (param_1[0x116] == 1)) {\n        iVar1 = param_1[0x2a9];\n        piVar4 = param_1 + iVar1 * 4 + 4;\n        if (param_1 != piVar4) {\n            iVar5 = param_1[4];\n            piVar6 = param_1 + 0x119;\n            do {\n                iVar2 = *piVar6;\n                piVar6[2] = iVar5;\n                if (iVar2 == 1) {\ncode_r0x0043bc50:\n                    param_1[4] = param_1[4] + 4;\n                }\n                else {\n                    if (iVar2 != 2) {\n                        if (iVar2 == 3) goto code_r0x0043bc50;\n                        if (iVar2 != 4) {\n                            iVar1 = param_1[2];\n                            *(iVar1 + 0x1c) = 1;\n                            *(iVar1 + 0x18) = 0x16;\n                            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n                            return uVar3 & 0xffffff00;\n                        }\n                    }\n                    param_1[4] = param_1[4] + 8;\n                }\n                iVar5 = param_1[4];\n                piVar4 = param_1 + iVar1 * 4 + 0x119;\n                bVar7 = piVar6 != piVar4;\n                piVar6 = piVar6 + 4;\n            } while (bVar7);\n        }\n    }\n    return CONCAT31(piVar4 >> 8, 1);\n}\n",
        "token_count": 607
    },
    "00402b49": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402b49(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if (*(param_1 + 0x14) != '\\0') {\n        *(param_1 + 0x14) = 0;\n    }\n    puVar1 = fcn.004029b9();\n    *puVar1 = 0x22;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x14) = 0;\n    return 0x22;\n}\n",
        "token_count": 122
    },
    "00402b8f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402b8f(int32_t arg_8h, uint32_t arg_ch, int32_t **arg_10h)\n\n{\n    uint arg_8h_00;\n    uint32_t uVar1;\n    \n    if (arg_10h == NULL) {\n        arg_8h_00 = fcn.0040357b();\n        uVar1 = fcn.00404192(arg_8h_00, arg_8h, arg_ch);\n        return uVar1;\n    }\n    if (arg_8h + 1U < 0x101) {\n        arg_ch = *(**arg_10h + arg_8h * 2) & arg_ch;\n    }\n    else if ((*arg_10h)[1] < 2) {\n        arg_ch = 0;\n    }\n    else {\n        arg_ch = fcn.00402f22(arg_8h, arg_ch, arg_10h);\n    }\n    return arg_ch;\n}\n",
        "token_count": 220
    },
    "00402b99": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402b99(uint arg_8h)\n\n{\n    code **arg_8h_00;\n    int32_t *in_ECX;\n    \n    if ((*(in_ECX + 1) < '\\x02') && (arg_8h != '\\0')) {\n        if (*in_ECX == 0) {\n            *in_ECX = 0;\n            in_ECX[1] = 0;\n            fcn.0040307b(arg_8h);\n        }\n        else {\n            arg_8h_00 = fcn.004038c8(8);\n            if (arg_8h_00 == NULL) {\n                arg_8h_00 = NULL;\n            }\n            else {\n                *arg_8h_00 = vtable.charNode.0;\n                *(arg_8h_00 + 1) = arg_8h;\n            }\n            fcn.00403bb6(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "00402bad": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402bad(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    \n    if (arg_8h == 1) {\n        puVar1 = fcn.004029b9();\n        *puVar1 = 0x21;\n    }\n    else if (arg_8h - 2U < 2) {\n        puVar1 = fcn.004029b9();\n        *puVar1 = 0x22;\n        return;\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "00402bb2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402bb2(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if (*param_1 == 0) {\n        puVar1 = fcn.004029b9();\n        *puVar1 = 0x16;\n        fcn.00402842();\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 84
    },
    "00402be4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00402be4(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t arg_8h_00;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *var_4h;\n    \n    if ((5 < arg_8h) || (arg_ch == 0)) {\n        return NULL;\n    }\n    piVar1 = fcn.0040375b(1, 8);\n    var_4h = piVar1;\n    if (piVar1 == NULL) {\n        puVar2 = fcn.004029b9();\n        piVar1 = NULL;\n        *puVar2 = 0xc;\n        goto code_r0x0041b68f;\n    }\n    arg_8h_00 = fcn.0040375b(1, 0xb8);\n    iVar4 = arg_8h_00;\n    if (arg_8h_00 == 0) {\n        puVar2 = fcn.004029b9();\n        piVar1 = NULL;\n        *puVar2 = 0xc;\n    }\n    else {\n        puVar2 = fcn.0040375b(1, 0x220);\n        if (puVar2 == NULL) {\n            puVar3 = fcn.004029b9();\n            *puVar3 = 0xc;\ncode_r0x0041b67b:\n            piVar1 = NULL;\n            puVar3 = puVar2;\n        }\n        else {\n            fcn.0041ae78(arg_8h_00, 0x475708);\n            iVar4 = fcn.0041b9d6(arg_8h_00, arg_8h, arg_ch);\n            if (iVar4 == 0) {\ncode_r0x0041b66b:\n                fcn.00403981(arg_8h_00);\n                iVar4 = 0;\n                fcn.00404656(arg_8h_00);\n                goto code_r0x0041b67b;\n            }\n            iVar4 = fcn.00403f12(*(arg_8h_00 + 8), puVar2);\n            if (iVar4 != 0) goto code_r0x0041b66b;\n            *puVar2 = 1;\n            iVar4 = 0;\n            *piVar1 = arg_8h_00;\n            puVar3 = NULL;\n            piVar1[1] = puVar2;\n            var_4h = NULL;\n        }\n        fcn.004042f5(puVar3);\n    }\n    fcn.004042f5(iVar4);\ncode_r0x0041b68f:\n    fcn.004042f5(var_4h);\n    return piVar1;\n}\n",
        "token_count": 634
    },
    "00402bf3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar * __cdecl fcn.00402bf3(char *arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uchar *puVar6;\n    char *pcVar7;\n    uint var_10h;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    fcn.00401181(&var_8h);\n    if (var_4h == '\\x03') {\n        return NULL;\n    }\n    if ((var_4h == '\\x02') || (((*0x476420 & 0x1000) == 0 && (**0x476418 != '\\0')))) {\n        var_4h = var_4h & 0xffffff00;\n        ppiVar3 = fcn.00403da5(*0x47641c);\n        var_8h = *ppiVar3;\n    }\n    if (arg_8h == NULL) {\n        if (var_8h == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            pcVar2 = **var_8h;\n            (**0x47a000)();\n            iVar4 = (*pcVar2)();\n        }\n        arg_ch = iVar4 + 1;\n        var_4h = arg_ch;\n        arg_8h = fcn.004044c6(arg_ch);\n        if (arg_8h == NULL) {\n            return NULL;\n        }\n    }\n    if (var_8h == NULL) {\n        *arg_8h = '\\0';\n    }\n    else {\n        pcVar5 = arg_8h;\n        if (arg_8h == NULL) {\n            pcVar2 = **var_8h;\n            (**0x47a000)();\n            iVar4 = (*pcVar2)();\n            var_4h = iVar4 + 1;\n            pcVar5 = fcn.004038c8(var_4h);\n            arg_ch = var_4h;\n            if (pcVar5 == NULL) goto code_r0x00413b93;\n        }\n        pcVar2 = *(*var_8h + 0xc);\n        (**0x47a000)(pcVar5, pcVar5 + (arg_ch - 1));\n        puVar6 = (*pcVar2)();\n        *puVar6 = 0;\n    }\ncode_r0x00413b93:\n    cVar1 = *arg_8h;\n    pcVar5 = arg_8h;\n    pcVar7 = arg_8h;\n    while (cVar1 != '\\0') {\n        pcVar7 = pcVar7 + 1;\n        if (cVar1 == ' ') {\n            *pcVar5 = ' ';\n            for (; *pcVar7 == ' '; pcVar7 = pcVar7 + 1) {\n            }\n        }\n        else {\n            *pcVar5 = cVar1;\n        }\n        pcVar5 = pcVar5 + 1;\n        cVar1 = *pcVar7;\n    }\n    *pcVar5 = '\\0';\n    return arg_8h;\n}\n",
        "token_count": 709
    },
    "00402c2a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00402c2a(uchar *arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    int32_t *in_ECX;\n    \n    if (*in_ECX == 0) {\n        if (arg_8h != NULL) {\n            *arg_8h = 0;\n        }\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_ch = fcn.00402efa();\n            arg_ch = arg_ch + 1;\n            arg_8h = fcn.004038c8(arg_ch);\n            if (arg_8h == NULL) {\n                return NULL;\n            }\n        }\n        puVar1 = fcn.00401a32(arg_8h, arg_8h + arg_ch + -1);\n        *puVar1 = 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 198
    },
    "00402c43": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00402c43(uint *arg_8h)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint unaff_EBX;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_2ch;\n    uint var_24h;\n    uint32_t var_20h;\n    char *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    pcVar1 = *0x476418 + 1;\n    iVar4 = **0x476418;\n    var_18h = iVar4;\n    // switch table (16 cases) at 0x4133c2\n    switch(iVar4) {\n    case 0x47:\n    case 0x48:\n    case 0x49:\n    case 0x4a:\ncode_r0x00413199:\n        var_1ch = NULL;\n        var_18h = 0;\n        *0x476418 = pcVar1;\n        fcn.0040307b(0x7b);\n        if (((iVar4 == 0x48) || (iVar4 == 0x49)) || (iVar4 == 0x4a)) {\n            uVar5 = fcn.00401852(&var_24h);\n            fcn.00402310(uVar5);\n            fcn.00402b99(0x2c);\n        }\n        if (iVar4 == 0x46) {\ncode_r0x0041320f:\n            uVar5 = fcn.00404246(&var_24h);\n            fcn.00402310(uVar5);\n            fcn.00402b99(0x2c);\ncode_r0x0041322c:\n            uVar5 = fcn.00404246(&var_24h);\n            fcn.00402310(uVar5);\n        }\n        else {\n            if (iVar4 == 0x47) {\ncode_r0x004131f2:\n                uVar5 = fcn.00404246(&var_24h);\n                fcn.00402310(uVar5);\n                fcn.00402b99(0x2c);\n                goto code_r0x0041320f;\n            }\n            if (iVar4 == 0x48) goto code_r0x0041322c;\n            if (iVar4 == 0x49) goto code_r0x0041320f;\n            if (iVar4 == 0x4a) goto code_r0x004131f2;\n        }\n        uVar5 = 0x7d;\n        break;\n    case 0x4b:\n    case 0x4c:\n    case 0x4f:\n    case 0x51:\n        goto code_r0x004133a7;\n    case 0x4d:\n        *0x476418 = pcVar1;\n        fcn.00403a03(&var_1ch);\n        pcVar1 = *0x476418;\n        if (var_18h < '\\x02') {\n            fcn.00402c43(arg_8h);\n            goto code_r0x004133b0;\n        }\n        goto code_r0x004133a7;\n    case 0x4e:\n        var_1ch = \"nullptr\";\n        var_18h = 7;\n        *0x476418 = pcVar1;\n        goto code_r0x004130c8;\n    case 0x50:\n        *0x476418 = pcVar1;\n        fcn.004026ee(&var_2ch, 0);\n        var_1ch = \"lambda\";\n        var_18h = 6;\ncode_r0x004130c8:\n        fcn.00402211(&var_1ch);\n        goto code_r0x004133b0;\n    case 0x52:\n    case 0x54:\n    case 0x55:\n    case 0x56:\n        *0x476418 = pcVar1;\n        fcn.00404246(&var_24h);\n        var_14h = 0;\n        uStack20 = 0;\n        uStack16 = 0;\n        uStack12 = 0;\n        fcn.00402c2a(&var_14h, 0x10);\n        uVar3 = fcn.00404525(&var_14h);\n        pcVar2 = *0x476428;\n        if (((*0x476420 & 0x4000) != 0) && (*0x476428 != NULL)) {\n            (**0x47a000)(uVar3 & 0xfff);\n            iVar4 = (*pcVar2)();\n            if (iVar4 != 0) {\n                var_20h = var_20h & 0xffffff00;\n                fcn.0040351c(iVar4);\n                goto code_r0x004133b0;\n            }\n        }\n        fcn.00403a94(&var_14h, 0x10, 0x46aaa4, uVar3 & 0xfff);\n        var_20h = var_20h & 0xffffff00;\n        fcn.00402531(&var_14h);\n        if ((var_18h == 0x52) || (var_18h == 0x54)) {\n            var_1ch = \"`template-type-parameter-\";\ncode_r0x00413347:\n            var_18h = 0x19;\n        }\n        else {\n            if (var_18h == 0x55) {\n                var_1ch = \"`generic-class-parameter-\";\n                goto code_r0x00413347;\n            }\n            pcVar1 = *0x476418;\n            if (var_18h != 0x56) goto code_r0x004133a7;\n            var_1ch = \"`generic-method-parameter-\";\n            var_18h = 0x1a;\n        }\n        fcn.00402211(&var_1ch);\n        fcn.0040395e(&var_1ch, &var_24h);\n        uVar5 = 0x27;\n        break;\n    case 0x53:\n        *0x476418 = pcVar1;\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        goto code_r0x004133b0;\n    default:\n        if (iVar4 == 0x46) goto code_r0x00413199;\n        if (0x36 < iVar4) {\n            if (iVar4 == 0x37) {\n                *0x476418 = pcVar1;\n                fcn.004028d8(arg_8h);\n                goto code_r0x004133b0;\n            }\n            if (iVar4 == 0x38) {\n                *0x476418 = pcVar1;\n                fcn.004045c5(arg_8h);\n                goto code_r0x004133b0;\n            }\n            if ((iVar4 == 0x41) || (iVar4 == 0x42)) {\n                *0x476418 = pcVar1;\n                fcn.00401474(arg_8h, iVar4);\n                goto code_r0x004133b0;\n            }\n            if (iVar4 == 0x43) {\n                *0x476418 = pcVar1;\n                fcn.00403ca1(arg_8h);\n                goto code_r0x004133b0;\n            }\n            if (iVar4 == 0x45) {\n                *0x476418 = pcVar1;\n                fcn.00401852(arg_8h);\n                goto code_r0x004133b0;\n            }\n            goto code_r0x004133a7;\n        }\n        if (iVar4 == 0x36) {\n            *0x476418 = pcVar1;\n            fcn.00402d29(arg_8h);\n            goto code_r0x004133b0;\n        }\n        if (iVar4 != 0) {\n            if (iVar4 == 0x30) {\n                *0x476418 = pcVar1;\n                fcn.00404246(arg_8h);\n                goto code_r0x004133b0;\n            }\n            if (iVar4 == 0x31) {\n                if (*pcVar1 != '@') {\n                    var_1ch = NULL;\n                    var_18h = 0;\n                    *0x476418 = pcVar1;\n                    fcn.0040307b(0x26);\n                    uVar5 = fcn.00401852(&var_24h);\n                    fcn.0040395e(arg_8h, uVar5);\n                    goto code_r0x004133b0;\n                }\n                var_1ch = \"NULL\";\n                var_18h = 4;\n                *0x476418 = *0x476418 + 2;\n                goto code_r0x004130c8;\n            }\n            if (iVar4 == 0x32) {\n                *0x476418 = pcVar1;\n                fcn.004045e8(arg_8h);\n                goto code_r0x004133b0;\n            }\n            if (iVar4 == 0x34) {\n                *0x476418 = pcVar1;\n                fcn.00401f0a(arg_8h);\n                goto code_r0x004133b0;\n            }\n            if (iVar4 == 0x35) {\n                *0x476418 = pcVar1;\n                fcn.004038af(arg_8h);\n                goto code_r0x004133b0;\n            }\n            goto code_r0x004133a7;\n        }\n        uVar5 = 1;\n        goto code_r0x004133a9;\n    }\n    fcn.0040256d(arg_8h, uVar5);\ncode_r0x004133b0:\n    fcn.0040241e(unaff_EBX);\n    return;\ncode_r0x004133a7:\n    *0x476418 = pcVar1;\n    uVar5 = 2;\ncode_r0x004133a9:\n    fcn.004014dd(uVar5);\n    goto code_r0x004133b0;\n}\n",
        "token_count": 2318
    },
    "00402c93": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.00402c93(uint *arg_8h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    char *pcVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_34h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    var_2h._0_1_ = '\\x01';\n    var_ch = 0;\n    uVar5 = 0;\n    var_8h = 0;\n    *0x476425 = 1;\n    do {\n        pcVar3 = *0x476418;\n        cVar1 = **0x476418;\n        if ((cVar1 == '\\0') || (cVar1 == '@')) break;\n        var_14h = 0;\n        var_10h = 0;\n        var_2h._1_1_ = '\\0';\n        if (cVar1 - 0x30U < 10) {\n            *0x476418 = *0x476418 + 1;\n            piVar4 = fcn.0040194c(&fcn.00402c93::var_24h, cVar1 - 0x30U);\n            iVar7 = *piVar4;\n            iVar6 = piVar4[1];\n            var_14h = iVar7;\n            var_10h = iVar6;\n            goto code_r0x00412d7a;\n        }\n        if ((cVar1 == '$') && ((*0x476418)[1] == '$')) {\n            cVar1 = (*0x476418)[2];\n            if (cVar1 == '$') {\n                if ((*0x476418)[3] != 'V') goto code_r0x00412ce5;\n                *0x476418 = *0x476418 + 4;\n            }\n            else {\n                if (cVar1 == 'U') {\ncode_r0x00412d0a:\n                    *0x476418 = *0x476418 + 3;\n                    goto code_r0x00412ce5;\n                }\n                if (cVar1 != 'V') {\n                    if (cVar1 == 'W') {\n                        var_2h._1_1_ = '\\x01';\n                        goto code_r0x00412d0a;\n                    }\n                    if (cVar1 != 'Z') goto code_r0x00412ce5;\n                }\n                *0x476418 = *0x476418 + 3;\n            }\n        }\n        else {\ncode_r0x00412ce5:\n            if ((**0x476418 == '$') && ((*0x476418)[1] != '$')) {\n                *0x476418 = *0x476418 + 1;\n                piVar4 = fcn.00402c43(&fcn.00402c93::var_2ch);\n            }\n            else {\n                piVar4 = fcn.00403a03(&fcn.00402c93::var_34h);\n            }\n            piVar2 = *0x476414;\n            iVar6 = piVar4[1];\n            iVar7 = *piVar4;\n            var_14h = iVar7;\n            var_10h = iVar6;\n            if ((*0x476418 - pcVar3 < 2) || (**0x476414 == 9)) {\ncode_r0x00412d7a:\n                if (iVar7 != 0) {\n                    if (var_2h == '\\0') {\n                        fcn.00402b99(0x2c);\n                    }\n                    fcn.00402310(0x412d9a);\n                    uVar5 = var_8h;\n                    if (var_2h._1_1_ != '\\0') {\n                        var_1ch = 0x46aa98;\n                        var_18h = 3;\n                        fcn.00403f03(&fcn.00402c93::var_1ch);\n                        uVar5 = var_8h;\n                    }\n                    goto code_r0x00412dc4;\n                }\n            }\n            else if (iVar7 != 0) {\n                piVar4 = fcn.004038c8(8);\n                if (piVar4 != NULL) {\n                    *piVar4 = iVar7;\n                    piVar4[1] = iVar6;\n                    *piVar2 = *piVar2 + 1;\n                    piVar2[*piVar2 + 1] = piVar4;\n                }\n                goto code_r0x00412d7a;\n            }\n            uVar5 = var_8h;\n            if ('\\x01' < iVar6) {\n                fcn.004014dd(2);\n                return arg_8h;\n            }\n        }\ncode_r0x00412dc4:\n        var_2h._0_1_ = '\\0';\n    } while (uVar5 == '\\0');\n    *0x476425 = 0;\n    *arg_8h = var_ch;\n    arg_8h[1] = uVar5;\n    return arg_8h;\n}\n",
        "token_count": 1211
    },
    "00402d1f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402d1f(uchar (*arg_8h) [32], uint32_t arg_ch)\n\n{\n    uchar *puVar1;\n    uchar (*pauVar2) [32];\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uchar auVar5 [16];\n    uchar auVar6 [32];\n    uchar in_YMM1 [32];\n    uint8_t uVar7;\n    \n    if (*0x4763a8 < 5) {\n        if (*0x4763a8 < 1) {\n            pauVar2 = arg_8h;\n            if (arg_8h != *arg_8h + arg_ch) {\n                do {\n                    if ((*pauVar2)[0] == '\\0') break;\n                    pauVar2 = *pauVar2 + 1;\n                } while (pauVar2 != *arg_8h + arg_ch);\n            }\n            uVar3 = pauVar2 - arg_8h;\n        }\n        else {\n            uVar4 = -((arg_8h & 0xf) != 0) & 0x10 - (arg_8h & 0xf);\n            if (arg_ch < uVar4) {\n                uVar4 = arg_ch;\n            }\n            pauVar2 = arg_8h;\n            if (arg_8h != *arg_8h + uVar4) {\n                do {\n                    if ((*pauVar2)[0] == '\\0') break;\n                    pauVar2 = *pauVar2 + 1;\n                } while (pauVar2 != *arg_8h + uVar4);\n            }\n            uVar3 = pauVar2 - arg_8h;\n            if (uVar3 == uVar4) {\n                puVar1 = *pauVar2;\n                while ((pauVar2 != puVar1 + (arg_ch - uVar4 & 0xfffffff0) &&\n                       (uVar7 = -((*pauVar2)[0xf] == '\\0'), \n                       auVar5 = CONCAT115(uVar7, CONCAT114(-((*pauVar2)[0xe] == '\\0'), \n                                                           CONCAT113(-((*pauVar2)[0xd] == '\\0'), \n                                                                     CONCAT112(-((*pauVar2)[0xc] == '\\0'), \n                                                                               CONCAT111(-((*pauVar2)[0xb] == '\\0'), \n                                                                                         CONCAT110(-((*pauVar2)[10] ==\n                                                                                                    '\\0'), CONCAT19(-((*\n                                                            pauVar2)[9] == '\\0'), \n                                                            CONCAT18(-((*pauVar2)[8] == '\\0'), \n                                                                     CONCAT17(-((*pauVar2)[7] == '\\0'), \n                                                                              CONCAT16(-((*pauVar2)[6] == '\\0'), \n                                                                                       CONCAT15(-((*pauVar2)[5] == '\\0')\n                                                                                                , CONCAT14(-((*pauVar2)\n                                                                                                             [4] == '\\0'\n                                                                                                            ), CONCAT13(\n                                                            -((*pauVar2)[3] == '\\0'), \n                                                            CONCAT12(-((*pauVar2)[2] == '\\0'), \n                                                                     CONCAT11(-((*pauVar2)[1] == '\\0'), \n                                                                              -((*pauVar2)[0] == '\\0')))))))))))))))), \n                       (SUB161(auVar5 >> 7, 0) & 1 | (SUB161(auVar5 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar5 >> 0x17, 0) & 1) << 2 | (SUB161(auVar5 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar5 >> 0x27, 0) & 1) << 4 | (SUB161(auVar5 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar5 >> 0x37, 0) & 1) << 6 | (SUB161(auVar5 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar5 >> 0x47, 0) & 1) << 8 | (SUB161(auVar5 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar5 >> 0x57, 0) & 1) << 10 | (SUB161(auVar5 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar5 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar5 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar5 >> 0x77, 0) & 1) << 0xe | (uVar7 >> 7) << 0xf) == 0))) {\n                    pauVar2 = *pauVar2 + 0x10;\n                }\n                for (; (pauVar2 != *arg_8h + arg_ch && ((*pauVar2)[0] != '\\0')); pauVar2 = *pauVar2 + 1) {\n                }\n                uVar3 = pauVar2 - arg_8h;\n            }\n        }\n    }\n    else {\n        uVar4 = -((arg_8h & 0x1f) != 0) & 0x20 - (arg_8h & 0x1f);\n        if (arg_ch < uVar4) {\n            uVar4 = arg_ch;\n        }\n        pauVar2 = arg_8h;\n        if (arg_8h != *arg_8h + uVar4) {\n            do {\n                if ((*pauVar2)[0] == '\\0') break;\n                pauVar2 = *pauVar2 + 1;\n            } while (pauVar2 != *arg_8h + uVar4);\n        }\n        uVar3 = pauVar2 - arg_8h;\n        if (uVar3 == uVar4) {\n            puVar1 = *pauVar2;\n            auVar5 = vpxor_avx(SUB3216(in_YMM1, 0), SUB3216(in_YMM1, 0));\n            while ((pauVar2 != puVar1 + (arg_ch - uVar4 & 0xffffffe0) &&\n                   (auVar6 = vpcmpeqb_avx2(ZEXT1632(auVar5), *pauVar2), \n                   (SUB321(auVar6 >> 7, 0) & 1 | (SUB321(auVar6 >> 0xf, 0) & 1) << 1 |\n                    (SUB321(auVar6 >> 0x17, 0) & 1) << 2 | (SUB321(auVar6 >> 0x1f, 0) & 1) << 3 |\n                    (SUB321(auVar6 >> 0x27, 0) & 1) << 4 | (SUB321(auVar6 >> 0x2f, 0) & 1) << 5 |\n                    (SUB321(auVar6 >> 0x37, 0) & 1) << 6 | (SUB321(auVar6 >> 0x3f, 0) & 1) << 7 |\n                    (SUB321(auVar6 >> 0x47, 0) & 1) << 8 | (SUB321(auVar6 >> 0x4f, 0) & 1) << 9 |\n                    (SUB321(auVar6 >> 0x57, 0) & 1) << 10 | (SUB321(auVar6 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB321(auVar6 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar6 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB321(auVar6 >> 0x77, 0) & 1) << 0xe | SUB321(auVar6 >> 0x7f, 0) << 0xf |\n                    (SUB321(auVar6 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar6 >> 0x8f, 0) & 1) << 0x11 |\n                    (SUB321(auVar6 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar6 >> 0x9f, 0) & 1) << 0x13 |\n                    (SUB321(auVar6 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar6 >> 0xaf, 0) & 1) << 0x15 |\n                    (SUB321(auVar6 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar6 >> 0xbf, 0) << 0x17 |\n                    (SUB321(auVar6 >> 199, 0) & 1) << 0x18 | (SUB321(auVar6 >> 0xcf, 0) & 1) << 0x19 |\n                    (SUB321(auVar6 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar6 >> 0xdf, 0) & 1) << 0x1b |\n                    (SUB321(auVar6 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar6 >> 0xef, 0) & 1) << 0x1d |\n                    (SUB321(auVar6 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar6 >> 0xff, 0) << 0x1f) == 0))) {\n                pauVar2 = pauVar2[1];\n            }\n            for (; (pauVar2 != *arg_8h + arg_ch && ((*pauVar2)[0] != '\\0')); pauVar2 = *pauVar2 + 1) {\n            }\n            uVar3 = pauVar2 - arg_8h;\n            vzeroupper_avx();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 2381
    },
    "00402d29": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00402d29(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_stack_ffffffe0;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x476418 != '\\0') {\n        fcn.00402c43(&var_8h);\n        fcn.00402b99(0x2e);\n        arg_8h_00 = fcn.00401f82(&var_10h, 0, 0);\n        fcn.00402310(arg_8h_00);\n        if (**0x476418 == '@') {\n            *0x476418 = *0x476418 + 1;\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n        in_stack_ffffffe0 = 2;\n    }\n    fcn.004014dd(in_stack_ffffffe0);\n    return arg_8h;\n}\n",
        "token_count": 238
    },
    "00402d33": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402d33(ushort *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        *arg_8h = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028bf(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 341
    },
    "00402e46": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.00402e46(uint16_t *arg_8h, int32_t *arg_ch, uint32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint32_t uVar3;\n    uint16_t *puVar4;\n    int32_t iVar5;\n    int32_t arg_8h_00;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    arg_8h_00 = *arg_ch;\n    if (arg_8h == NULL) {\n        iVar2 = 0;\n        uVar1 = fcn.00457d53(arg_8h_00);\n        while (iVar5 = fcn.00402923(0, arg_8h_00, uVar1, arg_14h, arg_18h),  iVar5 != -1) {\n            if (iVar5 == 0) {\n                return iVar2;\n            }\n            if (iVar5 == 4) {\n                iVar2 = iVar2 + 1;\n            }\n            arg_8h_00 = arg_8h_00 + iVar5;\n            iVar2 = iVar2 + 1;\n            uVar1 = fcn.00457d53(arg_8h_00);\n        }\n        *(arg_18h + 0x1c) = 1;\n        *(arg_18h + 0x18) = 0x2a;\n    }\n    else {\n        puVar4 = arg_8h;\n        var_8h = in_ECX;\n        if (arg_10h != 0) {\n            do {\n                uVar1 = fcn.00457d53(arg_8h_00);\n                iVar2 = fcn.00402923(&var_8h, arg_8h_00, uVar1, arg_14h, arg_18h);\n                if (iVar2 == -1) {\n                    *arg_ch = arg_8h_00;\n                    *(arg_18h + 0x1c) = 1;\n                    *(arg_18h + 0x18) = 0x2a;\n                    return -1;\n                }\n                if (iVar2 == 0) {\n                    arg_8h_00 = 0;\n                    *puVar4 = 0;\n                    break;\n                }\n                uVar3 = var_8h;\n                if (0xffff < var_8h) {\n                    if (arg_10h < 2) break;\n                    var_8h = var_8h - 0x10000;\n                    arg_10h = arg_10h - 1;\n                    *puVar4 = var_8h >> 10 | 0xd800;\n                    puVar4 = puVar4 + 1;\n                    uVar3 = var_8h & 0x3ff | 0xdc00;\n                }\n                *puVar4 = uVar3;\n                arg_8h_00 = arg_8h_00 + iVar2;\n                puVar4 = puVar4 + 1;\n                arg_10h = arg_10h - 1;\n            } while (arg_10h != 0);\n        }\n        iVar5 = puVar4 - arg_8h >> 1;\n        *arg_ch = arg_8h_00;\n    }\n    return iVar5;\n}\n",
        "token_count": 778
    },
    "00402e5f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00402e5f(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h, uint32_t arg_24h, uint noname_8, uint arg_2ch, int32_t arg_30h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t in_ECX;\n    uint arg_28h;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if (arg_ch == 0) {\n        *(arg_30h + 0x1c) = 1;\n        *(arg_30h + 0x18) = 0x16;\n    }\n    else if ((arg_10h == 0) || (arg_14h == 0)) {\n        *(arg_30h + 0x1c) = 1;\n        *(arg_30h + 0x18) = 0x16;\n    }\n    else {\n        if (arg_18h != 0) {\n            var_4h = in_ECX;\n            if ((((arg_1ch == 0x41) || (arg_1ch == 0x45)) || (arg_1ch == 0x46)) ||\n               (var_4h = in_ECX & 0xffffff00,  arg_1ch == 0x47)) {\n                var_4h = CONCAT31(var_4h._1_3_, 1);\n            }\n            if (((arg_24h & 8) == 0) && (arg_8h_00 = fcn.00403053(arg_8h),  arg_8h_00 != 0)) {\n                var_8h._1_3_ = in_ECX >> 8;\n                if ((*(arg_8h + 4) < 1) && (*(arg_8h + 4) < 0)) {\n                    var_8h = CONCAT31(var_8h._1_3_, 1);\n                }\n                else {\n                    var_8h = var_8h._1_3_ << 8;\n                }\n                uVar1 = fcn.0044e84a(arg_8h_00, var_8h, arg_ch, arg_10h, var_4h);\n                return uVar1;\n            }\n            if ((arg_24h & 0x10) == 0) {\n                uVar1 = 2;\n            }\n            else {\n                uVar1 = 3;\n            }\n            arg_28h = 0;\n            if ((arg_24h & 0x20) != 0) {\n                arg_28h = arg_2ch;\n            }\n            if (arg_1ch < 0x62) {\n                if ((arg_1ch == 0x61) || (arg_1ch == 0x41)) {\n                    uVar1 = fcn.0044df0a(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, var_4h, uVar1, arg_28h, \n                                         arg_30h);\n                    return uVar1;\n                }\n                arg_1ch = arg_1ch + -0x45;\n            }\n            else {\n                arg_1ch = arg_1ch + -0x65;\n            }\n            if (arg_1ch == 0) {\n                uVar1 = fcn.0044e301(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, var_4h, uVar1, arg_28h, arg_30h\n                                    );\n                return uVar1;\n            }\n            if (arg_1ch != 1) {\n                uVar1 = fcn.0044e748(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, var_4h, uVar1, arg_28h, arg_30h\n                                    );\n                return uVar1;\n            }\n            uVar1 = fcn.0044e564(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, arg_28h, arg_30h);\n            return uVar1;\n        }\n        *(arg_30h + 0x1c) = 1;\n        *(arg_30h + 0x18) = 0x16;\n    }\n    fcn.00402c20(0, 0, 0, 0, 0, arg_30h);\n    return 0x16;\n}\n",
        "token_count": 1087
    },
    "00402e69": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402e69(uchar *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        *arg_8h = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401f23(in_ECX + 0x464 + uVar1 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 361
    },
    "00402e91": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402e91(int32_t param_1)\n\n{\n    if (*(param_1 + 0x14) != '\\0') {\n        fcn.004042f5(*(param_1 + 8));\n        *(param_1 + 0x14) = 0;\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00402eb9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __thiscall fcn.00402eb9(uint32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint32_t arg_ch;\n    int32_t iVar5;\n    uint16_t uVar6;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    uint arg_1ch;\n    uint32_t noname_0;\n    uint32_t var_4h;\n    \n    cVar3 = fcn.004036c0(*(param_1 + 8));\n    if (cVar3 != '\\0') {\n        var_4h = param_1;\n        if (*(param_1 + 0xc) != 0) {\n            do {\n                do {\n                    *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                    if (*(param_1 + 0x450) == 2) {\n                        return *(param_1 + 0x14);\n                    }\n                    *(param_1 + 0x34) = 0;\n                    *(param_1 + 0x18) = 0;\n                    uVar4 = **(param_1 + 0xc);\n                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                    *(param_1 + 0x2d) = uVar4;\n                } while (uVar4 == 0);\n                var_4h = var_4h & 0xffffff00 | uVar4;\n                uVar6 = CONCAT11(uVar4, uVar4);\n                do {\n                    if (*(param_1 + 0x14) < 0) break;\n                    arg_ch = *(param_1 + 0x18);\n                    noname_0 = var_4h;\n                    uVar4 = fcn.00402c66(var_4h, arg_ch);\n                    *(param_1 + 0x18) = uVar4;\n                    if (7 < uVar4) {\n                        iVar5 = *(param_1 + 8);\n                        *(iVar5 + 0x1c) = 1;\n                        *(iVar5 + 0x18) = 0x16;\n                        arg_1ch = *(param_1 + 8);\n                        goto code_r0x0042e176;\n                    }\n                    if (7 < uVar4) {\n                        return 0xffffffff;\n                    }\n                    cVar3 = uVar6;\n    // switch table (8 cases) at 0x42e3e8\n                    switch(uVar4) {\n                    case 0:\n                        iVar5 = *(param_1 + 8);\n                        *(param_1 + 0x38) = 0;\n                        if (*(iVar5 + 0x14) == '\\0') {\n                            fcn.004024f0();\n                            uVar6 = CONCAT11(*(param_1 + 0x2d), *(param_1 + 0x2d));\n                        }\n                        cVar3 = uVar6 >> 8;\n                        iVar5 = fcn.00404192(**(iVar5 + 0xc), uVar6, 0x8000);\n                        ppiVar1 = param_1 + 0x448;\n                        if (iVar5 != 0) {\n                            piVar2 = *ppiVar1;\n                            if (piVar2[2] == piVar2[1]) {\n                                if (*(piVar2 + 3) == '\\0') {\n                                    *(param_1 + 0x14) = 0xffffffff;\n                                }\n                                else {\n                                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                }\n                            }\n                            else {\n                                *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                piVar2[2] = piVar2[2] + 1;\n                                ***ppiVar1 = uVar6;\n                                **ppiVar1 = **ppiVar1 + 1;\n                            }\n                            cVar3 = **(param_1 + 0xc);\n                            *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                            *(param_1 + 0x2d) = cVar3;\n                            if (cVar3 == '\\0') {\n                                iVar5 = *(param_1 + 8);\n                                *(iVar5 + 0x1c) = 1;\n                                *(iVar5 + 0x18) = 0x16;\n                                fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                                iVar5 = *(param_1 + 8);\n                                *(iVar5 + 0x1c) = 1;\n                                *(iVar5 + 0x18) = 0x16;\n                                fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                                return 0xffffffff;\n                            }\n                        }\n                        piVar2 = *ppiVar1;\n                        if (piVar2[2] == piVar2[1]) {\n                            if (*(piVar2 + 3) == '\\0') {\n                                *(param_1 + 0x14) = 0xffffffff;\n                            }\n                            else {\n                                *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                            }\n                        }\n                        else {\n                            *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                            piVar2[2] = piVar2[2] + 1;\n                            ***ppiVar1 = cVar3;\n                            **ppiVar1 = **ppiVar1 + 1;\n                        }\n                        break;\n                    case 1:\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x1c) = 0;\n                        *(param_1 + 0x24) = 0xffffffff;\n                        *(param_1 + 0x28) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x38) = 0;\n                        break;\n                    case 2:\n                        if (cVar3 == ' ') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                        }\n                        else if (cVar3 == '#') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                        }\n                        else if (cVar3 == '+') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                        }\n                        else if (cVar3 == '-') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                        }\n                        else if (cVar3 == '0') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                        }\n                        break;\n                    case 3:\n                        if (cVar3 != '*') {\n                            iVar5 = param_1 + 0x20;\n                            goto code_r0x0042e2f2;\n                        }\n                        *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n                        iVar5 = *(*(param_1 + 0x10) + -4);\n                        *(param_1 + 0x20) = iVar5;\n                        if (iVar5 < 0) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                            *(param_1 + 0x20) = -iVar5;\n                        }\ncode_r0x0042e316:\n                        cVar3 = '\\x01';\n                        goto code_r0x0042e351;\n                    case 4:\n                        *(param_1 + 0x24) = 0;\n                        break;\n                    case 5:\n                        if (cVar3 == '*') {\n                            *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n                            iVar5 = *(*(param_1 + 0x10) + -4);\n                            *(param_1 + 0x24) = iVar5;\n                            if (iVar5 < 0) {\n                                *(param_1 + 0x24) = 0xffffffff;\n                            }\n                            goto code_r0x0042e316;\n                        }\n                        iVar5 = param_1 + 0x24;\ncode_r0x0042e2f2:\n                        cVar3 = fcn.0040201d(iVar5);\n                        goto code_r0x0042e351;\n                    case 6:\n                        cVar3 = fcn.00404566();\n                        goto code_r0x0042e351;\n                    case 7:\n                        cVar3 = fcn.0040192e(noname_0, arg_ch, unaff_ESI, unaff_EBX, var_4h, unaff_EBP, unaff_retaddr, \n                                             param_2, param_3, param_4, param_5);\ncode_r0x0042e351:\n                        if (cVar3 == '\\0') {\n                            return 0xffffffff;\n                        }\n                    }\n                    uVar4 = **(param_1 + 0xc);\n                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                    uVar6 = CONCAT11(uVar4, uVar4);\n                    *(param_1 + 0x2d) = uVar4;\n                    var_4h = var_4h & 0xffffff00 | uVar4;\n                } while (uVar4 != 0);\n            } while( true );\n        }\n        iVar5 = *(param_1 + 8);\n        *(iVar5 + 0x1c) = 1;\n        *(iVar5 + 0x18) = 0x16;\n        arg_1ch = *(param_1 + 8);\ncode_r0x0042e176:\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 2376
    },
    "00402edc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402edc(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n        uVar4 = *(*(in_ECX + 0x10) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x10) + -4);\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004028bf(in_ECX + 0x464 + uVar1 * 0x10, 2, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar4 = puVar3[1];\n        *arg_8h = *puVar3;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 413
    },
    "00402f22": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00402f22(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_14h;\n    int32_t iVar1;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    fcn.00403c79(arg_10h);\n    if ((arg_8h < -1) || (0xff < arg_8h)) {\n        if (*(*var_1ch + (arg_8h >> 8 & 0xffU) * 2) < 0) {\n            var_10h._2_1_ = 0;\n            arg_14h = 2;\n            var_10h._0_1_ = arg_8h >> 8;\n            var_10h._1_1_ = arg_8h;\n        }\n        else {\n            var_10h._1_1_ = 0;\n            arg_14h = 1;\n            var_10h._0_1_ = arg_8h;\n        }\n        var_ch = 0;\n        var_8h._0_2_ = 0;\n        iVar1 = fcn.004011e0(&var_1ch, 1, &var_10h, arg_14h, &var_ch, var_1ch[2], 1);\n        if (iVar1 == 0) {\n            if (var_14h != '\\0') {\n                *(var_20h + 0x350) = *(var_20h + 0x350) & 0xfffffffd;\n            }\n            goto code_r0x0044f938;\n        }\n    }\n    if (var_14h != '\\0') {\n        *(var_20h + 0x350) = *(var_20h + 0x350) & 0xfffffffd;\n    }\ncode_r0x0044f938:\n    fcn.0040241e(arg_10h);\n    return;\n}\n",
        "token_count": 504
    },
    "00402f2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar __fastcall fcn.00402f2c(uint *param_1)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t var_4h;\n    \n    var_4h = param_1 & 0xffff0000;\n    *(param_1 + 0xe) = 1;\n    cVar1 = fcn.00402d33(&var_4h);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00402f18();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.00401555(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n            if (cVar1 == '\\0') {\n                iVar3 = param_1[2];\n                var_4h = var_4h & 0xffff00ff;\n                if (*(iVar3 + 0x14) == '\\0') {\n                    fcn.004024f0();\n                }\n                puVar2 = param_1[0x110];\n                if (param_1[0x110] == NULL) {\n                    puVar2 = param_1 + 0xf;\n                }\n                iVar3 = fcn.0040123f(puVar2, &var_4h, *(*(iVar3 + 0xc) + 4), iVar3);\n                if (iVar3 < 0) {\n                    *(param_1 + 0xb) = 1;\n                }\n            }\n            else {\n                puVar2 = param_1[0x110];\n                if (param_1[0x110] == NULL) {\n                    puVar2 = param_1 + 0xf;\n                }\n                *puVar2 = var_4h;\n            }\n            puVar2 = param_1 + 0xf;\n            if (param_1[0x110] != NULL) {\n                puVar2 = param_1[0x110];\n            }\n            param_1[0xc] = puVar2;\n            param_1[0xd] = 1;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 502
    },
    "00402f72": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402f72(int32_t *arg_8h, uchar *arg_ch, uint32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t arg_14h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    arg_14h_00 = arg_18h;\n    if ((arg_ch == NULL) && (arg_10h != 0)) {\n        if (arg_8h == NULL) {\n            return 0;\n        }\n        *arg_8h = 0;\n        return 0;\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = -1;\n    }\n    if (arg_10h < 0x80000000) {\n        if (*(arg_18h + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        var_8h = *(*(arg_14h_00 + 0xc) + 8);\n        if (var_8h == 0xfde9) {\n            var_ch = 0;\n            var_8h = 0;\n            iVar1 = fcn.00403cba(arg_ch, arg_14h & 0xffff, &var_ch, arg_14h_00);\n            if (arg_8h != NULL) {\n                *arg_8h = iVar1;\n            }\n            if (iVar1 < 5) {\n                return 0;\n            }\n            if (*(arg_14h_00 + 0x1c) != '\\0') {\n                return *(arg_14h_00 + 0x18);\n            }\n            return 0;\n        }\n        if (*(*(arg_14h_00 + 0xc) + 0xa8) == 0) {\n            var_4h = 0xff;\n            if (0xff < arg_14h) {\n                if ((arg_ch != NULL) && (arg_10h != 0)) {\n                    fcn.0040248c(arg_ch, 0, arg_10h);\n                }\n                goto code_r0x0044ecd8;\n            }\n            if (arg_ch == NULL) {\ncode_r0x0044ecf1:\n                if (arg_8h != NULL) {\n                    *arg_8h = 1;\n                }\n                return 0;\n            }\n            if (arg_10h != 0) {\n                *arg_ch = arg_14h;\n                goto code_r0x0044ecf1;\n            }\n        }\n        else {\n            var_4h = 0;\n            iVar1 = fcn.00404458(var_8h, 0, &arg_14h, 1, arg_ch, arg_10h, 0, &var_4h);\n            if (iVar1 != 0) {\n                if (var_4h == 0) {\n                    if (arg_8h == NULL) {\n                        return 0;\n                    }\n                    *arg_8h = iVar1;\n                    return 0;\n                }\ncode_r0x0044ecd8:\n                *(arg_14h_00 + 0x18) = 0x2a;\n                *(arg_14h_00 + 0x1c) = 1;\n                return 0x2a;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 != 0x7a) goto code_r0x0044ecd8;\n            if ((arg_ch != NULL) && (arg_10h != 0)) {\n                fcn.0040248c(arg_ch, 0, arg_10h);\n            }\n        }\n        uVar2 = 0x22;\n    }\n    else {\n        uVar2 = 0x16;\n    }\n    *(arg_14h_00 + 0x18) = uVar2;\n    *(arg_14h_00 + 0x1c) = 1;\n    fcn.00402c20(0, 0, 0, 0, 0, arg_14h_00);\n    return uVar2;\n}\n",
        "token_count": 946
    },
    "00402fe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402fe0(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    \n    iVar2 = arg_10h;\n    fcn.00403e4f();\n    arg_10h = 0;\n    uVar4 = *(iVar2 + 0x100);\n    uVar3 = *(iVar2 + 0x101);\n    if (arg_ch != 0) {\n        do {\n            uVar4 = uVar4 + 1;\n            uVar5 = uVar4;\n            cVar1 = *(uVar5 + iVar2);\n            uVar3 = uVar3 + cVar1;\n            *(uVar5 + iVar2) = *(uVar3 + iVar2);\n            *(uVar3 + iVar2) = cVar1;\n            *(arg_10h + arg_8h) = *(arg_10h + arg_8h) ^ *(cVar1 + *(uVar5 + iVar2) + iVar2);\n            arg_10h = arg_10h + 1;\n        } while (arg_10h < arg_ch);\n    }\n    *(iVar2 + 0x100) = uVar4;\n    *(iVar2 + 0x101) = uVar3;\n    return;\n}\n",
        "token_count": 324
    },
    "00402ff9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402ff9(ulong *arg_8h, ulong *arg_ch, ulong *arg_10h, int32_t arg_14h)\n\n{\n    ulong uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_20h;\n    char *var_1ch;\n    ulong uStack28;\n    ulong uStack20;\n    ulong uStack12;\n    \n    if (*0x4775ec == 0) {\n        pcVar2 = fcn.004023a1;\n    }\n    else {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x477620);\n    }\n    if (0x1a < arg_14h) {\n        if (arg_14h != 0x1b) {\n            if (arg_14h == 0x1c) {\n                var_1ch = 0x471d24;\n            }\n            else if (arg_14h == 0x31) {\n                var_1ch = \"sqrt\";\n            }\n            else if (arg_14h == 0x3a) {\n                var_1ch = \"acos\";\n            }\n            else {\n                if (arg_14h != 0x3d) {\n                    if ((arg_14h != 1000) && (arg_14h != 0x3e9)) {\n                        return;\n                    }\n                    uVar1 = *arg_8h;\n                    goto code_r0x0045dbaf;\n                }\n                var_1ch = \"asin\";\n            }\n            goto code_r0x0045dc0f;\n        }\n        var_20h = 2;\ncode_r0x0045dc55:\n        var_1ch = 0x471d24;\n        goto code_r0x0045dc5c;\n    }\n    if (arg_14h == 0x1a) {\n        uVar1 = 0x3ff0000000000000;\ncode_r0x0045dbaf:\n        *arg_10h = uVar1;\n        return;\n    }\n    if (0xe < arg_14h) {\n        if (arg_14h == 0xf) {\n            var_1ch = 0x471d20;\n        }\n        else {\n            if (arg_14h == 0x18) {\n                var_20h = 3;\n                goto code_r0x0045dc55;\n            }\n            if (arg_14h != 0x19) {\n                return;\n            }\n            var_1ch = 0x471d24;\n        }\n        var_20h = 4;\n        uStack28 = *arg_8h;\n        uStack20 = *arg_ch;\n        uStack12 = *arg_10h;\n        (**0x47a000)(&var_20h);\n        (*pcVar2)();\n        goto code_r0x0045dc92;\n    }\n    if (arg_14h == 0xe) {\n        var_20h = 3;\n        var_1ch = 0x471d20;\n    }\n    else {\n        if (arg_14h != 2) {\n            if (arg_14h == 3) {\n                var_1ch = 0x471d14;\n            }\n            else {\n                if (arg_14h == 8) {\n                    var_20h = 2;\n                    var_1ch = \"log10\";\n                    goto code_r0x0045dc5c;\n                }\n                if (arg_14h != 9) {\n                    return;\n                }\n                var_1ch = \"log10\";\n            }\ncode_r0x0045dc0f:\n            var_20h = 1;\n            uStack28 = *arg_8h;\n            uStack20 = *arg_ch;\n            uStack12 = *arg_10h;\n            (**0x47a000)(&var_20h);\n            iVar3 = (*pcVar2)();\n            if (iVar3 == 0) {\n                puVar4 = fcn.004029b9();\n                *puVar4 = 0x21;\n            }\n            goto code_r0x0045dc92;\n        }\n        var_20h = 2;\n        var_1ch = 0x471d14;\n    }\ncode_r0x0045dc5c:\n    uStack28 = *arg_8h;\n    uStack20 = *arg_ch;\n    uStack12 = *arg_10h;\n    (**0x47a000)(&var_20h);\n    iVar3 = (*pcVar2)();\n    if (iVar3 == 0) {\n        puVar4 = fcn.004029b9();\n        *puVar4 = 0x22;\n    }\ncode_r0x0045dc92:\n    *arg_10h = uStack12;\n    return;\n}\n",
        "token_count": 1080
    },
    "00403003": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403003(uint *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 3) == '\\0') {\n        iVar2 = fcn.00403df5(param_1[2] + 0x250, 0x55, *param_1, param_1[1]);\n        if (iVar2 != 0) {\n            fcn.0040277f(0, 0, 0, 0, 0);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0040303a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040303a(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t iVar6;\n    uint32_t arg_8h;\n    uint in_stack_ffffffd4;\n    uint in_stack_ffffffd8;\n    uint arg_1ch;\n    \n    cVar4 = fcn.00403175(*(param_1 + 8));\n    if (cVar4 != '\\0') {\n        if (*(param_1 + 0xc) != 0) {\n            do {\n                do {\n                    *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                    if (*(param_1 + 0x450) == 2) {\n                        return *(param_1 + 0x14);\n                    }\n                    *(param_1 + 0x34) = 0;\n                    *(param_1 + 0x18) = 0;\n                    uVar1 = **(param_1 + 0xc);\n                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                    *(param_1 + 0x2e) = uVar1;\n                } while (uVar1 == 0);\n                do {\n                    arg_8h = uVar1;\n                    iVar6 = *(param_1 + 0x14);\n                    if (iVar6 < 0) break;\n                    uVar5 = fcn.00403aad(arg_8h, *(param_1 + 0x18));\n                    *(param_1 + 0x18) = uVar5;\n    // switch table (8 cases) at 0x42ef0d\n                    switch(uVar5) {\n                    case 0:\n                        *(param_1 + 0x38) = 1;\n                        iVar2 = *(param_1 + 0x448);\n                        if (*(iVar2 + 8) == *(iVar2 + 4)) {\n                            if (*(iVar2 + 0xc) == '\\0') {\n                                iVar6 = -1;\n                            }\n                            else {\n                                iVar6 = iVar6 + 1;\n                            }\n                            *(param_1 + 0x14) = iVar6;\n                        }\n                        else {\n                            *(param_1 + 0x14) = iVar6 + 1;\n                            *(iVar2 + 8) = *(iVar2 + 8) + 1;\n                            ***(param_1 + 0x448) = uVar1;\n                            piVar3 = *(param_1 + 0x448);\n                            *piVar3 = *piVar3 + 2;\n                        }\n                        break;\n                    case 1:\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x1c) = 0;\n                        *(param_1 + 0x24) = 0xffffffff;\n                        *(param_1 + 0x28) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x38) = 0;\n                        break;\n                    case 2:\n                        if (arg_8h == 0x20) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                        }\n                        else if (arg_8h == 0x23) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                        }\n                        else if (arg_8h == 0x2b) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                        }\n                        else if (arg_8h == 0x2d) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                        }\n                        else if (arg_8h == 0x30) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                        }\n                        break;\n                    case 3:\n                        if (uVar1 == 0x2a) {\n                            *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n                            iVar6 = *(*(param_1 + 0x10) + -4);\n                            *(param_1 + 0x20) = iVar6;\n                            if (iVar6 < 0) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                                *(param_1 + 0x20) = -iVar6;\n                            }\n                            goto code_r0x0042ee5f;\n                        }\n                        iVar6 = param_1 + 0x20;\ncode_r0x0042ee3b:\n                        cVar4 = fcn.004025bd(iVar6);\n                        goto code_r0x0042ee9d;\n                    case 4:\n                        *(param_1 + 0x24) = 0;\n                        break;\n                    case 5:\n                        if (uVar1 != 0x2a) {\n                            iVar6 = param_1 + 0x24;\n                            goto code_r0x0042ee3b;\n                        }\n                        *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n                        iVar6 = *(*(param_1 + 0x10) + -4);\n                        *(param_1 + 0x24) = iVar6;\n                        if (iVar6 < 0) {\n                            *(param_1 + 0x24) = 0xffffffff;\n                        }\ncode_r0x0042ee5f:\n                        cVar4 = '\\x01';\n                        goto code_r0x0042ee9d;\n                    case 6:\n                        cVar4 = fcn.00403a35();\n                        goto code_r0x0042ee9d;\n                    case 7:\n                        cVar4 = fcn.00402707();\ncode_r0x0042ee9d:\n                        if (cVar4 == '\\0') {\n                            return 0xffffffff;\n                        }\n                        break;\n                    default:\n                        iVar6 = *(param_1 + 8);\n                        *(iVar6 + 0x1c) = 1;\n                        *(iVar6 + 0x18) = 0x16;\n                        arg_1ch = *(param_1 + 8);\n                        in_stack_ffffffd8 = 0;\n                        in_stack_ffffffd4 = 0;\n                        goto code_r0x0042ed1b;\n                    case 0xbad1abe1:\n                        goto code_r0x0042ed26;\n                    }\n                    uVar1 = **(param_1 + 0xc);\n                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                    *(param_1 + 0x2e) = uVar1;\n                } while (uVar1 != 0);\n            } while ((*(param_1 + 0x18) == '\\0') || (*(param_1 + 0x18) == '\\a'));\n        }\n        iVar6 = *(param_1 + 8);\n        *(iVar6 + 0x1c) = 1;\n        *(iVar6 + 0x18) = 0x16;\n        arg_1ch = 0;\ncode_r0x0042ed1b:\n        fcn.00402c20(0, in_stack_ffffffd4, in_stack_ffffffd8, 0, 0, arg_1ch);\n    }\ncode_r0x0042ed26:\n    return 0xffffffff;\n}\n",
        "token_count": 1745
    },
    "00403058": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403058(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    \n    *(param_1 + 0x458) = *(param_1 + 0x458) + 1;\n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if ((iVar1 != 3) && ((iVar1 != 2 || (*(param_1 + 0x45c) != 1)))) {\n        *(param_1 + 0xaa4) = 0xffffffff;\n        *(param_1 + 0xaa8) = 0xffffffff;\n        *(param_1 + 0x45c) = 0;\n        *(param_1 + 0x20) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0xc) = *(param_1 + 0x460);\n        return CONCAT31(Var2, 1);\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 239
    },
    "0040306c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040306c(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t in_ECX;\n    uint32_t var_4h;\n    \n    var_4h = in_ECX;\n    if ((arg_14h != 10) || (var_4h = CONCAT31(in_ECX >> 8, 1),  -1 < arg_8h)) {\n        var_4h = var_4h & 0xffffff00;\n    }\n    fcn.004510e2(arg_8h, arg_ch, arg_10h, arg_14h, var_4h);\n    return;\n}\n",
        "token_count": 169
    },
    "004030d5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004030d5(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    char *pcVar2;\n    uint32_t arg_ch;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar1 = true;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    do {\n        if (**0x476418 == '@') {\n            return arg_8h;\n        }\n        if (**0x476418 == 'Z') {\n            return arg_8h;\n        }\n        if (bVar1) {\n            bVar1 = false;\n        }\n        else {\n            fcn.00402b99(0x2c);\n        }\n        pcVar2 = *0x476418;\n        if (**0x476418 == '\\0') {\n            if ('\\x01' < *(arg_8h + 1)) {\n                return arg_8h;\n            }\n            if (*arg_8h != 0) {\n                fcn.00403b7f(0x46b0a0);\n                return arg_8h;\n            }\n            fcn.004022e8(1);\n            return arg_8h;\n        }\n        arg_ch = **0x476418 - 0x30;\n        if (arg_ch < 10) {\n            *0x476418 = *0x476418 + 1;\n            piVar3 = fcn.0040194c(&var_18h, arg_ch);\n            if (*(arg_8h + 1) < '\\x02') {\n                iVar4 = *piVar3;\n                if (*arg_8h == 0) {\n                    if (iVar4 == 0) {\n                        iVar4 = *(piVar3 + 1);\ncode_r0x0040e099:\n                        fcn.004022e8(iVar4);\n                    }\n                    else {\n                        *arg_8h = iVar4;\n                        arg_8h[1] = piVar3[1];\n                    }\n                }\n                else if (iVar4 == 0) {\n                    iVar4 = *(piVar3 + 1);\n                    if (iVar4 != 0) {\n                        if ((iVar4 == 2) || (iVar4 == 3)) goto code_r0x0040e099;\n                        arg_8h_00 = fcn.004032e2(iVar4);\n                        fcn.00403b7f(arg_8h_00);\n                    }\n                }\n                else {\n                    fcn.004011f9(iVar4);\n                }\n            }\n        }\n        else {\n            var_8h = 0;\n            var_4h = 0;\n            fcn.00402798(&var_10h, &var_8h);\n            if ((1 < *0x476418 - pcVar2) && (**0x47640c != 9)) {\n                fcn.00403c1a(&var_10h);\n            }\n            fcn.00402310(&var_10h);\n            if (*0x476418 == pcVar2) {\n                arg_8h[1] = 0;\n                *arg_8h = 0;\n                *(arg_8h + 1) = 2;\n            }\n        }\n        if (*(arg_8h + 1) != '\\0') {\n            return arg_8h;\n        }\n    } while( true );\n}\n",
        "token_count": 794
    },
    "00403139": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403139(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        *arg_8h = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401122(in_ECX + 0x464 + uVar1 * 0x10, 3, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 358
    },
    "00403157": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00403157(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_stack_ffffffdc;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x476418 != '\\0') {\n        fcn.00403a03(&var_10h);\n        fcn.0040256d(&var_8h, 0x7b);\n        while( true ) {\n            arg_8h_00 = fcn.00402c43(&var_10h);\n            fcn.00402310(arg_8h_00);\n            if (**0x476418 != '@') break;\n            if ((*0x476418)[1] == '@') {\n                *0x476418 = *0x476418 + 2;\n                fcn.00402b99(0x7d);\n                *arg_8h = var_8h;\n                arg_8h[1] = var_4h;\n                return arg_8h;\n            }\n            *0x476418 = *0x476418 + 1;\n            fcn.00402b99(0x2c);\n        }\n        in_stack_ffffffdc = 2;\n    }\n    fcn.004014dd(in_stack_ffffffdc);\n    return arg_8h;\n}\n",
        "token_count": 301
    },
    "004031c5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004031c5(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    uint32_t arg_8h;\n    uint arg_1ch;\n    \n    cVar2 = fcn.0040358f(*(param_1 + 8));\n    if (cVar2 != '\\0') {\n        if (*(param_1 + 0xc) != 0) {\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x14);\n                }\n                *(param_1 + 0x34) = 0;\n                *(param_1 + 0x18) = 0;\n                uVar1 = **(param_1 + 0xc);\n                *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                *(param_1 + 0x2e) = uVar1;\n                while ((uVar1 != 0 && (arg_8h = uVar1,  -1 < *(param_1 + 0x14)))) {\n                    uVar3 = fcn.00403585(arg_8h, *(param_1 + 0x18));\n                    *(param_1 + 0x18) = uVar3;\n    // switch table (8 cases) at 0x42ec39\n                    switch(uVar3) {\n                    case 0:\n                        *(param_1 + 0x38) = 1;\n                        fcn.00401af0(arg_8h, param_1 + 0x14, *(param_1 + 8));\n                        break;\n                    case 1:\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x1c) = 0;\n                        *(param_1 + 0x24) = 0xffffffff;\n                        *(param_1 + 0x28) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x38) = 0;\n                        break;\n                    case 2:\n                        if (arg_8h == 0x20) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                        }\n                        else if (arg_8h == 0x23) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                        }\n                        else if (arg_8h == 0x2b) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                        }\n                        else if (arg_8h == 0x2d) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                        }\n                        else if (arg_8h == 0x30) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                        }\n                        break;\n                    case 3:\n                        if (uVar1 != 0x2a) {\n                            iVar4 = param_1 + 0x20;\n                            goto code_r0x0042eb76;\n                        }\n                        *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n                        iVar4 = *(*(param_1 + 0x10) + -4);\n                        *(param_1 + 0x20) = iVar4;\n                        if (iVar4 < 0) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                            *(param_1 + 0x20) = -iVar4;\n                        }\ncode_r0x0042eb9a:\n                        cVar2 = '\\x01';\n                        goto code_r0x0042ebd8;\n                    case 4:\n                        *(param_1 + 0x24) = 0;\n                        break;\n                    case 5:\n                        if (uVar1 == 0x2a) {\n                            *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n                            iVar4 = *(*(param_1 + 0x10) + -4);\n                            *(param_1 + 0x24) = iVar4;\n                            if (iVar4 < 0) {\n                                *(param_1 + 0x24) = 0xffffffff;\n                            }\n                            goto code_r0x0042eb9a;\n                        }\n                        iVar4 = param_1 + 0x24;\ncode_r0x0042eb76:\n                        cVar2 = fcn.00401785(iVar4);\n                        goto code_r0x0042ebd8;\n                    case 6:\n                        cVar2 = fcn.00403b84();\n                        goto code_r0x0042ebd8;\n                    case 7:\n                        cVar2 = fcn.0040237e();\ncode_r0x0042ebd8:\n                        if (cVar2 == '\\0') {\n                            return 0xffffffff;\n                        }\n                        break;\n                    default:\n                        iVar4 = *(param_1 + 8);\n                        *(iVar4 + 0x1c) = 1;\n                        *(iVar4 + 0x18) = 0x16;\n                        arg_1ch = *(param_1 + 8);\n                        goto code_r0x0042ea89;\n                    case 0xbad1abe1:\n                        goto code_r0x0042ea94;\n                    }\n                    uVar1 = **(param_1 + 0xc);\n                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                    *(param_1 + 0x2e) = uVar1;\n                }\n            } while( true );\n        }\n        iVar4 = *(param_1 + 8);\n        *(iVar4 + 0x1c) = 1;\n        *(iVar4 + 0x18) = 0x16;\n        arg_1ch = *(param_1 + 8);\ncode_r0x0042ea89:\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch);\n    }\ncode_r0x0042ea94:\n    return 0xffffffff;\n}\n",
        "token_count": 1483
    },
    "004031fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004031fc(int16_t *arg_8h, int32_t arg_ch, int16_t *arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uStack28;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_14h == 0) {\n        if (arg_8h != NULL) goto code_r0x0044700a;\n        if (arg_ch != 0) goto code_r0x00447021;\n        goto code_r0x00447002;\n    }\n    if (arg_8h != NULL) {\ncode_r0x0044700a:\n        if (arg_ch != 0) {\n            if ((arg_14h == 0) || (arg_10h != NULL)) {\n                var_8h = arg_14h;\n                piVar3 = arg_8h;\n                iVar5 = arg_ch;\n                do {\n                    if (*piVar3 == 0) {\n                        if (arg_14h != -1) {\n                            if (arg_14h != 0) goto code_r0x00447076;\n                            goto code_r0x0044709b;\n                        }\n                        iVar4 = arg_10h - piVar3;\n                        goto code_r0x0044705c;\n                    }\n                    piVar3 = piVar3 + 1;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            *arg_8h = 0;\n        }\n    }\ncode_r0x00447021:\n    puVar2 = fcn.004029b9();\n    uStack28 = 0x16;\n    goto code_r0x00447028;\n    while (iVar5 = iVar5 + -1,  iVar5 != 0) {\ncode_r0x0044705c:\n        iVar1 = *(iVar4 + piVar3);\n        *piVar3 = iVar1;\n        piVar3 = piVar3 + 1;\n        if (iVar1 == 0) goto code_r0x00447002;\n    }\n    goto code_r0x004470a2;\n    while( true ) {\n        iVar5 = iVar5 + -1;\n        if (iVar5 == 0) goto code_r0x004470a2;\n        var_8h = var_8h + -1;\n        if (var_8h == 0) break;\ncode_r0x00447076:\n        iVar1 = *arg_10h;\n        arg_10h = arg_10h + 1;\n        *piVar3 = iVar1;\n        piVar3 = piVar3 + 1;\n        if (iVar1 == 0) goto code_r0x00447002;\n    }\ncode_r0x0044709b:\n    if (var_8h == 0) {\n        *piVar3 = 0;\n    }\ncode_r0x004470a2:\n    if (iVar5 == 0) {\n        if (arg_14h == -1) {\n            arg_8h[arg_ch + -1] = 0;\n            uStack28 = 0x50;\n        }\n        else {\n            *arg_8h = 0;\n            puVar2 = fcn.004029b9();\n            uStack28 = 0x22;\ncode_r0x00447028:\n            *puVar2 = uStack28;\n            fcn.00402842();\n        }\n    }\n    else {\ncode_r0x00447002:\n        uStack28 = 0;\n    }\n    return uStack28;\n}\n",
        "token_count": 830
    },
    "0040321f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00455001)\n// WARNING: Removing unreachable block (ram,0x00454fdc)\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.0040321f(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t extraout_ECX;\n    uint32_t *puVar3;\n    uint32_t extraout_ECX_00;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    bool bVar11;\n    ulong uVar12;\n    uint64_t uVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    uint64_t uVar16;\n    uint var_21ch;\n    uint var_218h;\n    int32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_3ch;\n    int32_t var_34h;\n    uint32_t *var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t *var_1ch;\n    uint32_t *var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar7 = *arg_8h;\n    if ((uVar7 != 0) && (var_44h = *arg_ch,  var_44h != 0)) {\n        uVar5 = uVar7 - 1;\n        uVar9 = var_44h - 1;\n        if (uVar9 == 0) {\n            var_4h = arg_ch[1];\n            if (var_4h == 1) {\n                uVar7 = arg_8h[1];\n                *arg_8h = 0;\n                fcn.00457b41(arg_8h + 1, 0x1cc, &var_218h, 0);\n                return uVar7;\n            }\n            if (uVar5 == 0) {\n                uVar7 = arg_8h[1];\n                *arg_8h = 0;\n                fcn.00457b41(arg_8h + 1, 0x1cc, &var_218h, 0);\n                uVar5 = uVar7 % var_4h;\n                arg_8h[1] = uVar5;\n                *arg_8h = uVar5 != 0;\n                return uVar7 / var_4h;\n            }\n            var_8h = 0;\n            uVar9 = 0;\n            var_18h = NULL;\n            uVar5 = 0;\n            if (uVar5 != 0xffffffff) {\n                var_1ch = arg_8h + uVar7;\n                do {\n                    uVar10 = uVar5;\n                    uVar12 = fcn.0040150a(*var_1ch, uVar9, var_4h, 0, uVar10);\n                    var_3ch = uVar12 >> 0x20;\n                    var_1ch = var_1ch + -1;\n                    uVar7 = uVar7 - 1;\n                    uVar5 = var_8h;\n                    uVar9 = extraout_ECX;\n                    var_18h = uVar10;\n                    var_8h = uVar12;\n                } while (uVar7 != 0);\n            }\n            *arg_8h = 0;\n            fcn.00457b41(arg_8h + 1, 0x1cc, &var_218h, 0);\n            arg_8h[1] = uVar9;\n            arg_8h[2] = var_18h;\n            *arg_8h = (var_18h != NULL) + 1;\n            return CONCAT44(uVar5, var_8h);\n        }\n        if (uVar9 <= uVar5) {\n            iVar6 = uVar5 - uVar9;\n            if (iVar6 <= uVar5) {\n                puVar3 = arg_8h + uVar7;\n                puVar2 = arg_ch + var_44h;\n                uVar7 = uVar5;\n                do {\n                    if (*puVar2 != *puVar3) {\n                        if (*puVar3 <= *puVar2) goto code_r0x00454e56;\n                        break;\n                    }\n                    uVar7 = uVar7 - 1;\n                    puVar2 = puVar2 + -1;\n                    puVar3 = puVar3 + -1;\n                } while (iVar6 <= uVar7);\n            }\n            iVar6 = iVar6 + 1;\ncode_r0x00454e56:\n            if (iVar6 != 0) {\n                var_28h = arg_ch[var_44h];\n                var_20h = arg_ch[var_44h - 1];\n                iVar1 = 0x1f;\n                if (var_28h != 0) {\n                    for (; var_28h >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                    }\n                }\n                if (var_28h == 0) {\n                    var_8h = 0x20;\n                }\n                else {\n                    var_8h = 0x1f - iVar1;\n                }\n                var_24h = 0x20 - var_8h;\n                if (var_8h != 0) {\n                    uVar7 = var_20h >> (var_24h & 0x1f);\n                    var_20h = var_20h << (var_8h & 0x1f);\n                    var_28h = var_28h << (var_8h & 0x1f) | uVar7;\n                    if (2 < var_44h) {\n                        var_20h = var_20h | arg_ch[var_44h - 2] >> (var_24h & 0x1f);\n                    }\n                }\n                var_1ch = NULL;\n                var_4ch = iVar6 + -1;\n                uVar8 = 0;\n                var_4h = uVar5;\n                if (-1 < var_4ch) {\n                    var_2ch = var_4ch + var_44h;\n                    var_30h = arg_8h + iVar6;\n                    puVar3 = arg_8h + var_2ch;\n                    do {\n                        var_18h = puVar3 + -1;\n                        if (var_4h < var_2ch) {\n                            uVar7 = 0;\n                        }\n                        else {\n                            uVar7 = puVar3[1];\n                        }\n                        uVar5 = *puVar3;\n                        var_10h = *var_18h;\n                        var_34h = 0;\n                        var_48h = uVar7;\n                        if (var_8h != 0) {\n                            uVar5 = var_10h >> (var_24h & 0x1f);\n                            uVar12 = fcn.00402de7();\n                            uVar7 = uVar12 >> 0x20;\n                            uVar5 = uVar5 | uVar12;\n                            var_10h = var_10h << (var_8h & 0x1f);\n                            if (2 < var_2ch) {\n                                var_10h = var_10h | var_18h[-1] >> (var_24h & 0x1f);\n                            }\n                        }\n                        uVar13 = fcn.0040150a(uVar5, uVar7, var_28h, 0, uVar7);\n                        var_34h = 0;\n                        uVar16 = extraout_ECX_00;\n                        if (uVar13 >> 0x20 != 0) {\n                            _var_40h = uVar13;\n                            iVar14 = fcn.00401da2(uVar13 - 0xffffffff, var_28h, 0);\n                            var_ch = uVar13 >> 0x20;\n                            var_14h = uVar13;\n                            uVar16 = iVar14 + 4;\n                            uVar13 = 0xffffffff;\n                        }\n                        var_34h = uVar16 >> 0x20;\n                        var_14h = var_10h;\n                        while (_var_40h = uVar13,  var_34h == 0) {\n                            var_ch = uVar13 >> 0x20;\n                            var_40h = uVar13;\n                            iVar6 = var_40h;\n                            var_34h = uVar16 >> 0x20;\n                            uVar7 = uVar16;\n                            var_3ch = var_ch;\n                            var_10h = var_14h;\n                            uVar16 = uVar13;\n                            uVar15 = fcn.00401da2();\n                            var_ch = uVar16 >> 0x20;\n                            var_40h = uVar16;\n                            _var_40h = uVar16 & 0xffffffff | var_3ch << 0x20;\n                            uVar13 = uVar16 & 0xffffffff00000000 | uVar13 & 0xffffffff;\n                            if (uVar15 <= CONCAT44(uVar7, var_14h)) break;\n                            uVar13 = CONCAT44(var_ch + -1 + (iVar6 != 0), iVar6 + -1);\n                            var_34h = var_34h + CARRY4(uVar7, var_28h);\n                            uVar16 = CONCAT44(var_34h, uVar7 + var_28h);\n                            var_14h = var_10h;\n                        }\n                        var_3ch = _var_40h >> 0x20;\n                        var_14h = uVar13;\n                        if (uVar13 != 0) {\n                            uVar5 = 0;\n                            uVar7 = 0;\n                            if (var_44h != 0) {\n                                puVar2 = arg_ch + 1;\n                                var_10h = var_44h;\n                                puVar3 = var_30h;\n                                do {\n                                    iVar14 = (_var_40h & 0xffffffff) * *puVar2;\n                                    uVar9 = iVar14;\n                                    uVar10 = uVar5 + uVar9;\n                                    uVar5 = uVar7 + (iVar14 >> 0x20) + var_3ch * *puVar2 + CARRY4(uVar5, uVar9);\n                                    uVar7 = 0;\n                                    if (*puVar3 < uVar10) {\n                                        bVar11 = 0xfffffffe < uVar5;\n                                        uVar5 = uVar5 + 1;\n                                        uVar7 = bVar11;\n                                    }\n                                    *puVar3 = *puVar3 - uVar10;\n                                    puVar3 = puVar3 + 1;\n                                    puVar2 = puVar2 + 1;\n                                    var_10h = var_10h - 1;\n                                } while (var_10h != 0);\n                            }\n                            if ((uVar7 != 0) || (var_48h < uVar5)) {\n                                if (var_44h != 0) {\n                                    uVar5 = 0;\n                                    puVar2 = var_30h;\n                                    uVar7 = var_44h;\n                                    puVar3 = arg_ch;\n                                    do {\n                                        puVar3 = puVar3 + 1;\n                                        uVar9 = *puVar2;\n                                        uVar10 = *puVar3;\n                                        uVar4 = uVar9 + *puVar3;\n                                        *puVar2 = uVar4 + uVar5;\n                                        uVar5 = CARRY4(uVar9, uVar10) + CARRY4(uVar4, uVar5);\n                                        uVar7 = uVar7 - 1;\n                                        puVar2 = puVar2 + 1;\n                                    } while (uVar7 != 0);\n                                }\n                                uVar13 = uVar13 - 1;\n                            }\n                            var_4h = var_2ch - 1;\n                        }\n                        var_ch = uVar13 >> 0x20;\n                        var_4ch = var_4ch + -1;\n                        var_30h = var_30h + -1;\n                        var_2ch = var_2ch - 1;\n                        uVar8 = var_1ch;\n                        var_1ch = uVar13;\n                        puVar3 = var_18h;\n                    } while (-1 < var_4ch);\n                }\n                uVar7 = var_4h + 1;\n                if (uVar7 < *arg_8h) {\n                    puVar3 = arg_8h + var_4h + 2;\n                    uVar5 = uVar7;\n                    do {\n                        *puVar3 = 0;\n                        puVar3 = puVar3 + 1;\n                        uVar5 = uVar5 + 1;\n                    } while (uVar5 < *arg_8h);\n                }\n                *arg_8h = uVar7;\n                while ((uVar7 != 0 && (arg_8h[uVar7] == 0))) {\n                    uVar7 = uVar7 - 1;\n                    *arg_8h = uVar7;\n                }\n                return CONCAT44(uVar8, var_1ch);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 3067
    },
    "00403224": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00403224(void)\n\n{\n    uint in_MXCSR;\n    uint var_4h;\n    \n    if (0 < *0x4763a8) {\n        return in_MXCSR;\n    }\n    return 0;\n}\n",
        "token_count": 55
    },
    "0040322e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040322e(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        *arg_8h = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00404057(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 340
    },
    "004032bf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004032bf(void)\n\n{\n    uint uVar1;\n    \n    if (*0x4771cf == '\\0') {\n        *0x4771c4 = 0x4750a0;\n        *0x4771c0 = 0x475468;\n        *0x4771bc = 0x475330;\n        uVar1 = fcn.00403b07();\n        fcn.0044338a(0xfffffffd, 1, uVar1, 0x4771c4);\n        *0x4771cf = '\\x01';\n    }\n    return 1;\n}\n",
        "token_count": 138
    },
    "0044b30a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0044b30a(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    \n    if (arg_8h == '\\0') {\n        piVar1 = 0x477460;\n        do {\n            if (*piVar1 != 0) {\n                if (*piVar1 != -1) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(*piVar1);\n                }\n                *piVar1 = 0;\n            }\n            piVar1 = piVar1 + 1;\n        } while (piVar1 != 0x4774b0);\n    }\n    return 1;\n}\n",
        "token_count": 142
    },
    "00403319": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403319(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n        uVar4 = *(*(in_ECX + 0x10) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x10) + -4);\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00401f23(in_ECX + 0x464 + uVar1 * 0x10, 2, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar4 = puVar3[1];\n        *arg_8h = *puVar3;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 432
    },
    "00446063": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00446063(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint32_t uVar24;\n    uint32_t uVar25;\n    uint32_t uVar26;\n    uint uVar27;\n    int32_t iVar28;\n    uint8_t *puVar29;\n    uint8_t *puVar30;\n    int32_t var_18h;\n    uint var_14h;\n    uint8_t **var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_ch = NULL;\n    var_18h = arg_8h;\n    var_14h = 0;\n    if ((*(arg_8h + 0xac) == 0) && (*(arg_8h + 0xb0) == 0)) {\n        var_8h = NULL;\n        puVar4 = 0x475800;\ncode_r0x004463ce:\n        puVar5 = var_ch;\n        piVar3 = *(arg_8h + 0x84);\n        if (piVar3 != NULL) {\n            LOCK();\n            *piVar3 = *piVar3 + -1;\n        }\n        piVar3 = *(arg_8h + 0x7c);\n        if (piVar3 != NULL) {\n            LOCK();\n            iVar28 = *piVar3;\n            *piVar3 = iVar28 + -1;\n            if (iVar28 + -1 == 0) {\n                fcn.004042f5(*(arg_8h + 0x88));\n                fcn.004042f5(*(arg_8h + 0x7c));\n            }\n        }\n        *(arg_8h + 0x7c) = var_8h;\n        uVar27 = 0;\n        *(arg_8h + 0x84) = puVar5;\n        *(arg_8h + 0x88) = puVar4;\n    }\n    else {\n        puVar4 = fcn.0040375b(1, 0x50);\n        var_4h = puVar4;\n        fcn.004042f5(0);\n        if (puVar4 != NULL) {\n            puVar5 = fcn.0040375b(1, 4);\n            var_8h = puVar5;\n            fcn.004042f5(0);\n            if (puVar5 == NULL) {\n                fcn.004042f5(puVar4);\n            }\n            else {\n                if (*(arg_8h + 0xac) == 0) {\n                    puVar4 = 0x475800;\n                    puVar5 = var_4h;\n                    for (iVar28 = 0x14; iVar28 != 0; iVar28 = iVar28 + -1) {\n                        *puVar5 = *puVar4;\n                        puVar4 = puVar4 + 1;\n                        puVar5 = puVar5 + 1;\n                    }\ncode_r0x00446380:\n                    *var_4h = **(arg_8h + 0x88);\n                    var_4h[1] = *(*(arg_8h + 0x88) + 4);\n                    var_4h[2] = *(*(arg_8h + 0x88) + 8);\n                    var_4h[0xc] = *(*(arg_8h + 0x88) + 0x30);\n                    var_4h[0xd] = *(*(arg_8h + 0x88) + 0x34);\n                    *var_8h = 1;\n                    puVar4 = var_4h;\n                    if (var_ch != NULL) {\n                        *var_ch = 1;\n                    }\n                    goto code_r0x004463ce;\n                }\n                puVar5 = fcn.0040375b(1, 4);\n                var_ch = puVar5;\n                fcn.004042f5(0);\n                if (puVar5 == NULL) {\n                    fcn.004042f5(puVar4);\n                    fcn.004042f5(var_8h);\n                }\n                else {\n                    uVar27 = *(arg_8h + 0xac);\n                    uVar6 = fcn.004016b8(&var_18h, 1, uVar27, 0x15, puVar4 + 3);\n                    uVar7 = fcn.004016b8(&var_18h, 1, uVar27, 0x14, var_4h + 4);\n                    uVar8 = fcn.004016b8(&var_18h, 1, uVar27, 0x16, var_4h + 5);\n                    uVar9 = fcn.004016b8(&var_18h, 1, uVar27, 0x17, var_4h + 6);\n                    var_10h = var_4h + 7;\n                    uVar10 = fcn.004016b8(&var_18h, 1, uVar27, 0x18, var_10h);\n                    uVar11 = fcn.004016b8(&var_18h, 1, uVar27, 0x50, var_4h + 8);\n                    uVar12 = fcn.004016b8(&var_18h, 1, uVar27, 0x51, var_4h + 9);\n                    uVar13 = fcn.004016b8(&var_18h, 0, uVar27, 0x1a, var_4h + 10);\n                    uVar14 = fcn.004016b8(&var_18h, 0, uVar27, 0x19, var_4h + 0x29);\n                    uVar15 = fcn.004016b8(&var_18h, 0, uVar27, 0x54, var_4h + 0x2a);\n                    uVar16 = fcn.004016b8(&var_18h, 0, uVar27, 0x55, var_4h + 0x2b);\n                    uVar17 = fcn.004016b8(&var_18h, 0, uVar27, 0x56, var_4h + 0xb);\n                    uVar18 = fcn.004016b8(&var_18h, 0, uVar27, 0x57, var_4h + 0x2d);\n                    uVar19 = fcn.004016b8(&var_18h, 0, uVar27, 0x52, var_4h + 0x2e);\n                    uVar20 = fcn.004016b8(&var_18h, 0, uVar27, 0x53, var_4h + 0x2f);\n                    uVar21 = fcn.004016b8(&var_18h, 2, uVar27, 0x15, var_4h + 0xe);\n                    uVar22 = fcn.004016b8(&var_18h, 2, uVar27, 0x14, var_4h + 0xf);\n                    uVar23 = fcn.004016b8(&var_18h, 2, uVar27, 0x16, var_4h + 0x10);\n                    uVar24 = fcn.004016b8(&var_18h, 2, uVar27, 0x17, var_4h + 0x11);\n                    uVar25 = fcn.004016b8(&var_18h, 2, uVar27, 0x50, var_4h + 0x12);\n                    uVar26 = fcn.004016b8(&var_18h, 2, uVar27, 0x51, var_4h + 0x13);\n                    puVar4 = var_4h;\n                    if ((uVar26 | uVar6 | uVar7 | uVar8 | uVar9 | uVar10 | uVar11 | uVar12 | uVar13 | uVar14 | uVar15 |\n                                  uVar16 | uVar17 | uVar18 | uVar19 | uVar20 | uVar21 | uVar22 | uVar23 | uVar24 |\n                                  uVar25) == 0) {\n                        puVar29 = *var_10h;\n                        while (uVar2 = *puVar29,  uVar2 != 0) {\n                            if (uVar2 - 0x30 < 10) {\n                                *puVar29 = uVar2 - 0x30;\ncode_r0x00446356:\n                                puVar29 = puVar29 + 1;\n                            }\n                            else {\n                                puVar30 = puVar29;\n                                if (uVar2 != 0x3b) goto code_r0x00446356;\n                                do {\n                                    puVar1 = puVar30 + 1;\n                                    *puVar30 = *puVar1;\n                                    puVar30 = puVar30 + 1;\n                                } while (*puVar1 != 0);\n                            }\n                        }\n                        goto code_r0x00446380;\n                    }\n                    fcn.0040260d(var_4h);\n                    fcn.004042f5(puVar4);\n                    fcn.004042f5(var_8h);\n                    fcn.004042f5(var_ch);\n                }\n            }\n        }\n        uVar27 = 1;\n    }\n    return uVar27;\n}\n",
        "token_count": 2315
    },
    "004033b9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004033b9(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    char *var_8h;\n    uint var_4h;\n    \n    *arg_8h = *arg_ch;\n    uVar2 = arg_ch[1];\n    arg_8h[1] = uVar2;\n    if (uVar2 < '\\x02') {\n        if (**0x476418 == '\\0') {\n            fcn.004014dd(1);\n            fcn.0040395e(&var_8h, arg_8h);\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n        }\n        else {\n            fcn.004013e8(&var_8h);\n            fcn.0040256d(&var_10h, 0x20);\n            puVar1 = fcn.0040395e(&var_18h, arg_8h);\n            *arg_8h = *puVar1;\n            uVar2 = puVar1[1];\n            arg_8h[1] = uVar2;\n            if (uVar2 < '\\x02') {\n                if (**0x476418 != '@') {\n                    var_8h = \"{for \";\n                    var_4h = 5;\n                    do {\n                        fcn.00403f03(&var_8h);\n                        do {\n                            if ('\\x01' < *(arg_8h + 1)) {\ncode_r0x004140d0:\n                                if (**0x476418 != '@') {\n                                    return arg_8h;\n                                }\n                                goto code_r0x004140d5;\n                            }\n                            if (**0x476418 == '\\0') {\ncode_r0x004140b5:\n                                if (**0x476418 == '\\0') {\n                                    fcn.004043ef(1);\n                                }\n                                fcn.00402b99(0x7d);\n                                goto code_r0x004140d0;\n                            }\n                            if (**0x476418 == '@') {\n                                if ('\\x01' < *(arg_8h + 1)) goto code_r0x004140d0;\n                                goto code_r0x004140b5;\n                            }\n                            uVar2 = fcn.004029f0(&var_18h);\n                            fcn.004022e3(&var_10h, 0x60, uVar2);\n                            uVar2 = fcn.0040256d(&var_20h, 0x27);\n                            fcn.00402310(uVar2);\n                            if (**0x476418 == '@') {\n                                *0x476418 = *0x476418 + 1;\n                            }\n                        } while (('\\x01' < *(arg_8h + 1)) || (**0x476418 == '@'));\n                        var_8h = 0x46aec0;\n                        var_4h = 2;\n                    } while( true );\n                }\ncode_r0x004140d5:\n                *0x476418 = *0x476418 + 1;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 727
    },
    "004033fa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004033fa(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n        *(param_1 + 0x20) = *(*(param_1 + 0x10) + -4);\n    }\n    else {\n        var_4h = *(param_1 + 0xc);\n        iVar1 = fcn.004030f3(*(param_1 + 8), var_4h, &var_4h, 10, 1);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0xc) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == '$')) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.00401f23(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x2d), *(param_1 + 0x28));\n                return uVar3;\n            }\n            iVar1 = *(param_1 + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        *(param_1 + 0x20) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 484
    },
    "0040341d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040341d(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        uVar3 = *(*(in_ECX + 0x10) + -4);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401122(in_ECX + 0x464 + uVar1 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        uVar3 = **(in_ECX + 0x46c + uVar1 * 0x10);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 401
    },
    "00403427": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403427(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        *arg_8h = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028bf(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 339
    },
    "00403477": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403477(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint16_t in_FPUControlWord;\n    uint32_t var_20h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0045bd85(arg_8h);\n    puVar2 = &var_20h;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    var_4h = var_4h & 7999;\n    var_20h = var_20h & 0xffff0000 | in_FPUControlWord & 0xffffe0c0 | var_4h;\n    fcn.0045bc4a(arg_8h);\n    return;\n}\n",
        "token_count": 206
    },
    "004034a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004034a4(void)\n\n{\n    int32_t in_FS_OFFSET;\n    int32_t var_4h;\n    \n    if (*0x4771ac == 0) {\n        var_4h = 1;\n        if ((*(*(*(in_FS_OFFSET + 0x30) + 0x10) + 8) < 0) || (fcn.004021f3(&var_4h),  *0x4771ac = 1,  var_4h == 1)) {\n            *0x4771ac = 2;\n        }\n    }\n    return *0x4771ac;\n}\n",
        "token_count": 142
    },
    "004034f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004034f4(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_18h;\n    char *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00403db9(arg_ch);\n    cVar1 = **0x476418;\n    if (cVar1 == '\\0') {\n        fcn.004014dd(1);\n    }\n    else {\n        if (cVar1 == '?') {\n            *0x476418 = *0x476418 + 1;\n            var_10h = NULL;\n            var_ch = 0;\n            puVar2 = fcn.00401267(&var_18h, &var_8h, 0, &var_10h, 0);\n            var_8h = *puVar2;\n            var_4h = puVar2[1];\n            fcn.00402798(arg_8h, &var_8h);\n            return arg_8h;\n        }\n        if (cVar1 != 'X') {\n            fcn.00402798(arg_8h, &var_8h);\n            return arg_8h;\n        }\n        *0x476418 = *0x476418 + 1;\n        if (var_8h == 0) {\n            var_10h = \"void\";\n            var_ch = 4;\n            fcn.00402211(&var_10h);\n            return arg_8h;\n        }\n        var_10h = \"void \";\n        var_ch = 5;\n        fcn.00402211(&var_10h);\n    }\n    fcn.0040395e(arg_8h, &var_8h);\n    return arg_8h;\n}\n",
        "token_count": 408
    },
    "0040351c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040351c(char *arg_8h)\n\n{\n    int32_t arg_ch;\n    uint *in_ECX;\n    \n    arg_ch = 0;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        do {\n            arg_ch = arg_ch + 1;\n        } while (arg_8h[arg_ch] != '\\0');\n        if (arg_ch != 0) {\n            fcn.004016b3(arg_8h, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "00403530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00403530(uint *arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = *(arg_14h * 8 + 0x46a1f8);\n    var_ch = *(arg_14h * 8 + 0x46a1fc);\n    cVar1 = **0x476418;\n    if (cVar1 == '\\0') {\n        fcn.004014dd(1);\n        fcn.00403f03(&var_10h);\n        if (*arg_ch != 0) {\n            fcn.00402310(arg_ch);\n        }\n        if (*arg_10h != 0) {\n            if (*arg_ch != 0) {\n                fcn.00402b99(0x20);\n            }\n            fcn.00402310(arg_10h);\n        }\n        *arg_8h = var_8h;\n        arg_8h[1] = var_4h;\n    }\n    else if (((cVar1 < '6') || ('9' < cVar1)) && (cVar1 != '_')) {\n        fcn.00401267(&var_10h, arg_10h, arg_14h, arg_ch, 0);\n        fcn.004037bf(arg_8h, &var_10h, arg_14h == 1);\n    }\n    else {\n        fcn.00402211(&var_10h);\n        if ((*arg_ch != 0) && ((*arg_10h == 0 || ((arg_10h[1] & 0x100U) == 0)))) {\n            fcn.00402310(arg_ch);\n        }\n        if (*arg_10h != 0) {\n            fcn.00402310(arg_10h);\n        }\n        fcn.0040463d(arg_8h, &var_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 476
    },
    "00403562": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403562(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        *arg_8h = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401f23(in_ECX + 0x464 + uVar1 * 0x10, 3, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 359
    },
    "0040359e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040359e(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    iVar1 = *(in_ECX + 8);\n    if (*(iVar1 + 0x14) == '\\0') {\n        fcn.004024f0();\n    }\n    puVar3 = *(in_ECX + 0x30);\n    iVar4 = 0;\n    if (0 < arg_8h) {\n        do {\n            if (*puVar3 == 0) {\n                return iVar4;\n            }\n            iVar2 = fcn.00404192(**(iVar1 + 0xc), *puVar3, 0x8000);\n            if (iVar2 != 0) {\n                puVar3 = puVar3 + 1;\n            }\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < arg_8h);\n    }\n    return iVar4;\n}\n",
        "token_count": 250
    },
    "00403616": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403616(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    \n    piVar4 = in_EAX & 0xffffff00;\n    if ((*(param_1 + 6) != '\\0') && (*(param_1 + 6) != '\\a')) {\n        iVar1 = param_1[2];\n        *(iVar1 + 0x1c) = 1;\n        *(iVar1 + 0x18) = 0x16;\n        uVar3 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n        return uVar3 & 0xffffff00;\n    }\n    if ((param_1[0x117] == 2) && (param_1[0x116] == 1)) {\n        iVar1 = param_1[0x2a9];\n        piVar4 = param_1 + iVar1 * 4 + 4;\n        if (param_1 != piVar4) {\n            iVar5 = param_1[4];\n            piVar6 = param_1 + 0x119;\n            do {\n                iVar2 = *piVar6;\n                piVar6[2] = iVar5;\n                if (iVar2 == 1) {\ncode_r0x0043ba74:\n                    param_1[4] = param_1[4] + 4;\n                }\n                else {\n                    if (iVar2 != 2) {\n                        if (iVar2 == 3) goto code_r0x0043ba74;\n                        if (iVar2 != 4) {\n                            iVar1 = param_1[2];\n                            *(iVar1 + 0x1c) = 1;\n                            *(iVar1 + 0x18) = 0x16;\n                            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n                            return uVar3 & 0xffffff00;\n                        }\n                    }\n                    param_1[4] = param_1[4] + 8;\n                }\n                iVar5 = param_1[4];\n                piVar4 = param_1 + iVar1 * 4 + 0x119;\n                bVar7 = piVar6 != piVar4;\n                piVar6 = piVar6 + 4;\n            } while (bVar7);\n        }\n    }\n    return CONCAT31(piVar4 >> 8, 1);\n}\n",
        "token_count": 606
    },
    "00403620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403620(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        cVar1 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401f23(in_ECX + 0x464 + uVar3 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        cVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 408
    },
    "00403657": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403657(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        return;\n    }\n    piVar1 = *in_ECX;\n    if (piVar1[2] == piVar1[1]) {\n        if (*(piVar1 + 3) == '\\0') {\ncode_r0x0043cf13:\n            *arg_10h = -1;\n            return;\n        }\n    }\n    else {\n        uVar2 = piVar1[1] - piVar1[2];\n        if (arg_ch <= uVar2) {\n            uVar2 = arg_ch;\n        }\n        fcn.00403c38(*piVar1, arg_8h, uVar2 * 2);\n        **in_ECX = **in_ECX + uVar2 * 2;\n        (*in_ECX)[2] = (*in_ECX)[2] + uVar2;\n        if (*(*in_ECX + 3) == '\\0') {\n            if (uVar2 == arg_ch) {\n                *arg_10h = *arg_10h + uVar2;\n                return;\n            }\n            goto code_r0x0043cf13;\n        }\n    }\n    *arg_10h = *arg_10h + arg_ch;\n    return;\n}\n",
        "token_count": 339
    },
    "0040365c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040365c(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    uint arg_1ch;\n    \n    cVar3 = fcn.0040358f(*(param_1 + 8));\n    if (cVar3 != '\\0') {\n        if (*(param_1 + 0xc) == 0) {\n            iVar5 = *(param_1 + 8);\n            *(iVar5 + 0x1c) = 1;\n            *(iVar5 + 0x18) = 0x16;\n            arg_1ch = *(param_1 + 8);\ncode_r0x0042e79c:\n            fcn.00402c20(0, 0, 0, 0, 0, arg_1ch);\n        }\n        else {\n            do {\n                cVar3 = fcn.00401c21();\n                if (cVar3 == '\\0') {\n                    return *(param_1 + 0x14);\n                }\n                *(param_1 + 0x34) = 0;\n                *(param_1 + 0x18) = 0;\n                uVar1 = **(param_1 + 0xc);\n                *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                *(param_1 + 0x2e) = uVar1;\n                if (uVar1 != 0) {\n                    do {\n                        if (*(param_1 + 0x14) < 0) break;\n                        uVar4 = fcn.00403440(uVar1, *(param_1 + 0x18));\n                        *(param_1 + 0x18) = uVar4;\n                        cVar3 = fcn.00403558();\n                        if (cVar3 == '\\0') {\n                            return 0xffffffff;\n                        }\n    // switch table (8 cases) at 0x42e994\n                        switch(*(param_1 + 0x18)) {\n                        case 0:\n                            cVar3 = fcn.004012f8();\n                            if (cVar3 == '\\0') {\n                                *(param_1 + 0x38) = 1;\n                                fcn.00401af0(*(param_1 + 0x2e), param_1 + 0x14, *(param_1 + 8));\n                            }\n                            break;\n                        case 1:\n                            *(param_1 + 0x24) = 0xffffffff;\n                            *(param_1 + 0x20) = 0;\n                            *(param_1 + 0x2c) = 0;\n                            *(param_1 + 0x1c) = 0;\n                            *(param_1 + 0x28) = 0;\n                            *(param_1 + 0x38) = 0;\n                            break;\n                        case 2:\n                            iVar2 = *(param_1 + 0x2e);\n                            if (iVar2 == 0x20) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                            }\n                            else if (iVar2 == 0x23) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                            }\n                            else if (iVar2 == 0x2b) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                            }\n                            else if (iVar2 == 0x2d) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                            }\n                            else if (iVar2 == 0x30) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                            }\n                            break;\n                        case 3:\n                            if (*(param_1 + 0x2e) != 0x2a) {\n                                iVar5 = param_1 + 0x20;\ncode_r0x0042e8ac:\n                                cVar3 = fcn.004042b9(iVar5);\n                                goto code_r0x0042e92a;\n                            }\n                            cVar3 = fcn.0040134d();\n                            if (cVar3 == '\\0') {\n                                return 0xffffffff;\n                            }\n                            cVar3 = fcn.00402f18();\n                            if (cVar3 != '\\0') {\n                                if (*(param_1 + 0x20) < 0) {\n                                    *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                                    *(param_1 + 0x20) = -*(param_1 + 0x20);\n                                }\ncode_r0x0042e8dc:\n                                cVar3 = '\\x01';\n                                goto code_r0x0042e92a;\n                            }\n                            break;\n                        case 4:\n                            *(param_1 + 0x24) = 0;\n                            break;\n                        case 5:\n                            if (*(param_1 + 0x2e) != 0x2a) {\n                                iVar5 = param_1 + 0x24;\n                                goto code_r0x0042e8ac;\n                            }\n                            cVar3 = fcn.004016a9();\n                            if (cVar3 == '\\0') {\n                                return 0xffffffff;\n                            }\n                            cVar3 = fcn.00402f18();\n                            if (cVar3 != '\\0') {\n                                if (*(param_1 + 0x24) < 0) {\n                                    *(param_1 + 0x24) = 0xffffffff;\n                                }\n                                goto code_r0x0042e8dc;\n                            }\n                            break;\n                        case 6:\n                            cVar3 = fcn.00402dc4();\n                            goto code_r0x0042e92a;\n                        case 7:\n                            cVar3 = fcn.004037b0();\ncode_r0x0042e92a:\n                            if (cVar3 == '\\0') {\n                                return 0xffffffff;\n                            }\n                            break;\n                        default:\n                            iVar5 = *(param_1 + 8);\n                            *(iVar5 + 0x1c) = 1;\n                            *(iVar5 + 0x18) = 0x16;\n                            arg_1ch = *(param_1 + 8);\n                            goto code_r0x0042e79c;\n                        case 0xbad1abe1:\n                            goto code_r0x0042e7a7;\n                        }\n                        uVar1 = **(param_1 + 0xc);\n                        *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                        *(param_1 + 0x2e) = uVar1;\n                    } while (uVar1 != 0);\n                }\n                cVar3 = fcn.00403cce();\n            } while (cVar3 != '\\0');\n        }\n    }\ncode_r0x0042e7a7:\n    return 0xffffffff;\n}\n",
        "token_count": 1611
    },
    "00403710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.00403710(int16_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t **arg_10h_00;\n    int16_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int16_t **arg_10h_01;\n    int32_t iVar4;\n    uint32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint Locale;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    iVar3 = fcn.00402f95();\n    arg_10h_01 = iVar3 + 0x50;\n    var_10h = 0;\n    Locale = 0;\n    var_8h = 0;\n    iVar4 = fcn.00402f95();\n    *(iVar4 + 0x34c) = &var_10h;\n    piVar1 = arg_8h + 0x40;\n    *arg_10h_01 = arg_8h;\n    arg_10h_00 = iVar3 + 0x54;\n    *arg_10h_00 = piVar1;\n    if ((piVar1 != NULL) && (*piVar1 != 0)) {\n        fcn.00449bd0(0x46ce78, *0x46cfc4 + -1, arg_10h_00);\n    }\n    var_10h = 0;\n    if ((*arg_10h_01 == NULL) || (**arg_10h_01 == 0)) {\n        if ((*arg_10h_00 == NULL) || (**arg_10h_00 == 0)) {\n            var_10h = 0x104;\n            Locale = (*_sym.imp.KERNEL32.dll_GetUserDefaultLCID)();\n            var_8h = Locale;\n        }\n        else {\n            fcn.004493b6(&var_10h);\n        }\ncode_r0x00449d63:\n        if (var_10h == 0) goto code_r0x00449d6b;\n    }\n    else {\n        if ((*arg_10h_00 == NULL) || (**arg_10h_00 == 0)) {\n            fcn.004494f9(&var_10h);\n        }\n        else {\n            fcn.00449438(&var_10h);\n        }\n        if (var_10h == 0) {\n            cVar2 = fcn.00449bd0(0x46cac8, *0x46ce70 + -1, arg_10h_01);\n            if (cVar2 != '\\0') {\n                if ((*arg_10h_00 == NULL) || (**arg_10h_00 == 0)) {\n                    fcn.004494f9(&var_10h);\n                }\n                else {\n                    fcn.00449438(&var_10h);\n                }\n            }\n            goto code_r0x00449d63;\n        }\n    }\n    arg_8h_00 = fcn.00449a00(-(arg_8h != NULL) & arg_8h + 0x80, &var_10h);\n    if (((arg_8h_00 != 0) && (iVar4 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(arg_8h_00 & 0xffff),  iVar4 != 0)) &&\n       (iVar4 = (*_sym.imp.KERNEL32.dll_IsValidLocale)(Locale, 1),  iVar4 != 0)) {\n        if (arg_ch != NULL) {\n            *arg_ch = arg_8h_00;\n        }\n        fcn.004036e3(Locale, iVar3 + 0x2a0, 0x55, 0);\n        if (arg_10h != 0) {\n            fcn.004036e3(Locale, arg_10h + 0x120, 0x55, 0);\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(Locale, 0x1001, arg_10h, 0x40);\n            if ((iVar3 != 0) &&\n               (iVar3 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(var_8h, 0x1002, arg_10h + 0x80, 0x40),  iVar3 != 0)) {\n                fcn.0040306c(arg_8h_00, arg_10h + 0x100, 0x10, 10);\n            }\n        }\n    }\ncode_r0x00449d6b:\n    fcn.0040241e(arg_ch);\n    return;\n}\n",
        "token_count": 1090
    },
    "0040372e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040372e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        if (99 < *(param_1 + 0xaa8)) {\n            iVar1 = *(param_1 + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        uVar2 = fcn.00401122(param_1 + 0x464 + *(param_1 + 0xaa8) * 0x10, 4, *(param_1 + 0x2d), *(param_1 + 0x28));\n        return uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 238
    },
    "0040374c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040374c(int32_t *arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        iVar2 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar1 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar1 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar1 = fcn.00401122(in_ECX + 0x464 + uVar1 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar1;\n        }\n        iVar2 = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    *arg_8h = iVar2;\n    arg_8h[1] = iVar2 >> 0x1f;\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 398
    },
    "00403788": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.00403788(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    \n    if (0 < *0x4763a8) {\n        auVar1 = pshuflw(ZEXT216(arg_ch), ZEXT216(arg_ch), 0);\n        do {\n            if ((arg_8h & 0xfff) < 0xff1) {\n                uVar3 = SUB162(auVar1, 0);\n                uVar4 = SUB162(auVar1 >> 0x10, 0);\n                auVar2 = CONCAT214(-(*0x472b4e == arg_8h[7]), \n                                   CONCAT212(-(*0x472b4c == arg_8h[6]), \n                                             CONCAT210(-(*0x472b4a == arg_8h[5]), \n                                                       CONCAT28(-(*0x472b48 == arg_8h[4]), \n                                                                CONCAT26(-(*0x472b46 == arg_8h[3]), \n                                                                         CONCAT24(-(*0x472b44 == arg_8h[2]), \n                                                                                  CONCAT22(-(*0x472b42 == arg_8h[1]), \n                                                                                           -(*0x472b40 == *arg_8h)))))))\n                                  ) |\n                         CONCAT214(-(arg_8h[7] == uVar4), \n                                   CONCAT212(-(arg_8h[6] == uVar3), \n                                             CONCAT210(-(arg_8h[5] == uVar4), \n                                                       CONCAT28(-(arg_8h[4] == uVar3), \n                                                                CONCAT26(-(arg_8h[3] == uVar4), \n                                                                         CONCAT24(-(arg_8h[2] == uVar3), \n                                                                                  CONCAT22(-(arg_8h[1] == uVar4), \n                                                                                           -(*arg_8h == uVar3))))))));\n                uVar3 = SUB161(auVar2 >> 7, 0) & 1 | (SUB161(auVar2 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar2 >> 0x17, 0) & 1) << 2 | (SUB161(auVar2 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar2 >> 0x27, 0) & 1) << 4 | (SUB161(auVar2 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar2 >> 0x37, 0) & 1) << 6 | (SUB161(auVar2 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar2 >> 0x47, 0) & 1) << 8 | (SUB161(auVar2 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar2 >> 0x57, 0) & 1) << 10 | (SUB161(auVar2 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar2 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar2 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar2 >> 0x77, 0) & 1) << 0xe | SUB161(auVar2 >> 0x7f, 0) << 0xf;\n                if (uVar3 != 0) goto code_r0x00464541;\n                iVar5 = 0x10;\n            }\n            else {\n                if (*arg_8h == arg_ch) {\n                    return arg_8h;\n                }\n                if (*arg_8h == 0) {\n                    return NULL;\n                }\n                iVar5 = 2;\n            }\n            arg_8h = arg_8h + iVar5;\n        } while( true );\n    }\n    uVar3 = *arg_8h;\n    while ((uVar3 != 0 && (uVar3 != arg_ch))) {\n        arg_8h = arg_8h + 1;\n        uVar3 = *arg_8h;\n    }\ncode_r0x004644e0:\n    return (uVar3 != arg_ch) - 1 & arg_8h;\ncode_r0x00464541:\n    iVar5 = 0;\n    if (uVar3 != 0) {\n        for (; (uVar3 >> iVar5 & 1) == 0; iVar5 = iVar5 + 1) {\n        }\n    }\n    arg_8h = arg_8h + iVar5;\n    uVar3 = *arg_8h;\n    goto code_r0x004644e0;\n}\n",
        "token_count": 1134
    },
    "004037bf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar ** __cdecl fcn.004037bf(char **arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint var_18h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    cVar1 = **0x476418;\n    if (cVar1 == '\\0') {\n        fcn.004011db(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    if (arg_10h != 0) {\n        if (cVar1 == 'X') {\n            *0x476418 = *0x476418 + 1;\n            if (*arg_ch == 0) {\n                var_10h = \"void\";\n                var_ch = 0x4;\n                goto code_r0x00411ded;\n            }\n            var_10h = \"void \";\n            var_ch = 0x5;\n            goto code_r0x00411e0c;\n        }\n        if (((cVar1 == '_') && ((*0x476418)[1] == '_')) && ((*0x476418)[2] == 'Z')) {\n            *0x476418 = *0x476418 + 3;\n        }\n    }\n    if (**0x476418 == '$') {\n        if (((*0x476418)[1] == '$') && ((*0x476418)[2] == 'T')) {\n            *0x476418 = *0x476418 + 3;\n            if (*arg_ch == 0) {\n                var_10h = \"std::nullptr_t\";\n                var_ch = 0xe;\ncode_r0x00411ded:\n                fcn.00402211(&var_10h);\n                return arg_8h;\n            }\n            var_10h = \"std::nullptr_t \";\n            var_ch = 0xf;\ncode_r0x00411e0c:\n            fcn.00402d97(arg_8h, &var_10h, arg_ch);\n            return arg_8h;\n        }\n    }\n    else if (**0x476418 == 'Y') {\n        *0x476418 = *0x476418 + 1;\n        fcn.00401550(arg_8h, arg_ch);\n        return arg_8h;\n    }\n    fcn.00403e4a(&var_8h, arg_ch);\n    if ((arg_ch[1] & 0x4000U) == 0) {\n        var_10h = var_8h;\n        var_ch = var_4h;\n        if ((arg_ch[1] & 0x2000U) == 0) goto code_r0x00411efe;\n        var_10h = \"cli::pin_ptr<\";\n        var_ch = 0xd;\n    }\n    else {\n        var_10h = \"cli::array<\";\n        var_ch = 0xb;\n    }\n    fcn.00402211(&var_10h);\n    fcn.0040395e(&var_10h, &var_8h);\ncode_r0x00411efe:\n    *arg_8h = var_10h;\n    arg_8h[1] = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 733
    },
    "004037c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004037c4(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    if (arg_10h == 0) {\n        iVar1 = 0;\n    }\n    else if ((arg_8h == 0) || (arg_ch == 0)) {\n        puVar2 = fcn.004029b9();\n        *puVar2 = 0x16;\n        fcn.00402842();\n        iVar1 = 0x7fffffff;\n    }\n    else {\n        iVar1 = 0x7fffffff;\n        if (arg_10h < 0x80000000) {\n            fcn.00403c79(arg_14h);\n            if (*(var_ch + 0xa4) == 0) {\n                iVar1 = fcn.00401b77(arg_8h, arg_ch, arg_10h);\n            }\n            else {\n                iVar3 = fcn.00403e04(*(var_ch + 0xa4), 0x1001, arg_8h, arg_10h, arg_ch, arg_10h);\n                if (iVar3 == 0) {\n                    puVar2 = fcn.004029b9();\n                    *puVar2 = 0x16;\n                }\n                else {\n                    iVar1 = iVar3 + -2;\n                }\n            }\n            if (var_4h != '\\0') {\n                *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n            }\n        }\n        else {\n            puVar2 = fcn.004029b9();\n            *puVar2 = 0x16;\n            fcn.00402842();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 458
    },
    "004037ce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004037ce(int32_t arg_8h)\n\n{\n    char cVar1;\n    \n    if (arg_8h == 0) {\n        *0x476354 = 1;\n    }\n    fcn.00402892();\n    cVar1 = fcn.00403463();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0040349a();\n        if (cVar1 != '\\0') {\n            return 1;\n        }\n        fcn.0040114f(0);\n    }\n    return 0;\n}\n",
        "token_count": 131
    },
    "00403837": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403837(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.00403e4f();\n    if ((arg_8h != 0) && (iVar1 = (**0x475f70)(0xfde9, 0, arg_8h, 0xffffffff, 0, 0, 0, 0),  0 < iVar1)) {\n        uVar2 = fcn.00401569(iVar1 + 1);\n        (**0x475f70)(0xfde9, 0, arg_8h, 0xffffffff, uVar2, iVar1, 0, 0);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 173
    },
    "0040386e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040386e(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        uVar1 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401122(in_ECX + 0x464 + uVar3 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 403
    },
    "004038af": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004038af(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_stack_ffffffe0;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x476418 != '\\0') {\n        var_8h = 0;\n        var_4h = 0;\n        fcn.0040307b(0x26);\n        arg_8h_00 = fcn.00402c43(&var_10h);\n        fcn.00402310(arg_8h_00);\n        if (**0x476418 == '@') {\n            *0x476418 = *0x476418 + 1;\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n        in_stack_ffffffe0 = 2;\n    }\n    fcn.004014dd(in_stack_ffffffe0);\n    return arg_8h;\n}\n",
        "token_count": 234
    },
    "00403909": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403909(void)\n\n{\n    bool bVar1;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    float10 in_ST0;\n    \n    if (*0x47762c != 0) {\n        bVar1 = (in_MXCSR & 0x7f80) == 0x1f80;\n        if (bVar1) {\n            bVar1 = (in_FPUControlWord & 0x7f) == 0x7f;\n        }\n        if (bVar1) {\n            fcn.0045cf8e(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n            return;\n        }\n    }\n    fcn.00402608(SUB84(in_ST0, 0), in_ST0 >> 0x20);\n    fcn.0045ae98();\n    return;\n}\n",
        "token_count": 200
    },
    "00403913": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403913(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        uVar1 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401f23(in_ECX + 0x464 + uVar3 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 403
    },
    "0040391d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040391d(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    iVar1 = *(in_ECX + 8);\n    if (*(iVar1 + 0x14) == '\\0') {\n        fcn.004024f0();\n    }\n    puVar3 = *(in_ECX + 0x30);\n    iVar4 = 0;\n    if (0 < arg_8h) {\n        do {\n            if (*puVar3 == 0) {\n                return iVar4;\n            }\n            iVar2 = fcn.00404192(**(iVar1 + 0xc), *puVar3, 0x8000);\n            if (iVar2 != 0) {\n                puVar3 = puVar3 + 1;\n            }\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < arg_8h);\n    }\n    return iVar4;\n}\n",
        "token_count": 250
    },
    "00403954": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403954(uchar *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        *arg_8h = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401122(in_ECX + 0x464 + uVar1 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 359
    },
    "00403981": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403981(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    \n    if (arg_8h != 0) {\n        LOCK();\n        *(arg_8h + 0xc) = *(arg_8h + 0xc) + -1;\n        piVar1 = *(arg_8h + 0x7c);\n        if (piVar1 != NULL) {\n            LOCK();\n            *piVar1 = *piVar1 + -1;\n        }\n        piVar1 = *(arg_8h + 0x84);\n        if (piVar1 != NULL) {\n            LOCK();\n            *piVar1 = *piVar1 + -1;\n        }\n        piVar1 = *(arg_8h + 0x80);\n        if (piVar1 != NULL) {\n            LOCK();\n            *piVar1 = *piVar1 + -1;\n        }\n        piVar1 = *(arg_8h + 0x8c);\n        if (piVar1 != NULL) {\n            LOCK();\n            *piVar1 = *piVar1 + -1;\n        }\n        ppiVar2 = arg_8h + 0x28;\n        iVar3 = 6;\n        do {\n            if ((ppiVar2[-2] != 0x4757f0) && (piVar1 = *ppiVar2,  piVar1 != NULL)) {\n                LOCK();\n                *piVar1 = *piVar1 + -1;\n            }\n            if ((ppiVar2[-3] != NULL) && (piVar1 = ppiVar2[-1],  piVar1 != NULL)) {\n                LOCK();\n                *piVar1 = *piVar1 + -1;\n            }\n            ppiVar2 = ppiVar2 + 4;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        fcn.0040121c(*(arg_8h + 0x9c));\n    }\n    return;\n}\n",
        "token_count": 462
    },
    "0040399f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040399f(uint16_t *arg_8h, uint16_t *arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.004029b9();\n        *puVar2 = 0x16;\n        fcn.00402842();\n        iVar3 = 0x7fffffff;\n    }\n    else if (arg_ch == NULL) {\n        puVar2 = fcn.004029b9();\n        *puVar2 = 0x16;\n        fcn.00402842();\n        iVar3 = 0x7fffffff;\n    }\n    else {\n        fcn.00403c79(arg_10h);\n        if (*(var_ch + 0xa8) == 0) {\n            iVar3 = fcn.004023c9(arg_8h, arg_ch);\n        }\n        else {\n            do {\n                uVar1 = *arg_8h;\n                arg_8h = arg_8h + 1;\n                uVar4 = fcn.0040278e(uVar1, &var_ch);\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uVar5 = fcn.0040278e(uVar1, &var_ch);\n                iVar3 = (uVar4 & 0xffff) - (uVar5 & 0xffff);\n                if (iVar3 != 0) break;\n            } while ((uVar4 & 0xffff) != 0);\n        }\n        if (var_4h != '\\0') {\n            *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 464
    },
    "004039a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004039a4(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        uVar1 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00404057(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 384
    },
    "004039b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004039b8(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint lpName;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    uVar3 = 0;\n    var_30h = 0;\n    var_2ch = 0;\n    lpName = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch._0_1_ = '\\0';\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = 0;\n    var_4h._0_1_ = '\\0';\n    arg_10h = fcn.00402a95();\n    iVar1 = fcn.00403666(arg_8h, &var_30h, arg_10h);\n    if (iVar1 == 0) {\n        uVar3 = fcn.00402a95();\n        iVar1 = fcn.00403666(arg_ch, &var_18h, uVar3);\n        uVar3 = var_10h;\n        if (iVar1 == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(lpName, var_10h);\n        }\n    }\n    if (var_4h != '\\0') {\n        fcn.004042f5(uVar3);\n    }\n    if (var_1ch != '\\0') {\n        fcn.004042f5(lpName);\n    }\n    return uVar2;\n}\n",
        "token_count": 463
    },
    "00403a03": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nvoid __cdecl fcn.00403a03(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t arg_8h_00;\n    uint var_2ch;\n    char *var_24h;\n    uint *var_20h;\n    char *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    if (**0x476418 == 'X') {\n        *0x476418 = *0x476418 + 1;\n        var_24h = \"void\";\n        var_20h = 0x4;\n        fcn.00402211(&fcn.00403a03::var_24h);\n    }\n    else if (**0x476418 == '?') {\n        fcn.00404246(&fcn.00403a03::var_24h);\n        if (((*0x476420 & 0x4000) != 0) && (*0x476428 != NULL)) {\n            var_14h = 0;\n            uStack20 = 0;\n            uStack16 = 0;\n            uStack12 = 0;\n            fcn.00402c2a(&fcn.00403a03::var_14h, 0x10);\n            pcVar1 = *0x476428;\n            uVar2 = fcn.00404525(&fcn.00403a03::var_14h);\n            (**0x47a000)(uVar2);\n            arg_8h_00 = (*pcVar1)();\n            if (arg_8h_00 != 0) {\n                var_20h = var_20h & 0xffffff00;\n                fcn.0040351c(arg_8h_00);\n                goto code_r0x004135ea;\n            }\n        }\n        var_20h = &fcn.00403a03::var_1ch;\n        var_1ch = \"`template-parameter\";\n        var_18h = 0x13;\n        var_24h = 0x4135ba;\n        fcn.00402211(var_20h);\n        var_24h = &fcn.00403a03::var_24h;\n        fcn.0040395e(&fcn.00403a03::var_1ch, var_24h);\n        var_2ch = 0x27;\n        fcn.0040256d(arg_8h, 0x27);\n    }\n    else {\n        var_1ch = NULL;\n        var_18h = 0;\n        fcn.00402798(arg_8h, &fcn.00403a03::var_1ch);\n    }\ncode_r0x004135ea:\n    fcn.0040241e(var_2ch);\n    return;\n}\n",
        "token_count": 705
    },
    "00403a76": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403a76(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        *arg_8h = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401f23(in_ECX + 0x464 + uVar1 * 0x10, 3, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 360
    },
    "00403abc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403abc(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 1;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.004030f3(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 364
    },
    "00403b1b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403b1b(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n        uVar4 = *(*(in_ECX + 0x10) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x10) + -4);\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00401f23(in_ECX + 0x464 + uVar1 * 0x10, 2, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar4 = puVar3[1];\n        *arg_8h = *puVar3;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 434
    },
    "00403bb1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403bb1(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int16_t *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n        *(param_1 + 0x24) = *(*(param_1 + 0x10) + -4);\n    }\n    else {\n        var_4h = *(param_1 + 0xc);\n        iVar1 = fcn.0040105f(*(param_1 + 8), var_4h, &var_4h, 10, 1);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0xc) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == 0x24)) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.00404057(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x2e), *(param_1 + 0x28));\n                return uVar3;\n            }\n            iVar1 = *(param_1 + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        *(param_1 + 0x24) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 489
    },
    "00403bcf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00403bcf(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t arg_8h_00;\n    char *pcVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401181(&var_ch);\n    if ((var_8h == '\\0') && (*0x47642c != 0)) {\n        pcVar3 = *0x47641c;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        uVar4 = pcVar3 - (*0x47641c + 1);\n        if (*0x47642c < uVar4) {\n            puVar5 = &var_4h;\n            var_4h = 0x682424;\n            do {\n                cVar1 = *puVar5;\n                puVar5 = puVar5 + 1;\n            } while (cVar1 != '\\0');\n            iVar6 = puVar5 - (&var_4h + 1);\n            iVar2 = fcn.004045ca(*0x47641c + *0x47642c, &var_4h, iVar6);\n            if ((iVar2 != 0) && (arg_8h_00 = uVar4 + 1 + iVar6,  uVar4 <= arg_8h_00)) {\n                if (arg_8h == 0) {\n                    arg_8h = fcn.004044c6(arg_8h_00);\n                    if (arg_8h != 0) goto code_r0x0040ee96;\n                }\n                else if (arg_8h_00 < arg_ch) {\ncode_r0x0040ee96:\n                    fcn.00403c38(arg_8h, *0x47641c, *0x47642c);\n                    fcn.00403c38(*0x47642c + arg_8h, &var_4h, iVar6);\n                    fcn.00403c38(*0x47642c + iVar6 + arg_8h, *0x47641c + *0x47642c, (uVar4 - *0x47642c) + 1);\n                    return arg_8h;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 585
    },
    "00403bf2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403bf2(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n        uVar4 = *(*(in_ECX + 0x10) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x10) + -4);\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00401122(in_ECX + 0x464 + uVar1 * 0x10, 2, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar4 = puVar3[1];\n        *arg_8h = *puVar3;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 432
    },
    "00403c1a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403c1a(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    \n    if (((*in_ECX != 9) && (*arg_8h != 0)) && (piVar1 = fcn.004038c8(8),  piVar1 != NULL)) {\n        *piVar1 = *arg_8h;\n        piVar1[1] = arg_8h[1];\n        *in_ECX = *in_ECX + 1;\n        in_ECX[*in_ECX + 1] = piVar1;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00403c51": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403c51(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n        uVar4 = *(*(in_ECX + 0x10) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x10) + -4);\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004028bf(in_ECX + 0x464 + uVar1 * 0x10, 4, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar4 = puVar3[1];\n        *arg_8h = *puVar3;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 413
    },
    "00403c79": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403c79(int32_t *arg_8h)\n\n{\n    int32_t *arg_ch;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    \n    *(in_ECX + 3) = 0;\n    arg_ch = in_ECX + 1;\n    if (arg_8h == NULL) {\n        iVar2 = *0x4757e4;\n        iVar3 = *0x4757e8;\n        if (*0x476fe0 != 0) {\n            iVar2 = fcn.00402f95();\n            *in_ECX = iVar2;\n            *arg_ch = *(iVar2 + 0x4c);\n            in_ECX[2] = *(iVar2 + 0x48);\n            fcn.0040300d(iVar2, arg_ch);\n            fcn.004041ce(*in_ECX, in_ECX + 2);\n            uVar1 = *(*in_ECX + 0x350);\n            if ((uVar1 & 2) != 0) {\n                return;\n            }\n            *(*in_ECX + 0x350) = uVar1 | 2;\n            *(in_ECX + 3) = 1;\n            return;\n        }\n    }\n    else {\n        iVar2 = *arg_8h;\n        iVar3 = arg_8h[1];\n    }\n    *arg_ch = iVar2;\n    in_ECX[2] = iVar3;\n    return;\n}\n",
        "token_count": 343
    },
    "00403ca1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00403ca1(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_stack_ffffffdc;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x476418 != '\\0') {\n        fcn.00402c43(&var_8h);\n        fcn.00402b99(0x5b);\n        arg_8h_00 = fcn.00402c43(&var_10h);\n        fcn.00402310(arg_8h_00);\n        fcn.00402b99(0x5d);\n        if (**0x476418 == '@') {\n            *0x476418 = *0x476418 + 1;\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n        in_stack_ffffffdc = 2;\n    }\n    fcn.004014dd(in_stack_ffffffdc);\n    return arg_8h;\n}\n",
        "token_count": 243
    },
    "00403cab": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00403cab(void)\n\n{\n    int16_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((((piVar1 != NULL) && (*piVar1 == 0x5a4d)) && (piVar2 = *(piVar1 + 0x1e) + piVar1,  *piVar2 == 0x4550)) &&\n       ((piVar1 = 0x10b,  *(piVar2 + 6) == 0x10b && (0xe < piVar2[0x1d])))) {\n        return CONCAT31(1, piVar2[0x3a] != 0);\n    }\n    return piVar1 & 0xffffff00;\n}\n",
        "token_count": 187
    },
    "00403cce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403cce(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    \n    piVar4 = in_EAX & 0xffffff00;\n    if ((*(param_1 + 6) != '\\0') && (*(param_1 + 6) != '\\a')) {\n        iVar1 = param_1[2];\n        *(iVar1 + 0x1c) = 1;\n        *(iVar1 + 0x18) = 0x16;\n        uVar3 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n        return uVar3 & 0xffffff00;\n    }\n    if ((param_1[0x117] == 2) && (param_1[0x116] == 1)) {\n        iVar1 = param_1[0x2a9];\n        piVar4 = param_1 + iVar1 * 4 + 4;\n        if (param_1 != piVar4) {\n            iVar5 = param_1[4];\n            piVar6 = param_1 + 0x119;\n            do {\n                iVar2 = *piVar6;\n                piVar6[2] = iVar5;\n                if (iVar2 == 1) {\ncode_r0x0043bb62:\n                    param_1[4] = param_1[4] + 4;\n                }\n                else {\n                    if (iVar2 != 2) {\n                        if (iVar2 == 3) goto code_r0x0043bb62;\n                        if (iVar2 != 4) {\n                            iVar1 = param_1[2];\n                            *(iVar1 + 0x1c) = 1;\n                            *(iVar1 + 0x18) = 0x16;\n                            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n                            return uVar3 & 0xffffff00;\n                        }\n                    }\n                    param_1[4] = param_1[4] + 8;\n                }\n                iVar5 = param_1[4];\n                piVar4 = param_1 + iVar1 * 4 + 0x119;\n                bVar7 = piVar6 != piVar4;\n                piVar6 = piVar6 + 4;\n            } while (bVar7);\n        }\n    }\n    return CONCAT31(piVar4 >> 8, 1);\n}\n",
        "token_count": 606
    },
    "00403cdd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403cdd(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 1;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.004030f3(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 365
    },
    "00403d0f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403d0f(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        iVar2 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar1 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar1 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar1 = fcn.00404057(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar1;\n        }\n        iVar2 = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    *arg_8h = iVar2;\n    arg_8h[1] = iVar2 >> 0x1f;\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 380
    },
    "00403d32": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403d32(int32_t *arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        iVar2 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar1 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar1 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar1 = fcn.00401f23(in_ECX + 0x464 + uVar1 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar1;\n        }\n        iVar2 = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    *arg_8h = iVar2;\n    arg_8h[1] = iVar2 >> 0x1f;\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 399
    },
    "00403d37": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403d37(int32_t param_1)\n\n{\n    if (*(param_1 + 0x404) == 0) {\n        return 0x200;\n    }\n    return *(param_1 + 0x400) >> 1;\n}\n",
        "token_count": 64
    },
    "00403da5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403da5(char *arg_8h)\n\n{\n    int32_t arg_ch;\n    uint *in_ECX;\n    \n    arg_ch = 0;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if ((arg_8h != NULL) && (*arg_8h != '\\0')) {\n        do {\n            arg_ch = arg_ch + 1;\n        } while (arg_8h[arg_ch] != '\\0');\n        if (arg_ch != 0) {\n            fcn.00403d69(arg_8h, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "00403db4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403db4(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        if (99 < *(param_1 + 0xaa8)) {\n            iVar1 = *(param_1 + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        uVar2 = fcn.004028bf(param_1 + 0x464 + *(param_1 + 0xaa8) * 0x10, 4, *(param_1 + 0x2e), *(param_1 + 0x28));\n        return uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 238
    },
    "00403de1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403de1(uint *arg_8h)\n\n{\n    if (*(arg_8h + 1) != '\\0') {\n        fcn.00402e19(*arg_8h);\n    }\n    *arg_8h = 0;\n    *(arg_8h + 1) = 0;\n    return;\n}\n",
        "token_count": 79
    },
    "00403e1d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403e1d(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x40000000) {\n        arg_8h = arg_8h << 2;\n        if (((*(in_ECX + 0x404) != 0) || (0x400 < arg_8h)) &&\n           (*(in_ECX + 0x400) <= arg_8h && arg_8h != *(in_ECX + 0x400))) {\n            var_4h = fcn.00402d88(arg_8h);\n            if (var_4h == 0) {\n                fcn.004042f5(0);\n                return 0;\n            }\n            fcn.00402cf7(&var_4h);\n            *(in_ECX + 0x400) = arg_8h;\n            fcn.004042f5(var_4h);\n        }\n        uVar1 = 1;\n    }\n    else {\n        *(arg_ch + 0x1c) = 1;\n        *(arg_ch + 0x18) = 0xc;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 297
    },
    "00403e4f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __fastcall fcn.00403e4f(char *param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*param_1 != '\\0') && (*0x477614 != 0)) {\n        (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)(param_1);\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00403e6d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00403e6d(uint arg_8h)\n\n{\n    code **ppcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char extraout_CL;\n    uint8_t uVar6;\n    char cVar7;\n    int32_t iVar8;\n    int32_t unaff_EBP;\n    code *pcVar9;\n    uint *in_FS_OFFSET;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_19h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00401b59(0x474628, 0x24);\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x19) = 1;\n    iVar4 = *(unaff_EBP + 8);\n    if (8 < iVar4) {\n        if (iVar4 == 0xb) goto code_r0x0044bacc;\n        if ((iVar4 == 0xf) || ((0x14 < iVar4 && (iVar4 < 0x17)))) goto code_r0x0044babf;\ncode_r0x0044baf0:\n        puVar2 = fcn.004029b9();\n        *puVar2 = 0x16;\n        fcn.00402842();\ncode_r0x0044bada:\n        uVar5 = 0xffffffff;\n        goto code_r0x0044bc3f;\n    }\n    if (iVar4 == 8) {\ncode_r0x0044bacc:\n        puVar2 = fcn.0040461a();\n        *(unaff_EBP + -0x20) = puVar2;\n        if (puVar2 == NULL) goto code_r0x0044bada;\n        iVar3 = fcn.0044b993(iVar4, *puVar2);\n        if (iVar3 == 0) goto code_r0x0044baf0;\n        ppcVar1 = iVar3 + 8;\n        cVar7 = '\\0';\n        *(unaff_EBP + -0x19) = 0;\n    }\n    else {\n        if (iVar4 != 2) {\n            if (iVar4 == 4) goto code_r0x0044bacc;\n            if (iVar4 != 6) goto code_r0x0044baf0;\n        }\ncode_r0x0044babf:\n        ppcVar1 = fcn.0044b8de(iVar4);\n        cVar7 = extraout_CL;\n    }\n    *(unaff_EBP + -0x24) = ppcVar1;\n    *(unaff_EBP + -0x2c) = 0;\n    if (cVar7 != '\\0') {\n        fcn.004043a4(3);\n        cVar7 = *(unaff_EBP + -0x19);\n    }\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x1a) = 0;\n    *(unaff_EBP + -4) = 0;\n    pcVar9 = *ppcVar1;\n    if (cVar7 != '\\0') {\n        uVar6 = *0x47502c & 0x1f;\n        pcVar9 = (pcVar9 ^ *0x47502c) >> uVar6 | (pcVar9 ^ *0x47502c) << 0x20 - uVar6;\n        cVar7 = *(unaff_EBP + -0x19);\n    }\n    *(unaff_EBP + -0x28) = pcVar9;\n    *(unaff_EBP + -0x1a) = pcVar9 == 0x1;\n    if (pcVar9 != 0x1) {\n        if (pcVar9 == NULL) {\n            if (cVar7 != '\\0') {\n                fcn.00401825(3);\n            }\n            fcn.004040de(3);\n            pcVar9 = swi(3);\n            uVar5 = (*pcVar9)();\n            return uVar5;\n        }\n        if (((iVar4 == 8) || (iVar4 == 0xb)) || (iVar4 == 4)) {\n            *(unaff_EBP + -0x2c) = *(*(unaff_EBP + -0x20) + 4);\n            *(*(unaff_EBP + -0x20) + 4) = 0;\n            if (iVar4 == 8) {\n                iVar3 = fcn.00402f95();\n                *(unaff_EBP + -0x30) = *(iVar3 + 8);\n                iVar3 = fcn.00402f95();\n                *(iVar3 + 8) = 0x8c;\n                goto code_r0x0044bb94;\n            }\n        }\n        else {\ncode_r0x0044bb94:\n            if (iVar4 == 8) {\n                iVar8 = *0x46b394 * 0xc + **(unaff_EBP + -0x20);\n                iVar3 = *0x46b398 * 0xc + iVar8;\n                for (; *(unaff_EBP + -0x34) = iVar8,  iVar8 != iVar3; iVar8 = iVar8 + 0xc) {\n                    *(iVar8 + 8) = 0;\n                }\n                goto code_r0x0044bbc7;\n            }\n        }\n        **(unaff_EBP + -0x24) = *0x47502c;\n    }\ncode_r0x0044bbc7:\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0044bbfc();\n    if (*(unaff_EBP + -0x1a) == '\\0') {\n        if (iVar4 == 8) {\n            iVar3 = fcn.00402f95();\n            (**0x47a000)(8, *(iVar3 + 8));\n            (*pcVar9)();\n        }\n        else {\n            (**0x47a000)(iVar4);\n            (*pcVar9)();\n            if ((iVar4 != 0xb) && (iVar4 != 4)) goto code_r0x0044bc3d;\n        }\n        *(*(unaff_EBP + -0x20) + 4) = *(unaff_EBP + -0x2c);\n        if (iVar4 == 8) {\n            iVar4 = fcn.00402f95();\n            *(iVar4 + 8) = *(unaff_EBP + -0x30);\n        }\n    }\ncode_r0x0044bc3d:\n    uVar5 = 0;\ncode_r0x0044bc3f:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar5;\n}\n",
        "token_count": 1587
    },
    "00403e77": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00403e77(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    uint32_t var_20h;\n    uint var_4h;\n    \n    puVar4 = &var_20h;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    var_20h = var_20h & 0xffff0000 | in_FPUControlWord;\n    uVar1 = fcn.0045bb72(in_FPUControlWord & 7999);\n    if (*0x4763a8 < 1) {\n        in_MXCSR = 0;\n    }\n    else {\n        in_MXCSR = in_MXCSR & 0xffc0;\n    }\n    uVar2 = fcn.0045ba96(in_MXCSR);\n    return uVar2 | ((((uVar2 & 0x3f) << 2 | uVar2 & 0xffffff00) << 6 | uVar1 & 0x3f) << 2 | uVar1 & 0x300) << 0xe |\n           uVar1;\n}\n",
        "token_count": 316
    },
    "00403e90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403e90(code **arg_8h, code **arg_ch)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    char cVar3;\n    code **ppcVar4;\n    \n    ppcVar4 = arg_8h;\n    if (arg_8h != arg_ch) {\n        do {\n            pcVar2 = *ppcVar4;\n            if (pcVar2 != NULL) {\n                (**0x47a000)();\n                cVar3 = (*pcVar2)();\n                if (cVar3 == '\\0') break;\n            }\n            ppcVar4 = ppcVar4 + 2;\n        } while (ppcVar4 != arg_ch);\n        if (ppcVar4 != arg_ch) {\n            if (ppcVar4 != arg_8h) {\n                ppcVar4 = ppcVar4 + -1;\n                do {\n                    if ((ppcVar4[-1] != NULL) && (pcVar2 = *ppcVar4,  pcVar2 != NULL)) {\n                        (**0x47a000)(0);\n                        (*pcVar2)();\n                    }\n                    ppcVar1 = ppcVar4 + -1;\n                    ppcVar4 = ppcVar4 + -2;\n                } while (ppcVar1 != arg_8h);\n            }\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 312
    },
    "00403ed6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403ed6(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        cVar1 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00404057(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar3;\n        }\n        cVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 389
    },
    "00403ee0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403ee0(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n        uVar4 = *(*(in_ECX + 0x10) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x10) + -4);\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.004028bf(in_ECX + 0x464 + uVar1 * 0x10, 2, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar4 = puVar3[1];\n        *arg_8h = *puVar3;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 413
    },
    "00403f03": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403f03(code **arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code **arg_8h_00;\n    int32_t *in_ECX;\n    \n    if ((*(in_ECX + 1) < '\\x02') && (0 < arg_8h[1])) {\n        if (*in_ECX == 0) {\n            fcn.00401b68(arg_8h);\n        }\n        else {\n            arg_8h_00 = fcn.004038c8(0xc);\n            if (arg_8h_00 == NULL) {\n                arg_8h_00 = NULL;\n            }\n            else {\n                pcVar1 = arg_8h[1];\n                pcVar2 = *arg_8h;\n                *arg_8h_00 = vtable.pcharNode.0;\n                arg_8h_00[1] = pcVar2;\n                arg_8h_00[2] = pcVar1;\n            }\n            fcn.0040243c(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "00403f58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403f58(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        *arg_8h = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401122(in_ECX + 0x464 + uVar1 * 0x10, 3, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 359
    },
    "00403f62": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403f62(uint16_t *arg_8h, uint16_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    if (*0x476fe0 == 0) {\n        if ((arg_8h == NULL) || (arg_ch == NULL)) {\n            puVar1 = fcn.004029b9();\n            *puVar1 = 0x16;\n            fcn.00402842();\n            iVar2 = 0x7fffffff;\n        }\n        else {\n            if (arg_10h < 0x80000000) {\n                if (arg_10h != 0) {\n                    do {\n                        uVar3 = *arg_8h;\n                        arg_8h = arg_8h + 1;\n                        if (uVar3 - 0x41 < 0x1a) {\n                            uVar3 = uVar3 + 0x20;\n                        }\n                        uVar4 = *arg_ch;\n                        arg_ch = arg_ch + 1;\n                        if (uVar4 - 0x41 < 0x1a) {\n                            uVar4 = uVar4 + 0x20;\n                        }\n                    } while (((uVar3 - uVar4 == 0) && (uVar3 != 0)) && (arg_10h = arg_10h - 1,  arg_10h != 0));\n                    return uVar3 - uVar4;\n                }\n                return 0;\n            }\n            puVar1 = fcn.004029b9();\n            *puVar1 = 0x16;\n            fcn.00402842();\n            iVar2 = 0x7fffffff;\n        }\n    }\n    else {\n        iVar2 = fcn.004037c4(arg_8h, arg_ch, arg_10h, 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 443
    },
    "00403f8f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00403f8f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    int32_t var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00403c79(arg_8h);\n    fcn.00450333(&var_ch, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h);\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "00403fbc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403fbc(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        if (99 < *(param_1 + 0xaa8)) {\n            iVar1 = *(param_1 + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        uVar2 = fcn.00404057(param_1 + 0x464 + *(param_1 + 0xaa8) * 0x10, 4, *(param_1 + 0x2e), *(param_1 + 0x28));\n        return uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 238
    },
    "00404002": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404002(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int16_t *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n        *(param_1 + 0x20) = *(*(param_1 + 0x10) + -4);\n    }\n    else {\n        var_4h = *(param_1 + 0xc);\n        iVar1 = fcn.0040105f(*(param_1 + 8), var_4h, &var_4h, 10, 1);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0xc) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == 0x24)) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.00404057(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x2e), *(param_1 + 0x28));\n                return uVar3;\n            }\n            iVar1 = *(param_1 + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        *(param_1 + 0x20) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 488
    },
    "0040402f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040402f(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.004029b9();\n        *puVar2 = 0x16;\n        fcn.00402842();\n        iVar3 = 0x7fffffff;\n    }\n    else if (arg_ch == NULL) {\n        puVar2 = fcn.004029b9();\n        *puVar2 = 0x16;\n        fcn.00402842();\n        iVar3 = 0x7fffffff;\n    }\n    else if (arg_10h == 0) {\n        iVar3 = 0;\n    }\n    else {\n        fcn.00403c79(arg_14h);\n        if (*(var_10h + 0xa8) == 0) {\n            iVar3 = fcn.00401b77(arg_8h, arg_ch, arg_10h);\n        }\n        else {\n            do {\n                uVar1 = *arg_8h;\n                arg_8h = arg_8h + 1;\n                var_4h = fcn.0040278e(uVar1, &var_10h);\n                var_4h = var_4h & 0xffff;\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uVar4 = fcn.0040278e(uVar1, &var_10h);\n                iVar3 = var_4h - (uVar4 & 0xffff);\n                if ((iVar3 != 0) || (var_4h == 0)) break;\n                arg_10h = arg_10h + -1;\n            } while (arg_10h != 0);\n        }\n        if (var_8h != '\\0') {\n            *(var_14h + 0x350) = *(var_14h + 0x350) & 0xfffffffd;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 539
    },
    "00404052": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404052(uint32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        uVar1 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028bf(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 374
    },
    "0040409d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040409d(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 1;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.004030f3(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 365
    },
    "004040f2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004040f2(int32_t arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t arg_14h;\n    uint uVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040248c(arg_8h, 0, 0x1ca);\n    if (*arg_ch != 0) {\n        if ((*arg_ch != 0x2e) || (arg_ch[1] == 0)) {\n            var_4h = 0;\n            arg_14h = fcn.004027e3(arg_ch, 0x46b624);\n            do {\n                if (arg_14h == 0) {\n                    return 0xffffffff;\n                }\n                iVar1 = arg_ch[arg_14h];\n                if (var_4h == 0) {\n                    if (0x3f < arg_14h) {\n                        return 0xffffffff;\n                    }\n                    iVar3 = fcn.00403df5(arg_8h, 0x40, arg_ch, arg_14h);\n                    if (iVar3 != 0) goto code_r0x0041ad9f;\n                    if (iVar1 == 0x2e) {\n                        var_4h = 1;\n                    }\n                }\n                else {\n                    if (var_4h == 1) {\n                        if (0x3f < arg_14h) {\n                            return 0xffffffff;\n                        }\n                        if (iVar1 == 0x5f) {\n                            return 0xffffffff;\n                        }\n                        uVar4 = 0x40;\n                        iVar3 = arg_8h + 0x80;\n                    }\n                    else {\n                        if (var_4h != 2) {\n                            return 0xffffffff;\n                        }\n                        if (0xf < arg_14h) {\n                            return 0xffffffff;\n                        }\n                        if ((iVar1 != 0) && (iVar1 != 0x2c)) {\n                            return 0xffffffff;\n                        }\n                        uVar4 = 0x10;\n                        iVar3 = arg_8h + 0x100;\n                    }\n                    iVar3 = fcn.00403df5(iVar3, uVar4, arg_ch, arg_14h);\n                    if (iVar3 != 0) goto code_r0x0041ad9f;\n                }\n                if (iVar1 == 0x2c) {\n                    return 0;\n                }\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                arg_ch = arg_ch + arg_14h + 1;\n                var_4h = var_4h + 1;\n                arg_14h = fcn.004027e3(arg_ch, 0x46b624);\n            } while( true );\n        }\n        iVar3 = fcn.00403df5(arg_8h + 0x100, 0x10, arg_ch + 1, 0xf);\n        if (iVar3 != 0) {\ncode_r0x0041ad9f:\n            fcn.0040277f(0, 0, 0, 0, 0);\n            pcVar2 = swi(3);\n            uVar4 = (*pcVar2)();\n            return uVar4;\n        }\n        *(arg_8h + 0x11e) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 771
    },
    "00404124": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __fastcall fcn.00404124(int32_t param_1)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint32_t arg_ch;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    int32_t in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar5 = *(param_1 + 8);\n    cVar1 = fcn.004012da(uVar5);\n    if (cVar1 != '\\0') {\n        if (*(param_1 + 0xc) != 0) {\n            do {\n                do {\n                    *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                    if (*(param_1 + 0x450) == 2) {\n                        return *(param_1 + 0x14);\n                    }\n                    *(param_1 + 0x34) = 0;\n                    *(param_1 + 0x18) = 0;\n                    uVar2 = **(param_1 + 0xc);\n                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                    *(param_1 + 0x2d) = uVar2;\n                } while (uVar2 == 0);\n                var_ch = var_ch & 0xffffff00 | uVar2;\n                uVar4 = CONCAT11(uVar2, uVar2);\n                do {\n                    if (*(param_1 + 0x14) < 0) break;\n                    arg_ch = *(param_1 + 0x18);\n                    uVar6 = var_ch;\n                    uVar2 = fcn.004016fe(var_ch, arg_ch);\n                    *(param_1 + 0x18) = uVar2;\n                    if (7 < uVar2) {\n                        iVar3 = *(param_1 + 8);\n                        *(iVar3 + 0x1c) = 1;\n                        *(iVar3 + 0x18) = 0x16;\n                        uVar5 = *(param_1 + 8);\n                        in_stack_ffffffc8 = 0;\n                        in_stack_ffffffc4 = 0;\n                        goto code_r0x0042cfda;\n                    }\n                    if (7 < uVar2) {\n                        return 0xffffffff;\n                    }\n                    cVar1 = uVar4;\n    // switch table (8 cases) at 0x42d22e\n                    switch(uVar2) {\n                    case 0:\n                        iVar3 = *(param_1 + 8);\n                        *(param_1 + 0x38) = 0;\n                        uVar6 = uVar4 & 0xff;\n                        if (*(iVar3 + 0x14) == '\\0') {\n                            fcn.004024f0();\n                            uVar2 = *(param_1 + 0x2d);\n                            uVar6 = uVar2;\n                            uVar4 = CONCAT11(uVar2, uVar2);\n                        }\n                        var_4h = var_4h & 0xffffff00 | uVar6;\n                        uVar2 = uVar4 >> 8;\n                        iVar3 = fcn.00404192(**(iVar3 + 0xc), uVar4, 0x8000);\n                        in_stack_ffffffc4 = param_1 + 0x14;\n                        if (iVar3 != 0) {\n                            fcn.004037c9(var_4h, in_stack_ffffffc4, *(param_1 + 8));\n                            uVar2 = **(param_1 + 0xc);\n                            *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                            *(param_1 + 0x2d) = uVar2;\n                            if (uVar2 == 0) {\n                                iVar3 = *(param_1 + 8);\n                                *(iVar3 + 0x1c) = 1;\n                                *(iVar3 + 0x18) = 0x16;\n                                fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                                iVar3 = *(param_1 + 8);\n                                *(iVar3 + 0x1c) = 1;\n                                *(iVar3 + 0x18) = 0x16;\n                                fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                                return 0xffffffff;\n                            }\n                        }\n                        var_8h = var_8h & 0xffffff00 | uVar2;\n                        in_stack_ffffffc8 = *(param_1 + 8);\n                        fcn.004037c9(var_8h, in_stack_ffffffc4, in_stack_ffffffc8);\n                        break;\n                    case 1:\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x1c) = 0;\n                        *(param_1 + 0x24) = 0xffffffff;\n                        *(param_1 + 0x28) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x38) = 0;\n                        break;\n                    case 2:\n                        if (cVar1 == ' ') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                        }\n                        else if (cVar1 == '#') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                        }\n                        else if (cVar1 == '+') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                        }\n                        else if (cVar1 == '-') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                        }\n                        else if (cVar1 == '0') {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                        }\n                        break;\n                    case 3:\n                        if (cVar1 == '*') {\n                            *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n                            iVar3 = *(*(param_1 + 0x10) + -4);\n                            *(param_1 + 0x20) = iVar3;\n                            if (iVar3 < 0) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                                *(param_1 + 0x20) = -iVar3;\n                            }\n                            goto code_r0x0042d14d;\n                        }\n                        iVar3 = param_1 + 0x20;\ncode_r0x0042d129:\n                        cVar1 = fcn.00404395(iVar3);\n                        goto code_r0x0042d188;\n                    case 4:\n                        *(param_1 + 0x24) = 0;\n                        break;\n                    case 5:\n                        if (cVar1 != '*') {\n                            iVar3 = param_1 + 0x24;\n                            goto code_r0x0042d129;\n                        }\n                        *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n                        iVar3 = *(*(param_1 + 0x10) + -4);\n                        *(param_1 + 0x24) = iVar3;\n                        if (iVar3 < 0) {\n                            *(param_1 + 0x24) = 0xffffffff;\n                        }\ncode_r0x0042d14d:\n                        cVar1 = '\\x01';\n                        goto code_r0x0042d188;\n                    case 6:\n                        cVar1 = fcn.00402793();\n                        goto code_r0x0042d188;\n                    case 7:\n                        cVar1 = fcn.00401bcc(uVar6, arg_ch, uVar5, unaff_EDI, unaff_ESI, unaff_EBX, var_ch, var_8h, \n                                             var_4h, unaff_EBP, unaff_retaddr);\ncode_r0x0042d188:\n                        if (cVar1 == '\\0') {\n                            return 0xffffffff;\n                        }\n                    }\n                    uVar2 = **(param_1 + 0xc);\n                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                    uVar4 = CONCAT11(uVar2, uVar2);\n                    *(param_1 + 0x2d) = uVar2;\n                    var_ch = var_ch & 0xffffff00 | uVar2;\n                } while (uVar2 != 0);\n            } while ((*(param_1 + 0x18) == '\\0') || (*(param_1 + 0x18) == '\\a'));\n        }\n        iVar3 = *(param_1 + 8);\n        *(iVar3 + 0x1c) = 1;\n        *(iVar3 + 0x18) = 0x16;\n        uVar5 = 0;\ncode_r0x0042cfda:\n        fcn.00402c20(0, in_stack_ffffffc4, in_stack_ffffffc8, 0, 0, uVar5);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 2240
    },
    "00404138": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404138(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        uVar3 = *(*(in_ECX + 0x10) + -4);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00401f23(in_ECX + 0x464 + uVar1 * 0x10, 1, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar3;\n        }\n        uVar3 = **(in_ECX + 0x46c + uVar1 * 0x10);\n        arg_8h[1] = 0;\n        *arg_8h = uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 401
    },
    "0040413d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040413d(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        iVar2 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar1 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar1 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar1 = fcn.004028bf(in_ECX + 0x464 + uVar1 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar1;\n        }\n        iVar2 = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    *arg_8h = iVar2;\n    arg_8h[1] = iVar2 >> 0x1f;\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 379
    },
    "00404156": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404156(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        *arg_8h = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.004028bf(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 339
    },
    "004041dd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004041dd(uint32_t arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    char *arg_8h_00;\n    int32_t iVar7;\n    uint32_t uVar8;\n    ulong uVar9;\n    uint lpMode;\n    char *var_20h;\n    uint32_t var_1ch;\n    uint hConsoleHandle;\n    uint32_t lpNumberOfBytesRead;\n    int32_t var_10h;\n    char *lpBuffer;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar2 = fcn.00401523();\n        *puVar2 = 0;\n        puVar2 = fcn.004029b9();\n        *puVar2 = 9;\n        return 0xffffffff;\n    }\n    if ((-1 < arg_8h) && (arg_8h < *0x477458)) {\n        var_8h = arg_8h >> 6;\n        iVar7 = (arg_8h & 0x3f) * 0x38;\n        var_1ch = 1;\n        lpNumberOfBytesRead = *(var_8h * 4 + 0x4771f0);\n        var_1h._0_1_ = *(lpNumberOfBytesRead + 0x28 + iVar7);\n        var_10h = iVar7;\n        if ((var_1h & 1) != 0) {\n            if (arg_10h < 0x80000000) {\n                if ((arg_10h == 0) || ((var_1h & 2) != 0)) {\n                    return 0;\n                }\n                if (arg_ch != NULL) {\n                    hConsoleHandle = *(lpNumberOfBytesRead + 0x18 + iVar7);\n                    var_1h._0_1_ = *(lpNumberOfBytesRead + 0x29 + iVar7);\n                    arg_8h_00 = NULL;\n                    if (var_1h == '\\x01') {\n                        if ((~arg_10h & 1) == 0) {\ncode_r0x0045a7d1:\n                            puVar2 = fcn.00401523();\n                            *puVar2 = 0;\n                            puVar2 = fcn.004029b9();\n                            *puVar2 = 0x16;\n                            fcn.00402842();\n                            pcVar3 = arg_8h_00;\n                        }\n                        else {\n                            uVar8 = 4;\n                            if (3 < arg_10h >> 1) {\n                                uVar8 = arg_10h >> 1;\n                            }\n                            pcVar3 = fcn.00402d88(uVar8);\n                            fcn.004042f5(0);\n                            fcn.004042f5(0);\n                            lpBuffer = pcVar3;\n                            if (pcVar3 != NULL) {\n                                uVar9 = fcn.004015b9(arg_8h, 0, 0, 1);\n                                iVar4 = *(var_8h * 4 + 0x4771f0);\n                                *(iVar7 + 0x20 + iVar4) = uVar9;\n                                *(iVar7 + 0x24 + iVar4) = uVar9 >> 0x20;\n                                lpNumberOfBytesRead = *(var_8h * 4 + 0x4771f0);\n                                arg_8h_00 = pcVar3;\n                                goto code_r0x0045a87a;\n                            }\n                            puVar2 = fcn.004029b9();\n                            *puVar2 = 0xc;\n                            puVar2 = fcn.00401523();\n                            *puVar2 = 8;\n                        }\ncode_r0x0045a9a6:\n                        uVar8 = 0xffffffff;\n                        arg_8h_00 = pcVar3;\n                    }\n                    else {\n                        pcVar3 = arg_ch;\n                        uVar8 = arg_10h;\n                        if (var_1h == '\\x02') {\n                            if ((~arg_10h & 1) == 0) goto code_r0x0045a7d1;\n                            lpBuffer = arg_ch;\n                        }\n                        else {\n                            lpBuffer = arg_ch;\n                        }\ncode_r0x0045a87a:\n                        iVar7 = 0;\n                        uVar6 = uVar8;\n                        pcVar5 = lpBuffer;\n                        if ((((*(var_10h + 0x28 + lpNumberOfBytesRead) & 0x48) != 0) &&\n                            (cVar1 = *(var_10h + 0x2a + lpNumberOfBytesRead),  cVar1 != '\\n')) && (uVar8 != 0)) {\n                            iVar7 = 1;\n                            *lpBuffer = cVar1;\n                            pcVar5 = lpBuffer + 1;\n                            uVar6 = uVar8 - 1;\n                            *(var_10h + 0x2a + *(var_8h * 4 + 0x4771f0)) = 10;\n                            if (((var_1h != '\\0') &&\n                                (cVar1 = *(var_10h + 0x2b + *(var_8h * 4 + 0x4771f0)),  cVar1 != '\\n')) && (uVar6 != 0))\n                            {\n                                *pcVar5 = cVar1;\n                                pcVar5 = lpBuffer + 2;\n                                uVar6 = uVar8 - 2;\n                                iVar7 = 2;\n                                *(var_10h + 0x2b + *(var_8h * 4 + 0x4771f0)) = 10;\n                                if (((var_1h == '\\x01') &&\n                                    (cVar1 = *(var_10h + 0x2c + *(var_8h * 4 + 0x4771f0)),  cVar1 != '\\n')) &&\n                                   (uVar6 != 0)) {\n                                    *pcVar5 = cVar1;\n                                    uVar6 = uVar8 - 3;\n                                    iVar7 = 3;\n                                    *(var_10h + 0x2c + *(var_8h * 4 + 0x4771f0)) = 10;\n                                    pcVar5 = lpBuffer + 3;\n                                }\n                            }\n                        }\n                        lpBuffer = pcVar5;\n                        var_20h = pcVar3;\n                        iVar4 = fcn.00404507(arg_8h);\n                        pcVar3 = arg_8h_00;\n                        if (((iVar4 == 0) || (-1 < *(var_10h + 0x28 + *(var_8h * 4 + 0x4771f0)))) ||\n                           (iVar4 = (*_sym.imp.KERNEL32.dll_GetConsoleMode)(hConsoleHandle, &lpMode),  pcVar5 = lpBuffer\n                           ,  iVar4 == 0)) {\n                            var_1ch = var_1ch & 0xffffff00;\ncode_r0x0045a9c7:\n                            pcVar5 = lpBuffer;\n                            iVar4 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                              (hConsoleHandle, lpBuffer, uVar6, &lpNumberOfBytesRead, 0);\n                            if ((iVar4 == 0) || (uVar8 = lpNumberOfBytesRead,  arg_10h < lpNumberOfBytesRead)) {\n                                iVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                                if (iVar7 != 5) {\n                                    if (iVar7 == 0x6d) {\n                                        uVar8 = 0;\n                                        goto code_r0x0045a9a9;\n                                    }\n                                    goto code_r0x0045a99f;\n                                }\n                                puVar2 = fcn.004029b9();\n                                *puVar2 = 9;\n                                puVar2 = fcn.00401523();\n                                *puVar2 = 5;\n                                goto code_r0x0045a9a6;\n                            }\n                        }\n                        else {\n                            if (var_1h != '\\x02') goto code_r0x0045a9c7;\n                            iVar4 = (*_sym.imp.KERNEL32.dll_ReadConsoleW)\n                                              (hConsoleHandle, lpBuffer, uVar6 >> 1, &lpNumberOfBytesRead, 0);\n                            if (iVar4 == 0) {\n                                iVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)();\ncode_r0x0045a99f:\n                                fcn.00403459(iVar7);\n                                goto code_r0x0045a9a6;\n                            }\n                            uVar8 = lpNumberOfBytesRead * 2;\n                        }\n                        uVar8 = iVar7 + uVar8;\n                        if (*(var_10h + 0x28 + *(var_8h * 4 + 0x4771f0)) < '\\0') {\n                            if (var_1h == '\\x02') {\n                                if (var_1ch == '\\0') {\n                                    uVar8 = fcn.0045a0ca(arg_8h, var_20h, uVar8 >> 1);\n                                }\n                                else {\n                                    uVar8 = fcn.0045a501(arg_8h, var_20h, uVar8 >> 1);\n                                }\n                            }\n                            else {\n                                uVar8 = fcn.0045a355(arg_8h, pcVar5, uVar8, arg_ch, arg_10h >> 1);\n                            }\n                        }\n                    }\ncode_r0x0045a9a9:\n                    fcn.004042f5(arg_8h_00);\n                    return uVar8;\n                }\n            }\n            puVar2 = fcn.00401523();\n            *puVar2 = 0;\n            puVar2 = fcn.004029b9();\n            *puVar2 = 0x16;\n            goto code_r0x0045aa86;\n        }\n    }\n    puVar2 = fcn.00401523();\n    *puVar2 = 0;\n    puVar2 = fcn.004029b9();\n    *puVar2 = 9;\ncode_r0x0045aa86:\n    fcn.00402842();\n    return 0xffffffff;\n}\n",
        "token_count": 2352
    },
    "00404232": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045b039)\n\nfloat10 fcn.00404232(double param_1)\n\n{\n    uint32_t arg_ch;\n    uint32_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUControlWord;\n    float10 fVar4;\n    double dVar5;\n    int64_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    \n    arg_ch = param_1 >> 0x20;\n    if (*0x47762c != 0) {\n        bVar3 = (in_MXCSR & 0x7f80) == 0x1f80;\n        if (bVar3) {\n            bVar3 = (in_FPUControlWord & 0x7f) == 0x7f;\n        }\n        if (bVar3) {\n            uVar1 = arg_ch >> 0x14;\n            iVar6 = CONCAT44(*0x4719d4, *0x4719d0 - (arg_ch >> 0x14 & *0x4719f0));\n            if ((uVar1 & 0x800) == 0) {\n                dVar5 = (param_1 >> iVar6) << iVar6;\n                if (uVar1 < 0x3ff) {\n                    return -(*0x4719e0 < param_1) & *0x4719c0;\n                }\n                if (uVar1 < 0x433) {\n                    return dVar5 + (-(dVar5 < param_1) & *0x4719c0);\n                }\n            }\n            else {\n                if (uVar1 < 0xbff) {\n                    return *0x471a00;\n                }\n                if (uVar1 < 0xc33) {\n                    return (param_1 >> iVar6) << iVar6;\n                }\n            }\n            return param_1;\n        }\n    }\n    uVar1 = fcn.0040389b(0x1b3f, 0xffff);\n    if ((param_1._6_2_ & 0x7ff0) == 0x7ff0) {\n        iVar2 = fcn.004038aa(SUB84(param_1, 0), arg_ch);\n        if (2 < iVar2 - 1U) {\n            uVar8 = SUB84(*0x471d40 + param_1, 0);\n            uVar9 = *0x471d40 + param_1 >> 0x20;\n            uVar7 = 8;\ncode_r0x0045ddb0:\n            fVar4 = fcn.00403b2a(uVar7, 0xc, param_1, uVar8, uVar9, uVar1);\n            return fVar4;\n        }\n        fcn.0040389b(uVar1, 0xffff);\n        dVar5 = param_1;\n    }\n    else {\n        fVar4 = fcn.004013b1();\n        dVar5 = fVar4;\n        if ((param_1 != fVar4) && ((uVar1 & 0x20) == 0)) {\n            uVar8 = SUB84(fVar4, 0);\n            uVar9 = fVar4 >> 0x20;\n            uVar7 = 0x10;\n            goto code_r0x0045ddb0;\n        }\n        fcn.0040389b(uVar1, 0xffff);\n    }\n    return dVar5;\n}\n",
        "token_count": 795
    },
    "004042b9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004042b9(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 2;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.0040105f(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 365
    },
    "004042be": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004042be(uint *param_1)\n\n{\n    uint uVar1;\n    uint *dwErrCode;\n    \n    dwErrCode = param_1;\n    dwErrCode = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if (*(param_1 + 2) == '\\0') {\n        param_1[1] = 0;\n        uVar1 = 0;\n        *(param_1 + 2) = 1;\n    }\n    else {\n        uVar1 = param_1[1];\n    }\n    uVar1 = fcn.004013b6(&dwErrCode, uVar1);\n    *param_1 = uVar1;\n    (*_sym.imp.KERNEL32.dll_SetLastError)(dwErrCode);\n    return uVar1;\n}\n",
        "token_count": 175
    },
    "004042e1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004042e1(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 2;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.0040105f(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 365
    },
    "004042f5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004042f5(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x477570, 0, arg_8h);\n        if (iVar1 == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar2 = fcn.004032f6(uVar2);\n            puVar3 = fcn.004029b9();\n            *puVar3 = uVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0040430e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040430e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    unkuint3 Var2;\n    \n    *(param_1 + 0x458) = *(param_1 + 0x458) + 1;\n    iVar1 = *(param_1 + 0x458);\n    Var2 = iVar1 >> 8;\n    if ((iVar1 != 3) && ((iVar1 != 2 || (*(param_1 + 0x45c) != 1)))) {\n        *(param_1 + 0xaa4) = 0xffffffff;\n        *(param_1 + 0xaa8) = 0xffffffff;\n        *(param_1 + 0x45c) = 0;\n        *(param_1 + 0x20) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0xc) = *(param_1 + 0x460);\n        return CONCAT31(Var2, 1);\n    }\n    return Var2 << 8;\n}\n",
        "token_count": 240
    },
    "00404345": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404345(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x80000000) {\n        arg_8h = arg_8h * 2;\n        if (((*(in_ECX + 0x404) != 0) || (0x400 < arg_8h)) &&\n           (*(in_ECX + 0x400) <= arg_8h && arg_8h != *(in_ECX + 0x400))) {\n            var_4h = fcn.00402d88(arg_8h);\n            if (var_4h == 0) {\n                fcn.004042f5(0);\n                return 0;\n            }\n            fcn.00402cf7(&var_4h);\n            *(in_ECX + 0x400) = arg_8h;\n            fcn.004042f5(var_4h);\n        }\n        uVar1 = 1;\n    }\n    else {\n        *(arg_ch + 0x1c) = 1;\n        *(arg_ch + 0x18) = 0xc;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 295
    },
    "00404395": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404395(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = 1;\n    arg_8h_00 = *(in_ECX + 8);\n    var_4h = *(in_ECX + 0xc) - 1;\n    uVar1 = *(arg_8h_00 + 0x18);\n    uVar2 = *(arg_8h_00 + 0x1c);\n    uVar3 = fcn.004030f3(arg_8h_00, var_4h, &var_4h, 10, 1);\n    *arg_8h = uVar3;\n    if (((*(*(in_ECX + 8) + 0x1c) == '\\0') || (*(*(in_ECX + 8) + 0x18) != 0x22)) && (*(in_ECX + 0xc) <= var_4h)) {\n        *(in_ECX + 0xc) = var_4h;\n    }\n    else {\n        uVar4 = 0;\n    }\n    *(arg_8h_00 + 0x18) = uVar1;\n    *(arg_8h_00 + 0x1c) = uVar2;\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 364
    },
    "0040439a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040439a(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t in_MXCSR;\n    uint var_4h;\n    \n    if ((*0x4763a8 < 1) || ((arg_8h != -0x3ffffd4c && (arg_8h != -0x3ffffd4b)))) {\n        return arg_8h;\n    }\n    uVar1 = in_MXCSR ^ 0x3f;\n    if ((uVar1 & 0x81) != 0) {\n        if ((uVar1 & 0x204) == 0) {\n            return -0x3fffff72;\n        }\n        if ((uVar1 & 0x102) != 0) {\n            if ((uVar1 & 0x408) == 0) {\n                return -0x3fffff6f;\n            }\n            if ((uVar1 & 0x810) != 0) {\n                if ((uVar1 & 0x1020) != 0) {\n                    return arg_8h;\n                }\n                return -0x3fffff71;\n            }\n            return -0x3fffff6d;\n        }\n    }\n    return -0x3fffff70;\n}\n",
        "token_count": 292
    },
    "004043ef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004043ef(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    \n    if (*(in_ECX + 1) < '\\x02') {\n        if (((*in_ECX == 0) || (arg_8h == 2)) || (arg_8h == 3)) {\n            fcn.004022e8(arg_8h);\n        }\n        else if (arg_8h != 0) {\n            arg_8h_00 = fcn.004032e2(arg_8h);\n            fcn.00403b7f(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "00404426": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404426(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n        *(param_1 + 0x24) = *(*(param_1 + 0x10) + -4);\n    }\n    else {\n        var_4h = *(param_1 + 0xc);\n        iVar1 = fcn.004030f3(*(param_1 + 8), var_4h, &var_4h, 10, 1);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0xc) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == '$')) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.00401122(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x2d), *(param_1 + 0x28));\n                return uVar3;\n            }\n            iVar1 = *(param_1 + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        *(param_1 + 0x24) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 483
    },
    "00404485": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404485(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    uint32_t uVar2;\n    \n    if (arg_ch == 0) {\n        return;\n    }\n    piVar1 = *in_ECX;\n    if (piVar1[2] == piVar1[1]) {\n        if (*(piVar1 + 3) == '\\0') {\ncode_r0x0043ce88:\n            *arg_10h = -1;\n            return;\n        }\n    }\n    else {\n        uVar2 = piVar1[1] - piVar1[2];\n        if (arg_ch <= uVar2) {\n            uVar2 = arg_ch;\n        }\n        fcn.00403c38(*piVar1, arg_8h, uVar2);\n        **in_ECX = **in_ECX + uVar2;\n        (*in_ECX)[2] = (*in_ECX)[2] + uVar2;\n        if (*(*in_ECX + 3) == '\\0') {\n            if (uVar2 == arg_ch) {\n                *arg_10h = *arg_10h + uVar2;\n                return;\n            }\n            goto code_r0x0043ce88;\n        }\n    }\n    *arg_10h = *arg_10h + arg_ch;\n    return;\n}\n",
        "token_count": 326
    },
    "004044cb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004044cb(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00401b59(0x4747b0, 8);\n    if (0 < *0x4763a8) {\n        if (((*(unaff_EBP + 8) & 0x40) == 0) || (*0x475940 == 0)) {\n            *(unaff_EBP + 8) = *(unaff_EBP + 8) & 0xffffffbf;\n        }\n        else {\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + -4) = 0xfffffffe;\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return;\n}\n",
        "token_count": 216
    },
    "00404516": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404516(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t in_EAX;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n        uVar4 = *(*(in_ECX + 0x10) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x10) + -4);\n        *arg_8h = uVar4;\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar4 = fcn.00401122(in_ECX + 0x464 + uVar1 * 0x10, 2, in_EAX & 0xffffff00 | *(in_ECX + 0x2d), \n                                 *(in_ECX + 0x28));\n            return uVar4;\n        }\n        puVar3 = *(in_ECX + 0x46c + uVar1 * 0x10);\n        uVar4 = puVar3[1];\n        *arg_8h = *puVar3;\n        arg_8h[1] = uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 431
    },
    "00404534": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404534(uchar *arg_8h, int32_t arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    code **ppcVar3;\n    uint *in_ECX;\n    uint var_4h;\n    \n    if ((arg_8h == NULL) || (arg_ch < 1)) {\n        *(in_ECX + 1) = 2;\n        return;\n    }\n    if (arg_ch == 1) {\n        ppcVar3 = fcn.004038c8(8);\n        if (ppcVar3 != NULL) {\n            uVar1 = *arg_8h;\n            *ppcVar3 = vtable.charNode.0;\n            *(ppcVar3 + 1) = uVar1;\n            goto code_r0x0040c1fa;\n        }\n    }\n    else {\n        iVar2 = fcn.004038c8(0xc);\n        if (iVar2 != 0) {\n            ppcVar3 = fcn.004010dc(arg_8h, arg_ch);\n            goto code_r0x0040c1fa;\n        }\n    }\n    ppcVar3 = NULL;\ncode_r0x0040c1fa:\n    *in_ECX = ppcVar3;\n    if (ppcVar3 == NULL) {\n        *(in_ECX + 1) = 3;\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "00404584": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00404584(void)\n\n{\n    int32_t in_FS_OFFSET;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if ((-1 < *(*(*(in_FS_OFFSET + 0x30) + 0x10) + 8)) && (fcn.00402ccf(&var_4h),  var_4h == 1)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 102
    },
    "00404598": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404598(uint8_t **arg_8h, uint arg_ch)\n\n{\n    uint8_t *arg_8h_00;\n    uint8_t uVar1;\n    uint *in_ECX;\n    uint8_t *puVar2;\n    int32_t arg_ch_00;\n    \n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    arg_8h_00 = *arg_8h;\n    uVar1 = *arg_8h_00;\n    if (uVar1 != 0) {\n        arg_ch_00 = 0;\n        puVar2 = arg_8h_00;\n        do {\n            if (uVar1 == arg_ch) break;\n            if ((*(uVar1 + 0x46af58) == '\\0') && ((*0x476420 & 0x10000) == 0)) {\n                *(in_ECX + 1) = 2;\n                return;\n            }\n            arg_ch_00 = arg_ch_00 + 1;\n            puVar2 = puVar2 + 1;\n            *arg_8h = puVar2;\n            uVar1 = *puVar2;\n        } while (uVar1 != 0);\n        fcn.00403d69(arg_8h_00, arg_ch_00);\n        uVar1 = **arg_8h;\n        if (uVar1 != 0) {\n            *arg_8h = *arg_8h + 1;\n            if (uVar1 == arg_ch) {\n                return;\n            }\n            *in_ECX = 0;\n            *(in_ECX + 1) = 3;\n            return;\n        }\n        if (*(in_ECX + 1) != '\\0') {\n            return;\n        }\n    }\n    *(in_ECX + 1) = 1;\n    return;\n}\n",
        "token_count": 417
    },
    "004045b6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004045b6(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        iVar1 = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar3 = *(in_ECX + 0xaa8);\n        if (99 < uVar3) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00404057(in_ECX + 0x464 + uVar3 * 0x10, 1, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar3;\n        }\n        iVar1 = **(in_ECX + 0x46c + uVar3 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 386
    },
    "004045c5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.004045c5(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x476418 == '\\0') {\n        fcn.004014dd(1);\n        return arg_8h;\n    }\n    var_8h = 0;\n    var_4h = 0;\n    fcn.0040307b(0x26);\n    uVar1 = fcn.004029f0(&var_10h);\n    fcn.00402310(uVar1);\n    if ((var_4h < '\\x02') && (**0x476418 == '@')) {\n        *0x476418 = *0x476418 + 1;\n        var_10h = 0x46aa08;\n        var_ch = 2;\n        fcn.00403f03(&var_10h);\n        uVar1 = fcn.00401f82(&var_10h, 0, 0);\n        fcn.00402310(uVar1);\n        if (**0x476418 == '@') {\n            *0x476418 = *0x476418 + 1;\n            *arg_8h = var_8h;\n            arg_8h[1] = var_4h;\n            return arg_8h;\n        }\n    }\n    fcn.004014dd(2);\n    return arg_8h;\n}\n",
        "token_count": 343
    },
    "004045e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.004045e8(uint *arg_8h)\n\n{\n    char cVar1;\n    uint in_stack_ffffffc4;\n    uint uVar2;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (**0x476418 != '\\0') {\n        fcn.00403a03(&var_8h);\n        if (var_4h < '\\x02') {\n            uVar2 = 0x7b;\n            do {\n                fcn.00402b99(uVar2);\n                cVar1 = **0x476418;\n                if (cVar1 == '2') {\n                    *0x476418 = *0x476418 + 1;\n                    uVar2 = fcn.004045e8(&var_30h);\ncode_r0x00413e8e:\n                    fcn.00402310(uVar2);\n                }\n                else {\n                    if (cVar1 == '3') {\n                        *0x476418 = *0x476418 + 1;\n                        uVar2 = fcn.00403157(&var_28h);\n                        goto code_r0x00413e8e;\n                    }\n                    if (cVar1 == '4') {\n                        *0x476418 = *0x476418 + 1;\n                        uVar2 = fcn.00401f0a(&var_20h);\n                        goto code_r0x00413e8e;\n                    }\n                    if (cVar1 != '@') {\n                        uVar2 = fcn.00403a03(&var_10h);\n                        fcn.00402310(uVar2);\n                        fcn.00402b99(0x3a);\n                        uVar2 = fcn.00402c43(&var_18h);\n                        goto code_r0x00413e8e;\n                    }\n                }\n                if ('\\x01' < var_4h) break;\n                if (**0x476418 == '@') {\n                    *0x476418 = *0x476418 + 1;\n                    fcn.00402b99(0x7d);\n                    *arg_8h = var_8h;\n                    arg_8h[1] = var_4h;\n                    return arg_8h;\n                }\n                uVar2 = 0x2c;\n            } while( true );\n        }\n        in_stack_ffffffc4 = 2;\n    }\n    fcn.004014dd(in_stack_ffffffc4);\n    return arg_8h;\n}\n",
        "token_count": 597
    },
    "00404656": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404656(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t **ppiVar3;\n    int32_t var_4h;\n    \n    if ((((*(arg_8h + 0x88) != 0) && (*(arg_8h + 0x88) != 0x475800)) && (*(arg_8h + 0x7c) != NULL)) &&\n       (**(arg_8h + 0x7c) == 0)) {\n        piVar1 = *(arg_8h + 0x84);\n        if ((piVar1 != NULL) && (*piVar1 == 0)) {\n            fcn.004042f5(piVar1);\n            fcn.0040260d(*(arg_8h + 0x88));\n        }\n        piVar1 = *(arg_8h + 0x80);\n        if ((piVar1 != NULL) && (*piVar1 == 0)) {\n            fcn.004042f5(piVar1);\n            fcn.00401a23(*(arg_8h + 0x88));\n        }\n        fcn.004042f5(*(arg_8h + 0x7c));\n        fcn.004042f5(*(arg_8h + 0x88));\n    }\n    if ((*(arg_8h + 0x8c) != NULL) && (**(arg_8h + 0x8c) == 0)) {\n        fcn.004042f5(*(arg_8h + 0x90) + -0xfe);\n        fcn.004042f5(*(arg_8h + 0x94) + -0x80);\n        fcn.004042f5(*(arg_8h + 0x98) + -0x80);\n        fcn.004042f5(*(arg_8h + 0x8c));\n    }\n    fcn.0040394a(*(arg_8h + 0x9c));\n    puVar2 = arg_8h + 0xa0;\n    var_4h = 6;\n    ppiVar3 = arg_8h + 0x28;\n    do {\n        if (((ppiVar3[-2] != 0x4757f0) && (piVar1 = *ppiVar3,  piVar1 != NULL)) && (*piVar1 == 0)) {\n            fcn.004042f5(piVar1);\n            fcn.004042f5(*puVar2);\n        }\n        if (((ppiVar3[-3] != NULL) && (piVar1 = ppiVar3[-1],  piVar1 != NULL)) && (*piVar1 == 0)) {\n            fcn.004042f5(piVar1);\n        }\n        puVar2 = puVar2 + 1;\n        ppiVar3 = ppiVar3 + 4;\n        var_4h = var_4h + -1;\n    } while (var_4h != 0);\n    fcn.004042f5(arg_8h);\n    return;\n}\n",
        "token_count": 698
    },
    "0040466f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040466f(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n        *arg_8h = *(*(in_ECX + 0x10) + -4);\n    }\n    else {\n        uVar1 = *(in_ECX + 0xaa8);\n        if (99 < uVar1) {\n            iVar2 = *(in_ECX + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.00404057(in_ECX + 0x464 + uVar1 * 0x10, 3, *(in_ECX + 0x2e), *(in_ECX + 0x28));\n            return uVar3;\n        }\n        *arg_8h = **(in_ECX + 0x46c + uVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 340
    },
    "00404692": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404692(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 4) != '\\x03') && ('\\x01' < *(arg_8h + 4))) {\n        *(in_ECX + 4) = *(arg_8h + 4);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "0040a9ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a9ae(int32_t arg_8h)\n\n{\n    if ((arg_8h - 0x4730c0U < 0x141) && (*0x47a008 != NULL)) {\n    // WARNING: Could not recover jumptable at 0x0040a9d5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x47a008)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0040a9e3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040a9e3(void)\n\n{\n    if (*0x47a008 != NULL) {\n    // WARNING: Could not recover jumptable at 0x0040a9f5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x47a008)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0040aa97": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aa97(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    if (((arg_10h < (arg_8h - arg_ch) - 0x4730c0U) && (arg_8h - 0x4730c0U < 0x141)) && (*0x47a008 != NULL)) {\n        (**0x47a008)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00416c1d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416c1d(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    \n    *(*(unaff_EBP + 0xc) + -4) = *(unaff_EBP + -0x30);\n    fcn.0040448a(*(unaff_EBP + -0x34));\n    iVar1 = fcn.004020a9();\n    *(iVar1 + 0x10) = *(unaff_EBP + -0x38);\n    iVar1 = fcn.004020a9();\n    *(iVar1 + 0x14) = *(unaff_EBP + -0x3c);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((unaff_ESI[5] == 0x19930520 || ((unaff_ESI[5] == 0x19930521 || (unaff_ESI[5] == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x40) == 0 && (unaff_EBX != 0)))) {\n        iVar1 = fcn.004023d8(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.004024ff(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 376
    },
    "00416ea2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00416ea2(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004020a9();\n    if (0 < *(iVar1 + 0x18)) {\n        iVar1 = fcn.004020a9();\n        *(iVar1 + 0x18) = *(iVar1 + 0x18) + -1;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00417c3e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00417c3e(void)\n\n{\n    uint8_t uVar1;\n    int32_t **extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uint var_10h;\n    uint arg_8h;\n    uint var_4h;\n    \n    fcn.00401b59(0x4740e8, 0x18);\n    if (*0x476488 != '\\0') goto code_r0x00417cf5;\n    *0x476480 = 1;\n    *(unaff_EBP + -4) = 0;\n    uVar2 = *0x47502c;\n    if (**extraout_ECX == 0) {\n        uVar1 = *0x47502c & 0x1f;\n        *(unaff_EBP + -0x20) = *0x47502c;\n        if (*0x476484 != uVar2) {\n            uVar2 = uVar2 ^ *0x476484;\n            pcVar3 = uVar2 >> uVar1 | uVar2 << 0x20 - uVar1;\n            *(unaff_EBP + -0x24) = pcVar3;\n            (**0x47a000)(0, 0, 0);\n            (*pcVar3)();\n        }\n        arg_8h = 0x476fec;\ncode_r0x00417cac:\n        fcn.00401979(arg_8h);\n    }\n    else if (**extraout_ECX == 1) {\n        arg_8h = 0x476ffc;\n        goto code_r0x00417cac;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (**extraout_ECX == 0) {\n        fcn.00404165(0x469834, 0x469b48);\n    }\n    fcn.00404165(0x469c4c, 0x469d50);\n    if (*extraout_ECX[1] == 0) {\n        *0x476488 = '\\x01';\n        *extraout_ECX[2] = 1;\n    }\ncode_r0x00417cf5:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return;\n}\n",
        "token_count": 567
    },
    "00417dd3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417dd3(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint *puVar4;\n    uint *var_24h;\n    uint *var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar var_dh;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x467b0d;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x47502c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_10h == 0) {\n        cVar2 = fcn.00417ed5(uVar3);\n        if (cVar2 != '\\0') {\n            fcn.00417f52(arg_8h);\n        }\n    }\n    var_24h = &arg_ch;\n    var_dh = 0;\n    var_20h = &arg_10h;\n    var_1ch = &var_dh;\n    var_4h = 0;\n    var_14h = 2;\n    var_18h = 2;\n    puVar4 = &var_14h;\n    arg_ch_00 = &var_24h;\n    arg_8h_00 = &var_18h;\n    fcn.00417a77(arg_8h_00, arg_ch_00);\n    if (arg_10h != 0) {\n        *in_FS_OFFSET = var_ch;\n        return;\n    }\n    fcn.00417e8f(arg_8h);\n    pcVar1 = swi(3);\n    (*pcVar1)(arg_8h_00, arg_ch_00, puVar4);\n    return;\n}\n",
        "token_count": 467
    },
    "00417f52": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417f52(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t hLibModule;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x467b31;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x47502c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    hLibModule = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleExW)(0, 0x46b2b0, &hLibModule, uVar1);\n    if (iVar2 != 0) {\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(hLibModule, \"CorExitProcess\");\n        if (pcVar3 != NULL) {\n            (**0x47a000)(arg_8h);\n            (*pcVar3)();\n        }\n    }\n    if (hLibModule != 0) {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 291
    },
    "004042af": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004042af(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *arg_ch;\n    char *arg_8h_00;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        iVar2 = 0;\n    }\n    else if ((arg_8h == 2) || (arg_8h == 1)) {\n        fcn.004032bf();\n        fcn.0040399a(0, 0x476c10, 0x104);\n        *0x4771d0 = 0x476c10;\n        if ((*0x4771e4 == NULL) || (arg_8h_00 = *0x4771e4,  **0x4771e4 == '\\0')) {\n            arg_8h_00 = 0x476c10;\n        }\n        var_4h = 0;\n        var_ch = 0;\n        fcn.00418b09(arg_8h_00, 0, 0, &var_4h, &var_ch);\n        arg_ch = fcn.0040402a(var_4h, var_ch, 1);\n        if (arg_ch == NULL) {\n            puVar3 = fcn.004029b9();\n            iVar2 = 0xc;\n            *puVar3 = 0xc;\n        }\n        else {\n            fcn.00418b09(arg_8h_00, arg_ch, arg_ch + var_4h, &var_4h, &var_ch);\n            if (arg_8h != 1) {\n                var_8h = NULL;\n                iVar2 = fcn.004031de(arg_ch, &var_8h);\n                piVar1 = var_8h;\n                if (iVar2 == 0) {\n                    *0x4771d8 = 0;\n                    iVar2 = *var_8h;\n                    while (iVar2 != 0) {\n                        var_8h = var_8h + 1;\n                        *0x4771d8 = *0x4771d8 + 1;\n                        iVar2 = *var_8h;\n                    }\n                    var_8h = NULL;\n                    *0x4771dc = piVar1;\n                    fcn.004042f5(0);\n                    iVar2 = 0;\n                }\n                else {\n                    fcn.004042f5(var_8h);\n                }\n                var_8h = NULL;\n                fcn.004042f5(arg_ch);\n                return iVar2;\n            }\n            *0x4771d8 = var_4h + -1;\n            iVar2 = 0;\n            *0x4771dc = arg_ch;\n        }\n        fcn.004042f5(0);\n    }\n    else {\n        puVar3 = fcn.004029b9();\n        iVar2 = 0x16;\n        *puVar3 = 0x16;\n        fcn.00402842();\n    }\n    return iVar2;\n}\n",
        "token_count": 710
    },
    "00418943": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00418943(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *arg_ch;\n    int16_t *arg_8h_00;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        iVar2 = 0;\n    }\n    else if ((arg_8h == 2) || (arg_8h == 1)) {\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0x476d50, 0x104);\n        *0x4771d4 = 0x476d50;\n        if ((*0x4771e8 == NULL) || (arg_8h_00 = *0x4771e8,  **0x4771e8 == 0)) {\n            arg_8h_00 = 0x476d50;\n        }\n        var_4h = 0;\n        var_ch = 0;\n        fcn.00418cda(arg_8h_00, 0, 0, &var_4h, &var_ch);\n        arg_ch = fcn.0040402a(var_4h, var_ch, 2);\n        if (arg_ch == NULL) {\n            puVar3 = fcn.004029b9();\n            iVar2 = 0xc;\n            *puVar3 = 0xc;\n        }\n        else {\n            fcn.00418cda(arg_8h_00, arg_ch, arg_ch + var_4h, &var_4h, &var_ch);\n            if (arg_8h != 1) {\n                var_8h = NULL;\n                iVar2 = fcn.0040441c(arg_ch, &var_8h);\n                piVar1 = var_8h;\n                if (iVar2 == 0) {\n                    *0x4771d8 = 0;\n                    iVar2 = *var_8h;\n                    while (iVar2 != 0) {\n                        var_8h = var_8h + 1;\n                        *0x4771d8 = *0x4771d8 + 1;\n                        iVar2 = *var_8h;\n                    }\n                    var_8h = NULL;\n                    *0x4771e0 = piVar1;\n                    fcn.004042f5(0);\n                    iVar2 = 0;\n                }\n                else {\n                    fcn.004042f5(var_8h);\n                }\n                var_8h = NULL;\n                fcn.004042f5(arg_ch);\n                return iVar2;\n            }\n            *0x4771d8 = var_4h + -1;\n            iVar2 = 0;\n            *0x4771e0 = arg_ch;\n        }\n        fcn.004042f5(0);\n    }\n    else {\n        puVar3 = fcn.004029b9();\n        iVar2 = 0x16;\n        *puVar3 = 0x16;\n        fcn.00402842();\n    }\n    return iVar2;\n}\n",
        "token_count": 712
    },
    "00419209": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00419209(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*0x476fc4 != 0) {\n        return 0;\n    }\n    fcn.004032bf();\n    arg_8h = fcn.00403cf6();\n    if (arg_8h == 0) {\n        fcn.004042f5(0);\n        return 0xffffffff;\n    }\n    iVar1 = fcn.0041937f(arg_8h);\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = 0;\n        *0x476fc4 = iVar1;\n        *0x476fd4 = iVar1;\n    }\n    fcn.004042f5(0);\n    fcn.004042f5(arg_8h);\n    return uVar2;\n}\n",
        "token_count": 210
    },
    "00419279": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00419279(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*0x476fc8 != 0) {\n        return 0;\n    }\n    arg_8h = fcn.00402824();\n    if (arg_8h == 0) {\n        fcn.004042f5(0);\n        return 0xffffffff;\n    }\n    iVar1 = fcn.00419499(arg_8h);\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = 0;\n        *0x476fc8 = iVar1;\n        *0x476fd0 = iVar1;\n    }\n    fcn.004042f5(0);\n    fcn.004042f5(arg_8h);\n    return uVar2;\n}\n",
        "token_count": 200
    },
    "0041bd82": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2e4h\n\nvoid __cdecl fcn.0041bd82(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    code *pcVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    uint *puVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint16_t *puVar13;\n    uint *puVar14;\n    uint32_t uVar15;\n    bool bVar16;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint32_t var_2c0h;\n    uint32_t var_2bch;\n    uint var_2b8h;\n    uint var_20ch;\n    uint var_10ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    iVar9 = fcn.00402f95();\n    puVar10 = iVar9 + 0x278;\n    iVar11 = fcn.0041af2f(arg_10h, &var_10ch, 0x83, &var_2b8h, 0x55, &var_2c4h);\n    if (iVar11 != 0) {\n        iVar11 = (arg_ch + 2) * 0x10;\n        puVar14 = &var_10ch;\n        puVar13 = *(iVar11 + arg_8h);\n        do {\n            var_2bch = 0;\n            bVar16 = *puVar14 < *puVar13;\n            if (*puVar14 != *puVar13) {\ncode_r0x0041be47:\n                uVar15 = -bVar16 | 1;\n                goto code_r0x0041be4c;\n            }\n            if (*puVar14 == 0) break;\n            uVar1 = *(puVar14 + 2);\n            bVar16 = uVar1 < puVar13[1];\n            var_2c0h = var_2c0h & 0xffff | uVar1 << 0x10;\n            if (uVar1 != puVar13[1]) goto code_r0x0041be47;\n            puVar14 = puVar14 + 1;\n            puVar13 = puVar13 + 2;\n        } while (uVar1 != 0);\n        uVar15 = 0;\ncode_r0x0041be4c:\n        if (uVar15 != 0) {\n            puVar14 = &var_10ch;\n            do {\n                iVar2 = *puVar14;\n                puVar14 = puVar14 + 2;\n            } while (iVar2 != 0);\n            var_2c0h = (puVar14 - (&var_10ch + 2) >> 1) + 1;\n            puVar14 = fcn.00402d88(var_2c0h * 2 + 4);\n            if (puVar14 != NULL) {\n                iVar3 = *(iVar11 + arg_8h);\n                uVar4 = *(arg_8h + 0xa0 + arg_ch * 4);\n                var_2e4h = *(arg_8h + 8);\n                iVar12 = fcn.0040295a(puVar14 + 1, var_2c0h, &var_10ch);\n                if (iVar12 != 0) {\n                    fcn.0040277f(var_2bch, var_2bch, var_2bch, var_2bch, var_2bch);\n                    pcVar7 = swi(3);\n                    (*pcVar7)();\n                    return;\n                }\n                *(iVar11 + arg_8h) = puVar14 + 1;\n                if ((var_10ch != 0x43) || (uVar15 = var_2bch,  var_10ch._2_2_ != 0)) {\n                    uVar15 = fcn.004028b5(&var_2b8h);\n                }\n                *(arg_8h + 0xa0 + arg_ch * 4) = uVar15;\n                if (arg_ch == 2) {\n                    *(arg_8h + 8) = var_2c4h;\n                    uVar15 = var_2bch;\n                    var_2c4h = *(iVar9 + 0x29c);\n                    var_2c0h = *(iVar9 + 0x298);\n                    do {\n                        if (*(arg_8h + 8) == puVar10[uVar15 * 2]) {\n                            if (uVar15 != 0) {\n                                uVar6 = *(iVar9 + 0x27c + uVar15 * 8);\n                                *puVar10 = puVar10[uVar15 * 2];\n                                *(iVar9 + 0x27c) = uVar6;\n                                puVar10[uVar15 * 2] = var_2c0h;\n                                *(iVar9 + 0x27c + uVar15 * 8) = var_2c4h;\n                            }\n                            goto code_r0x0041c023;\n                        }\n                        uVar5 = puVar10[uVar15 * 2];\n                        uVar6 = *(iVar9 + 0x27c + uVar15 * 8);\n                        puVar10[uVar15 * 2] = var_2c0h;\n                        *(iVar9 + 0x27c + uVar15 * 8) = var_2c4h;\n                        uVar15 = uVar15 + 1;\n                        var_2c4h = uVar6;\n                        var_2c0h = uVar5;\n                    } while (uVar15 < 5);\n                    if (uVar15 == 5) {\n                        iVar12 = fcn.004011e0(var_2bch, 1, 0x46b480, 0x7f, &var_20ch, *(arg_8h + 8), 1);\n                        uVar15 = var_2bch;\n                        if (iVar12 != 0) {\n                            do {\n                                puVar13 = &var_20ch + uVar15 * 2;\n                                *puVar13 = *puVar13 & 0x1ff;\n                                uVar15 = uVar15 + 1;\n                            } while (uVar15 < 0x7f);\n                            iVar12 = fcn.00401a41(&var_20ch, *0x475080, 0xfe);\n                            uVar15 = iVar12 == 0;\n                        }\n                        *(iVar9 + 0x27c) = uVar15;\n                        *puVar10 = *(arg_8h + 8);\n                    }\ncode_r0x0041c023:\n                    *(arg_8h + 0x18) = *(iVar9 + 0x27c);\n                }\n                else if (arg_ch == 1) {\n                    *(arg_8h + 0x10) = var_2c4h;\n                }\n                else if (arg_ch == 5) {\n                    *(arg_8h + 0x14) = var_2c4h;\n                }\n                pcVar7 = *(arg_ch * 0xc + 0x46b520);\n                (**0x47a000)(arg_8h);\n                iVar9 = (*pcVar7)();\n                if (iVar9 == 0) {\n                    if (iVar3 != 0x4757f0) {\n                        piVar8 = *(arg_8h + 0x28 + arg_ch * 0x10);\n                        LOCK();\n                        iVar9 = *piVar8 + -1;\n                        *piVar8 = iVar9;\n                        if (iVar9 == 0) {\n                            fcn.004042f5(*(arg_8h + 0x28 + arg_ch * 0x10));\n                            fcn.004042f5(*(arg_8h + 0x24 + arg_ch * 0x10));\n                            fcn.004042f5(*(arg_8h + 0xa0 + arg_ch * 4));\n                            *(iVar11 + arg_8h) = var_2bch;\n                            *(arg_8h + 0xa0 + arg_ch * 4) = var_2bch;\n                        }\n                    }\n                    *puVar14 = 1;\n                    *(arg_8h + 0x28 + arg_ch * 0x10) = puVar14;\n                }\n                else {\n                    *(iVar11 + arg_8h) = iVar3;\n                    fcn.004042f5(*(arg_8h + 0xa0 + arg_ch * 4));\n                    *(arg_8h + 0xa0 + arg_ch * 4) = uVar4;\n                    fcn.004042f5(puVar14);\n                    *(arg_8h + 8) = var_2e4h;\n                }\n            }\n        }\n    }\n    fcn.0040241e(var_2e4h);\n    return;\n}\n",
        "token_count": 2125
    },
    "0041daf7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0041daf7(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = arg_18h;\n        var_18h = &arg_8h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        var_ch = arg_10h;\n        uVar1 = fcn.0041d73e(&var_ch, &var_20h);\n        return uVar1;\n    }\n    *(arg_18h + 0x1c) = 1;\n    *(arg_18h + 0x18) = 0x16;\n    fcn.00402c20(0, 0, 0, 0, 0, arg_18h);\n    return 0xffffffff;\n}\n",
        "token_count": 343
    },
    "0041db85": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0041db85(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = arg_18h;\n        var_18h = &arg_8h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        var_ch = arg_10h;\n        uVar1 = fcn.0041d891(&var_ch, &var_20h);\n        return uVar1;\n    }\n    *(arg_18h + 0x1c) = 1;\n    *(arg_18h + 0x18) = 0x16;\n    fcn.00402c20(0, 0, 0, 0, 0, arg_18h);\n    return 0xffffffff;\n}\n",
        "token_count": 342
    },
    "0041dc13": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0041dc13(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = arg_18h;\n        var_18h = &arg_8h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        var_ch = arg_10h;\n        uVar1 = fcn.0041d902(&var_ch, &var_20h);\n        return uVar1;\n    }\n    *(arg_18h + 0x1c) = 1;\n    *(arg_18h + 0x18) = 0x16;\n    fcn.00402c20(0, 0, 0, 0, 0, arg_18h);\n    return 0xffffffff;\n}\n",
        "token_count": 342
    },
    "0041dca1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0041dca1(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = arg_18h;\n        var_18h = &arg_8h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        var_ch = arg_10h;\n        uVar1 = fcn.0041d7af(&var_ch, &var_20h);\n        return uVar1;\n    }\n    *(arg_18h + 0x1c) = 1;\n    *(arg_18h + 0x18) = 0x16;\n    fcn.00402c20(0, 0, 0, 0, 0, arg_18h);\n    return 0xffffffff;\n}\n",
        "token_count": 344
    },
    "0041dd2f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0041dd2f(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = arg_18h;\n        var_18h = &arg_8h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        var_ch = arg_10h;\n        uVar1 = fcn.0041d820(&var_ch, &var_20h);\n        return uVar1;\n    }\n    *(arg_18h + 0x1c) = 1;\n    *(arg_18h + 0x18) = 0x16;\n    fcn.00402c20(0, 0, 0, 0, 0, arg_18h);\n    return 0xffffffff;\n}\n",
        "token_count": 343
    },
    "0041ddbd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0041ddbd(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        var_20h = &arg_10h;\n        var_8h = arg_10h;\n        var_1ch = arg_18h;\n        var_18h = &arg_8h;\n        var_14h = &arg_14h;\n        var_10h = &arg_1ch;\n        var_ch = arg_10h;\n        uVar1 = fcn.0041d6cd(&var_ch, &var_20h);\n        return uVar1;\n    }\n    *(arg_18h + 0x1c) = 1;\n    *(arg_18h + 0x18) = 0x16;\n    fcn.00402c20(0, 0, 0, 0, 0, arg_18h);\n    return 0xffffffff;\n}\n",
        "token_count": 343
    },
    "0041df8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0041df8c(uint arg_8h, uint arg_ch, ushort *arg_10h, uint32_t arg_14h, uint32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, uint arg_24h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_1ch == 0) {\n        *(arg_20h + 0x1c) = 1;\n        *(arg_20h + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_20h);\n        return -1;\n    }\n    if (arg_18h == 0) {\n        if (arg_10h == NULL) {\n            if (arg_14h == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x0041dfe9:\n            if (arg_14h != 0) {\n                uVar2 = *(arg_20h + 0x18);\n                uVar3 = *(arg_20h + 0x1c);\n                if (arg_18h < arg_14h) {\n                    iVar4 = fcn.0041e2b3(arg_8h, arg_ch, arg_10h, arg_18h + 1, arg_1ch, arg_20h, arg_24h);\n                    if (iVar4 == -2) {\n                        cVar1 = *(arg_20h + 0x1c);\ncode_r0x0041e04e:\n                        if (cVar1 == '\\0') {\n                            return -1;\n                        }\n                        if (*(arg_20h + 0x18) != 0x22) {\n                            return -1;\n                        }\n                        *(arg_20h + 0x18) = uVar2;\n                        *(arg_20h + 0x1c) = uVar3;\n                        return -1;\n                    }\ncode_r0x0041e064:\n                    if (-1 < iVar4) {\n                        return iVar4;\n                    }\n                }\n                else {\n                    iVar4 = fcn.0041e2b3(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, arg_24h);\n                    arg_10h[arg_14h - 1] = 0;\n                    if (iVar4 != -2) goto code_r0x0041e064;\n                    if (arg_18h == 0xffffffff) {\n                        cVar1 = *(arg_20h + 0x1c);\n                        goto code_r0x0041e04e;\n                    }\n                }\n                *arg_10h = 0;\n                if (iVar4 != -2) {\n                    return -1;\n                }\n                *(arg_20h + 0x18) = 0x22;\n                goto code_r0x0041e082;\n            }\n        }\n    }\n    else if (arg_10h != NULL) goto code_r0x0041dfe9;\n    *(arg_20h + 0x18) = 0x16;\ncode_r0x0041e082:\n    *(arg_20h + 0x1c) = 1;\n    fcn.00402c20(0, 0, 0, 0, 0, arg_20h);\n    return -1;\n}\n",
        "token_count": 803
    },
    "0041ec65": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0041ec65(uint arg_8h, uint arg_ch, uchar *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_18h == 0) {\n        *(arg_1ch + 0x1c) = 1;\n        *(arg_1ch + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch);\n    }\n    else {\n        if ((arg_10h == NULL) || (arg_14h == 0)) {\n            *(arg_1ch + 0x1c) = 1;\n            *(arg_1ch + 0x18) = 0x16;\n        }\n        else {\n            iVar1 = fcn.0041e0e2(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if (iVar1 < 0) {\n                *arg_10h = 0;\n            }\n            if (iVar1 != -2) {\n                return iVar1;\n            }\n            *(arg_1ch + 0x1c) = 1;\n            *(arg_1ch + 0x18) = 0x22;\n        }\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch);\n    }\n    return -1;\n}\n",
        "token_count": 368
    },
    "0041ed2b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0041ed2b(uint arg_8h, uint arg_ch, ushort *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_18h == 0) {\n        *(arg_1ch + 0x1c) = 1;\n        *(arg_1ch + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch);\n    }\n    else {\n        if ((arg_10h == NULL) || (arg_14h == 0)) {\n            *(arg_1ch + 0x1c) = 1;\n            *(arg_1ch + 0x18) = 0x16;\n        }\n        else {\n            iVar1 = fcn.0041e2b3(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if (iVar1 < 0) {\n                *arg_10h = 0;\n            }\n            if (iVar1 != -2) {\n                return iVar1;\n            }\n            *(arg_1ch + 0x1c) = 1;\n            *(arg_1ch + 0x18) = 0x22;\n        }\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch);\n    }\n    return -1;\n}\n",
        "token_count": 369
    },
    "0042a311": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a311(int32_t **arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0 < arg_10h) {\n        iVar2 = *arg_14h;\n        do {\n            piVar1 = *arg_8h;\n            if (piVar1[2] == piVar1[1]) {\n                if (*(piVar1 + 3) == '\\0') {\n                    iVar2 = -1;\n                }\n                else {\n                    iVar2 = iVar2 + 1;\n                }\n                *arg_14h = iVar2;\n            }\n            else {\n                *arg_14h = iVar2 + 1;\n                (*arg_8h)[2] = (*arg_8h)[2] + 1;\n                ***arg_8h = arg_ch;\n                **arg_8h = **arg_8h + 1;\n                iVar2 = *arg_14h;\n            }\n        } while ((iVar2 != -1) && (iVar3 = iVar3 + 1,  iVar3 < arg_10h));\n    }\n    return;\n}\n",
        "token_count": 288
    },
    "0042a38a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a38a(int32_t **arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0 < arg_10h) {\n        iVar2 = *arg_14h;\n        do {\n            piVar1 = *arg_8h;\n            if (piVar1[2] == piVar1[1]) {\n                if (*(piVar1 + 3) == '\\0') {\n                    iVar2 = -1;\n                }\n                else {\n                    iVar2 = iVar2 + 1;\n                }\n                *arg_14h = iVar2;\n            }\n            else {\n                *arg_14h = iVar2 + 1;\n                (*arg_8h)[2] = (*arg_8h)[2] + 1;\n                ***arg_8h = arg_ch;\n                **arg_8h = **arg_8h + 2;\n                iVar2 = *arg_14h;\n            }\n        } while ((iVar2 != -1) && (iVar3 = iVar3 + 1,  iVar3 < arg_10h));\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "0042b7df": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042b7df(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    \n    if ((*(in_ECX + 1) == '\\0') || (in_EAX = *in_ECX,  in_EAX != arg_8h)) {\n        uVar1 = in_EAX & 0xffffff00;\n    }\n    else {\n        uVar1 = CONCAT31(in_EAX >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 131
    },
    "0042b840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042b840(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *var_4h;\n    \n    if (*param_1 == 0) {\n        var_4h = param_1;\n        var_4h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (*(param_1 + 2) == '\\0') {\n            param_1[1] = 0;\n            iVar2 = 0;\n            *(param_1 + 2) = 1;\n        }\n        else {\n            iVar2 = param_1[1];\n        }\n        iVar2 = fcn.004013b6(&var_4h, iVar2);\n        *param_1 = iVar2;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(var_4h);\n        if (iVar2 == 0) {\n            fcn.00403693();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n    }\n    return *param_1;\n}\n",
        "token_count": 248
    },
    "0042fc5e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042fc5e(uint32_t param_1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    uint32_t var_4h;\n    \n    iVar2 = *(param_1 + 8);\n    *(param_1 + 0x38) = 0;\n    if (*(iVar2 + 0x14) == '\\0') {\n        fcn.004024f0();\n    }\n    uVar1 = *(param_1 + 0x2d);\n    iVar2 = fcn.00404192(**(iVar2 + 0xc), uVar1, 0x8000);\n    if (iVar2 == 0) {\n        var_4h = param_1 & 0xffffff00 | uVar1;\n    }\n    else {\n        fcn.004037c9(unaff_EBX & 0xffffff00 | uVar1, param_1 + 0x14, *(param_1 + 8));\n        uVar1 = **(param_1 + 0xc);\n        *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n        *(param_1 + 0x2d) = uVar1;\n        if (uVar1 == 0) {\n            iVar2 = *(param_1 + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n            iVar2 = *(param_1 + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        var_4h = param_1 & 0xffffff00 | uVar1;\n    }\n    fcn.004037c9(var_4h, param_1 + 0x14, *(param_1 + 8));\n    return 1;\n}\n",
        "token_count": 505
    },
    "0042fe4b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042fe4b(uint32_t param_1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    uint32_t var_4h;\n    \n    iVar2 = *(param_1 + 8);\n    *(param_1 + 0x38) = 0;\n    if (*(iVar2 + 0x14) == '\\0') {\n        fcn.004024f0();\n    }\n    uVar1 = *(param_1 + 0x2d);\n    iVar2 = fcn.00404192(**(iVar2 + 0xc), uVar1, 0x8000);\n    if (iVar2 == 0) {\n        var_4h = param_1 & 0xffffff00 | uVar1;\n    }\n    else {\n        fcn.004037c9(unaff_EBX & 0xffffff00 | uVar1, param_1 + 0x14, *(param_1 + 8));\n        uVar1 = **(param_1 + 0xc);\n        *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n        *(param_1 + 0x2d) = uVar1;\n        if (uVar1 == 0) {\n            iVar2 = *(param_1 + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n            iVar2 = *(param_1 + 8);\n            *(iVar2 + 0x1c) = 1;\n            *(iVar2 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n            return 0;\n        }\n        var_4h = param_1 & 0xffffff00 | uVar1;\n    }\n    fcn.004037c9(var_4h, param_1 + 0x14, *(param_1 + 8));\n    return 1;\n}\n",
        "token_count": 505
    },
    "0043c1ff": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043c1ff(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t **in_ECX;\n    \n    piVar1 = *in_ECX;\n    if (piVar1[2] == piVar1[1]) {\n        if (*(piVar1 + 3) == '\\0') {\n            *arg_ch = -1;\n        }\n        else {\n            *arg_ch = *arg_ch + 1;\n        }\n        uVar2 = *in_ECX & 0xffffff00 | *(*in_ECX + 3);\n    }\n    else {\n        *arg_ch = *arg_ch + 1;\n        (*in_ECX)[2] = (*in_ECX)[2] + 1;\n        ***in_ECX = arg_8h;\n        piVar1 = *in_ECX;\n        *piVar1 = *piVar1 + 1;\n        uVar2 = CONCAT31(piVar1 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 245
    },
    "0043c251": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043c251(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t **in_ECX;\n    \n    piVar1 = *in_ECX;\n    if (piVar1[2] == piVar1[1]) {\n        if (*(piVar1 + 3) == '\\0') {\n            *arg_ch = -1;\n        }\n        else {\n            *arg_ch = *arg_ch + 1;\n        }\n        uVar2 = *in_ECX & 0xffffff00 | *(*in_ECX + 3);\n    }\n    else {\n        *arg_ch = *arg_ch + 1;\n        (*in_ECX)[2] = (*in_ECX)[2] + 1;\n        ***in_ECX = arg_8h;\n        piVar1 = *in_ECX;\n        *piVar1 = *piVar1 + 2;\n        uVar2 = CONCAT31(piVar1 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 244
    },
    "0043c33b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c33b(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint in_stack_ffffffdc;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    if ((*(param_1 + 0x38) == '\\0') || (*(param_1 + 0x34) < 1)) {\n        in_stack_ffffffdc = *(param_1 + 8);\n        fcn.00402db0(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14, in_stack_ffffffdc);\n    }\n    else {\n        puVar4 = *(param_1 + 0x30);\n        iVar3 = 0;\n        do {\n            uVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar2 = fcn.00402f72(&var_10h, &var_ch, 6, uVar1, *(param_1 + 8));\n            if ((iVar2 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x14) = 0xffffffff;\n                break;\n            }\n            fcn.00402db0(&var_ch, var_10h, param_1 + 0x14, *(param_1 + 8));\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x34));\n    }\n    fcn.0040241e(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 412
    },
    "0043c406": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c406(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint in_stack_ffffffdc;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    if ((*(param_1 + 0x38) == '\\0') || (*(param_1 + 0x34) < 1)) {\n        in_stack_ffffffdc = *(param_1 + 8);\n        fcn.00402db0(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14, in_stack_ffffffdc);\n    }\n    else {\n        puVar4 = *(param_1 + 0x30);\n        iVar3 = 0;\n        do {\n            uVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar2 = fcn.00402f72(&var_10h, &var_ch, 6, uVar1, *(param_1 + 8));\n            if ((iVar2 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x14) = 0xffffffff;\n                break;\n            }\n            fcn.00402db0(&var_ch, var_10h, param_1 + 0x14, *(param_1 + 8));\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x34));\n    }\n    fcn.0040241e(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 411
    },
    "0043c4d1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c4d1(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint in_stack_ffffffdc;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    if ((*(param_1 + 0x38) == '\\0') || (*(param_1 + 0x34) < 1)) {\n        in_stack_ffffffdc = *(param_1 + 8);\n        fcn.00402db0(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14, in_stack_ffffffdc);\n    }\n    else {\n        puVar4 = *(param_1 + 0x30);\n        iVar3 = 0;\n        do {\n            uVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar2 = fcn.00402f72(&var_10h, &var_ch, 6, uVar1, *(param_1 + 8));\n            if ((iVar2 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x14) = 0xffffffff;\n                break;\n            }\n            fcn.00402db0(&var_ch, var_10h, param_1 + 0x14, *(param_1 + 8));\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x34));\n    }\n    fcn.0040241e(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 413
    },
    "0043c59c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c59c(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint in_stack_ffffffdc;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    if ((*(param_1 + 0x38) == '\\0') || (*(param_1 + 0x34) < 1)) {\n        in_stack_ffffffdc = *(param_1 + 8);\n        fcn.00404485(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14);\n    }\n    else {\n        puVar4 = *(param_1 + 0x30);\n        iVar3 = 0;\n        do {\n            uVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar2 = fcn.00402f72(&var_10h, &var_ch, 6, uVar1, *(param_1 + 8));\n            if ((iVar2 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x14) = 0xffffffff;\n                break;\n            }\n            fcn.00404485(&var_ch, var_10h, param_1 + 0x14);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x34));\n    }\n    fcn.0040241e(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 396
    },
    "0043c667": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c667(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint in_stack_ffffffdc;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    if ((*(param_1 + 0x38) == '\\0') || (*(param_1 + 0x34) < 1)) {\n        in_stack_ffffffdc = *(param_1 + 8);\n        fcn.00404485(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14);\n    }\n    else {\n        puVar4 = *(param_1 + 0x30);\n        iVar3 = 0;\n        do {\n            uVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar2 = fcn.00402f72(&var_10h, &var_ch, 6, uVar1, *(param_1 + 8));\n            if ((iVar2 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x14) = 0xffffffff;\n                break;\n            }\n            fcn.00404485(&var_ch, var_10h, param_1 + 0x14);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x34));\n    }\n    fcn.0040241e(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 395
    },
    "0043c732": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c732(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint in_stack_ffffffdc;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    if ((*(param_1 + 0x38) == '\\0') || (*(param_1 + 0x34) < 1)) {\n        in_stack_ffffffdc = *(param_1 + 8);\n        fcn.00404485(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14);\n    }\n    else {\n        puVar4 = *(param_1 + 0x30);\n        iVar3 = 0;\n        do {\n            uVar1 = *puVar4;\n            puVar4 = puVar4 + 1;\n            var_10h = 0;\n            iVar2 = fcn.00402f72(&var_10h, &var_ch, 6, uVar1, *(param_1 + 8));\n            if ((iVar2 != 0) || (var_10h == 0)) {\n                *(param_1 + 0x14) = 0xffffffff;\n                break;\n            }\n            fcn.00404485(&var_ch, var_10h, param_1 + 0x14);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != *(param_1 + 0x34));\n    }\n    fcn.0040241e(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 395
    },
    "0043c7fd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043c7fd(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((*(param_1 + 0x38) == '\\0') && (iVar2 = *(param_1 + 0x34),  0 < iVar2)) {\n        iVar1 = *(param_1 + 8);\n        if (*(iVar1 + 0x14) == '\\0') {\n            fcn.004024f0();\n            iVar2 = *(param_1 + 0x34);\n        }\n        var_ch = 0;\n        arg_ch = *(param_1 + 0x30);\n        if (iVar2 != 0) {\n            do {\n                var_4h = var_4h & 0xffff0000;\n                iVar2 = fcn.0040123f(&var_4h, arg_ch, *(*(iVar1 + 0xc) + 4), *(param_1 + 8));\n                if (iVar2 < 1) {\n                    *(param_1 + 0x14) = 0xffffffff;\n                    return 1;\n                }\n                fcn.00401af0(var_4h, param_1 + 0x14, *(param_1 + 8));\n                arg_ch = arg_ch + iVar2;\n                var_ch = var_ch + 1;\n            } while (var_ch != *(param_1 + 0x34));\n        }\n    }\n    else {\n        fcn.00402126(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14, *(param_1 + 8));\n    }\n    return 1;\n}\n",
        "token_count": 416
    },
    "0043c8d9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043c8d9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((*(param_1 + 0x38) == '\\0') && (iVar2 = *(param_1 + 0x34),  0 < iVar2)) {\n        iVar1 = *(param_1 + 8);\n        if (*(iVar1 + 0x14) == '\\0') {\n            fcn.004024f0();\n            iVar2 = *(param_1 + 0x34);\n        }\n        var_ch = 0;\n        arg_ch = *(param_1 + 0x30);\n        if (iVar2 != 0) {\n            do {\n                var_4h = var_4h & 0xffff0000;\n                iVar2 = fcn.0040123f(&var_4h, arg_ch, *(*(iVar1 + 0xc) + 4), *(param_1 + 8));\n                if (iVar2 < 1) {\n                    *(param_1 + 0x14) = 0xffffffff;\n                    return 1;\n                }\n                fcn.00401af0(var_4h, param_1 + 0x14, *(param_1 + 8));\n                arg_ch = arg_ch + iVar2;\n                var_ch = var_ch + 1;\n            } while (var_ch != *(param_1 + 0x34));\n        }\n    }\n    else {\n        fcn.00402126(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14, *(param_1 + 8));\n    }\n    return 1;\n}\n",
        "token_count": 417
    },
    "0043c9b5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043c9b5(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if ((*(param_1 + 0x38) == '\\0') && (iVar2 = *(param_1 + 0x34),  0 < iVar2)) {\n        iVar1 = *(param_1 + 8);\n        if (*(iVar1 + 0x14) == '\\0') {\n            fcn.004024f0();\n            iVar2 = *(param_1 + 0x34);\n        }\n        var_ch = 0;\n        arg_ch = *(param_1 + 0x30);\n        if (iVar2 != 0) {\n            do {\n                var_4h = var_4h & 0xffff0000;\n                iVar2 = fcn.0040123f(&var_4h, arg_ch, *(*(iVar1 + 0xc) + 4), *(param_1 + 8));\n                if (iVar2 < 1) {\n                    *(param_1 + 0x14) = 0xffffffff;\n                    return 1;\n                }\n                fcn.00401af0(var_4h, param_1 + 0x14, *(param_1 + 8));\n                arg_ch = arg_ch + iVar2;\n                var_ch = var_ch + 1;\n            } while (var_ch != *(param_1 + 0x34));\n        }\n    }\n    else {\n        fcn.00402126(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14, *(param_1 + 8));\n    }\n    return 1;\n}\n",
        "token_count": 417
    },
    "0043ca91": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0043ca91(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_ch;\n    int32_t iVar4;\n    bool bVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(param_1 + 0x38) == '\\0') && (iVar3 = *(param_1 + 0x34),  0 < iVar3)) {\n        iVar1 = *(param_1 + 8);\n        if (*(iVar1 + 0x14) == '\\0') {\n            fcn.004024f0();\n            iVar3 = *(param_1 + 0x34);\n        }\n        arg_ch = *(param_1 + 0x30);\n        iVar4 = 0;\n        bVar5 = iVar3 == 0;\n        while (!bVar5) {\n            var_4h._0_2_ = 0;\n            iVar3 = fcn.0040123f(&var_4h, arg_ch, *(*(iVar1 + 0xc) + 4), *(param_1 + 8));\n            if (iVar3 < 1) {\n                *(param_1 + 0x14) = 0xffffffff;\n                return 1;\n            }\n            iVar2 = *(param_1 + 0x448);\n            if (*(iVar2 + 8) == *(iVar2 + 4)) {\n                if (*(iVar2 + 0xc) == '\\0') {\n                    *(param_1 + 0x14) = 0xffffffff;\n                }\n                else {\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                }\n            }\n            else {\n                *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                *(iVar2 + 8) = *(iVar2 + 8) + 1;\n                ***(param_1 + 0x448) = var_4h;\n                **(param_1 + 0x448) = **(param_1 + 0x448) + 2;\n            }\n            arg_ch = arg_ch + iVar3;\n            iVar4 = iVar4 + 1;\n            bVar5 = iVar4 == *(param_1 + 0x34);\n        }\n    }\n    else {\n        fcn.00403657(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 595
    },
    "0043cba1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0043cba1(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_ch;\n    int32_t iVar4;\n    bool bVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(param_1 + 0x38) == '\\0') && (iVar3 = *(param_1 + 0x34),  0 < iVar3)) {\n        iVar1 = *(param_1 + 8);\n        if (*(iVar1 + 0x14) == '\\0') {\n            fcn.004024f0();\n            iVar3 = *(param_1 + 0x34);\n        }\n        arg_ch = *(param_1 + 0x30);\n        iVar4 = 0;\n        bVar5 = iVar3 == 0;\n        while (!bVar5) {\n            var_4h._0_2_ = 0;\n            iVar3 = fcn.0040123f(&var_4h, arg_ch, *(*(iVar1 + 0xc) + 4), *(param_1 + 8));\n            if (iVar3 < 1) {\n                *(param_1 + 0x14) = 0xffffffff;\n                return 1;\n            }\n            iVar2 = *(param_1 + 0x448);\n            if (*(iVar2 + 8) == *(iVar2 + 4)) {\n                if (*(iVar2 + 0xc) == '\\0') {\n                    *(param_1 + 0x14) = 0xffffffff;\n                }\n                else {\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                }\n            }\n            else {\n                *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                *(iVar2 + 8) = *(iVar2 + 8) + 1;\n                ***(param_1 + 0x448) = var_4h;\n                **(param_1 + 0x448) = **(param_1 + 0x448) + 2;\n            }\n            arg_ch = arg_ch + iVar3;\n            iVar4 = iVar4 + 1;\n            bVar5 = iVar4 == *(param_1 + 0x34);\n        }\n    }\n    else {\n        fcn.00403657(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 595
    },
    "0043ccb1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0043ccb1(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_ch;\n    int32_t iVar4;\n    bool bVar5;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(param_1 + 0x38) == '\\0') && (iVar3 = *(param_1 + 0x34),  0 < iVar3)) {\n        iVar1 = *(param_1 + 8);\n        if (*(iVar1 + 0x14) == '\\0') {\n            fcn.004024f0();\n            iVar3 = *(param_1 + 0x34);\n        }\n        arg_ch = *(param_1 + 0x30);\n        iVar4 = 0;\n        bVar5 = iVar3 == 0;\n        while (!bVar5) {\n            var_4h._0_2_ = 0;\n            iVar3 = fcn.0040123f(&var_4h, arg_ch, *(*(iVar1 + 0xc) + 4), *(param_1 + 8));\n            if (iVar3 < 1) {\n                *(param_1 + 0x14) = 0xffffffff;\n                return 1;\n            }\n            iVar2 = *(param_1 + 0x448);\n            if (*(iVar2 + 8) == *(iVar2 + 4)) {\n                if (*(iVar2 + 0xc) == '\\0') {\n                    *(param_1 + 0x14) = 0xffffffff;\n                }\n                else {\n                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                }\n            }\n            else {\n                *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                *(iVar2 + 8) = *(iVar2 + 8) + 1;\n                ***(param_1 + 0x448) = var_4h;\n                **(param_1 + 0x448) = **(param_1 + 0x448) + 2;\n            }\n            arg_ch = arg_ch + iVar3;\n            iVar4 = iVar4 + 1;\n            bVar5 = iVar4 == *(param_1 + 0x34);\n        }\n    }\n    else {\n        fcn.00403657(*(param_1 + 0x30), *(param_1 + 0x34), param_1 + 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 595
    },
    "0043f8d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f8d0(int32_t arg_8h)\n\n{\n    int32_t in_FS_OFFSET;\n    int32_t var_4h;\n    \n    if (*0x4771a8 == 0) {\n        var_4h = arg_8h;\n        if (-1 < *(*(*(in_FS_OFFSET + 0x30) + 0x10) + 8)) {\n            fcn.00402806(&var_4h);\n        }\n        *0x4771a8 = (var_4h == 1) + 1;\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "0043f923": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f923(int32_t arg_8h)\n\n{\n    int32_t in_FS_OFFSET;\n    int32_t var_4h;\n    \n    if (*0x4771ac == 0) {\n        var_4h = arg_8h;\n        if (-1 < *(*(*(in_FS_OFFSET + 0x30) + 0x10) + 8)) {\n            fcn.004021f3(&var_4h);\n        }\n        *0x4771ac = (var_4h == 1) + 1;\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "004410e9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004410e9(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 != 0) {\n        if (arg_8h != 0) {\n            fcn.00401721(arg_8h);\n        }\n        iVar3 = fcn.004016d6();\n        if (iVar3 != 1) {\n            return 4;\n        }\n    }\n    iVar3 = fcn.004034a4();\n    if ((iVar3 == 2) && (cVar1 = fcn.004022b1(),  cVar1 != '\\0')) {\n        cVar1 = fcn.004035a8();\n        if (cVar1 == '\\0') {\n            arg_10h = arg_10h | 0x200000;\n            arg_8h_00 = 0;\n        }\n        else {\n            arg_8h_00 = fcn.00401695();\n        }\n        iVar2 = fcn.00402f4a(arg_8h_00, arg_8h, arg_ch, arg_10h);\n        return iVar2;\n    }\n    return (iVar2 != 0) + 3;\n}\n",
        "token_count": 318
    },
    "004420a9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_264h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004420a9(uint16_t *arg_8h, uint16_t *arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint16_t *extraout_EDX;\n    uint64_t uVar5;\n    int32_t var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_255h;\n    uint var_228h;\n    int16_t var_224h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    if (arg_ch != arg_8h) {\n        do {\n            cVar1 = fcn.0044266a(*arg_ch);\n            arg_ch = extraout_EDX;\n            if (cVar1 != '\\0') break;\n            arg_ch = extraout_EDX + -1;\n        } while (arg_ch != arg_8h);\n    }\n    if ((*arg_ch != 0x3a) || (arg_ch == arg_8h + 1)) {\n        uVar5 = fcn.0044266a(*arg_ch);\n        iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileExW)(arg_8h, 0, &var_255h + 1, 0, 0, 0);\n        if (iVar2 != -1) {\n            iVar3 = arg_10h[1] - *arg_10h >> 2;\n            do {\n                if (((var_228h != 0x2e) || ((var_228h._2_2_ != 0 && ((var_228h._2_2_ != 0x2e || (var_224h != 0)))))) &&\n                   (var_264h = fcn.00441ca2(&var_228h, arg_8h, \n                                            -((uVar5 & 0xff) != 0) & ((uVar5 >> 0x20) - arg_8h >> 1) + 1U, arg_10h), \n                   var_264h != 0)) {\n                    (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n                    goto code_r0x00442210;\n                }\n                iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar2, &var_255h + 1);\n            } while (iVar4 != 0);\n            iVar4 = arg_10h[1] - *arg_10h >> 2;\n            if (iVar3 != iVar4) {\n                fcn.00403b20(*arg_10h + iVar3 * 4, iVar4 - iVar3, 4, fcn.00441588);\n            }\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n            goto code_r0x00442210;\n        }\n    }\n    fcn.00441ca2(arg_8h, 0, 0, arg_10h);\ncode_r0x00442210:\n    fcn.0040241e(var_264h);\n    return;\n}\n",
        "token_count": 733
    },
    "0044338a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0044338a(uint param_1, char param_2, int32_t param_3, uint *param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint auStack584 [137];\n    uint *puStack36;\n    uint *puStack32;\n    int32_t iStack28;\n    uint *puStack20;\n    \n    fcn.00443534(param_3, param_4);\n    iStack28 = fcn.00443048(param_1);\n    if (iStack28 == *(*(param_3 + 0x48) + 4)) {\n        iVar2 = 0;\n    }\n    else {\n        puVar3 = fcn.00402d88(0x220);\n        iVar2 = iStack28;\n        puStack20 = puVar3;\n        if (puVar3 == NULL) {\n            fcn.004042f5(0);\n            iVar2 = -1;\n        }\n        else {\n            puVar5 = *(param_3 + 0x48);\n            puVar6 = auStack584;\n            for (iVar4 = 0x88; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar6 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puVar6 = puVar6 + 1;\n            }\n            puVar5 = auStack584;\n            puVar6 = puVar3;\n            for (iVar4 = 0x88; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar6 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puVar6 = puVar6 + 1;\n            }\n            *puVar3 = 0;\n            iVar2 = fcn.00403f12(iVar2, puVar3);\n            if (iVar2 == -1) {\n                puVar3 = fcn.004029b9();\n                *puVar3 = 0x16;\n                fcn.004042f5(puStack20);\n                iVar2 = -1;\n            }\n            else {\n                if (param_2 == '\\0') {\n                    fcn.00403797();\n                }\n                piVar1 = *(param_3 + 0x48);\n                LOCK();\n                iVar4 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if ((iVar4 == 1) && (*(param_3 + 0x48) != 0x4750a0)) {\n                    fcn.004042f5(*(param_3 + 0x48));\n                }\n                *puStack20 = 1;\n                *(param_3 + 0x48) = puStack20;\n                if ((*(param_3 + 0x350) & *0x47586c) == 0) {\n                    puStack36 = &param_3;\n                    puStack32 = &param_4;\n                    iStack28 = 5;\n                    puStack20 = 0x5;\n                    fcn.00442e42(&puStack20, &puStack36);\n                    if (param_2 != '\\0') {\n                        *0x4757e8 = *param_4;\n                    }\n                }\n                fcn.004042f5(0);\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 777
    },
    "00443a34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00443a34(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00403c79(arg_8h);\n    if (((*(var_8h + 0x19 + (arg_ch & 0xff)) & arg_14h) == 0) &&\n       ((arg_10h == 0 || ((arg_10h & *(*var_ch + (arg_ch & 0xff) * 2)) == 0)))) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    if (var_4h != '\\0') {\n        *(var_10h + 0x350) = *(var_10h + 0x350) & 0xfffffffd;\n    }\n    return uVar1;\n}\n",
        "token_count": 245
    },
    "004469ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004469ae(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (*(arg_8h + 0xb4) == 0) {\n        iVar2 = 0x46bb70;\n    }\n    else {\n        iVar2 = fcn.0040375b(1, 0x164);\n        if (iVar2 == 0) {\n            fcn.004042f5(0);\n        }\n        else {\n            cVar1 = fcn.00446a35(iVar2, arg_8h);\n            if (cVar1 != '\\0') {\n                *(iVar2 + 0xb0) = 1;\n                fcn.004042f5(0);\n                return iVar2;\n            }\n            fcn.00404665(iVar2);\n            fcn.004042f5(iVar2);\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 218
    },
    "0044bbfc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044bbfc(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_19h;\n    \n    if (*(unaff_EBP + -0x19) != '\\0') {\n        fcn.00401825(3);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "0044e3ce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0044e3ce(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            uint arg_20h, int32_t arg_24h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar *arg_ch_00;\n    int32_t iVar3;\n    uint uVar4;\n    uchar *puVar5;\n    \n    iVar2 = arg_10h;\n    if (arg_10h < 1) {\n        iVar2 = 0;\n    }\n    if (iVar2 + 9U < arg_ch) {\n        if (arg_20h != 0) {\n            fcn.0044e904(arg_8h, arg_ch, arg_8h + (*arg_1ch == 0x2d), 0 < arg_10h);\n        }\n        puVar5 = arg_8h;\n        if (*arg_1ch == 0x2d) {\n            *arg_8h = 0x2d;\n            puVar5 = arg_8h + 1;\n        }\n        if (0 < arg_10h) {\n            *puVar5 = puVar5[1];\n            puVar5 = puVar5 + 1;\n            if (*(arg_24h + 0x14) == '\\0') {\n                fcn.004024f0();\n            }\n            *puVar5 = ***(*(arg_24h + 0xc) + 0x88);\n        }\n        puVar5 = puVar5 + (arg_20h ^ 1) + arg_10h;\n        arg_ch_00 = 0xffffffff;\n        if (arg_ch != 0xffffffff) {\n            arg_ch_00 = arg_8h + (arg_ch - puVar5);\n        }\n        iVar2 = fcn.00404098(puVar5, arg_ch_00, \"e+000\");\n        if (iVar2 != 0) {\n            fcn.0040277f(0, 0, 0, 0, 0);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        if (arg_14h != '\\0') {\n            *puVar5 = 0x45;\n        }\n        if (*arg_1ch[2] != '0') {\n            iVar2 = arg_1ch[1] + -1;\n            if (iVar2 < 0) {\n                iVar2 = -iVar2;\n                puVar5[1] = 0x2d;\n            }\n            if (99 < iVar2) {\n                iVar3 = iVar2 / 100;\n                iVar2 = iVar2 % 100;\n                puVar5[2] = puVar5[2] + iVar3;\n            }\n            if (9 < iVar2) {\n                iVar3 = iVar2 / 10;\n                iVar2 = iVar2 % 10;\n                puVar5[3] = puVar5[3] + iVar3;\n            }\n            puVar5[4] = puVar5[4] + iVar2;\n        }\n        if ((arg_18h == 2) && (puVar5[2] == '0')) {\n            fcn.00403d1e(puVar5 + 2, puVar5 + 3, 3);\n        }\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = 0x22;\n        *(arg_24h + 0x1c) = 1;\n        *(arg_24h + 0x18) = 0x22;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_24h);\n    }\n    return uVar4;\n}\n",
        "token_count": 865
    },
    "0044e61f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044e61f(uchar *arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uchar *var_4h;\n    \n    bVar1 = false;\n    if ((arg_18h != '\\0') && (arg_14h[1] + -1 == arg_10h)) {\n        *(arg_8h + (*arg_14h == 0x2d) + arg_14h[1] + -1) = 0x30;\n    }\n    var_4h = arg_8h;\n    if (*arg_14h == 0x2d) {\n        var_4h = arg_8h + 1;\n        *arg_8h = 0x2d;\n    }\n    iVar2 = arg_14h[1];\n    if (iVar2 < 1) {\n        if ((iVar2 == 0) && (*arg_14h[2] == '0')) {\n            bVar1 = true;\n        }\n        if ((arg_18h == '\\0') || (!bVar1)) {\n            fcn.0044e904(arg_8h, arg_ch, var_4h, 1);\n        }\n        *var_4h = 0x30;\n        iVar2 = 1;\n    }\n    var_4h = var_4h + iVar2;\n    if (0 < arg_10h) {\n        fcn.0044e904(arg_8h, arg_ch, var_4h, 1);\n        if (*(arg_1ch + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        *var_4h = ***(*(arg_1ch + 0xc) + 0x88);\n        if (arg_14h[1] < 0) {\n            iVar2 = -arg_14h[1];\n            if ((arg_18h != '\\0') || (iVar2 < arg_10h)) {\n                arg_10h = iVar2;\n            }\n            fcn.0044e904(arg_8h, arg_ch, var_4h + 1, arg_10h);\n            fcn.0040248c(var_4h + 1, 0x30, arg_10h);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 554
    },
    "0044ebea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044ebea(uint arg_8h)\n\n{\n    uint *in_ECX;\n    \n    if (*(in_ECX + 1) != '\\0') {\n        arg_8h = *in_ECX;\n    }\n    return arg_8h;\n}\n",
        "token_count": 63
    },
    "0044edc9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0044edc9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.00401b40(arg_10h);\n    var_4h = 0;\n    if (var_18h == '\\0') {\n        fcn.004024f0();\n    }\n    iVar1 = fcn.00402f72(&var_4h, arg_8h, *(var_20h + 4), arg_ch, &var_2ch);\n    uVar2 = var_4h;\n    if (iVar1 != 0) {\n        uVar2 = 0xffffffff;\n    }\n    fcn.004024dc();\n    return uVar2;\n}\n",
        "token_count": 214
    },
    "00450968": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00450968(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *arg_10h_00;\n    uint *puVar3;\n    uint var_28h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403c79(arg_8h);\n    arg_8h_00 = *(var_18h + 8);\n    puVar3 = &stack0xffffffc0;\n    arg_10h_00 = &stack0xffffffc0;\n    iVar1 = fcn.0040321a(arg_ch, arg_10h, 0, 0);\n    if (iVar1 == 0) goto code_r0x00450a2b;\n    uVar2 = iVar1 * 2 + 8;\n    uVar2 = -(iVar1 * 2 < uVar2) & uVar2;\n    if (uVar2 == 0) {\n        arg_10h_00 = NULL;\n    }\n    else {\n        if (uVar2 < 0x401) {\n            fcn.0040268f();\n            if (*0x10 != pe_nt_image_headers32) {\ncode_r0x004509e5:\n                arg_10h_00 = puVar3 + 2;\n            }\n        }\n        else {\n            arg_10h_00 = fcn.00402d88(uVar2);\n            if (arg_10h_00 != NULL) {\n                *arg_10h_00 = 0xdddd;\n                puVar3 = arg_10h_00;\n                goto code_r0x004509e5;\n            }\n        }\n        if ((arg_10h_00 != NULL) && (iVar1 = fcn.0040321a(arg_ch, arg_10h, arg_10h_00, iVar1),  iVar1 != 0)) {\n            fcn.00404458(arg_8h_00, 0, arg_10h_00, 0xffffffff, -(arg_18h != 0) & arg_14h, arg_18h, 0, 0);\n        }\n    }\n    fcn.0040124e(arg_10h_00);\ncode_r0x00450a2b:\n    if (var_10h != '\\0') {\n        *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n    }\n    fcn.0040241e(var_1ch);\n    return;\n}\n",
        "token_count": 675
    },
    "00452013": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00452013(uint *arg_8h, uint32_t arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *in_FS_OFFSET;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint *var_6ch;\n    int32_t var_68h;\n    uint hFile;\n    uint *var_60h;\n    uint *lpNumberOfBytesWritten;\n    uint var_58h;\n    uint *var_54h;\n    int32_t var_50h;\n    uint8_t *var_4ch;\n    uint8_t *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint *var_38h;\n    uint8_t var_31h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint lpBuffer;\n    uint var_20h;\n    uint var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x467c09;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x47502c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_44h = (arg_ch & 0x3f) * 0x38;\n    var_50h = arg_ch >> 6;\n    var_60h = arg_10h;\n    var_3ch = arg_18h;\n    hFile = *(*(var_50h * 4 + 0x4771f0) + 0x18 + var_44h);\n    var_54h = arg_14h + arg_10h;\n    var_70h = (*_sym.imp.KERNEL32.dll_GetConsoleOutputCP)(var_10h);\n    if (*(arg_18h + 0x14) == '\\0') {\n        fcn.004024f0();\n    }\n    var_68h = *(*(arg_18h + 0xc) + 8);\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    var_30h = var_60h;\n    if (var_54h <= var_60h) {\ncode_r0x004523c4:\n        *in_FS_OFFSET = var_ch;\n        fcn.0040241e(var_80h);\n        return;\n    }\n    iVar5 = 0;\n    var_48h = NULL;\n    iVar6 = var_44h;\ncode_r0x004520b8:\n    var_31h = *var_30h;\n    var_40h = 0;\n    var_2ch = 1;\n    var_4ch = *(var_50h * 4 + 0x4771f0);\n    if (var_68h == 0xfde9) {\n        var_2ch = 0;\n        puVar3 = var_4ch + iVar6 + 0x2e;\n        do {\n            if (*puVar3 == 0) break;\n            var_2ch = var_2ch + 1;\n            puVar3 = puVar3 + 1;\n        } while (var_2ch < 5);\n        iVar6 = var_54h - var_30h;\n        if (var_2ch == 0) {\n            var_4ch = *(*var_30h + 0x475948) + 1;\n            if (iVar6 < var_4ch) {\n                if (0 < iVar6) {\n                    do {\n                        *(*(var_50h * 4 + 0x4771f0) + var_44h + 0x2e + iVar5) = *(iVar5 + var_30h);\n                        iVar5 = iVar5 + 1;\n                    } while (iVar5 < iVar6);\n                }\n                goto code_r0x00452375;\n            }\n            var_80h = 0;\n            var_7ch = 0;\n            var_2ch = (var_4ch == 0x4) + 1;\n            var_38h = var_30h;\n            iVar6 = fcn.00402e46(&var_40h, &var_38h, var_2ch, &var_80h, var_3ch);\n            if (iVar6 == -1) goto code_r0x004523c4;\n            puVar3 = var_30h + var_4ch;\n            iVar6 = var_44h;\n        }\n        else {\n            var_4ch = var_4ch + var_44h + 0x2e;\n            var_38h = *(*var_4ch + 0x475948) + 1;\n            var_48h = var_38h - var_2ch;\n            if (iVar6 < var_48h) {\n                if (0 < iVar6) {\n                    do {\n                        puVar3 = iVar5 + var_30h;\n                        iVar4 = *(var_50h * 4 + 0x4771f0) + var_44h + iVar5;\n                        iVar5 = iVar5 + 1;\n                        *(iVar4 + 0x2e + var_2ch) = *puVar3;\n                    } while (iVar5 < iVar6);\n                }\ncode_r0x00452375:\n                arg_8h[1] = arg_8h[1] + iVar6;\n                goto code_r0x004523c4;\n            }\n            iVar6 = 0;\n            puVar3 = var_4ch;\n            do {\n                *(&var_18h + iVar6) = *puVar3;\n                iVar6 = iVar6 + 1;\n                puVar3 = puVar3 + 1;\n            } while (iVar6 < var_2ch);\n            if (0 < var_48h) {\n                fcn.00403c38(&var_18h + var_2ch, var_30h, var_48h);\n            }\n            iVar6 = var_44h;\n            iVar4 = 0;\n            do {\n                *(*(var_50h * 4 + 0x4771f0) + var_44h + 0x2e + iVar4) = 0;\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < var_2ch);\n            var_6ch = &var_18h;\n            var_78h = 0;\n            var_74h = 0;\n            var_2ch = (var_38h == 0x4) + 1;\n            iVar4 = fcn.00402e46(&var_40h, &var_6ch, var_2ch, &var_78h, var_3ch);\n            if (iVar4 == -1) goto code_r0x004523c4;\n            puVar3 = var_30h + var_48h;\n        }\n        puVar1 = puVar3 + -1;\n    }\n    else {\n        if ((var_4ch[iVar6 + 0x2d] & 4) == 0) {\n            if (*(**(var_3ch + 0xc) + *var_30h * 2) < 0) {\n                var_38h = var_30h + 1;\n                if (var_38h < var_54h) {\n                    iVar4 = fcn.0040123f(&var_40h, var_30h, 2, var_3ch);\n                    puVar1 = var_38h;\n                    if (iVar4 != -1) goto code_r0x0045229a;\n                }\n                else {\n                    var_4ch[iVar6 + 0x2e] = *var_30h;\n                    puVar3 = *(var_50h * 4 + 0x4771f0) + 0x2d + iVar6;\n                    *puVar3 = *puVar3 | 4;\n                    arg_8h[1] = var_48h + 1;\n                }\n                goto code_r0x004523c4;\n            }\n            uVar2 = 1;\n            puVar1 = var_30h;\n        }\n        else {\n            var_20h._0_1_ = var_4ch[iVar6 + 0x2e];\n            var_20h._1_1_ = *var_30h;\n            var_4ch[iVar6 + 0x2d] = var_4ch[iVar6 + 0x2d] & 0xfb;\n            uVar2 = 2;\n            puVar1 = &var_20h;\n        }\n        iVar4 = fcn.0040123f(&var_40h, puVar1, uVar2, var_3ch);\n        puVar1 = var_30h;\n        if (iVar4 == -1) goto code_r0x004523c4;\n    }\ncode_r0x0045229a:\n    var_30h = puVar1 + 1;\n    var_38h = fcn.00404458(var_70h, 0, &var_40h, var_2ch, &lpBuffer, 5, 0, 0);\n    if (var_38h == NULL) goto code_r0x004523c4;\n    iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, &lpBuffer, var_38h, &lpNumberOfBytesWritten, 0);\n    if (iVar4 == 0) {\ncode_r0x004523bc:\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *arg_8h = uVar2;\n        goto code_r0x004523c4;\n    }\n    var_48h = var_30h + (arg_8h[2] - var_60h);\n    arg_8h[1] = var_48h;\n    if (lpNumberOfBytesWritten < var_38h) goto code_r0x004523c4;\n    if (var_31h == 10) {\n        var_58h._0_2_ = 0xd;\n        iVar4 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, &var_58h, 1, &lpNumberOfBytesWritten, 0);\n        if (iVar4 == 0) goto code_r0x004523bc;\n        if (lpNumberOfBytesWritten == NULL) goto code_r0x004523c4;\n        arg_8h[2] = arg_8h[2] + 1;\n        arg_8h[1] = arg_8h[1] + 1;\n        var_48h = arg_8h[1];\n    }\n    if (var_54h <= var_30h) goto code_r0x004523c4;\n    goto code_r0x004520b8;\n}\n",
        "token_count": 2555
    },
    "0045255b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045255b(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lpMode;\n    \n    iVar1 = fcn.00404507(arg_8h);\n    if (iVar1 != 0) {\n        iVar2 = arg_8h >> 6;\n        iVar1 = (arg_8h & 0x3f) * 0x38;\n        if (*(*(iVar2 * 4 + 0x4771f0) + 0x28 + iVar1) < '\\0') {\n            if (*(arg_ch + 0x14) == '\\0') {\n                fcn.004024f0();\n            }\n            if (((*(*(arg_ch + 0xc) + 0xa8) != 0) || (*(*(iVar2 * 4 + 0x4771f0) + 0x29 + iVar1) != '\\0')) &&\n               (iVar1 = (*_sym.imp.KERNEL32.dll_GetConsoleMode)(*(*(iVar2 * 4 + 0x4771f0) + 0x18 + iVar1), &lpMode), \n               iVar1 != 0)) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 288
    },
    "00455320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3c8h\n\nvoid __cdecl fcn.00455320(int32_t **arg_8h, int32_t **arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t **ppiVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    int32_t **ppiVar10;\n    int32_t *piVar11;\n    int32_t **ppiVar12;\n    int32_t **ppiVar13;\n    uint32_t *puVar14;\n    uint *arg_10h;\n    uint var_3c8h;\n    uint var_3c4h;\n    int32_t *var_1f0h;\n    int32_t **var_1ech;\n    int32_t **var_1e8h;\n    int32_t **var_1e4h;\n    int32_t **var_1e0h;\n    int32_t **var_1dch;\n    int32_t **var_1d8h;\n    int32_t **var_1d4h;\n    uint var_1d0h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    var_1ech = *arg_ch;\n    var_1e4h = arg_8h;\n    var_1dch = arg_ch + 1;\n    if (var_1ech < 0x2) {\n        ppiVar6 = *var_1dch;\n        if (ppiVar6 != NULL) {\n            if ((ppiVar6 == 0x1) || (piVar1 = *arg_8h,  piVar1 == NULL)) goto code_r0x0045560f;\n            var_1e8h = arg_8h + 1;\n            piVar11 = NULL;\n            piVar9 = NULL;\n            do {\n                uVar3 = ZEXT48(ppiVar6) * ZEXT48(var_1e8h[piVar9]);\n                piVar4 = uVar3 + piVar11;\n                piVar11 = (ZEXT48(ppiVar6) * ZEXT48(var_1e8h[piVar9]) >> 0x20) + CARRY4(uVar3, piVar11);\n                var_1e8h[piVar9] = piVar4;\n                piVar9 = piVar9 + 1;\n                ppiVar10 = var_1e8h;\n            } while (piVar9 != piVar1);\ncode_r0x004553ba:\n            if (piVar11 != NULL) {\n                if (*var_1e4h < 0x73) {\n                    var_1e4h[*var_1e4h + 1] = piVar11;\n                    *var_1e4h = *var_1e4h + 1;\n                    fcn.0040241e(var_3c8h);\n                    return;\n                }\n                arg_10h = &var_1d0h;\n                var_1d4h = NULL;\n                *var_1e4h = NULL;\ncode_r0x0045564a:\n                fcn.00457b41(ppiVar10, 0x1cc, arg_10h, 0);\n                fcn.0040241e(var_3c8h);\n                return;\n            }\n            goto code_r0x0045560f;\n        }\n        *arg_8h = NULL;\n        var_1d4h = ppiVar6;\n    }\n    else {\n        ppiVar6 = *arg_8h;\n        ppiVar10 = arg_8h + 1;\n        if (ppiVar6 < 0x2) {\n            piVar1 = *ppiVar10;\n            *arg_8h = var_1ech;\n            var_1d8h = ppiVar10;\n            fcn.00457b41(ppiVar10, 0x1cc, arg_ch + 1, *arg_ch << 2);\n            if (piVar1 == NULL) {\n                *arg_8h = NULL;\n                var_1d4h = piVar1;\n                fcn.00457b41(ppiVar10, 0x1cc, &var_1d0h, 0);\n                fcn.0040241e(var_3c8h);\n                return;\n            }\n            if ((piVar1 == 0x1) || (piVar9 = *arg_8h,  piVar9 == NULL)) goto code_r0x0045560f;\n            piVar11 = NULL;\n            piVar4 = NULL;\n            do {\n                uVar3 = ZEXT48(piVar1) * ZEXT48(var_1d8h[piVar4]);\n                piVar5 = uVar3 + piVar11;\n                piVar11 = (ZEXT48(piVar1) * ZEXT48(var_1d8h[piVar4]) >> 0x20) + CARRY4(uVar3, piVar11);\n                var_1d8h[piVar4] = piVar5;\n                piVar4 = piVar4 + 1;\n                ppiVar10 = var_1d8h;\n            } while (piVar4 != piVar9);\n            goto code_r0x004553ba;\n        }\n        ppiVar12 = ppiVar10;\n        ppiVar13 = ppiVar6;\n        var_1e8h = var_1dch;\n        var_1d8h = var_1ech;\n        if (var_1ech < ppiVar6) {\n            ppiVar12 = var_1dch;\n            ppiVar13 = var_1ech;\n            var_1e8h = ppiVar10;\n            var_1d8h = ppiVar6;\n        }\n        var_1ech = ppiVar13;\n        ppiVar6 = NULL;\n        var_1d4h = NULL;\n        var_1e0h = NULL;\n        do {\n            var_1f0h = ppiVar12[var_1e0h];\n            var_1dch = ppiVar12;\n            if (var_1f0h == NULL) {\n                if (var_1e0h == ppiVar6) {\n                    ppiVar6 = var_1e0h + 1;\n                    (&var_1d0h)[var_1e0h] = 0;\n                    var_1d4h = ppiVar6;\n                }\n            }\n            else {\n                uVar3 = 0;\n                ppiVar13 = NULL;\n                ppiVar10 = var_1e0h;\n                if (var_1d8h != NULL) {\n                    do {\n                        if (ppiVar10 == 0x73) break;\n                        if (ppiVar10 == ppiVar6) {\n                            (&var_1d0h)[ppiVar10] = 0;\n                            var_1d4h = var_1e0h + 1 + ppiVar13;\n                        }\n                        piVar1 = var_1e8h[ppiVar13];\n                        uVar7 = ZEXT48(piVar1) * ZEXT48(var_1f0h);\n                        uVar2 = (&var_1d0h)[ppiVar10];\n                        uVar8 = uVar7 + (&var_1d0h)[ppiVar10];\n                        (&var_1d0h)[ppiVar10] = uVar8 + uVar3;\n                        uVar3 = (ZEXT48(piVar1) * ZEXT48(var_1f0h) >> 0x20) + CARRY4(uVar7, uVar2) +\n                                CARRY4(uVar8, uVar3);\n                        ppiVar13 = ppiVar13 + 1;\n                        ppiVar10 = ppiVar10 + 1;\n                        ppiVar6 = var_1d4h;\n                    } while (ppiVar13 != var_1d8h);\n                    if (uVar3 != 0) {\n                        puVar14 = &var_1d0h + ppiVar10;\n                        do {\n                            if (ppiVar10 == 0x73) break;\n                            if (ppiVar10 == ppiVar6) {\n                                var_1d4h = ppiVar10 + 1;\n                                *puVar14 = 0;\n                            }\n                            ppiVar10 = ppiVar10 + 1;\n                            uVar2 = *puVar14;\n                            *puVar14 = *puVar14 + uVar3;\n                            uVar3 = CARRY4(uVar2, uVar3);\n                            ppiVar6 = var_1d4h;\n                            puVar14 = puVar14 + 1;\n                        } while (uVar3 != 0);\n                    }\n                }\n                if (ppiVar10 == 0x73) {\n                    arg_10h = &var_3c4h;\n                    ppiVar10 = arg_8h + 1;\n                    var_3c8h = 0;\n                    *arg_8h = NULL;\n                    goto code_r0x0045564a;\n                }\n            }\n            var_1e0h = var_1e0h + 1;\n        } while (var_1e0h != var_1ech);\n        *arg_8h = ppiVar6;\n        ppiVar6 = ppiVar6 << 2;\n    }\n    fcn.00457b41(arg_8h + 1, 0x1cc, &var_1d0h, ppiVar6);\ncode_r0x0045560f:\n    fcn.0040241e(var_3c8h);\n    return;\n}\n",
        "token_count": 2211
    },
    "00455860": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5ach\n\nvoid __cdecl fcn.00455860(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t *arg_8h_00;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t *puVar11;\n    uint32_t var_5ach;\n    uint var_5a8h;\n    uint32_t var_3d4h;\n    uint32_t *var_3d0h;\n    uint32_t *var_3cch;\n    uint32_t *var_3c8h;\n    uint32_t var_3c4h;\n    uint32_t *var_3c0h;\n    uint32_t var_3bch;\n    uint32_t *var_3b8h;\n    uint32_t var_3b4h;\n    uint32_t var_3b0h;\n    uint32_t var_3ach;\n    uint32_t *var_3a8h;\n    uint32_t var_3a4h;\n    uint32_t var_3a0h;\n    uint32_t var_1d4h;\n    uint var_1d0h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    var_3d4h = arg_ch / 10;\n    var_3c4h = var_3d4h;\n    var_3a8h = arg_8h;\n    do {\n        if (var_3d4h == 0) {\n            iVar8 = arg_ch + var_3c4h * -10;\n            if (iVar8 != 0) {\n                uVar7 = *(iVar8 * 4 + 0x47195c);\n                if (uVar7 == 0) {\n                    *arg_8h = 0;\n                    fcn.00457b41(arg_8h + 1, 0x1cc, &var_5a8h, 0);\n                    var_5ach = uVar7;\n                }\n                else if ((uVar7 != 1) && (var_3c4h = *arg_8h,  var_3c4h != 0)) {\n                    var_3c0h = arg_8h + 1;\n                    uVar10 = 0;\n                    uVar9 = 0;\n                    do {\n                        uVar5 = uVar7 * var_3c0h[uVar9];\n                        uVar6 = uVar5 + uVar10;\n                        uVar10 = (uVar7 * var_3c0h[uVar9] >> 0x20) + CARRY4(uVar5, uVar10);\n                        var_3c0h[uVar9] = uVar6;\n                        uVar9 = uVar9 + 1;\n                    } while (uVar9 != var_3c4h);\n                    if (uVar10 != 0) {\n                        if (0x72 < *var_3a8h) {\n                            *var_3a8h = 0;\n                            fcn.00457b41(var_3c0h, 0x1cc, &var_5a8h, 0);\n                            fcn.0040241e(0);\n                            return;\n                        }\n                        var_3a8h[*var_3a8h + 1] = uVar10;\n                        *var_3a8h = *var_3a8h + 1;\n                        fcn.0040241e(var_5ach);\n                        return;\n                    }\n                }\n            }\n            fcn.0040241e(var_5ach);\n            return;\n        }\n        var_3bch = var_3d4h;\n        if (0x26 < var_3d4h) {\n            var_3bch = 0x26;\n        }\n        uVar7 = *(var_3bch * 4 + 0x4718a6);\n        uVar9 = *(var_3bch * 4 + 0x4718a7);\n        var_3a4h = uVar7 + uVar9;\n        fcn.0040248c(&var_3a0h, 0, uVar7 * 4);\n        fcn.00403c38(&var_3a0h + uVar7, *(var_3bch * 4 + 0x4718a4) * 4 + 0x470dd0, uVar9 * 4);\n        if (var_3a4h < 2) {\n            if (var_3a0h == 0) {\n                var_1d4h = var_3a0h;\n                *arg_8h = 0;\n                fcn.00457b41(arg_8h + 1, 0x1cc, &var_1d0h, 0);\n                bVar1 = true;\n            }\n            else if (var_3a0h == 1) {\n                bVar1 = true;\n            }\n            else {\n                uVar7 = *arg_8h;\n                if (uVar7 == 0) {\n                    bVar1 = true;\n                    arg_8h = var_3a8h;\n                }\n                else {\n                    uVar5 = 0;\n                    uVar9 = 0;\n                    do {\n                        uVar10 = var_3a0h * var_3a8h[uVar9 + 1];\n                        uVar6 = uVar10 + uVar5;\n                        uVar5 = (var_3a0h * var_3a8h[uVar9 + 1] >> 0x20) + CARRY4(uVar10, uVar5);\n                        (var_3a8h + 1)[uVar9] = uVar6;\n                        uVar9 = uVar9 + 1;\n                        arg_8h_00 = var_3a8h + 1;\n                    } while (uVar9 != uVar7);\ncode_r0x004559a3:\n                    arg_8h = var_3a8h;\n                    if (uVar5 == 0) goto code_r0x00455c15;\n                    if (*var_3a8h < 0x73) {\n                        var_3a8h[*var_3a8h + 1] = uVar5;\n                        bVar1 = true;\n                        *var_3a8h = *var_3a8h + 1;\n                    }\n                    else {\n                        puVar4 = &var_3a0h;\n                        var_3a4h = 0;\ncode_r0x00455c3d:\n                        arg_8h = var_3a8h;\n                        *var_3a8h = 0;\n                        fcn.00457b41(arg_8h_00, 0x1cc, puVar4, 0);\n                        bVar1 = false;\n                    }\n                }\n            }\n        }\n        else {\n            uVar7 = *arg_8h;\n            arg_8h_00 = arg_8h + 1;\n            var_3b8h = arg_8h_00;\n            var_3ach = uVar7;\n            if (uVar7 < 2) {\n                uVar7 = *arg_8h_00;\n                *arg_8h = var_3a4h;\n                fcn.00457b41(arg_8h_00, 0x1cc, &var_3a0h, var_3a4h * 4);\n                if (uVar7 == 0) {\n                    puVar4 = &var_3a0h;\n                    *arg_8h = 0;\n                    var_3a4h = uVar7;\n                    goto code_r0x00455c06;\n                }\n                if (uVar7 != 1) {\n                    uVar9 = *arg_8h;\n                    if (uVar9 != 0) {\n                        uVar5 = 0;\n                        uVar10 = 0;\n                        do {\n                            uVar6 = uVar7 * var_3b8h[uVar10];\n                            uVar2 = uVar6 + uVar5;\n                            uVar5 = (uVar7 * var_3b8h[uVar10] >> 0x20) + CARRY4(uVar6, uVar5);\n                            var_3b8h[uVar10] = uVar2;\n                            uVar10 = uVar10 + 1;\n                            arg_8h_00 = var_3b8h;\n                        } while (uVar10 != uVar9);\n                        goto code_r0x004559a3;\n                    }\n                    bVar1 = true;\n                    arg_8h = var_3a8h;\n                    goto code_r0x00455c4d;\n                }\n            }\n            else {\n                var_3d0h = arg_8h_00;\n                if (var_3a4h < uVar7) {\n                    var_3c8h = &var_3a0h;\n                    uVar7 = 0;\n                    var_1d4h = 0;\n                    var_3b0h = var_3a4h;\n                    var_3cch = arg_8h_00;\n                    if (var_3a4h != 0) goto code_r0x00455ada;\n                }\n                else {\n                    var_3ach = var_3a4h;\n                    var_1d4h = 0;\n                    var_3cch = &var_3a0h;\n                    var_3c8h = arg_8h_00;\n                    var_3b0h = uVar7;\ncode_r0x00455ada:\n                    var_1d4h = 0;\n                    uVar7 = 0;\n                    var_3b4h = 0;\n                    do {\n                        var_3c0h = var_3c8h[var_3b4h];\n                        if (var_3c0h == NULL) {\n                            if (var_3b4h == uVar7) {\n                                uVar7 = var_3b4h + 1;\n                                (&var_1d0h)[var_3b4h] = 0;\n                                var_1d4h = uVar7;\n                            }\n                        }\n                        else {\n                            uVar9 = 0;\n                            uVar5 = 0;\n                            uVar10 = var_3b4h;\n                            if (var_3ach != 0) {\n                                do {\n                                    if (uVar10 == 0x73) break;\n                                    if (uVar10 == uVar7) {\n                                        (&var_1d0h)[uVar10] = 0;\n                                        var_1d4h = var_3b4h + 1 + uVar5;\n                                    }\n                                    uVar7 = var_3cch[uVar5];\n                                    uVar2 = uVar7 * ZEXT48(var_3c0h);\n                                    uVar6 = (&var_1d0h)[uVar10];\n                                    uVar3 = uVar2 + (&var_1d0h)[uVar10];\n                                    (&var_1d0h)[uVar10] = uVar3 + uVar9;\n                                    uVar9 = (uVar7 * ZEXT48(var_3c0h) >> 0x20) + CARRY4(uVar2, uVar6) +\n                                            CARRY4(uVar3, uVar9);\n                                    uVar5 = uVar5 + 1;\n                                    uVar10 = uVar10 + 1;\n                                    uVar7 = var_1d4h;\n                                } while (uVar5 != var_3ach);\n                                if (uVar9 != 0) {\n                                    puVar11 = &var_1d0h + uVar10;\n                                    do {\n                                        if (uVar10 == 0x73) break;\n                                        if (uVar10 == uVar7) {\n                                            *puVar11 = 0;\n                                            var_1d4h = uVar10 + 1;\n                                        }\n                                        uVar10 = uVar10 + 1;\n                                        uVar7 = *puVar11;\n                                        *puVar11 = *puVar11 + uVar9;\n                                        uVar9 = CARRY4(uVar7, uVar9);\n                                        uVar7 = var_1d4h;\n                                        puVar11 = puVar11 + 1;\n                                    } while (uVar9 != 0);\n                                }\n                            }\n                            if (uVar10 == 0x73) {\n                                puVar4 = &var_5a8h;\n                                var_5ach = 0;\n                                goto code_r0x00455c3d;\n                            }\n                        }\n                        var_3b4h = var_3b4h + 1;\n                        arg_8h = var_3a8h;\n                    } while (var_3b4h != var_3b0h);\n                }\n                *arg_8h = uVar7;\n                uVar7 = uVar7 << 2;\n                puVar4 = &var_1d0h;\ncode_r0x00455c06:\n                fcn.00457b41(arg_8h_00, 0x1cc, puVar4, uVar7);\n            }\ncode_r0x00455c15:\n            bVar1 = true;\n        }\ncode_r0x00455c4d:\n        if (!bVar1) {\n            *arg_8h = 0;\n            fcn.00457b41(arg_8h + 1, 0x1cc, &var_5a8h, 0);\n            fcn.0040241e(0);\n            return;\n        }\n        var_3d4h = var_3d4h - var_3bch;\n    } while( true );\n}\n",
        "token_count": 3154
    },
    "00457f27": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00457f27(uint32_t *arg_8h, uint16_t *arg_ch, uint8_t *arg_10h, uint32_t arg_14h, int32_t *arg_18h, int32_t arg_1ch)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t cbMultiByte;\n    uint8_t *puVar6;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x467c3d;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x47502c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_ch != NULL) {\n        *arg_ch = 0;\n    }\n    if (((arg_10h == NULL) || (arg_14h == 0)) || (*arg_10h == 0)) {\n        if (arg_8h != NULL) {\n            *arg_8h = 0;\n        }\n    }\n    else {\n        if (*(arg_1ch + 0x14) == '\\0') {\n            fcn.004024f0(uVar3);\n        }\n        piVar2 = *(arg_1ch + 0xc);\n        iVar4 = piVar2[2];\n        if (iVar4 == 0xfde9) {\n            uVar3 = fcn.00401483(arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n            if (arg_8h != NULL) {\n                *arg_8h = uVar3;\n            }\n            if (*(arg_1ch + 0x1c) != '\\0') {\n                uVar5 = *(arg_1ch + 0x18);\n                goto code_r0x0045812a;\n            }\n        }\n        else {\n            uVar3 = piVar2[1];\n            if (piVar2[0x2a] == 0) {\n                if (arg_ch != NULL) {\n                    *arg_ch = *arg_10h;\n                }\ncode_r0x0045810f:\n                if (arg_8h != NULL) {\n                    *arg_8h = 1;\n                }\n            }\n            else if (*arg_18h == 0) {\n                if (-1 < *(*piVar2 + *arg_10h * 2)) {\n                    iVar4 = fcn.00401726(iVar4, 9, arg_10h, 1, arg_ch, arg_ch != NULL);\n                    if (iVar4 == 0) goto code_r0x00458030;\n                    goto code_r0x0045810f;\n                }\n                if (uVar3 <= arg_14h) {\n                    if (1 < uVar3) {\n                        puVar6 = arg_10h;\n                        do {\n                            uVar1 = *puVar6;\n                            puVar6 = puVar6 + 1;\n                        } while (uVar1 != 0);\n                        cbMultiByte = 0x7fffffff;\n                        if (puVar6 - (arg_10h + 1) < 0x7fffffff) {\n                            puVar6 = arg_10h;\n                            do {\n                                uVar1 = *puVar6;\n                                puVar6 = puVar6 + 1;\n                            } while (uVar1 != 0);\n                            cbMultiByte = puVar6 - (arg_10h + 1);\n                        }\n                        iVar4 = fcn.00401726(iVar4, 9, arg_10h, cbMultiByte, arg_ch, arg_ch != NULL);\n                        if (iVar4 != 0) goto code_r0x004580e0;\n                    }\n                    if (arg_10h[1] != 0) goto code_r0x004580e0;\n                    goto code_r0x0045802c;\n                }\n                *arg_18h = *arg_10h;\n                if (arg_8h != NULL) {\n                    *arg_8h = 0xfffffffe;\n                }\n            }\n            else {\n                *(arg_18h + 1) = *arg_10h;\n                if ((uVar3 < 2) ||\n                   (iVar4 = fcn.00401726(*(*(arg_1ch + 0xc) + 8), 9, arg_18h, 2, arg_ch, arg_ch != NULL),  iVar4 == 0))\n                {\ncode_r0x0045802c:\n                    *arg_18h = 0;\ncode_r0x00458030:\n                    if (arg_ch != NULL) {\n                        *arg_ch = 0;\n                    }\n                    if (arg_8h != NULL) {\n                        *arg_8h = 0xffffffff;\n                    }\n                    uVar5 = 0x2a;\n                    *(arg_1ch + 0x1c) = 1;\n                    *(arg_1ch + 0x18) = 0x2a;\n                    goto code_r0x0045812a;\n                }\n                *arg_18h = 0;\ncode_r0x004580e0:\n                if (arg_8h != NULL) {\n                    *arg_8h = uVar3;\n                }\n            }\n        }\n    }\n    uVar5 = 0;\ncode_r0x0045812a:\n    *in_FS_OFFSET = var_ch;\n    return uVar5;\n}\n",
        "token_count": 1265
    },
    "0045837a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0045837a(uint32_t *arg_8h, ushort *arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t arg_18h, uint arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h != NULL) {\n        *arg_8h = 0xffffffff;\n    }\n    if (arg_ch == NULL) {\n        if (arg_10h == 0) {\ncode_r0x004583ca:\n            if (arg_14h != 0) {\n                if (arg_10h < arg_18h) {\n                    arg_18h = arg_10h;\n                }\n                iVar1 = fcn.004581c5(arg_ch, arg_14h, arg_18h, arg_1ch, arg_20h);\n                if (iVar1 == -1) {\n                    if (arg_ch != NULL) {\n                        *arg_ch = 0;\n                    }\n                    if (*(arg_20h + 0x1c) != '\\0') {\n                        return *(arg_20h + 0x18);\n                    }\n                }\n                else {\n                    if (arg_ch != NULL) {\n                        if (arg_10h < iVar1 + 1U) {\n                            *arg_ch = 0;\n                        }\n                        else {\n                            arg_ch[iVar1] = 0;\n                        }\n                    }\n                    if (arg_8h != NULL) {\n                        *arg_8h = iVar1 + 1U;\n                    }\n                }\n                return 0;\n            }\n            *(arg_20h + 0x1c) = 1;\n            *(arg_20h + 0x18) = 0x16;\n            goto code_r0x004583ae;\n        }\n    }\n    else if (arg_10h != 0) {\n        if (arg_ch != NULL) {\n            *arg_ch = 0;\n        }\n        goto code_r0x004583ca;\n    }\n    *(arg_20h + 0x1c) = 1;\n    *(arg_20h + 0x18) = 0x16;\ncode_r0x004583ae:\n    fcn.00402c20(0, 0, 0, 0, 0, arg_20h);\n    return 0x16;\n}\n",
        "token_count": 528
    },
    "0045846a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0045846a(int32_t arg_8h)\n\n{\n    ushort extraout_var;\n    ushort uVar1;\n    uint var_3ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_8h == -1) {\n        return 0xffff;\n    }\n    var_ch = -1;\n    var_1h._0_1_ = arg_8h;\n    var_14h = 0;\n    var_10h = 0;\n    var_8h._0_2_ = 0;\n    fcn.00401b40(0);\n    fcn.00457f27(&var_ch, &var_8h, &var_1h, 1, &var_14h, &var_3ch);\n    uVar1 = 0xffff;\n    if (-1 < var_ch) {\n        uVar1 = var_8h;\n    }\n    fcn.004024dc();\n    return CONCAT22(extraout_var, uVar1);\n}\n",
        "token_count": 277
    },
    "00458bd1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00458bd1(uint32_t *arg_8h, ushort *arg_ch, uint32_t arg_10h, uint arg_14h, uint32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    if (arg_ch == NULL) {\n        if (arg_10h != 0) {\ncode_r0x00458bee:\n            *(arg_1ch + 0x1c) = 1;\n            *(arg_1ch + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, arg_1ch);\n            return 0x16;\n        }\n    }\n    else {\n        if (arg_10h == 0) goto code_r0x00458bee;\n        if (arg_ch != NULL) {\n            *arg_ch = 0;\n        }\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = 0;\n    }\n    uVar2 = arg_10h;\n    if (arg_18h <= arg_10h) {\n        uVar2 = arg_18h;\n    }\n    if (0x7fffffff < uVar2) {\n        uVar3 = 0x16;\ncode_r0x00458c7b:\n        *(arg_1ch + 0x18) = uVar3;\n        *(arg_1ch + 0x1c) = 1;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch);\n        return uVar3;\n    }\n    iVar1 = fcn.00458ce9(arg_ch, arg_14h, uVar2, arg_1ch);\n    if (iVar1 == -1) {\n        if (arg_ch != NULL) {\n            *arg_ch = 0;\n        }\n        if (*(arg_1ch + 0x1c) == '\\0') {\n            return 0;\n        }\n        return *(arg_1ch + 0x18);\n    }\n    uVar2 = iVar1 + 1;\n    if (arg_ch != NULL) {\n        if (arg_10h < uVar2) {\n            if (arg_18h != 0xffffffff) {\n                *arg_ch = 0;\n                uVar3 = 0x22;\n                goto code_r0x00458c7b;\n            }\n            uVar3 = 0x50;\n            uVar2 = arg_10h;\n        }\n        arg_ch[uVar2 - 1] = 0;\n    }\n    if (arg_8h == NULL) {\n        return uVar3;\n    }\n    *arg_8h = uVar2;\n    return uVar3;\n}\n",
        "token_count": 646
    },
    "00458ce9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00458ce9(uint16_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t arg_18h;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint32_t var_14h;\n    uint8_t *var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    arg_18h = arg_14h;\n    uStack8 = 0xffffffff;\n    uStack12 = 0x467c85;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x47502c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_8h != NULL) {\n        uVar4 = 0;\n        if (arg_10h == 0) goto code_r0x00458e9f;\n        *arg_8h = 0;\n    }\n    if (arg_ch == NULL) {\n        *(arg_14h + 0x1c) = 1;\n        *(arg_14h + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_14h);\n    }\n    else {\n        if (*(arg_14h + 0x14) == '\\0') {\n            fcn.004024f0(uVar3);\n        }\n        iVar5 = *(arg_18h + 0xc);\n        var_10h = *(iVar5 + 8);\n        if (var_10h == 0xfde9) {\n            var_18h = 0;\n            var_14h = 0;\n            uVar4 = fcn.00402e46(arg_8h, &arg_ch, arg_10h, &var_18h, arg_18h);\n            goto code_r0x00458e9f;\n        }\n        if (arg_8h == NULL) {\n            if (*(iVar5 + 0xa8) == 0) {\n                puVar1 = arg_ch + 1;\n                do {\n                    uVar2 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                } while (uVar2 != 0);\n                uVar4 = arg_ch - puVar1;\n                goto code_r0x00458e9f;\n            }\n            iVar5 = fcn.00401726(var_10h, 9, arg_ch, 0xffffffff, 0, 0);\n            if (iVar5 != 0) goto code_r0x00458e9e;\n            *(arg_18h + 0x1c) = 1;\n            *(arg_18h + 0x18) = 0x2a;\n        }\n        else {\n            if (*(iVar5 + 0xa8) == 0) {\n                uVar4 = 0;\n                if (arg_10h != 0) {\n                    do {\n                        *arg_8h = arg_ch[uVar4];\n                        if (arg_ch[uVar4] == 0) break;\n                        uVar4 = uVar4 + 1;\n                        arg_8h = arg_8h + 1;\n                    } while (uVar4 < arg_10h);\n                }\n                goto code_r0x00458e9f;\n            }\n            iVar5 = fcn.00401726(var_10h, 9, arg_ch, 0xffffffff, arg_8h, arg_10h);\n            if (iVar5 != 0) {\ncode_r0x00458e9e:\n                uVar4 = iVar5 - 1;\n                goto code_r0x00458e9f;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            var_10h = arg_ch;\n            uVar3 = arg_10h;\n            if (iVar5 == 0x7a) {\n                while (uVar3 != 0) {\n                    var_14h = uVar3 - 1;\n                    if (*var_10h == 0) break;\n                    if ((*(**(arg_18h + 0xc) + *var_10h * 2) < 0) && (var_10h = var_10h + 1,  *var_10h == 0))\n                    goto code_r0x00458df4;\n                    var_10h = var_10h + 1;\n                    uVar3 = var_14h;\n                }\n                uVar4 = fcn.00401726(*(*(arg_18h + 0xc) + 8), 1, arg_ch, var_10h - arg_ch, arg_8h, arg_10h);\n                if (uVar4 != 0) goto code_r0x00458e9f;\n            }\ncode_r0x00458df4:\n            *(arg_18h + 0x1c) = 1;\n            *(arg_18h + 0x18) = 0x2a;\n            *arg_8h = 0;\n        }\n    }\n    uVar4 = 0xffffffff;\ncode_r0x00458e9f:\n    *in_FS_OFFSET = var_ch;\n    return uVar4;\n}\n",
        "token_count": 1224
    },
    "0045926f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_34h\n\nvoid __cdecl\nfcn.0045926f(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint8_t *arg_14h, int32_t arg_18h, uint8_t *arg_1ch, \n            int32_t arg_20h, int32_t arg_24h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_EDI;\n    uint *puVar6;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t lpCPInfo;\n    uint var_12h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    var_34h = unaff_EDI;\n    if (arg_18h < 1) {\n        if (arg_18h < -1) goto code_r0x004594b9;\n    }\n    else {\n        arg_18h = fcn.00401eab(arg_14h, arg_18h);\n    }\n    if (arg_20h < 1) {\n        if (arg_20h < -1) goto code_r0x004594b9;\n    }\n    else {\n        arg_20h = fcn.00401eab(arg_1ch, arg_20h);\n    }\n    if (arg_24h == 0) {\n        arg_24h = *(*arg_8h + 8);\n    }\n    if ((arg_18h == 0) || (arg_20h == 0)) {\n        if ((arg_18h == arg_20h) ||\n           (((1 < arg_20h || (1 < arg_18h)) ||\n            (iVar1 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(arg_24h, &lpCPInfo),  iVar1 == 0)))) goto code_r0x004594b9;\n        if (0 < arg_18h) {\n            if (1 < lpCPInfo) {\n                puVar2 = &var_12h;\n                while (((var_12h != 0 && (*(puVar2 + 1) != 0)) && ((*arg_14h < *puVar2 || (*(puVar2 + 1) < *arg_14h)))))\n                {\n                    puVar2 = puVar2 + 2;\n                    var_12h._0_1_ = *puVar2;\n                }\n            }\n            goto code_r0x004594b9;\n        }\n        if (0 < arg_20h) {\n            if (1 < lpCPInfo) {\n                puVar2 = &var_12h;\n                while (((var_12h != 0 && (*(puVar2 + 1) != 0)) && ((*arg_1ch < *puVar2 || (*(puVar2 + 1) < *arg_1ch)))))\n                {\n                    puVar2 = puVar2 + 2;\n                    var_12h._0_1_ = *puVar2;\n                }\n            }\n            goto code_r0x004594b9;\n        }\n    }\n    puVar2 = &var_34h;\n    puVar6 = &var_34h;\n    iVar1 = fcn.00401726(arg_24h, 9, arg_14h, arg_18h, 0, 0);\n    if (iVar1 == 0) goto code_r0x004594b9;\n    uVar3 = iVar1 * 2 + 8;\n    uVar3 = -(iVar1 * 2 < uVar3) & uVar3;\n    if (uVar3 == 0) {\ncode_r0x00459503:\n        puVar2 = NULL;\n    }\n    else {\n        if (0x400 < uVar3) {\n            puVar2 = fcn.00402d88(uVar3);\n            if (puVar2 != NULL) {\n                *puVar2 = 0xdddd;\n                goto code_r0x004593fe;\n            }\n            goto code_r0x00459503;\n        }\n        fcn.0040268f();\n        if (*0x10 == 0x38) goto code_r0x00459503;\n        var_34h = 0xcccc;\ncode_r0x004593fe:\n        puVar2 = puVar2 + 2;\n        if (puVar2 == NULL) goto code_r0x00459503;\n        iVar4 = fcn.00401726(arg_24h, 1, arg_14h, arg_18h, puVar2, iVar1);\n        if ((iVar4 != 0) && (iVar4 = fcn.00401726(arg_24h, 9, arg_1ch, arg_20h, 0, 0),  iVar4 != 0)) {\n            uVar3 = iVar4 * 2 + 8;\n            uVar3 = -(iVar4 * 2 < uVar3) & uVar3;\n            if (uVar3 == 0) {\ncode_r0x004594f7:\n                puVar6 = NULL;\n            }\n            else {\n                if (0x400 < uVar3) {\n                    puVar6 = fcn.00402d88(uVar3);\n                    if (puVar6 != NULL) {\n                        *puVar6 = 0xdddd;\n                        goto code_r0x00459489;\n                    }\n                    goto code_r0x004594f7;\n                }\n                fcn.0040268f();\n                if (*0x10 == 0x38) goto code_r0x004594f7;\n                var_34h = 0xcccc;\ncode_r0x00459489:\n                puVar6 = puVar6 + 2;\n                if (puVar6 == NULL) goto code_r0x004594f7;\n                iVar5 = fcn.00401726(arg_24h, 1, arg_1ch, arg_20h, puVar6, iVar4);\n                if (iVar5 != 0) {\n                    fcn.004031a7(arg_ch, arg_10h, puVar2, iVar1, puVar6, iVar4, 0, 0, 0);\n                    fcn.0040124e(puVar6);\n                    fcn.0040124e(puVar2);\n                    goto code_r0x004594b9;\n                }\n            }\n            fcn.0040124e(puVar6);\n            fcn.0040124e(puVar2);\n            goto code_r0x004594b9;\n        }\n    }\n    fcn.0040124e(puVar2);\ncode_r0x004594b9:\n    fcn.0040241e(arg_ch);\n    return;\n}\n",
        "token_count": 1565
    },
    "00459f2b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpBuffer\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00459f2b(uint32_t arg_8h, char *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    char *pcVar9;\n    int32_t iVar10;\n    uint hFile;\n    uint var_10h;\n    char *lpNumberOfBytesRead;\n    char *var_8h;\n    uint lpBuffer;\n    \n    iVar6 = arg_8h >> 6;\n    iVar10 = (arg_8h & 0x3f) * 0x38;\n    iVar5 = *(iVar6 * 4 + 0x4771f0);\n    uVar4 = *(iVar5 + 0x18 + iVar10);\n    if ((arg_10h == 0) || (*arg_ch != '\\n')) {\n        puVar1 = iVar5 + 0x28 + iVar10;\n        *puVar1 = *puVar1 & 0xfb;\n    }\n    else {\n        puVar1 = iVar5 + 0x28 + iVar10;\n        *puVar1 = *puVar1 | 4;\n    }\n    lpNumberOfBytesRead = arg_ch + arg_10h;\n    pcVar7 = arg_ch;\n    pcVar9 = arg_ch;\n    pcVar8 = arg_ch;\n    if (arg_ch < lpNumberOfBytesRead) {\n        do {\n            cVar2 = *pcVar7;\n            pcVar9 = pcVar8;\n            if (cVar2 == '\\x1a') {\n                iVar5 = *(iVar6 * 4 + 0x4771f0);\n                uVar3 = *(iVar5 + 0x28 + iVar10);\n                if ((uVar3 & 0x40) == 0) {\n                    *(iVar5 + 0x28 + iVar10) = uVar3 | 2;\n                }\n                else {\n                    *pcVar8 = '\\x1a';\ncode_r0x0045a06d:\n                    pcVar9 = pcVar8 + 1;\n                }\n                break;\n            }\n            var_8h = pcVar7 + 1;\n            if (cVar2 == '\\r') {\n                if (lpNumberOfBytesRead <= var_8h) {\n                    iVar5 = (*_sym.imp.KERNEL32.dll_ReadFile)(uVar4, &lpBuffer, 1, &lpNumberOfBytesRead, 0);\n                    if ((iVar5 != 0) && (lpNumberOfBytesRead != NULL)) {\n                        if ((*(*(iVar6 * 4 + 0x4771f0) + 0x28 + iVar10) & 0x48) != 0) {\n                            pcVar9 = pcVar8 + 1;\n                            if (lpBuffer == '\\n') {\n                                *pcVar8 = '\\n';\n                            }\n                            else {\n                                *pcVar8 = '\\r';\n                                *(*(iVar6 * 4 + 0x4771f0) + 0x2a + iVar10) = lpBuffer;\n                            }\n                            break;\n                        }\n                        if ((lpBuffer == '\\n') && (pcVar8 == arg_ch)) {\n                            *pcVar8 = '\\n';\n                            goto code_r0x0045a06d;\n                        }\n                        fcn.004015b9(arg_8h, 0xffffffff, 0xffffffff, 1);\n                        if (lpBuffer == '\\n') break;\n                    }\n                    *pcVar8 = '\\r';\n                    goto code_r0x0045a06d;\n                }\n                cVar2 = *var_8h;\n                var_8h = pcVar7 + (cVar2 == '\\n') + 1;\n                *pcVar8 = ((cVar2 == '\\n') - 1U & 3) + 10;\n            }\n            else {\n                *pcVar8 = cVar2;\n            }\n            pcVar9 = pcVar8 + 1;\n            pcVar7 = var_8h;\n            pcVar8 = pcVar9;\n        } while (var_8h < lpNumberOfBytesRead);\n    }\n    return pcVar9 - arg_ch;\n}\n",
        "token_count": 975
    },
    "0045a0ca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0045a0ca(uint32_t arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint uVar3;\n    uint16_t *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    int32_t iVar9;\n    uint16_t uVar10;\n    uint hFile;\n    int32_t lpNumberOfBytesRead;\n    uint32_t var_10h;\n    uint var_ch;\n    uint16_t *var_8h;\n    uint16_t *lpBuffer;\n    \n    iVar6 = arg_8h >> 6;\n    iVar9 = (arg_8h & 0x3f) * 0x38;\n    iVar5 = *(iVar6 * 4 + 0x4771f0);\n    lpNumberOfBytesRead = 10;\n    uVar3 = *(iVar9 + 0x18 + iVar5);\n    if ((arg_10h == 0) || (*arg_ch != 10)) {\n        puVar1 = iVar9 + 0x28 + iVar5;\n        *puVar1 = *puVar1 & 0xfb;\n    }\n    else {\n        puVar1 = iVar9 + 0x28 + iVar5;\n        *puVar1 = *puVar1 | 4;\n    }\n    var_8h = arg_ch + arg_10h;\n    lpBuffer = arg_ch;\n    puVar8 = arg_ch;\n    if (arg_ch < var_8h) {\n        var_ch = 0xd;\n        puVar7 = arg_ch;\n        do {\n            uVar10 = *lpBuffer;\n            var_10h = uVar10;\n            puVar8 = puVar7;\n            if (uVar10 == 0x1a) {\n                iVar5 = *(iVar6 * 4 + 0x4771f0);\n                uVar2 = *(iVar5 + 0x28 + iVar9);\n                if ((uVar2 & 0x40) == 0) {\n                    *(iVar5 + 0x28 + iVar9) = uVar2 | 2;\n                }\n                else {\n                    uVar10 = 0x1a;\ncode_r0x0045a25e:\n                    *puVar7 = uVar10;\ncode_r0x0045a262:\n                    puVar8 = puVar7 + 1;\n                }\n                break;\n            }\n            puVar4 = lpBuffer + 1;\n            if (uVar10 == 0xd) {\n                if (var_8h <= puVar4) {\n                    iVar5 = (*_sym.imp.KERNEL32.dll_ReadFile)(uVar3, &lpBuffer, 2, &lpNumberOfBytesRead, 0);\n                    if ((iVar5 == 0) || (lpNumberOfBytesRead == 0)) {\ncode_r0x0045a241:\n                        uVar10 = 0xd;\n                        goto code_r0x0045a25e;\n                    }\n                    if ((*(iVar9 + 0x28 + *(iVar6 * 4 + 0x4771f0)) & 0x48) == 0) {\n                        if ((lpBuffer == 10) && (puVar7 == arg_ch)) {\n                            *puVar7 = 10;\n                            goto code_r0x0045a262;\n                        }\n                        fcn.004015b9(arg_8h, 0xfffffffe, 0xffffffff, 1);\n                        if (lpBuffer != 10) goto code_r0x0045a241;\n                    }\n                    else {\n                        puVar8 = puVar7 + 1;\n                        if (lpBuffer == 10) {\n                            *puVar7 = 10;\n                        }\n                        else {\n                            *puVar7 = 0xd;\n                            *(iVar9 + 0x2a + *(iVar6 * 4 + 0x4771f0)) = lpBuffer;\n                            *(iVar9 + 0x2b + *(iVar6 * 4 + 0x4771f0)) = lpBuffer >> 8;\n                            *(iVar9 + 0x2c + *(iVar6 * 4 + 0x4771f0)) = 10;\n                        }\n                    }\n                    break;\n                }\n                uVar10 = *puVar4;\n                puVar4 = lpBuffer + (uVar10 == 10) + 1;\n                *puVar7 = ((uVar10 == 10) - 1 & 3) + 10;\n            }\n            else {\n                *puVar7 = uVar10;\n            }\n            puVar8 = puVar7 + 1;\n            puVar7 = puVar8;\n            lpBuffer = puVar4;\n        } while (puVar4 < var_8h);\n    }\n    return puVar8 - arg_ch & 0xfffffffe;\n}\n",
        "token_count": 1111
    },
    "0045ae98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045ae98(uint param_1, uint32_t param_2, int32_t param_3, uint32_t param_4)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    uint32_t uStack4;\n    \n    uStack4 = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((in_EAX & 0xfffff) == 0) && (param_3 == 0)) {\n            param_4 = in_EAX & 0x80000000;\n            uVar1 = param_4;\n            goto joined_r0x0045aee7;\n        }\n        param_4 = fcn.0040444e();\n    }\n    else {\n        if ((param_4 & 0x7ff00000) == 0) {\n            if (((param_4 & 0xfffff) == 0) && (param_3 == 0)) {\n                param_4 = 2;\n                goto code_r0x0045af31;\n            }\n            uVar1 = param_4 & 0x80000000;\n        }\n        else {\n            uVar1 = param_4 & 0x80000000;\n        }\njoined_r0x0045aee7:\n        if (uVar1 == 0) {\n            if (*0x4775e8 == 0) {\n                uVar1 = param_4 & 0xffff0000 | in_FPUControlWord;\n                if (in_FPUControlWord != 0x27f) {\n                    if (((in_FPUControlWord & 0x20) != 0) &&\n                       (uVar1 = param_4 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                        uVar2 = fcn.0040245f();\n                        return CONCAT44(uStack4, uVar2);\n                    }\n                    uVar1 = uVar1 & 0xffff0020;\n                }\n                return CONCAT44(uStack4, uVar1);\n            }\n            goto code_r0x004020e0;\n        }\n        param_4 = 1;\n    }\ncode_r0x0045af31:\n    if (*0x4775e8 == 0) {\n        uVar2 = fcn.0040245f();\n        return CONCAT44(uStack4, uVar2);\n    }\ncode_r0x004020e0:\n    return CONCAT44(uStack4, param_4);\n}\n",
        "token_count": 597
    },
    "0045b9ab": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b9ab(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 31
    },
    "0045b9f2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b9f2(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 32
    },
    "0045cf8e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.0045cf8e(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x471a30 | *0x471aa0;\n        dVar7 = SUB168(in_XMM0, 0) & *0x471a38 | *0x471aa8;\n        uVar1 = SUB82(*0x471a50 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x471a68 & dVar7;\n        dVar9 = (*0x471a60 & dVar6) * *(uVar1 + 0x472230) - *0x471a40;\n        dVar6 = (dVar6 - (*0x471a60 & dVar6)) * *(uVar1 + 0x472230);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x472238);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x472238) - *0x471a48);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x471af8 * dVar11 + *0x471b08) * dVar11 + *0x471b18) * dVar11 * dVar11 +\n                   ((*0x471af0 * dVar7 + *0x471b00) * dVar7 + *0x471b10) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   *0x471b20 * dVar7 + *(uVar1 + 0x471d58) + dVar10 * *0x471a78 + (dVar8 & *(iVar5 + 0x471a88)) +\n                   *(uVar1 + 0x471d50) + dVar9 + dVar10 * *0x471a70 + (dVar6 & *(iVar5 + 0x471a80));\n        }\n        dStack12 = -(*0x471ab0 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x471aa0 == (param_1 & *0x471a30 | *0x471aa0)) {\n                    return *0x471ad8;\n                }\n                arg_14h = 0x3e9;\n                dStack12 = *0x471a30;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 9;\n            }\n            else {\n                arg_14h = 0x3e9;\n            }\n            goto code_r0x0045d19a;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x471ac0);\n        iVar4 = -0x34;\n    }\n    arg_14h = 8;\n    dStack12 = *0x471ad0;\ncode_r0x0045d19a:\n    fcn.00402ff9(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 1012
    },
    "0046086e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.0046086e(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    unkint10 in_ST0;\n    ulong uStack32;\n    uint16_t uStack24;\n    \n    uStack32._0_4_ = in_ST0;\n    uStack32._4_4_ = in_ST0 >> 0x20;\n    uStack32 = in_ST0;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    if (uStack24 < 0x3fff) {\n        return 0;\n    }\n    if (uStack32._4_4_ < 0) {\n        if (uStack24 < 0x403e) {\n            uVar2 = 0x3e - uStack24;\n            uVar3 = uStack32._4_4_;\n            if (0x1f < uVar2) {\n                uVar3 = 0;\n                uStack32._0_4_ = uStack32._4_4_;\n            }\n            uVar1 = uStack32 >> (uVar2 & 0x1f) | uVar3 << 0x20 - (uVar2 & 0x1f);\n            uVar3 = uVar3 >> (uVar2 & 0x1f);\n            if (in_ST0 < 0) {\n                bVar4 = uVar1 != 0;\n                uVar1 = -uVar1;\n                uVar3 = -(uVar3 + bVar4);\n            }\n            return CONCAT44(uVar3, uVar1);\n        }\n        if (((uStack24 < 0x403f) && ((uStack32._4_4_ * 2 | uStack32) == 0)) && (in_ST0 < 0)) {\n            return uStack32;\n        }\n    }\n    return 0x8000000000000000;\n}\n",
        "token_count": 458
    },
    "004017da": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004017da(int32_t param_1)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *var_8h;\n    char *var_4h;\n    \n    if (*(param_1 + 0x18) == '\\x01') {\n        var_8h = *(param_1 + 0xc);\n        cVar1 = *var_8h;\n        in_EAX = in_EAX & 0xffffff00;\n        if (cVar1 != '%') {\n            if (*(param_1 + 0x45c) == 0) {\n                if ((((cVar1 < '0') || ('9' < cVar1)) ||\n                    (var_4h = var_8h,  in_EAX = fcn.004030f3(*(param_1 + 8), var_8h, &var_4h, 10, 1),  in_EAX < 1)) ||\n                   (in_EAX = var_4h,  *var_4h != '$')) {\n                    *(param_1 + 0x45c) = 1;\n                    goto code_r0x0043b300;\n                }\n                if (*(param_1 + 0x458) == 1) {\n                    fcn.0040248c(param_1 + 0x464, 0, 0x640);\n                }\n                var_8h = *(param_1 + 0xc);\n                *(param_1 + 0x45c) = 2;\n            }\n            else if (*(param_1 + 0x45c) != 2) goto code_r0x0043b300;\n            iVar2 = fcn.004030f3(*(param_1 + 8), var_8h, &var_8h, 10, 1);\n            pcVar4 = iVar2 + -1;\n            in_EAX = var_8h + 1;\n            *(param_1 + 0xaa8) = pcVar4;\n            *(param_1 + 0xc) = in_EAX;\n            if (*(param_1 + 0x458) == 1) {\n                if (((pcVar4 < 0) || (*var_8h != '$')) || (99 < pcVar4)) {\n                    iVar2 = *(param_1 + 8);\n                    *(iVar2 + 0x1c) = 1;\n                    *(iVar2 + 0x18) = 0x16;\n                    uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                    return uVar3 & 0xffffff00;\n                }\n                in_EAX = *(param_1 + 0xaa4);\n                if (pcVar4 <= in_EAX) {\n                    pcVar4 = in_EAX;\n                }\n                *(param_1 + 0xaa4) = pcVar4;\n            }\n        }\n    }\ncode_r0x0043b300:\n    return in_EAX & 0xffffff00 | 1;\n}\n",
        "token_count": 702
    },
    "0040185c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.0040185c(void)\n\n{\n    uint32_t uVar1;\n    float10 in_ST0;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    if (1 < *0x4763a8) {\n        return in_ST0;\n    }\n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    uVar1 = in_ST0 < 0;\n    if (uStack24 < 0x3fff) {\n        return 0;\n    }\n    if (uStack28 < 0) {\n        if (uStack24 < 0x401e) {\n            return (uStack28 >> (0x3eU - uStack24 & 0x1f) ^ -uVar1) + uVar1;\n        }\n        if (((uStack24 < 0x401f) && (uVar1 != 0)) && (uStack28 == 0x80000000)) {\n            return uStack28;\n        }\n    }\n    return 0x80000000;\n}\n",
        "token_count": 262
    },
    "00401a8c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401a8c(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    \n    if ((*(param_1 + 0x45c) != 2) || (in_EAX = 1,  *(param_1 + 0x458) != 1)) {\n        in_EAX = in_EAX & 0xffffff00;\n    }\n    return in_EAX;\n}\n",
        "token_count": 97
    },
    "00401d6b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401d6b(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    \n    if ((*(param_1 + 0x45c) != 2) || (in_EAX = 1,  *(param_1 + 0x458) != 1)) {\n        in_EAX = in_EAX & 0xffffff00;\n    }\n    return in_EAX;\n}\n",
        "token_count": 97
    },
    "00402090": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402090(int32_t param_1)\n\n{\n    uint16_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint16_t *puVar3;\n    uint16_t *var_8h;\n    uint16_t *var_4h;\n    \n    if (*(param_1 + 0x18) == '\\x01') {\n        var_8h = *(param_1 + 0xc);\n        in_EAX = *var_8h;\n        if (in_EAX != 0x25) {\n            if (*(param_1 + 0x45c) == 0) {\n                if ((((in_EAX < 0x30) || (0x39 < in_EAX)) ||\n                    (var_4h = var_8h,  in_EAX = fcn.0040105f(*(param_1 + 8), var_8h, &var_4h, 10, 1),  in_EAX < 1)) ||\n                   (in_EAX = var_4h,  *var_4h != 0x24)) {\n                    *(param_1 + 0x45c) = 1;\n                    goto code_r0x0043b730;\n                }\n                if (*(param_1 + 0x458) == 1) {\n                    fcn.0040248c(param_1 + 0x464, 0, 0x640);\n                }\n                var_8h = *(param_1 + 0xc);\n                *(param_1 + 0x45c) = 2;\n            }\n            else if (*(param_1 + 0x45c) != 2) goto code_r0x0043b730;\n            iVar1 = fcn.0040105f(*(param_1 + 8), var_8h, &var_8h, 10, 1);\n            puVar3 = iVar1 + -1;\n            in_EAX = var_8h + 1;\n            *(param_1 + 0xaa8) = puVar3;\n            *(param_1 + 0xc) = in_EAX;\n            if (*(param_1 + 0x458) == 1) {\n                if (((puVar3 < 0) || (*var_8h != 0x24)) || (99 < puVar3)) {\n                    iVar1 = *(param_1 + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                in_EAX = *(param_1 + 0xaa4);\n                if (puVar3 <= in_EAX) {\n                    puVar3 = in_EAX;\n                }\n                *(param_1 + 0xaa4) = puVar3;\n            }\n        }\n    }\ncode_r0x0043b730:\n    return in_EAX & 0xffffff00 | 1;\n}\n",
        "token_count": 702
    },
    "00402117": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00402117(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    uint arg_8h;\n    int32_t iVar1;\n    float10 fVar2;\n    ushort uVar3;\n    uint16_t uVar4;\n    uint uVar5;\n    double dVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    double dStack16;\n    int32_t var_4h;\n    \n    arg_8h = fcn.0040389b(0x133f, 0xffff);\n    uVar4 = noname_1 >> 0x10;\n    uVar3 = noname_1;\n    dVar6 = CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n    uVar7 = dVar6 >> 0x20;\n    if ((uVar4 & 0x7ff0) == 0x7ff0) {\n        iVar1 = fcn.004038aa(noname_0, uVar7);\n        if (0 < iVar1) {\n            if (iVar1 < 3) goto code_r0x0045f2b3;\n            if (iVar1 == 3) {\n                fVar2 = fcn.00403d6e(noname_0, CONCAT26(uVar4, CONCAT24(uVar3, noname_0)) >> 0x20, SUB84(arg_10h, 0));\n                fcn.0040389b(arg_8h, 0xffff);\n                goto code_r0x0045f272;\n            }\n        }\n        dVar6 = CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n        uVar9 = SUB84(*0x471d40 + dVar6, 0);\n        uVar10 = *0x471d40 + dVar6 >> 0x20;\n        uVar7 = SUB84(arg_10h, 0);\n        uVar8 = arg_10h >> 0x20;\n        uVar5 = 8;\n        goto code_r0x0045f3e5;\n    }\n    if (dVar6 == 0.0) {\ncode_r0x0045f2b3:\n        fcn.0040389b(arg_8h, 0xffff);\n        return CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n    }\n    fVar2 = fcn.004029f5(noname_0, uVar7, &var_4h);\n    if (arg_10h < 0) {\n        if (var_4h < -0x80000000 - arg_10h) {\ncode_r0x0045f344:\n            uVar9 = SUB84(0 * fVar2, 0);\n            uVar10 = 0 * fVar2 >> 0x20;\ncode_r0x0045f359:\n            uVar7 = SUB84(arg_10h, 0);\n            uVar8 = arg_10h >> 0x20;\n            dVar6 = CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n            uVar5 = 0x12;\n            goto code_r0x0045f3e5;\n        }\ncode_r0x0045f2fb:\n        var_4h = var_4h + arg_10h;\n        if (0xa00 < var_4h) goto code_r0x0045f3b3;\n        if (var_4h < 0x401) {\n            if (var_4h < -0x9fd) goto code_r0x0045f344;\n            if (-0x3fe < var_4h) {\n                fVar2 = fcn.004038f5(SUB84(fVar2, 0), fVar2 >> 0x20, var_4h);\n                fcn.0040389b(arg_8h, 0xffff);\ncode_r0x0045f272:\n                dStack16 = fVar2;\n                return dStack16;\n            }\n            fVar2 = fcn.004038f5(SUB84(fVar2, 0), fVar2 >> 0x20, var_4h + 0x600);\n            uVar9 = SUB84(fVar2, 0);\n            uVar10 = fVar2 >> 0x20;\n            goto code_r0x0045f359;\n        }\n        fVar2 = fcn.004038f5(SUB84(fVar2, 0), fVar2 >> 0x20, var_4h + -0x600);\n        uVar9 = SUB84(fVar2, 0);\n        uVar10 = fVar2 >> 0x20;\n        uVar7 = SUB84(arg_10h, 0);\n        uVar8 = arg_10h >> 0x20;\n    }\n    else {\n        if (var_4h <= 0x7fffffff - arg_10h) goto code_r0x0045f2fb;\ncode_r0x0045f3b3:\n        fVar2 = fcn.0040314d(*0x4728e8, *0x4728e8 >> 0x20, SUB84(fVar2, 0), fVar2 >> 0x20);\n        uVar9 = SUB84(fVar2, 0);\n        uVar10 = fVar2 >> 0x20;\n        uVar7 = SUB84(arg_10h, 0);\n        uVar8 = arg_10h >> 0x20;\n    }\n    dVar6 = CONCAT26(uVar4, CONCAT24(uVar3, noname_0));\n    uVar5 = 0x11;\ncode_r0x0045f3e5:\n    fVar2 = fcn.004044f8(uVar5, 0x19, dVar6, uVar7, uVar8, uVar9, uVar10, arg_8h);\n    return fVar2;\n}\n",
        "token_count": 1351
    },
    "0040230b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040230b(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    if (-1 < arg_8h) {\n        if (arg_8h < 3) {\n            uVar1 = *0x4771b8;\n            *0x4771b8 = arg_8h;\n            return uVar1;\n        }\n        if (arg_8h == 3) {\n            return *0x4771b8;\n        }\n    }\n    puVar2 = fcn.004029b9();\n    *puVar2 = 0x16;\n    fcn.00402842();\n    return 0xffffffff;\n}\n",
        "token_count": 157
    },
    "00402423": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402423(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    \n    if ((*(param_1 + 0x45c) != 2) || (in_EAX = 1,  *(param_1 + 0x458) != 1)) {\n        in_EAX = in_EAX & 0xffffff00;\n    }\n    return in_EAX;\n}\n",
        "token_count": 95
    },
    "0040272a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040272a(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    \n    if ((*(param_1 + 0x45c) != 2) || (in_EAX = 1,  *(param_1 + 0x458) != 1)) {\n        in_EAX = in_EAX & 0xffffff00;\n    }\n    return in_EAX;\n}\n",
        "token_count": 96
    },
    "00402969": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402969(code *arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.pDNameNode.0;\n    if ((arg_8h != NULL) && ((arg_8h[4] == 0x2 || (arg_8h[4] == 0x3)))) {\n        arg_8h = NULL;\n    }\n    in_ECX[1] = arg_8h;\n    return;\n}\n",
        "token_count": 108
    },
    "00403558": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403558(int32_t param_1)\n\n{\n    uint16_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint16_t *puVar3;\n    uint16_t *var_8h;\n    uint16_t *var_4h;\n    \n    if (*(param_1 + 0x18) == '\\x01') {\n        var_8h = *(param_1 + 0xc);\n        in_EAX = *var_8h;\n        if (in_EAX != 0x25) {\n            if (*(param_1 + 0x45c) == 0) {\n                if ((((in_EAX < 0x30) || (0x39 < in_EAX)) ||\n                    (var_4h = var_8h,  in_EAX = fcn.0040105f(*(param_1 + 8), var_8h, &var_4h, 10, 1),  in_EAX < 1)) ||\n                   (in_EAX = var_4h,  *var_4h != 0x24)) {\n                    *(param_1 + 0x45c) = 1;\n                    goto code_r0x0043b5c5;\n                }\n                if (*(param_1 + 0x458) == 1) {\n                    fcn.0040248c(param_1 + 0x464, 0, 0x640);\n                }\n                var_8h = *(param_1 + 0xc);\n                *(param_1 + 0x45c) = 2;\n            }\n            else if (*(param_1 + 0x45c) != 2) goto code_r0x0043b5c5;\n            iVar1 = fcn.0040105f(*(param_1 + 8), var_8h, &var_8h, 10, 1);\n            puVar3 = iVar1 + -1;\n            in_EAX = var_8h + 1;\n            *(param_1 + 0xaa8) = puVar3;\n            *(param_1 + 0xc) = in_EAX;\n            if (*(param_1 + 0x458) == 1) {\n                if (((puVar3 < 0) || (*var_8h != 0x24)) || (99 < puVar3)) {\n                    iVar1 = *(param_1 + 8);\n                    *(iVar1 + 0x1c) = 1;\n                    *(iVar1 + 0x18) = 0x16;\n                    uVar2 = fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                    return uVar2 & 0xffffff00;\n                }\n                in_EAX = *(param_1 + 0xaa4);\n                if (puVar3 <= in_EAX) {\n                    puVar3 = in_EAX;\n                }\n                *(param_1 + 0xaa4) = puVar3;\n            }\n        }\n    }\ncode_r0x0043b5c5:\n    return in_EAX & 0xffffff00 | 1;\n}\n",
        "token_count": 708
    },
    "004036b6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004036b6(int32_t param_1)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *var_8h;\n    char *var_4h;\n    \n    if (*(param_1 + 0x18) == '\\x01') {\n        var_8h = *(param_1 + 0xc);\n        cVar1 = *var_8h;\n        in_EAX = in_EAX & 0xffffff00;\n        if (cVar1 != '%') {\n            if (*(param_1 + 0x45c) == 0) {\n                if ((((cVar1 < '0') || ('9' < cVar1)) ||\n                    (var_4h = var_8h,  in_EAX = fcn.004030f3(*(param_1 + 8), var_8h, &var_4h, 10, 1),  in_EAX < 1)) ||\n                   (in_EAX = var_4h,  *var_4h != '$')) {\n                    *(param_1 + 0x45c) = 1;\n                    goto code_r0x0043b45f;\n                }\n                if (*(param_1 + 0x458) == 1) {\n                    fcn.0040248c(param_1 + 0x464, 0, 0x640);\n                }\n                var_8h = *(param_1 + 0xc);\n                *(param_1 + 0x45c) = 2;\n            }\n            else if (*(param_1 + 0x45c) != 2) goto code_r0x0043b45f;\n            iVar2 = fcn.004030f3(*(param_1 + 8), var_8h, &var_8h, 10, 1);\n            pcVar4 = iVar2 + -1;\n            in_EAX = var_8h + 1;\n            *(param_1 + 0xaa8) = pcVar4;\n            *(param_1 + 0xc) = in_EAX;\n            if (*(param_1 + 0x458) == 1) {\n                if (((pcVar4 < 0) || (*var_8h != '$')) || (99 < pcVar4)) {\n                    iVar2 = *(param_1 + 8);\n                    *(iVar2 + 0x1c) = 1;\n                    *(iVar2 + 0x18) = 0x16;\n                    uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                    return uVar3 & 0xffffff00;\n                }\n                in_EAX = *(param_1 + 0xaa4);\n                if (pcVar4 <= in_EAX) {\n                    pcVar4 = in_EAX;\n                }\n                *(param_1 + 0xaa4) = pcVar4;\n            }\n        }\n    }\ncode_r0x0043b45f:\n    return in_EAX & 0xffffff00 | 1;\n}\n",
        "token_count": 706
    },
    "00403b20": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_118h\n\nvoid __cdecl fcn.00403b20(uchar *arg_8h, uint32_t arg_ch, uint32_t arg_10h, code *arg_14h)\n\n{\n    uchar *puVar1;\n    uchar uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    int32_t var_118h;\n    uint var_114h;\n    uint var_110h;\n    uchar *var_10ch;\n    uint var_108h;\n    uchar *var_104h;\n    uint var_100h;\n    uchar *var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_7ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    var_104h = arg_8h;\n    if ((((arg_8h == NULL) && (arg_ch != 0)) || (arg_10h == 0)) || (arg_14h == NULL)) {\n        puVar3 = fcn.004029b9();\n        *puVar3 = 0x16;\n        fcn.00402842();\n    }\n    else {\n        var_118h = 0;\n        if (1 < arg_ch) {\n            puVar7 = arg_8h + (arg_ch - 1) * arg_10h;\ncode_r0x0044fb72:\n            while (uVar4 = (puVar7 - var_104h) / arg_10h + 1,  8 < uVar4) {\n                iVar5 = (uVar4 >> 1) * arg_10h;\n                puVar8 = var_104h + iVar5;\n                (**0x47a000)(var_104h, puVar8);\n                iVar6 = (*arg_14h)();\n                if ((0 < iVar6) && (uVar4 = arg_10h,  puVar10 = puVar8,  var_104h != puVar8)) {\n                    do {\n                        uVar2 = puVar10[-iVar5];\n                        puVar10[-iVar5] = *puVar10;\n                        *puVar10 = uVar2;\n                        uVar4 = uVar4 - 1;\n                        puVar10 = puVar10 + 1;\n                    } while (uVar4 != 0);\n                }\n                (**0x47a000)(var_104h, puVar7);\n                iVar5 = (*arg_14h)();\n                if ((0 < iVar5) && (uVar4 = arg_10h,  puVar10 = puVar7,  var_104h != puVar7)) {\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar2 = puVar9[var_104h + (-1 - puVar7)];\n                        puVar9[var_104h + (-1 - puVar7)] = *puVar10;\n                        *puVar10 = uVar2;\n                        uVar4 = uVar4 - 1;\n                        puVar10 = puVar9;\n                    } while (uVar4 != 0);\n                }\n                (**0x47a000)(puVar8, puVar7);\n                iVar5 = (*arg_14h)();\n                var_10ch = var_104h;\n                var_fch = puVar7;\n                if ((0 < iVar5) && (uVar4 = arg_10h,  puVar10 = puVar7,  puVar8 != puVar7)) {\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar2 = puVar9[puVar8 + (-1 - puVar7)];\n                        puVar9[puVar8 + (-1 - puVar7)] = *puVar10;\n                        *puVar10 = uVar2;\n                        uVar4 = uVar4 - 1;\n                        puVar10 = puVar9;\n                    } while (uVar4 != 0);\n                }\ncode_r0x0044fd83:\n                if (var_10ch < puVar8) {\n                    do {\n                        var_10ch = var_10ch + arg_10h;\n                        if (puVar8 <= var_10ch) goto code_r0x0044fdd0;\n                        (**0x47a000)(var_10ch, puVar8);\n                        iVar5 = (*arg_14h)();\n                        puVar10 = var_fch;\n                    } while (iVar5 < 1);\n                }\n                else {\ncode_r0x0044fdd0:\n                    do {\n                        var_10ch = var_10ch + arg_10h;\n                        puVar10 = var_fch;\n                        if (puVar7 < var_10ch) break;\n                        (**0x47a000)(var_10ch, puVar8);\n                        iVar5 = (*arg_14h)();\n                    } while (iVar5 < 1);\n                }\n                do {\n                    var_fch = puVar10;\n                    puVar10 = var_fch + -arg_10h;\n                    if (puVar10 <= puVar8) break;\n                    (**0x47a000)(puVar10, puVar8);\n                    iVar5 = (*arg_14h)();\n                } while (0 < iVar5);\n                if (var_10ch <= puVar10) {\n                    puVar9 = puVar10;\n                    uVar4 = arg_10h;\n                    if (puVar10 != var_10ch) {\n                        do {\n                            puVar1 = puVar9 + 1;\n                            uVar2 = puVar1[var_10ch + (-1 - puVar10)];\n                            puVar1[var_10ch + (-1 - puVar10)] = *puVar9;\n                            *puVar9 = uVar2;\n                            uVar4 = uVar4 - 1;\n                            puVar9 = puVar1;\n                        } while (uVar4 != 0);\n                    }\n                    var_fch = puVar10;\n                    if (puVar8 == puVar10) {\n                        puVar8 = var_10ch;\n                    }\n                    goto code_r0x0044fd83;\n                }\n                if (puVar8 < var_fch) {\n                    do {\n                        var_fch = var_fch + -arg_10h;\n                        if (var_fch <= puVar8) goto code_r0x0044fef0;\n                        (**0x47a000)(var_fch, puVar8);\n                        iVar5 = (*arg_14h)();\n                    } while (iVar5 == 0);\n                }\n                else {\ncode_r0x0044fef0:\n                    do {\n                        var_fch = var_fch + -arg_10h;\n                        if (var_fch <= var_104h) break;\n                        (**0x47a000)(var_fch, puVar8);\n                        iVar5 = (*arg_14h)();\n                    } while (iVar5 == 0);\n                }\n                if (var_fch - var_104h < puVar7 - var_10ch) goto code_r0x0044ff7a;\n                if (var_104h < var_fch) {\n                    (&var_7ch)[var_118h] = var_104h;\n                    (&var_f4h)[var_118h] = var_fch;\n                    var_118h = var_118h + 1;\n                }\n                var_104h = var_10ch;\n                if (puVar7 <= var_10ch) goto code_r0x0044ffb3;\n            }\n            for (; puVar10 = var_104h,  puVar8 = var_104h,  var_104h < puVar7; puVar7 = puVar7 + -arg_10h) {\n                while (puVar8 = puVar8 + arg_10h,  puVar8 <= puVar7) {\n                    (**0x47a000)(puVar8, puVar10);\n                    iVar5 = (*arg_14h)();\n                    if (0 < iVar5) {\n                        puVar10 = puVar8;\n                    }\n                }\n                if (puVar10 != puVar7) {\n                    puVar8 = puVar7;\n                    uVar4 = arg_10h;\n                    do {\n                        uVar2 = puVar8[puVar10 - puVar7];\n                        (puVar8 + 1)[(puVar10 - puVar7) + -1] = *puVar8;\n                        *puVar8 = uVar2;\n                        uVar4 = uVar4 - 1;\n                        puVar8 = puVar8 + 1;\n                    } while (uVar4 != 0);\n                }\n            }\n            goto code_r0x0044ffb3;\n        }\n    }\ncode_r0x0044fb3e:\n    fcn.0040241e(var_118h);\n    return;\ncode_r0x0044ff7a:\n    if (var_10ch < puVar7) {\n        (&var_7ch)[var_118h] = var_10ch;\n        (&var_f4h)[var_118h] = puVar7;\n        var_118h = var_118h + 1;\n    }\n    puVar7 = var_fch;\n    if (var_fch <= var_104h) {\ncode_r0x0044ffb3:\n        var_118h = var_118h + -1;\n        if (-1 < var_118h) {\n            var_104h = (&var_7ch)[var_118h];\n            puVar7 = (&var_f4h)[var_118h];\n            goto code_r0x0044fb72;\n        }\n        goto code_r0x0044fb3e;\n    }\n    goto code_r0x0044fb72;\n}\n",
        "token_count": 2200
    },
    "0041c287": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.0041c287(uint arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *arg_ch_00;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint var_44h;\n    uint var_40h;\n    int16_t *var_3ch;\n    int32_t *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_1ch;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    var_3ch = arg_ch;\n    fcn.0040248c(arg_8h, 0, 0x1ca);\n    uVar7 = 0;\n    var_38h = &var_30h;\ncode_r0x0041c2c4:\n    do {\n        iVar4 = 0;\n        uVar8 = uVar7;\n        while( true ) {\n            if (3 < uVar8) goto code_r0x0041c44e;\n            if (iVar4 == 2) {\n                piVar6 = var_3ch;\n                do {\n                    iVar1 = *piVar6;\n                    piVar6 = piVar6 + 1;\n                } while (iVar1 != 0);\n                iVar5 = piVar6 - (var_3ch + 1) >> 1;\n            }\n            else {\n                iVar5 = fcn.004027e3(var_3ch, 0x46b614);\n            }\n            uVar7 = uVar8 + 1;\n            piVar2 = var_38h + 3;\n            var_38h[-1] = var_3ch;\n            *var_38h = iVar5;\n            var_38h[1] = iVar4;\n            iVar1 = var_3ch[iVar5];\n            var_3ch = var_3ch + iVar5 + 1;\n            var_38h = piVar2;\n            if (iVar1 == 0x2d) goto code_r0x0041c2c4;\n            if (iVar1 != 0x2e) break;\n            iVar4 = 2;\n            uVar8 = uVar7;\n        }\n    } while (iVar1 == 0x5f);\n    if (uVar8 == 0) {\n        fcn.0041c520(arg_8h, &var_34h);\n    }\n    else {\n        if (uVar8 == 1) {\n            cVar3 = fcn.0041c520(arg_8h, &var_34h);\n            if (((cVar3 == '\\0') || (cVar3 = fcn.0041c69b(arg_8h, &var_28h),  cVar3 != '\\0')) ||\n               (cVar3 = fcn.0041c5ae(arg_8h, &var_28h),  cVar3 != '\\0')) goto code_r0x0041c44e;\n            arg_ch_00 = &var_28h;\n        }\n        else if (uVar8 == 2) {\n            cVar3 = fcn.0041c520(arg_8h, &var_34h);\n            if ((cVar3 == '\\0') ||\n               (((cVar3 = fcn.0041c69b(arg_8h, &var_28h),  cVar3 != '\\0' &&\n                 ((cVar3 = fcn.0041c5ae(arg_8h, &var_1ch),  cVar3 != '\\0' ||\n                  (cVar3 = fcn.0041c4d2(arg_8h, &var_1ch),  cVar3 != '\\0')))) ||\n                (cVar3 = fcn.0041c5ae(arg_8h, &var_28h),  cVar3 == '\\0')))) goto code_r0x0041c44e;\n            arg_ch_00 = &var_1ch;\n        }\n        else {\n            if (((uVar8 != 3) || (cVar3 = fcn.0041c520(arg_8h, &var_34h),  cVar3 == '\\0')) ||\n               ((cVar3 = fcn.0041c69b(arg_8h, &var_28h),  cVar3 == '\\0' ||\n                (cVar3 = fcn.0041c5ae(arg_8h, &var_1ch),  cVar3 == '\\0')))) goto code_r0x0041c44e;\n            arg_ch_00 = &var_10h;\n        }\n        fcn.0041c4d2(arg_8h, arg_ch_00);\n    }\ncode_r0x0041c44e:\n    fcn.0040241e(arg_8h);\n    return;\n}\n",
        "token_count": 1156
    },
    "0041c5ae": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041c5ae(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint32_t in_EAX;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    uVar4 = 0;\n    if (arg_ch[2] == 0) {\n        if ((arg_ch[1] != 2) || (in_EAX = fcn.0041c727(*arg_ch, 2),  in_EAX == '\\0')) {\n            if (arg_ch[1] != 3) goto code_r0x0041c65a;\n            iVar3 = *arg_ch;\n            do {\n                uVar1 = *(iVar3 + uVar4 * 2);\n                arg_8h_00 = fcn.0040357b();\n                in_EAX = fcn.00404192(arg_8h_00, uVar1, 4);\n                if (in_EAX == 0) goto code_r0x0041c65a;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < 3);\n        }\n        iVar3 = fcn.00403df5(arg_8h + 0x80, 0x40, *arg_ch, arg_ch[1]);\n        if (iVar3 == 0) {\n            iVar3 = fcn.004031fc(arg_8h + 0x120, 0x55, 0x46b610, 1);\n            if ((iVar3 == 0) && (iVar3 = fcn.004031fc(arg_8h + 0x120, 0x55, *arg_ch, arg_ch[1]),  iVar3 == 0)) {\n                return 1;\n            }\n        }\n        fcn.0040277f(0, 0, 0, 0, 0);\n        pcVar2 = swi(3);\n        uVar4 = (*pcVar2)();\n        return uVar4;\n    }\ncode_r0x0041c65a:\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 498
    },
    "0044563a": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0044563a(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    uVar4 = 0;\n    do {\n        iVar3 = (uVar4 & 0x3f) * 0x38 + *((uVar4 >> 6) * 4 + 0x4771f0);\n        if ((*(iVar3 + 0x18) == -1) || (*(iVar3 + 0x18) == -2)) {\n            *(iVar3 + 0x28) = 0x81;\n            if (uVar4 == 0) {\n                uVar5 = 0xfffffff6;\n            }\n            else if (uVar4 == 1) {\n                uVar5 = 0xfffffff5;\n            }\n            else {\n                uVar5 = 0xfffffff4;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(uVar5);\n            if ((iVar1 != -1) && (iVar1 != 0)) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetFileType)(iVar1);\n                if (uVar2 != 0) {\n                    *(iVar3 + 0x18) = iVar1;\n                    if ((uVar2 & 0xff) == 2) {\n                        *(iVar3 + 0x28) = *(iVar3 + 0x28) | 0x40;\n                    }\n                    else if ((uVar2 & 0xff) == 3) {\n                        *(iVar3 + 0x28) = *(iVar3 + 0x28) | 8;\n                    }\n                    goto code_r0x004456dc;\n                }\n            }\n            *(iVar3 + 0x28) = *(iVar3 + 0x28) | 0x40;\n            *(iVar3 + 0x18) = 0xfffffffe;\n            if (*0x477594 != 0) {\n                *(*(*0x477594 + uVar4 * 4) + 0x10) = 0xfffffffe;\n            }\n        }\n        else {\n            *(iVar3 + 0x28) = *(iVar3 + 0x28) | 0x80;\n        }\ncode_r0x004456dc:\n        uVar4 = uVar4 + 1;\n        if (uVar4 == 3) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 555
    },
    "004589da": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004589da(uint32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t arg_10h_00;\n    uint32_t uVar4;\n    bool bVar5;\n    ulong uVar6;\n    \n    uVar1 = fcn.0040406b(arg_ch);\n    if ((arg_ch[3] & 0xc0U) == 0) {\n        uVar1 = fcn.00402ca2(uVar1, &arg_8h, 2, arg_10h);\n        bVar5 = uVar1 == 2;\n    }\n    else {\n        uVar4 = 0;\n        arg_10h_00 = *arg_ch - arg_ch[1];\n        *arg_ch = arg_ch[1] + 2;\n        arg_ch[2] = arg_ch[6] + -2;\n        if (arg_10h_00 < 1) {\n            if ((uVar1 == 0xffffffff) || (uVar1 == 0xfffffffe)) {\n                uVar2 = 0x4756c0;\n            }\n            else {\n                uVar2 = (uVar1 & 0x3f) * 0x38 + *((uVar1 >> 6) * 4 + 0x4771f0);\n            }\n            if ((*(uVar2 + 0x28) & 0x20) != 0) {\n                uVar6 = fcn.004030ee(uVar1, 0, 0, 2);\n                uVar2 = uVar6 & uVar6 >> 0x20;\n                if (uVar2 == 0xffffffff) {\n                    puVar3 = arg_ch + 3;\n                    LOCK();\n                    *puVar3 = *puVar3 | 0x10;\n                    return CONCAT31(puVar3 >> 8, 1);\n                }\n            }\n        }\n        else {\n            uVar2 = fcn.00402ca2(uVar1, arg_ch[1], arg_10h_00, arg_10h);\n            uVar4 = uVar2;\n        }\n        bVar5 = uVar4 == arg_10h_00;\n        uVar1 = uVar2 & 0xffff0000 | arg_8h & 0xffff;\n        *arg_ch[1] = arg_8h & 0xffff;\n    }\n    return uVar1 & 0xffffff00 | bVar5;\n}\n",
        "token_count": 578
    },
    "00401118": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401118(int32_t arg_8h, int32_t **arg_ch)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    int32_t *piVar8;\n    bool bVar9;\n    \n    if ((((arg_ch == NULL) || (piVar8 = *arg_ch,  piVar8 == NULL)) || (*piVar8 != -0x1f928c9d)) ||\n       ((piVar8[4] != 3 || (((piVar8[5] != 0x19930520 && (piVar8[5] != 0x19930521)) && (piVar8[5] != 0x19930522)))))) {\n        fcn.00403693();\n        pcVar2 = swi(3);\n        uVar5 = (*pcVar2)();\n        return uVar5;\n    }\n    piVar8 = *(piVar8[7] + 0xc);\n    iVar6 = *piVar8;\n    do {\n        if (iVar6 < 1) {\n            return 0;\n        }\n        piVar8 = piVar8 + 1;\n        puVar7 = arg_8h + 8;\n        puVar3 = *(*piVar8 + 4) + 8;\n        do {\n            uVar1 = *puVar7;\n            bVar9 = uVar1 < *puVar3;\n            if (uVar1 != *puVar3) {\ncode_r0x0040b789:\n                uVar4 = -bVar9 | 1;\n                goto code_r0x0040b78e;\n            }\n            if (uVar1 == 0) break;\n            uVar1 = puVar7[1];\n            bVar9 = uVar1 < puVar3[1];\n            if (uVar1 != puVar3[1]) goto code_r0x0040b789;\n            puVar7 = puVar7 + 2;\n            puVar3 = puVar3 + 2;\n        } while (uVar1 != 0);\n        uVar4 = 0;\ncode_r0x0040b78e:\n        if (uVar4 == 0) {\n            return 1;\n        }\n        iVar6 = iVar6 + -1;\n    } while( true );\n}\n",
        "token_count": 547
    },
    "004024ff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004024ff(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    int32_t arg_ch;\n    code *pcVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00401b59(0x473eb8, 8);\n    piVar1 = *(unaff_EBP + 8);\n    if ((((piVar1 != NULL) && (*piVar1 == -0x1f928c9d)) && (piVar1[4] == 3)) &&\n       ((((piVar1[5] == 0x19930520 || (piVar1[5] == 0x19930521)) || (piVar1[5] == 0x19930522)) &&\n        (puVar2 = piVar1[7],  puVar2 != NULL)))) {\n        arg_ch = *(puVar2 + 4);\n        if (arg_ch == 0) {\n            if (((*puVar2 & 0x10) != 0) && (piVar1 = *piVar1[6],  piVar1 != NULL)) {\n                pcVar3 = *(*piVar1 + 8);\n                (**0x47a000)(piVar1);\n                (*pcVar3)();\n            }\n        }\n        else {\n            *(unaff_EBP + -4) = 0;\n            fcn.00401fd2(piVar1[6], arg_ch);\n            *(unaff_EBP + -4) = 0xfffffffe;\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return;\n}\n",
        "token_count": 404
    },
    "004030d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004030d0(uint *arg_8h)\n\n{\n    char *pcVar1;\n    \n    if ((((**0x476418 != '\\0') && (**0x476418 == '_')) && ((*0x476418)[1] != '\\0')) && ((*0x476418)[1] == '_')) {\n        pcVar1 = *0x476418 + 2;\n        *0x476418 = *0x476418 + 3;\n        if (3 < *pcVar1 - 0x41U) {\n            fcn.004014dd(2);\n            return arg_8h;\n        }\n    }\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    return arg_8h;\n}\n",
        "token_count": 173
    },
    "004032e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004032e2(uint32_t arg_8h)\n\n{\n    if (arg_8h < 4) {\n        return arg_8h * 0xc + 0x46b094;\n    }\n    return 0x46b0b8;\n}\n",
        "token_count": 66
    },
    "0040a7e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a7e4(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t **ppiVar4;\n    uint uVar5;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        ppiVar4 = fcn.00401adc();\n        *ppiVar4 = piVar1;\n        piVar1 = arg_8h[1];\n        ppiVar4 = fcn.0040420a();\n        *ppiVar4 = piVar1;\n        fcn.0040106e();\n        pcVar3 = swi(3);\n        uVar5 = (*pcVar3)();\n        return uVar5;\n    }\n    return 0;\n}\n",
        "token_count": 265
    },
    "00402892": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040ab92)\n// WARNING: Removing unreachable block (ram,0x0040ab56)\n// WARNING: Removing unreachable block (ram,0x0040ac0a)\n\nuint fcn.00402892(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t in_XCR0;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x4763a8 = 0;\n    *0x475040 = *0x475040 | 1;\n    iVar3 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(10);\n    uVar4 = *0x475040;\n    if (iVar3 != 0) {\n        piVar1 = cpuid_basic_info(0);\n        puVar2 = cpuid_Version_info(1);\n        uVar5 = puVar2[3];\n        if (((piVar1[2] ^ 0x49656e69U | piVar1[3] ^ 0x6c65746eU | piVar1[1] ^ 0x756e6547U) == 0) &&\n           (((((uVar4 = *puVar2 & 0xfff3ff0,  uVar4 == 0x106c0 || (uVar4 == 0x20660)) || (uVar4 == 0x20670)) ||\n             ((uVar4 == 0x30650 || (uVar4 == 0x30660)))) || (uVar4 == 0x30670)))) {\n            *0x4763ac = *0x4763ac | 1;\n        }\n        if (*piVar1 < 7) {\n            uVar6 = 0;\n        }\n        else {\n            iVar3 = cpuid_Extended_Feature_Enumeration_info(7);\n            uVar6 = *(iVar3 + 4);\n            if ((uVar6 & 0x200) != 0) {\n                *0x4763ac = *0x4763ac | 2;\n            }\n        }\n        *0x4763a8 = 1;\n        uVar4 = *0x475040 | 2;\n        if ((uVar5 & 0x100000) != 0) {\n            uVar4 = *0x475040 | 6;\n            *0x4763a8 = 2;\n            if ((((uVar5 & 0x8000000) != 0) && ((uVar5 & 0x10000000) != 0)) && ((in_XCR0 & 6) == 6)) {\n                *0x4763a8 = 3;\n                uVar4 = *0x475040 | 0xe;\n                if ((uVar6 & 0x20) != 0) {\n                    *0x4763a8 = 5;\n                    uVar4 = *0x475040 | 0x2e;\n                    if (((uVar6 & 0xd0030000) == 0xd0030000) && ((in_XCR0 & 0xe0) == 0xe0)) {\n                        *0x475040 = *0x475040 | 0x6e;\n                        *0x4763a8 = 6;\n                        uVar4 = *0x475040;\n                    }\n                }\n            }\n        }\n    }\n    *0x475040 = uVar4;\n    return 0;\n}\n",
        "token_count": 845
    },
    "004017b7": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004017b7(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    cVar1 = fcn.00403427(&var_4h);\n    if (cVar1 == '\\0') {\ncode_r0x004392df:\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.00402f18();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.00402ef0();\n            if (iVar3 == 0) {\ncode_r0x004392fa:\n                iVar3 = *(param_1 + 8);\n                *(iVar3 + 0x1c) = 1;\n                *(iVar3 + 0x18) = 0x16;\n                fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                goto code_r0x004392df;\n            }\n            iVar3 = fcn.00401e3d(*(param_1 + 0x28));\n            if (iVar3 == 1) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else if (iVar3 == 2) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else if (iVar3 == 4) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else {\n                if (iVar3 != 8) goto code_r0x004392fa;\n                iVar3 = *(param_1 + 0x14);\n                *var_4h = iVar3;\n                var_4h[1] = iVar3 >> 0x1f;\n            }\n            *(param_1 + 0x2c) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 457
    },
    "004019ec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004019ec(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n    puVar1 = *(*(param_1 + 0x10) + -4);\n    iVar2 = fcn.00402ef0();\n    if (iVar2 == 0) {\ncode_r0x004393b4:\n        iVar2 = *(param_1 + 8);\n        *(iVar2 + 0x1c) = 1;\n        *(iVar2 + 0x18) = 0x16;\n        uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n        uVar3 = uVar3 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00401e3d(*(param_1 + 0x28));\n        if (iVar2 == 1) {\n            uVar3 = 0;\n            *puVar1 = *(param_1 + 0x14);\n        }\n        else if (iVar2 == 2) {\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = *(param_1 + 0x14);\n        }\n        else if (iVar2 == 4) {\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = uVar3;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x004393b4;\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = uVar3;\n            puVar1[1] = uVar3 >> 0x1f;\n        }\n        *(param_1 + 0x2c) = 1;\n        uVar3 = CONCAT31(uVar3 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 468
    },
    "00401bdb": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401bdb(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n    puVar1 = *(*(param_1 + 0x10) + -4);\n    iVar2 = fcn.00402ef0();\n    if (iVar2 == 0) {\ncode_r0x00438df3:\n        iVar2 = *(param_1 + 8);\n        *(iVar2 + 0x1c) = 1;\n        *(iVar2 + 0x18) = 0x16;\n        uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n        uVar3 = uVar3 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00401e3d(*(param_1 + 0x28));\n        if (iVar2 == 1) {\n            uVar3 = 0;\n            *puVar1 = *(param_1 + 0x14);\n        }\n        else if (iVar2 == 2) {\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = *(param_1 + 0x14);\n        }\n        else if (iVar2 == 4) {\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = uVar3;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x00438df3;\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = uVar3;\n            puVar1[1] = uVar3 >> 0x1f;\n        }\n        *(param_1 + 0x2c) = 1;\n        uVar3 = CONCAT31(uVar3 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 468
    },
    "00401c7b": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401c7b(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    cVar1 = fcn.004014bf(&var_4h);\n    if (cVar1 == '\\0') {\ncode_r0x00439501:\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.00403d23();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.00402ef0();\n            if (iVar3 == 0) {\ncode_r0x0043951c:\n                iVar3 = *(param_1 + 8);\n                *(iVar3 + 0x1c) = 1;\n                *(iVar3 + 0x18) = 0x16;\n                fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                goto code_r0x00439501;\n            }\n            iVar3 = fcn.00401e3d(*(param_1 + 0x28));\n            if (iVar3 == 1) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else if (iVar3 == 2) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else if (iVar3 == 4) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else {\n                if (iVar3 != 8) goto code_r0x0043951c;\n                iVar3 = *(param_1 + 0x14);\n                *var_4h = iVar3;\n                var_4h[1] = iVar3 >> 0x1f;\n            }\n            *(param_1 + 0x2c) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 460
    },
    "004021c1": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004021c1(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n    puVar1 = *(*(param_1 + 0x10) + -4);\n    iVar2 = fcn.00402ef0();\n    if (iVar2 == 0) {\ncode_r0x00439015:\n        iVar2 = *(param_1 + 8);\n        *(iVar2 + 0x1c) = 1;\n        *(iVar2 + 0x18) = 0x16;\n        uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n        uVar3 = uVar3 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00401e3d(*(param_1 + 0x28));\n        if (iVar2 == 1) {\n            uVar3 = 0;\n            *puVar1 = *(param_1 + 0x14);\n        }\n        else if (iVar2 == 2) {\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = *(param_1 + 0x14);\n        }\n        else if (iVar2 == 4) {\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = uVar3;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x00439015;\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = uVar3;\n            puVar1[1] = uVar3 >> 0x1f;\n        }\n        *(param_1 + 0x2c) = 1;\n        uVar3 = CONCAT31(uVar3 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 467
    },
    "0040248c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * fcn.0040248c(int32_t *param_1, uint8_t param_2, uchar *param_3)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (param_3 == NULL) {\n        return param_1;\n    }\n    iVar1 = param_2 * 0x1010101;\n    piVar2 = param_1;\n    if (0x20 < param_3) {\n        if (0x7f < param_3) {\n            if ((*0x4763ac >> 1 & 1) != 0) {\n                for (; param_3 != NULL; param_3 = param_3 + -1) {\n                    *piVar2 = iVar1;\n                    piVar2 = piVar2 + 1;\n                }\n                return param_1;\n            }\n            if ((*0x475040 >> 1 & 1) == 0) goto joined_r0x0040ae8b;\n            *param_1 = iVar1;\n            param_1[1] = iVar1;\n            param_1[2] = iVar1;\n            param_1[3] = iVar1;\n            piVar2 = param_1 + 4 & 0xfffffff0;\n            param_3 = param_1 + (param_3 - piVar2);\n            if (0x80 < param_3) {\n                do {\n                    *piVar2 = iVar1;\n                    piVar2[1] = iVar1;\n                    piVar2[2] = iVar1;\n                    piVar2[3] = iVar1;\n                    piVar2[4] = iVar1;\n                    piVar2[5] = iVar1;\n                    piVar2[6] = iVar1;\n                    piVar2[7] = iVar1;\n                    piVar2[8] = iVar1;\n                    piVar2[9] = iVar1;\n                    piVar2[10] = iVar1;\n                    piVar2[0xb] = iVar1;\n                    piVar2[0xc] = iVar1;\n                    piVar2[0xd] = iVar1;\n                    piVar2[0xe] = iVar1;\n                    piVar2[0xf] = iVar1;\n                    piVar2[0x10] = iVar1;\n                    piVar2[0x11] = iVar1;\n                    piVar2[0x12] = iVar1;\n                    piVar2[0x13] = iVar1;\n                    piVar2[0x14] = iVar1;\n                    piVar2[0x15] = iVar1;\n                    piVar2[0x16] = iVar1;\n                    piVar2[0x17] = iVar1;\n                    piVar2[0x18] = iVar1;\n                    piVar2[0x19] = iVar1;\n                    piVar2[0x1a] = iVar1;\n                    piVar2[0x1b] = iVar1;\n                    piVar2[0x1c] = iVar1;\n                    piVar2[0x1d] = iVar1;\n                    piVar2[0x1e] = iVar1;\n                    piVar2[0x1f] = iVar1;\n                    piVar2 = piVar2 + 0x20;\n                    param_3 = param_3 + -0x80;\n                } while ((param_3 & 0xffffff00) != 0);\n                goto code_r0x0040ae50;\n            }\n        }\n        if ((*0x475040 >> 1 & 1) != 0) {\ncode_r0x0040ae50:\n            if (0x1f < param_3) {\n                do {\n                    *piVar2 = iVar1;\n                    piVar2[1] = iVar1;\n                    piVar2[2] = iVar1;\n                    piVar2[3] = iVar1;\n                    piVar2[4] = iVar1;\n                    piVar2[5] = iVar1;\n                    piVar2[6] = iVar1;\n                    piVar2[7] = iVar1;\n                    piVar2 = piVar2 + 8;\n                    param_3 = param_3 + -0x20;\n                } while (0x1f < param_3);\n                if ((param_3 & 0x1f) == 0) {\n                    return param_1;\n                }\n            }\n            piVar2 = piVar2 + param_3 + -0x20;\n            *piVar2 = iVar1;\n            piVar2[1] = iVar1;\n            piVar2[2] = iVar1;\n            piVar2[3] = iVar1;\n            piVar2[4] = iVar1;\n            piVar2[5] = iVar1;\n            piVar2[6] = iVar1;\n            piVar2[7] = iVar1;\n            return param_1;\n        }\n    }\njoined_r0x0040ae8b:\n    for (; (param_3 & 3) != 0; param_3 = param_3 + -1) {\n        *piVar2 = iVar1;\n        piVar2 = piVar2 + 1;\n    }\n    if ((param_3 & 4) != 0) {\n        *piVar2 = iVar1;\n        piVar2 = piVar2 + 1;\n        param_3 = param_3 + -4;\n    }\n    for (; (param_3 & 0xfffffff8) != 0; param_3 = param_3 + -8) {\n        *piVar2 = iVar1;\n        piVar2[1] = iVar1;\n        piVar2 = piVar2 + 2;\n    }\n    return param_1;\n}\n",
        "token_count": 1257
    },
    "004026d5": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004026d5(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n    puVar1 = *(*(param_1 + 0x10) + -4);\n    iVar2 = fcn.00402ef0();\n    if (iVar2 == 0) {\ncode_r0x00439192:\n        iVar2 = *(param_1 + 8);\n        *(iVar2 + 0x1c) = 1;\n        *(iVar2 + 0x18) = 0x16;\n        uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n        uVar3 = uVar3 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00401e3d(*(param_1 + 0x28));\n        if (iVar2 == 1) {\n            uVar3 = 0;\n            *puVar1 = *(param_1 + 0x14);\n        }\n        else if (iVar2 == 2) {\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = *(param_1 + 0x14);\n        }\n        else if (iVar2 == 4) {\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = uVar3;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x00439192;\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = uVar3;\n            puVar1[1] = uVar3 >> 0x1f;\n        }\n        *(param_1 + 0x2c) = 1;\n        uVar3 = CONCAT31(uVar3 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 467
    },
    "00402a72": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402a72(uint param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = fcn.00403891(param_4, &stack0xfffffffc, param_1);\n    (*pcVar1)();\n    iVar2 = *(param_4 + 0x10);\n    if (iVar2 == 0x100) {\n        iVar2 = 2;\n    }\n    fcn.00403891(iVar2, param_4);\n    return;\n}\n",
        "token_count": 135
    },
    "00402b67": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402b67(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    cVar1 = fcn.00401c3f(&var_4h);\n    if (cVar1 == '\\0') {\ncode_r0x004390bd:\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.0040383c();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.00402ef0();\n            if (iVar3 == 0) {\ncode_r0x004390d8:\n                iVar3 = *(param_1 + 8);\n                *(iVar3 + 0x1c) = 1;\n                *(iVar3 + 0x18) = 0x16;\n                fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                goto code_r0x004390bd;\n            }\n            iVar3 = fcn.00401e3d(*(param_1 + 0x28));\n            if (iVar3 == 1) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else if (iVar3 == 2) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else if (iVar3 == 4) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else {\n                if (iVar3 != 8) goto code_r0x004390d8;\n                iVar3 = *(param_1 + 0x14);\n                *var_4h = iVar3;\n                var_4h[1] = iVar3 >> 0x1f;\n            }\n            *(param_1 + 0x2c) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 461
    },
    "0040303f": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040303f(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n    puVar1 = *(*(param_1 + 0x10) + -4);\n    iVar2 = fcn.00402ef0();\n    if (iVar2 == 0) {\ncode_r0x00438f70:\n        iVar2 = *(param_1 + 8);\n        *(iVar2 + 0x1c) = 1;\n        *(iVar2 + 0x18) = 0x16;\n        uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n        uVar3 = uVar3 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00401e3d(*(param_1 + 0x28));\n        if (iVar2 == 1) {\n            uVar3 = 0;\n            *puVar1 = *(param_1 + 0x14);\n        }\n        else if (iVar2 == 2) {\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = *(param_1 + 0x14);\n        }\n        else if (iVar2 == 4) {\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = uVar3;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x00438f70;\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = uVar3;\n            puVar1[1] = uVar3 >> 0x1f;\n        }\n        *(param_1 + 0x2c) = 1;\n        uVar3 = CONCAT31(uVar3 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 469
    },
    "00403044": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403044(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n    puVar1 = *(*(param_1 + 0x10) + -4);\n    iVar2 = fcn.00402ef0();\n    if (iVar2 == 0) {\ncode_r0x00439459:\n        iVar2 = *(param_1 + 8);\n        *(iVar2 + 0x1c) = 1;\n        *(iVar2 + 0x18) = 0x16;\n        uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n        uVar3 = uVar3 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00401e3d(*(param_1 + 0x28));\n        if (iVar2 == 1) {\n            uVar3 = 0;\n            *puVar1 = *(param_1 + 0x14);\n        }\n        else if (iVar2 == 2) {\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = *(param_1 + 0x14);\n        }\n        else if (iVar2 == 4) {\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = uVar3;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x00439459;\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = uVar3;\n            puVar1[1] = uVar3 >> 0x1f;\n        }\n        *(param_1 + 0x2c) = 1;\n        uVar3 = CONCAT31(uVar3 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 466
    },
    "00403a4e": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403a4e(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n    puVar1 = *(*(param_1 + 0x10) + -4);\n    iVar2 = fcn.00402ef0();\n    if (iVar2 == 0) {\ncode_r0x00439237:\n        iVar2 = *(param_1 + 8);\n        *(iVar2 + 0x1c) = 1;\n        *(iVar2 + 0x18) = 0x16;\n        uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n        uVar3 = uVar3 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00401e3d(*(param_1 + 0x28));\n        if (iVar2 == 1) {\n            uVar3 = 0;\n            *puVar1 = *(param_1 + 0x14);\n        }\n        else if (iVar2 == 2) {\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = *(param_1 + 0x14);\n        }\n        else if (iVar2 == 4) {\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = uVar3;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x00439237;\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = uVar3;\n            puVar1[1] = uVar3 >> 0x1f;\n        }\n        *(param_1 + 0x2c) = 1;\n        uVar3 = CONCAT31(uVar3 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 468
    },
    "00404386": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00404386(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    *(param_1 + 0x10) = *(param_1 + 0x10) + 4;\n    puVar1 = *(*(param_1 + 0x10) + -4);\n    iVar2 = fcn.00402ef0();\n    if (iVar2 == 0) {\ncode_r0x004395d6:\n        iVar2 = *(param_1 + 8);\n        *(iVar2 + 0x1c) = 1;\n        *(iVar2 + 0x18) = 0x16;\n        uVar3 = fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n        uVar3 = uVar3 & 0xffffff00;\n    }\n    else {\n        iVar2 = fcn.00401e3d(*(param_1 + 0x28));\n        if (iVar2 == 1) {\n            uVar3 = 0;\n            *puVar1 = *(param_1 + 0x14);\n        }\n        else if (iVar2 == 2) {\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = *(param_1 + 0x14);\n        }\n        else if (iVar2 == 4) {\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = uVar3;\n        }\n        else {\n            if (iVar2 != 8) goto code_r0x004395d6;\n            uVar3 = *(param_1 + 0x14);\n            *puVar1 = uVar3;\n            puVar1[1] = uVar3 >> 0x1f;\n        }\n        *(param_1 + 0x2c) = 1;\n        uVar3 = CONCAT31(uVar3 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 468
    },
    "0040443a": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040443a(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    cVar1 = fcn.00403f58(&var_4h);\n    if (cVar1 == '\\0') {\ncode_r0x00438e9b:\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.0040443f();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.00402ef0();\n            if (iVar3 == 0) {\ncode_r0x00438eb6:\n                iVar3 = *(param_1 + 8);\n                *(iVar3 + 0x1c) = 1;\n                *(iVar3 + 0x18) = 0x16;\n                fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                goto code_r0x00438e9b;\n            }\n            iVar3 = fcn.00401e3d(*(param_1 + 0x28));\n            if (iVar3 == 1) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else if (iVar3 == 2) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else if (iVar3 == 4) {\n                *var_4h = *(param_1 + 0x14);\n            }\n            else {\n                if (iVar3 != 8) goto code_r0x00438eb6;\n                iVar3 = *(param_1 + 0x14);\n                *var_4h = iVar3;\n                var_4h[1] = iVar3 >> 0x1f;\n            }\n            *(param_1 + 0x2c) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 464
    },
    "00404561": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404561(int32_t *arg_8h, uint8_t *arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_10h;\n    uint lpArguments;\n    int32_t *var_8h;\n    uint8_t *var_4h;\n    \n    lpArguments = 0x19930520;\n    if (arg_ch != NULL) {\n        if ((*arg_ch & 0x10) != 0) {\n            iVar1 = *(*arg_8h + -4);\n            pcVar2 = *(iVar1 + 0x20);\n            arg_ch = *(iVar1 + 0x18);\n            (**0x47a000)(*arg_8h + -4);\n            (*pcVar2)();\n            if (arg_ch == NULL) goto code_r0x00417358;\n        }\n        if ((*arg_ch & 8) != 0) {\n            lpArguments = 0x1994000;\n        }\n    }\ncode_r0x00417358:\n    var_8h = arg_8h;\n    var_4h = arg_ch;\n    (*_sym.imp.KERNEL32.dll_RaiseException)(0xe06d7363, 1, 3, &lpArguments);\n    return;\n}\n",
        "token_count": 282
    },
    "004045ca": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t fcn.004045ca(int32_t param_1, uint32_t *param_2, uint32_t param_3)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    if (param_3 != 0) {\n        param_1 = param_1 - param_2;\n        uVar2 = param_2 & 3;\n        while( true ) {\n            if (uVar2 == 0) {\n                while (((param_1 + param_2 & 0xfffU) < 0xffd && (uVar2 = *(param_1 + param_2),  uVar2 == *param_2))) {\n                    bVar3 = param_3 < 4;\n                    param_3 = param_3 - 4;\n                    if (bVar3 || param_3 == 0) {\n                        return 0;\n                    }\n                    param_2 = param_2 + 1;\n                    if ((~uVar2 & uVar2 + 0xfefefeff & 0x80808080) != 0) {\n                        return 0;\n                    }\n                }\n            }\n            uVar1 = *(param_1 + param_2);\n            if (uVar1 != *param_2) {\n                return -(uVar1 < *param_2) | 1;\n            }\n            if (uVar1 == 0) break;\n            param_2 = param_2 + 1;\n            bVar3 = param_3 == 0;\n            param_3 = param_3 - 1;\n            if (bVar3 || param_3 == 0) {\n                return 0;\n            }\n            uVar2 = param_2 & 3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 393
    },
    "00401136": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401136(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    param_1[4] = param_1[4] + 4;\n    arg_8h = param_1[9];\n    arg_8h_00 = *(param_1[4] + -4);\n    param_1[0xc] = arg_8h_00;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar1 = fcn.00401555(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n    if (cVar1 == '\\0') {\n        if (arg_8h_00 == 0) {\n            param_1[0xc] = \"(null)\";\n        }\n        uVar2 = fcn.00401d7a(arg_8h);\n    }\n    else {\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 0x46b94c;\n            param_1[0xc] = 0x46b94c;\n        }\n        *(param_1 + 0xe) = 1;\n        uVar2 = fcn.00402c61(arg_8h_00, arg_8h);\n    }\n    param_1[0xd] = uVar2;\n    return 1;\n}\n",
        "token_count": 350
    },
    "00401276": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00401276(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    cVar1 = fcn.00403562(param_1 + 0xc);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0040383c();\n        if (cVar1 != '\\0') {\n            arg_ch = param_1[9];\n            if (arg_ch == -1) {\n                arg_ch = 0x7fffffff;\n            }\n            arg_8h = param_1[0xc];\n            cVar1 = fcn.00403215(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n            if (cVar1 == '\\0') {\n                if (arg_8h == NULL) {\n                    arg_8h = \"(null)\";\n                    param_1[0xc] = \"(null)\";\n                }\n                uVar2 = fcn.00402d1f(arg_8h, arg_ch);\n            }\n            else {\n                if (arg_8h == NULL) {\n                    arg_8h = 0x46b94c;\n                    param_1[0xc] = 0x46b94c;\n                }\n                *(param_1 + 0xe) = 1;\n                uVar2 = fcn.00402c61(arg_8h, arg_ch);\n            }\n            param_1[0xd] = uVar2;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 367
    },
    "004013b6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004013b6(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_stack_ffffffd4;\n    \n    iVar3 = 0;\n    if ((*0x475090 == -1) || (iVar1 = fcn.00402874(*0x475090),  iVar1 == 0)) {\n        iVar1 = fcn.0040156e(*0x475090, 0xffffffff);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar1 = fcn.0040375b(1, 0x364);\n        if (iVar1 == 0) {\n            fcn.0040156e(*0x475090, 0);\n            iVar1 = in_stack_ffffffd4;\n        }\n        else {\n            iVar2 = fcn.0040156e(*0x475090, iVar1);\n            if (iVar2 != 0) {\n                fcn.004400bd(iVar1, 0x47745c);\n                fcn.004042f5(0);\n                goto code_r0x0044090c;\n            }\n            fcn.0040156e(*0x475090, 0);\n        }\n        fcn.004042f5(iVar1);\n    }\n    else {\n        if (iVar1 == -1) {\n            return 0;\n        }\ncode_r0x0044090c:\n        iVar3 = arg_ch * 0x364 + iVar1;\n    }\n    return iVar3;\n}\n",
        "token_count": 359
    },
    "00401532": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401532(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    param_1[4] = param_1[4] + 4;\n    arg_8h = param_1[9];\n    arg_8h_00 = *(param_1[4] + -4);\n    param_1[0xc] = arg_8h_00;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar1 = fcn.00401555(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n    if (cVar1 == '\\0') {\n        if (arg_8h_00 == 0) {\n            param_1[0xc] = \"(null)\";\n        }\n        uVar2 = fcn.004020d6(arg_8h);\n    }\n    else {\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 0x46b94c;\n            param_1[0xc] = 0x46b94c;\n        }\n        *(param_1 + 0xe) = 1;\n        uVar2 = fcn.00402c61(arg_8h_00, arg_8h);\n    }\n    param_1[0xd] = uVar2;\n    return 1;\n}\n",
        "token_count": 349
    },
    "0040194c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040194c(uint *arg_8h, uint32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    uint arg_8h_00;\n    \n    if (arg_ch < 10) {\n        if ((*in_ECX != -1) && (arg_ch <= *in_ECX)) {\n            puVar1 = in_ECX[arg_ch + 1];\n            *arg_8h = *puVar1;\n            arg_8h[1] = puVar1[1];\n            return arg_8h;\n        }\n        arg_8h_00 = 2;\n    }\n    else {\n        arg_8h_00 = 3;\n    }\n    fcn.004014dd(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 184
    },
    "00401a6e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00401a6e(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    cVar1 = fcn.00403139(param_1 + 0xc);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0040443f();\n        if (cVar1 != '\\0') {\n            arg_ch = param_1[9];\n            if (arg_ch == -1) {\n                arg_ch = 0x7fffffff;\n            }\n            arg_8h = param_1[0xc];\n            cVar1 = fcn.00403215(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n            if (cVar1 == '\\0') {\n                if (arg_8h == NULL) {\n                    arg_8h = \"(null)\";\n                    param_1[0xc] = \"(null)\";\n                }\n                uVar2 = fcn.00402d1f(arg_8h, arg_ch);\n            }\n            else {\n                if (arg_8h == NULL) {\n                    arg_8h = 0x46b94c;\n                    param_1[0xc] = 0x46b94c;\n                }\n                *(param_1 + 0xe) = 1;\n                uVar2 = fcn.00402c61(arg_8h, arg_ch);\n            }\n            param_1[0xd] = uVar2;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 369
    },
    "00401a82": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401a82(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    param_1[4] = param_1[4] + 4;\n    arg_ch = param_1[9];\n    arg_8h = *(param_1[4] + -4);\n    param_1[0xc] = arg_8h;\n    if (arg_ch == -1) {\n        arg_ch = 0x7fffffff;\n    }\n    cVar1 = fcn.00403215(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar1 == '\\0') {\n        if (arg_8h == NULL) {\n            arg_8h = \"(null)\";\n            param_1[0xc] = \"(null)\";\n        }\n        uVar2 = fcn.00402d1f(arg_8h, arg_ch);\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_8h = 0x46b94c;\n            param_1[0xc] = 0x46b94c;\n        }\n        *(param_1 + 0xe) = 1;\n        uVar2 = fcn.00402c61(arg_8h, arg_ch);\n    }\n    param_1[0xd] = uVar2;\n    return 1;\n}\n",
        "token_count": 336
    },
    "00401b31": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401b31(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    param_1[4] = param_1[4] + 4;\n    arg_8h = param_1[9];\n    arg_8h_00 = *(param_1[4] + -4);\n    param_1[0xc] = arg_8h_00;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar1 = fcn.00401555(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n    if (cVar1 == '\\0') {\n        if (arg_8h_00 == 0) {\n            param_1[0xc] = \"(null)\";\n        }\n        uVar2 = fcn.0040359e(arg_8h);\n    }\n    else {\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 0x46b94c;\n            param_1[0xc] = 0x46b94c;\n        }\n        *(param_1 + 0xe) = 1;\n        uVar2 = fcn.00402c61(arg_8h_00, arg_8h);\n    }\n    param_1[0xd] = uVar2;\n    return 1;\n}\n",
        "token_count": 350
    },
    "00401e6a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00401e6a(void)\n\n{\n    if (*0x475050 != -1) {\n        fcn.0040215d(*0x475050);\n        *0x475050 = -1;\n    }\n    return 1;\n}\n",
        "token_count": 57
    },
    "00401fe6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401fe6(char *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint uStack24;\n    int32_t var_4h;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x00450152:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = '\\0';\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    var_4h = arg_14h;\n                    pcVar3 = arg_8h;\n                    iVar4 = arg_ch;\n                    if (arg_14h == -1) {\n                        do {\n                            cVar1 = pcVar3[arg_10h - arg_8h];\n                            *pcVar3 = cVar1;\n                            pcVar3 = pcVar3 + 1;\n                            if (cVar1 == '\\0') {\n                                return 0;\n                            }\n                            iVar4 = iVar4 + -1;\n                        } while (iVar4 != 0);\n                    }\n                    else {\n                        do {\n                            cVar1 = pcVar3[arg_10h - arg_8h];\n                            *pcVar3 = cVar1;\n                            pcVar3 = pcVar3 + 1;\n                            if (cVar1 == '\\0') {\n                                return 0;\n                            }\n                            iVar4 = iVar4 + -1;\n                        } while ((iVar4 != 0) && (var_4h = var_4h + -1,  var_4h != 0));\n                        if (var_4h == 0) {\n                            *pcVar3 = '\\0';\n                        }\n                    }\n                    if (iVar4 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = '\\0';\n                        return 0x50;\n                    }\n                    *arg_8h = '\\0';\n                    puVar2 = fcn.004029b9();\n                    uStack24 = 0x22;\n                    goto code_r0x0045013f;\n                }\n                *arg_8h = '\\0';\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x00450152;\n    puVar2 = fcn.004029b9();\n    uStack24 = 0x16;\ncode_r0x0045013f:\n    *puVar2 = uStack24;\n    fcn.00402842();\n    return uStack24;\n}\n",
        "token_count": 636
    },
    "00402239": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402239(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    param_1[4] = param_1[4] + 4;\n    arg_8h = param_1[9];\n    arg_8h_00 = *(param_1[4] + -4);\n    param_1[0xc] = arg_8h_00;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar1 = fcn.00401555(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n    if (cVar1 == '\\0') {\n        if (arg_8h_00 == 0) {\n            param_1[0xc] = \"(null)\";\n        }\n        uVar2 = fcn.00401d07(arg_8h);\n    }\n    else {\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 0x46b94c;\n            param_1[0xc] = 0x46b94c;\n        }\n        *(param_1 + 0xe) = 1;\n        uVar2 = fcn.00402c61(arg_8h_00, arg_8h);\n    }\n    param_1[0xd] = uVar2;\n    return 1;\n}\n",
        "token_count": 349
    },
    "0040232e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.0040232e(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    cVar1 = fcn.004022f2(param_1 + 0xc);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00402f18();\n        if (cVar1 != '\\0') {\n            arg_8h_00 = param_1[9];\n            if (arg_8h_00 == -1) {\n                arg_8h_00 = 0x7fffffff;\n            }\n            arg_8h = param_1[0xc];\n            cVar1 = fcn.00401555(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n            if (cVar1 == '\\0') {\n                if (arg_8h == 0) {\n                    param_1[0xc] = \"(null)\";\n                }\n                uVar2 = fcn.0040391d(arg_8h_00);\n            }\n            else {\n                if (arg_8h == 0) {\n                    arg_8h = 0x46b94c;\n                    param_1[0xc] = 0x46b94c;\n                }\n                *(param_1 + 0xe) = 1;\n                uVar2 = fcn.00402c61(arg_8h, arg_8h_00);\n            }\n            param_1[0xd] = uVar2;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 381
    },
    "0040274d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00418215)\n\nuint fcn.0040274d(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint32_t lpPerformanceCount;\n    int32_t var_4h;\n    \n    if (((*0x476498 & *0x47649c) != 0xffffffff) &&\n       (iVar1 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&lpPerformanceCount),  iVar1 != 0)) {\n        iVar1 = (var_4h - *0x47649c) - (lpPerformanceCount < *0x476498);\n        if (-1 < iVar1) {\n            iVar2 = fcn.004180cc(lpPerformanceCount - *0x476498, iVar1);\n            if (iVar2 < 0x80000000) {\n                return iVar2;\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 204
    },
    "00402789": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402789(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    param_1[4] = param_1[4] + 4;\n    arg_ch = param_1[9];\n    arg_8h = *(param_1[4] + -4);\n    param_1[0xc] = arg_8h;\n    if (arg_ch == -1) {\n        arg_ch = 0x7fffffff;\n    }\n    cVar1 = fcn.00403215(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar1 == '\\0') {\n        if (arg_8h == NULL) {\n            arg_8h = \"(null)\";\n            param_1[0xc] = \"(null)\";\n        }\n        uVar2 = fcn.00402d1f(arg_8h, arg_ch);\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_8h = 0x46b94c;\n            param_1[0xc] = 0x46b94c;\n        }\n        *(param_1 + 0xe) = 1;\n        uVar2 = fcn.00402c61(arg_8h, arg_ch);\n    }\n    param_1[0xd] = uVar2;\n    return 1;\n}\n",
        "token_count": 335
    },
    "00402a9f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402a9f(uint *arg_8h, uint arg_ch, int32_t arg_10h, uint noname_3, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t var_4h;\n    \n    uVar1 = *(arg_18h + 0xc);\n    uVar4 = uVar1;\n    uVar5 = uVar1;\n    if (-1 < arg_1ch) {\n        piVar3 = uVar1 * 0x14 + *(arg_18h + 0x10) + 8;\n        var_4h = uVar1;\n        do {\n            if (uVar4 == 0xffffffff) goto code_r0x004151bd;\n            uVar4 = uVar4 - 1;\n            if (((piVar3[-6] < arg_10h) && (arg_10h <= piVar3[-5])) || (uVar4 == 0xffffffff)) {\n                arg_1ch = arg_1ch + -1;\n                uVar5 = var_4h;\n                var_4h = uVar4;\n            }\n            piVar3 = piVar3 + -5;\n        } while (-1 < arg_1ch);\n    }\n    if ((uVar5 <= uVar1) && (uVar4 + 1 <= uVar5)) {\n        arg_8h[3] = uVar5;\n        *arg_8h = arg_ch;\n        arg_8h[1] = uVar4 + 1;\n        arg_8h[2] = arg_ch;\n        return;\n    }\ncode_r0x004151bd:\n    fcn.00403693();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 439
    },
    "00402b12": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00402b12(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    cVar1 = fcn.0040466f(param_1 + 0xc);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00403d23();\n        if (cVar1 != '\\0') {\n            arg_8h_00 = param_1[9];\n            if (arg_8h_00 == -1) {\n                arg_8h_00 = 0x7fffffff;\n            }\n            arg_8h = param_1[0xc];\n            cVar1 = fcn.00401555(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n            if (cVar1 == '\\0') {\n                if (arg_8h == 0) {\n                    param_1[0xc] = \"(null)\";\n                }\n                uVar2 = fcn.0040152d(arg_8h_00);\n            }\n            else {\n                if (arg_8h == 0) {\n                    arg_8h = 0x46b94c;\n                    param_1[0xc] = 0x46b94c;\n                }\n                *(param_1 + 0xe) = 1;\n                uVar2 = fcn.00402c61(arg_8h, arg_8h_00);\n            }\n            param_1[0xd] = uVar2;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 381
    },
    "00402b4e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00402b4e(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    int32_t arg_8h;\n    \n    if (*0x475050 == -1) {\n        return 0;\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    iVar2 = fcn.00402e37(*0x475050);\n    if (iVar2 == -1) {\ncode_r0x0040bbec:\n        iVar2 = 0;\n        goto code_r0x0040bc32;\n    }\n    if (iVar2 != 0) goto code_r0x0040bc32;\n    iVar2 = fcn.00401429(*0x475050, 0xffffffff);\n    if (iVar2 == 0) goto code_r0x0040bbec;\n    arg_ch = fcn.004025db(1, 0x28);\n    if (arg_ch == 0) {\ncode_r0x0040bc14:\n        fcn.00401429(*0x475050, 0);\n        iVar2 = 0;\n        arg_8h = arg_ch;\n    }\n    else {\n        iVar2 = fcn.00401429(*0x475050, arg_ch);\n        if (iVar2 == 0) goto code_r0x0040bc14;\n        arg_8h = 0;\n        iVar2 = arg_ch;\n    }\n    fcn.00402e19(arg_8h);\ncode_r0x0040bc32:\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n    return iVar2;\n}\n",
        "token_count": 368
    },
    "00402cd4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00402cd4(void)\n\n{\n    if (*0x475090 != -1) {\n        fcn.00401460(*0x475090);\n        *0x475090 = -1;\n    }\n    return 1;\n}\n",
        "token_count": 55
    },
    "00402d1a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402d1a(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    param_1[4] = param_1[4] + 4;\n    arg_ch = param_1[9];\n    arg_8h = *(param_1[4] + -4);\n    param_1[0xc] = arg_8h;\n    if (arg_ch == -1) {\n        arg_ch = 0x7fffffff;\n    }\n    cVar1 = fcn.00403215(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar1 == '\\0') {\n        if (arg_8h == NULL) {\n            arg_8h = \"(null)\";\n            param_1[0xc] = \"(null)\";\n        }\n        uVar2 = fcn.00402d1f(arg_8h, arg_ch);\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_8h = 0x46b94c;\n            param_1[0xc] = 0x46b94c;\n        }\n        *(param_1 + 0xe) = 1;\n        uVar2 = fcn.00402c61(arg_8h, arg_ch);\n    }\n    param_1[0xd] = uVar2;\n    return 1;\n}\n",
        "token_count": 337
    },
    "00402e7d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402e7d(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x476358 == -1) {\n        iVar1 = fcn.00401f87(arg_8h);\n    }\n    else {\n        iVar1 = fcn.00401127(0x476358, arg_8h);\n    }\n    return ~-(iVar1 != 0) & arg_8h;\n}\n",
        "token_count": 104
    },
    "00402f95": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00402f95(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint arg_8h;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if ((*0x475090 == -1) || (uVar3 = fcn.00402874(*0x475090),  uVar3 == 0)) {\n        iVar4 = fcn.0040156e(*0x475090, 0xffffffff);\n        if (iVar4 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.0040375b(1, 0x364);\n            if (uVar3 == 0) {\n                fcn.0040156e(*0x475090, 0);\n                arg_8h = 0;\n            }\n            else {\n                iVar4 = fcn.0040156e(*0x475090, uVar3);\n                if (iVar4 != 0) {\n                    fcn.004400bd(uVar3, 0x47745c);\n                    fcn.004042f5(0);\n                    goto code_r0x0044069c;\n                }\n                arg_8h = 0;\n                fcn.0040156e(*0x475090, 0);\n            }\n            uVar3 = 0;\n            fcn.004042f5(arg_8h);\n        }\n    }\n    else {\n        uVar3 = -(uVar3 != 0xffffffff) & uVar3;\n    }\ncode_r0x0044069c:\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n    if (uVar3 == 0) {\n        fcn.00403693();\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    return uVar3;\n}\n",
        "token_count": 439
    },
    "00403107": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00403107(void)\n\n{\n    int32_t iVar1;\n    \n    *0x475050 = fcn.00404075(fcn.0040367a);\n    if (*0x475050 != -1) {\n        iVar1 = fcn.00401429(*0x475050, 0x4763b8);\n        if (iVar1 != 0) {\n            return 1;\n        }\n        fcn.00401e6a();\n    }\n    return 0;\n}\n",
        "token_count": 111
    },
    "004034d1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.004034d1(void)\n\n{\n    if (*0x475a80 == -2) {\n        fcn.0045c7ca();\n    }\n    return *0x475a80 != -1;\n}\n",
        "token_count": 50
    },
    "00403544": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403544(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    char *arg_8h;\n    \n    param_1[4] = param_1[4] + 4;\n    arg_ch = param_1[9];\n    arg_8h = *(param_1[4] + -4);\n    param_1[0xc] = arg_8h;\n    if (arg_ch == -1) {\n        arg_ch = 0x7fffffff;\n    }\n    cVar1 = fcn.00403215(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar1 == '\\0') {\n        if (arg_8h == NULL) {\n            arg_8h = \"(null)\";\n            param_1[0xc] = \"(null)\";\n        }\n        uVar2 = fcn.00402d1f(arg_8h, arg_ch);\n    }\n    else {\n        if (arg_8h == NULL) {\n            arg_8h = 0x46b94c;\n            param_1[0xc] = 0x46b94c;\n        }\n        *(param_1 + 0xe) = 1;\n        uVar2 = fcn.00402c61(arg_8h, arg_ch);\n    }\n    param_1[0xd] = uVar2;\n    return 1;\n}\n",
        "token_count": 335
    },
    "00403b07": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00403b07(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if ((*0x475090 == -1) || (iVar2 = fcn.00402874(*0x475090),  iVar2 == 0)) {\n        iVar2 = fcn.0040156e(*0x475090, 0xffffffff);\n        if (iVar2 != 0) {\n            iVar2 = fcn.0040375b(1, 0x364);\n            if (iVar2 == 0) {\n                fcn.0040156e(*0x475090, 0);\n            }\n            else {\n                iVar3 = fcn.0040156e(*0x475090, iVar2);\n                if (iVar3 != 0) {\n                    fcn.004400bd(iVar2, 0x47745c);\n                    fcn.004042f5(0);\n                    return iVar2;\n                }\n                fcn.0040156e(*0x475090, 0);\n            }\n            fcn.004042f5(iVar2);\n        }\n    }\n    else if (iVar2 != -1) {\n        return iVar2;\n    }\n    fcn.00403693();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 306
    },
    "00403d78": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_22ch\n// WARNING: Variable defined which should be unmapped: var_20ch\n// WARNING: Variable defined which should be unmapped: var_230h\n// WARNING: Variable defined which should be unmapped: var_234h\n\nvoid __cdecl fcn.00403d78(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint extraout_EDX;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint *puStackY840;\n    uint uStackY836;\n    uint uStackY832;\n    uint *puStackY828;\n    uint *puStackY824;\n    uint arg_8h_00;\n    uint *ExceptionInfo;\n    uint *var_324h;\n    uint var_320h;\n    uint var_31ch;\n    uint var_314h;\n    uint var_2d0h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint *var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint32_t var_210h;\n    uchar *var_20ch;\n    uint var_208h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    if (arg_8h != -1) {\n        puStackY824 = 0x440a96;\n        fcn.00403742();\n    }\n    puStackY828 = &fcn.00403d78::var_320h;\n    puStackY824 = NULL;\n    uStackY832 = 0x440aa7;\n    fcn.0040248c();\n    uStackY832 = 0x2cc;\n    puStackY840 = &fcn.00403d78::var_2d0h;\n    uStackY836 = 0;\n    fcn.0040248c();\n    ExceptionInfo = &fcn.00403d78::var_320h;\n    var_324h = &fcn.00403d78::var_2d0h;\n    var_210h = (in_NT & 1) * 0x4000 | SCARRY4(&stack0xfffffcb8, 0x18) * 0x800 | (in_IF & 1) * 0x200 |\n               (in_TF & 1) * 0x100 | (&stack0xfffffcd0 < 0) * 0x80 | (*0x10 == 0x330) * 0x40 | (in_AF & 1) * 0x10 |\n               ((POPCOUNT(&stack0xfffffcd0 & 0xff) & 1U) == 0) * 4 | 0xffffffe7 < &stack0xfffffcb8 |\n               (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    var_2d0h = 0x10001;\n    var_320h = arg_ch;\n    var_31ch = arg_10h;\n    var_228h = extraout_EDX;\n    var_220h = var_324h;\n    var_20ch = *0x10;\n    iVar1 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    arg_8h_00 = 0;\n    puStackY824 = 0x440b7a;\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)();\n    puStackY824 = &fcn.00403d78::ExceptionInfo;\n    puStackY828 = 0x440b87;\n    iVar2 = (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)();\n    if (((iVar2 == 0) && (iVar1 == 0)) && (arg_8h != -1)) {\n        puStackY828 = arg_8h;\n        uStackY832 = 0x440b9d;\n        fcn.00403742();\n    }\n    puStackY824 = 0x440ba9;\n    fcn.0040241e(arg_8h_00);\n    return;\n}\n",
        "token_count": 1066
    },
    "00403df5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403df5(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint uStack24;\n    int32_t var_4h;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x00441014:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = 0;\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    var_4h = arg_14h;\n                    piVar3 = arg_8h;\n                    iVar4 = arg_ch;\n                    if (arg_14h == -1) {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar3);\n                            *piVar3 = iVar1;\n                            piVar3 = piVar3 + 1;\n                            if (iVar1 == 0) {\n                                return 0;\n                            }\n                            iVar4 = iVar4 + -1;\n                        } while (iVar4 != 0);\n                    }\n                    else {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar3);\n                            *piVar3 = iVar1;\n                            piVar3 = piVar3 + 1;\n                            if (iVar1 == 0) {\n                                return 0;\n                            }\n                            iVar4 = iVar4 + -1;\n                        } while ((iVar4 != 0) && (var_4h = var_4h + -1,  var_4h != 0));\n                        if (var_4h == 0) {\n                            *piVar3 = 0;\n                        }\n                    }\n                    if (iVar4 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = 0;\n                        return 0x50;\n                    }\n                    *arg_8h = 0;\n                    puVar2 = fcn.004029b9();\n                    uStack24 = 0x22;\n                    goto code_r0x00441001;\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x00441014;\n    puVar2 = fcn.004029b9();\n    uStack24 = 0x16;\ncode_r0x00441001:\n    *puVar2 = uStack24;\n    fcn.00402842();\n    return uStack24;\n}\n",
        "token_count": 639
    },
    "0040416a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040416a(void)\n\n{\n    if ((*0x475a80 != -1) && (*0x475a80 != -2)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x475a80);\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0040461a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040461a(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if ((*0x475090 == -1) || (uVar2 = fcn.00402874(*0x475090),  uVar2 == 0)) {\n        iVar3 = fcn.0040156e(*0x475090, 0xffffffff);\n        if (iVar3 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.0040375b(1, 0x364);\n            if (uVar2 == 0) {\n                fcn.0040156e(*0x475090, 0);\n                arg_8h = 0;\n            }\n            else {\n                iVar3 = fcn.0040156e(*0x475090, uVar2);\n                if (iVar3 != 0) {\n                    fcn.004400bd(uVar2, 0x47745c);\n                    fcn.004042f5(0);\n                    goto code_r0x00440840;\n                }\n                arg_8h = 0;\n                fcn.0040156e(*0x475090, 0);\n            }\n            uVar2 = 0;\n            fcn.004042f5(arg_8h);\n        }\n    }\n    else {\n        uVar2 = -(uVar2 != 0xffffffff) & uVar2;\n    }\ncode_r0x00440840:\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n    return uVar2;\n}\n",
        "token_count": 383
    },
    "00402d4c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d4c(int32_t arg_8h)\n\n{\n    if (*0x475050 != -1) {\n        if (arg_8h == 0) {\n            arg_8h = fcn.00402e37(*0x475050);\n        }\n        fcn.00401429(*0x475050, 0);\n        fcn.0040367a(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "00414cb1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00414cb1(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    do {\n        if (arg_8h == arg_ch) {\n            return 0;\n        }\n        piVar1 = *arg_8h * 4 + 0x476454;\n        iVar3 = *piVar1;\n        if (iVar3 == 0) {\n            iVar3 = fcn.00414ecd(*(*arg_8h * 4 + 0x46b0d0));\n            if (iVar3 != 0) {\n                iVar2 = *piVar1;\n                *piVar1 = iVar3;\n                if (iVar2 == 0) {\n                    return iVar3;\n                }\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n                return iVar3;\n            }\n            *piVar1 = -1;\n        }\n        else if (iVar3 != -1) {\n            return iVar3;\n        }\n        arg_8h = arg_8h + 1;\n    } while( true );\n}\n",
        "token_count": 261
    },
    "00414e50": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414e50(uint arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    do {\n        if (arg_ch == arg_10h) {\n            return 0;\n        }\n        piVar1 = *arg_ch * 4 + 0x476454;\n        iVar3 = *piVar1;\n        if (iVar3 == 0) {\n            iVar3 = fcn.00414ecd(*(*arg_ch * 4 + 0x46b0d0));\n            if (iVar3 != 0) {\n                iVar2 = *piVar1;\n                *piVar1 = iVar3;\n                if (iVar2 != 0) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n                }\n                goto code_r0x00414ea8;\n            }\n            *piVar1 = -1;\n        }\n        else if (iVar3 != -1) {\ncode_r0x00414ea8:\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, arg_8h);\n            return uVar4;\n        }\n        arg_ch = arg_ch + 1;\n    } while( true );\n}\n",
        "token_count": 298
    },
    "0041de4b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0041de4b(uint arg_8h, uint arg_ch, uchar *arg_10h, uint32_t arg_14h, uint32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, uint arg_24h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_1ch == 0) {\n        *(arg_20h + 0x1c) = 1;\n        *(arg_20h + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_20h);\n        return -1;\n    }\n    if (arg_18h == 0) {\n        if (arg_10h == NULL) {\n            if (arg_14h == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x0041dea6:\n            if (arg_14h != 0) {\n                uVar1 = *(arg_20h + 0x18);\n                uVar2 = *(arg_20h + 0x1c);\n                if (arg_18h < arg_14h) {\n                    iVar3 = fcn.0041e0e2(arg_8h, arg_ch, arg_10h, arg_18h + 1, arg_1ch, arg_20h, arg_24h);\n                    if (iVar3 == -2) {\ncode_r0x0041df10:\n                        if (*(arg_20h + 0x1c) == '\\0') {\n                            return -1;\n                        }\n                        if (*(arg_20h + 0x18) != 0x22) {\n                            return -1;\n                        }\n                        *(arg_20h + 0x18) = uVar1;\n                        *(arg_20h + 0x1c) = uVar2;\n                        return -1;\n                    }\ncode_r0x0041deda:\n                    if (-1 < iVar3) {\n                        return iVar3;\n                    }\n                }\n                else {\n                    iVar3 = fcn.0041e0e2(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, arg_24h);\n                    arg_10h[arg_14h - 1] = 0;\n                    if (iVar3 != -2) goto code_r0x0041deda;\n                    if (arg_18h == 0xffffffff) goto code_r0x0041df10;\n                }\n                *arg_10h = 0;\n                if (iVar3 != -2) {\n                    return -1;\n                }\n                *(arg_20h + 0x18) = 0x22;\n                goto code_r0x0041df32;\n            }\n        }\n    }\n    else if (arg_10h != NULL) goto code_r0x0041dea6;\n    *(arg_20h + 0x18) = 0x16;\ncode_r0x0041df32:\n    *(arg_20h + 0x1c) = 1;\n    fcn.00402c20(0, 0, 0, 0, 0, arg_20h);\n    return -1;\n}\n",
        "token_count": 763
    },
    "0042a296": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a296(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < arg_10h) {\n        do {\n            fcn.004037c9(arg_ch, arg_14h, arg_18h);\n            if (*arg_14h == -1) {\n                return;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0042a2d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a2d0(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h, uint arg_18h)\n\n{\n    uint32_t unaff_EBX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < arg_10h) {\n        do {\n            fcn.00401af0(unaff_EBX & 0xffff0000 | arg_ch, arg_14h, arg_18h);\n            if (*arg_14h == -1) {\n                return;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "00440387": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00440387(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_stack_ffffffd8;\n    \n    if ((*0x475090 == -1) || (iVar1 = fcn.00402874(*0x475090),  iVar1 == 0)) {\n        iVar1 = fcn.0040156e(*0x475090, 0xffffffff);\n        if (iVar1 != 0) {\n            iVar1 = fcn.0040375b(1, 0x364);\n            if (iVar1 == 0) {\n                fcn.0040156e(*0x475090, 0);\n                iVar1 = in_stack_ffffffd8;\n            }\n            else {\n                iVar2 = fcn.0040156e(*0x475090, iVar1);\n                if (iVar2 != 0) {\n                    fcn.004400bd(iVar1, 0x47745c);\n                    fcn.004042f5(0);\n                    goto code_r0x0044041b;\n                }\n                fcn.0040156e(*0x475090, 0);\n            }\n            fcn.004042f5(iVar1);\n        }\n    }\n    else if (iVar1 != -1) {\ncode_r0x0044041b:\n        return arg_ch * 0x364 + iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 328
    },
    "00441d83": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_298h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00441d83(char *arg_8h, char *arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *arg_8h_00;\n    int32_t var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint32_t lpFileName;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint32_t var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    int32_t *var_25ch;\n    uint var_255h;\n    uint var_228h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    var_25ch = arg_10h;\n    if (arg_ch != arg_8h) {\n        do {\n            cVar1 = *arg_ch;\n            if (((cVar1 == '/') || (cVar1 == '\\\\')) || (cVar1 == ':')) break;\n            arg_ch = fcn.00401cd5(arg_8h, arg_ch);\n        } while (arg_ch != arg_8h);\n    }\n    var_255h._0_1_ = *arg_ch;\n    if ((var_255h == ':') && (arg_ch != arg_8h + 1)) {\n        fcn.00441bc5(arg_8h, 0, 0, var_25ch);\n    }\n    else {\n        if (((var_255h == '/') || (var_255h == '\\\\')) || (uVar2 = 0,  var_255h == ':')) {\n            uVar2 = 1;\n        }\n        var_28ch = 0;\n        var_288h = 0;\n        lpFileName = 0;\n        var_280h = 0;\n        var_27ch = 0;\n        var_278h._0_1_ = '\\0';\n        uVar3 = fcn.00402a95();\n        iVar4 = fcn.00403666(arg_8h, &var_28ch, uVar3);\n        iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileExW)(~-(iVar4 != 0) & lpFileName, 0, &var_255h + 1, 0, 0, 0);\n        if (iVar4 == -1) {\n            fcn.00441bc5(arg_8h, 0, 0, var_25ch);\n            if (var_278h != '\\0') {\n                fcn.004042f5(lpFileName);\n            }\n        }\n        else {\n            iVar5 = var_25ch[1] - *var_25ch >> 2;\n            do {\n                var_274h = 0;\n                var_270h = 0;\n                var_26ch = 0;\n                var_268h = 0;\n                var_264h = 0;\n                var_260h._0_1_ = '\\0';\n                uVar3 = fcn.00402a95();\n                iVar6 = fcn.00401636(&var_228h, &var_274h, &var_255h, uVar3);\n                arg_8h_00 = ~-(iVar6 != 0) & var_26ch;\n                if (((*arg_8h_00 != '.') ||\n                    ((arg_8h_00[1] != '\\0' && ((arg_8h_00[1] != '.' || (arg_8h_00[2] != '\\0')))))) &&\n                   (var_298h = fcn.00441bc5(arg_8h_00, arg_8h, -uVar2 & arg_ch + (1 - arg_8h), var_25ch),  var_298h != 0\n                   )) {\n                    if (var_260h != '\\0') {\n                        fcn.004042f5(var_26ch);\n                    }\n                    (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n                    if (var_278h != '\\0') {\n                        fcn.004042f5(lpFileName);\n                    }\n                    goto code_r0x00441ffa;\n                }\n                if (var_260h != '\\0') {\n                    fcn.004042f5(var_26ch);\n                }\n                iVar6 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &var_255h + 1);\n            } while (iVar6 != 0);\n            iVar6 = var_25ch[1] - *var_25ch >> 2;\n            if (iVar5 != iVar6) {\n                fcn.00403b20(*var_25ch + iVar5 * 4, iVar6 - iVar5, 4, fcn.0044156a);\n            }\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n            if (var_278h != '\\0') {\n                fcn.004042f5(lpFileName);\n            }\n        }\n    }\ncode_r0x00441ffa:\n    fcn.0040241e(var_298h);\n    return;\n}\n",
        "token_count": 1241
    },
    "0044a53d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044a53d(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint var_4h;\n    \n    do {\n        if (arg_8h == arg_ch) {\n            return 0;\n        }\n        iVar2 = *arg_8h;\n        iVar3 = *(iVar2 * 4 + 0x477460);\n        if (iVar3 == 0) {\n            arg_8h_00 = *(iVar2 * 4 + 0x46db58);\n            iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(arg_8h_00, 0, 0x800);\n            if ((iVar3 != 0) ||\n               ((((iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar3 == 0x57 &&\n                  (iVar3 = fcn.00403aee(arg_8h_00, L\"api-ms-\", 7),  iVar3 != 0)) &&\n                 (iVar3 = fcn.00403aee(arg_8h_00, L\"ext-ms-\", 7),  iVar3 != 0)) &&\n                (iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(arg_8h_00, 0, 0),  iVar3 != 0)))) {\n                piVar1 = iVar2 * 4 + 0x477460;\n                iVar2 = *piVar1;\n                *piVar1 = iVar3;\n                if (iVar2 == 0) {\n                    return iVar3;\n                }\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n                return iVar3;\n            }\n            *(iVar2 * 4 + 0x477460) = 0xffffffff;\n        }\n        else if (iVar3 != -1) {\n            return iVar3;\n        }\n        arg_8h = arg_8h + 1;\n    } while( true );\n}\n",
        "token_count": 463
    },
    "004588d4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004588d4(uint arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint32_t arg_10h_00;\n    uint32_t uVar5;\n    ulong uVar6;\n    \n    uVar1 = fcn.0040406b(arg_ch);\n    if ((arg_ch[3] & 0xc0U) == 0) {\n        iVar4 = fcn.00402ca2(uVar1, &arg_8h, 1, arg_10h);\n        uVar1 = -(iVar4 + -1) & 0xffffff00U | 1 - (iVar4 + -1 != 0);\n    }\n    else {\n        uVar5 = 0;\n        arg_10h_00 = *arg_ch - arg_ch[1];\n        *arg_ch = arg_ch[1] + 1;\n        arg_ch[2] = arg_ch[6] + -1;\n        if (arg_10h_00 < 1) {\n            if ((uVar1 == 0xffffffff) || (uVar1 == 0xfffffffe)) {\n                uVar2 = 0x4756c0;\n            }\n            else {\n                uVar2 = (uVar1 & 0x3f) * 0x38 + *((uVar1 >> 6) * 4 + 0x4771f0);\n            }\n            if ((*(uVar2 + 0x28) & 0x20) != 0) {\n                uVar6 = fcn.004030ee(uVar1, 0, 0, 2);\n                uVar2 = uVar6 & uVar6 >> 0x20;\n                if (uVar2 == 0xffffffff) {\n                    puVar3 = arg_ch + 3;\n                    LOCK();\n                    *puVar3 = *puVar3 | 0x10;\n                    return CONCAT31(puVar3 >> 8, 1);\n                }\n            }\n        }\n        else {\n            uVar2 = fcn.00402ca2(uVar1, arg_ch[1], arg_10h_00, arg_10h);\n            uVar5 = uVar2;\n        }\n        *arg_ch[1] = arg_8h;\n        uVar1 = uVar2 & 0xffffff00 | uVar5 == arg_10h_00;\n    }\n    return uVar1;\n}\n",
        "token_count": 569
    },
    "004599eb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004599eb(uint32_t arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.004030b2(arg_8h);\n    if (iVar2 == -1) {\n        *(arg_14h + 0x1c) = 1;\n        *(arg_14h + 0x18) = 9;\n    }\n    else {\n        iVar2 = fcn.00459b02(iVar2, arg_ch, arg_10h, arg_14h);\n        if (iVar2 != -1) {\n            puVar1 = *((arg_8h >> 6) * 4 + 0x4771f0) + 0x28 + (arg_8h & 0x3f) * 0x38;\n            *puVar1 = *puVar1 & 0xfd;\n            return iVar2;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 238
    },
    "0045b2e2": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045b2e2(uint32_t arg_8h)\n\n{\n    return (((arg_8h & 0x400 | (arg_8h >> 2 & 0x400 | arg_8h & 0x800) >> 2) >> 2 | arg_8h & 0x200) >> 3 | arg_8h & 0x180\n           ) >> 3;\n}\n",
        "token_count": 100
    },
    "0045ba96": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045ba96(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = 0;\n    uVar1 = arg_8h & 0x8040;\n    if (uVar1 == 0x8000) {\n        uVar3 = 0xc00;\n    }\n    else if (uVar1 == 0x40) {\n        uVar3 = 0x800;\n    }\n    else {\n        uVar3 = 0x400;\n        if (uVar1 != 0x8040) {\n            uVar3 = 0;\n        }\n    }\n    uVar2 = arg_8h & 0x6000;\n    if (uVar2 != 0) {\n        if (uVar2 == 0x2000) {\n            uVar4 = 0x100;\n        }\n        else if (uVar2 == 0x4000) {\n            uVar4 = 0x200;\n        }\n        else if (uVar2 == 0x6000) {\n            uVar4 = 0x300;\n        }\n    }\n    return (((arg_8h & 0x400 | (arg_8h >> 2 & 0x400 | arg_8h & 0x800) >> 2) >> 2 | arg_8h & 0x200) >> 3 | arg_8h & 0x180\n           ) >> 3 | uVar3 | uVar4;\n}\n",
        "token_count": 363
    },
    "0045bd2d": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045bd2d(uint32_t arg_8h)\n\n{\n    return (((arg_8h & 0x4000000 | (arg_8h >> 3 & 0x6000000 | arg_8h & 0x8000000) >> 2) >> 2 | arg_8h & 0x2000000) >> 2\n           | arg_8h & 0x1000000) >> 0x13;\n}\n",
        "token_count": 111
    },
    "0045be68": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045be68(uint32_t arg_8h)\n\n{\n    return (((arg_8h & 0x40000 | (arg_8h >> 3 & 0x60000 | arg_8h & 0x80000) >> 2) >> 2 | arg_8h & 0x20000) >> 2 |\n           arg_8h & 0x10000) >> 0xb;\n}\n",
        "token_count": 103
    },
    "004011f4": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004011f4(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x38 + *((lpCriticalSection >> 6) * 4 + 0x4771f0));\n    return;\n}\n",
        "token_count": 71
    },
    "00401348": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401348(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x38 + *((lpCriticalSection >> 6) * 4 + 0x4771f0));\n    return;\n}\n",
        "token_count": 69
    },
    "00403cba": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403cba(uint8_t *arg_8h, uint32_t arg_ch, uint32_t *arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    if (arg_8h == NULL) {\n        arg_ch = 0;\n    }\n    else {\n        if (arg_ch != 0) {\n            if ((arg_ch & 0xffffff80) == 0) {\n                *arg_8h = arg_ch;\n                return 1;\n            }\n            if ((arg_ch & 0xfffff800) == 0) {\n                uVar3 = 0xc0;\n                iVar4 = 1;\n                iVar5 = iVar4;\n            }\n            else if ((arg_ch & 0xffff0000) == 0) {\n                if ((0xd7ff < arg_ch) && (arg_ch < 0xe000)) {\ncode_r0x00457cd2:\n                    uVar2 = fcn.0040417e(arg_10h, arg_14h);\n                    return uVar2;\n                }\n                iVar4 = 2;\n                uVar3 = 0xe0;\n                iVar5 = iVar4;\n            }\n            else {\n                if (((arg_ch & 0xffe00000) != 0) || (0x10ffff < arg_ch)) goto code_r0x00457cd2;\n                iVar4 = 3;\n                uVar3 = 0xf0;\n                iVar5 = iVar4;\n            }\n            do {\n                uVar1 = arg_ch;\n                arg_ch = arg_ch >> 6;\n                arg_8h[iVar4] = uVar1 & 0x3f | 0x80;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            *arg_8h = arg_ch | uVar3;\n            uVar2 = fcn.00404593(iVar5 + 1, arg_10h);\n            return uVar2;\n        }\n        *arg_8h = arg_ch;\n    }\n    *arg_10h = arg_ch;\n    arg_10h[1] = arg_ch;\n    return 1;\n}\n",
        "token_count": 508
    },
    "004040ac": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004040ac(uint32_t arg_8h)\n\n{\n    return ((arg_8h & 0x3f) << 8 | arg_8h & 0x3f) << 0x10 | arg_8h;\n}\n",
        "token_count": 62
    },
    "00404507": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint8_t __cdecl fcn.00404507(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar1 = fcn.004029b9();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < arg_8h) && (arg_8h < *0x477458)) {\n            return *(*((arg_8h >> 6) * 4 + 0x4771f0) + 0x28 + (arg_8h & 0x3f) * 0x38) & 0x40;\n        }\n        puVar1 = fcn.004029b9();\n        *puVar1 = 9;\n        fcn.00402842();\n    }\n    return 0;\n}\n",
        "token_count": 189
    },
    "0044549f": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.0044549f(void)\n\n{\n    uint8_t *puVar1;\n    char in_AL;\n    uint32_t unaff_ESI;\n    \n    if (in_AL == '\\0') {\n        puVar1 = *((unaff_ESI >> 6) * 4 + 0x4771f0) + 0x28 + (unaff_ESI & 0x3f) * 0x38;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.004011f4(unaff_ESI);\n    return;\n}\n",
        "token_count": 130
    },
    "00459a5f": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00459a5f(uint32_t arg_8h, uint liDistanceToMove, uint lpNewFilePointer, uint arg_14h, int32_t arg_18h)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint32_t dwMoveMethod;\n    uint32_t var_4h;\n    \n    iVar2 = fcn.004030b2(arg_8h);\n    if (iVar2 == -1) {\n        *(arg_18h + 0x1c) = 1;\n        *(arg_18h + 0x18) = 9;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)\n                          (iVar2, liDistanceToMove, lpNewFilePointer, &dwMoveMethod, arg_14h);\n        if (iVar2 == 0) {\n            arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.00402004(arg_8h_00, arg_18h);\n        }\n        else if ((dwMoveMethod & var_4h) != 0xffffffff) {\n            puVar1 = *((arg_8h >> 6) * 4 + 0x4771f0) + 0x28 + (arg_8h & 0x3f) * 0x38;\n            *puVar1 = *puVar1 & 0xfd;\n            goto code_r0x00459ade;\n        }\n    }\n    dwMoveMethod = 0xffffffff;\n    var_4h = 0xffffffff;\ncode_r0x00459ade:\n    return CONCAT44(var_4h, dwMoveMethod);\n}\n",
        "token_count": 385
    },
    "0040150a": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0040150a(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    \n    uVar3 = param_1;\n    uVar8 = param_4;\n    uVar6 = param_2;\n    uVar9 = param_3;\n    if (param_4 == 0) {\n        uVar3 = param_2 / param_3;\n        iVar4 = (param_2 % param_3 << 0x20 | param_1) / param_3;\n    }\n    else {\n        do {\n            uVar5 = uVar8 >> 1;\n            uVar9 = uVar9 >> 1 | ((uVar8 & 1) != 0) << 0x1f;\n            uVar7 = uVar6 >> 1;\n            uVar3 = uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f;\n            uVar8 = uVar5;\n            uVar6 = uVar7;\n        } while (uVar5 != 0);\n        uVar1 = CONCAT44(uVar7, uVar3) / uVar9;\n        iVar4 = uVar1;\n        iVar2 = param_3 * (uVar1 & 0xffffffff);\n        uVar3 = iVar2 >> 0x20;\n        uVar8 = uVar3 + iVar4 * param_4;\n        if (((CARRY4(uVar3, iVar4 * param_4)) || (param_2 < uVar8)) || ((param_2 <= uVar8 && (param_1 < iVar2)))) {\n            iVar4 = iVar4 + -1;\n        }\n        uVar3 = 0;\n    }\n    return CONCAT44(uVar3, iVar4);\n}\n",
        "token_count": 473
    },
    "00401843": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401843(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[4] = param_1[4] + 4;\n    puVar2 = *(param_1[4] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xc] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00403215(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n        param_1[0xc] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004365dc;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x004365dc:\n    param_1[0xd] = uVar5;\n    return 1;\n}\n",
        "token_count": 307
    },
    "00401f4b": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401f4b(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[4] = param_1[4] + 4;\n    puVar2 = *(param_1[4] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xc] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00401555(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n        param_1[0xc] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x00436a2f;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x00436a2f:\n    param_1[0xd] = uVar5;\n    return 1;\n}\n",
        "token_count": 313
    },
    "00402243": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402243(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[4] = param_1[4] + 4;\n    puVar2 = *(param_1[4] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xc] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00401555(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n        param_1[0xc] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004367bd;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x004367bd:\n    param_1[0xd] = uVar5;\n    return 1;\n}\n",
        "token_count": 307
    },
    "00402d15": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00402d15(uint *param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint16_t *var_4h;\n    \n    var_4h = NULL;\n    cVar4 = fcn.00404156(&var_4h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.00402f18();\n    puVar3 = var_4h;\n    if (cVar4 == '\\0') {\n        return 1;\n    }\n    if ((var_4h == NULL) || (iVar2 = *(var_4h + 2),  iVar2 == 0)) {\n        param_1[0xc] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00401555(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n        param_1[0xc] = iVar2;\n        uVar1 = *puVar3;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x00436846;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x00436846:\n    param_1[0xd] = uVar5;\n    return 1;\n}\n",
        "token_count": 370
    },
    "0040310c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0040310c(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    bool bVar11;\n    \n    uVar3 = param_1;\n    uVar4 = param_4;\n    uVar9 = param_2;\n    uVar10 = param_3;\n    if (param_4 == 0) {\n        iVar6 = (param_2 % param_3 << 0x20 | param_1) % param_3;\n        iVar7 = 0;\n    }\n    else {\n        do {\n            uVar5 = uVar4 >> 1;\n            uVar10 = uVar10 >> 1 | ((uVar4 & 1) != 0) << 0x1f;\n            uVar8 = uVar9 >> 1;\n            uVar3 = uVar3 >> 1 | ((uVar9 & 1) != 0) << 0x1f;\n            uVar4 = uVar5;\n            uVar9 = uVar8;\n        } while (uVar5 != 0);\n        uVar1 = CONCAT44(uVar8, uVar3) / uVar10;\n        uVar3 = uVar1 * param_4;\n        iVar2 = (uVar1 & 0xffffffff) * param_3;\n        uVar9 = iVar2 >> 0x20;\n        uVar4 = iVar2;\n        uVar10 = uVar9 + uVar3;\n        if (((CARRY4(uVar9, uVar3)) || (param_2 < uVar10)) || ((param_2 <= uVar10 && (param_1 < uVar4)))) {\n            bVar11 = uVar4 < param_3;\n            uVar4 = uVar4 - param_3;\n            uVar10 = (uVar10 - param_4) - bVar11;\n        }\n        iVar6 = -(uVar4 - param_1);\n        iVar7 = -(uVar4 - param_1 != 0) - ((uVar10 - param_2) - (uVar4 < param_1));\n    }\n    return CONCAT44(iVar7, iVar6);\n}\n",
        "token_count": 565
    },
    "00403242": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00403242(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    \n    uVar3 = param_1;\n    uVar8 = param_4;\n    uVar6 = param_2;\n    uVar9 = param_3;\n    if (param_4 == 0) {\n        uVar3 = param_2 / param_3;\n        iVar4 = (param_2 % param_3 << 0x20 | param_1) / param_3;\n    }\n    else {\n        do {\n            uVar5 = uVar8 >> 1;\n            uVar9 = uVar9 >> 1 | ((uVar8 & 1) != 0) << 0x1f;\n            uVar7 = uVar6 >> 1;\n            uVar3 = uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f;\n            uVar8 = uVar5;\n            uVar6 = uVar7;\n        } while (uVar5 != 0);\n        uVar1 = CONCAT44(uVar7, uVar3) / uVar9;\n        iVar4 = uVar1;\n        iVar2 = param_3 * (uVar1 & 0xffffffff);\n        uVar3 = iVar2 >> 0x20;\n        uVar8 = uVar3 + iVar4 * param_4;\n        if (((CARRY4(uVar3, iVar4 * param_4)) || (param_2 < uVar8)) || ((param_2 <= uVar8 && (param_1 < iVar2)))) {\n            iVar4 = iVar4 + -1;\n        }\n        uVar3 = 0;\n    }\n    return CONCAT44(uVar3, iVar4);\n}\n",
        "token_count": 472
    },
    "004033cd": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.004033cd(uint *param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint16_t *var_4h;\n    \n    var_4h = NULL;\n    cVar4 = fcn.0040322e(&var_4h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.00403d23();\n    puVar3 = var_4h;\n    if (cVar4 == '\\0') {\n        return 1;\n    }\n    if ((var_4h == NULL) || (iVar2 = *(var_4h + 2),  iVar2 == 0)) {\n        param_1[0xc] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00401555(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n        param_1[0xc] = iVar2;\n        uVar1 = *puVar3;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004369b7;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x004369b7:\n    param_1[0xd] = uVar5;\n    return 1;\n}\n",
        "token_count": 372
    },
    "004034e5": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004034e5(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[4] = param_1[4] + 4;\n    puVar2 = *(param_1[4] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xc] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00403215(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n        param_1[0xc] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004364db;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x004364db:\n    param_1[0xd] = uVar5;\n    return 1;\n}\n",
        "token_count": 308
    },
    "004036a7": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004036a7(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[4] = param_1[4] + 4;\n    puVar2 = *(param_1[4] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xc] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00403215(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n        param_1[0xc] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x0043664c;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x0043664c:\n    param_1[0xd] = uVar5;\n    return 1;\n}\n",
        "token_count": 310
    },
    "00403f67": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00403f67(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    bool bVar10;\n    char cVar11;\n    uint32_t uVar9;\n    \n    cVar11 = param_2 < 0;\n    if (cVar11) {\n        bVar10 = param_1 != 0;\n        param_1 = -param_1;\n        param_2 = -bVar10 - param_2;\n    }\n    if (param_4 < 0) {\n        cVar11 = cVar11 + '\\x01';\n        bVar10 = param_3 != 0;\n        param_3 = -param_3;\n        param_4 = -bVar10 - param_4;\n    }\n    uVar3 = param_1;\n    uVar5 = param_3;\n    uVar6 = param_2;\n    uVar9 = param_4;\n    if (param_4 == 0) {\n        uVar3 = param_2 / param_3;\n        iVar4 = (param_2 % param_3 << 0x20 | param_1) / param_3;\n    }\n    else {\n        do {\n            uVar8 = uVar9 >> 1;\n            uVar5 = uVar5 >> 1 | ((uVar9 & 1) != 0) << 0x1f;\n            uVar7 = uVar6 >> 1;\n            uVar3 = uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f;\n            uVar6 = uVar7;\n            uVar9 = uVar8;\n        } while (uVar8 != 0);\n        uVar1 = CONCAT44(uVar7, uVar3) / uVar5;\n        iVar4 = uVar1;\n        iVar2 = param_3 * (uVar1 & 0xffffffff);\n        uVar3 = iVar2 >> 0x20;\n        uVar5 = uVar3 + iVar4 * param_4;\n        if (((CARRY4(uVar3, iVar4 * param_4)) || (param_2 < uVar5)) || ((param_2 <= uVar5 && (param_1 < iVar2)))) {\n            iVar4 = iVar4 + -1;\n        }\n        uVar3 = 0;\n    }\n    if (cVar11 == '\\x01') {\n        bVar10 = iVar4 != 0;\n        iVar4 = -iVar4;\n        uVar3 = -bVar10 - uVar3;\n    }\n    return CONCAT44(uVar3, iVar4);\n}\n",
        "token_count": 652
    },
    "00403f99": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403f99(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[4] = param_1[4] + 4;\n    puVar2 = *(param_1[4] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xc] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00403215(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n        param_1[0xc] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x0043674d;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x0043674d:\n    param_1[0xd] = uVar5;\n    return 1;\n}\n",
        "token_count": 310
    },
    "0040400c": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.0040400c(uint *param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint16_t *var_4h;\n    \n    var_4h = NULL;\n    cVar4 = fcn.00401794(&var_4h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.0040443f();\n    puVar3 = var_4h;\n    if (cVar4 == '\\0') {\n        return 1;\n    }\n    if ((var_4h == NULL) || (iVar2 = *(var_4h + 2),  iVar2 == 0)) {\n        param_1[0xc] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00403215(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n        param_1[0xc] = iVar2;\n        uVar1 = *puVar3;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x00436564;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x00436564:\n    param_1[0xd] = uVar5;\n    return 1;\n}\n",
        "token_count": 370
    },
    "00404133": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00404133(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    bool bVar10;\n    char cVar11;\n    uint32_t uVar9;\n    \n    cVar11 = param_2 < 0;\n    if (cVar11) {\n        bVar10 = param_1 != 0;\n        param_1 = -param_1;\n        param_2 = -bVar10 - param_2;\n    }\n    if (param_4 < 0) {\n        cVar11 = cVar11 + '\\x01';\n        bVar10 = param_3 != 0;\n        param_3 = -param_3;\n        param_4 = -bVar10 - param_4;\n    }\n    uVar3 = param_1;\n    uVar5 = param_3;\n    uVar6 = param_2;\n    uVar9 = param_4;\n    if (param_4 == 0) {\n        uVar3 = param_2 / param_3;\n        iVar4 = (param_2 % param_3 << 0x20 | param_1) / param_3;\n    }\n    else {\n        do {\n            uVar8 = uVar9 >> 1;\n            uVar5 = uVar5 >> 1 | ((uVar9 & 1) != 0) << 0x1f;\n            uVar7 = uVar6 >> 1;\n            uVar3 = uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f;\n            uVar6 = uVar7;\n            uVar9 = uVar8;\n        } while (uVar8 != 0);\n        uVar1 = CONCAT44(uVar7, uVar3) / uVar5;\n        iVar4 = uVar1;\n        iVar2 = param_3 * (uVar1 & 0xffffffff);\n        uVar3 = iVar2 >> 0x20;\n        uVar5 = uVar3 + iVar4 * param_4;\n        if (((CARRY4(uVar3, iVar4 * param_4)) || (param_2 < uVar5)) || ((param_2 <= uVar5 && (param_1 < iVar2)))) {\n            iVar4 = iVar4 + -1;\n        }\n        uVar3 = 0;\n    }\n    if (cVar11 == '\\x01') {\n        bVar10 = iVar4 != 0;\n        iVar4 = -iVar4;\n        uVar3 = -bVar10 - uVar3;\n    }\n    return CONCAT44(uVar3, iVar4);\n}\n",
        "token_count": 651
    },
    "004041a6": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004041a6(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[4] = param_1[4] + 4;\n    puVar2 = *(param_1[4] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xc] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00401555(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n        param_1[0xc] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004368be;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x004368be:\n    param_1[0xd] = uVar5;\n    return 1;\n}\n",
        "token_count": 308
    },
    "00404480": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00404480(uint *param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint16_t *var_4h;\n    \n    var_4h = NULL;\n    cVar4 = fcn.00403a76(&var_4h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.0040383c();\n    puVar3 = var_4h;\n    if (cVar4 == '\\0') {\n        return 1;\n    }\n    if ((var_4h == NULL) || (iVar2 = *(var_4h + 2),  iVar2 == 0)) {\n        param_1[0xc] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00403215(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n        param_1[0xc] = iVar2;\n        uVar1 = *puVar3;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x004366d5;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x004366d5:\n    param_1[0xd] = uVar5;\n    return 1;\n}\n",
        "token_count": 372
    },
    "00404688": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404688(uint *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    \n    param_1[4] = param_1[4] + 4;\n    puVar2 = *(param_1[4] + -4);\n    if ((puVar2 == NULL) || (iVar3 = *(puVar2 + 2),  iVar3 == 0)) {\n        param_1[0xc] = \"(null)\";\n        uVar5 = 6;\n    }\n    else {\n        cVar4 = fcn.00401555(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n        param_1[0xc] = iVar3;\n        uVar1 = *puVar2;\n        uVar5 = uVar1;\n        if (cVar4 != '\\0') {\n            *(param_1 + 0xe) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x0043692e;\n        }\n    }\n    *(param_1 + 0xe) = 0;\ncode_r0x0043692e:\n    param_1[0xd] = uVar5;\n    return 1;\n}\n",
        "token_count": 309
    },
    "004012c6": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004012c6(uint arg_8h)\n\n{\n    if (**0x476418 == '?') {\n        if ((*0x476418)[1] == '$') {\n            fcn.004021bc(arg_8h, 1);\n        }\n        else {\n            *0x476418 = *0x476418 + 1;\n            fcn.00402252(arg_8h, 0, 0);\n        }\n    }\n    else {\n        fcn.00401f82(arg_8h, 1, 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 133
    },
    "00404246": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404246(uint arg_8h)\n\n{\n    uint arg_10h;\n    uint var_8h;\n    \n    if (**0x476418 == '\\0') {\n        fcn.004014dd(1);\n    }\n    else if (**0x476418 == '?') {\n        *0x476418 = *0x476418 + 1;\n        arg_10h = fcn.004026ee(&var_8h, 0);\n        fcn.004022e3(arg_8h, 0x2d, arg_10h);\n    }\n    else {\n        fcn.004026ee(arg_8h, 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 159
    },
    "004011d6": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004011d6(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x46b819);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *((uVar1 * 9 + (arg_ch & 0xff) & 0x7f) * 2 + 0x46b818);\n}\n",
        "token_count": 140
    },
    "00401465": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00401465(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x46b819);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *((uVar1 * 9 + (arg_ch & 0xff) & 0x7f) * 2 + 0x46b818);\n}\n",
        "token_count": 139
    },
    "004016fe": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004016fe(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x46b819);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *((uVar1 * 9 + (arg_ch & 0xff) & 0x7f) * 2 + 0x46b818);\n}\n",
        "token_count": 139
    },
    "0040195b": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0040195b(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x46b6e1);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *(((arg_ch & 0xff) + uVar1 * 8 & 0x7f) * 2 + 0x46b6e0);\n}\n",
        "token_count": 144
    },
    "00402617": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00402617(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x46b6e1);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *(((arg_ch & 0xff) + uVar1 * 8 & 0x7f) * 2 + 0x46b6e0);\n}\n",
        "token_count": 145
    },
    "00402a6d": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00402a6d(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x46b819);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *((uVar1 * 9 + (arg_ch & 0xff) & 0x7f) * 2 + 0x46b818);\n}\n",
        "token_count": 143
    },
    "00402c66": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00402c66(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x46b6e1);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *(((arg_ch & 0xff) + uVar1 * 8 & 0x7f) * 2 + 0x46b6e0);\n}\n",
        "token_count": 144
    },
    "00403440": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00403440(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x46b819);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *((uVar1 * 9 + (arg_ch & 0xff) & 0x7f) * 2 + 0x46b818);\n}\n",
        "token_count": 141
    },
    "00403585": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00403585(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x46b6e1);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *(((arg_ch & 0xff) + uVar1 * 8 & 0x7f) * 2 + 0x46b6e0);\n}\n",
        "token_count": 145
    },
    "00403aad": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00403aad(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x46b819);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *((uVar1 * 9 + (arg_ch & 0xff) & 0x7f) * 2 + 0x46b818);\n}\n",
        "token_count": 141
    },
    "004040c0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004040c0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x46b819);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *((uVar1 * 9 + (arg_ch & 0xff) & 0x7f) * 2 + 0x46b818);\n}\n",
        "token_count": 142
    },
    "00404417": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00404417(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (arg_8h - 0x20U < 0x5b) {\n        uVar1 = *((arg_8h - 0x20U & 0x7f) * 2 + 0x46b819);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return *((uVar1 * 9 + (arg_ch & 0xff) & 0x7f) * 2 + 0x46b818);\n}\n",
        "token_count": 139
    },
    "0042af4e": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042af4e(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    return in_ECX + (arg_8h & 0x7f) * 2;\n}\n",
        "token_count": 55
    },
    "004015dc": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004015dc(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x47502c & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x47502c;\n}\n",
        "token_count": 95
    },
    "0040174e": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0040174e(uint8_t param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if (0x3f < param_1) {\n        return 0;\n    }\n    if (param_1 < 0x20) {\n        return CONCAT44(param_2 >> (param_1 & 0x1f), in_EAX >> (param_1 & 0x1f) | param_2 << 0x20 - (param_1 & 0x1f));\n    }\n    return param_2 >> (param_1 & 0x1f);\n}\n",
        "token_count": 145
    },
    "00401799": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401799(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x47502c & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x47502c;\n}\n",
        "token_count": 95
    },
    "004023a1": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004023a1(uint arg_8h)\n\n{\n    uint uVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    \n    uVar2 = *0x47502c & 0x1f;\n    pcVar3 = (*0x47502c ^ *0x476c0c) >> uVar2 | (*0x47502c ^ *0x476c0c) << 0x20 - uVar2;\n    if (pcVar3 == NULL) {\n        uVar1 = 0;\n    }\n    else {\n        (**0x47a000)(arg_8h);\n        uVar1 = (*pcVar3)();\n    }\n    return uVar1;\n}\n",
        "token_count": 163
    },
    "004023ec": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004023ec(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x47502c & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x47502c;\n}\n",
        "token_count": 95
    },
    "004029fa": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004029fa(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x47502c & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x47502c;\n}\n",
        "token_count": 95
    },
    "00402c20": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402c20(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    \n    iVar1 = *arg_1ch;\n    if (((iVar1 == 0) && (iVar1 = fcn.004042be(),  iVar1 == 0)) || (pcVar4 = *(iVar1 + 0x35c),  pcVar4 == NULL)) {\n        iVar1 = fcn.004012b7();\n        uVar2 = *0x47502c & 0x1f;\n        uVar3 = *(iVar1 * 4 + 0x4771b4) ^ *0x47502c;\n        pcVar4 = uVar3 >> uVar2 | uVar3 << 0x20 - uVar2;\n        if (pcVar4 == NULL) {\n            fcn.0040277f(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            pcVar4 = swi(3);\n            (*pcVar4)();\n            return;\n        }\n    }\n    (**0x47a000)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 331
    },
    "00402de7": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t __fastcall fcn.00402de7(uint8_t param_1, int32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if (0x3f < param_1) {\n        return 0;\n    }\n    if (param_1 < 0x20) {\n        return CONCAT44(param_2 << (param_1 & 0x1f) | in_EAX >> 0x20 - (param_1 & 0x1f), in_EAX << (param_1 & 0x1f));\n    }\n    return (in_EAX << (param_1 & 0x1f)) << 0x20;\n}\n",
        "token_count": 152
    },
    "00402fc7": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402fc7(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x47502c & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x47502c;\n}\n",
        "token_count": 96
    },
    "00403085": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t fcn.00403085(void)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_EBP;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00401b59(0x4745c8, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.004043a4(0);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = *0x47502c & 0x1f;\n    uVar2 = (*0x47502c ^ *0x477574) >> uVar1 | (*0x47502c ^ *0x477574) << 0x20 - uVar1;\n    *(unaff_EBP + -0x1c) = uVar2;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0044b61a();\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 277
    },
    "004030b7": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004030b7(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x47502c & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x47502c;\n}\n",
        "token_count": 96
    },
    "004032c4": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t fcn.004032c4(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    \n    uVar2 = *0x47502c & 0x1f;\n    uVar1 = (*0x47502c ^ *0x476c0c) >> uVar2 | (*0x47502c ^ *0x476c0c) << 0x20 - uVar2;\n    return uVar1 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 118
    },
    "0040385f": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040385f(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x47502c & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x47502c;\n}\n",
        "token_count": 96
    },
    "00403a17": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403a17(uint arg_8h)\n\n{\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    fcn.00403b34(&var_4h, arg_8h);\n    return var_4h & 0x1f;\n}\n",
        "token_count": 72
    },
    "00403b34": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403b34(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if ((arg_ch & 0x1f) == 0) {\n        *arg_8h = 0;\n    }\n    else {\n        uVar1 = fcn.004032b0();\n        uVar2 = fcn.004040ac(arg_ch & 0x1f);\n        *arg_8h = uVar2 & uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 132
    },
    "00403b5c": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403b5c(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x47502c & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x47502c;\n}\n",
        "token_count": 97
    },
    "0040404d": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040404d(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    if ((arg_ch & 0x1f) != 0) {\n        uVar1 = fcn.004040ac(arg_ch & 0x1f);\n        uVar2 = fcn.004040ac(0x3f);\n        uVar4 = *arg_8h;\n        uVar3 = fcn.004032b0();\n        uVar4 = uVar3 & ~uVar1 | uVar2 & uVar4 & uVar1;\n        fcn.00401fc3(uVar4);\n        uVar4 = uVar4 & 0x1f;\n        uVar1 = fcn.00403a17(uVar4);\n        if (uVar1 != uVar4) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 241
    },
    "00404629": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404629(uint32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = 0x20 - (*0x47502c & 0x1f) & 0x1f;\n    return (arg_8h >> uVar1 | arg_8h << 0x20 - uVar1) ^ *0x47502c;\n}\n",
        "token_count": 95
    },
    "0041cb43": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041cb43(int32_t **param_1)\n\n{\n    uint32_t arg_8h;\n    uint32_t *puVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t *arg_8h_00;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = **param_1;\n    if (puVar1 == NULL) {\ncode_r0x0041cc3d:\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar3 = *0x47502c & 0x1f;\n        puVar6 = (puVar1[1] ^ *0x47502c) >> uVar3 | (puVar1[1] ^ *0x47502c) << 0x20 - uVar3;\n        arg_8h_00 = (puVar1[2] ^ *0x47502c) >> uVar3 | (puVar1[2] ^ *0x47502c) << 0x20 - uVar3;\n        uVar4 = (*puVar1 ^ *0x47502c) >> uVar3 | (*puVar1 ^ *0x47502c) << 0x20 - uVar3;\n        arg_8h = uVar4;\n        if (puVar6 == arg_8h_00) {\n            uVar5 = arg_8h_00 - uVar4 >> 2;\n            uVar7 = 0x200;\n            if (uVar5 < 0x201) {\n                uVar7 = uVar5;\n            }\n            uVar7 = uVar7 + uVar5;\n            if (uVar7 == 0) {\n                uVar7 = 0x20;\n            }\n            if (uVar7 < uVar5) {\ncode_r0x0041cbbb:\n                uVar7 = uVar5 + 4;\n                arg_8h = fcn.004021d5(uVar4, uVar7, 4);\n                fcn.004042f5(0);\n                if (arg_8h == 0) goto code_r0x0041cc3d;\n            }\n            else {\n                arg_8h = fcn.004021d5(uVar4, uVar7, 4);\n                fcn.004042f5(0);\n                if (arg_8h == 0) goto code_r0x0041cbbb;\n            }\n            uVar4 = *0x47502c;\n            arg_8h_00 = arg_8h + uVar7 * 4;\n            puVar6 = arg_8h + uVar5 * 4;\n            for (puVar1 = puVar6; puVar1 != arg_8h_00; puVar1 = puVar1 + 1) {\n                *puVar1 = uVar4;\n            }\n        }\n        uVar4 = fcn.0040385f(*param_1[1]);\n        *puVar6 = uVar4;\n        uVar2 = fcn.004015dc(arg_8h);\n        ***param_1 = uVar2;\n        uVar2 = fcn.004015dc(puVar6 + 1);\n        *(**param_1 + 4) = uVar2;\n        uVar2 = fcn.004015dc(arg_8h_00);\n        *(**param_1 + 8) = uVar2;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 824
    },
    "0040190b": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040190b(uint32_t *param_1)\n\n{\n    uint32_t *arg_10h;\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    bool bVar6;\n    bool bVar7;\n    char cVar8;\n    uchar uVar9;\n    uint32_t in_EAX;\n    char *pcVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint16_t *puVar14;\n    int32_t iVar15;\n    uint unaff_EBX;\n    uint arg_8h;\n    int32_t iStack28;\n    int32_t arg_ch;\n    \n    cVar8 = *(param_1 + 0x2d);\n    pcVar10 = in_EAX & 0xffffff00;\n    if (cVar8 != 'F') {\n        if (cVar8 == 'N') {\n            pcVar10 = *param_1 & 8;\n            if (pcVar10 != NULL) goto code_r0x00431c7d;\n            *(param_1 + 6) = 8;\ncode_r0x00431b57:\n            uVar11 = param_1[2];\n            *(uVar11 + 0x1c) = 1;\n            *(uVar11 + 0x18) = 0x16;\n            uVar11 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n            return uVar11 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x00431b57;\n        if (cVar8 < 'k') {\n            if (cVar8 == 'j') {\n                param_1[10] = 5;\n                goto code_r0x00431c7d;\n            }\n            if (cVar8 == 'I') {\n                pcVar3 = param_1[3];\n                cVar8 = *pcVar3;\n                if (cVar8 == '3') {\n                    if (pcVar3[1] == '2') {\n                        pcVar10 = pcVar3 + 2;\n                        param_1[10] = 10;\n                        param_1[3] = pcVar10;\n                    }\n                }\n                else if (cVar8 == '6') {\n                    if (pcVar3[1] == '4') {\n                        pcVar10 = pcVar3 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = pcVar10;\n                    }\n                }\n                else if ((((cVar8 == 'd') || (cVar8 == 'i')) || (cVar8 == 'o')) ||\n                        (((cVar8 == 'u' || (cVar8 == 'x')) || (cVar8 == 'X')))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x00431c7d;\n            }\n            if (cVar8 == 'L') {\n                param_1[10] = 8;\n                goto code_r0x00431c7d;\n            }\n            if (cVar8 == 'T') {\n                param_1[10] = 0xd;\n                goto code_r0x00431c7d;\n            }\n            if (cVar8 != 'h') goto code_r0x00431c7d;\n            if (*param_1[3] == 'h') {\n                param_1[3] = param_1[3] + 1;\n                pcVar10 = 0x1;\n            }\n            else {\n                pcVar10 = 0x2;\n            }\n        }\n        else {\n            if (cVar8 != 'l') {\n                if (cVar8 == 't') {\n                    param_1[10] = 7;\n                }\n                else if (cVar8 == 'w') {\n                    param_1[10] = 0xc;\n                }\n                else if (cVar8 == 'z') {\n                    param_1[10] = 6;\n                }\n                goto code_r0x00431c7d;\n            }\n            if (*param_1[3] == 'l') {\n                param_1[3] = param_1[3] + 1;\n                pcVar10 = 0x4;\n            }\n            else {\n                pcVar10 = 0x3;\n            }\n        }\n        param_1[10] = pcVar10;\ncode_r0x00431c7d:\n        return CONCAT31(pcVar10 >> 8, 1);\n    }\n    pcVar10 = *param_1 & 8;\n    if (pcVar10 != NULL) goto code_r0x00431c7d;\n    *(param_1 + 6) = 7;\n    cVar8 = *(param_1 + 0x2d);\n    if (cVar8 < 'e') {\n        if (cVar8 == 'd') {\ncode_r0x00433bc8:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x00433bcc:\n            cVar8 = fcn.00403ea9(0);\n        }\n        else if (cVar8 < 'Y') {\n            if (cVar8 == 'X') {\n                arg_8h = 1;\ncode_r0x00433b6f:\n                cVar8 = fcn.00401055(arg_8h);\n            }\n            else {\n                if (cVar8 != 'A') {\n                    if (cVar8 == 'C') goto code_r0x00433b88;\n                    if (cVar8 < 'E') goto code_r0x00433e92;\n                    if ('G' < cVar8) {\n                        if (cVar8 != 'S') goto code_r0x00433e92;\n                        goto code_r0x00433b57;\n                    }\n                }\ncode_r0x00433bd6:\n                cVar8 = fcn.00403d4b();\n            }\n        }\n        else if (cVar8 == 'Z') {\n            cVar8 = fcn.00404480();\n        }\n        else {\n            if (cVar8 == 'a') goto code_r0x00433bd6;\n            if (cVar8 != 'c') goto code_r0x00433e92;\ncode_r0x00433b88:\n            cVar8 = fcn.004025ef(0);\n        }\n    }\n    else if (cVar8 < 'q') {\n        if (cVar8 == 'p') {\n            cVar8 = fcn.00401c71();\n        }\n        else {\n            if (cVar8 < 'h') goto code_r0x00433bd6;\n            if (cVar8 == 'i') goto code_r0x00433bc8;\n            if (cVar8 == 'n') {\n                cVar8 = fcn.00402b67();\n            }\n            else {\n                if (cVar8 != 'o') goto code_r0x00433e92;\n                cVar8 = fcn.00403e22();\n            }\n        }\n    }\n    else {\n        if (cVar8 != 's') {\n            if (cVar8 != 'u') {\n                if (cVar8 != 'x') goto code_r0x00433e92;\n                arg_8h = 0;\n                goto code_r0x00433b6f;\n            }\n            goto code_r0x00433bcc;\n        }\ncode_r0x00433b57:\n        cVar8 = fcn.00401276();\n    }\n    if (((cVar8 != '\\0') && (cVar8 = fcn.00401a8c(),  cVar8 == '\\0')) && (*(param_1 + 0xb) == '\\0')) {\n        iVar12 = 0;\n        iStack28 = 0;\n        if ((param_1[7] >> 4 & 1) != 0) {\n            if (((param_1[7] >> 6 & 1) == 0) && ((*(param_1 + 7) & 1) == 0)) {\n                if ((param_1[7] >> 1 & 1) != 0) {\n                    iVar12 = 1;\n                    iStack28 = 1;\n                }\n            }\n            else {\n                iStack28 = 1;\n                iVar12 = 1;\n            }\n        }\n        cVar8 = *(param_1 + 0x2d);\n        if (((cVar8 != 'x') && (cVar8 != 'X')) || (bVar6 = true,  (param_1[7] >> 5 & 1) == 0)) {\n            bVar6 = false;\n        }\n        if ((cVar8 == 'a') || (bVar7 = false,  cVar8 == 'A')) {\n            bVar7 = true;\n        }\n        if ((bVar6) || (bVar7)) {\n            (&stack0xffffffec)[iVar12] = 0x30;\n            if ((cVar8 == 'X') || (cVar8 == 'A')) {\n                uVar9 = 0x58;\n            }\n            else {\n                uVar9 = 0x78;\n            }\n            (&stack0xffffffed)[iVar12] = uVar9;\n            iVar12 = iVar12 + 2;\n            iStack28 = iVar12;\n        }\n        iVar15 = (param_1[8] - param_1[0xd]) - iVar12;\n        if (((*(param_1 + 7) & 0xc) == 0) && (0 < iVar15)) {\n            uVar11 = param_1[5];\n            iVar13 = 0;\n            do {\n                uVar4 = param_1[0x112];\n                if (*(param_1[0x112] + 8) == *(uVar4 + 4)) {\n                    if (*(uVar4 + 0xc) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    param_1[5] = uVar11;\n                }\n                else {\n                    param_1[5] = uVar11 + 1;\n                    *(uVar4 + 8) = *(uVar4 + 8) + 1;\n                    **param_1[0x112] = 0x20;\n                    *param_1[0x112] = *param_1[0x112] + 1;\n                    uVar11 = param_1[5];\n                }\n                iVar12 = iStack28;\n            } while ((uVar11 != 0xffffffff) && (iVar13 = iVar13 + 1,  iVar13 < iVar15));\n        }\n        arg_10h = param_1 + 5;\n        ppiVar1 = param_1 + 0x112;\n        fcn.00404485(&stack0xffffffec, iVar12, arg_10h);\n        if (((param_1[7] >> 3 & 1) != 0) && (((param_1[7] >> 2 & 1) == 0 && (iVar12 = 0,  0 < iVar15)))) {\n            uVar11 = *arg_10h;\n            do {\n                piVar5 = *ppiVar1;\n                if (piVar5[2] == piVar5[1]) {\n                    if (*(piVar5 + 3) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    *arg_10h = uVar11;\n                }\n                else {\n                    *arg_10h = uVar11 + 1;\n                    piVar5[2] = piVar5[2] + 1;\n                    ***ppiVar1 = 0x30;\n                    **ppiVar1 = **ppiVar1 + 1;\n                    uVar11 = *arg_10h;\n                }\n            } while ((uVar11 != 0xffffffff) && (iVar12 = iVar12 + 1,  iVar12 < iVar15));\n        }\n        iVar12 = 0;\n        if ((*(param_1 + 0xe) == '\\0') || (param_1[0xd] < 1)) {\n            fcn.00404485(param_1[0xc], param_1[0xd], arg_10h);\n        }\n        else {\n            puVar14 = param_1[0xc];\n            uVar11 = 0;\n            do {\n                uVar2 = *puVar14;\n                puVar14 = puVar14 + 1;\n                arg_ch = 0;\n                iVar13 = fcn.00402f72(&stack0xffffffe8, &stack0xfffffff0, 6, uVar2, param_1[2]);\n                if ((iVar13 != 0) || (arg_ch == 0)) {\n                    *arg_10h = 0xffffffff;\n                    break;\n                }\n                fcn.00404485(&stack0xfffffff0, arg_ch, arg_10h);\n                uVar11 = uVar11 + 1;\n            } while (uVar11 != param_1[0xd]);\n        }\n        uVar11 = *arg_10h;\n        if (((-1 < uVar11) && ((param_1[7] >> 2 & 1) != 0)) && (0 < iVar15)) {\n            do {\n                piVar5 = *ppiVar1;\n                if (piVar5[2] == piVar5[1]) {\n                    if (*(piVar5 + 3) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    *arg_10h = uVar11;\n                }\n                else {\n                    *arg_10h = uVar11 + 1;\n                    piVar5[2] = piVar5[2] + 1;\n                    ***ppiVar1 = 0x20;\n                    **ppiVar1 = **ppiVar1 + 1;\n                    uVar11 = *arg_10h;\n                }\n            } while ((uVar11 != 0xffffffff) && (iVar12 = iVar12 + 1,  iVar12 < iVar15));\n        }\n    }\ncode_r0x00433e92:\n    uVar11 = fcn.0040241e(unaff_EBX);\n    return uVar11;\n}\n",
        "token_count": 3253
    },
    "004019c4": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004019c4(uint32_t *param_1)\n\n{\n    uint32_t *arg_10h;\n    uint32_t *puVar1;\n    int32_t **ppiVar2;\n    uint16_t uVar3;\n    int16_t iVar4;\n    uint16_t *puVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    bool bVar8;\n    bool bVar9;\n    char cVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint32_t arg_ch;\n    uint unaff_EBX;\n    uint16_t *puVar14;\n    ushort uVar15;\n    int32_t iVar16;\n    uint arg_8h;\n    ushort uVar17;\n    int32_t iVar18;\n    int16_t iVar19;\n    uint32_t uVar20;\n    \n    uVar3 = *(param_1 + 0x2e);\n    puVar14 = uVar3;\n    if (puVar14 != 0x46) {\n        if (puVar14 == 0x4e) {\n            puVar14 = *param_1 & 8;\n            if (puVar14 != NULL) goto code_r0x004329cb;\n            *(param_1 + 6) = 8;\ncode_r0x0043287f:\n            uVar11 = param_1[2];\n            *(uVar11 + 0x1c) = 1;\n            *(uVar11 + 0x18) = 0x16;\n            uVar11 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n            return uVar11 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x0043287f;\n        if (uVar3 < 0x6b) {\n            if (uVar3 == 0x6a) {\n                param_1[10] = 5;\n                goto code_r0x004329cb;\n            }\n            if (puVar14 == 0x49) {\n                puVar5 = param_1[3];\n                puVar14 = *puVar5;\n                if (puVar14 == 0x33) {\n                    if (puVar5[1] == 0x32) {\n                        puVar14 = puVar5 + 2;\n                        param_1[10] = 10;\n                        param_1[3] = puVar14;\n                    }\n                }\n                else if (puVar14 == 0x36) {\n                    if (puVar5[1] == 0x34) {\n                        puVar14 = puVar5 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = puVar14;\n                    }\n                }\n                else if ((((puVar14 == 0x64) || (puVar14 == 0x69)) || (puVar14 == 0x6f)) ||\n                        (((puVar14 == 0x75 || (puVar14 == 0x78)) || (puVar14 == 0x58)))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x004329cb;\n            }\n            if (puVar14 == 0x4c) {\n                param_1[10] = 8;\n                goto code_r0x004329cb;\n            }\n            if (puVar14 == 0x54) {\n                param_1[10] = 0xd;\n                goto code_r0x004329cb;\n            }\n            if (uVar3 != 0x68) goto code_r0x004329cb;\n            if (*param_1[3] == 0x68) {\n                param_1[3] = param_1[3] + 1;\n                puVar14 = 0x1;\n            }\n            else {\n                puVar14 = 0x2;\n            }\n        }\n        else {\n            if (uVar3 != 0x6c) {\n                if (puVar14 == 0x74) {\n                    param_1[10] = 7;\n                }\n                else if (puVar14 == 0x77) {\n                    param_1[10] = 0xc;\n                }\n                else if (puVar14 == 0x7a) {\n                    param_1[10] = 6;\n                }\n                goto code_r0x004329cb;\n            }\n            if (*param_1[3] == 0x6c) {\n                param_1[3] = param_1[3] + 1;\n                puVar14 = 0x4;\n            }\n            else {\n                puVar14 = 0x3;\n            }\n        }\n        param_1[10] = puVar14;\ncode_r0x004329cb:\n        return CONCAT31(puVar14 >> 8, 1);\n    }\n    puVar14 = *param_1 & 8;\n    if (puVar14 != NULL) goto code_r0x004329cb;\n    *(param_1 + 6) = 7;\n    uVar3 = *(param_1 + 0x2e);\n    iVar19 = 0x41;\n    if (uVar3 < 0x65) {\n        if (uVar3 == 100) {\ncode_r0x00435bf1:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x00435bf5:\n            cVar10 = fcn.004035f8(0);\n        }\n        else if (uVar3 < 0x59) {\n            if (uVar3 == 0x58) {\n                arg_8h = 1;\ncode_r0x00435b98:\n                cVar10 = fcn.00404340(arg_8h);\n            }\n            else {\n                if (uVar3 != 0x41) {\n                    if (uVar3 == 0x43) goto code_r0x00435bb1;\n                    if (uVar3 < 0x45) goto code_r0x00435f3d;\n                    if (0x47 < uVar3) {\n                        if (uVar3 != 0x53) goto code_r0x00435f3d;\n                        goto code_r0x00435b80;\n                    }\n                }\ncode_r0x00435bff:\n                cVar10 = fcn.0040385a();\n            }\n        }\n        else if (uVar3 == 0x5a) {\n            cVar10 = fcn.00401f4b();\n        }\n        else {\n            if (uVar3 == 0x61) goto code_r0x00435bff;\n            if (uVar3 != 99) goto code_r0x00435f3d;\ncode_r0x00435bb1:\n            cVar10 = fcn.0040442b(0);\n        }\n    }\n    else if (uVar3 < 0x71) {\n        if (uVar3 == 0x70) {\n            cVar10 = fcn.00401bf9();\n        }\n        else {\n            if (uVar3 < 0x68) goto code_r0x00435bff;\n            if (uVar3 == 0x69) goto code_r0x00435bf1;\n            if (uVar3 == 0x6e) {\n                cVar10 = fcn.00404386();\n            }\n            else {\n                if (uVar3 != 0x6f) goto code_r0x00435f3d;\n                cVar10 = fcn.004018c0();\n            }\n        }\n    }\n    else {\n        if (uVar3 != 0x73) {\n            if (uVar3 != 0x75) {\n                if (uVar3 != 0x78) goto code_r0x00435f3d;\n                arg_8h = 0;\n                goto code_r0x00435b98;\n            }\n            goto code_r0x00435bf5;\n        }\ncode_r0x00435b80:\n        iVar19 = 0x41;\n        cVar10 = fcn.00401532();\n    }\n    if ((cVar10 != '\\0') && (*(param_1 + 0xb) == '\\0')) {\n        iVar12 = 0;\n        iVar18 = 0;\n        if ((param_1[7] >> 4 & 1) != 0) {\n            if (((param_1[7] >> 6 & 1) == 0) && ((*(param_1 + 7) & 1) == 0)) {\n                if ((param_1[7] >> 1 & 1) != 0) {\n                    iVar12 = 1;\n                    iVar18 = 1;\n                }\n            }\n            else {\n                iVar18 = 1;\n                iVar12 = 1;\n            }\n        }\n        iVar4 = *(param_1 + 0x2e);\n        if (((iVar4 != 0x78) && (iVar4 != 0x58)) || (bVar8 = true,  (param_1[7] >> 5 & 1) == 0)) {\n            bVar8 = false;\n        }\n        if ((iVar4 == 0x61) || (bVar9 = false,  iVar4 == iVar19)) {\n            bVar9 = true;\n        }\n        uVar17 = 0x30;\n        if ((bVar8) || (bVar9)) {\n            *(&stack0xfffffff0 + iVar12 * 2) = 0x30;\n            if ((iVar4 == 0x58) || (uVar15 = 0x78,  iVar4 == iVar19)) {\n                uVar15 = 0x58;\n            }\n            *(&stack0xfffffff2 + iVar12 * 2) = uVar15;\n            iVar12 = iVar12 + 2;\n            iVar18 = iVar12;\n        }\n        iVar16 = (param_1[8] - param_1[0xd]) - iVar12;\n        if (((*(param_1 + 7) & 0xc) == 0) && (0 < iVar16)) {\n            uVar11 = param_1[5];\n            iVar13 = 0;\n            do {\n                if (*(param_1[0x112] + 8) == *(param_1[0x112] + 4)) {\n                    if (*(param_1[0x112] + 0xc) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    param_1[5] = uVar11;\n                }\n                else {\n                    param_1[5] = uVar11 + 1;\n                    *(param_1[0x112] + 8) = *(param_1[0x112] + 8) + 1;\n                    **param_1[0x112] = 0x20;\n                    *param_1[0x112] = *param_1[0x112] + 2;\n                    uVar11 = param_1[5];\n                }\n                iVar12 = iVar18;\n            } while ((uVar11 != 0xffffffff) && (iVar13 = iVar13 + 1,  iVar13 < iVar16));\n        }\n        arg_10h = param_1 + 5;\n        fcn.00403657(&stack0xfffffff0, iVar12, arg_10h);\n        if (((param_1[7] >> 3 & 1) != 0) &&\n           ((puVar1 = param_1 + 5,  (param_1[7] >> 2 & 1) == 0 && (iVar12 = 0,  0 < iVar16)))) {\n            uVar11 = *puVar1;\n            do {\n                uVar6 = param_1[0x112];\n                if (*(uVar6 + 8) == *(uVar6 + 4)) {\n                    if (*(uVar6 + 0xc) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    *puVar1 = uVar11;\n                }\n                else {\n                    *puVar1 = uVar11 + 1;\n                    *(uVar6 + 8) = *(uVar6 + 8) + 1;\n                    **param_1[0x112] = uVar17;\n                    piVar7 = param_1[0x112];\n                    *piVar7 = *piVar7 + 2;\n                    uVar11 = *puVar1;\n                }\n            } while ((uVar11 != 0xffffffff) && (iVar12 = iVar12 + 1,  iVar12 < iVar16));\n        }\n        iVar12 = 0;\n        if ((*(param_1 + 0xe) == '\\0') && (uVar11 = param_1[0xd],  0 < uVar11)) {\n            uVar6 = param_1[2];\n            if (*(uVar6 + 0x14) == '\\0') {\n                fcn.004024f0();\n                uVar11 = param_1[0xd];\n            }\n            arg_ch = param_1[0xc];\n            uVar20 = 0;\n            if (uVar11 != 0) {\n                do {\n                    uVar17 = 0;\n                    iVar18 = fcn.0040123f(&stack0xffffffe8, arg_ch, *(*(uVar6 + 0xc) + 4), param_1[2]);\n                    ppiVar2 = param_1 + 0x112;\n                    if (iVar18 < 1) {\n                        param_1[5] = 0xffffffff;\n                        break;\n                    }\n                    piVar7 = *ppiVar2;\n                    if (piVar7[2] == piVar7[1]) {\n                        if (*(piVar7 + 3) == '\\0') {\n                            param_1[5] = 0xffffffff;\n                        }\n                        else {\n                            param_1[5] = param_1[5] + 1;\n                        }\n                    }\n                    else {\n                        param_1[5] = param_1[5] + 1;\n                        piVar7[2] = piVar7[2] + 1;\n                        ***ppiVar2 = uVar17;\n                        **ppiVar2 = **ppiVar2 + 2;\n                    }\n                    arg_ch = arg_ch + iVar18;\n                    uVar20 = uVar20 + 1;\n                } while (uVar20 != param_1[0xd]);\n            }\n        }\n        else {\n            fcn.00403657(param_1[0xc], param_1[0xd], param_1 + 5);\n        }\n        uVar11 = param_1[5];\n        if (((-1 < uVar11) && ((param_1[7] >> 2 & 1) != 0)) && (0 < iVar16)) {\n            do {\n                uVar6 = param_1[0x112];\n                if (*(uVar6 + 8) == *(uVar6 + 4)) {\n                    if (*(uVar6 + 0xc) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    *arg_10h = uVar11;\n                }\n                else {\n                    *arg_10h = uVar11 + 1;\n                    *(uVar6 + 8) = *(uVar6 + 8) + 1;\n                    **param_1[0x112] = 0x20;\n                    piVar7 = param_1[0x112];\n                    *piVar7 = *piVar7 + 2;\n                    uVar11 = *arg_10h;\n                }\n            } while ((uVar11 != 0xffffffff) && (iVar12 = iVar12 + 1,  iVar12 < iVar16));\n        }\n    }\ncode_r0x00435f3d:\n    uVar11 = fcn.0040241e(unaff_EBX);\n    return uVar11;\n}\n",
        "token_count": 3615
    },
    "00401d1b": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nushort __cdecl fcn.00401d1b(uint arg_8h)\n\n{\n    if ((((arg_8h != 100) && (arg_8h != 0x69)) && (arg_8h != 0x6f)) &&\n       (((arg_8h != 0x75 && (arg_8h != 0x78)) && ((arg_8h != 0x58 && (arg_8h != 0x2a)))))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 118
    },
    "0040203b": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040203b(uint32_t *param_1)\n\n{\n    uint32_t *arg_10h;\n    uint16_t uVar1;\n    char *pcVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uchar uVar6;\n    uint32_t in_EAX;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint16_t *puVar10;\n    uint32_t unaff_EBX;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint arg_8h;\n    int32_t iVar13;\n    uint32_t arg_ch;\n    \n    cVar5 = *(param_1 + 0x2d);\n    pcVar7 = in_EAX & 0xffffff00;\n    if (cVar5 != 'F') {\n        if (cVar5 == 'N') {\n            pcVar7 = *param_1 & 8;\n            if (pcVar7 != NULL) goto code_r0x00431913;\n            *(param_1 + 6) = 8;\ncode_r0x004317ed:\n            uVar9 = param_1[2];\n            *(uVar9 + 0x1c) = 1;\n            *(uVar9 + 0x18) = 0x16;\n            uVar9 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n            return uVar9 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x004317ed;\n        if (cVar5 < 'k') {\n            if (cVar5 == 'j') {\n                param_1[10] = 5;\n                goto code_r0x00431913;\n            }\n            if (cVar5 == 'I') {\n                pcVar2 = param_1[3];\n                cVar5 = *pcVar2;\n                if (cVar5 == '3') {\n                    if (pcVar2[1] == '2') {\n                        pcVar7 = pcVar2 + 2;\n                        param_1[10] = 10;\n                        param_1[3] = pcVar7;\n                    }\n                }\n                else if (cVar5 == '6') {\n                    if (pcVar2[1] == '4') {\n                        pcVar7 = pcVar2 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = pcVar7;\n                    }\n                }\n                else if ((((cVar5 == 'd') || (cVar5 == 'i')) || (cVar5 == 'o')) ||\n                        (((cVar5 == 'u' || (cVar5 == 'x')) || (cVar5 == 'X')))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x00431913;\n            }\n            if (cVar5 == 'L') {\n                param_1[10] = 8;\n                goto code_r0x00431913;\n            }\n            if (cVar5 == 'T') {\n                param_1[10] = 0xd;\n                goto code_r0x00431913;\n            }\n            if (cVar5 != 'h') goto code_r0x00431913;\n            if (*param_1[3] == 'h') {\n                param_1[3] = param_1[3] + 1;\n                pcVar7 = 0x1;\n            }\n            else {\n                pcVar7 = 0x2;\n            }\n        }\n        else {\n            if (cVar5 != 'l') {\n                if (cVar5 == 't') {\n                    param_1[10] = 7;\n                }\n                else if (cVar5 == 'w') {\n                    param_1[10] = 0xc;\n                }\n                else if (cVar5 == 'z') {\n                    param_1[10] = 6;\n                }\n                goto code_r0x00431913;\n            }\n            if (*param_1[3] == 'l') {\n                param_1[3] = param_1[3] + 1;\n                pcVar7 = 0x4;\n            }\n            else {\n                pcVar7 = 0x3;\n            }\n        }\n        param_1[10] = pcVar7;\ncode_r0x00431913:\n        return CONCAT31(pcVar7 >> 8, 1);\n    }\n    pcVar7 = *param_1 & 8;\n    if (pcVar7 != NULL) goto code_r0x00431913;\n    *(param_1 + 6) = 7;\n    iVar11 = 0;\n    cVar5 = *(param_1 + 0x2d);\n    if (cVar5 < 'e') {\n        if (cVar5 == 'd') {\ncode_r0x0043333a:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x0043333e:\n            cVar5 = fcn.004028a1(0);\n        }\n        else if (cVar5 < 'Y') {\n            if (cVar5 == 'X') {\n                arg_8h = 1;\ncode_r0x004332e1:\n                cVar5 = fcn.00403af3(arg_8h);\n            }\n            else {\n                if (cVar5 != 'A') {\n                    if (cVar5 == 'C') goto code_r0x004332fa;\n                    if (cVar5 < 'E') goto code_r0x004335b2;\n                    if ('G' < cVar5) {\n                        if (cVar5 != 'S') goto code_r0x004335b2;\n                        goto code_r0x004332c9;\n                    }\n                }\ncode_r0x00433348:\n                cVar5 = fcn.00402991();\n            }\n        }\n        else if (cVar5 == 'Z') {\n            cVar5 = fcn.00401843();\n        }\n        else {\n            if (cVar5 == 'a') goto code_r0x00433348;\n            if (cVar5 != 'c') goto code_r0x004335b2;\ncode_r0x004332fa:\n            cVar5 = fcn.00401992(0);\n        }\n    }\n    else if (cVar5 < 'q') {\n        if (cVar5 == 'p') {\n            cVar5 = fcn.004010e1();\n        }\n        else {\n            if (cVar5 < 'h') goto code_r0x00433348;\n            if (cVar5 == 'i') goto code_r0x0043333a;\n            if (cVar5 == 'n') {\n                cVar5 = fcn.0040303f();\n            }\n            else {\n                if (cVar5 != 'o') goto code_r0x004335b2;\n                cVar5 = fcn.00401d70();\n            }\n        }\n    }\n    else {\n        if (cVar5 != 's') {\n            if (cVar5 != 'u') {\n                if (cVar5 != 'x') goto code_r0x004335b2;\n                arg_8h = 0;\n                goto code_r0x004332e1;\n            }\n            goto code_r0x0043333e;\n        }\ncode_r0x004332c9:\n        cVar5 = fcn.00401a82();\n    }\n    if ((cVar5 != '\\0') && (*(param_1 + 0xb) == '\\0')) {\n        uVar9 = param_1[7];\n        uVar12 = 0;\n        arg_ch = 0;\n        if ((uVar9 >> 4 & 1) != 0) {\n            if (((uVar9 >> 6 & 1) == 0) && ((uVar9 & 1) == 0)) {\n                if ((uVar9 >> 1 & 1) != 0) {\n                    uVar12 = 1;\n                    arg_ch = 1;\n                }\n            }\n            else {\n                arg_ch = 1;\n                uVar12 = 1;\n            }\n        }\n        cVar5 = *(param_1 + 0x2d);\n        if (((cVar5 != 'x') && (cVar5 != 'X')) || (bVar3 = true,  (uVar9 >> 5 & 1) == 0)) {\n            bVar3 = false;\n        }\n        if ((cVar5 == 'a') || (bVar4 = false,  cVar5 == 'A')) {\n            bVar4 = true;\n        }\n        if ((bVar3) || (bVar4)) {\n            (&stack0xfffffff0)[uVar12] = 0x30;\n            if ((cVar5 == 'X') || (cVar5 == 'A')) {\n                uVar6 = 0x58;\n            }\n            else {\n                uVar6 = 0x78;\n            }\n            (&stack0xfffffff1)[uVar12] = uVar6;\n            uVar12 = uVar12 + 2;\n            arg_ch = uVar12;\n        }\n        iVar8 = (param_1[8] - param_1[0xd]) - uVar12;\n        if (((uVar9 & 0xc) == 0) && (uVar9 = param_1[2],  0 < iVar8)) {\n            while( true ) {\n                arg_ch = 0x20;\n                iVar13 = 0x433452;\n                cVar5 = fcn.00401965(0x20, uVar9);\n                if (cVar5 == '\\0') break;\n                uVar12 = param_1[5];\n                param_1[5] = uVar12 + 1;\n                if ((uVar12 == 0xfffffffe) || (iVar8 <= iVar13 + 1)) goto code_r0x0043347e;\n            }\n            param_1[5] = 0xffffffff;\n        }\ncode_r0x0043347e:\n        arg_10h = param_1 + 5;\n        unaff_EBX = 0x43349c;\n        fcn.00402db0(&stack0xfffffff0, arg_ch, arg_10h, param_1[2]);\n        if (((param_1[7] >> 3 & 1) != 0) && ((param_1[7] >> 2 & 1) == 0)) {\n            iVar8 = 0;\n            uVar9 = param_1[2];\n            if (0 < arg_ch) {\n                while( true ) {\n                    arg_ch = uVar9;\n                    unaff_EBX = 0x4334cc;\n                    uVar9 = arg_ch;\n                    cVar5 = fcn.00401965(0x30, arg_ch);\n                    if (cVar5 == '\\0') break;\n                    uVar12 = *arg_10h;\n                    *arg_10h = uVar12 + 1;\n                    if ((uVar12 == 0xfffffffe) || (iVar8 = iVar8 + 1,  arg_ch <= iVar8)) goto code_r0x004334f0;\n                }\n                *arg_10h = 0xffffffff;\n            }\n        }\ncode_r0x004334f0:\n        if ((*(param_1 + 0xe) == '\\0') || (param_1[0xd] < 1)) {\n            unaff_EBX = param_1[2];\n            fcn.00402db0(param_1[0xc], param_1[0xd], arg_10h, unaff_EBX);\n        }\n        else {\n            puVar10 = param_1[0xc];\n            uVar9 = 0;\n            do {\n                uVar1 = *puVar10;\n                puVar10 = puVar10 + 1;\n                iVar13 = 0;\n                iVar8 = fcn.00402f72(&stack0xffffffec, &stack0xfffffff0, 6, uVar1, param_1[2]);\n                if ((iVar8 != 0) || (iVar13 == 0)) {\n                    *arg_10h = 0xffffffff;\n                    break;\n                }\n                fcn.00402db0(&stack0xfffffff0, iVar13, arg_10h, param_1[2]);\n                uVar9 = uVar9 + 1;\n            } while (uVar9 != param_1[0xd]);\n        }\n        if (((-1 < *arg_10h) && ((param_1[7] >> 2 & 1) != 0)) && (uVar9 = param_1[2],  0 < arg_ch)) {\n            while (cVar5 = fcn.00401965(0x20, uVar9),  cVar5 != '\\0') {\n                uVar12 = *arg_10h;\n                *arg_10h = uVar12 + 1;\n                if ((uVar12 == 0xfffffffe) || (iVar11 = iVar11 + 1,  arg_ch <= iVar11)) goto code_r0x004335b2;\n            }\n            *arg_10h = 0xffffffff;\n        }\n    }\ncode_r0x004335b2:\n    uVar9 = fcn.0040241e(unaff_EBX);\n    return uVar9;\n}\n",
        "token_count": 3001
    },
    "00402590": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402590(uint32_t *param_1)\n\n{\n    uint32_t *arg_10h;\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    bool bVar6;\n    bool bVar7;\n    char cVar8;\n    uchar uVar9;\n    uint32_t in_EAX;\n    char *pcVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint16_t *puVar14;\n    int32_t iVar15;\n    uint unaff_EBX;\n    uint arg_8h;\n    int32_t iStack28;\n    int32_t arg_ch;\n    \n    cVar8 = *(param_1 + 0x2d);\n    pcVar10 = in_EAX & 0xffffff00;\n    if (cVar8 != 'F') {\n        if (cVar8 == 'N') {\n            pcVar10 = *param_1 & 8;\n            if (pcVar10 != NULL) goto code_r0x00431ac8;\n            *(param_1 + 6) = 8;\ncode_r0x004319a2:\n            uVar11 = param_1[2];\n            *(uVar11 + 0x1c) = 1;\n            *(uVar11 + 0x18) = 0x16;\n            uVar11 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n            return uVar11 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x004319a2;\n        if (cVar8 < 'k') {\n            if (cVar8 == 'j') {\n                param_1[10] = 5;\n                goto code_r0x00431ac8;\n            }\n            if (cVar8 == 'I') {\n                pcVar3 = param_1[3];\n                cVar8 = *pcVar3;\n                if (cVar8 == '3') {\n                    if (pcVar3[1] == '2') {\n                        pcVar10 = pcVar3 + 2;\n                        param_1[10] = 10;\n                        param_1[3] = pcVar10;\n                    }\n                }\n                else if (cVar8 == '6') {\n                    if (pcVar3[1] == '4') {\n                        pcVar10 = pcVar3 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = pcVar10;\n                    }\n                }\n                else if ((((cVar8 == 'd') || (cVar8 == 'i')) || (cVar8 == 'o')) ||\n                        (((cVar8 == 'u' || (cVar8 == 'x')) || (cVar8 == 'X')))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x00431ac8;\n            }\n            if (cVar8 == 'L') {\n                param_1[10] = 8;\n                goto code_r0x00431ac8;\n            }\n            if (cVar8 == 'T') {\n                param_1[10] = 0xd;\n                goto code_r0x00431ac8;\n            }\n            if (cVar8 != 'h') goto code_r0x00431ac8;\n            if (*param_1[3] == 'h') {\n                param_1[3] = param_1[3] + 1;\n                pcVar10 = 0x1;\n            }\n            else {\n                pcVar10 = 0x2;\n            }\n        }\n        else {\n            if (cVar8 != 'l') {\n                if (cVar8 == 't') {\n                    param_1[10] = 7;\n                }\n                else if (cVar8 == 'w') {\n                    param_1[10] = 0xc;\n                }\n                else if (cVar8 == 'z') {\n                    param_1[10] = 6;\n                }\n                goto code_r0x00431ac8;\n            }\n            if (*param_1[3] == 'l') {\n                param_1[3] = param_1[3] + 1;\n                pcVar10 = 0x4;\n            }\n            else {\n                pcVar10 = 0x3;\n            }\n        }\n        param_1[10] = pcVar10;\ncode_r0x00431ac8:\n        return CONCAT31(pcVar10 >> 8, 1);\n    }\n    pcVar10 = *param_1 & 8;\n    if (pcVar10 != NULL) goto code_r0x00431ac8;\n    *(param_1 + 6) = 7;\n    cVar8 = *(param_1 + 0x2d);\n    if (cVar8 < 'e') {\n        if (cVar8 == 'd') {\ncode_r0x00433757:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x0043375b:\n            cVar8 = fcn.00402775(0);\n        }\n        else if (cVar8 < 'Y') {\n            if (cVar8 == 'X') {\n                arg_8h = 1;\ncode_r0x004336fe:\n                cVar8 = fcn.00404066(arg_8h);\n            }\n            else {\n                if (cVar8 != 'A') {\n                    if (cVar8 == 'C') goto code_r0x00433717;\n                    if (cVar8 < 'E') goto code_r0x00433a12;\n                    if ('G' < cVar8) {\n                        if (cVar8 != 'S') goto code_r0x00433a12;\n                        goto code_r0x004336e6;\n                    }\n                }\ncode_r0x00433765:\n                cVar8 = fcn.00402a9a();\n            }\n        }\n        else if (cVar8 == 'Z') {\n            cVar8 = fcn.004036a7();\n        }\n        else {\n            if (cVar8 == 'a') goto code_r0x00433765;\n            if (cVar8 != 'c') goto code_r0x00433a12;\ncode_r0x00433717:\n            cVar8 = fcn.00402e23(0);\n        }\n    }\n    else if (cVar8 < 'q') {\n        if (cVar8 == 'p') {\n            cVar8 = fcn.00403021();\n        }\n        else {\n            if (cVar8 < 'h') goto code_r0x00433765;\n            if (cVar8 == 'i') goto code_r0x00433757;\n            if (cVar8 == 'n') {\n                cVar8 = fcn.004021c1();\n            }\n            else {\n                if (cVar8 != 'o') goto code_r0x00433a12;\n                cVar8 = fcn.00401398();\n            }\n        }\n    }\n    else {\n        if (cVar8 != 's') {\n            if (cVar8 != 'u') {\n                if (cVar8 != 'x') goto code_r0x00433a12;\n                arg_8h = 0;\n                goto code_r0x004336fe;\n            }\n            goto code_r0x0043375b;\n        }\ncode_r0x004336e6:\n        cVar8 = fcn.00402789();\n    }\n    if ((cVar8 != '\\0') && (*(param_1 + 0xb) == '\\0')) {\n        iVar12 = 0;\n        iStack28 = 0;\n        if ((param_1[7] >> 4 & 1) != 0) {\n            if (((param_1[7] >> 6 & 1) == 0) && ((*(param_1 + 7) & 1) == 0)) {\n                if ((param_1[7] >> 1 & 1) != 0) {\n                    iVar12 = 1;\n                    iStack28 = 1;\n                }\n            }\n            else {\n                iStack28 = 1;\n                iVar12 = 1;\n            }\n        }\n        cVar8 = *(param_1 + 0x2d);\n        if (((cVar8 != 'x') && (cVar8 != 'X')) || (bVar6 = true,  (param_1[7] >> 5 & 1) == 0)) {\n            bVar6 = false;\n        }\n        if ((cVar8 == 'a') || (bVar7 = false,  cVar8 == 'A')) {\n            bVar7 = true;\n        }\n        if ((bVar6) || (bVar7)) {\n            (&stack0xffffffec)[iVar12] = 0x30;\n            if ((cVar8 == 'X') || (cVar8 == 'A')) {\n                uVar9 = 0x58;\n            }\n            else {\n                uVar9 = 0x78;\n            }\n            (&stack0xffffffed)[iVar12] = uVar9;\n            iVar12 = iVar12 + 2;\n            iStack28 = iVar12;\n        }\n        iVar15 = (param_1[8] - param_1[0xd]) - iVar12;\n        if (((*(param_1 + 7) & 0xc) == 0) && (0 < iVar15)) {\n            uVar11 = param_1[5];\n            iVar13 = 0;\n            do {\n                uVar4 = param_1[0x112];\n                if (*(param_1[0x112] + 8) == *(uVar4 + 4)) {\n                    if (*(uVar4 + 0xc) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    param_1[5] = uVar11;\n                }\n                else {\n                    param_1[5] = uVar11 + 1;\n                    *(uVar4 + 8) = *(uVar4 + 8) + 1;\n                    **param_1[0x112] = 0x20;\n                    *param_1[0x112] = *param_1[0x112] + 1;\n                    uVar11 = param_1[5];\n                }\n                iVar12 = iStack28;\n            } while ((uVar11 != 0xffffffff) && (iVar13 = iVar13 + 1,  iVar13 < iVar15));\n        }\n        arg_10h = param_1 + 5;\n        ppiVar1 = param_1 + 0x112;\n        fcn.00404485(&stack0xffffffec, iVar12, arg_10h);\n        if (((param_1[7] >> 3 & 1) != 0) && (((param_1[7] >> 2 & 1) == 0 && (iVar12 = 0,  0 < iVar15)))) {\n            uVar11 = *arg_10h;\n            do {\n                piVar5 = *ppiVar1;\n                if (piVar5[2] == piVar5[1]) {\n                    if (*(piVar5 + 3) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    *arg_10h = uVar11;\n                }\n                else {\n                    *arg_10h = uVar11 + 1;\n                    piVar5[2] = piVar5[2] + 1;\n                    ***ppiVar1 = 0x30;\n                    **ppiVar1 = **ppiVar1 + 1;\n                    uVar11 = *arg_10h;\n                }\n            } while ((uVar11 != 0xffffffff) && (iVar12 = iVar12 + 1,  iVar12 < iVar15));\n        }\n        iVar12 = 0;\n        if ((*(param_1 + 0xe) == '\\0') || (param_1[0xd] < 1)) {\n            fcn.00404485(param_1[0xc], param_1[0xd], arg_10h);\n        }\n        else {\n            puVar14 = param_1[0xc];\n            uVar11 = 0;\n            do {\n                uVar2 = *puVar14;\n                puVar14 = puVar14 + 1;\n                arg_ch = 0;\n                iVar13 = fcn.00402f72(&stack0xffffffe8, &stack0xfffffff0, 6, uVar2, param_1[2]);\n                if ((iVar13 != 0) || (arg_ch == 0)) {\n                    *arg_10h = 0xffffffff;\n                    break;\n                }\n                fcn.00404485(&stack0xfffffff0, arg_ch, arg_10h);\n                uVar11 = uVar11 + 1;\n            } while (uVar11 != param_1[0xd]);\n        }\n        uVar11 = *arg_10h;\n        if (((-1 < uVar11) && ((param_1[7] >> 2 & 1) != 0)) && (0 < iVar15)) {\n            do {\n                piVar5 = *ppiVar1;\n                if (piVar5[2] == piVar5[1]) {\n                    if (*(piVar5 + 3) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    *arg_10h = uVar11;\n                }\n                else {\n                    *arg_10h = uVar11 + 1;\n                    piVar5[2] = piVar5[2] + 1;\n                    ***ppiVar1 = 0x20;\n                    **ppiVar1 = **ppiVar1 + 1;\n                    uVar11 = *arg_10h;\n                }\n            } while ((uVar11 != 0xffffffff) && (iVar12 = iVar12 + 1,  iVar12 < iVar15));\n        }\n    }\ncode_r0x00433a12:\n    uVar11 = fcn.0040241e(unaff_EBX);\n    return uVar11;\n}\n",
        "token_count": 3210
    },
    "00402793": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402793(uint32_t *param_1)\n\n{\n    uint32_t *arg_10h;\n    uint16_t uVar1;\n    char *pcVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uchar uVar6;\n    uint32_t in_EAX;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint16_t *puVar10;\n    uint32_t unaff_EBX;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint arg_8h;\n    int32_t iVar13;\n    uint32_t arg_ch;\n    \n    cVar5 = *(param_1 + 0x2d);\n    pcVar7 = in_EAX & 0xffffff00;\n    if (cVar5 != 'F') {\n        if (cVar5 == 'N') {\n            pcVar7 = *param_1 & 8;\n            if (pcVar7 != NULL) goto code_r0x004315a9;\n            *(param_1 + 6) = 8;\ncode_r0x00431483:\n            uVar9 = param_1[2];\n            *(uVar9 + 0x1c) = 1;\n            *(uVar9 + 0x18) = 0x16;\n            uVar9 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n            return uVar9 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x00431483;\n        if (cVar5 < 'k') {\n            if (cVar5 == 'j') {\n                param_1[10] = 5;\n                goto code_r0x004315a9;\n            }\n            if (cVar5 == 'I') {\n                pcVar2 = param_1[3];\n                cVar5 = *pcVar2;\n                if (cVar5 == '3') {\n                    if (pcVar2[1] == '2') {\n                        pcVar7 = pcVar2 + 2;\n                        param_1[10] = 10;\n                        param_1[3] = pcVar7;\n                    }\n                }\n                else if (cVar5 == '6') {\n                    if (pcVar2[1] == '4') {\n                        pcVar7 = pcVar2 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = pcVar7;\n                    }\n                }\n                else if ((((cVar5 == 'd') || (cVar5 == 'i')) || (cVar5 == 'o')) ||\n                        (((cVar5 == 'u' || (cVar5 == 'x')) || (cVar5 == 'X')))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x004315a9;\n            }\n            if (cVar5 == 'L') {\n                param_1[10] = 8;\n                goto code_r0x004315a9;\n            }\n            if (cVar5 == 'T') {\n                param_1[10] = 0xd;\n                goto code_r0x004315a9;\n            }\n            if (cVar5 != 'h') goto code_r0x004315a9;\n            if (*param_1[3] == 'h') {\n                param_1[3] = param_1[3] + 1;\n                pcVar7 = 0x1;\n            }\n            else {\n                pcVar7 = 0x2;\n            }\n        }\n        else {\n            if (cVar5 != 'l') {\n                if (cVar5 == 't') {\n                    param_1[10] = 7;\n                }\n                else if (cVar5 == 'w') {\n                    param_1[10] = 0xc;\n                }\n                else if (cVar5 == 'z') {\n                    param_1[10] = 6;\n                }\n                goto code_r0x004315a9;\n            }\n            if (*param_1[3] == 'l') {\n                param_1[3] = param_1[3] + 1;\n                pcVar7 = 0x4;\n            }\n            else {\n                pcVar7 = 0x3;\n            }\n        }\n        param_1[10] = pcVar7;\ncode_r0x004315a9:\n        return CONCAT31(pcVar7 >> 8, 1);\n    }\n    pcVar7 = *param_1 & 8;\n    if (pcVar7 != NULL) goto code_r0x004315a9;\n    *(param_1 + 6) = 7;\n    iVar11 = 0;\n    cVar5 = *(param_1 + 0x2d);\n    if (cVar5 < 'e') {\n        if (cVar5 == 'd') {\ncode_r0x00432af4:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x00432af8:\n            cVar5 = fcn.00402d65(0);\n        }\n        else if (cVar5 < 'Y') {\n            if (cVar5 == 'X') {\n                arg_8h = 1;\ncode_r0x00432a9b:\n                cVar5 = fcn.00402c98(arg_8h);\n            }\n            else {\n                if (cVar5 != 'A') {\n                    if (cVar5 == 'C') goto code_r0x00432ab4;\n                    if (cVar5 < 'E') goto code_r0x00432d6c;\n                    if ('G' < cVar5) {\n                        if (cVar5 != 'S') goto code_r0x00432d6c;\n                        goto code_r0x00432a83;\n                    }\n                }\ncode_r0x00432b02:\n                cVar5 = fcn.004033af();\n            }\n        }\n        else if (cVar5 == 'Z') {\n            cVar5 = fcn.004034e5();\n        }\n        else {\n            if (cVar5 == 'a') goto code_r0x00432b02;\n            if (cVar5 != 'c') goto code_r0x00432d6c;\ncode_r0x00432ab4:\n            cVar5 = fcn.004034e0(0);\n        }\n    }\n    else if (cVar5 < 'q') {\n        if (cVar5 == 'p') {\n            cVar5 = fcn.00401b9f();\n        }\n        else {\n            if (cVar5 < 'h') goto code_r0x00432b02;\n            if (cVar5 == 'i') goto code_r0x00432af4;\n            if (cVar5 == 'n') {\n                cVar5 = fcn.00401bdb();\n            }\n            else {\n                if (cVar5 != 'o') goto code_r0x00432d6c;\n                cVar5 = fcn.0040313e();\n            }\n        }\n    }\n    else {\n        if (cVar5 != 's') {\n            if (cVar5 != 'u') {\n                if (cVar5 != 'x') goto code_r0x00432d6c;\n                arg_8h = 0;\n                goto code_r0x00432a9b;\n            }\n            goto code_r0x00432af8;\n        }\ncode_r0x00432a83:\n        cVar5 = fcn.00402d1a();\n    }\n    if ((cVar5 != '\\0') && (*(param_1 + 0xb) == '\\0')) {\n        uVar9 = param_1[7];\n        uVar12 = 0;\n        arg_ch = 0;\n        if ((uVar9 >> 4 & 1) != 0) {\n            if (((uVar9 >> 6 & 1) == 0) && ((uVar9 & 1) == 0)) {\n                if ((uVar9 >> 1 & 1) != 0) {\n                    uVar12 = 1;\n                    arg_ch = 1;\n                }\n            }\n            else {\n                arg_ch = 1;\n                uVar12 = 1;\n            }\n        }\n        cVar5 = *(param_1 + 0x2d);\n        if (((cVar5 != 'x') && (cVar5 != 'X')) || (bVar3 = true,  (uVar9 >> 5 & 1) == 0)) {\n            bVar3 = false;\n        }\n        if ((cVar5 == 'a') || (bVar4 = false,  cVar5 == 'A')) {\n            bVar4 = true;\n        }\n        if ((bVar3) || (bVar4)) {\n            (&stack0xfffffff0)[uVar12] = 0x30;\n            if ((cVar5 == 'X') || (cVar5 == 'A')) {\n                uVar6 = 0x58;\n            }\n            else {\n                uVar6 = 0x78;\n            }\n            (&stack0xfffffff1)[uVar12] = uVar6;\n            uVar12 = uVar12 + 2;\n            arg_ch = uVar12;\n        }\n        iVar8 = (param_1[8] - param_1[0xd]) - uVar12;\n        if (((uVar9 & 0xc) == 0) && (uVar9 = param_1[2],  0 < iVar8)) {\n            while( true ) {\n                arg_ch = 0x20;\n                iVar13 = 0x432c0c;\n                cVar5 = fcn.00401965(0x20, uVar9);\n                if (cVar5 == '\\0') break;\n                uVar12 = param_1[5];\n                param_1[5] = uVar12 + 1;\n                if ((uVar12 == 0xfffffffe) || (iVar8 <= iVar13 + 1)) goto code_r0x00432c38;\n            }\n            param_1[5] = 0xffffffff;\n        }\ncode_r0x00432c38:\n        arg_10h = param_1 + 5;\n        unaff_EBX = 0x432c56;\n        fcn.00402db0(&stack0xfffffff0, arg_ch, arg_10h, param_1[2]);\n        if (((param_1[7] >> 3 & 1) != 0) && ((param_1[7] >> 2 & 1) == 0)) {\n            iVar8 = 0;\n            uVar9 = param_1[2];\n            if (0 < arg_ch) {\n                while( true ) {\n                    arg_ch = uVar9;\n                    unaff_EBX = 0x432c86;\n                    uVar9 = arg_ch;\n                    cVar5 = fcn.00401965(0x30, arg_ch);\n                    if (cVar5 == '\\0') break;\n                    uVar12 = *arg_10h;\n                    *arg_10h = uVar12 + 1;\n                    if ((uVar12 == 0xfffffffe) || (iVar8 = iVar8 + 1,  arg_ch <= iVar8)) goto code_r0x00432caa;\n                }\n                *arg_10h = 0xffffffff;\n            }\n        }\ncode_r0x00432caa:\n        if ((*(param_1 + 0xe) == '\\0') || (param_1[0xd] < 1)) {\n            unaff_EBX = param_1[2];\n            fcn.00402db0(param_1[0xc], param_1[0xd], arg_10h, unaff_EBX);\n        }\n        else {\n            puVar10 = param_1[0xc];\n            uVar9 = 0;\n            do {\n                uVar1 = *puVar10;\n                puVar10 = puVar10 + 1;\n                iVar13 = 0;\n                iVar8 = fcn.00402f72(&stack0xffffffec, &stack0xfffffff0, 6, uVar1, param_1[2]);\n                if ((iVar8 != 0) || (iVar13 == 0)) {\n                    *arg_10h = 0xffffffff;\n                    break;\n                }\n                fcn.00402db0(&stack0xfffffff0, iVar13, arg_10h, param_1[2]);\n                uVar9 = uVar9 + 1;\n            } while (uVar9 != param_1[0xd]);\n        }\n        if (((-1 < *arg_10h) && ((param_1[7] >> 2 & 1) != 0)) && (uVar9 = param_1[2],  0 < arg_ch)) {\n            while (cVar5 = fcn.00401965(0x20, uVar9),  cVar5 != '\\0') {\n                uVar12 = *arg_10h;\n                *arg_10h = uVar12 + 1;\n                if ((uVar12 == 0xfffffffe) || (iVar11 = iVar11 + 1,  arg_ch <= iVar11)) goto code_r0x00432d6c;\n            }\n            *arg_10h = 0xffffffff;\n        }\n    }\ncode_r0x00432d6c:\n    uVar9 = fcn.0040241e(unaff_EBX);\n    return uVar9;\n}\n",
        "token_count": 3026
    },
    "004027d9": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004027d9(uint32_t *param_1)\n\n{\n    uint32_t *arg_10h;\n    uint32_t *puVar1;\n    int32_t **ppiVar2;\n    uint16_t uVar3;\n    int16_t iVar4;\n    uint16_t *puVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    bool bVar8;\n    bool bVar9;\n    char cVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint32_t arg_ch;\n    uint unaff_EBX;\n    uint16_t *puVar14;\n    ushort uVar15;\n    int32_t iVar16;\n    uint arg_8h;\n    ushort uVar17;\n    int32_t iVar18;\n    int16_t iVar19;\n    uint32_t uVar20;\n    \n    uVar3 = *(param_1 + 0x2e);\n    puVar14 = uVar3;\n    if (puVar14 != 0x46) {\n        if (puVar14 == 0x4e) {\n            puVar14 = *param_1 & 8;\n            if (puVar14 != NULL) goto code_r0x004327da;\n            *(param_1 + 6) = 8;\ncode_r0x0043268e:\n            uVar11 = param_1[2];\n            *(uVar11 + 0x1c) = 1;\n            *(uVar11 + 0x18) = 0x16;\n            uVar11 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n            return uVar11 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x0043268e;\n        if (uVar3 < 0x6b) {\n            if (uVar3 == 0x6a) {\n                param_1[10] = 5;\n                goto code_r0x004327da;\n            }\n            if (puVar14 == 0x49) {\n                puVar5 = param_1[3];\n                puVar14 = *puVar5;\n                if (puVar14 == 0x33) {\n                    if (puVar5[1] == 0x32) {\n                        puVar14 = puVar5 + 2;\n                        param_1[10] = 10;\n                        param_1[3] = puVar14;\n                    }\n                }\n                else if (puVar14 == 0x36) {\n                    if (puVar5[1] == 0x34) {\n                        puVar14 = puVar5 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = puVar14;\n                    }\n                }\n                else if ((((puVar14 == 0x64) || (puVar14 == 0x69)) || (puVar14 == 0x6f)) ||\n                        (((puVar14 == 0x75 || (puVar14 == 0x78)) || (puVar14 == 0x58)))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x004327da;\n            }\n            if (puVar14 == 0x4c) {\n                param_1[10] = 8;\n                goto code_r0x004327da;\n            }\n            if (puVar14 == 0x54) {\n                param_1[10] = 0xd;\n                goto code_r0x004327da;\n            }\n            if (uVar3 != 0x68) goto code_r0x004327da;\n            if (*param_1[3] == 0x68) {\n                param_1[3] = param_1[3] + 1;\n                puVar14 = 0x1;\n            }\n            else {\n                puVar14 = 0x2;\n            }\n        }\n        else {\n            if (uVar3 != 0x6c) {\n                if (puVar14 == 0x74) {\n                    param_1[10] = 7;\n                }\n                else if (puVar14 == 0x77) {\n                    param_1[10] = 0xc;\n                }\n                else if (puVar14 == 0x7a) {\n                    param_1[10] = 6;\n                }\n                goto code_r0x004327da;\n            }\n            if (*param_1[3] == 0x6c) {\n                param_1[3] = param_1[3] + 1;\n                puVar14 = 0x4;\n            }\n            else {\n                puVar14 = 0x3;\n            }\n        }\n        param_1[10] = puVar14;\ncode_r0x004327da:\n        return CONCAT31(puVar14 >> 8, 1);\n    }\n    puVar14 = *param_1 & 8;\n    if (puVar14 != NULL) goto code_r0x004327da;\n    *(param_1 + 6) = 7;\n    uVar3 = *(param_1 + 0x2e);\n    iVar19 = 0x41;\n    if (uVar3 < 0x65) {\n        if (uVar3 == 100) {\ncode_r0x004356b5:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x004356b9:\n            cVar10 = fcn.00402031(0);\n        }\n        else if (uVar3 < 0x59) {\n            if (uVar3 == 0x58) {\n                arg_8h = 1;\ncode_r0x0043565c:\n                cVar10 = fcn.00402086(arg_8h);\n            }\n            else {\n                if (uVar3 != 0x41) {\n                    if (uVar3 == 0x43) goto code_r0x00435675;\n                    if (uVar3 < 0x45) goto code_r0x00435a10;\n                    if (0x47 < uVar3) {\n                        if (uVar3 != 0x53) goto code_r0x00435a10;\n                        goto code_r0x00435644;\n                    }\n                }\ncode_r0x004356c3:\n                cVar10 = fcn.00402d8d();\n            }\n        }\n        else if (uVar3 == 0x5a) {\n            cVar10 = fcn.004033cd();\n        }\n        else {\n            if (uVar3 == 0x61) goto code_r0x004356c3;\n            if (uVar3 != 99) goto code_r0x00435a10;\ncode_r0x00435675:\n            cVar10 = fcn.00401dfc(0);\n        }\n    }\n    else if (uVar3 < 0x71) {\n        if (uVar3 == 0x70) {\n            cVar10 = fcn.004012a8();\n        }\n        else {\n            if (uVar3 < 0x68) goto code_r0x004356c3;\n            if (uVar3 == 0x69) goto code_r0x004356b5;\n            if (uVar3 == 0x6e) {\n                cVar10 = fcn.00401c7b();\n            }\n            else {\n                if (uVar3 != 0x6f) goto code_r0x00435a10;\n                cVar10 = fcn.00401d93();\n            }\n        }\n    }\n    else {\n        if (uVar3 != 0x73) {\n            if (uVar3 != 0x75) {\n                if (uVar3 != 0x78) goto code_r0x00435a10;\n                arg_8h = 0;\n                goto code_r0x0043565c;\n            }\n            goto code_r0x004356b9;\n        }\ncode_r0x00435644:\n        iVar19 = 0x41;\n        cVar10 = fcn.00402b12();\n    }\n    if (((cVar10 != '\\0') && (cVar10 = fcn.00401d6b(),  cVar10 == '\\0')) && (*(param_1 + 0xb) == '\\0')) {\n        iVar12 = 0;\n        iVar18 = 0;\n        if ((param_1[7] >> 4 & 1) != 0) {\n            if (((param_1[7] >> 6 & 1) == 0) && ((*(param_1 + 7) & 1) == 0)) {\n                if ((param_1[7] >> 1 & 1) != 0) {\n                    iVar12 = 1;\n                    iVar18 = 1;\n                }\n            }\n            else {\n                iVar18 = 1;\n                iVar12 = 1;\n            }\n        }\n        iVar4 = *(param_1 + 0x2e);\n        if (((iVar4 != 0x78) && (iVar4 != 0x58)) || (bVar8 = true,  (param_1[7] >> 5 & 1) == 0)) {\n            bVar8 = false;\n        }\n        if ((iVar4 == 0x61) || (bVar9 = false,  iVar4 == iVar19)) {\n            bVar9 = true;\n        }\n        uVar17 = 0x30;\n        if ((bVar8) || (bVar9)) {\n            *(&stack0xfffffff0 + iVar12 * 2) = 0x30;\n            if ((iVar4 == 0x58) || (uVar15 = 0x78,  iVar4 == iVar19)) {\n                uVar15 = 0x58;\n            }\n            *(&stack0xfffffff2 + iVar12 * 2) = uVar15;\n            iVar12 = iVar12 + 2;\n            iVar18 = iVar12;\n        }\n        iVar16 = (param_1[8] - param_1[0xd]) - iVar12;\n        if (((*(param_1 + 7) & 0xc) == 0) && (0 < iVar16)) {\n            uVar11 = param_1[5];\n            iVar13 = 0;\n            do {\n                if (*(param_1[0x112] + 8) == *(param_1[0x112] + 4)) {\n                    if (*(param_1[0x112] + 0xc) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    param_1[5] = uVar11;\n                }\n                else {\n                    param_1[5] = uVar11 + 1;\n                    *(param_1[0x112] + 8) = *(param_1[0x112] + 8) + 1;\n                    **param_1[0x112] = 0x20;\n                    *param_1[0x112] = *param_1[0x112] + 2;\n                    uVar11 = param_1[5];\n                }\n                iVar12 = iVar18;\n            } while ((uVar11 != 0xffffffff) && (iVar13 = iVar13 + 1,  iVar13 < iVar16));\n        }\n        arg_10h = param_1 + 5;\n        fcn.00403657(&stack0xfffffff0, iVar12, arg_10h);\n        if (((param_1[7] >> 3 & 1) != 0) &&\n           ((puVar1 = param_1 + 5,  (param_1[7] >> 2 & 1) == 0 && (iVar12 = 0,  0 < iVar16)))) {\n            uVar11 = *puVar1;\n            do {\n                uVar6 = param_1[0x112];\n                if (*(uVar6 + 8) == *(uVar6 + 4)) {\n                    if (*(uVar6 + 0xc) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    *puVar1 = uVar11;\n                }\n                else {\n                    *puVar1 = uVar11 + 1;\n                    *(uVar6 + 8) = *(uVar6 + 8) + 1;\n                    **param_1[0x112] = uVar17;\n                    piVar7 = param_1[0x112];\n                    *piVar7 = *piVar7 + 2;\n                    uVar11 = *puVar1;\n                }\n            } while ((uVar11 != 0xffffffff) && (iVar12 = iVar12 + 1,  iVar12 < iVar16));\n        }\n        iVar12 = 0;\n        if ((*(param_1 + 0xe) == '\\0') && (uVar11 = param_1[0xd],  0 < uVar11)) {\n            uVar6 = param_1[2];\n            if (*(uVar6 + 0x14) == '\\0') {\n                fcn.004024f0();\n                uVar11 = param_1[0xd];\n            }\n            arg_ch = param_1[0xc];\n            uVar20 = 0;\n            if (uVar11 != 0) {\n                do {\n                    uVar17 = 0;\n                    iVar18 = fcn.0040123f(&stack0xffffffe8, arg_ch, *(*(uVar6 + 0xc) + 4), param_1[2]);\n                    ppiVar2 = param_1 + 0x112;\n                    if (iVar18 < 1) {\n                        param_1[5] = 0xffffffff;\n                        break;\n                    }\n                    piVar7 = *ppiVar2;\n                    if (piVar7[2] == piVar7[1]) {\n                        if (*(piVar7 + 3) == '\\0') {\n                            param_1[5] = 0xffffffff;\n                        }\n                        else {\n                            param_1[5] = param_1[5] + 1;\n                        }\n                    }\n                    else {\n                        param_1[5] = param_1[5] + 1;\n                        piVar7[2] = piVar7[2] + 1;\n                        ***ppiVar2 = uVar17;\n                        **ppiVar2 = **ppiVar2 + 2;\n                    }\n                    arg_ch = arg_ch + iVar18;\n                    uVar20 = uVar20 + 1;\n                } while (uVar20 != param_1[0xd]);\n            }\n        }\n        else {\n            fcn.00403657(param_1[0xc], param_1[0xd], param_1 + 5);\n        }\n        uVar11 = param_1[5];\n        if (((-1 < uVar11) && ((param_1[7] >> 2 & 1) != 0)) && (0 < iVar16)) {\n            do {\n                uVar6 = param_1[0x112];\n                if (*(uVar6 + 8) == *(uVar6 + 4)) {\n                    if (*(uVar6 + 0xc) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    *arg_10h = uVar11;\n                }\n                else {\n                    *arg_10h = uVar11 + 1;\n                    *(uVar6 + 8) = *(uVar6 + 8) + 1;\n                    **param_1[0x112] = 0x20;\n                    piVar7 = param_1[0x112];\n                    *piVar7 = *piVar7 + 2;\n                    uVar11 = *arg_10h;\n                }\n            } while ((uVar11 != 0xffffffff) && (iVar12 = iVar12 + 1,  iVar12 < iVar16));\n        }\n    }\ncode_r0x00435a10:\n    uVar11 = fcn.0040241e(unaff_EBX);\n    return uVar11;\n}\n",
        "token_count": 3632
    },
    "004028fb": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nushort __cdecl fcn.004028fb(uint arg_8h)\n\n{\n    if ((((arg_8h != 100) && (arg_8h != 0x69)) && (arg_8h != 0x6f)) &&\n       (((arg_8h != 0x75 && (arg_8h != 0x78)) && ((arg_8h != 0x58 && (arg_8h != 0x2a)))))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 116
    },
    "00402aea": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402aea(uint32_t *param_1)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t *puVar3;\n    bool bVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t *arg_ch;\n    uint32_t arg_ch_00;\n    uint32_t *puVar9;\n    uint32_t unaff_EBX;\n    int32_t iVar10;\n    uint16_t *puVar11;\n    ushort uVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint arg_8h;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    int16_t iVar17;\n    \n    uVar1 = *(param_1 + 0x2e);\n    puVar11 = uVar1;\n    if (puVar11 != 0x46) {\n        if (puVar11 == 0x4e) {\n            puVar11 = *param_1 & 8;\n            if (puVar11 != NULL) goto code_r0x00432016;\n            *(param_1 + 6) = 8;\ncode_r0x00431eca:\n            uVar8 = param_1[2];\n            *(uVar8 + 0x1c) = 1;\n            *(uVar8 + 0x18) = 0x16;\n            uVar8 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n            return uVar8 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x00431eca;\n        if (uVar1 < 0x6b) {\n            if (uVar1 == 0x6a) {\n                param_1[10] = 5;\n                goto code_r0x00432016;\n            }\n            if (puVar11 == 0x49) {\n                puVar3 = param_1[3];\n                puVar11 = *puVar3;\n                if (puVar11 == 0x33) {\n                    if (puVar3[1] == 0x32) {\n                        puVar11 = puVar3 + 2;\n                        param_1[10] = 10;\n                        param_1[3] = puVar11;\n                    }\n                }\n                else if (puVar11 == 0x36) {\n                    if (puVar3[1] == 0x34) {\n                        puVar11 = puVar3 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = puVar11;\n                    }\n                }\n                else if ((((puVar11 == 0x64) || (puVar11 == 0x69)) || (puVar11 == 0x6f)) ||\n                        (((puVar11 == 0x75 || (puVar11 == 0x78)) || (puVar11 == 0x58)))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x00432016;\n            }\n            if (puVar11 == 0x4c) {\n                param_1[10] = 8;\n                goto code_r0x00432016;\n            }\n            if (puVar11 == 0x54) {\n                param_1[10] = 0xd;\n                goto code_r0x00432016;\n            }\n            if (uVar1 != 0x68) goto code_r0x00432016;\n            if (*param_1[3] == 0x68) {\n                param_1[3] = param_1[3] + 1;\n                puVar11 = 0x1;\n            }\n            else {\n                puVar11 = 0x2;\n            }\n        }\n        else {\n            if (uVar1 != 0x6c) {\n                if (puVar11 == 0x74) {\n                    param_1[10] = 7;\n                }\n                else if (puVar11 == 0x77) {\n                    param_1[10] = 0xc;\n                }\n                else if (puVar11 == 0x7a) {\n                    param_1[10] = 6;\n                }\n                goto code_r0x00432016;\n            }\n            if (*param_1[3] == 0x6c) {\n                param_1[3] = param_1[3] + 1;\n                puVar11 = 0x4;\n            }\n            else {\n                puVar11 = 0x3;\n            }\n        }\n        param_1[10] = puVar11;\ncode_r0x00432016:\n        return CONCAT31(puVar11 >> 8, 1);\n    }\n    puVar11 = *param_1 & 8;\n    if (puVar11 != NULL) goto code_r0x00432016;\n    *(param_1 + 6) = 7;\n    iVar10 = 0;\n    uVar1 = *(param_1 + 0x2e);\n    iVar17 = 0x41;\n    if (uVar1 < 0x65) {\n        if (uVar1 == 100) {\ncode_r0x004344c2:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x004344c6:\n            cVar5 = fcn.00401393(0);\n        }\n        else if (uVar1 < 0x59) {\n            if (uVar1 == 0x58) {\n                arg_8h = 1;\ncode_r0x00434469:\n                cVar5 = fcn.004010af(arg_8h);\n            }\n            else {\n                if (uVar1 != 0x41) {\n                    if (uVar1 == 0x43) goto code_r0x00434482;\n                    if (uVar1 < 0x45) goto code_r0x0043474f;\n                    if (0x47 < uVar1) {\n                        if (uVar1 != 0x53) goto code_r0x0043474f;\n                        goto code_r0x00434451;\n                    }\n                }\ncode_r0x004344d0:\n                cVar5 = fcn.004018d9();\n            }\n        }\n        else if (uVar1 == 0x5a) {\n            cVar5 = fcn.00402243();\n        }\n        else {\n            if (uVar1 == 0x61) goto code_r0x004344d0;\n            if (uVar1 != 99) goto code_r0x0043474f;\ncode_r0x00434482:\n            cVar5 = fcn.00403689(0);\n        }\n    }\n    else if (uVar1 < 0x71) {\n        if (uVar1 == 0x70) {\n            cVar5 = fcn.00402d24();\n        }\n        else {\n            if (uVar1 < 0x68) goto code_r0x004344d0;\n            if (uVar1 == 0x69) goto code_r0x004344c2;\n            if (uVar1 == 0x6e) {\n                cVar5 = fcn.00403a4e();\n            }\n            else {\n                if (uVar1 != 0x6f) goto code_r0x0043474f;\n                cVar5 = fcn.0040167c();\n            }\n        }\n    }\n    else {\n        if (uVar1 != 0x73) {\n            if (uVar1 != 0x75) {\n                if (uVar1 != 0x78) goto code_r0x0043474f;\n                arg_8h = 0;\n                goto code_r0x00434469;\n            }\n            goto code_r0x004344c6;\n        }\ncode_r0x00434451:\n        iVar17 = 0x41;\n        cVar5 = fcn.00401136();\n    }\n    if ((cVar5 != '\\0') && (*(param_1 + 0xb) == '\\0')) {\n        arg_ch = NULL;\n        if (((param_1[7] >> 4 & 1) != 0) &&\n           (((arg_ch = 0x1,  (param_1[7] >> 6 & 1) == 0 && ((*(param_1 + 7) & 1) == 0)) &&\n            (arg_ch = NULL,  (param_1[7] >> 1 & 1) != 0)))) {\n            arg_ch = 0x1;\n        }\n        iVar2 = *(param_1 + 0x2e);\n        if (((iVar2 != 0x78) && (iVar2 != 0x58)) || (bVar14 = true,  (param_1[7] >> 5 & 1) == 0)) {\n            bVar14 = false;\n        }\n        if ((iVar2 == 0x61) || (bVar4 = false,  iVar2 == iVar17)) {\n            bVar4 = true;\n        }\n        uVar8 = 0x30;\n        if ((bVar14) || (bVar4)) {\n            *(&stack0xfffffff0 + arg_ch * 2) = 0x30;\n            if ((iVar2 == 0x58) || (uVar12 = 0x78,  iVar2 == iVar17)) {\n                uVar12 = 0x58;\n            }\n            *(&stack0xfffffff2 + arg_ch * 2) = uVar12;\n            arg_ch = arg_ch + 2;\n        }\n        iVar13 = (param_1[8] - param_1[0xd]) - arg_ch;\n        if ((*(param_1 + 7) & 0xc) == 0) {\n            uVar6 = param_1[2];\n            puVar9 = param_1 + 5;\n            if (0 < iVar13) {\n                do {\n                    uVar8 = 0x20;\n                    param_1 = 0x4345f7;\n                    arg_ch = puVar9;\n                    fcn.00401af0(0x20, puVar9, uVar6);\n                    if (*puVar9 == 0xffffffff) break;\n                    iVar10 = iVar10 + 1;\n                } while (iVar10 < iVar13);\n            }\n        }\n        unaff_EBX = 0x43462e;\n        fcn.00402126(&stack0xfffffff0, arg_ch, param_1 + 5, param_1[2]);\n        if (((param_1[7] >> 3 & 1) != 0) && ((param_1[7] >> 2 & 1) == 0)) {\n            uVar6 = param_1[2];\n            iVar10 = 0;\n            if (0 < iVar13) {\n                puVar9 = param_1 + 5;\n                do {\n                    unaff_EBX = 0x434662;\n                    arg_ch = puVar9;\n                    fcn.00401af0(uVar8, puVar9, uVar6);\n                    if (*puVar9 == 0xffffffff) break;\n                    iVar10 = iVar10 + 1;\n                } while (iVar10 < iVar13);\n            }\n        }\n        iVar10 = 0;\n        if ((*(param_1 + 0xe) == '\\0') && (uVar6 = param_1[0xd],  0 < uVar6)) {\n            uVar15 = param_1[2];\n            if (*(uVar15 + 0x14) == '\\0') {\n                unaff_EBX = 0x43469b;\n                fcn.004024f0();\n                uVar6 = param_1[0xd];\n            }\n            arg_ch_00 = param_1[0xc];\n            uVar16 = 0;\n            bVar14 = uVar6 == 0;\n            while (!bVar14) {\n                uVar8 = uVar8 & 0xffff0000;\n                iVar7 = fcn.0040123f(&stack0xffffffe4, arg_ch_00, *(*(uVar15 + 0xc) + 4), param_1[2]);\n                if (iVar7 < 1) {\n                    param_1[5] = 0xffffffff;\n                    break;\n                }\n                fcn.00401af0(uVar8, param_1 + 5, param_1[2]);\n                arg_ch_00 = arg_ch_00 + iVar7;\n                uVar16 = uVar16 + 1;\n                bVar14 = uVar16 == param_1[0xd];\n            }\n        }\n        else {\n            unaff_EBX = param_1[2];\n            fcn.00402126(param_1[0xc], param_1[0xd], param_1 + 5, unaff_EBX);\n        }\n        puVar9 = param_1 + 5;\n        if (((-1 < *puVar9) && ((param_1[7] >> 2 & 1) != 0)) && (uVar8 = param_1[2],  0 < iVar13)) {\n            do {\n                fcn.00401af0(0x20, puVar9, uVar8);\n                puVar9 = arg_ch;\n                if (*puVar9 == 0xffffffff) break;\n                iVar10 = iVar10 + 1;\n                arg_ch = puVar9;\n            } while (iVar10 < iVar13);\n        }\n    }\ncode_r0x0043474f:\n    uVar8 = fcn.0040241e(unaff_EBX);\n    return uVar8;\n}\n",
        "token_count": 3077
    },
    "00402dc4": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402dc4(uint32_t *param_1)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t *puVar3;\n    bool bVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t *arg_ch;\n    uint32_t arg_ch_00;\n    uint32_t *puVar9;\n    uint32_t unaff_EBX;\n    int32_t iVar10;\n    uint16_t *puVar11;\n    ushort uVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint arg_8h;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    int16_t iVar17;\n    \n    uVar1 = *(param_1 + 0x2e);\n    puVar11 = uVar1;\n    if (puVar11 != 0x46) {\n        if (puVar11 == 0x4e) {\n            puVar11 = *param_1 & 8;\n            if (puVar11 != NULL) goto code_r0x00432207;\n            *(param_1 + 6) = 8;\ncode_r0x004320bb:\n            uVar8 = param_1[2];\n            *(uVar8 + 0x1c) = 1;\n            *(uVar8 + 0x18) = 0x16;\n            uVar8 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n            return uVar8 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x004320bb;\n        if (uVar1 < 0x6b) {\n            if (uVar1 == 0x6a) {\n                param_1[10] = 5;\n                goto code_r0x00432207;\n            }\n            if (puVar11 == 0x49) {\n                puVar3 = param_1[3];\n                puVar11 = *puVar3;\n                if (puVar11 == 0x33) {\n                    if (puVar3[1] == 0x32) {\n                        puVar11 = puVar3 + 2;\n                        param_1[10] = 10;\n                        param_1[3] = puVar11;\n                    }\n                }\n                else if (puVar11 == 0x36) {\n                    if (puVar3[1] == 0x34) {\n                        puVar11 = puVar3 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = puVar11;\n                    }\n                }\n                else if ((((puVar11 == 0x64) || (puVar11 == 0x69)) || (puVar11 == 0x6f)) ||\n                        (((puVar11 == 0x75 || (puVar11 == 0x78)) || (puVar11 == 0x58)))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x00432207;\n            }\n            if (puVar11 == 0x4c) {\n                param_1[10] = 8;\n                goto code_r0x00432207;\n            }\n            if (puVar11 == 0x54) {\n                param_1[10] = 0xd;\n                goto code_r0x00432207;\n            }\n            if (uVar1 != 0x68) goto code_r0x00432207;\n            if (*param_1[3] == 0x68) {\n                param_1[3] = param_1[3] + 1;\n                puVar11 = 0x1;\n            }\n            else {\n                puVar11 = 0x2;\n            }\n        }\n        else {\n            if (uVar1 != 0x6c) {\n                if (puVar11 == 0x74) {\n                    param_1[10] = 7;\n                }\n                else if (puVar11 == 0x77) {\n                    param_1[10] = 0xc;\n                }\n                else if (puVar11 == 0x7a) {\n                    param_1[10] = 6;\n                }\n                goto code_r0x00432207;\n            }\n            if (*param_1[3] == 0x6c) {\n                param_1[3] = param_1[3] + 1;\n                puVar11 = 0x4;\n            }\n            else {\n                puVar11 = 0x3;\n            }\n        }\n        param_1[10] = puVar11;\ncode_r0x00432207:\n        return CONCAT31(puVar11 >> 8, 1);\n    }\n    puVar11 = *param_1 & 8;\n    if (puVar11 != NULL) goto code_r0x00432207;\n    *(param_1 + 6) = 7;\n    iVar10 = 0;\n    uVar1 = *(param_1 + 0x2e);\n    iVar17 = 0x41;\n    if (uVar1 < 0x65) {\n        if (uVar1 == 100) {\ncode_r0x00434900:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x00434904:\n            cVar5 = fcn.00401735(0);\n        }\n        else if (uVar1 < 0x59) {\n            if (uVar1 == 0x58) {\n                arg_8h = 1;\ncode_r0x004348a7:\n                cVar5 = fcn.004028f6(arg_8h);\n            }\n            else {\n                if (uVar1 != 0x41) {\n                    if (uVar1 == 0x43) goto code_r0x004348c0;\n                    if (uVar1 < 0x45) goto code_r0x00434b9c;\n                    if (0x47 < uVar1) {\n                        if (uVar1 != 0x53) goto code_r0x00434b9c;\n                        goto code_r0x0043488f;\n                    }\n                }\ncode_r0x0043490e:\n                cVar5 = fcn.00404381();\n            }\n        }\n        else if (uVar1 == 0x5a) {\n            cVar5 = fcn.00402d15();\n        }\n        else {\n            if (uVar1 == 0x61) goto code_r0x0043490e;\n            if (uVar1 != 99) goto code_r0x00434b9c;\ncode_r0x004348c0:\n            cVar5 = fcn.00402f2c(0);\n        }\n    }\n    else if (uVar1 < 0x71) {\n        if (uVar1 == 0x70) {\n            cVar5 = fcn.00403cd3();\n        }\n        else {\n            if (uVar1 < 0x68) goto code_r0x0043490e;\n            if (uVar1 == 0x69) goto code_r0x00434900;\n            if (uVar1 == 0x6e) {\n                cVar5 = fcn.004017b7();\n            }\n            else {\n                if (uVar1 != 0x6f) goto code_r0x00434b9c;\n                cVar5 = fcn.00403bf7();\n            }\n        }\n    }\n    else {\n        if (uVar1 != 0x73) {\n            if (uVar1 != 0x75) {\n                if (uVar1 != 0x78) goto code_r0x00434b9c;\n                arg_8h = 0;\n                goto code_r0x004348a7;\n            }\n            goto code_r0x00434904;\n        }\ncode_r0x0043488f:\n        iVar17 = 0x41;\n        cVar5 = fcn.0040232e();\n    }\n    if (((cVar5 != '\\0') && (cVar5 = fcn.0040272a(),  cVar5 == '\\0')) && (*(param_1 + 0xb) == '\\0')) {\n        arg_ch = NULL;\n        if (((((param_1[7] >> 4 & 1) != 0) && (arg_ch = 0x1,  (param_1[7] >> 6 & 1) == 0)) &&\n            ((*(param_1 + 7) & 1) == 0)) && (arg_ch = NULL,  (param_1[7] >> 1 & 1) != 0)) {\n            arg_ch = 0x1;\n        }\n        iVar2 = *(param_1 + 0x2e);\n        if (((iVar2 != 0x78) && (iVar2 != 0x58)) || (bVar14 = true,  (param_1[7] >> 5 & 1) == 0)) {\n            bVar14 = false;\n        }\n        if ((iVar2 == 0x61) || (bVar4 = false,  iVar2 == iVar17)) {\n            bVar4 = true;\n        }\n        uVar8 = 0x30;\n        if ((bVar14) || (bVar4)) {\n            *(&stack0xfffffff0 + arg_ch * 2) = 0x30;\n            if ((iVar2 == 0x58) || (uVar12 = 0x78,  iVar2 == iVar17)) {\n                uVar12 = 0x58;\n            }\n            *(&stack0xfffffff2 + arg_ch * 2) = uVar12;\n            arg_ch = arg_ch + 2;\n        }\n        iVar13 = (param_1[8] - param_1[0xd]) - arg_ch;\n        if ((*(param_1 + 7) & 0xc) == 0) {\n            uVar6 = param_1[2];\n            puVar9 = param_1 + 5;\n            if (0 < iVar13) {\n                do {\n                    uVar8 = 0x20;\n                    param_1 = 0x434a44;\n                    arg_ch = puVar9;\n                    fcn.00401af0(0x20, puVar9, uVar6);\n                    if (*puVar9 == 0xffffffff) break;\n                    iVar10 = iVar10 + 1;\n                } while (iVar10 < iVar13);\n            }\n        }\n        unaff_EBX = 0x434a7b;\n        fcn.00402126(&stack0xfffffff0, arg_ch, param_1 + 5, param_1[2]);\n        if (((param_1[7] >> 3 & 1) != 0) && ((param_1[7] >> 2 & 1) == 0)) {\n            uVar6 = param_1[2];\n            iVar10 = 0;\n            if (0 < iVar13) {\n                puVar9 = param_1 + 5;\n                do {\n                    unaff_EBX = 0x434aaf;\n                    arg_ch = puVar9;\n                    fcn.00401af0(uVar8, puVar9, uVar6);\n                    if (*puVar9 == 0xffffffff) break;\n                    iVar10 = iVar10 + 1;\n                } while (iVar10 < iVar13);\n            }\n        }\n        iVar10 = 0;\n        if ((*(param_1 + 0xe) == '\\0') && (uVar6 = param_1[0xd],  0 < uVar6)) {\n            uVar15 = param_1[2];\n            if (*(uVar15 + 0x14) == '\\0') {\n                unaff_EBX = 0x434ae8;\n                fcn.004024f0();\n                uVar6 = param_1[0xd];\n            }\n            arg_ch_00 = param_1[0xc];\n            uVar16 = 0;\n            bVar14 = uVar6 == 0;\n            while (!bVar14) {\n                uVar8 = uVar8 & 0xffff0000;\n                iVar7 = fcn.0040123f(&stack0xffffffe4, arg_ch_00, *(*(uVar15 + 0xc) + 4), param_1[2]);\n                if (iVar7 < 1) {\n                    param_1[5] = 0xffffffff;\n                    break;\n                }\n                fcn.00401af0(uVar8, param_1 + 5, param_1[2]);\n                arg_ch_00 = arg_ch_00 + iVar7;\n                uVar16 = uVar16 + 1;\n                bVar14 = uVar16 == param_1[0xd];\n            }\n        }\n        else {\n            unaff_EBX = param_1[2];\n            fcn.00402126(param_1[0xc], param_1[0xd], param_1 + 5, unaff_EBX);\n        }\n        puVar9 = param_1 + 5;\n        if (((-1 < *puVar9) && ((param_1[7] >> 2 & 1) != 0)) && (uVar8 = param_1[2],  0 < iVar13)) {\n            do {\n                fcn.00401af0(0x20, puVar9, uVar8);\n                puVar9 = arg_ch;\n                if (*puVar9 == 0xffffffff) break;\n                iVar10 = iVar10 + 1;\n                arg_ch = puVar9;\n            } while (iVar10 < iVar13);\n        }\n    }\ncode_r0x00434b9c:\n    uVar8 = fcn.0040241e(unaff_EBX);\n    return uVar8;\n}\n",
        "token_count": 3113
    },
    "00403111": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00403111(uint arg_8h)\n\n{\n    if ((((arg_8h != 'd') && (arg_8h != 'i')) && (arg_8h != 'o')) &&\n       (((arg_8h != 'u' && (arg_8h != 'x')) && ((arg_8h != 'X' && (arg_8h != '*')))))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 103
    },
    "00403a35": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403a35(uint32_t *param_1)\n\n{\n    uint32_t *arg_10h;\n    uint32_t *puVar1;\n    int32_t **ppiVar2;\n    uint16_t uVar3;\n    int16_t iVar4;\n    uint16_t *puVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    bool bVar8;\n    bool bVar9;\n    char cVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint32_t arg_ch;\n    uint unaff_EBX;\n    uint16_t *puVar14;\n    ushort uVar15;\n    int32_t iVar16;\n    uint arg_8h;\n    ushort uVar17;\n    int32_t iVar18;\n    int16_t iVar19;\n    uint32_t uVar20;\n    \n    uVar3 = *(param_1 + 0x2e);\n    puVar14 = uVar3;\n    if (puVar14 != 0x46) {\n        if (puVar14 == 0x4e) {\n            puVar14 = *param_1 & 8;\n            if (puVar14 != NULL) goto code_r0x004325e9;\n            *(param_1 + 6) = 8;\ncode_r0x0043249d:\n            uVar11 = param_1[2];\n            *(uVar11 + 0x1c) = 1;\n            *(uVar11 + 0x18) = 0x16;\n            uVar11 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n            return uVar11 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x0043249d;\n        if (uVar3 < 0x6b) {\n            if (uVar3 == 0x6a) {\n                param_1[10] = 5;\n                goto code_r0x004325e9;\n            }\n            if (puVar14 == 0x49) {\n                puVar5 = param_1[3];\n                puVar14 = *puVar5;\n                if (puVar14 == 0x33) {\n                    if (puVar5[1] == 0x32) {\n                        puVar14 = puVar5 + 2;\n                        param_1[10] = 10;\n                        param_1[3] = puVar14;\n                    }\n                }\n                else if (puVar14 == 0x36) {\n                    if (puVar5[1] == 0x34) {\n                        puVar14 = puVar5 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = puVar14;\n                    }\n                }\n                else if ((((puVar14 == 0x64) || (puVar14 == 0x69)) || (puVar14 == 0x6f)) ||\n                        (((puVar14 == 0x75 || (puVar14 == 0x78)) || (puVar14 == 0x58)))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x004325e9;\n            }\n            if (puVar14 == 0x4c) {\n                param_1[10] = 8;\n                goto code_r0x004325e9;\n            }\n            if (puVar14 == 0x54) {\n                param_1[10] = 0xd;\n                goto code_r0x004325e9;\n            }\n            if (uVar3 != 0x68) goto code_r0x004325e9;\n            if (*param_1[3] == 0x68) {\n                param_1[3] = param_1[3] + 1;\n                puVar14 = 0x1;\n            }\n            else {\n                puVar14 = 0x2;\n            }\n        }\n        else {\n            if (uVar3 != 0x6c) {\n                if (puVar14 == 0x74) {\n                    param_1[10] = 7;\n                }\n                else if (puVar14 == 0x77) {\n                    param_1[10] = 0xc;\n                }\n                else if (puVar14 == 0x7a) {\n                    param_1[10] = 6;\n                }\n                goto code_r0x004325e9;\n            }\n            if (*param_1[3] == 0x6c) {\n                param_1[3] = param_1[3] + 1;\n                puVar14 = 0x4;\n            }\n            else {\n                puVar14 = 0x3;\n            }\n        }\n        param_1[10] = puVar14;\ncode_r0x004325e9:\n        return CONCAT31(puVar14 >> 8, 1);\n    }\n    puVar14 = *param_1 & 8;\n    if (puVar14 != NULL) goto code_r0x004325e9;\n    *(param_1 + 6) = 7;\n    uVar3 = *(param_1 + 0x2e);\n    iVar19 = 0x41;\n    if (uVar3 < 0x65) {\n        if (uVar3 == 100) {\ncode_r0x0043518c:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x00435190:\n            cVar10 = fcn.00401d66(0);\n        }\n        else if (uVar3 < 0x59) {\n            if (uVar3 == 0x58) {\n                arg_8h = 1;\ncode_r0x00435133:\n                cVar10 = fcn.004036ac(arg_8h);\n            }\n            else {\n                if (uVar3 != 0x41) {\n                    if (uVar3 == 0x43) goto code_r0x0043514c;\n                    if (uVar3 < 0x45) goto code_r0x004354d8;\n                    if (0x47 < uVar3) {\n                        if (uVar3 != 0x53) goto code_r0x004354d8;\n                        goto code_r0x0043511b;\n                    }\n                }\ncode_r0x0043519a:\n                cVar10 = fcn.00403760();\n            }\n        }\n        else if (uVar3 == 0x5a) {\n            cVar10 = fcn.00404688();\n        }\n        else {\n            if (uVar3 == 0x61) goto code_r0x0043519a;\n            if (uVar3 != 99) goto code_r0x004354d8;\ncode_r0x0043514c:\n            cVar10 = fcn.00402d92(0);\n        }\n    }\n    else if (uVar3 < 0x71) {\n        if (uVar3 == 0x70) {\n            cVar10 = fcn.00401753();\n        }\n        else {\n            if (uVar3 < 0x68) goto code_r0x0043519a;\n            if (uVar3 == 0x69) goto code_r0x0043518c;\n            if (uVar3 == 0x6e) {\n                cVar10 = fcn.00403044();\n            }\n            else {\n                if (uVar3 != 0x6f) goto code_r0x004354d8;\n                cVar10 = fcn.00401b18();\n            }\n        }\n    }\n    else {\n        if (uVar3 != 0x73) {\n            if (uVar3 != 0x75) {\n                if (uVar3 != 0x78) goto code_r0x004354d8;\n                arg_8h = 0;\n                goto code_r0x00435133;\n            }\n            goto code_r0x00435190;\n        }\ncode_r0x0043511b:\n        iVar19 = 0x41;\n        cVar10 = fcn.00401b31();\n    }\n    if ((cVar10 != '\\0') && (*(param_1 + 0xb) == '\\0')) {\n        iVar12 = 0;\n        iVar18 = 0;\n        if ((param_1[7] >> 4 & 1) != 0) {\n            if (((param_1[7] >> 6 & 1) == 0) && ((*(param_1 + 7) & 1) == 0)) {\n                if ((param_1[7] >> 1 & 1) != 0) {\n                    iVar12 = 1;\n                    iVar18 = 1;\n                }\n            }\n            else {\n                iVar18 = 1;\n                iVar12 = 1;\n            }\n        }\n        iVar4 = *(param_1 + 0x2e);\n        if (((iVar4 != 0x78) && (iVar4 != 0x58)) || (bVar8 = true,  (param_1[7] >> 5 & 1) == 0)) {\n            bVar8 = false;\n        }\n        if ((iVar4 == 0x61) || (bVar9 = false,  iVar4 == iVar19)) {\n            bVar9 = true;\n        }\n        uVar17 = 0x30;\n        if ((bVar8) || (bVar9)) {\n            *(&stack0xfffffff0 + iVar12 * 2) = 0x30;\n            if ((iVar4 == 0x58) || (uVar15 = 0x78,  iVar4 == iVar19)) {\n                uVar15 = 0x58;\n            }\n            *(&stack0xfffffff2 + iVar12 * 2) = uVar15;\n            iVar12 = iVar12 + 2;\n            iVar18 = iVar12;\n        }\n        iVar16 = (param_1[8] - param_1[0xd]) - iVar12;\n        if (((*(param_1 + 7) & 0xc) == 0) && (0 < iVar16)) {\n            uVar11 = param_1[5];\n            iVar13 = 0;\n            do {\n                if (*(param_1[0x112] + 8) == *(param_1[0x112] + 4)) {\n                    if (*(param_1[0x112] + 0xc) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    param_1[5] = uVar11;\n                }\n                else {\n                    param_1[5] = uVar11 + 1;\n                    *(param_1[0x112] + 8) = *(param_1[0x112] + 8) + 1;\n                    **param_1[0x112] = 0x20;\n                    *param_1[0x112] = *param_1[0x112] + 2;\n                    uVar11 = param_1[5];\n                }\n                iVar12 = iVar18;\n            } while ((uVar11 != 0xffffffff) && (iVar13 = iVar13 + 1,  iVar13 < iVar16));\n        }\n        arg_10h = param_1 + 5;\n        fcn.00403657(&stack0xfffffff0, iVar12, arg_10h);\n        if (((param_1[7] >> 3 & 1) != 0) &&\n           ((puVar1 = param_1 + 5,  (param_1[7] >> 2 & 1) == 0 && (iVar12 = 0,  0 < iVar16)))) {\n            uVar11 = *puVar1;\n            do {\n                uVar6 = param_1[0x112];\n                if (*(uVar6 + 8) == *(uVar6 + 4)) {\n                    if (*(uVar6 + 0xc) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    *puVar1 = uVar11;\n                }\n                else {\n                    *puVar1 = uVar11 + 1;\n                    *(uVar6 + 8) = *(uVar6 + 8) + 1;\n                    **param_1[0x112] = uVar17;\n                    piVar7 = param_1[0x112];\n                    *piVar7 = *piVar7 + 2;\n                    uVar11 = *puVar1;\n                }\n            } while ((uVar11 != 0xffffffff) && (iVar12 = iVar12 + 1,  iVar12 < iVar16));\n        }\n        iVar12 = 0;\n        if ((*(param_1 + 0xe) == '\\0') && (uVar11 = param_1[0xd],  0 < uVar11)) {\n            uVar6 = param_1[2];\n            if (*(uVar6 + 0x14) == '\\0') {\n                fcn.004024f0();\n                uVar11 = param_1[0xd];\n            }\n            arg_ch = param_1[0xc];\n            uVar20 = 0;\n            if (uVar11 != 0) {\n                do {\n                    uVar17 = 0;\n                    iVar18 = fcn.0040123f(&stack0xffffffe8, arg_ch, *(*(uVar6 + 0xc) + 4), param_1[2]);\n                    ppiVar2 = param_1 + 0x112;\n                    if (iVar18 < 1) {\n                        param_1[5] = 0xffffffff;\n                        break;\n                    }\n                    piVar7 = *ppiVar2;\n                    if (piVar7[2] == piVar7[1]) {\n                        if (*(piVar7 + 3) == '\\0') {\n                            param_1[5] = 0xffffffff;\n                        }\n                        else {\n                            param_1[5] = param_1[5] + 1;\n                        }\n                    }\n                    else {\n                        param_1[5] = param_1[5] + 1;\n                        piVar7[2] = piVar7[2] + 1;\n                        ***ppiVar2 = uVar17;\n                        **ppiVar2 = **ppiVar2 + 2;\n                    }\n                    arg_ch = arg_ch + iVar18;\n                    uVar20 = uVar20 + 1;\n                } while (uVar20 != param_1[0xd]);\n            }\n        }\n        else {\n            fcn.00403657(param_1[0xc], param_1[0xd], param_1 + 5);\n        }\n        uVar11 = param_1[5];\n        if (((-1 < uVar11) && ((param_1[7] >> 2 & 1) != 0)) && (0 < iVar16)) {\n            do {\n                uVar6 = param_1[0x112];\n                if (*(uVar6 + 8) == *(uVar6 + 4)) {\n                    if (*(uVar6 + 0xc) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    *arg_10h = uVar11;\n                }\n                else {\n                    *arg_10h = uVar11 + 1;\n                    *(uVar6 + 8) = *(uVar6 + 8) + 1;\n                    **param_1[0x112] = 0x20;\n                    piVar7 = param_1[0x112];\n                    *piVar7 = *piVar7 + 2;\n                    uVar11 = *arg_10h;\n                }\n            } while ((uVar11 != 0xffffffff) && (iVar12 = iVar12 + 1,  iVar12 < iVar16));\n        }\n    }\ncode_r0x004354d8:\n    uVar11 = fcn.0040241e(unaff_EBX);\n    return uVar11;\n}\n",
        "token_count": 3614
    },
    "00403b84": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403b84(uint32_t *param_1)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t *puVar3;\n    bool bVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t *arg_ch;\n    uint32_t arg_ch_00;\n    uint32_t *puVar9;\n    uint32_t unaff_EBX;\n    int32_t iVar10;\n    uint16_t *puVar11;\n    ushort uVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint arg_8h;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    int16_t iVar17;\n    \n    uVar1 = *(param_1 + 0x2e);\n    puVar11 = uVar1;\n    if (puVar11 != 0x46) {\n        if (puVar11 == 0x4e) {\n            puVar11 = *param_1 & 8;\n            if (puVar11 != NULL) goto code_r0x004323f8;\n            *(param_1 + 6) = 8;\ncode_r0x004322ac:\n            uVar8 = param_1[2];\n            *(uVar8 + 0x1c) = 1;\n            *(uVar8 + 0x18) = 0x16;\n            uVar8 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n            return uVar8 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x004322ac;\n        if (uVar1 < 0x6b) {\n            if (uVar1 == 0x6a) {\n                param_1[10] = 5;\n                goto code_r0x004323f8;\n            }\n            if (puVar11 == 0x49) {\n                puVar3 = param_1[3];\n                puVar11 = *puVar3;\n                if (puVar11 == 0x33) {\n                    if (puVar3[1] == 0x32) {\n                        puVar11 = puVar3 + 2;\n                        param_1[10] = 10;\n                        param_1[3] = puVar11;\n                    }\n                }\n                else if (puVar11 == 0x36) {\n                    if (puVar3[1] == 0x34) {\n                        puVar11 = puVar3 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = puVar11;\n                    }\n                }\n                else if ((((puVar11 == 0x64) || (puVar11 == 0x69)) || (puVar11 == 0x6f)) ||\n                        (((puVar11 == 0x75 || (puVar11 == 0x78)) || (puVar11 == 0x58)))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x004323f8;\n            }\n            if (puVar11 == 0x4c) {\n                param_1[10] = 8;\n                goto code_r0x004323f8;\n            }\n            if (puVar11 == 0x54) {\n                param_1[10] = 0xd;\n                goto code_r0x004323f8;\n            }\n            if (uVar1 != 0x68) goto code_r0x004323f8;\n            if (*param_1[3] == 0x68) {\n                param_1[3] = param_1[3] + 1;\n                puVar11 = 0x1;\n            }\n            else {\n                puVar11 = 0x2;\n            }\n        }\n        else {\n            if (uVar1 != 0x6c) {\n                if (puVar11 == 0x74) {\n                    param_1[10] = 7;\n                }\n                else if (puVar11 == 0x77) {\n                    param_1[10] = 0xc;\n                }\n                else if (puVar11 == 0x7a) {\n                    param_1[10] = 6;\n                }\n                goto code_r0x004323f8;\n            }\n            if (*param_1[3] == 0x6c) {\n                param_1[3] = param_1[3] + 1;\n                puVar11 = 0x4;\n            }\n            else {\n                puVar11 = 0x3;\n            }\n        }\n        param_1[10] = puVar11;\ncode_r0x004323f8:\n        return CONCAT31(puVar11 >> 8, 1);\n    }\n    puVar11 = *param_1 & 8;\n    if (puVar11 != NULL) goto code_r0x004323f8;\n    *(param_1 + 6) = 7;\n    iVar10 = 0;\n    uVar1 = *(param_1 + 0x2e);\n    iVar17 = 0x41;\n    if (uVar1 < 0x65) {\n        if (uVar1 == 100) {\ncode_r0x00434d51:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x00434d55:\n            cVar5 = fcn.00401938(0);\n        }\n        else if (uVar1 < 0x59) {\n            if (uVar1 == 0x58) {\n                arg_8h = 1;\ncode_r0x00434cf8:\n                cVar5 = fcn.004021c6(arg_8h);\n            }\n            else {\n                if (uVar1 != 0x41) {\n                    if (uVar1 == 0x43) goto code_r0x00434d11;\n                    if (uVar1 < 0x45) goto code_r0x00434fde;\n                    if (0x47 < uVar1) {\n                        if (uVar1 != 0x53) goto code_r0x00434fde;\n                        goto code_r0x00434ce0;\n                    }\n                }\ncode_r0x00434d5f:\n                cVar5 = fcn.0040459d();\n            }\n        }\n        else if (uVar1 == 0x5a) {\n            cVar5 = fcn.004041a6();\n        }\n        else {\n            if (uVar1 == 0x61) goto code_r0x00434d5f;\n            if (uVar1 != 99) goto code_r0x00434fde;\ncode_r0x00434d11:\n            cVar5 = fcn.0040101e(0);\n        }\n    }\n    else if (uVar1 < 0x71) {\n        if (uVar1 == 0x70) {\n            cVar5 = fcn.00404502();\n        }\n        else {\n            if (uVar1 < 0x68) goto code_r0x00434d5f;\n            if (uVar1 == 0x69) goto code_r0x00434d51;\n            if (uVar1 == 0x6e) {\n                cVar5 = fcn.004019ec();\n            }\n            else {\n                if (uVar1 != 0x6f) goto code_r0x00434fde;\n                cVar5 = fcn.00401f41();\n            }\n        }\n    }\n    else {\n        if (uVar1 != 0x73) {\n            if (uVar1 != 0x75) {\n                if (uVar1 != 0x78) goto code_r0x00434fde;\n                arg_8h = 0;\n                goto code_r0x00434cf8;\n            }\n            goto code_r0x00434d55;\n        }\ncode_r0x00434ce0:\n        iVar17 = 0x41;\n        cVar5 = fcn.00402239();\n    }\n    if ((cVar5 != '\\0') && (*(param_1 + 0xb) == '\\0')) {\n        arg_ch = NULL;\n        if (((param_1[7] >> 4 & 1) != 0) &&\n           (((arg_ch = 0x1,  (param_1[7] >> 6 & 1) == 0 && ((*(param_1 + 7) & 1) == 0)) &&\n            (arg_ch = NULL,  (param_1[7] >> 1 & 1) != 0)))) {\n            arg_ch = 0x1;\n        }\n        iVar2 = *(param_1 + 0x2e);\n        if (((iVar2 != 0x78) && (iVar2 != 0x58)) || (bVar14 = true,  (param_1[7] >> 5 & 1) == 0)) {\n            bVar14 = false;\n        }\n        if ((iVar2 == 0x61) || (bVar4 = false,  iVar2 == iVar17)) {\n            bVar4 = true;\n        }\n        uVar8 = 0x30;\n        if ((bVar14) || (bVar4)) {\n            *(&stack0xfffffff0 + arg_ch * 2) = 0x30;\n            if ((iVar2 == 0x58) || (uVar12 = 0x78,  iVar2 == iVar17)) {\n                uVar12 = 0x58;\n            }\n            *(&stack0xfffffff2 + arg_ch * 2) = uVar12;\n            arg_ch = arg_ch + 2;\n        }\n        iVar13 = (param_1[8] - param_1[0xd]) - arg_ch;\n        if ((*(param_1 + 7) & 0xc) == 0) {\n            uVar6 = param_1[2];\n            puVar9 = param_1 + 5;\n            if (0 < iVar13) {\n                do {\n                    uVar8 = 0x20;\n                    param_1 = 0x434e86;\n                    arg_ch = puVar9;\n                    fcn.00401af0(0x20, puVar9, uVar6);\n                    if (*puVar9 == 0xffffffff) break;\n                    iVar10 = iVar10 + 1;\n                } while (iVar10 < iVar13);\n            }\n        }\n        unaff_EBX = 0x434ebd;\n        fcn.00402126(&stack0xfffffff0, arg_ch, param_1 + 5, param_1[2]);\n        if (((param_1[7] >> 3 & 1) != 0) && ((param_1[7] >> 2 & 1) == 0)) {\n            uVar6 = param_1[2];\n            iVar10 = 0;\n            if (0 < iVar13) {\n                puVar9 = param_1 + 5;\n                do {\n                    unaff_EBX = 0x434ef1;\n                    arg_ch = puVar9;\n                    fcn.00401af0(uVar8, puVar9, uVar6);\n                    if (*puVar9 == 0xffffffff) break;\n                    iVar10 = iVar10 + 1;\n                } while (iVar10 < iVar13);\n            }\n        }\n        iVar10 = 0;\n        if ((*(param_1 + 0xe) == '\\0') && (uVar6 = param_1[0xd],  0 < uVar6)) {\n            uVar15 = param_1[2];\n            if (*(uVar15 + 0x14) == '\\0') {\n                unaff_EBX = 0x434f2a;\n                fcn.004024f0();\n                uVar6 = param_1[0xd];\n            }\n            arg_ch_00 = param_1[0xc];\n            uVar16 = 0;\n            bVar14 = uVar6 == 0;\n            while (!bVar14) {\n                uVar8 = uVar8 & 0xffff0000;\n                iVar7 = fcn.0040123f(&stack0xffffffe4, arg_ch_00, *(*(uVar15 + 0xc) + 4), param_1[2]);\n                if (iVar7 < 1) {\n                    param_1[5] = 0xffffffff;\n                    break;\n                }\n                fcn.00401af0(uVar8, param_1 + 5, param_1[2]);\n                arg_ch_00 = arg_ch_00 + iVar7;\n                uVar16 = uVar16 + 1;\n                bVar14 = uVar16 == param_1[0xd];\n            }\n        }\n        else {\n            unaff_EBX = param_1[2];\n            fcn.00402126(param_1[0xc], param_1[0xd], param_1 + 5, unaff_EBX);\n        }\n        puVar9 = param_1 + 5;\n        if (((-1 < *puVar9) && ((param_1[7] >> 2 & 1) != 0)) && (uVar8 = param_1[2],  0 < iVar13)) {\n            do {\n                fcn.00401af0(0x20, puVar9, uVar8);\n                puVar9 = arg_ch;\n                if (*puVar9 == 0xffffffff) break;\n                iVar10 = iVar10 + 1;\n                arg_ch = puVar9;\n            } while (iVar10 < iVar13);\n        }\n    }\ncode_r0x00434fde:\n    uVar8 = fcn.0040241e(unaff_EBX);\n    return uVar8;\n}\n",
        "token_count": 3097
    },
    "00403cb0": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00403cb0(uint arg_8h)\n\n{\n    if ((((arg_8h != 'd') && (arg_8h != 'i')) && (arg_8h != 'o')) &&\n       (((arg_8h != 'u' && (arg_8h != 'x')) && ((arg_8h != 'X' && (arg_8h != '*')))))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 104
    },
    "00403e63": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403e63(uint32_t *param_1)\n\n{\n    uint32_t *arg_10h;\n    uint16_t uVar1;\n    char *pcVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uchar uVar6;\n    uint32_t in_EAX;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint16_t *puVar10;\n    uint32_t unaff_EBX;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint arg_8h;\n    int32_t iVar13;\n    uint32_t arg_ch;\n    \n    cVar5 = *(param_1 + 0x2d);\n    pcVar7 = in_EAX & 0xffffff00;\n    if (cVar5 != 'F') {\n        if (cVar5 == 'N') {\n            pcVar7 = *param_1 & 8;\n            if (pcVar7 != NULL) goto code_r0x0043175e;\n            *(param_1 + 6) = 8;\ncode_r0x00431638:\n            uVar9 = param_1[2];\n            *(uVar9 + 0x1c) = 1;\n            *(uVar9 + 0x18) = 0x16;\n            uVar9 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n            return uVar9 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x00431638;\n        if (cVar5 < 'k') {\n            if (cVar5 == 'j') {\n                param_1[10] = 5;\n                goto code_r0x0043175e;\n            }\n            if (cVar5 == 'I') {\n                pcVar2 = param_1[3];\n                cVar5 = *pcVar2;\n                if (cVar5 == '3') {\n                    if (pcVar2[1] == '2') {\n                        pcVar7 = pcVar2 + 2;\n                        param_1[10] = 10;\n                        param_1[3] = pcVar7;\n                    }\n                }\n                else if (cVar5 == '6') {\n                    if (pcVar2[1] == '4') {\n                        pcVar7 = pcVar2 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = pcVar7;\n                    }\n                }\n                else if ((((cVar5 == 'd') || (cVar5 == 'i')) || (cVar5 == 'o')) ||\n                        (((cVar5 == 'u' || (cVar5 == 'x')) || (cVar5 == 'X')))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x0043175e;\n            }\n            if (cVar5 == 'L') {\n                param_1[10] = 8;\n                goto code_r0x0043175e;\n            }\n            if (cVar5 == 'T') {\n                param_1[10] = 0xd;\n                goto code_r0x0043175e;\n            }\n            if (cVar5 != 'h') goto code_r0x0043175e;\n            if (*param_1[3] == 'h') {\n                param_1[3] = param_1[3] + 1;\n                pcVar7 = 0x1;\n            }\n            else {\n                pcVar7 = 0x2;\n            }\n        }\n        else {\n            if (cVar5 != 'l') {\n                if (cVar5 == 't') {\n                    param_1[10] = 7;\n                }\n                else if (cVar5 == 'w') {\n                    param_1[10] = 0xc;\n                }\n                else if (cVar5 == 'z') {\n                    param_1[10] = 6;\n                }\n                goto code_r0x0043175e;\n            }\n            if (*param_1[3] == 'l') {\n                param_1[3] = param_1[3] + 1;\n                pcVar7 = 0x4;\n            }\n            else {\n                pcVar7 = 0x3;\n            }\n        }\n        param_1[10] = pcVar7;\ncode_r0x0043175e:\n        return CONCAT31(pcVar7 >> 8, 1);\n    }\n    pcVar7 = *param_1 & 8;\n    if (pcVar7 != NULL) goto code_r0x0043175e;\n    *(param_1 + 6) = 7;\n    iVar11 = 0;\n    cVar5 = *(param_1 + 0x2d);\n    if (cVar5 < 'e') {\n        if (cVar5 == 'd') {\ncode_r0x00432f0e:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x00432f12:\n            cVar5 = fcn.004033c8(0);\n        }\n        else if (cVar5 < 'Y') {\n            if (cVar5 == 'X') {\n                arg_8h = 1;\ncode_r0x00432eb5:\n                cVar5 = fcn.00401a0a(arg_8h);\n            }\n            else {\n                if (cVar5 != 'A') {\n                    if (cVar5 == 'C') goto code_r0x00432ece;\n                    if (cVar5 < 'E') goto code_r0x00433195;\n                    if ('G' < cVar5) {\n                        if (cVar5 != 'S') goto code_r0x00433195;\n                        goto code_r0x00432e9d;\n                    }\n                }\ncode_r0x00432f1c:\n                cVar5 = fcn.0040130c();\n            }\n        }\n        else if (cVar5 == 'Z') {\n            cVar5 = fcn.0040400c();\n        }\n        else {\n            if (cVar5 == 'a') goto code_r0x00432f1c;\n            if (cVar5 != 'c') goto code_r0x00433195;\ncode_r0x00432ece:\n            cVar5 = fcn.004038eb(0);\n        }\n    }\n    else if (cVar5 < 'q') {\n        if (cVar5 == 'p') {\n            cVar5 = fcn.00404188();\n        }\n        else {\n            if (cVar5 < 'h') goto code_r0x00432f1c;\n            if (cVar5 == 'i') goto code_r0x00432f0e;\n            if (cVar5 == 'n') {\n                cVar5 = fcn.0040443a();\n            }\n            else {\n                if (cVar5 != 'o') goto code_r0x00433195;\n                cVar5 = fcn.00402c5c();\n            }\n        }\n    }\n    else {\n        if (cVar5 != 's') {\n            if (cVar5 != 'u') {\n                if (cVar5 != 'x') goto code_r0x00433195;\n                arg_8h = 0;\n                goto code_r0x00432eb5;\n            }\n            goto code_r0x00432f12;\n        }\ncode_r0x00432e9d:\n        cVar5 = fcn.00401a6e();\n    }\n    if (((cVar5 != '\\0') && (cVar5 = fcn.00402423(),  cVar5 == '\\0')) && (*(param_1 + 0xb) == '\\0')) {\n        uVar9 = param_1[7];\n        uVar12 = 0;\n        arg_ch = 0;\n        if ((uVar9 >> 4 & 1) != 0) {\n            if (((uVar9 >> 6 & 1) == 0) && ((uVar9 & 1) == 0)) {\n                if ((uVar9 >> 1 & 1) != 0) {\n                    uVar12 = 1;\n                    arg_ch = 1;\n                }\n            }\n            else {\n                arg_ch = 1;\n                uVar12 = 1;\n            }\n        }\n        cVar5 = *(param_1 + 0x2d);\n        if (((cVar5 != 'x') && (cVar5 != 'X')) || (bVar3 = true,  (uVar9 >> 5 & 1) == 0)) {\n            bVar3 = false;\n        }\n        if ((cVar5 == 'a') || (bVar4 = false,  cVar5 == 'A')) {\n            bVar4 = true;\n        }\n        if ((bVar3) || (bVar4)) {\n            (&stack0xfffffff0)[uVar12] = 0x30;\n            if ((cVar5 == 'X') || (cVar5 == 'A')) {\n                uVar6 = 0x58;\n            }\n            else {\n                uVar6 = 0x78;\n            }\n            (&stack0xfffffff1)[uVar12] = uVar6;\n            uVar12 = uVar12 + 2;\n            arg_ch = uVar12;\n        }\n        iVar8 = (param_1[8] - param_1[0xd]) - uVar12;\n        if (((uVar9 & 0xc) == 0) && (uVar9 = param_1[2],  0 < iVar8)) {\n            while( true ) {\n                arg_ch = 0x20;\n                iVar13 = 0x433035;\n                cVar5 = fcn.00401965(0x20, uVar9);\n                if (cVar5 == '\\0') break;\n                uVar12 = param_1[5];\n                param_1[5] = uVar12 + 1;\n                if ((uVar12 == 0xfffffffe) || (iVar8 <= iVar13 + 1)) goto code_r0x00433061;\n            }\n            param_1[5] = 0xffffffff;\n        }\ncode_r0x00433061:\n        arg_10h = param_1 + 5;\n        unaff_EBX = 0x43307f;\n        fcn.00402db0(&stack0xfffffff0, arg_ch, arg_10h, param_1[2]);\n        if (((param_1[7] >> 3 & 1) != 0) && ((param_1[7] >> 2 & 1) == 0)) {\n            iVar8 = 0;\n            uVar9 = param_1[2];\n            if (0 < arg_ch) {\n                while( true ) {\n                    arg_ch = uVar9;\n                    unaff_EBX = 0x4330af;\n                    uVar9 = arg_ch;\n                    cVar5 = fcn.00401965(0x30, arg_ch);\n                    if (cVar5 == '\\0') break;\n                    uVar12 = *arg_10h;\n                    *arg_10h = uVar12 + 1;\n                    if ((uVar12 == 0xfffffffe) || (iVar8 = iVar8 + 1,  arg_ch <= iVar8)) goto code_r0x004330d3;\n                }\n                *arg_10h = 0xffffffff;\n            }\n        }\ncode_r0x004330d3:\n        if ((*(param_1 + 0xe) == '\\0') || (param_1[0xd] < 1)) {\n            unaff_EBX = param_1[2];\n            fcn.00402db0(param_1[0xc], param_1[0xd], arg_10h, unaff_EBX);\n        }\n        else {\n            puVar10 = param_1[0xc];\n            uVar9 = 0;\n            do {\n                uVar1 = *puVar10;\n                puVar10 = puVar10 + 1;\n                iVar13 = 0;\n                iVar8 = fcn.00402f72(&stack0xffffffec, &stack0xfffffff0, 6, uVar1, param_1[2]);\n                if ((iVar8 != 0) || (iVar13 == 0)) {\n                    *arg_10h = 0xffffffff;\n                    break;\n                }\n                fcn.00402db0(&stack0xfffffff0, iVar13, arg_10h, param_1[2]);\n                uVar9 = uVar9 + 1;\n            } while (uVar9 != param_1[0xd]);\n        }\n        if (((-1 < *arg_10h) && ((param_1[7] >> 2 & 1) != 0)) && (uVar9 = param_1[2],  0 < arg_ch)) {\n            while (cVar5 = fcn.00401965(0x20, uVar9),  cVar5 != '\\0') {\n                uVar12 = *arg_10h;\n                *arg_10h = uVar12 + 1;\n                if ((uVar12 == 0xfffffffe) || (iVar11 = iVar11 + 1,  arg_ch <= iVar11)) goto code_r0x00433195;\n            }\n            *arg_10h = 0xffffffff;\n        }\n    }\ncode_r0x00433195:\n    uVar9 = fcn.0040241e(unaff_EBX);\n    return uVar9;\n}\n",
        "token_count": 3036
    },
    "00404566": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00404566(uint32_t *param_1)\n\n{\n    uint32_t *arg_10h;\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    bool bVar6;\n    bool bVar7;\n    char cVar8;\n    uchar uVar9;\n    uint32_t in_EAX;\n    char *pcVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint16_t *puVar14;\n    int32_t iVar15;\n    uint unaff_EBX;\n    uint arg_8h;\n    int32_t iStack28;\n    int32_t arg_ch;\n    \n    cVar8 = *(param_1 + 0x2d);\n    pcVar10 = in_EAX & 0xffffff00;\n    if (cVar8 != 'F') {\n        if (cVar8 == 'N') {\n            pcVar10 = *param_1 & 8;\n            if (pcVar10 != NULL) goto code_r0x00431e32;\n            *(param_1 + 6) = 8;\ncode_r0x00431d0c:\n            uVar11 = param_1[2];\n            *(uVar11 + 0x1c) = 1;\n            *(uVar11 + 0x18) = 0x16;\n            uVar11 = fcn.00402c20(0, 0, 0, 0, 0, param_1[2]);\n            return uVar11 & 0xffffff00;\n        }\n        if (param_1[10] != 0) goto code_r0x00431d0c;\n        if (cVar8 < 'k') {\n            if (cVar8 == 'j') {\n                param_1[10] = 5;\n                goto code_r0x00431e32;\n            }\n            if (cVar8 == 'I') {\n                pcVar3 = param_1[3];\n                cVar8 = *pcVar3;\n                if (cVar8 == '3') {\n                    if (pcVar3[1] == '2') {\n                        pcVar10 = pcVar3 + 2;\n                        param_1[10] = 10;\n                        param_1[3] = pcVar10;\n                    }\n                }\n                else if (cVar8 == '6') {\n                    if (pcVar3[1] == '4') {\n                        pcVar10 = pcVar3 + 2;\n                        param_1[10] = 0xb;\n                        param_1[3] = pcVar10;\n                    }\n                }\n                else if ((((cVar8 == 'd') || (cVar8 == 'i')) || (cVar8 == 'o')) ||\n                        (((cVar8 == 'u' || (cVar8 == 'x')) || (cVar8 == 'X')))) {\n                    param_1[10] = 9;\n                }\n                goto code_r0x00431e32;\n            }\n            if (cVar8 == 'L') {\n                param_1[10] = 8;\n                goto code_r0x00431e32;\n            }\n            if (cVar8 == 'T') {\n                param_1[10] = 0xd;\n                goto code_r0x00431e32;\n            }\n            if (cVar8 != 'h') goto code_r0x00431e32;\n            if (*param_1[3] == 'h') {\n                param_1[3] = param_1[3] + 1;\n                pcVar10 = 0x1;\n            }\n            else {\n                pcVar10 = 0x2;\n            }\n        }\n        else {\n            if (cVar8 != 'l') {\n                if (cVar8 == 't') {\n                    param_1[10] = 7;\n                }\n                else if (cVar8 == 'w') {\n                    param_1[10] = 0xc;\n                }\n                else if (cVar8 == 'z') {\n                    param_1[10] = 6;\n                }\n                goto code_r0x00431e32;\n            }\n            if (*param_1[3] == 'l') {\n                param_1[3] = param_1[3] + 1;\n                pcVar10 = 0x4;\n            }\n            else {\n                pcVar10 = 0x3;\n            }\n        }\n        param_1[10] = pcVar10;\ncode_r0x00431e32:\n        return CONCAT31(pcVar10 >> 8, 1);\n    }\n    pcVar10 = *param_1 & 8;\n    if (pcVar10 != NULL) goto code_r0x00431e32;\n    *(param_1 + 6) = 7;\n    cVar8 = *(param_1 + 0x2d);\n    if (cVar8 < 'e') {\n        if (cVar8 == 'd') {\ncode_r0x0043404c:\n            param_1[7] = param_1[7] | 0x10;\ncode_r0x00434050:\n            cVar8 = fcn.00401cbc(0);\n        }\n        else if (cVar8 < 'Y') {\n            if (cVar8 == 'X') {\n                arg_8h = 1;\ncode_r0x00433ff3:\n                cVar8 = fcn.00402630(arg_8h);\n            }\n            else {\n                if (cVar8 != 'A') {\n                    if (cVar8 == 'C') goto code_r0x0043400c;\n                    if (cVar8 < 'E') goto code_r0x00434307;\n                    if ('G' < cVar8) {\n                        if (cVar8 != 'S') goto code_r0x00434307;\n                        goto code_r0x00433fdb;\n                    }\n                }\ncode_r0x0043405a:\n                cVar8 = fcn.0040100a();\n            }\n        }\n        else if (cVar8 == 'Z') {\n            cVar8 = fcn.00403f99();\n        }\n        else {\n            if (cVar8 == 'a') goto code_r0x0043405a;\n            if (cVar8 != 'c') goto code_r0x00434307;\ncode_r0x0043400c:\n            cVar8 = fcn.00402397(0);\n        }\n    }\n    else if (cVar8 < 'q') {\n        if (cVar8 == 'p') {\n            cVar8 = fcn.0040453e();\n        }\n        else {\n            if (cVar8 < 'h') goto code_r0x0043405a;\n            if (cVar8 == 'i') goto code_r0x0043404c;\n            if (cVar8 == 'n') {\n                cVar8 = fcn.004026d5();\n            }\n            else {\n                if (cVar8 != 'o') goto code_r0x00434307;\n                cVar8 = fcn.00402fb3();\n            }\n        }\n    }\n    else {\n        if (cVar8 != 's') {\n            if (cVar8 != 'u') {\n                if (cVar8 != 'x') goto code_r0x00434307;\n                arg_8h = 0;\n                goto code_r0x00433ff3;\n            }\n            goto code_r0x00434050;\n        }\ncode_r0x00433fdb:\n        cVar8 = fcn.00403544();\n    }\n    if ((cVar8 != '\\0') && (*(param_1 + 0xb) == '\\0')) {\n        iVar12 = 0;\n        iStack28 = 0;\n        if ((param_1[7] >> 4 & 1) != 0) {\n            if (((param_1[7] >> 6 & 1) == 0) && ((*(param_1 + 7) & 1) == 0)) {\n                if ((param_1[7] >> 1 & 1) != 0) {\n                    iVar12 = 1;\n                    iStack28 = 1;\n                }\n            }\n            else {\n                iStack28 = 1;\n                iVar12 = 1;\n            }\n        }\n        cVar8 = *(param_1 + 0x2d);\n        if (((cVar8 != 'x') && (cVar8 != 'X')) || (bVar6 = true,  (param_1[7] >> 5 & 1) == 0)) {\n            bVar6 = false;\n        }\n        if ((cVar8 == 'a') || (bVar7 = false,  cVar8 == 'A')) {\n            bVar7 = true;\n        }\n        if ((bVar6) || (bVar7)) {\n            (&stack0xffffffec)[iVar12] = 0x30;\n            if ((cVar8 == 'X') || (cVar8 == 'A')) {\n                uVar9 = 0x58;\n            }\n            else {\n                uVar9 = 0x78;\n            }\n            (&stack0xffffffed)[iVar12] = uVar9;\n            iVar12 = iVar12 + 2;\n            iStack28 = iVar12;\n        }\n        iVar15 = (param_1[8] - param_1[0xd]) - iVar12;\n        if (((*(param_1 + 7) & 0xc) == 0) && (0 < iVar15)) {\n            uVar11 = param_1[5];\n            iVar13 = 0;\n            do {\n                uVar4 = param_1[0x112];\n                if (*(param_1[0x112] + 8) == *(uVar4 + 4)) {\n                    if (*(uVar4 + 0xc) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    param_1[5] = uVar11;\n                }\n                else {\n                    param_1[5] = uVar11 + 1;\n                    *(uVar4 + 8) = *(uVar4 + 8) + 1;\n                    **param_1[0x112] = 0x20;\n                    *param_1[0x112] = *param_1[0x112] + 1;\n                    uVar11 = param_1[5];\n                }\n                iVar12 = iStack28;\n            } while ((uVar11 != 0xffffffff) && (iVar13 = iVar13 + 1,  iVar13 < iVar15));\n        }\n        arg_10h = param_1 + 5;\n        ppiVar1 = param_1 + 0x112;\n        fcn.00404485(&stack0xffffffec, iVar12, arg_10h);\n        if (((param_1[7] >> 3 & 1) != 0) && (((param_1[7] >> 2 & 1) == 0 && (iVar12 = 0,  0 < iVar15)))) {\n            uVar11 = *arg_10h;\n            do {\n                piVar5 = *ppiVar1;\n                if (piVar5[2] == piVar5[1]) {\n                    if (*(piVar5 + 3) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    *arg_10h = uVar11;\n                }\n                else {\n                    *arg_10h = uVar11 + 1;\n                    piVar5[2] = piVar5[2] + 1;\n                    ***ppiVar1 = 0x30;\n                    **ppiVar1 = **ppiVar1 + 1;\n                    uVar11 = *arg_10h;\n                }\n            } while ((uVar11 != 0xffffffff) && (iVar12 = iVar12 + 1,  iVar12 < iVar15));\n        }\n        iVar12 = 0;\n        if ((*(param_1 + 0xe) == '\\0') || (param_1[0xd] < 1)) {\n            fcn.00404485(param_1[0xc], param_1[0xd], arg_10h);\n        }\n        else {\n            puVar14 = param_1[0xc];\n            uVar11 = 0;\n            do {\n                uVar2 = *puVar14;\n                puVar14 = puVar14 + 1;\n                arg_ch = 0;\n                iVar13 = fcn.00402f72(&stack0xffffffe8, &stack0xfffffff0, 6, uVar2, param_1[2]);\n                if ((iVar13 != 0) || (arg_ch == 0)) {\n                    *arg_10h = 0xffffffff;\n                    break;\n                }\n                fcn.00404485(&stack0xfffffff0, arg_ch, arg_10h);\n                uVar11 = uVar11 + 1;\n            } while (uVar11 != param_1[0xd]);\n        }\n        uVar11 = *arg_10h;\n        if (((-1 < uVar11) && ((param_1[7] >> 2 & 1) != 0)) && (0 < iVar15)) {\n            do {\n                piVar5 = *ppiVar1;\n                if (piVar5[2] == piVar5[1]) {\n                    if (*(piVar5 + 3) == '\\0') {\n                        uVar11 = 0xffffffff;\n                    }\n                    else {\n                        uVar11 = uVar11 + 1;\n                    }\n                    *arg_10h = uVar11;\n                }\n                else {\n                    *arg_10h = uVar11 + 1;\n                    piVar5[2] = piVar5[2] + 1;\n                    ***ppiVar1 = 0x20;\n                    **ppiVar1 = **ppiVar1 + 1;\n                    uVar11 = *arg_10h;\n                }\n            } while ((uVar11 != 0xffffffff) && (iVar12 = iVar12 + 1,  iVar12 < iVar15));\n        }\n    }\ncode_r0x00434307:\n    uVar11 = fcn.0040241e(unaff_EBX);\n    return uVar11;\n}\n",
        "token_count": 3211
    },
    "0040380a": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040380a(uint *arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    _var_10h = fcn.004021fd(0);\n    fcn.00402211(&var_10h);\n    cVar1 = **0x476418;\n    if (cVar1 == '\\0') {\n        fcn.004043ef(1);\n    }\n    else {\n        *0x476418 = *0x476418 + 1;\n        if (cVar1 == '0') {\n            var_10h = \"void\";\n            var_ch = 4;\n            fcn.00403f03(&var_10h);\n        }\n        else if (cVar1 == '2') {\n            arg_8h_00 = fcn.0040436d(&var_10h);\n            fcn.00402310(arg_8h_00);\n        }\n        else if (cVar1 == '5') {\n            fcn.004014dd(2);\n            return arg_8h;\n        }\n    }\n    var_10h = 0x46ac70;\n    var_ch = 2;\n    fcn.00403f03(&var_10h);\n    *arg_8h = var_8h;\n    arg_8h[1] = var_4h;\n    return arg_8h;\n}\n",
        "token_count": 338
    },
    "0040441c": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid __cdecl fcn.0040441c(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int16_t *piVar7;\n    int16_t *piVar8;\n    int16_t **ppiVar9;\n    int16_t **ppiVar10;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int16_t **var_24h;\n    int16_t **var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int16_t *var_10h;\n    int32_t var_ch;\n    ushort var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    if (arg_ch == NULL) {\n        puVar4 = fcn.004029b9();\n        *puVar4 = 0x16;\n        fcn.00402842();\n    }\n    else {\n        *arg_ch = 0;\n        iVar5 = *arg_8h;\n        var_24h = NULL;\n        var_20h = NULL;\n        var_1ch = 0;\n        ppiVar10 = var_24h;\n        while (var_24h = ppiVar10,  iVar5 != 0) {\n            var_ch = 0x3f002a;\n            var_8h = 0;\n            iVar5 = fcn.00402941(iVar5, &var_ch);\n            if (iVar5 == 0) {\n                iVar5 = fcn.00441ca2(*arg_8h, 0, 0, &var_24h);\n            }\n            else {\n                iVar5 = fcn.004420a9(*arg_8h, iVar5, &var_24h);\n            }\n            if (iVar5 != 0) goto code_r0x00441aa6;\n            arg_8h = arg_8h + 1;\n            ppiVar10 = var_24h;\n            iVar5 = *arg_8h;\n        }\n        iVar5 = (var_20h - ppiVar10 >> 2) + 1;\n        var_14h = 0;\n        for (ppiVar9 = ppiVar10; ppiVar9 != var_20h; ppiVar9 = ppiVar9 + 1) {\n            piVar7 = *ppiVar9;\n            var_10h = piVar7 + 1;\n            do {\n                iVar2 = *piVar7;\n                piVar7 = piVar7 + 1;\n            } while (iVar2 != 0);\n            var_14h = var_14h + 1 + (piVar7 - var_10h >> 1);\n        }\n        iVar6 = fcn.0040402a(iVar5, var_14h, 2);\n        ppiVar9 = var_20h;\n        if (iVar6 == 0) {\n            fcn.004042f5(0);\ncode_r0x00441aa6:\n            fcn.0044255c();\n        }\n        else {\n            piVar7 = iVar6 + iVar5 * 4;\n            var_10h = piVar7;\n            if (ppiVar10 != var_20h) {\n                var_ch = iVar6 - ppiVar10;\n                do {\n                    piVar8 = *ppiVar10;\n                    piVar1 = piVar8 + 1;\n                    do {\n                        iVar2 = *piVar8;\n                        piVar8 = piVar8 + 1;\n                    } while (iVar2 != 0);\n                    var_18h = (piVar8 - piVar1 >> 1) + 1;\n                    iVar5 = fcn.00403df5(var_10h, var_14h - (var_10h - piVar7 >> 1), *ppiVar10, var_18h);\n                    if (iVar5 != 0) {\n                        fcn.0040277f(0, 0, 0, 0, 0);\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                    *(var_ch + ppiVar10) = var_10h;\n                    ppiVar10 = ppiVar10 + 1;\n                    var_10h = var_10h + var_18h;\n                } while (ppiVar10 != ppiVar9);\n            }\n            *arg_ch = iVar6;\n            fcn.004042f5(0);\n            fcn.0044255c();\n        }\n    }\n    fcn.0040241e(arg_ch);\n    return;\n}\n",
        "token_count": 1098
    },
    "00401a19": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nbool __cdecl fcn.00401a19(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    char cVar3;\n    char cVar4;\n    char cVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_ECX;\n    uint32_t arg_8h_00;\n    uint var_8h;\n    uint var_3h;\n    \n    uVar1 = *(arg_8h + 1);\n    arg_8h_00 = uVar1;\n    if ((uVar1 == 0x70) || (arg_10h == 0x70)) {\n        return (uVar1 == 0x70) != (arg_10h != 0x70);\n    }\n    cVar2 = fcn.0040231f(arg_8h_00);\n    cVar3 = fcn.0040231f(arg_10h);\n    cVar4 = fcn.004045bb(arg_8h_00);\n    cVar5 = fcn.004045bb(arg_10h);\n    if (cVar2 == '\\0') {\n        if (cVar3 != '\\0') {\n            return false;\n        }\n        if (cVar4 == '\\0') {\n            if (cVar5 != '\\0') {\n                return false;\n            }\n            cVar2 = fcn.00401d1b(arg_8h_00);\n            cVar3 = fcn.00401d1b(arg_10h);\n            if (cVar2 == '\\0') {\n                if (cVar3 != '\\0') {\n                    return false;\n                }\n                return *arg_8h == arg_ch;\n            }\n            if (cVar2 != cVar3) {\n                return false;\n            }\n            if ((arg_8h[3] == 9) != (arg_14h == 9)) {\n                return false;\n            }\n            iVar6 = fcn.00401e3d(arg_8h[3]);\n            iVar7 = fcn.00401e3d(arg_14h);\n            return iVar6 == iVar7;\n        }\n    }\n    else if (cVar2 != cVar3) {\n        return false;\n    }\n    if (cVar4 == cVar5) {\n        cVar2 = fcn.00401555(*in_ECX, in_ECX[1], arg_8h_00, arg_8h[3]);\n        cVar3 = fcn.00401555(*in_ECX, in_ECX[1], arg_10h, arg_14h);\n        if (cVar2 == cVar3) {\n            return true;\n        }\n    }\n    return false;\n}\n",
        "token_count": 639
    },
    "004020ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nbool __cdecl fcn.004020ea(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    char cVar3;\n    char cVar4;\n    char cVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_ECX;\n    uint32_t arg_8h_00;\n    uint var_8h;\n    uint var_3h;\n    \n    uVar1 = *(arg_8h + 1);\n    arg_8h_00 = uVar1;\n    if ((uVar1 == 0x70) || (arg_10h == 0x70)) {\n        return (uVar1 == 0x70) != (arg_10h != 0x70);\n    }\n    cVar2 = fcn.00403409(arg_8h_00);\n    cVar3 = fcn.00403409(arg_10h);\n    cVar4 = fcn.00403814(arg_8h_00);\n    cVar5 = fcn.00403814(arg_10h);\n    if (cVar2 == '\\0') {\n        if (cVar3 != '\\0') {\n            return false;\n        }\n        if (cVar4 == '\\0') {\n            if (cVar5 != '\\0') {\n                return false;\n            }\n            cVar2 = fcn.004028fb(arg_8h_00);\n            cVar3 = fcn.004028fb(arg_10h);\n            if (cVar2 == '\\0') {\n                if (cVar3 != '\\0') {\n                    return false;\n                }\n                return *arg_8h == arg_ch;\n            }\n            if (cVar2 != cVar3) {\n                return false;\n            }\n            if ((arg_8h[3] == 9) != (arg_14h == 9)) {\n                return false;\n            }\n            iVar6 = fcn.00401e3d(arg_8h[3]);\n            iVar7 = fcn.00401e3d(arg_14h);\n            return iVar6 == iVar7;\n        }\n    }\n    else if (cVar2 != cVar3) {\n        return false;\n    }\n    if (cVar4 == cVar5) {\n        cVar2 = fcn.00401555(*in_ECX, in_ECX[1], arg_8h_00, arg_8h[3]);\n        cVar3 = fcn.00401555(*in_ECX, in_ECX[1], arg_10h, arg_14h);\n        if (cVar2 == cVar3) {\n            return true;\n        }\n    }\n    return false;\n}\n",
        "token_count": 632
    },
    "004465cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004465cd(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint arg_10h;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint8_t *puVar10;\n    uint *arg_18h;\n    uint *puVar11;\n    uint8_t *puVar12;\n    uint *puVar13;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_14h = arg_8h;\n    var_10h = 0;\n    if ((*(arg_8h + 0xb0) == 0) && (*(arg_8h + 0xac) == 0)) {\n        var_4h = NULL;\n        arg_18h = 0x475800;\n        puVar11 = NULL;\n    }\n    else {\n        var_ch = 1;\n        arg_18h = fcn.0040375b(1, 0x50);\n        if (arg_18h == NULL) {\n            return 1;\n        }\n        puVar11 = *(arg_8h + 0x88);\n        puVar13 = arg_18h;\n        for (iVar9 = 0x14; iVar9 != 0; iVar9 = iVar9 + -1) {\n            *puVar13 = *puVar11;\n            puVar11 = puVar11 + 1;\n            puVar13 = puVar13 + 1;\n        }\n        var_4h = fcn.00402d88(4);\n        puVar11 = NULL;\n        fcn.004042f5(0);\n        if (var_4h == NULL) {\n            fcn.004042f5(arg_18h);\n            return 1;\n        }\n        *var_4h = 0;\n        if (*(arg_8h + 0xb0) != 0) {\n            var_8h = fcn.00402d88(4);\n            fcn.004042f5(0);\n            if (var_8h == NULL) {\n                fcn.004042f5(arg_18h);\n            }\n            else {\n                *var_8h = 0;\n                arg_10h = *(arg_8h + 0xb0);\n                uVar4 = fcn.004016b8(&var_14h, 1, arg_10h, 0xe, arg_18h);\n                uVar5 = fcn.004016b8(&var_14h, 1, arg_10h, 0xf, arg_18h + 1);\n                uVar6 = fcn.004016b8(&var_14h, 1, arg_10h, 0x10, arg_18h + 2);\n                uVar7 = fcn.004016b8(&var_14h, 2, arg_10h, 0xe, arg_18h + 0xc);\n                uVar8 = fcn.004016b8(&var_14h, 2, arg_10h, 0xf, arg_18h + 0xd);\n                if ((uVar8 | uVar4 | uVar5 | uVar6 | uVar7) == 0) {\n                    puVar10 = arg_18h[2];\n                    while (uVar2 = *puVar10,  uVar2 != 0) {\n                        if (uVar2 - 0x30 < 10) {\n                            *puVar10 = uVar2 - 0x30;\ncode_r0x00446737:\n                            puVar10 = puVar10 + 1;\n                        }\n                        else {\n                            puVar12 = puVar10;\n                            if (uVar2 != 0x3b) goto code_r0x00446737;\n                            do {\n                                puVar1 = puVar12 + 1;\n                                *puVar12 = *puVar1;\n                                puVar12 = puVar12 + 1;\n                            } while (*puVar1 != 0);\n                        }\n                    }\n                    *var_4h = 1;\n                    *var_8h = 1;\n                    puVar11 = var_8h;\n                    goto code_r0x00446793;\n                }\n                fcn.00401a23(arg_18h);\n                fcn.004042f5(arg_18h);\n                fcn.004042f5(var_8h);\n                var_ch = 0xffffffff;\n            }\n            fcn.004042f5(var_4h);\n            return var_ch;\n        }\n        *arg_18h = *0x475800;\n        arg_18h[1] = *0x475804;\n        arg_18h[2] = *0x475808;\n        arg_18h[0xc] = *0x475830;\n        arg_18h[0xd] = *0x475834;\n        *var_4h = 1;\n    }\ncode_r0x00446793:\n    piVar3 = *(arg_8h + 0x80);\n    if (piVar3 != NULL) {\n        LOCK();\n        *piVar3 = *piVar3 + -1;\n    }\n    piVar3 = *(arg_8h + 0x7c);\n    if (piVar3 != NULL) {\n        LOCK();\n        iVar9 = *piVar3;\n        *piVar3 = iVar9 + -1;\n        if (iVar9 + -1 == 0) {\n            fcn.004042f5(*(arg_8h + 0x7c));\n            fcn.004042f5(*(arg_8h + 0x88));\n        }\n    }\n    *(arg_8h + 0x7c) = var_4h;\n    *(arg_8h + 0x80) = puVar11;\n    *(arg_8h + 0x88) = arg_18h;\n    return 0;\n}\n",
        "token_count": 1384
    },
    "00402798": {
        "rules": [
            "check for trap flag exception/d5d4160e77a5474aa5157e4631e4f1b3"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00402798(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint uVar3;\n    char *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    cVar1 = **0x476418;\n    pcVar2 = *0x476418;\n    if (cVar1 == '\\0') {\ncode_r0x00411b83:\n        *0x476418 = pcVar2;\n        fcn.004011db(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    if (cVar1 == '$') {\n        if ((*0x476418)[1] == '$') {\n            pcVar2 = *0x476418 + 2;\n            cVar1 = *pcVar2;\n            if (cVar1 < 'S') {\n                if (cVar1 == 'R') {\n                    if (*arg_ch == 0) {\n                        var_10h = \"volatile\";\n                        var_ch = 8;\n                    }\n                    else {\n                        var_10h = \"volatile \";\n                        var_ch = 9;\n                    }\n                    *0x476418 = pcVar2;\n                    fcn.00401b68(&var_10h);\n                }\n                else {\n                    if (cVar1 == '\\0') goto code_r0x00411b83;\n                    if (cVar1 == 'A') {\n                        *0x476418 = *0x476418 + 3;\n                        fcn.0040463d(arg_8h, arg_ch);\n                        return arg_8h;\n                    }\n                    if (cVar1 == 'B') {\n                        *0x476418 = *0x476418 + 3;\n                        fcn.004037bf(arg_8h, arg_ch, 1);\n                        return arg_8h;\n                    }\n                    if (cVar1 == 'C') {\n                        *0x476418 = *0x476418 + 3;\n                        var_10h = NULL;\n                        var_ch = 0;\n                        uVar3 = fcn.00401267(&var_8h, arg_ch, 0, &var_10h, 0);\n                        fcn.00403e4a(arg_8h, uVar3);\n                        return arg_8h;\n                    }\n                    *0x476418 = pcVar2;\n                    if (cVar1 != 'Q') goto code_r0x00411c82;\n                }\n                uVar3 = 3;\n                goto code_r0x00411b48;\n            }\n            if (cVar1 == 'S') {\n                pcVar2 = *0x476418 + 3;\n            }\n            else {\n                if (cVar1 == 'T') {\n                    *0x476418 = *0x476418 + 3;\n                    if (*arg_ch != 0) {\n                        var_10h = \"std::nullptr_t \";\n                        var_ch = 0xf;\n                        fcn.00402d97(arg_8h, &var_10h, arg_ch);\n                        return arg_8h;\n                    }\n                    var_10h = \"std::nullptr_t\";\n                    var_ch = 0xe;\n                    fcn.00402211(&var_10h);\n                    return arg_8h;\n                }\n                if (cVar1 == 'V') {\n                    *0x476418 = *0x476418 + 3;\n                    *arg_8h = *arg_ch;\n                    arg_8h[1] = arg_ch[1];\n                    return arg_8h;\n                }\n                if (cVar1 == 'Y') {\n                    *0x476418 = *0x476418 + 3;\n                    fcn.0040436d(arg_8h);\n                    return arg_8h;\n                }\n            }\n        }\n        else if ((*0x476418)[1] == '\\0') goto code_r0x00411b83;\ncode_r0x00411c82:\n        *0x476418 = pcVar2;\n        fcn.004014dd(2);\n    }\n    else {\n        if (cVar1 != 'A') {\n            if (cVar1 != 'B') {\n                fcn.00403e4a(arg_8h, arg_ch);\n                return arg_8h;\n            }\n            if (*arg_ch == 0) {\n                var_10h = \"volatile\";\n                var_ch = 8;\n            }\n            else {\n                var_10h = \"volatile \";\n                var_ch = 9;\n            }\n            fcn.00401b68(&var_10h);\n        }\n        uVar3 = 2;\ncode_r0x00411b48:\n        var_10h = *arg_ch;\n        *0x476418 = *0x476418 + 1;\n        var_ch = arg_ch[1] | 0x100;\n        fcn.00403530(arg_8h, &var_8h, &var_10h, uVar3);\n    }\n    return arg_8h;\n}\n",
        "token_count": 1150
    },
    "00403576": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403576(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    \n    if (arg_8h != arg_ch) {\n        puVar3 = arg_ch + 5;\n        puVar2 = arg_8h + 5;\n        do {\n            uVar1 = *puVar2;\n            bVar4 = uVar1 < *puVar3;\n            if (uVar1 != *puVar3) {\ncode_r0x0040b2f9:\n                return -bVar4 | 1;\n            }\n            if (uVar1 == 0) {\n                return 0;\n            }\n            uVar1 = puVar2[1];\n            bVar4 = uVar1 < puVar3[1];\n            if (uVar1 != puVar3[1]) goto code_r0x0040b2f9;\n            puVar2 = puVar2 + 2;\n            puVar3 = puVar3 + 2;\n        } while (uVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 271
    },
    "00401ef6": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nchar ** __cdecl fcn.00401ef6(char **arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint var_18h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    var_8h = NULL;\n    var_4h = NULL;\n    if (**0x476418 == '\\0') {\n        arg_8h_00 = 1;\ncode_r0x004102ac:\n        fcn.004014dd(arg_8h_00);\n        return arg_8h;\n    }\n    // switch table (8 cases) at 0x4102ba\n    switch(**0x476418) {\n    case '0':\n    case '1':\n        var_10h = \"char \";\n        goto code_r0x00410229;\n    case '2':\n    case '3':\n        var_10h = \"short \";\n        var_ch = 0x6;\n        break;\n    case '4':\n        goto code_r0x0041023c;\n    case '5':\n        var_10h = \"int \";\n        var_ch = 0x4;\n        break;\n    case '6':\n    case '7':\n        var_10h = \"long \";\ncode_r0x00410229:\n        var_ch = 0x5;\n        break;\n    default:\n        arg_8h_00 = 2;\n        goto code_r0x004102ac;\n    }\n    fcn.00401b68(&var_10h);\ncode_r0x0041023c:\n    cVar1 = **0x476418;\n    *0x476418 = *0x476418 + 1;\n    if ((((cVar1 == '1') || (cVar1 == '3')) || (cVar1 == '5')) || (cVar1 == '7')) {\n        var_10h = \"unsigned \";\n        var_ch = 0x9;\n        fcn.00402211(&var_10h);\n        fcn.0040395e(&var_10h, &var_8h);\n        var_8h = var_10h;\n        var_4h = var_ch;\n    }\n    *arg_8h = var_8h;\n    arg_8h[1] = var_4h;\n    return arg_8h;\n}\n",
        "token_count": 530
    },
    "004027cf": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004027cf(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    uint16_t uVar2;\n    ushort uVar3;\n    int16_t iVar4;\n    int32_t *piVar5;\n    char cVar6;\n    uchar uVar7;\n    int32_t iVar8;\n    \n    ppiVar1 = param_1 + 0x448;\n    cVar6 = fcn.00403175(*(param_1 + 8));\n    if (cVar6 != '\\0') {\n        if (*(param_1 + 0xc) == 0) {\n            iVar8 = *(param_1 + 8);\n            *(iVar8 + 0x1c) = 1;\n            *(iVar8 + 0x18) = 0x16;\ncode_r0x0042eff5:\n            fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n        }\n        else {\n            do {\n                cVar6 = fcn.0040430e();\n                if (cVar6 == '\\0') {\n                    return *(param_1 + 0x14);\n                }\n                *(param_1 + 0x34) = 0;\n                *(param_1 + 0x18) = 0;\n                uVar2 = **(param_1 + 0xc);\n                *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                *(param_1 + 0x2e) = uVar2;\n                while ((uVar2 != 0 && (-1 < *(param_1 + 0x14)))) {\n                    uVar7 = fcn.00402a6d(uVar2, *(param_1 + 0x18));\n                    *(param_1 + 0x18) = uVar7;\n                    cVar6 = fcn.00402090();\n                    if (cVar6 == '\\0') {\n                        return 0xffffffff;\n                    }\n    // switch table (8 cases) at 0x42f209\n                    switch(*(param_1 + 0x18)) {\n                    case 0:\n                        cVar6 = fcn.00401307();\n                        if (cVar6 == '\\0') {\n                            uVar3 = *(param_1 + 0x2e);\n                            *(param_1 + 0x38) = 1;\n                            piVar5 = *ppiVar1;\n                            if (piVar5[2] == piVar5[1]) {\n                                if (*(piVar5 + 3) == '\\0') {\n                                    *(param_1 + 0x14) = 0xffffffff;\n                                }\n                                else {\n                                    *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                }\n                            }\n                            else {\n                                *(param_1 + 0x14) = *(param_1 + 0x14) + 1;\n                                piVar5[2] = piVar5[2] + 1;\n                                ***ppiVar1 = uVar3;\n                                **ppiVar1 = **ppiVar1 + 2;\n                            }\n                        }\n                        break;\n                    case 1:\n                        *(param_1 + 0x24) = 0xffffffff;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x1c) = 0;\n                        *(param_1 + 0x28) = 0;\n                        *(param_1 + 0x38) = 0;\n                        break;\n                    case 2:\n                        iVar4 = *(param_1 + 0x2e);\n                        if (iVar4 == 0x20) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                        }\n                        else if (iVar4 == 0x23) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                        }\n                        else if (iVar4 == 0x2b) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                        }\n                        else if (iVar4 == 0x2d) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                        }\n                        else if (iVar4 == 0x30) {\n                            *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                        }\n                        break;\n                    case 3:\n                        if (*(param_1 + 0x2e) != 0x2a) {\n                            iVar8 = param_1 + 0x20;\ncode_r0x0042f12e:\n                            cVar6 = fcn.004042e1(iVar8);\n                            goto code_r0x0042f1aa;\n                        }\n                        cVar6 = fcn.00404002();\n                        if (cVar6 == '\\0') {\n                            return 0xffffffff;\n                        }\n                        cVar6 = fcn.00403d23();\n                        if (cVar6 != '\\0') {\n                            if (*(param_1 + 0x20) < 0) {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                                *(param_1 + 0x20) = -*(param_1 + 0x20);\n                            }\ncode_r0x0042f15e:\n                            cVar6 = '\\x01';\n                            goto code_r0x0042f1aa;\n                        }\n                        break;\n                    case 4:\n                        *(param_1 + 0x24) = 0;\n                        break;\n                    case 5:\n                        if (*(param_1 + 0x2e) != 0x2a) {\n                            iVar8 = param_1 + 0x24;\n                            goto code_r0x0042f12e;\n                        }\n                        cVar6 = fcn.00403bb1();\n                        if (cVar6 == '\\0') {\n                            return 0xffffffff;\n                        }\n                        cVar6 = fcn.00403d23();\n                        if (cVar6 != '\\0') {\n                            if (*(param_1 + 0x24) < 0) {\n                                *(param_1 + 0x24) = 0xffffffff;\n                            }\n                            goto code_r0x0042f15e;\n                        }\n                        break;\n                    case 6:\n                        cVar6 = fcn.004027d9();\n                        goto code_r0x0042f1aa;\n                    case 7:\n                        cVar6 = fcn.0040371a();\ncode_r0x0042f1aa:\n                        if (cVar6 == '\\0') {\n                            return 0xffffffff;\n                        }\n                        break;\n                    default:\n                        iVar8 = *(param_1 + 8);\n                        *(iVar8 + 0x1c) = 1;\n                        *(iVar8 + 0x18) = 0x16;\n                        goto code_r0x0042eff5;\n                    case 0xbad1abe1:\n                        goto code_r0x0042f008;\n                    }\n                    uVar2 = **(param_1 + 0xc);\n                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                    *(param_1 + 0x2e) = uVar2;\n                }\n                cVar6 = fcn.00402b44();\n            } while (cVar6 != '\\0');\n        }\n    }\ncode_r0x0042f008:\n    return 0xffffffff;\n}\n",
        "token_count": 1738
    },
    "00403f3f": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __thiscall fcn.00403f3f(uint32_t param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uchar uVar3;\n    uint32_t arg_ch;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint32_t noname_0;\n    uint arg_8h;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    arg_8h = *(param_1 + 8);\n    cVar2 = fcn.004012da(arg_8h);\n    if (cVar2 != '\\0') {\n        var_8h = param_1;\n        var_4h = param_1;\n        if (*(param_1 + 0xc) == 0) {\n            iVar4 = *(param_1 + 8);\n            *(iVar4 + 0x1c) = 1;\n            *(iVar4 + 0x18) = 0x16;\ncode_r0x0042d333:\n            fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n        }\n        else {\n            do {\n                cVar2 = fcn.00403058();\n                if (cVar2 == '\\0') {\n                    return *(param_1 + 0x14);\n                }\n                *(param_1 + 0x34) = 0;\n                *(param_1 + 0x18) = 0;\n                uVar1 = **(param_1 + 0xc);\n                *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                *(param_1 + 0x2d) = uVar1;\n                if (uVar1 != 0) {\n                    var_8h = var_8h & 0xffffff00 | uVar1;\n                    do {\n                        if (*(param_1 + 0x14) < 0) break;\n                        arg_ch = *(param_1 + 0x18);\n                        noname_0 = var_8h;\n                        uVar3 = fcn.004011d6(var_8h, arg_ch);\n                        *(param_1 + 0x18) = uVar3;\n                        cVar2 = fcn.004017da();\n                        if (cVar2 == '\\0') {\n                            return 0xffffffff;\n                        }\n    // switch table (8 cases) at 0x42d5b0\n                        switch(*(param_1 + 0x18)) {\n                        case 0:\n                            cVar2 = fcn.004018b1();\n                            if (cVar2 == '\\0') {\n                                iVar4 = *(param_1 + 8);\n                                *(param_1 + 0x38) = 0;\n                                if (*(iVar4 + 0x14) == '\\0') {\n                                    fcn.004024f0();\n                                }\n                                uVar1 = *(param_1 + 0x2d);\n                                iVar4 = fcn.00404192(**(iVar4 + 0xc), uVar1, 0x8000);\n                                if (iVar4 != 0) {\n                                    fcn.004037c9(uVar1, param_1 + 0x14, *(param_1 + 8));\n                                    uVar1 = **(param_1 + 0xc);\n                                    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                                    *(param_1 + 0x2d) = uVar1;\n                                    if (uVar1 == 0) {\n                                        iVar4 = *(param_1 + 8);\n                                        *(iVar4 + 0x1c) = 1;\n                                        *(iVar4 + 0x18) = 0x16;\n                                        fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                                        iVar4 = *(param_1 + 8);\n                                        *(iVar4 + 0x1c) = 1;\n                                        *(iVar4 + 0x18) = 0x16;\n                                        fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                                        return 0xffffffff;\n                                    }\n                                }\n                                var_4h = var_4h & 0xffffff00 | uVar1;\n                                fcn.004037c9(var_4h, param_1 + 0x14, *(param_1 + 8));\n                            }\n                            break;\n                        case 1:\n                            *(param_1 + 0x24) = 0xffffffff;\n                            *(param_1 + 0x20) = 0;\n                            *(param_1 + 0x2c) = 0;\n                            *(param_1 + 0x1c) = 0;\n                            *(param_1 + 0x28) = 0;\n                            *(param_1 + 0x38) = 0;\n                            break;\n                        case 2:\n                            cVar2 = *(param_1 + 0x2d);\n                            if (cVar2 == ' ') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 2;\n                            }\n                            else if (cVar2 == '#') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 0x20;\n                            }\n                            else if (cVar2 == '+') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 1;\n                            }\n                            else if (cVar2 == '-') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                            }\n                            else if (cVar2 == '0') {\n                                *(param_1 + 0x1c) = *(param_1 + 0x1c) | 8;\n                            }\n                            break;\n                        case 3:\n                            if (*(param_1 + 0x2d) != '*') {\n                                iVar4 = param_1 + 0x20;\ncode_r0x0042d4a0:\n                                cVar2 = fcn.0040155a(iVar4);\n                                goto code_r0x0042d519;\n                            }\n                            cVar2 = fcn.00401811();\n                            if (cVar2 == '\\0') {\n                                return 0xffffffff;\n                            }\n                            cVar2 = fcn.0040443f();\n                            if (cVar2 != '\\0') {\n                                if (*(param_1 + 0x20) < 0) {\n                                    *(param_1 + 0x1c) = *(param_1 + 0x1c) | 4;\n                                    *(param_1 + 0x20) = -*(param_1 + 0x20);\n                                }\ncode_r0x0042d4d0:\n                                cVar2 = '\\x01';\n                                goto code_r0x0042d519;\n                            }\n                            break;\n                        case 4:\n                            *(param_1 + 0x24) = 0;\n                            break;\n                        case 5:\n                            if (*(param_1 + 0x2d) != '*') {\n                                iVar4 = param_1 + 0x24;\n                                goto code_r0x0042d4a0;\n                            }\n                            cVar2 = fcn.00404426();\n                            if (cVar2 == '\\0') {\n                                return 0xffffffff;\n                            }\n                            cVar2 = fcn.0040443f();\n                            if (cVar2 != '\\0') {\n                                if (*(param_1 + 0x24) < 0) {\n                                    *(param_1 + 0x24) = 0xffffffff;\n                                }\n                                goto code_r0x0042d4d0;\n                            }\n                            break;\n                        case 6:\n                            cVar2 = fcn.00403e63();\n                            goto code_r0x0042d519;\n                        case 7:\n                            cVar2 = fcn.0040272f(noname_0, arg_ch, arg_8h, unaff_EDI, unaff_ESI, unaff_EBX, var_8h, \n                                                 var_4h, unaff_EBP, unaff_retaddr, param_2);\ncode_r0x0042d519:\n                            if (cVar2 == '\\0') {\n                                return 0xffffffff;\n                            }\n                            break;\n                        default:\n                            iVar4 = *(param_1 + 8);\n                            *(iVar4 + 0x1c) = 1;\n                            *(iVar4 + 0x18) = 0x16;\n                            goto code_r0x0042d333;\n                        case 0xbad1abe1:\n                            goto code_r0x0042d346;\n                        }\n                        uVar1 = **(param_1 + 0xc);\n                        *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n                        *(param_1 + 0x2d) = uVar1;\n                        var_8h = var_8h & 0xffffff00 | uVar1;\n                    } while (uVar1 != 0);\n                }\n                cVar2 = fcn.00401834();\n            } while (cVar2 != '\\0');\n        }\n    }\ncode_r0x0042d346:\n    return 0xffffffff;\n}\n",
        "token_count": 2166
    },
    "0040447b": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.0040447b(void)\n\n{\n    if ((*0x47502c == 0xbb40e64e) || ((*0x47502c & 0xffff0000) == 0)) {\n        *0x47502c = fcn.0040a46c();\n        if (*0x47502c == 0xbb40e64e) {\n            *0x47502c = 0xbb40e64f;\n        }\n        else if ((*0x47502c & 0xffff0000) == 0) {\n            *0x47502c = *0x47502c | (*0x47502c | 0x4711) << 0x10;\n        }\n    }\n    *0x475028 = ~*0x47502c;\n    return;\n}\n",
        "token_count": 179
    },
    "00402b3f": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402b3f(int32_t arg_8h, uint noname_1, int32_t arg_10h)\n\n{\n    if (*(arg_10h + 4) < 0x81) {\n        return *(arg_8h + 8);\n    }\n    return *(arg_8h + 8);\n}\n",
        "token_count": 80
    },
    "0040289c": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040289c(uint lpBuffer, uint nNumberOfCharsToWrite, uint lpNumberOfCharsWritten)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_WriteConsoleW)\n                      (*0x475a80, lpBuffer, nNumberOfCharsToWrite, lpNumberOfCharsWritten, 0);\n    if (iVar1 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar2 == 6) {\n            fcn.0040416a();\n            fcn.0045c7ca();\n            iVar1 = (*_sym.imp.KERNEL32.dll_WriteConsoleW)\n                              (*0x475a80, lpBuffer, nNumberOfCharsToWrite, lpNumberOfCharsWritten, 0);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 192
    },
    "0040428c": {
        "rules": [
            "encrypt data using Curve25519/f8ce07bf90384b3481717cbf54aaf528"
        ],
        "decompiled_code": "\nuint * fcn.0040428c(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_8h;\n    \n    puVar2 = fcn.0040375b(0x40, 0x38);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else if (puVar2 != puVar2 + 0x380) {\n        puVar3 = puVar2 + 8;\n        do {\n            fcn.00403639(puVar3 + -8, 4000, 0);\n            puVar3[-2] = 0xffffffff;\n            *(puVar3 + 0xd) = *(puVar3 + 0xd) & 0xf8;\n            *puVar3 = 0;\n            puVar3[1] = 0;\n            puVar1 = puVar3 + 6;\n            puVar3[2] = 0xa0a0000;\n            *(puVar3 + 3) = 10;\n            *(puVar3 + 0xe) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3 = puVar3 + 0xe;\n        } while (puVar1 != puVar2 + 0x380);\n    }\n    fcn.004042f5(0);\n    return puVar2;\n}\n",
        "token_count": 316
    },
    "0041937f": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041937f(char *arg_8h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar6 = 0;\n    cVar2 = *arg_8h;\n    pcVar5 = arg_8h;\n    while (cVar2 != '\\0') {\n        if (cVar2 != '=') {\n            iVar6 = iVar6 + 1;\n        }\n        do {\n            cVar2 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar2 != '\\0');\n        cVar2 = *pcVar5;\n    }\n    piVar3 = fcn.0040375b(iVar6 + 1, 4);\n    var_4h = piVar3;\n    if (piVar3 == NULL) {\n        fcn.004042f5(0);\n        piVar3 = NULL;\n    }\n    else {\n        for (; *arg_8h != '\\0'; arg_8h = arg_8h + pcVar5) {\n            pcVar5 = arg_8h;\n            do {\n                cVar2 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar2 != '\\0');\n            pcVar5 = pcVar5 + (1 - (arg_8h + 1));\n            if (*arg_8h != '=') {\n                iVar6 = fcn.0040375b(pcVar5, 1);\n                if (iVar6 == 0) {\n                    fcn.004195fe(piVar3);\n                    fcn.004042f5(0);\n                    fcn.004042f5(0);\n                    return NULL;\n                }\n                iVar4 = fcn.00404098(iVar6, pcVar5, arg_8h);\n                if (iVar4 != 0) {\n                    fcn.0040277f(0, 0, 0, 0, 0);\n                    pcVar1 = swi(3);\n                    piVar3 = (*pcVar1)();\n                    return piVar3;\n                }\n                *var_4h = iVar6;\n                var_4h = var_4h + 1;\n                fcn.004042f5(0);\n            }\n        }\n        fcn.004042f5(0);\n    }\n    return piVar3;\n}\n",
        "token_count": 572
    },
    "0040101e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040101e(uint *param_1)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *var_4h;\n    \n    param_1[4] = param_1[4] + 4;\n    *(param_1 + 0xe) = 1;\n    var_4h._0_2_ = *(param_1[4] + -4);\n    var_4h = param_1;\n    cVar1 = fcn.00401555(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n    if (cVar1 == '\\0') {\n        iVar3 = param_1[2];\n        var_4h._0_2_ = var_4h & 0xff;\n        var_4h = var_4h & 0xffff0000 | var_4h;\n        if (*(iVar3 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        puVar2 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar2 = param_1 + 0xf;\n        }\n        iVar3 = fcn.0040123f(puVar2, &var_4h, *(*(iVar3 + 0xc) + 4), iVar3);\n        if (iVar3 < 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    else {\n        puVar2 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar2 = param_1 + 0xf;\n        }\n        *puVar2 = var_4h;\n    }\n    puVar2 = param_1[0x110];\n    puVar4 = param_1 + 0xf;\n    if (puVar2 != NULL) {\n        puVar4 = puVar2;\n    }\n    param_1[0xc] = puVar4;\n    param_1[0xd] = 1;\n    return CONCAT31(puVar2 >> 8, 1);\n}\n",
        "token_count": 513
    },
    "0040102d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040102d(ulong param_1)\n\n{\n    fcn.00403cfb(param_1, param_1 >> 0x20);\n    return;\n}\n",
        "token_count": 41
    },
    "004010be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004010be(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00403576(in_ECX + 4, arg_8h + 4);\n    return -iVar1 & 0xffffff00U | 1 - (iVar1 != 0);\n}\n",
        "token_count": 85
    },
    "004010dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004010dc(uint arg_8h, code *arg_ch)\n\n{\n    code *arg_8h_00;\n    code **in_ECX;\n    \n    *in_ECX = vtable.pcharNode.0;\n    arg_8h_00 = fcn.004038c8(arg_ch);\n    in_ECX[1] = arg_8h_00;\n    in_ECX[2] = arg_ch;\n    if (arg_8h_00 == NULL) {\n        in_ECX[2] = NULL;\n    }\n    else {\n        fcn.004146fd(arg_8h_00, arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00401122": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401122(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    \n    if (*arg_8h == 0) {\n        *arg_8h = arg_ch;\n        *(arg_8h + 1) = arg_10h;\n        arg_8h[3] = arg_14h;\n    }\n    else {\n        cVar2 = fcn.00401cda(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (cVar2 == '\\0') {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 249
    },
    "0040113b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040113b(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = arg_ch[1];\n    iVar2 = *arg_ch + arg_8h;\n    if (-1 < iVar1) {\n        iVar2 = iVar2 + *(*(iVar1 + arg_8h) + arg_ch[2]) + iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 110
    },
    "00401253": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_108h\n\nvoid __cdecl fcn.00401253(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    fcn.00403e4f();\n    fcn.00403990(arg_8h, arg_ch, &var_108h);\n    fcn.00402fe0(arg_10h, arg_14h, &var_108h);\n    fcn.0040241e(var_108h);\n    return;\n}\n",
        "token_count": 157
    },
    "0040127b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040127b(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 42
    },
    "004012cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012cb(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    fcn.00403e4f();\n    (**0x475f74)(0, &var_20ch, 0x104);\n    uVar1 = (**0x475f78)(&var_20ch, 0x80000000, 0, 0, 3, 0x80, 0);\n    arg_8h_00 = (**0x475f7c)(uVar1, 0);\n    iVar2 = fcn.00401569(arg_8h_00);\n    (**0x475f80)(uVar1, iVar2, arg_8h_00, &var_210h, 0);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n    iVar3 = *(iVar2 + 0x3c) + iVar2;\n    *arg_8h = *(iVar2 + *(*(iVar3 + 0x14) + 4 + *(iVar3 + 6) * 0x28 + iVar3));\n    fcn.0040241e(arg_8h_00);\n    return;\n}\n",
        "token_count": 335
    },
    "004012da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004012da(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    \n    if (*in_ECX == 0) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        uVar1 = fcn.00402c20(0, 0, 0, 0, 0, arg_8h);\n        uVar1 = uVar1 & 0xffffff00;\n    }\n    else {\n        uVar1 = fcn.00403094(*in_ECX);\n    }\n    return uVar1;\n}\n",
        "token_count": 161
    },
    "004013e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004013e8(uint arg_8h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    fcn.00401267(arg_8h, &var_10h, 0, &var_8h, 0);\n    return arg_8h;\n}\n",
        "token_count": 117
    },
    "0040141f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040141f(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x4763e8);\n    return;\n}\n",
        "token_count": 51
    },
    "00401429": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401429(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00414d24(3, \"FlsSetValue\", 0x46b1e8, 0x46b1f0);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_TlsSetValue)(arg_8h, arg_ch);\n    }\n    else {\n        (**0x47a000)();\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00401460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401460(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.0044a63a(0x1f, \"FlsFree\", 0x46e518, 0x46e520);\n    if (pcVar1 != NULL) {\n        (**0x47a000)(arg_8h);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0044aab9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsFree)();\n    return;\n}\n",
        "token_count": 148
    },
    "0040147e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040147e(uint arg_8h, uint arg_ch)\n\n{\n    uint *arg_ch_00;\n    uint *puVar1;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    \n    arg_ch_00 = fcn.004038c8(8);\n    if (arg_ch_00 == NULL) {\n        arg_ch_00 = NULL;\n    }\n    else {\n        *arg_ch_00 = 0;\n        arg_ch_00[1] = 0;\n    }\n    fcn.004034f4(arg_8h, arg_ch_00);\n    fcn.004013e8(&var_8h);\n    fcn.0040256d(&var_10h, 0x20);\n    puVar1 = fcn.0040395e(&var_18h, arg_ch);\n    *arg_ch_00 = *puVar1;\n    arg_ch_00[1] = puVar1[1];\n    return arg_8h;\n}\n",
        "token_count": 230
    },
    "00401483": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401483(ushort *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint32_t var_4h;\n    \n    uVar1 = fcn.00402923(&var_4h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (uVar1 < 5) {\n        if (0xffff < var_4h) {\n            var_4h = 0xfffd;\n        }\n        if (arg_8h != NULL) {\n            *arg_8h = var_4h;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 166
    },
    "004014a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004014a1(code *UNRECOVERED_JUMPTABLE)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = **in_FS_OFFSET;\n    // WARNING: Could not recover jumptable at 0x004153af. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 88
    },
    "004014d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004014d8(uint arg_8h)\n\n{\n    fcn.0040248c();\n    return;\n}\n",
        "token_count": 31
    },
    "00401523": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401523(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040461a();\n    if (iVar1 == 0) {\n        return 0x475098;\n    }\n    return iVar1 + 0x14;\n}\n",
        "token_count": 64
    },
    "0040156e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040156e(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.0044a63a(0x21, \"FlsSetValue\", 0x46e530, 0x46e538);\n    if (pcVar1 != NULL) {\n        (**0x47a000)(arg_8h, arg_ch);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0044ab58. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)();\n    return;\n}\n",
        "token_count": 155
    },
    "004015a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004015a0(uint *arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    cVar1 = **0x476418;\n    while (cVar1 != '\\0') {\n        if (cVar1 == '@') {\n            puVar5 = fcn.00404368(&var_ch);\n            uVar2 = puVar5[1];\n            *arg_8h = *puVar5;\n            arg_8h[1] = uVar2;\n            *(arg_8h + 2) = 1;\n            return;\n        }\n        if (0xf < cVar1 + 0xbfU) break;\n        uVar4 = cVar1 - 0x41;\n        uVar3 = var_ch >> 0x1c;\n        uVar6 = var_ch * 0x10;\n        var_ch = uVar4 + uVar6;\n        var_8h = (uVar4 >> 0x1f) + (var_8h << 4 | uVar3) + CARRY4(uVar4, uVar6);\n        *0x476418 = *0x476418 + 1;\n        var_4h = var_8h;\n        cVar1 = **0x476418;\n    }\n    *(arg_8h + 2) = 0;\n    return;\n}\n",
        "token_count": 377
    },
    "004015b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004015b9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    ulong uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.00459a5f(arg_8h, arg_ch, arg_10h, arg_14h, &var_28h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00401636": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401636(int16_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    int32_t *piVar3;\n    \n    if (arg_8h == NULL) {\n        fcn.00402e91();\n        *(arg_ch + 8) = 0;\n        *(arg_ch + 0xc) = 0;\n    }\n    else {\n        if (*arg_8h != 0) {\n            arg_8h_00 = fcn.00404458(arg_14h, 0, arg_8h, 0xffffffff, 0, 0, 0, 0);\n            if (arg_8h_00 == 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.00403459(uVar2);\n                piVar3 = fcn.004029b9();\n                return *piVar3;\n            }\n            if ((*(arg_ch + 0xc) <= arg_8h_00 && arg_8h_00 != *(arg_ch + 0xc)) &&\n               (iVar1 = fcn.00401bd6(arg_8h_00),  iVar1 != 0)) {\n                return iVar1;\n            }\n            iVar1 = fcn.004027b1(arg_14h, arg_8h, *(arg_ch + 8), *(arg_ch + 0xc));\n            if (iVar1 == 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.00403459(uVar2);\n                piVar3 = fcn.004029b9();\n                return *piVar3;\n            }\n            *(arg_ch + 0x10) = iVar1 + -1;\n            return 0;\n        }\n        if ((*(arg_ch + 0xc) == 0) && (iVar1 = fcn.00401bd6(1),  iVar1 != 0)) {\n            return iVar1;\n        }\n        **(arg_ch + 8) = 0;\n    }\n    *(arg_ch + 0x10) = 0;\n    return 0;\n}\n",
        "token_count": 510
    },
    "00401659": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401659(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x4763e8);\n    return;\n}\n",
        "token_count": 49
    },
    "00401663": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401663(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint32_t arg_1ch)\n\n{\n    fcn.00402c8e(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0, arg_1ch & 0xffff);\n    return;\n}\n",
        "token_count": 95
    },
    "00401695": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401695(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = fcn.0044a63a(3, \"GetActiveWindow\", 0x46e154, 0x46e15c);\n    if (pcVar1 != NULL) {\n        (**0x47a000)();\n        iVar2 = (*pcVar1)();\n        if (iVar2 != 0) {\n            pcVar1 = fcn.0044a63a(6, \"GetLastActivePopup\", 0x46e1c0, 0x46e1c8);\n            if (pcVar1 == NULL) {\n                return iVar2;\n            }\n            (**0x47a000)(iVar2);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 193
    },
    "0040169f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040169f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint arg_1ch;\n    \n    arg_1ch = 0;\n    puVar1 = fcn.00403cd8();\n    iVar2 = fcn.0040296e(*puVar1 | 2, puVar1[1], arg_8h, arg_ch, arg_10h, arg_1ch, arg_14h);\n    if (iVar2 < 0) {\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 155
    },
    "004016e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004016e5(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t arg_ch_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = arg_8h;\n    fcn.00403e4f();\n    arg_ch_00 = 0;\n    iVar4 = *(arg_8h + 0x3c);\n    uVar8 = *(iVar4 + 0x78 + arg_8h) + arg_8h;\n    iVar1 = *(uVar8 + 0x24) + arg_8h;\n    iVar7 = *(uVar8 + 0x1c) + arg_8h;\n    iVar2 = *(uVar8 + 0x20) + arg_8h;\n    if ((arg_ch & 0xffff0000) == 0) {\n        arg_ch = arg_ch & 0xffff;\n        if ((arg_ch < *(uVar8 + 0x10)) || (*(uVar8 + 0x14) + *(uVar8 + 0x10) < arg_ch)) {\n            return 0;\n        }\n        arg_ch_00 = *(iVar7 + (arg_ch - *(uVar8 + 0x10)) * 4) + arg_8h;\n    }\n    else {\n        arg_8h = 0;\n        if (*(uVar8 + 0x18) != 0) {\n            do {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(arg_ch, *(iVar2 + arg_8h * 4) + iVar5);\n                if (iVar3 == 0) {\n                    arg_ch_00 = *(iVar7 + *(iVar1 + arg_8h * 2) * 4) + iVar5;\n                }\n                arg_8h = arg_8h + 1;\n            } while (arg_8h < *(uVar8 + 0x18));\n        }\n    }\n    if ((uVar8 <= arg_ch_00) && (arg_ch_00 < *(iVar4 + 0x7c + iVar5) + uVar8)) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch_00);\n        iVar5 = fcn.00401569(iVar4 + 1);\n        fcn.0040293c(iVar5, arg_ch_00, iVar4);\n        *(iVar5 + iVar4) = 0;\n        arg_ch_00 = 0;\n        puVar6 = fcn.004019ab(iVar5, 0x2e);\n        *puVar6 = 0;\n        iVar4 = (**0x475f68)(iVar5);\n        if (iVar4 != 0) {\n            arg_ch_00 = fcn.004016e5(iVar4, puVar6 + 1);\n        }\n        fcn.00403927(iVar5);\n    }\n    return arg_ch_00;\n}\n",
        "token_count": 729
    },
    "00401730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401730(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    arg_8h = *(arg_8h + 0x3c) + arg_8h;\n    iVar1 = *(arg_8h + 0x14) + 0x18 + arg_8h;\n    if (*(arg_8h + 6) != 0) {\n        do {\n            if ((*(iVar1 + 0xc) <= arg_ch) && (arg_ch < *(iVar1 + 8) + *(iVar1 + 0xc))) {\n                return iVar1;\n            }\n            uVar2 = uVar2 + 1;\n            iVar1 = iVar1 + 0x28;\n        } while (uVar2 < *(arg_8h + 6));\n    }\n    return 0;\n}\n",
        "token_count": 213
    },
    "00401749": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401749(code **arg_8h, code **arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    do {\n        if (arg_8h == arg_ch) {\n            return 0;\n        }\n        pcVar1 = *arg_8h;\n        if (pcVar1 != NULL) {\n            (**0x47a000)();\n            iVar2 = (*pcVar1)();\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n        arg_8h = arg_8h + 1;\n    } while( true );\n}\n",
        "token_count": 140
    },
    "00401825": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401825(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x477010);\n    return;\n}\n",
        "token_count": 48
    },
    "0040182f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040182f(int16_t *arg_8h)\n\n{\n    if ((*arg_8h == 0x5a4d) && (*(*(arg_8h + 0x1e) + arg_8h) == 0x4550)) {\n        return *(*(arg_8h + 0x1e) + arg_8h + 6) == 0x10b;\n    }\n    return false;\n}\n",
        "token_count": 103
    },
    "00401b77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401b77(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (arg_10h != 0) {\n        do {\n            uVar1 = *arg_8h;\n            arg_8h = arg_8h + 1;\n            if (uVar1 - 0x41 < 0x1a) {\n                uVar1 = uVar1 + 0x20;\n            }\n            uVar2 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            if (uVar2 - 0x41 < 0x1a) {\n                uVar2 = uVar2 + 0x20;\n            }\n        } while (((uVar1 - uVar2 == 0) && (uVar1 != 0)) && (arg_10h = arg_10h + -1,  arg_10h != 0));\n        return uVar1 - uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 250
    },
    "00401889": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401889(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t lpCriticalSection;\n    \n    lpCriticalSection = 0x4763e8;\n    uVar2 = 0;\n    do {\n        iVar1 = fcn.00403166(lpCriticalSection, 4000, 0);\n        if (iVar1 == 0) {\n            fcn.0040373d();\n            return 0;\n        }\n        *0x476400 = *0x476400 + 1;\n        uVar2 = uVar2 + 0x18;\n        lpCriticalSection = lpCriticalSection + 0x18;\n    } while (uVar2 < 0x18);\n    return 1;\n}\n",
        "token_count": 164
    },
    "004018a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004018a2(uint *arg_8h)\n\n{\n    char *var_8h;\n    uint var_4h;\n    \n    if ((((**0x476418 != '\\0') && (**0x476418 == '_')) && ((*0x476418)[1] != '\\0')) && ((*0x476418)[1] == 'E')) {\n        *0x476418 = *0x476418 + 2;\n        var_8h = \" noexcept\";\n        var_4h = 9;\n        fcn.00402211(&var_8h);\n        return arg_8h;\n    }\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    return arg_8h;\n}\n",
        "token_count": 170
    },
    "00401910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401910(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 42
    },
    "00401915": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00401915(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(arg_1ch);\n    uVar1 = fcn.0041ec65(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h, arg_20h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 139
    },
    "0040193d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040193d(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    code *pcVar4;\n    uint *puVar5;\n    int16_t *piVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t arg_8h_00;\n    int32_t arg_ch_00;\n    uint uVar9;\n    int16_t *piVar10;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar5 = fcn.004029b9();\n        *puVar5 = 0x16;\n        return 0xffffffff;\n    }\n    piVar6 = fcn.00403788(arg_8h, 0x3d);\n    if ((piVar6 == NULL) || (piVar6 == arg_8h)) {\n        puVar5 = fcn.004029b9();\n        *puVar5 = 0x16;\n        fcn.004042f5(arg_8h);\n        return 0xffffffff;\n    }\n    iVar3 = piVar6[1];\n    fcn.00444b0b();\n    uVar9 = 0;\n    piVar10 = arg_8h;\n    if (*0x476fc8 == NULL) {\n        if ((arg_ch == 0) || (*0x476fc4 == 0)) {\n            if (iVar3 == 0) goto code_r0x00444843;\n            if (*0x476fc4 == 0) {\n                *0x476fc4 = fcn.0040375b(1, 4);\n                fcn.004042f5(0);\n                if (*0x476fc4 == 0) goto code_r0x0044468b;\n                if (*0x476fc8 != NULL) goto code_r0x004446fc;\n            }\n            *0x476fc8 = fcn.0040375b(1, 4);\n            fcn.004042f5(0);\n            if (*0x476fc8 != NULL) goto code_r0x004446f8;\n        }\n        else {\n            iVar7 = fcn.00402ec8();\n            if (iVar7 == 0) {\n                puVar5 = fcn.004029b9();\n                *puVar5 = 0x16;\n            }\n            else {\n                fcn.00444b0b();\ncode_r0x004446f8:\n                if (*0x476fc8 != NULL) goto code_r0x004446fc;\n            }\n        }\n    }\n    else {\ncode_r0x004446fc:\n        piVar8 = *0x476fc8;\n        arg_ch_00 = piVar6 - arg_8h >> 1;\n        iVar7 = fcn.00444b95(arg_8h, arg_ch_00);\n        if ((-1 < iVar7) && (*piVar8 != 0)) {\n            fcn.004042f5(piVar8[iVar7]);\n            if (iVar3 == 0) {\n                for (; piVar8[iVar7] != 0; iVar7 = iVar7 + 1) {\n                    piVar8[iVar7] = piVar8[iVar7 + 1];\n                }\n                piVar8 = fcn.004021d5(piVar8, iVar7, 4);\n                fcn.004042f5(0);\n                if (piVar8 != NULL) {\ncode_r0x004447b5:\n                    *0x476fc8 = piVar8;\n                }\n            }\n            else {\n                piVar8[iVar7] = arg_8h;\n                piVar10 = NULL;\n            }\n            if (arg_ch == 0) {\ncode_r0x00444854:\n                fcn.004042f5(piVar10);\n                return 0;\n            }\n            piVar6 = arg_8h;\n            do {\n                iVar2 = *piVar6;\n                piVar6 = piVar6 + 1;\n            } while (iVar2 != 0);\n            iVar7 = (piVar6 - (arg_8h + 1) >> 1) + 2;\n            arg_8h_00 = fcn.0040375b(iVar7, 2);\n            if (arg_8h_00 == 0) {\n                fcn.004042f5(0);\n            }\n            else {\n                iVar7 = fcn.0040295a(arg_8h_00, iVar7, arg_8h);\n                if (iVar7 != 0) {\n                    fcn.0040277f(0, 0, 0, 0, 0);\n                    pcVar4 = swi(3);\n                    uVar9 = (*pcVar4)();\n                    return uVar9;\n                }\n                uVar1 = arg_8h_00 + (arg_ch_00 + 1) * 2;\n                *(uVar1 - 2) = 0;\n                iVar7 = (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(arg_8h_00, -(iVar3 != 0) & uVar1);\n                if (iVar7 != 0) {\n                    fcn.004042f5(arg_8h_00);\n                    goto code_r0x00444854;\n                }\n                puVar5 = fcn.004029b9();\n                *puVar5 = 0x2a;\n                fcn.004042f5(arg_8h_00);\n                uVar9 = 0xffffffff;\n            }\n            goto code_r0x00444843;\n        }\n        if (iVar3 == 0) goto code_r0x00444843;\n        uVar1 = -iVar7 + 2;\n        if ((-iVar7 <= uVar1) && (uVar1 < 0x3fffffff)) {\n            piVar8 = fcn.004021d5(piVar8, uVar1, 4);\n            fcn.004042f5(0);\n            if (piVar8 != NULL) {\n                piVar8[-iVar7] = arg_8h;\n                piVar8[1 - iVar7] = 0;\n                piVar10 = NULL;\n                goto code_r0x004447b5;\n            }\n        }\n    }\ncode_r0x0044468b:\n    uVar9 = 0xffffffff;\ncode_r0x00444843:\n    fcn.004042f5(piVar10);\n    return uVar9;\n}\n",
        "token_count": 1468
    },
    "00401992": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401992(uint *param_1)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint arg_10h;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    \n    puVar5 = param_1 + 0xf;\n    cVar2 = fcn.00403215(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar2 == '\\0') {\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = puVar5;\n        }\n        param_1[4] = param_1[4] + 4;\n        *puVar3 = *(param_1[4] + -4);\n        param_1[0xd] = 1;\n    }\n    else {\n        param_1[4] = param_1[4] + 4;\n        uVar1 = *(param_1[4] + -4);\n        arg_10h = fcn.00403d37();\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = puVar5;\n        }\n        iVar4 = fcn.00402f72(param_1 + 0xd, puVar3, arg_10h, uVar1, param_1[2]);\n        if (iVar4 != 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    puVar3 = param_1[0x110];\n    if (puVar3 != NULL) {\n        puVar5 = puVar3;\n    }\n    param_1[0xc] = puVar5;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 430
    },
    "00401a41": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401a41(uint32_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_10h == 1) {\n        uVar3 = *arg_8h;\n        uVar1 = *arg_ch;\n    }\n    else if (arg_10h == 2) {\n        iVar2 = *arg_8h - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 1);\n        uVar1 = *(arg_ch + 1);\n    }\n    else if (arg_10h == 3) {\n        iVar2 = *arg_8h - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 2);\n        uVar1 = *(arg_ch + 2);\n    }\n    else {\n        if (arg_10h != 4) {\ncode_r0x0046108f:\n    // switch table (32 cases) at 0x4621a8\n            switch(arg_10h) {\n            case 0:\n                break;\n            case 1:\n                goto code_r0x00461894;\n            case 2:\n                goto code_r0x00461cbd;\n            case 3:\n                goto code_r0x00461850;\n            case 4:\n                goto code_r0x00461414;\n            case 5:\n                goto code_r0x00461800;\n            case 6:\n                goto code_r0x00461c2a;\n            case 7:\n                goto code_r0x00462043;\n            case 8:\n                goto code_r0x00461381;\n            case 9:\n                goto code_r0x0046176d;\n            case 10:\n                goto code_r0x00461b96;\n            case 0xb:\n                goto code_r0x00461fb0;\n            case 0xc:\n                goto code_r0x004612ee;\n            case 0xd:\n                goto code_r0x004616da;\n            case 0xe:\n                goto code_r0x00461b03;\n            case 0xf:\n                goto code_r0x00461f1d;\n            case 0x10:\n                goto code_r0x0046125b;\n            case 0x11:\n                goto code_r0x00461647;\n            case 0x12:\n                goto code_r0x00461a70;\n            case 0x13:\n                goto code_r0x00461e89;\n            case 0x14:\n                goto code_r0x004611c8;\n            case 0x15:\n                goto code_r0x004615b4;\n            case 0x16:\n                goto code_r0x004619dd;\n            case 0x17:\n                goto code_r0x00461df6;\n            case 0x1a:\n                goto code_r0x0046194a;\n            case 0x1b:\n                goto code_r0x00461d63;\n            case 0x1c:\n                uVar1 = *(arg_8h + arg_10h + -0x1c);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1c)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\n            case 0x18:\n                uVar1 = *(arg_8h + arg_10h + -0x18);\n                if (uVar1 != *(arg_ch + arg_10h + -0x18)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004611c8:\n                uVar1 = *(arg_8h + arg_10h + -0x14);\n                if (uVar1 != *(arg_ch + arg_10h + -0x14)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0046125b:\n                uVar1 = *(arg_8h + arg_10h + -0x10);\n                if (uVar1 != *(arg_ch + arg_10h + -0x10)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004612ee:\n                uVar1 = *(arg_8h + arg_10h + -0xc);\n                if (uVar1 != *(arg_ch + arg_10h + -0xc)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00461381:\n                uVar1 = *(arg_8h + arg_10h + -8);\n                if (uVar1 != *(arg_ch + arg_10h + -8)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00461414:\n                uVar1 = *(arg_8h + arg_10h + -4);\n                if (uVar1 != *(arg_ch + arg_10h + -4)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -4);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -1) - *(arg_ch + arg_10h + -1);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\n                break;\n            case 0x1d:\n                uVar1 = *(arg_8h + arg_10h + -0x1d);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1d)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1d);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\n            case 0x19:\n                if (*(arg_8h + arg_10h + -0x19) != *(arg_ch + arg_10h + -0x19)) {\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004615b4:\n                uVar1 = *(arg_8h + arg_10h + -0x15);\n                if (uVar1 != *(arg_ch + arg_10h + -0x15)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00461647:\n                uVar1 = *(arg_8h + arg_10h + -0x11);\n                if (uVar1 != *(arg_ch + arg_10h + -0x11)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004616da:\n                uVar1 = *(arg_8h + arg_10h + -0xd);\n                if (uVar1 != *(arg_ch + arg_10h + -0xd)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0046176d:\n                uVar1 = *(arg_8h + arg_10h + -9);\n                if (uVar1 != *(arg_ch + arg_10h + -9)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00461800:\n                if (*(arg_8h + arg_10h + -5) != *(arg_ch + arg_10h + -5)) {\ncode_r0x0046180c:\n                    iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\ncode_r0x00461850:\n                    iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\ncode_r0x00461872:\n                    iVar2 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00461894:\n                uVar1 = *(arg_ch + arg_10h + -1);\n                uVar3 = *(arg_8h + arg_10h + -1);\n                if (uVar3 == uVar1) {\n                    return 0;\n                }\n                return (0 < uVar3 - uVar1) * 2 + -1;\n            case 0x1e:\n                uVar1 = *(arg_8h + arg_10h + -0x1e);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1e)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1e);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1d) - *(arg_ch + arg_10h + -0x1d);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x0046194a:\n                uVar1 = *(arg_8h + arg_10h + -0x1a);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1a)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x004619dd:\n                uVar1 = *(arg_8h + arg_10h + -0x16);\n                if (uVar1 != *(arg_ch + arg_10h + -0x16)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00461a70:\n                uVar1 = *(arg_8h + arg_10h + -0x12);\n                if (uVar1 != *(arg_ch + arg_10h + -0x12)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00461b03:\n                uVar1 = *(arg_8h + arg_10h + -0xe);\n                if (uVar1 != *(arg_ch + arg_10h + -0xe)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00461b96:\n                if (*(arg_8h + arg_10h + -10) != *(arg_ch + arg_10h + -10)) {\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00461c2a:\n                uVar1 = *(arg_8h + arg_10h + -6);\n                if (uVar1 != *(arg_ch + arg_10h + -6)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00461cbd:\n                if (*(arg_8h + arg_10h + -2) != *(arg_ch + arg_10h + -2)) goto code_r0x00461872;\n                break;\n            case 0x1f:\n                uVar1 = *(arg_8h + arg_10h + -0x1f);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1f)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1f);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1e) - *(arg_ch + arg_10h + -0x1e);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1d) - *(arg_ch + arg_10h + -0x1d);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00461d63:\n                uVar1 = *(arg_8h + arg_10h + -0x1b);\n                if (uVar1 != *(arg_ch + arg_10h + -0x1b)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1b);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00461df6:\n                uVar1 = *(arg_8h + arg_10h + -0x17);\n                if (uVar1 != *(arg_ch + arg_10h + -0x17)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x17);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00461e89:\n                if (*(arg_8h + arg_10h + -0x13) != *(arg_ch + arg_10h + -0x13)) {\n                    iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00461f1d:\n                uVar1 = *(arg_8h + arg_10h + -0xf);\n                if (uVar1 != *(arg_ch + arg_10h + -0xf)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xf);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00461fb0:\n                uVar1 = *(arg_8h + arg_10h + -0xb);\n                if (uVar1 != *(arg_ch + arg_10h + -0xb)) {\n                    iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xb);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                }\ncode_r0x00462043:\n                if (*(arg_8h + arg_10h + -7) != *(arg_ch + arg_10h + -7)) {\n                    iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n                    if (iVar2 != 0) {\n                        iVar2 = (0 < iVar2) * 2 + -1;\n                    }\n                    if (iVar2 != 0) {\n                        return iVar2;\n                    }\n                    goto code_r0x0046180c;\n                }\n                goto code_r0x00461850;\n            default:\n                goto code_r0x00460bf2;\n            }\n            return 0;\n        }\n        iVar2 = *arg_8h - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        uVar3 = *(arg_8h + 3);\n        uVar1 = *(arg_ch + 3);\n    }\n    if (uVar3 == uVar1) {\n        return 0;\n    }\n    return (0 < uVar3 - uVar1) * 2 + -1;\ncode_r0x00460bf2:\n    if (*arg_8h != *arg_ch) {\n        iVar2 = (*arg_8h & 0xff) - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 3) - *(arg_ch + 3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[1] != arg_ch[1]) {\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 5) - *(arg_ch + 5);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 6) - *(arg_ch + 6);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 7) - *(arg_ch + 7);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[2] != arg_ch[2]) {\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 9) - *(arg_ch + 9);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 10) - *(arg_ch + 10);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[3] != arg_ch[3]) {\n        iVar2 = (arg_8h[3] & 0xff) - *(arg_ch + 3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xd) - *(arg_ch + 0xd);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xe) - *(arg_ch + 0xe);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[4] != arg_ch[4]) {\n        iVar2 = (arg_8h[4] & 0xff) - *(arg_ch + 4);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x11) - *(arg_ch + 0x11);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x12) - *(arg_ch + 0x12);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[5] != arg_ch[5]) {\n        iVar2 = (arg_8h[5] & 0xff) - *(arg_ch + 5);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x15) - *(arg_ch + 0x15);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x16) - *(arg_ch + 0x16);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[6] != arg_ch[6]) {\n        iVar2 = (arg_8h[6] & 0xff) - *(arg_ch + 6);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x19) - *(arg_ch + 0x19);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1a) - *(arg_ch + 0x1a);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[7] != arg_ch[7]) {\n        iVar2 = (arg_8h[7] & 0xff) - *(arg_ch + 7);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1d) - *(arg_ch + 0x1d);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1e) - *(arg_ch + 0x1e);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    arg_8h = arg_8h + 8;\n    arg_ch = arg_ch + 8;\n    arg_10h = arg_10h + -0x20;\n    goto code_r0x0046108f;\n}\n",
        "token_count": 13812
    },
    "00401a96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint16_t __cdecl fcn.00401a96(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = arg_8h & 0xffff;\n    if (var_8h != 0xffff) {\n        if (var_8h < 0x100) {\n            return *(*0x4757fc + var_8h * 2) & arg_ch;\n        }\n        var_4h = 0;\n        iVar1 = fcn.004039e5(1, &var_8h, 1, &var_4h);\n        if (iVar1 != 0) {\n            return var_4h & arg_ch;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 193
    },
    "00408416": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408416(void)\n\n{\n    uint arg_8h;\n    uint arg_8h_00;\n    uint arg_ch;\n    uint arg_10h;\n    uint arg_14h;\n    code *var_4h;\n    \n    arg_8h = fcn.004012cb(&var_4h);\n    arg_8h_00 = fcn.004044d5();\n    arg_10h = arg_8h_00;\n    arg_14h = arg_8h;\n    arg_ch = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h_00, arg_8h, var_4h);\n    fcn.00401253(arg_8h_00, arg_ch, arg_10h, arg_14h);\n    var_4h = fcn.0040116d(arg_8h);\n    (*var_4h)();\n    return;\n}\n",
        "token_count": 202
    },
    "00401adc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401adc(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004020a9();\n    return iVar1 + 0x10;\n}\n",
        "token_count": 44
    },
    "00412a76": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412a76(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00402293(arg_8h, arg_ch, *(in_ECX + 4), *(in_ECX + 8));\n    return;\n}\n",
        "token_count": 66
    },
    "00401b63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401b63(uint8_t *arg_8h, int32_t **arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    \n    piVar2 = *arg_ch;\n    uVar3 = *arg_8h;\n    if (*(uVar3 + piVar2[0x25]) != 'e') {\n        do {\n            arg_8h = arg_8h + 1;\n            uVar3 = *arg_8h;\n        } while ((*(*piVar2 + uVar3 * 2) & 4) != 0);\n    }\n    if (*(uVar3 + piVar2[0x25]) == 'x') {\n        arg_8h = arg_8h + 2;\n        uVar3 = *arg_8h;\n    }\n    *arg_8h = **piVar2[0x22];\n    do {\n        arg_8h = arg_8h + 1;\n        uVar1 = *arg_8h;\n        *arg_8h = uVar3;\n        bVar4 = uVar3 != 0;\n        uVar3 = uVar1;\n    } while (bVar4);\n    return;\n}\n",
        "token_count": 289
    },
    "00401bd6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401bd6(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.00402e91();\n    iVar1 = fcn.004041e2(in_ECX + 8, arg_8h);\n    if (iVar1 == 0) {\n        *(in_ECX + 0x14) = 1;\n        iVar1 = 0;\n        *(in_ECX + 0xc) = arg_8h;\n    }\n    else {\n        *(in_ECX + 0xc) = 0;\n        *(in_ECX + 0x14) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 158
    },
    "00401c17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00401c17(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.00401636(arg_8h, arg_ch, &var_1h, arg_10h);\n    return;\n}\n",
        "token_count": 82
    },
    "00401c2b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401c2b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.00458bd1(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "00401cd5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401cd5(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00403599(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "00401da2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00401da2(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    if ((param_4 | param_2) == 0) {\n        return param_1 * param_3;\n    }\n    return param_1 * param_3 & 0xffffffff | (param_1 * param_3 >> 0x20) + param_2 * param_3 + param_1 * param_4 << 0x20;\n}\n",
        "token_count": 119
    },
    "00401f23": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401f23(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    \n    if (*arg_8h == 0) {\n        *arg_8h = arg_ch;\n        *(arg_8h + 1) = arg_10h;\n        arg_8h[3] = arg_14h;\n    }\n    else {\n        cVar2 = fcn.00401960(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (cVar2 == '\\0') {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 249
    },
    "00403693": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403693(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00403c4c();\n    if (iVar2 != 0) {\n        fcn.00403e6d(0x16);\n    }\n    if ((*0x475084 & 2) != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(0x17);\n        if (iVar2 != 0) {\n            pcVar1 = swi(0x29);\n            (*pcVar1)();\n        }\n        fcn.00403d78(3, 0x40000015, 1);\n    }\n    fcn.004040de(3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 185
    },
    "004020c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.004020c2(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0;\n    uStack36 = 0;\n    uStack40 = 0;\n    for (; uVar1 = *arg_ch,  uVar1 != 0; arg_ch = arg_ch + 1) {\n        puVar2 = &uStack40 + (uVar1 >> 3);\n        *puVar2 = *puVar2 | '\\x01' << (uVar1 & 7);\n    }\n    do {\n        puVar3 = arg_8h;\n        puVar2 = *puVar3;\n        if (*puVar3 == 0) {\n            return puVar2;\n        }\n        arg_8h = puVar3 + 1;\n    } while ((*(&uStack40 + (puVar2 >> 3)) >> (puVar2 & 7) & 1) == 0);\n    return puVar3;\n}\n",
        "token_count": 339
    },
    "0040215d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040215d(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00414d24(1, \"FlsFree\", 0x46b1b4, 0x46b1bc);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(arg_8h);\n    }\n    else {\n        (**0x47a000)();\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "004021d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004021d5(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch == 0) || (arg_10h <= 0xffffffe0 / arg_ch)) {\n        if (arg_8h == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00401177(arg_8h);\n        }\n        arg_ch = arg_ch * arg_10h;\n        iVar2 = fcn.00402fd1(arg_8h, arg_ch);\n        if ((iVar2 != 0) && (uVar3 < arg_ch)) {\n            fcn.0040248c(iVar2 + uVar3, 0, arg_ch - uVar3);\n        }\n    }\n    else {\n        puVar1 = fcn.004029b9();\n        *puVar1 = 0xc;\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 249
    },
    "004021f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004021f3(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.0044a63a(0x1a, \"AppPolicyGetShowDeveloperDiagnostic\", 0x46e46c, \"AppPolicyGetShowDeveloperDiagnostic\");\n    if (pcVar1 == NULL) {\n        uVar2 = 0xc0000225;\n    }\n    else {\n        (**0x47a000)(0xfffffffa, arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 138
    },
    "00402207": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402207(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403e4f();\n    uVar6 = 0;\n    iVar5 = *(*(arg_8h + 0x3c) + 0x78 + arg_8h) + arg_8h;\n    iVar1 = *(iVar5 + 0x1c);\n    iVar2 = *(iVar5 + 0x20);\n    iVar3 = *(iVar5 + 0x24);\n    if (*(iVar5 + 0x18) != 0) {\n        do {\n            iVar4 = fcn.004044e9(*(iVar2 + arg_8h + uVar6 * 4) + arg_8h);\n            if (iVar4 == arg_ch) {\n                return *(iVar1 + arg_8h + *(iVar3 + arg_8h + uVar6 * 2) * 4) + arg_8h;\n            }\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < *(iVar5 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 315
    },
    "00402225": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402225(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    \n    in_ECX[2] = arg_10h;\n    *in_ECX = arg_8h;\n    in_ECX[1] = arg_ch;\n    *(in_ECX + 3) = 0;\n    iVar2 = fcn.00403df5(arg_8h, arg_ch, arg_10h + 0x250, 0x55);\n    if (iVar2 == 0) {\n        return;\n    }\n    fcn.0040277f(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 191
    },
    "00402293": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402293(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_ch - arg_8h < arg_14h) {\n        arg_14h = arg_ch - arg_8h;\n    }\n    fcn.004146fd(arg_8h, arg_10h, arg_14h);\n    return arg_8h + arg_14h;\n}\n",
        "token_count": 109
    },
    "004022a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004022a7(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h != 0) {\n        iVar1 = arg_8h;\n        if (arg_8h != arg_8h + 0xe00) {\n            do {\n                (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(iVar1);\n                iVar1 = iVar1 + 0x38;\n            } while (iVar1 != arg_8h + 0xe00);\n        }\n        fcn.004042f5(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00402315": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402315(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    uint *puVar2;\n    int16_t **in_ECX;\n    \n    piVar1 = *in_ECX;\n    *in_ECX = piVar1 + -1;\n    if ((arg_8h != 0) && (piVar1[-1] != arg_8h)) {\n        puVar2 = fcn.004029b9();\n        *puVar2 = 0x16;\n        fcn.00402842();\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00402397": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402397(uint *param_1)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint arg_10h;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    \n    puVar5 = param_1 + 0xf;\n    cVar2 = fcn.00403215(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar2 == '\\0') {\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = puVar5;\n        }\n        param_1[4] = param_1[4] + 4;\n        *puVar3 = *(param_1[4] + -4);\n        param_1[0xd] = 1;\n    }\n    else {\n        param_1[4] = param_1[4] + 4;\n        uVar1 = *(param_1[4] + -4);\n        arg_10h = fcn.00403d37();\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = puVar5;\n        }\n        iVar4 = fcn.00402f72(param_1 + 0xd, puVar3, arg_10h, uVar1, param_1[2]);\n        if (iVar4 != 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    puVar3 = param_1[0x110];\n    if (puVar3 != NULL) {\n        puVar5 = puVar3;\n    }\n    param_1[0xc] = puVar5;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 430
    },
    "004023ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004023ab(int32_t arg_8h, int32_t arg_ch)\n\n{\n    fcn.00403e4f();\n    return arg_8h + arg_ch;\n}\n",
        "token_count": 48
    },
    "004023c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004023c9(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    do {\n        uVar1 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        if (uVar1 - 0x41 < 0x1a) {\n            uVar1 = uVar1 + 0x20;\n        }\n        uVar2 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        if (uVar2 - 0x41 < 0x1a) {\n            uVar2 = uVar2 + 0x20;\n        }\n    } while ((uVar1 == uVar2) && (uVar1 != 0));\n    return;\n}\n",
        "token_count": 187
    },
    "0040244b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040244b(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.004022de(param_4, param_1, param_2);\n    return;\n}\n",
        "token_count": 55
    },
    "0040245a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040245a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *(param_1 + 0x404);\n    iVar2 = fcn.00403d37();\n    if (iVar1 == 0) {\n        iVar2 = iVar2 + param_1;\n    }\n    else {\n        iVar2 = iVar2 + iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 106
    },
    "0040245f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __fastcall fcn.0040245f(uint param_1, uint param_2, ushort param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    float10 in_ST0;\n    uint var_20h;\n    uint uStack28;\n    uint uStack24;\n    double dStack12;\n    \n    dStack12 = in_ST0;\n    uStack28 = param_5;\n    uStack24 = param_6;\n    fcn.00402748(param_2, &var_20h, &param_3);\n    return dStack12;\n}\n",
        "token_count": 132
    },
    "004024f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004024f0(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    uint var_4h;\n    \n    arg_8h = fcn.00401cb2();\n    *(param_1 + 0xc) = *(arg_8h + 0x4c);\n    *(param_1 + 0x10) = *(arg_8h + 0x48);\n    fcn.00401a00(arg_8h, param_1 + 0xc, *(param_1 + 4));\n    fcn.004016c2(arg_8h, param_1 + 0x10, *(param_1 + 4));\n    if ((*(arg_8h + 0x350) & 2) == 0) {\n        *(arg_8h + 0x350) = *(arg_8h + 0x350) | 2;\n        *(param_1 + 0x14) = 2;\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "004025ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004025ef(uint *param_1)\n\n{\n    char cVar1;\n    uint arg_10h;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *var_4h;\n    \n    var_4h = param_1;\n    cVar1 = fcn.00403215(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar1 == '\\0') {\n        puVar2 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar2 = param_1 + 0xf;\n        }\n        cVar1 = fcn.00402e69(puVar2);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.0040383c();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        param_1[0xd] = 1;\n    }\n    else {\n        var_4h = var_4h & 0xffff0000;\n        cVar1 = fcn.00402216(&var_4h);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.0040383c();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        arg_10h = fcn.00403d37();\n        puVar2 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar2 = param_1 + 0xf;\n        }\n        iVar3 = fcn.00402f72(param_1 + 0xd, puVar2, arg_10h, var_4h, param_1[2]);\n        if (iVar3 != 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    puVar2 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar2 = param_1[0x110];\n    }\n    param_1[0xc] = puVar2;\n    return 1;\n}\n",
        "token_count": 508
    },
    "0040268f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040268f(void)\n\n{\n    uint32_t in_EAX;\n    uchar *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint unaff_retaddr;\n    uchar auStack4 [4];\n    \n    puVar1 = in_EAX + (&stack0x00000004 + -in_EAX & 0xf) | -CARRY4(in_EAX, &stack0x00000004 + -in_EAX & 0xf);\n    puVar3 = &stack0x00000000 - puVar1 & ~-(*0x10 < puVar1);\n    for (puVar2 = auStack4 & 0xfffff000; puVar3 < puVar2; puVar2 = puVar2 + -0x400) {\n    }\n    *puVar3 = unaff_retaddr;\n    return;\n}\n",
        "token_count": 193
    },
    "004026c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004026c1(uint *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00402211(arg_ch * 8 + 0x46a228);\n    pcVar2 = *0x476418 + 1;\n    if ((**0x476418 == '@') && (pcVar2 = *0x476418 + 2,  (*0x476418)[1] == '_')) {\n        *0x476418 = *0x476418 + 3;\n        fcn.004026ee(&var_10h, 0);\n        fcn.004026ee(&var_10h, 0);\n        while (cVar1 = **0x476418,  cVar1 != '\\0') {\n            *0x476418 = *0x476418 + 1;\n            if (cVar1 == '@') {\n                *arg_8h = var_8h;\n                arg_8h[1] = var_4h;\n                return arg_8h;\n            }\n        }\n        *0x476418 = *0x476418 + -1;\n        arg_8h_00 = 1;\n    }\n    else {\n        *0x476418 = pcVar2;\n        arg_8h_00 = 2;\n    }\n    fcn.004014dd(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 354
    },
    "004026f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004026f3(int16_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    if (arg_8h == NULL) {\n        fcn.00402270();\n        iVar1 = 0;\n    }\n    else if (*arg_8h == 0) {\n        if ((*(arg_ch + 0xc) != 0) || (iVar1 = fcn.00402b49(1),  iVar1 == 0)) {\n            **(arg_ch + 8) = 0;\n            iVar1 = 0;\n            *(arg_ch + 0x10) = 0;\n        }\n    }\n    else {\n        uVar2 = fcn.00404458(arg_14h, 0, arg_8h, 0xffffffff, 0, 0, 0, 0);\n        if (uVar2 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.00403459(uVar3);\n            piVar4 = fcn.004029b9();\n            iVar1 = *piVar4;\n        }\n        else if ((uVar2 < *(arg_ch + 0xc) || uVar2 == *(arg_ch + 0xc)) || (iVar1 = fcn.00402b49(uVar2),  iVar1 == 0)) {\n            iVar1 = fcn.00404633(arg_14h, arg_8h, *(arg_ch + 8), *(arg_ch + 0xc));\n            if (iVar1 == 0) {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.00403459(uVar3);\n                piVar4 = fcn.004029b9();\n                iVar1 = *piVar4;\n            }\n            else {\n                *(arg_ch + 0x10) = iVar1 + -1;\n                iVar1 = 0;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 482
    },
    "00402748": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402748(int32_t param_1, int32_t *param_2, uint16_t *param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint in_stack_ffffff68;\n    uint32_t uStack148;\n    uchar auStack144 [48];\n    ulong uStack96;\n    uint32_t uStack80;\n    uint32_t uStack20;\n    \n    uStack20 = *0x47502c ^ &stack0xfffffff0;\n    uStack148 = *param_3;\n    iVar2 = *param_2;\n    if (iVar2 == 1) {\ncode_r0x0045e089:\n        arg_8h = 8;\ncode_r0x0045e08b:\n        iVar2 = fcn.0040235b(arg_8h, param_2 + 6, uStack148);\n        if (iVar2 == 0) {\n            if (((param_1 == 0x10) || (param_1 == 0x16)) || (param_1 == 0x1d)) {\n                uStack96 = *(param_2 + 4);\n                uStack80 = uStack80 & 0xffffffe3 | 3;\n            }\n            else {\n                uStack80 = uStack80 & 0xfffffffe;\n            }\n            fcn.00402fea(auStack144, &uStack148, arg_8h, param_1, param_2 + 2, param_2 + 6);\n        }\n    }\n    else {\n        if (iVar2 == 2) {\n            arg_8h = 4;\n            goto code_r0x0045e08b;\n        }\n        if (iVar2 == 3) {\n            arg_8h = 0x11;\n            goto code_r0x0045e08b;\n        }\n        if (iVar2 == 4) {\n            arg_8h = 0x12;\n            goto code_r0x0045e08b;\n        }\n        if (iVar2 == 5) goto code_r0x0045e089;\n        if (iVar2 == 8) {\n            arg_8h = 0x10;\n            goto code_r0x0045e08b;\n        }\n    }\n    fcn.0040389b(uStack148, 0xffff);\n    if (*param_2 != 8) {\n        cVar1 = fcn.004032c4();\n        if (cVar1 != '\\0') {\n            iVar2 = fcn.004023a1(param_2);\n            if (iVar2 != 0) goto code_r0x0045e118;\n        }\n    }\n    fcn.00402bad(*param_2);\ncode_r0x0045e118:\n    fcn.0040241e(in_stack_ffffff68);\n    return;\n}\n",
        "token_count": 634
    },
    "0040277f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040277f(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(0x17);\n    if (iVar2 != 0) {\n        pcVar1 = swi(0x29);\n        (*pcVar1)();\n    }\n    fcn.00403d78(2, 0xc0000417, 1);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000417);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar3);\n    return;\n}\n",
        "token_count": 150
    },
    "00402784": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402784(int16_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t **arg_8h_00;\n    int16_t **arg_10h_00;\n    int16_t *arg_10h_01;\n    ushort *arg_8h_01;\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t arg_8h_02;\n    uint uVar5;\n    int16_t *piVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00402f95();\n    arg_8h_00 = iVar3 + 0x50;\n    arg_10h_01 = iVar3 + 0x2a0;\n    *(iVar3 + 0x58) = 0;\n    *arg_10h_01 = 0;\n    arg_10h_00 = iVar3 + 0x54;\n    *arg_8h_00 = arg_8h;\n    *arg_10h_00 = arg_8h + 0x40;\n    piVar6 = arg_8h;\n    if (arg_8h[0x40] != 0) {\n        fcn.00448fe5(0x46ce78, 0x16, arg_10h_00);\n        piVar6 = *arg_8h_00;\n    }\n    if (*piVar6 == 0) {\n        fcn.0044875e(arg_8h_00);\n    }\n    else {\n        if (**arg_10h_00 == 0) {\n            fcn.004488c5(arg_8h_00);\n        }\n        else {\n            fcn.00448806(arg_8h_00);\n        }\n        if ((*(iVar3 + 0x58) == 0) && (iVar4 = fcn.00448fe5(0x46cac8, 0x40, arg_8h_00),  iVar4 != 0)) {\n            if (**arg_10h_00 == 0) {\n                fcn.004488c5(arg_8h_00);\n            }\n            else {\n                fcn.00448806(arg_8h_00);\n            }\n        }\n    }\n    if (*(iVar3 + 0x58) != 0) {\n        if ((*arg_8h == 0) && (arg_8h[0x80] == 0)) {\n            arg_8h_02 = (*_sym.imp.KERNEL32.dll_GetACP)();\n        }\n        else {\n            arg_8h_02 = fcn.00448dfb(arg_8h + 0x80, arg_8h_00);\n        }\n        if (((arg_8h_02 != 0) && (arg_8h_02 != 65000)) &&\n           (iVar4 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(arg_8h_02 & 0xffff),  iVar4 != 0)) {\n            if (arg_ch != NULL) {\n                *arg_ch = arg_8h_02;\n            }\n            if (arg_10h == 0) {\n                return 1;\n            }\n            arg_8h_01 = arg_10h + 0x120;\n            *arg_8h_01 = 0;\n            piVar6 = arg_10h_01;\n            do {\n                iVar1 = *piVar6;\n                piVar6 = piVar6 + 1;\n            } while (iVar1 != 0);\n            iVar3 = fcn.00403df5(arg_8h_01, 0x55, arg_10h_01, (piVar6 - (iVar3 + 0x2a2) >> 1) + 1);\n            if (iVar3 != 0) {\ncode_r0x0044925b:\n                fcn.0040277f(0, 0, 0, 0, 0);\n                pcVar2 = swi(3);\n                uVar5 = (*pcVar2)();\n                return uVar5;\n            }\n            iVar3 = fcn.0040321a(arg_8h_01, 0x1001, arg_10h, 0x40);\n            if (iVar3 != 0) {\n                iVar3 = arg_10h + 0x80;\n                iVar4 = fcn.0040321a(arg_10h + 0x120, 0x1002, iVar3, 0x40);\n                if ((iVar4 != 0) &&\n                   (((iVar4 = fcn.00403788(iVar3, 0x5f),  iVar4 == 0 && (iVar4 = fcn.00403788(iVar3, 0x2e),  iVar4 == 0)\n                     ) || (iVar3 = fcn.0040321a(arg_10h + 0x120, 7, iVar3, 0x40),  iVar3 != 0)))) {\n                    if (arg_8h_02 != 0xfde9) {\n                        fcn.0040306c(arg_8h_02, arg_10h + 0x100, 0x10, 10);\n                        return 1;\n                    }\n                    iVar3 = fcn.00403df5(arg_10h + 0x100, 0x10, L\"utf8\", 5);\n                    if (iVar3 == 0) {\n                        return 1;\n                    }\n                    goto code_r0x0044925b;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1271
    },
    "004027b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004027b1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00404458(arg_8h, 0, arg_ch, 0xffffffff, arg_10h, arg_14h, 0, 0);\n    return;\n}\n",
        "token_count": 76
    },
    "004027e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004027e3(int16_t *arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar2 = arg_8h;\n    if (*arg_8h != 0) {\n        do {\n            if (*arg_ch != 0) {\n                piVar3 = arg_ch;\n                iVar1 = *arg_ch;\n                do {\n                    if (*piVar2 == iVar1) goto code_r0x00447168;\n                    piVar3 = piVar3 + 1;\n                    iVar1 = *piVar3;\n                } while (iVar1 != 0);\n            }\n            piVar2 = piVar2 + 1;\n        } while (*piVar2 != 0);\n    }\ncode_r0x00447168:\n    return piVar2 - arg_8h >> 1;\n}\n",
        "token_count": 224
    },
    "004027fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004027fc(uint arg_8h)\n\n{\n    uint var_4h;\n    \n    fcn.00403b34(&var_4h, 0x1f);\n    fcn.0045f662(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 67
    },
    "00402806": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402806(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.0044a63a(0x19, \"AppPolicyGetThreadInitializationType\", 0x46e43c, \"AppPolicyGetThreadInitializationType\"\n                         );\n    if (pcVar1 == NULL) {\n        uVar2 = 0xc0000225;\n    }\n    else {\n        (**0x47a000)(0xfffffffa, arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 138
    },
    "00402824": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00402824(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint32_t arg_8h_00;\n    \n    arg_8h = (*_sym.imp.KERNEL32.dll_GetEnvironmentStringsW)();\n    if (arg_8h == 0) {\n        return 0;\n    }\n    iVar1 = fcn.00444195(arg_8h);\n    arg_8h_00 = iVar1 - arg_8h & 0xfffffffe;\n    iVar1 = fcn.00402d88(arg_8h_00);\n    if (iVar1 != 0) {\n        fcn.00403c38(iVar1, arg_8h, arg_8h_00);\n    }\n    fcn.004042f5(0);\n    (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg_8h);\n    return iVar1;\n}\n",
        "token_count": 205
    },
    "00402842": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402842(void)\n\n{\n    fcn.004040cf(0, 0, 0, 0, 0);\n    return;\n}\n",
        "token_count": 37
    },
    "00402874": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402874(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.0044a63a(0x20, \"FlsGetValue\", 0x46e524, 0x46e52c);\n    if (pcVar1 != NULL) {\n        (**0x47a000)(arg_8h);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0044ab07. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsGetValue)();\n    return;\n}\n",
        "token_count": 148
    },
    "004028bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004028bf(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    \n    if (*arg_8h == 0) {\n        *arg_8h = arg_ch;\n        *(arg_8h + 1) = arg_10h;\n        arg_8h[3] = arg_14h;\n    }\n    else {\n        cVar2 = fcn.00401a19(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (cVar2 == '\\0') {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 249
    },
    "00402941": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00402941(int16_t *arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    \n    if (*arg_8h != 0) {\n        do {\n            if (*arg_ch != 0) {\n                iVar1 = *arg_8h;\n                piVar3 = arg_ch;\n                iVar2 = *arg_ch;\n                do {\n                    if (iVar2 == iVar1) {\n                        return arg_8h;\n                    }\n                    piVar3 = piVar3 + 1;\n                    iVar2 = *piVar3;\n                    iVar1 = *arg_8h;\n                } while (iVar2 != 0);\n            }\n            arg_8h = arg_8h + 1;\n        } while (*arg_8h != 0);\n    }\n    return NULL;\n}\n",
        "token_count": 203
    },
    "0040296e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040296e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(arg_1ch);\n    uVar1 = fcn.0041e8b1(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h, arg_20h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "0040298c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040298c(int32_t arg_8h)\n\n{\n    return arg_8h * 0x38 + 0x475870;\n}\n",
        "token_count": 41
    },
    "004029b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004029b9(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040461a();\n    if (iVar1 == 0) {\n        return 0x475094;\n    }\n    return iVar1 + 0x10;\n}\n",
        "token_count": 65
    },
    "004029f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004029f5(int32_t arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    double dVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    \n    dVar2 = CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h)));\n    if (dVar2 == 0.0) {\n        iVar3 = 0;\n    }\n    else if (((arg_ch & 0x7ff00000) == 0) && (((arg_ch & 0xfffff) != 0 || (arg_8h != 0)))) {\n        iVar3 = -0x3fd;\n        if ((arg_ch & 0x100000) == 0) {\n            do {\n                uVar1 = arg_ch * 2;\n                arg_ch._0_2_ = uVar1;\n                arg_ch = uVar1;\n                if (arg_8h < 0) {\n                    arg_ch = uVar1 | 1;\n                }\n                arg_8h = arg_8h * 2;\n                iVar3 = iVar3 + -1;\n            } while ((uVar1 & 0x100000) == 0);\n            arg_ch = uVar1 & 0xffff0000 | arg_ch;\n        }\n        uVar4 = arg_ch >> 0x10 & 0xffef;\n        arg_ch._2_1_ = uVar4;\n        arg_ch._3_1_ = uVar4 >> 8;\n        if (((0.0 < dVar2) << 8 | (dVar2 == 0.0) << 0xe) == 0) {\n            arg_ch._3_1_ = arg_ch._3_1_ | 0x80;\n        }\n        fcn.004038f5(arg_8h, CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h))) >> 0x20, 0);\n    }\n    else {\n        fcn.004038f5(arg_8h, dVar2 >> 0x20, 0);\n        iVar3 = (arg_ch >> 0x14 & 0x7ff) - 0x3fe;\n    }\n    *arg_10h = iVar3;\n    return;\n}\n",
        "token_count": 539
    },
    "004029ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004029ff(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = fcn.00403cd8();\n    iVar2 = fcn.00401915(*puVar1, puVar1[1], arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar2 < 0) {\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 138
    },
    "00402a3b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_280h\n// WARNING: Variable defined which should be unmapped: var_260h\n// WARNING: Variable defined which should be unmapped: var_284h\n// WARNING: Variable defined which should be unmapped: var_288h\n\nvoid __cdecl fcn.00402a3b(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    ulong uVar4;\n    uint *puStack828;\n    uint *puStack824;\n    uint uStack820;\n    uint uStack816;\n    uint var_324h;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint32_t var_264h;\n    uchar *var_260h;\n    uint var_25ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_4ch;\n    uint *ExceptionInfo;\n    uint *var_4h;\n    \n    uStack816 = 0x17;\n    uStack820 = 0x40a5ec;\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)();\n    if (iVar2 != 0) {\n        pcVar1 = swi(0x29);\n        (*pcVar1)();\n    }\n    uStack820 = 3;\n    puStack824 = 0x40a5fc;\n    fcn.00403742();\n    uStack820 = 0x2cc;\n    puStack828 = &fcn.00402a3b::var_324h;\n    puStack824 = NULL;\n    uVar4 = fcn.0040248c();\n    var_264h = (in_NT & 1) * 0x4000 | SCARRY4(&stack0xfffffcc4, 0xc) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100\n               | (&stack0xfffffcd0 < 0) * 0x80 | (*0x10 == 0x330) * 0x40 | (in_AF & 1) * 0x10 |\n               ((POPCOUNT(&stack0xfffffcd0 & 0xff) & 1U) == 0) * 4 | 0xfffffff3 < &stack0xfffffcc4 |\n               (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    var_324h = 0x10001;\n    uStack820 = 0x50;\n    puStack828 = &fcn.00402a3b::var_58h;\n    puStack824 = NULL;\n    var_260h = *0x10;\n    fcn.0040248c();\n    var_27ch = uVar4 >> 0x20;\n    var_274h = uVar4;\n    var_58h = 0x40000015;\n    var_54h = 1;\n    uStack820 = 0x40a6b8;\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    var_27ch = uVar4 >> 0x20;\n    var_274h = uVar4;\n    uStack820 = 0;\n    ExceptionInfo = &fcn.00402a3b::var_58h;\n    var_4h = &fcn.00402a3b::var_324h;\n    puStack824 = 0x40a6d8;\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)();\n    var_27ch = uVar4 >> 0x20;\n    var_274h = uVar4;\n    puStack824 = &fcn.00402a3b::ExceptionInfo;\n    puStack828 = 0x40a6e2;\n    iVar3 = (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)();\n    var_27ch = uVar4 >> 0x20;\n    var_274h = uVar4;\n    if ((iVar3 == 0) && (iVar2 != 1)) {\n        puStack828 = 0x3;\n        fcn.00403742();\n        var_27ch = uVar4 >> 0x20;\n        var_274h = uVar4;\n    }\n    return;\n}\n",
        "token_count": 1128
    },
    "00402abd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00402abd(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = **0x476418;\n    if (cVar1 != '\\0') {\n        if (('/' < cVar1) && (cVar1 < ':')) {\n            *0x476418 = *0x476418 + 1;\n            return cVar1 + -0x2f;\n        }\n        iVar2 = 0;\n        while( true ) {\n            if (cVar1 == '@') {\n                *0x476418 = *0x476418 + 1;\n                return iVar2;\n            }\n            if (cVar1 == '\\0') break;\n            if (0xf < cVar1 + 0xbfU) {\n                return -1;\n            }\n            iVar2 = iVar2 * 0x10 + -0x41 + cVar1;\n            *0x476418 = *0x476418 + 1;\n            cVar1 = **0x476418;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 237
    },
    "00402acc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00402acc(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00401b59(0x474548, 0x10);\n    if (*(unaff_EBP + 8) < 0x2000) {\n        uVar3 = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        fcn.004043a4(7);\n        *(unaff_EBP + -4) = 0;\n        iVar4 = 0;\n        iVar2 = *0x477458;\n        while (*(unaff_EBP + -0x20) = iVar4,  iVar2 <= *(unaff_EBP + 8)) {\n            if (*(iVar4 * 4 + 0x4771f0) == 0) {\n                iVar2 = fcn.0040428c();\n                *(iVar4 * 4 + 0x4771f0) = iVar2;\n                if (iVar2 == 0) {\n                    uVar3 = 0xc;\n                    *(unaff_EBP + -0x1c) = 0xc;\n                    break;\n                }\n                iVar2 = *0x477458 + 0x40;\n                *0x477458 = iVar2;\n            }\n            iVar4 = iVar4 + 1;\n        }\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00444fe2();\n    }\n    else {\n        puVar1 = fcn.004029b9();\n        uVar3 = 9;\n        *puVar1 = 9;\n        fcn.00402842();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar3;\n}\n",
        "token_count": 470
    },
    "00402b35": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00402b35(char *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint *arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    char *arg_8h_00;\n    char cVar1;\n    int32_t iVar2;\n    char *arg_ch_00;\n    char *pcVar3;\n    uint uVar4;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        *(arg_20h + 0x1c) = 1;\n        *(arg_20h + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_20h);\n        return 0x16;\n    }\n    if (arg_ch != 0) {\n        *arg_8h = '\\0';\n        iVar2 = arg_10h;\n        if (arg_10h < 1) {\n            iVar2 = 0;\n        }\n        if (arg_ch <= iVar2 + 1U) {\n            uVar4 = 0x22;\n            goto code_r0x0045330f;\n        }\n        if (arg_14h != NULL) {\n            arg_8h_00 = arg_14h[2];\n            pcVar3 = arg_8h + 1;\n            *arg_8h = '0';\n            arg_ch_00 = arg_8h_00;\n            if (0 < arg_10h) {\n                do {\n                    cVar1 = *arg_ch_00;\n                    if (cVar1 == '\\0') {\n                        cVar1 = '0';\n                    }\n                    else {\n                        arg_ch_00 = arg_ch_00 + 1;\n                    }\n                    *pcVar3 = cVar1;\n                    pcVar3 = pcVar3 + 1;\n                    arg_10h = arg_10h + -1;\n                } while (0 < arg_10h);\n            }\n            *pcVar3 = '\\0';\n            if ((-1 < arg_10h) &&\n               (cVar1 = fcn.00453219(arg_8h_00, arg_ch_00, *arg_14h, arg_18h, arg_1ch),  cVar1 != '\\0')) {\n                while( true ) {\n                    pcVar3 = pcVar3 + -1;\n                    if (*pcVar3 != '9') break;\n                    *pcVar3 = '0';\n                }\n                *pcVar3 = *pcVar3 + '\\x01';\n            }\n            if (*arg_8h == '1') {\n                arg_14h[1] = arg_14h[1] + 1;\n            }\n            else {\n                pcVar3 = arg_8h + 1;\n                do {\n                    cVar1 = *pcVar3;\n                    pcVar3 = pcVar3 + 1;\n                } while (cVar1 != '\\0');\n                fcn.00403d1e(arg_8h, arg_8h + 1, pcVar3 + (1 - (arg_8h + 2)));\n            }\n            return 0;\n        }\n    }\n    uVar4 = 0x16;\ncode_r0x0045330f:\n    *(arg_20h + 0x18) = uVar4;\n    *(arg_20h + 0x1c) = 1;\n    fcn.00402c20(0, 0, 0, 0, 0, arg_20h);\n    return uVar4;\n}\n",
        "token_count": 809
    },
    "00402b7b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402b7b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.00402509();\n    iVar1 = fcn.004041e2(in_ECX + 8, arg_8h * 2);\n    if (iVar1 == 0) {\n        *(in_ECX + 0x14) = 1;\n        iVar1 = 0;\n        *(in_ECX + 0xc) = arg_8h;\n    }\n    else {\n        *(in_ECX + 0xc) = 0;\n        *(in_ECX + 0x14) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 163
    },
    "00402c16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402c16(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004020d1(arg_8h, arg_ch, arg_10h, 0xffffffff);\n    return;\n}\n",
        "token_count": 57
    },
    "00402c25": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402c25(uint arg_8h)\n\n{\n    fcn.00443a34(0, arg_8h, 0, 4);\n    return;\n}\n",
        "token_count": 44
    },
    "00402c34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402c34(uint32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    \n    piVar1 = arg_ch + 2;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 < 0) {\n        uVar2 = fcn.00401244(arg_8h, arg_ch, arg_10h);\n        return uVar2;\n    }\n    **arg_ch = arg_8h;\n    *arg_ch = *arg_ch + 1;\n    return arg_8h & 0xff;\n}\n",
        "token_count": 155
    },
    "00402ccf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402ccf(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.0044a63a(0x18, \"AppPolicyGetProcessTerminationMethod\", 0x46e40c, \"AppPolicyGetProcessTerminationMethod\"\n                         );\n    if (pcVar1 == NULL) {\n        uVar2 = 0xc0000225;\n    }\n    else {\n        (**0x47a000)(0xfffffffa, arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 141
    },
    "00402cfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402cfc(uint arg_8h)\n\n{\n    fcn.00417dd3(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "00402d92": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00402d92(uint *param_1)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *var_4h;\n    \n    param_1[4] = param_1[4] + 4;\n    *(param_1 + 0xe) = 1;\n    var_4h._0_2_ = *(param_1[4] + -4);\n    var_4h = param_1;\n    cVar1 = fcn.00401555(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n    if (cVar1 == '\\0') {\n        iVar3 = param_1[2];\n        var_4h._0_2_ = var_4h & 0xff;\n        var_4h = var_4h & 0xffff0000 | var_4h;\n        if (*(iVar3 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        puVar2 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar2 = param_1 + 0xf;\n        }\n        iVar3 = fcn.0040123f(puVar2, &var_4h, *(*(iVar3 + 0xc) + 4), iVar3);\n        if (iVar3 < 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    else {\n        puVar2 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar2 = param_1 + 0xf;\n        }\n        *puVar2 = var_4h;\n    }\n    puVar2 = param_1[0x110];\n    puVar4 = param_1 + 0xf;\n    if (puVar2 != NULL) {\n        puVar4 = puVar2;\n    }\n    param_1[0xc] = puVar4;\n    param_1[0xd] = 1;\n    return CONCAT31(puVar2 >> 8, 1);\n}\n",
        "token_count": 513
    },
    "00402e23": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00402e23(uint *param_1)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint arg_10h;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    \n    puVar5 = param_1 + 0xf;\n    cVar2 = fcn.00403215(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar2 == '\\0') {\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = puVar5;\n        }\n        param_1[4] = param_1[4] + 4;\n        *puVar3 = *(param_1[4] + -4);\n        param_1[0xd] = 1;\n    }\n    else {\n        param_1[4] = param_1[4] + 4;\n        uVar1 = *(param_1[4] + -4);\n        arg_10h = fcn.00403d37();\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = puVar5;\n        }\n        iVar4 = fcn.00402f72(param_1 + 0xd, puVar3, arg_10h, uVar1, param_1[2]);\n        if (iVar4 != 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    puVar3 = param_1[0x110];\n    if (puVar3 != NULL) {\n        puVar5 = puVar3;\n    }\n    param_1[0xc] = puVar5;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 431
    },
    "00402e37": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402e37(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00414d24(2, \"FlsGetValue\", 0x46b1cc, 0x46b1d4);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_TlsGetValue)(arg_8h);\n    }\n    else {\n        (**0x47a000)();\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00402e41": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00402e41(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00402450(0);\n    *(unaff_EBP + -4) = 0;\n    fcn.00419965(0x476fc4);\n    *(unaff_EBP + -4) = 1;\n    fcn.00419986(0x476fc8);\n    fcn.004195fe(*0x476fd4);\n    fcn.00419638(*0x476fd0);\n    fcn.004010c8();\n    return;\n}\n",
        "token_count": 152
    },
    "00402e78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402e78(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0040169f(arg_8h, arg_ch, arg_10h, &arg_14h);\n    return;\n}\n",
        "token_count": 65
    },
    "00402ec3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402ec3(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00459a5f(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 76
    },
    "00402fd6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402fd6(void)\n\n{\n    fcn.00417dd3(0, 2, 1);\n    return;\n}\n",
        "token_count": 33
    },
    "00402fea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402fea(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    fcn.00403a8a(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, 0);\n    return;\n}\n",
        "token_count": 89
    },
    "00403062": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403062(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00403477(*arg_8h);\n    fcn.00401fc3(arg_8h[1]);\n    var_8h = 0;\n    var_4h = 0;\n    iVar1 = fcn.00402446(&var_8h);\n    if (((iVar1 == 0) && (*arg_8h == var_8h)) && (arg_8h[1] == var_4h)) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 181
    },
    "004030cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.004030cb(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = 0;\n    do {\n        if (*(iVar1 * 8 + 0x472730) == arg_ch) {\n            var_1ch = *(iVar1 * 8 + 0x472734);\n            if (var_1ch != 0) {\n                var_18h = arg_10h;\n                var_14h = arg_14h;\n                var_10h = arg_18h;\n                var_ch = arg_1ch;\n                var_8h = arg_20h;\n                var_20h = arg_8h;\n                var_4h = arg_24h;\n                fcn.0040389b(arg_28h, 0xffff);\n                iVar1 = fcn.004023a1(&var_20h);\n                if (iVar1 == 0) {\n                    fcn.00402bad(arg_8h);\n                }\n                return CONCAT44(var_4h, var_8h);\n            }\n            goto code_r0x0045ebfb;\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x1d);\n    var_1ch = 0;\ncode_r0x0045ebfb:\n    fcn.0040389b(arg_28h, 0xffff);\n    fcn.00402bad(arg_8h);\n    return CONCAT44(arg_24h, arg_20h);\n}\n",
        "token_count": 440
    },
    "004030da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004030da(int32_t arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.std::exception.0;\n    in_ECX[1] = NULL;\n    in_ECX[2] = NULL;\n    fcn.00402284(arg_8h + 4, in_ECX + 1);\n    return;\n}\n",
        "token_count": 87
    },
    "004030ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004030ee(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    ulong uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.0045987c(arg_8h, arg_ch, arg_10h, arg_14h, &var_28h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 109
    },
    "00403166": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403166(uint lpCriticalSection, uint dwSpinCount, uint arg_10h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00414d24(4, \"InitializeCriticalSectionEx\", 0x46b204, 0x46b20c);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(lpCriticalSection, dwSpinCount);\n    }\n    else {\n        (**0x47a000)(lpCriticalSection, dwSpinCount, arg_10h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00403175": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00403175(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = *in_ECX;\n    if (iVar1 == 0) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_8h);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 129
    },
    "004031de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.004031de(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    char **ppcVar7;\n    char **ppcVar8;\n    char **var_20h;\n    char **var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    if (arg_ch == NULL) {\n        puVar3 = fcn.004029b9();\n        iVar6 = 0x16;\n        *puVar3 = 0x16;\n        fcn.00402842();\n    }\n    else {\n        *arg_ch = 0;\n        var_18h = 0;\n        var_1ch = NULL;\n        var_20h = NULL;\n        iVar6 = *arg_8h;\n        ppcVar8 = var_20h;\n        while (var_20h = ppcVar8,  iVar6 != 0) {\n            var_4h = CONCAT13(var_4h >> 0x18, 0x3f2a);\n            iVar6 = fcn.004020c2(iVar6, &var_4h);\n            if (iVar6 == 0) {\n                iVar6 = fcn.00441bc5(*arg_8h, 0, 0, &var_20h);\n            }\n            else {\n                iVar6 = fcn.00441d83(*arg_8h, iVar6, &var_20h);\n            }\n            if (iVar6 != 0) goto code_r0x004418aa;\n            arg_8h = arg_8h + 1;\n            ppcVar8 = var_20h;\n            iVar6 = *arg_8h;\n        }\n        iVar6 = (var_1ch - ppcVar8 >> 2) + 1;\n        var_8h = NULL;\n        for (ppcVar7 = ppcVar8; ppcVar7 != var_1ch; ppcVar7 = ppcVar7 + 1) {\n            pcVar5 = *ppcVar7;\n            var_ch = pcVar5 + 1;\n            do {\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            var_8h = pcVar5 + var_8h + (1 - var_ch);\n        }\n        iVar4 = fcn.0040402a(iVar6, var_8h, 1);\n        ppcVar7 = var_1ch;\n        if (iVar4 == 0) {\n            fcn.004042f5(0);\n            iVar6 = -1;\ncode_r0x004418aa:\n            fcn.00442529();\n        }\n        else {\n            var_4h = iVar4 + iVar6 * 4;\n            var_10h = var_4h;\n            if (ppcVar8 != var_1ch) {\n                var_14h = iVar4 - ppcVar8;\n                do {\n                    var_ch = *ppcVar8;\n                    pcVar5 = var_ch + 1;\n                    do {\n                        cVar1 = *var_ch;\n                        var_ch = var_ch + 1;\n                    } while (cVar1 != '\\0');\n                    var_ch = var_ch + (1 - pcVar5);\n                    iVar6 = fcn.00401fe6(var_4h, var_8h + (var_10h - var_4h), *ppcVar8, var_ch);\n                    if (iVar6 != 0) {\n                        fcn.0040277f(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        iVar6 = (*pcVar2)();\n                        return iVar6;\n                    }\n                    *(var_14h + ppcVar8) = var_4h;\n                    ppcVar8 = ppcVar8 + 1;\n                    var_4h = var_4h + var_ch;\n                } while (ppcVar8 != ppcVar7);\n            }\n            *arg_ch = iVar4;\n            fcn.004042f5(0);\n            fcn.00442529();\n            iVar6 = 0;\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 1024
    },
    "004032f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004032f6(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    do {\n        if (arg_8h == *(uVar1 * 8 + 0x46b968)) {\n            return *(uVar1 * 8 + 0x46b96c);\n        }\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x2d);\n    if (arg_8h - 0x13U < 0x12) {\n        return 0xd;\n    }\n    return (-(0xe < arg_8h - 0xbcU) & 0xe) + 8;\n}\n",
        "token_count": 167
    },
    "004144dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004144dc(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if (*(param_1 + 0xc) < 0) {\n        pcVar1 = ***(param_1 + 8);\n        (**0x47a000)();\n        iVar2 = (*pcVar1)();\n        pcVar1 = ***(param_1 + 4);\n        (**0x47a000)();\n        iVar3 = (*pcVar1)();\n        *(param_1 + 0xc) = iVar3 + iVar2;\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "0044a43d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a43d(void)\n\n{\n    fcn.0044a63a(0x12, \"LocaleNameToLCID\", 0x46e364, 0x46e36c);\n    return;\n}\n",
        "token_count": 53
    },
    "00403418": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403418(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.0044f525(arg_8h, arg_ch, &var_28h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 87
    },
    "004034b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004034b8(uint arg_8h)\n\n{\n    uint arg_10h;\n    uint var_10h;\n    uint var_8h;\n    \n    arg_10h = fcn.004026ee(&var_8h, 0);\n    fcn.004022e3(&var_10h, 0x60, arg_10h);\n    fcn.0040256d(arg_8h, 0x27);\n    return arg_8h;\n}\n",
        "token_count": 111
    },
    "004034e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004034e0(uint *param_1)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint arg_10h;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    \n    puVar5 = param_1 + 0xf;\n    cVar2 = fcn.00403215(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar2 == '\\0') {\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = puVar5;\n        }\n        param_1[4] = param_1[4] + 4;\n        *puVar3 = *(param_1[4] + -4);\n        param_1[0xd] = 1;\n    }\n    else {\n        param_1[4] = param_1[4] + 4;\n        uVar1 = *(param_1[4] + -4);\n        arg_10h = fcn.00403d37();\n        puVar3 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar3 = puVar5;\n        }\n        iVar4 = fcn.00402f72(param_1 + 0xd, puVar3, arg_10h, uVar1, param_1[2]);\n        if (iVar4 != 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    puVar3 = param_1[0x110];\n    if (puVar3 != NULL) {\n        puVar5 = puVar3;\n    }\n    param_1[0xc] = puVar5;\n    return CONCAT31(puVar3 >> 8, 1);\n}\n",
        "token_count": 431
    },
    "0040358f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040358f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = *in_ECX;\n    if (iVar1 == 0) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_8h);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 130
    },
    "00403639": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403639(uint lpCriticalSection, uint dwSpinCount, uint arg_10h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.0044a63a(0xe, \"InitializeCriticalSectionEx\", 0x46e2f8, 0x46e300);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSectionAndSpinCount)(lpCriticalSection, dwSpinCount);\n    }\n    else {\n        (**0x47a000)(lpCriticalSection, dwSpinCount, arg_10h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "00403666": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00403666(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.00401b7c(arg_8h, arg_ch, &var_1h, arg_10h);\n    return;\n}\n",
        "token_count": 83
    },
    "00403689": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00403689(uint *param_1)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *var_4h;\n    \n    param_1[4] = param_1[4] + 4;\n    *(param_1 + 0xe) = 1;\n    var_4h._0_2_ = *(param_1[4] + -4);\n    var_4h = param_1;\n    cVar1 = fcn.00401555(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n    if (cVar1 == '\\0') {\n        iVar3 = param_1[2];\n        var_4h._0_2_ = var_4h & 0xff;\n        var_4h = var_4h & 0xffff0000 | var_4h;\n        if (*(iVar3 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        puVar2 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar2 = param_1 + 0xf;\n        }\n        iVar3 = fcn.0040123f(puVar2, &var_4h, *(*(iVar3 + 0xc) + 4), iVar3);\n        if (iVar3 < 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    else {\n        puVar2 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar2 = param_1 + 0xf;\n        }\n        *puVar2 = var_4h;\n    }\n    puVar2 = param_1[0x110];\n    puVar4 = param_1 + 0xf;\n    if (puVar2 != NULL) {\n        puVar4 = puVar2;\n    }\n    param_1[0xc] = puVar4;\n    param_1[0xd] = 1;\n    return CONCAT31(puVar2 >> 8, 1);\n}\n",
        "token_count": 512
    },
    "004036c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004036c0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = *in_ECX;\n    if (iVar1 == 0) {\n        *(arg_8h + 0x1c) = 1;\n        *(arg_8h + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_8h);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 130
    },
    "004036e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004036e3(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.0044a3fd();\n    if (pcVar1 == NULL) {\n        fcn.00401ec9(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        (**0x47a000)(arg_8h, arg_ch, arg_10h, arg_14h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00403738": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403738(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0040295a(arg_8h, arg_ch, arg_10h);\n    if (iVar2 == 0) {\n        if (*(arg_10h + 0x80) != 0) {\n            fcn.00403fc1(arg_8h, arg_ch, 2);\n        }\n        if (*(arg_10h + 0x100) != 0) {\n            fcn.00403fc1(arg_8h, arg_ch, 2);\n        }\n        return;\n    }\n    fcn.0040277f(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 204
    },
    "004038c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004038c8(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = arg_8h + 7U & 0xfffffff8;\n    if (uVar4 == 0) {\n        uVar4 = 8;\n    }\n    uVar3 = *(in_ECX + 0x10);\n    if (uVar3 < uVar4) {\n        uVar3 = 0x1000;\n        if (uVar4 < 0x1001) {\n            puVar1 = fcn.004027e8(0x1004, 0x476434, 1);\n            if (puVar1 != NULL) {\n                *puVar1 = 0;\n                if (*(in_ECX + 0xc) == NULL) {\n                    *(in_ECX + 8) = puVar1;\n                }\n                else {\n                    **(in_ECX + 0xc) = puVar1;\n                }\n                *(in_ECX + 0xc) = puVar1;\n                goto code_r0x00410d0b;\n            }\n        }\n        iVar2 = 0;\n    }\n    else {\ncode_r0x00410d0b:\n        *(in_ECX + 0x10) = uVar3 - uVar4;\n        iVar2 = *(in_ECX + 0xc) + 4 + (uVar3 - uVar4);\n    }\n    return iVar2;\n}\n",
        "token_count": 359
    },
    "004038eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004038eb(uint *param_1)\n\n{\n    char cVar1;\n    uint arg_10h;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *var_4h;\n    \n    var_4h = param_1;\n    cVar1 = fcn.00403215(*param_1, param_1[1], *(param_1 + 0x2d), param_1[10]);\n    if (cVar1 == '\\0') {\n        puVar2 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar2 = param_1 + 0xf;\n        }\n        cVar1 = fcn.00403954(puVar2);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.0040443f();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        param_1[0xd] = 1;\n    }\n    else {\n        var_4h = var_4h & 0xffff0000;\n        cVar1 = fcn.004019f6(&var_4h);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.0040443f();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        arg_10h = fcn.00403d37();\n        puVar2 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar2 = param_1 + 0xf;\n        }\n        iVar3 = fcn.00402f72(param_1 + 0xd, puVar2, arg_10h, var_4h, param_1[2]);\n        if (iVar3 != 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    puVar2 = param_1 + 0xf;\n    if (param_1[0x110] != NULL) {\n        puVar2 = param_1[0x110];\n    }\n    param_1[0xc] = puVar2;\n    return 1;\n}\n",
        "token_count": 508
    },
    "00403990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00403990(int32_t arg_8h, uint arg_ch, char *arg_10h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    char *pcVar3;\n    uint8_t uVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    char *var_8h;\n    uint var_1h;\n    \n    fcn.00403e4f();\n    uVar7 = 0;\n    uVar5 = 0;\n    uVar2 = 0;\n    iVar8 = 0x100;\n    *(arg_10h + 0x100) = 0;\n    pcVar3 = arg_10h;\n    do {\n        *pcVar3 = uVar2;\n        uVar2 = uVar2 + 1;\n        pcVar3 = pcVar3 + 1;\n    } while (uVar2 < 0x100);\n    var_8h = arg_10h;\n    do {\n        cVar1 = *var_8h;\n        uVar5 = uVar5 + *(uVar7 + arg_8h) + cVar1;\n        uVar6 = uVar7 + 1;\n        *var_8h = arg_10h[uVar5];\n        arg_10h[uVar5] = cVar1;\n        uVar4 = 0;\n        if (uVar6 != arg_ch) {\n            uVar4 = uVar6;\n        }\n        uVar7 = uVar4;\n        iVar8 = iVar8 + -1;\n        var_8h = var_8h + 1;\n    } while (iVar8 != 0);\n    return;\n}\n",
        "token_count": 408
    },
    "0040399a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040399a(uint hModule, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uchar var_211h;\n    uint lpFilename;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(hModule, &lpFilename, 0x105);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00403459(uVar2);\n    }\n    else {\n        var_21ch = 0;\n        var_22ch = arg_ch;\n        var_228h = arg_10h;\n        var_224h = arg_ch;\n        var_220h = arg_10h;\n        var_218h._0_1_ = 0;\n        uVar2 = fcn.00402a95();\n        fcn.004026f3(&lpFilename, &var_22ch, &var_211h, uVar2);\n    }\n    fcn.0040241e(hModule);\n    return;\n}\n",
        "token_count": 324
    },
    "00403a94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403a94(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004029ff(arg_8h, arg_ch, arg_10h, 0, &arg_14h);\n    return;\n}\n",
        "token_count": 67
    },
    "00403aee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403aee(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        for (; ((arg_10h = arg_10h + -1,  arg_10h != 0 && (*arg_8h != 0)) && (*arg_8h == *arg_ch)); arg_8h = arg_8h + 1)\n        {\n            arg_ch = arg_ch + 1;\n        }\n        return *arg_8h - *arg_ch;\n    }\n    return arg_10h;\n}\n",
        "token_count": 145
    },
    "00403b2a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403b2a(uint param_1, uint param_2, ulong param_3, ulong param_4, uint param_5)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint in_stack_ffffff68;\n    uchar auStack144 [64];\n    uint32_t uStack80;\n    uint32_t uStack20;\n    \n    arg_8h = param_5;\n    uStack20 = *0x47502c ^ &stack0xfffffff0;\n    iVar2 = fcn.0040235b(param_1, &param_4, param_5);\n    if (iVar2 == 0) {\n        uStack80 = uStack80 & 0xfffffffe;\n        fcn.00403a8a(auStack144, &param_5, param_1, param_2, &param_3, &param_4, 0);\n        arg_8h = param_5;\n    }\n    iVar2 = fcn.00403a80(param_1);\n    cVar1 = fcn.004032c4();\n    if ((cVar1 == '\\0') || (iVar2 == 0)) {\n        fcn.00402bad(iVar2);\n        fcn.0040389b(arg_8h, 0xffff);\n    }\n    else {\n        fcn.004030cb(iVar2, param_2, param_3, param_3 >> 0x20, 0, 0, param_4, param_4 >> 0x20, arg_8h);\n    }\n    fcn.0040241e(in_stack_ffffff68);\n    return;\n}\n",
        "token_count": 370
    },
    "00403b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00403b70(char *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    char cVar1;\n    char cVar2;\n    code *pcVar3;\n    uint *puVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint uVar9;\n    char *pcVar10;\n    char *arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_8h == NULL) {\n        puVar4 = fcn.004029b9();\n        *puVar4 = 0x16;\n        return 0xffffffff;\n    }\n    pcVar5 = fcn.00401988(arg_8h, 0x3d);\n    if ((pcVar5 == NULL) || (pcVar5 == arg_8h)) {\n        puVar4 = fcn.004029b9();\n        *puVar4 = 0x16;\n        fcn.004042f5(arg_8h);\n        return 0xffffffff;\n    }\n    cVar1 = pcVar5[1];\n    fcn.00444aeb();\n    uVar9 = 0;\n    if (*0x476fc4 == NULL) {\n        if ((arg_ch != 0) && (*0x476fc8 != 0)) {\n            iVar6 = fcn.00401109();\n            if (iVar6 == 0) {\n                puVar4 = fcn.004029b9();\n                *puVar4 = 0x16;\n                goto code_r0x00444389;\n            }\n            fcn.00444aeb();\n            goto code_r0x004443e4;\n        }\n        if (cVar1 == '\\0') goto code_r0x0044452e;\n        *0x476fc4 = fcn.0040375b(1, 4);\n        fcn.004042f5(0);\n        if (*0x476fc4 != NULL) {\n            if (*0x476fc8 == 0) {\n                *0x476fc8 = fcn.0040375b(1, 4);\n                fcn.004042f5(0);\n                if (*0x476fc8 == 0) goto code_r0x00444389;\n            }\n            goto code_r0x004443e4;\n        }\n    }\n    else {\ncode_r0x004443e4:\n        piVar7 = *0x476fc4;\n        if (*0x476fc4 != NULL) {\n            iVar6 = fcn.00444b2b(arg_8h, pcVar5 - arg_8h);\n            if ((-1 < iVar6) && (*piVar7 != 0)) {\n                fcn.004042f5(piVar7[iVar6]);\n                if (cVar1 == '\\0') {\n                    for (; piVar7[iVar6] != 0; iVar6 = iVar6 + 1) {\n                        piVar7[iVar6] = piVar7[iVar6 + 1];\n                    }\n                    piVar7 = fcn.004021d5(piVar7, iVar6, 4);\n                    fcn.004042f5(0);\n                    arg_8h_00 = arg_8h;\n                    if (piVar7 != NULL) {\ncode_r0x004444a8:\n                        *0x476fc4 = piVar7;\n                    }\n                }\n                else {\n                    arg_8h_00 = NULL;\n                    piVar7[iVar6] = arg_8h;\n                }\n                if (arg_ch == 0) {\ncode_r0x0044453e:\n                    fcn.004042f5(arg_8h_00);\n                    return 0;\n                }\n                pcVar10 = arg_8h;\n                do {\n                    cVar2 = *pcVar10;\n                    pcVar10 = pcVar10 + 1;\n                } while (cVar2 != '\\0');\n                iVar6 = fcn.0040375b(pcVar10 + (2 - (arg_8h + 1)), 1);\n                if (iVar6 == 0) {\n                    fcn.004042f5(0);\n                    arg_8h = arg_8h_00;\n                }\n                else {\n                    iVar8 = fcn.00404098(iVar6, pcVar10 + (2 - (arg_8h + 1)), arg_8h);\n                    if (iVar8 != 0) {\n                        fcn.0040277f(0, 0, 0, 0, 0);\n                        pcVar3 = swi(3);\n                        uVar9 = (*pcVar3)();\n                        return uVar9;\n                    }\n                    (pcVar5 + (iVar6 - arg_8h) + 1)[-1] = '\\0';\n                    iVar8 = fcn.004039b8(iVar6, -(cVar1 != '\\0') & pcVar5 + (iVar6 - arg_8h) + 1);\n                    if (iVar8 != 0) {\n                        fcn.004042f5(iVar6);\n                        goto code_r0x0044453e;\n                    }\n                    puVar4 = fcn.004029b9();\n                    *puVar4 = 0x2a;\n                    fcn.004042f5(iVar6);\n                    uVar9 = 0xffffffff;\n                    arg_8h = arg_8h_00;\n                }\n                goto code_r0x0044452e;\n            }\n            if (cVar1 == '\\0') goto code_r0x0044452e;\n            arg_ch_00 = -iVar6 + 2;\n            if ((-iVar6 <= arg_ch_00) && (arg_ch_00 < 0x3fffffff)) {\n                piVar7 = fcn.004021d5(piVar7, arg_ch_00, 4);\n                fcn.004042f5(0);\n                if (piVar7 != NULL) {\n                    piVar7[-iVar6] = arg_8h;\n                    piVar7[1 - iVar6] = 0;\n                    arg_8h_00 = NULL;\n                    goto code_r0x004444a8;\n                }\n            }\n        }\n    }\ncode_r0x00444389:\n    uVar9 = 0xffffffff;\ncode_r0x0044452e:\n    fcn.004042f5(arg_8h);\n    return uVar9;\n}\n",
        "token_count": 1465
    },
    "00403bd9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403bd9(uint arg_8h, code *arg_ch)\n\n{\n    code *arg_8h_00;\n    code **in_ECX;\n    \n    *in_ECX = vtable.pcharNode.0;\n    arg_8h_00 = fcn.004038c8(arg_ch);\n    in_ECX[1] = arg_8h_00;\n    in_ECX[2] = arg_ch;\n    if (arg_8h_00 == NULL) {\n        in_ECX[2] = NULL;\n    }\n    else {\n        fcn.004146fd(arg_8h_00, arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00403c5b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403c5b(uint arg_8h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    fcn.00401267(arg_8h, &var_10h, 0, &var_8h, 1);\n    return arg_8h;\n}\n",
        "token_count": 118
    },
    "00403cf6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00403cf6(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = (*_sym.imp.KERNEL32.dll_GetEnvironmentStringsW)();\n    iVar1 = arg_8h;\n    if (arg_8h != 0) {\n        iVar1 = fcn.00444195(arg_8h);\n        iVar2 = iVar1 - arg_8h >> 1;\n        arg_8h_00 = fcn.00404458(0, 0, arg_8h, iVar2, 0, 0, 0, 0);\n        if (arg_8h_00 == 0) {\n            (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg_8h);\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = fcn.00402d88(arg_8h_00);\n            if (iVar1 == 0) {\n                fcn.004042f5(0);\n                (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg_8h);\n                iVar1 = 0;\n            }\n            else {\n                iVar2 = fcn.00404458(0, 0, arg_8h, iVar2, iVar1, arg_8h_00, 0, 0);\n                if (iVar2 == 0) {\n                    fcn.004042f5(iVar1);\n                    iVar1 = 0;\n                }\n                else {\n                    fcn.004042f5(0);\n                }\n                (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg_8h);\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 406
    },
    "00403cfb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00403cfb(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint64_t uVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    uint16_t uVar4;\n    ushort uVar5;\n    double in_stack_0000000c;\n    double dStack12;\n    \n    dStack12 = _arg_8h;\n    iVar2 = fcn.00404552(arg_8h);\n    if (iVar2 == 2) goto code_r0x0045f5ee;\n    iVar3 = fcn.004022c0(SUB84(in_stack_0000000c, 0));\n    if ((iVar3 == 2) || (in_stack_0000000c == _arg_8h)) {\n        dStack12 = in_stack_0000000c;\n        goto code_r0x0045f5ee;\n    }\n    uVar5 = 1;\n    if (iVar2 == 1) {\n        _arg_8h = 1.39067116124321e-309;\n        uVar4 = arg_ch._2_2_ & 0xffef | 0x7fef;\n        uVar5 = 0xffff;\ncode_r0x0045f52d:\n        _arg_8h = CONCAT62(_arg_8h >> 0x10 & 0xffffffff | (uVar4 << 0x30) >> 0x10, uVar5);\n    }\n    else {\n        if (iVar2 == 0) {\n            if (((in_stack_0000000c < _arg_8h) << 8 | (in_stack_0000000c == _arg_8h) << 0xe) == 0) {\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = 0x8000;\n            }\n            goto code_r0x0045f52d;\n        }\n        if (((((in_stack_0000000c < _arg_8h) << 8 | (in_stack_0000000c == _arg_8h) << 0xe) == 0) && (0.0 < _arg_8h)) ||\n           ((in_stack_0000000c < _arg_8h && (((0.0 < _arg_8h) << 8 | (_arg_8h == 0.0) << 0xe) == 0)))) {\n            uVar1 = _arg_8h & 0xffffffffffff0000;\n            _arg_8h = uVar1 | arg_8h + 1U;\n            if (arg_8h + 1U == 0) {\n                arg_8h._2_2_ = uVar1 >> 0x10;\n                uVar1 = arg_8h._2_2_ + 1U << 0x10;\n                _arg_8h = arg_ch << 0x20 | uVar1;\n                if (arg_8h._2_2_ + 1U == 0) {\n                    arg_8h = uVar1;\n                    _arg_8h = CONCAT24(arg_ch + 1, arg_8h);\n                    uVar1 = arg_ch << 0x20 & 0xffff000000000000;\n                    _arg_8h = uVar1 | _arg_8h;\n                    if (arg_ch + 1 == 0) {\n                        arg_ch._2_2_ = uVar1 >> 0x30;\n                        _arg_8h = CONCAT26(arg_ch._2_2_ + 1, _arg_8h);\n                        if ((arg_ch._2_2_ + 1 & 0x7fff) == 0x7ff0) {\n                            fcn.004027fc(8);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            uVar1 = _arg_8h & 0xffffffffffff0000;\n            _arg_8h = uVar1 | arg_8h - 1U;\n            if (arg_8h - 1U == 0xffff) {\n                arg_8h._2_2_ = uVar1 >> 0x10;\n                arg_8h = CONCAT22(arg_8h._2_2_ + -1, 0xffff);\n                if (arg_8h._2_2_ + -1 == -1) {\n                    _arg_8h = CONCAT24(arg_ch + -1, arg_8h);\n                    uVar1 = (arg_ch & 0xffff0000) << 0x20;\n                    _arg_8h = uVar1 | _arg_8h;\n                    if (arg_ch + -1 == -1) {\n                        arg_ch._2_2_ = uVar1 >> 0x30;\n                        _arg_8h = CONCAT26(arg_ch._2_2_ + -1, _arg_8h);\n                    }\n                }\n            }\n        }\n    }\n    dStack12 = _arg_8h;\ncode_r0x0045f5ee:\n    if ((dStack12 & 0x7ff0000000000000) == 0) {\n        fcn.004027fc(0x10);\n    }\n    return dStack12;\n}\n",
        "token_count": 1163
    },
    "00403d7d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403d7d(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.0044a63a(0x1b, \"AppPolicyGetWindowingModel\", 0x46e49c, \"AppPolicyGetWindowingModel\");\n    if (pcVar1 == NULL) {\n        uVar2 = 0xc0000225;\n    }\n    else {\n        (**0x47a000)(0xfffffffa, arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 139
    },
    "00403daf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403daf(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_2ch;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.0040283d(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "00403e04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403e04(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    \n    if (0 < arg_14h) {\n        arg_14h = fcn.00402c61(arg_10h, arg_14h);\n    }\n    if (0 < arg_1ch) {\n        arg_1ch = fcn.00402c61(arg_18h, arg_1ch);\n    }\n    if ((arg_14h == 0) || (arg_1ch == 0)) {\n        if (arg_14h - arg_1ch == 0) {\n            iVar1 = 2;\n        }\n        else {\n            iVar1 = (arg_14h - arg_1ch >> 0x1f & 0xfffffffeU) + 3;\n        }\n    }\n    else {\n        iVar1 = fcn.004031a7(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, 0, 0, 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 277
    },
    "00403ef4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403ef4(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    \n    iVar2 = fcn.00403df5(*in_ECX, in_ECX[1], arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        *(in_ECX + 3) = 1;\n        return;\n    }\n    fcn.0040277f(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 145
    },
    "00403fc1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403fc1(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    iVar3 = 0;\n    if (0 < arg_10h) {\n        puVar4 = &arg_10h;\n        do {\n            puVar4 = puVar4 + 1;\n            iVar2 = fcn.0040212b(arg_8h, arg_ch, *puVar4);\n            if (iVar2 != 0) {\n                fcn.0040277f(0, 0, 0, 0, 0);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "0040402a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040402a(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if ((arg_8h < 0x3fffffff) && (arg_ch < 0xffffffff / arg_10h)) {\n        if (arg_ch * arg_10h < ~(arg_8h * 4)) {\n            uVar1 = fcn.0040375b(arg_8h * 4 + arg_ch * arg_10h, 1);\n            fcn.004042f5(0);\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 149
    },
    "00404057": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404057(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    \n    if (*arg_8h == 0) {\n        *arg_8h = arg_ch;\n        *(arg_8h + 1) = arg_10h;\n        arg_8h[3] = arg_14h;\n    }\n    else {\n        cVar2 = fcn.004020ea(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (cVar2 == '\\0') {\n            iVar1 = *(in_ECX + 8);\n            *(iVar1 + 0x1c) = 1;\n            *(iVar1 + 0x18) = 0x16;\n            fcn.00402c20(0, 0, 0, 0, 0, *(in_ECX + 8));\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 248
    },
    "00404075": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404075(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.00414d24(0, \"FlsAlloc\", 0x46b19c, 0x46b1a4);\n    if (pcVar1 != NULL) {\n        (**0x47a000)(arg_8h);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00414f5f. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    return;\n}\n",
        "token_count": 148
    },
    "004040cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004040cf(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint var_28h;\n    \n    fcn.00401b40(0);\n    fcn.00402c20(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h);\n    fcn.004024dc();\n    return;\n}\n",
        "token_count": 107
    },
    "004040de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004040de(uint arg_8h)\n\n{\n    fcn.00417dd3(arg_8h, 2, 0);\n    return;\n}\n",
        "token_count": 40
    },
    "00404165": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404165(code **arg_8h, code **arg_ch)\n\n{\n    code *pcVar1;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            pcVar1 = *arg_8h;\n            if (pcVar1 != NULL) {\n                (**0x47a000)();\n                (*pcVar1)();\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h != arg_ch);\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "004041e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004041e2(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402d88(arg_ch);\n    *arg_8h = iVar1;\n    return (-(iVar1 != 0) & 0xfffffff4) + 0xc;\n}\n",
        "token_count": 82
    },
    "004041fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004041fb(uint arg_8h, uint arg_ch)\n\n{\n    ushort uVar1;\n    ushort extraout_var;\n    uint var_28h;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.0044f1dd(arg_8h, arg_ch, &var_28h);\n    fcn.004024dc();\n    return CONCAT22(extraout_var, uVar1);\n}\n",
        "token_count": 100
    },
    "0040420a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040420a(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004020a9();\n    return iVar1 + 0x14;\n}\n",
        "token_count": 45
    },
    "0040431d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040431d(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    iVar1 = fcn.004034d1();\n    if (iVar1 != 0) {\n        uVar2 = fcn.0040289c(&arg_8h, 1, &var_4h);\n        if (uVar2 != 0) {\n            return uVar2 & 0xffff0000 | arg_8h & 0xffff;\n        }\n    }\n    return 0xffff;\n}\n",
        "token_count": 137
    },
    "0040436d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040436d(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    piVar2 = fcn.00401f82(&var_8h, 1, 0);\n    iVar3 = *piVar2;\n    *arg_8h = iVar3;\n    iVar1 = piVar2[1];\n    arg_8h[1] = iVar1;\n    if (((iVar1 == '\\0') && (**0x476418 != '\\0')) && (**0x476418 != '@')) {\n        var_8h = 0x46aa08;\n        var_4h = 2;\n        fcn.004029f0(&var_10h);\n        fcn.004037d3(&var_18h, &var_8h);\n        piVar2 = fcn.0040395e(&var_20h, arg_8h);\n        iVar3 = *piVar2;\n        *arg_8h = iVar3;\n        arg_8h[1] = piVar2[1];\n    }\n    if (**0x476418 == '@') {\n        *0x476418 = *0x476418 + 1;\n    }\n    else if (**0x476418 == '\\0') {\n        if (iVar3 == 0) {\n            fcn.004022e8(1);\n        }\n        else {\n            var_8h = 0x46aa08;\n            var_4h = 2;\n            fcn.004014dd(1);\n            fcn.004037d3(&var_18h, &var_8h);\n            piVar2 = fcn.0040395e(&var_10h, arg_8h);\n            *arg_8h = *piVar2;\n            arg_8h[1] = piVar2[1];\n        }\n    }\n    else {\n        arg_8h[1] = 0;\n        *(arg_8h + 1) = 2;\n        *arg_8h = 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 537
    },
    "0040437c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040437c(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.0044a63a(0x1e, \"FlsAlloc\", 0x46e50c, 0x46e514);\n    if (pcVar1 == NULL) {\n        (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    }\n    else {\n        (**0x47a000)(arg_8h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "004043a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004043a4(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x477010);\n    return;\n}\n",
        "token_count": 48
    },
    "0040442b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040442b(uint *param_1)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *var_4h;\n    \n    param_1[4] = param_1[4] + 4;\n    *(param_1 + 0xe) = 1;\n    var_4h._0_2_ = *(param_1[4] + -4);\n    var_4h = param_1;\n    cVar1 = fcn.00401555(*param_1, param_1[1], *(param_1 + 0x2e), param_1[10]);\n    if (cVar1 == '\\0') {\n        iVar3 = param_1[2];\n        var_4h._0_2_ = var_4h & 0xff;\n        var_4h = var_4h & 0xffff0000 | var_4h;\n        if (*(iVar3 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        puVar2 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar2 = param_1 + 0xf;\n        }\n        iVar3 = fcn.0040123f(puVar2, &var_4h, *(*(iVar3 + 0xc) + 4), iVar3);\n        if (iVar3 < 0) {\n            *(param_1 + 0xb) = 1;\n        }\n    }\n    else {\n        puVar2 = param_1[0x110];\n        if (param_1[0x110] == NULL) {\n            puVar2 = param_1 + 0xf;\n        }\n        *puVar2 = var_4h;\n    }\n    puVar2 = param_1[0x110];\n    puVar4 = param_1 + 0xf;\n    if (puVar2 != NULL) {\n        puVar4 = puVar2;\n    }\n    param_1[0xc] = puVar4;\n    param_1[0xd] = 1;\n    return CONCAT31(puVar2 >> 8, 1);\n}\n",
        "token_count": 513
    },
    "00404449": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404449(uint *arg_8h)\n\n{\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[4] = 0xffffffff;\n    arg_8h[5] = 0;\n    arg_8h[6] = 0;\n    arg_8h[7] = 0;\n    arg_8h[3] = 0;\n    return;\n}\n",
        "token_count": 117
    },
    "0040448a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040448a(int32_t arg_8h)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    iVar3 = fcn.004020a9();\n    if (arg_8h == *(iVar3 + 0x24)) {\n        uVar1 = *(arg_8h + 4);\n        iVar3 = fcn.004020a9();\n        *(iVar3 + 0x24) = uVar1;\n    }\n    else {\n        iVar3 = fcn.004020a9();\n        iVar3 = *(iVar3 + 0x24);\n        do {\n            piVar4 = iVar3 + 4;\n            iVar3 = *piVar4;\n            if (iVar3 == 0) {\n                fcn.00403693();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        } while (arg_8h != iVar3);\n        *piVar4 = *(arg_8h + 4);\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "004044c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004044c6(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    code **in_ECX;\n    \n    pcVar1 = *in_ECX;\n    (**0x47a000)(arg_8h + 7U & 0xfffffff8);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 78
    },
    "004044d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004044d5(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_FS_OFFSET;\n    uint var_4h;\n    \n    iVar3 = 0;\n    iVar1 = fcn.00403837(*(**(*(*(in_FS_OFFSET + 0x30) + 0xc) + 0xc) + 0x30));\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar1);\n    if (0 < iVar2) {\n        do {\n            if (*(iVar3 + iVar1) + 0xbeU < 0x18) {\n                *(iVar3 + iVar1) = *(iVar3 + iVar1) + ' ';\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar1);\n        } while (iVar3 < iVar2);\n    }\n    return iVar1;\n}\n",
        "token_count": 217
    },
    "004044e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004044e9(char *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    fcn.00403e4f();\n    uVar1 = 0;\n    while (*arg_8h != '\\0') {\n        uVar1 = uVar1 * 0x10 + *arg_8h;\n        arg_8h = arg_8h + 1;\n        uVar2 = uVar1 & 0xf0000000;\n        if (uVar2 != 0) {\n            uVar1 = uVar1 ^ uVar2 >> 0x18;\n        }\n        uVar1 = uVar1 & ~uVar2;\n    }\n    return uVar1;\n}\n",
        "token_count": 172
    },
    "004044f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004044f8(uint param_1, uint param_2, ulong param_3, ulong param_4, ulong param_5, uint param_6)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    uint in_stack_ffffff68;\n    uchar auStack144 [48];\n    ulong uStack96;\n    uint32_t uStack80;\n    uint32_t uStack20;\n    \n    arg_8h = param_6;\n    uStack20 = *0x47502c ^ &stack0xfffffff0;\n    iVar2 = fcn.0040235b(param_1, &param_5, param_6);\n    if (iVar2 == 0) {\n        uStack80 = uStack80 & 0xffffffe3 | 3;\n        uStack96 = param_4;\n        fcn.00403a8a(auStack144, &param_6, param_1, param_2, &param_3, &param_5, 0);\n        arg_8h = param_6;\n    }\n    iVar2 = fcn.00403a80(param_1);\n    cVar1 = fcn.004032c4();\n    if ((cVar1 == '\\0') || (iVar2 == 0)) {\n        fcn.00402bad(iVar2);\n        fcn.0040389b(arg_8h, 0xffff);\n    }\n    else {\n        fcn.004030cb(iVar2, param_2, param_3, param_3 >> 0x20, param_4, param_4 >> 0x20, param_5, param_5 >> 0x20, \n                     arg_8h);\n    }\n    fcn.0040241e(in_stack_ffffff68);\n    return;\n}\n",
        "token_count": 402
    },
    "00404525": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404525(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_2ch;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.0040177b(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "0040452f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040452f(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar2 = fcn.00403df5(*(in_ECX + 8) + 0x250, 0x55, arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        fcn.00403ef4(arg_8h, arg_ch);\n        return;\n    }\n    fcn.0040277f(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 157
    },
    "0040454d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040454d(void)\n\n{\n    fcn.00417dd3(0, 0, 1);\n    return;\n}\n",
        "token_count": 33
    },
    "00404633": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404633(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00404458(arg_8h, 0, arg_ch, 0xffffffff, arg_10h, arg_14h, 0, 0);\n    return;\n}\n",
        "token_count": 75
    },
    "00404665": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404665(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        fcn.0044697d(arg_8h, 7);\n        fcn.0044697d(arg_8h + 0x1c, 7);\n        fcn.0044697d(arg_8h + 0x38, 0xc);\n        fcn.0044697d(arg_8h + 0x68, 0xc);\n        fcn.0044697d(arg_8h + 0x98, 2);\n        fcn.004042f5(*(arg_8h + 0xa0));\n        fcn.004042f5(*(arg_8h + 0xa4));\n        fcn.004042f5(*(arg_8h + 0xa8));\n        fcn.0044697d(arg_8h + 0xb4, 7);\n        fcn.0044697d(arg_8h + 0xd0, 7);\n        fcn.0044697d(arg_8h + 0xec, 0xc);\n        fcn.0044697d(arg_8h + 0x11c, 0xc);\n        fcn.0044697d(arg_8h + 0x14c, 2);\n        fcn.004042f5(*(arg_8h + 0x154));\n        fcn.004042f5(*(arg_8h + 0x158));\n        fcn.004042f5(*(arg_8h + 0x15c));\n        fcn.004042f5(*(arg_8h + 0x160));\n    }\n    return;\n}\n",
        "token_count": 382
    },
    "0040a075": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040a075(int16_t *arg_8h)\n\n{\n    if (((arg_8h != NULL) && (*arg_8h == 0x5a4d)) && (*(*(arg_8h + 0x1e) + arg_8h) == 0x4550)) {\n        return CONCAT31(1, *(*(arg_8h + 0x1e) + arg_8h + 6) == 0x10b);\n    }\n    return arg_8h & 0xffffff00;\n}\n",
        "token_count": 127
    },
    "0040b369": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040b369(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint *arg_8h_00;\n    char cVar1;\n    char *arg_10h;\n    uint *arg_8h_01;\n    char *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar4 = *arg_8h;\n    if (puVar4 == NULL) {\n        puVar4 = NULL;\n        arg_10h = fcn.00401663(0, arg_8h + 5, 0, fcn.0040b18e, 0x40b199, 0x2800);\n        if (arg_10h != NULL) {\n            pcVar2 = arg_10h;\n            do {\n                cVar1 = *pcVar2;\n                pcVar2 = pcVar2 + 1;\n            } while (cVar1 != '\\0');\n            iVar3 = pcVar2 - (arg_10h + 1);\n            if (iVar3 != 0) {\n                pcVar2 = arg_10h + iVar3 + -1;\n                do {\n                    if (*pcVar2 != ' ') break;\n                    *pcVar2 = '\\0';\n                    pcVar2 = pcVar2 + -1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            arg_8h_01 = fcn.0040138e(iVar3 + 5);\n            if (arg_8h_01 != NULL) {\n                arg_8h_00 = arg_8h_01 + 1;\n                *arg_8h_01 = 0;\n                fcn.00404098(arg_8h_00, iVar3 + 1, arg_10h);\n                puVar4 = NULL;\n                LOCK();\n                if (*arg_8h == 0) {\n                    *arg_8h = arg_8h_00;\n                }\n                else {\n                    puVar4 = *arg_8h;\n                }\n                if (puVar4 == NULL) {\n                    (*_sym.imp.KERNEL32.dll_InterlockedPushEntrySList)(arg_ch, arg_8h_01);\n                    puVar4 = arg_8h_00;\n                    arg_8h_01 = NULL;\n                }\n            }\n            fcn.00402e19(arg_8h_01);\n        }\n        fcn.00402e19(arg_10h);\n    }\n    return puVar4;\n}\n",
        "token_count": 579
    },
    "0040c2db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c2db(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    float in_stack_00000008;\n    uint var_4h;\n    \n    iVar1 = fcn.00402e78(0, 0, 0x46aa8c, SUB84(in_stack_00000008, 0));\n    arg_8h_00 = fcn.004038c8(iVar1 + 1);\n    fcn.00403a94(arg_8h_00, iVar1 + 1, 0x46aa8c, SUB84(in_stack_00000008, 0));\n    fcn.00402531(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 174
    },
    "0040c353": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c353(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint in_stack_00000008;\n    uint var_4h;\n    \n    iVar1 = fcn.00402e78(0, 0, 0x46aa8c, in_stack_00000008);\n    arg_8h_00 = fcn.004038c8(iVar1 + 1);\n    fcn.00403a94(arg_8h_00, iVar1 + 1, 0x46aa8c, in_stack_00000008);\n    fcn.00402531(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 163
    },
    "004120ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004120ce(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.00403530(arg_8h, arg_ch, arg_10h, arg_14h);\n    return arg_8h;\n}\n",
        "token_count": 66
    },
    "00414d24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00414d24(int32_t arg_8h, uint lpProcName, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = arg_8h * 4 + 0x476460;\n    iVar3 = *piVar1;\n    if (iVar3 == -1) {\n        iVar3 = 0;\n    }\n    else if (iVar3 == 0) {\n        for (; arg_10h != arg_14h; arg_10h = arg_10h + 1) {\n            iVar3 = *arg_10h;\n            iVar4 = *(iVar3 * 4 + 0x476454);\n            if (iVar4 == 0) {\n                iVar4 = fcn.00414ecd(*(iVar3 * 4 + 0x46b0d0));\n                piVar2 = iVar3 * 4 + 0x476454;\n                if (iVar4 != 0) {\n                    iVar3 = *piVar2;\n                    *piVar2 = iVar4;\n                    if (iVar3 != 0) {\n                        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar4);\n                    }\n                    goto code_r0x00414dad;\n                }\n                *piVar2 = -1;\n            }\n            else if (iVar4 != -1) {\ncode_r0x00414dad:\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, lpProcName);\n                if (iVar3 != 0) {\n                    *piVar1 = iVar3;\n                    return iVar3;\n                }\n                break;\n            }\n        }\n        *piVar1 = -1;\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 433
    },
    "00416aca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl\nfcn.00416aca(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    uint arg_ch_00;\n    \n    arg_ch_00 = 0x3c;\n    fcn.00401b59();\n    *(unaff_EBP + -0x1c) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x40) = 0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x30) = *(arg_8h_00 + -4);\n    iVar3 = *(unaff_EBP + 8);\n    uVar1 = fcn.004013a2(unaff_EBP + -0x4c, *(iVar3 + 0x18));\n    *(unaff_EBP + -0x34) = uVar1;\n    iVar2 = fcn.004020a9();\n    *(unaff_EBP + -0x38) = *(iVar2 + 0x10);\n    iVar2 = fcn.004020a9();\n    *(unaff_EBP + -0x3c) = *(iVar2 + 0x14);\n    iVar2 = fcn.004020a9();\n    *(iVar2 + 0x10) = iVar3;\n    iVar3 = fcn.004020a9();\n    *(iVar3 + 0x14) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x44) = 1;\n    *(unaff_EBP + -4) = 1;\n    uVar1 = fcn.00404025(arg_8h_00, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), *(unaff_EBP + 0x20));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    *(unaff_EBP + -0x44) = 0;\n    fcn.00416c1d(0x473f58, arg_ch_00);\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 719
    },
    "00416f03": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00416f03(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch == NULL) {\n        fcn.00403693();\n        pcVar3 = swi(3);\n        uVar6 = (*pcVar3)();\n        return uVar6;\n    }\n    iVar7 = *arg_ch;\n    uVar6 = 0;\n    if (0 < iVar7) {\n        var_4h = 0;\n        arg_10h = *(arg_8h + 0x1c);\n        piVar5 = *(arg_10h + 0xc);\n        iVar1 = *piVar5;\n        in_EAX = piVar5 + 1;\n        do {\n            if (0 < iVar1) {\n                iVar2 = arg_ch[1];\n                piVar5 = in_EAX;\n                var_8h = iVar1;\n                do {\n                    iVar4 = fcn.00401091(iVar2 + var_4h, *piVar5, arg_10h);\n                    if (iVar4 != 0) {\n                        uVar6 = 1;\n                        break;\n                    }\n                    var_8h = var_8h + -1;\n                    piVar5 = piVar5 + 1;\n                } while (0 < var_8h);\n            }\n            var_4h = var_4h + 0x10;\n            iVar7 = iVar7 + -1;\n        } while (iVar7 != 0);\n    }\n    return in_EAX & 0xffffff00 | uVar6;\n}\n",
        "token_count": 471
    },
    "004180b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004180b1(uint arg_8h)\n\n{\n    fcn.00417dd3(arg_8h, 1, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "004186c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004186c7(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    puVar1 = in_ECX + 1;\n    if (in_ECX != puVar1) {\n        do {\n            *in_ECX = arg_8h;\n            in_ECX = in_ECX + 1;\n        } while (in_ECX != puVar1);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "00418ac6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418ac6(uint *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    fcn.0040399a(*arg_8h, arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 57
    },
    "00419499": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00419499(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    int32_t *piVar4;\n    int32_t arg_8h_00;\n    int32_t iVar5;\n    int16_t *piVar6;\n    int16_t *piVar7;\n    int32_t iVar8;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    iVar8 = 0;\n    iVar2 = *arg_8h;\n    piVar7 = arg_8h;\n    while (iVar2 != 0) {\n        if (iVar2 != 0x3d) {\n            iVar8 = iVar8 + 1;\n        }\n        piVar6 = piVar7;\n        do {\n            iVar2 = *piVar6;\n            piVar6 = piVar6 + 1;\n        } while (iVar2 != 0);\n        piVar7 = piVar7 + (piVar6 - (piVar7 + 1) >> 1) + 1;\n        iVar2 = *piVar7;\n    }\n    piVar4 = fcn.0040375b(iVar8 + 1, 4);\n    if (piVar4 == NULL) {\n        fcn.004042f5(0);\n        piVar4 = NULL;\n    }\n    else {\n        iVar2 = *arg_8h;\n        var_8h = piVar4;\n        while (iVar2 != 0) {\n            piVar7 = arg_8h;\n            do {\n                iVar1 = *piVar7;\n                piVar7 = piVar7 + 1;\n            } while (iVar1 != 0);\n            iVar8 = (piVar7 - (arg_8h + 1) >> 1) + 1;\n            if (iVar2 != 0x3d) {\n                arg_8h_00 = fcn.0040375b(iVar8, 2);\n                if (arg_8h_00 == 0) {\n                    fcn.00419638(piVar4);\n                    fcn.004042f5(0);\n                    fcn.004042f5(0);\n                    return NULL;\n                }\n                iVar5 = fcn.0040295a(arg_8h_00, iVar8, arg_8h);\n                if (iVar5 != 0) {\n                    fcn.0040277f(0, 0, 0, 0, 0);\n                    pcVar3 = swi(3);\n                    piVar4 = (*pcVar3)();\n                    return piVar4;\n                }\n                *var_8h = arg_8h_00;\n                var_8h = var_8h + 1;\n                fcn.004042f5(0);\n            }\n            arg_8h = arg_8h + iVar8;\n            iVar2 = *arg_8h;\n        }\n        fcn.004042f5(0);\n    }\n    return piVar4;\n}\n",
        "token_count": 682
    },
    "004197fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004197fc(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00404098(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 57
    },
    "00419821": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419821(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.0040295a(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "00419889": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419889(code *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x467b55;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x47502c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar1 = in_ECX + 4;\n    for (; in_ECX != iVar1; in_ECX = in_ECX + 4) {\n        (**0x47a000)(in_ECX, uVar2);\n        (*arg_8h)();\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 199
    },
    "004198f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004198f7(code *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x467b79;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x47502c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar1 = in_ECX + 4;\n    for (; in_ECX != iVar1; in_ECX = in_ECX + 4) {\n        (**0x47a000)(in_ECX, uVar2);\n        (*arg_8h)();\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 200
    },
    "00419ab1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419ab1(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    puVar1 = in_ECX + 1;\n    if (in_ECX != puVar1) {\n        do {\n            *in_ECX = arg_8h;\n            in_ECX = in_ECX + 1;\n        } while (in_ECX != puVar1);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "00419ad4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419ad4(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    puVar1 = in_ECX + 1;\n    if (in_ECX != puVar1) {\n        do {\n            *in_ECX = arg_8h;\n            in_ECX = in_ECX + 1;\n        } while (in_ECX != puVar1);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0041c727": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c727(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if (arg_ch != 0) {\n        do {\n            uVar1 = *(arg_8h + uVar3 * 2);\n            arg_8h_00 = fcn.0040357b();\n            iVar2 = fcn.00404192(arg_8h_00, uVar1, 0x103);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_ch);\n    }\n    return 1;\n}\n",
        "token_count": 188
    },
    "0041c775": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c775(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if (arg_ch != 0) {\n        do {\n            uVar1 = *(arg_8h + uVar3 * 2);\n            arg_8h_00 = fcn.0040357b();\n            iVar2 = fcn.00404192(arg_8h_00, uVar1, 4);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_ch);\n    }\n    return 1;\n}\n",
        "token_count": 186
    },
    "0041d068": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d068(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    puVar1 = in_ECX + 1;\n    if (in_ECX != puVar1) {\n        do {\n            *in_ECX = arg_8h;\n            in_ECX = in_ECX + 1;\n        } while (in_ECX != puVar1);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0041da8d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041da8d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.00403823(&stack0xffffffe8, arg_ch, arg_10h);\n    fcn.004030f3(arg_8h, arg_ch_00, arg_10h_00, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 129
    },
    "0041dac2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041dac2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.00403cf1(&stack0xffffffe8, arg_ch, arg_10h);\n    fcn.0040105f(arg_8h, arg_ch_00, arg_10h_00, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 129
    },
    "0041f235": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f235(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    cVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 127
    },
    "0041f25b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f25b(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    cVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 128
    },
    "0041f281": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f281(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    cVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 127
    },
    "0041f2a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f2a7(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    cVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 129
    },
    "0041f577": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f577(uint32_t *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 96
    },
    "0041f59d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f59d(uint32_t *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 97
    },
    "0041f5c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f5c3(uint32_t *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 98
    },
    "0041f5e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f5e9(uint32_t *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 98
    },
    "0041f8b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f8b9(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    iVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 127
    },
    "0041f8df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f8df(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    iVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 126
    },
    "0041f905": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f905(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    iVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 125
    },
    "0041f92b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f92b(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    iVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 126
    },
    "0041faa1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041faa1(uchar *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 84
    },
    "0041fac1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fac1(uchar *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 83
    },
    "0041fd8b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fd8b(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 123
    },
    "0041fdb1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fdb1(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 122
    },
    "0041fdd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fdd7(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 123
    },
    "0041fdfd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fdfd(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 122
    },
    "004200c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004200c1(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    iVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 125
    },
    "004200e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004200e6(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    iVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 125
    },
    "0042010b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042010b(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    iVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 125
    },
    "00420130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420130(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    iVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 124
    },
    "00420421": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420421(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    arg_8h[1] = 0;\n    *arg_8h = uVar1;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 117
    },
    "00420446": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420446(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    arg_8h[1] = 0;\n    *arg_8h = uVar1;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 117
    },
    "0042046b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042046b(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    arg_8h[1] = 0;\n    *arg_8h = uVar1;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 118
    },
    "00420490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420490(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    arg_8h[1] = 0;\n    *arg_8h = uVar1;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 117
    },
    "00420759": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420759(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 81
    },
    "00420779": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420779(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 81
    },
    "00420799": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420799(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 81
    },
    "004207b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004207b9(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 82
    },
    "004207d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004207d9(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 82
    },
    "004208a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004208a1(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 82
    },
    "004208c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004208c1(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 82
    },
    "004208e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004208e1(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 82
    },
    "004209a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004209a9(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 82
    },
    "004209c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004209c9(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 82
    },
    "004209e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004209e9(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 82
    },
    "00420ab3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420ab3(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 82
    },
    "00420ad3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420ad3(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 82
    },
    "00420af3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420af3(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 82
    },
    "00420bbd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420bbd(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 82
    },
    "00420bdd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420bdd(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 81
    },
    "00420ea1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420ea1(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 82
    },
    "00420ec1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420ec1(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 82
    },
    "00420ee1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420ee1(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 82
    },
    "00420f01": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420f01(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 82
    },
    "0042120b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042120b(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = *(*(in_ECX + 0x10) + -8);\n    arg_8h[1] = uVar1;\n    return 1;\n}\n",
        "token_count": 121
    },
    "00421233": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421233(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = *(*(in_ECX + 0x10) + -8);\n    arg_8h[1] = uVar1;\n    return 1;\n}\n",
        "token_count": 120
    },
    "0042125b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042125b(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = *(*(in_ECX + 0x10) + -8);\n    arg_8h[1] = uVar1;\n    return 1;\n}\n",
        "token_count": 121
    },
    "00421283": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421283(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = *(*(in_ECX + 0x10) + -8);\n    arg_8h[1] = uVar1;\n    return 1;\n}\n",
        "token_count": 120
    },
    "00421595": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421595(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = *(*(in_ECX + 0x10) + -8);\n    arg_8h[1] = uVar1;\n    return 1;\n}\n",
        "token_count": 120
    },
    "004215bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004215bd(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = *(*(in_ECX + 0x10) + -8);\n    arg_8h[1] = uVar1;\n    return 1;\n}\n",
        "token_count": 120
    },
    "004215e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004215e5(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = *(*(in_ECX + 0x10) + -8);\n    arg_8h[1] = uVar1;\n    return 1;\n}\n",
        "token_count": 121
    },
    "0042160d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042160d(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = *(*(in_ECX + 0x10) + -8);\n    arg_8h[1] = uVar1;\n    return 1;\n}\n",
        "token_count": 121
    },
    "0042191f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042191f(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = *(*(in_ECX + 0x10) + -8);\n    arg_8h[1] = uVar1;\n    return 1;\n}\n",
        "token_count": 121
    },
    "00421947": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421947(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = *(*(in_ECX + 0x10) + -8);\n    arg_8h[1] = uVar1;\n    return 1;\n}\n",
        "token_count": 120
    },
    "0042196f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042196f(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = *(*(in_ECX + 0x10) + -8);\n    arg_8h[1] = uVar1;\n    return 1;\n}\n",
        "token_count": 121
    },
    "00421997": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421997(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 8;\n    uVar1 = *(*(in_ECX + 0x10) + -4);\n    *arg_8h = *(*(in_ECX + 0x10) + -8);\n    arg_8h[1] = uVar1;\n    return 1;\n}\n",
        "token_count": 120
    },
    "00421c77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421c77(ushort *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 83
    },
    "00421c9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421c9a(ushort *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 84
    },
    "00421cbd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421cbd(ushort *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 82
    },
    "00421ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421ce0(ushort *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x10) = *(in_ECX + 0x10) + 4;\n    *arg_8h = *(*(in_ECX + 0x10) + -4);\n    return 1;\n}\n",
        "token_count": 83
    },
    "00422b62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422b62(char *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    fcn.00402c34(*arg_8h, *arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 57
    },
    "00422b87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422b87(uint16_t *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    fcn.00403e8b(*arg_8h, *arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "0042af72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042af72(uint *param_1)\n\n{\n    uint arg_10h;\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_14h;\n    uint var_acch;\n    uint var_ac8h;\n    uint32_t var_ac4h;\n    uint var_ac0h;\n    uint var_abch;\n    uint var_ab8h;\n    uint var_ab4h;\n    uint var_a78h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    arg_10h = param_1[1];\n    arg_8h = **param_1;\n    uVar1 = fcn.00402f04(arg_8h);\n    var_ac4h = var_ac4h & 0xffffff00 | uVar1;\n    var_ab8h = *param_1[4];\n    var_abch = *param_1[3];\n    var_acch = *param_1[2];\n    var_ac8h = param_1[2][1];\n    var_ac0h = **param_1;\n    arg_14h = param_1[1];\n    fcn.00403f0d(&var_ac0h, &var_acch, &var_abch, arg_14h, &var_ab8h);\n    fcn.0040365c();\n    fcn.00403189();\n    fcn.00403d5a(var_ac4h, arg_8h, arg_10h);\n    fcn.0040241e(arg_14h);\n    return;\n}\n",
        "token_count": 360
    },
    "0042b089": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b089(uint *param_1)\n\n{\n    uint arg_10h;\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_14h;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_420h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    arg_10h = param_1[1];\n    arg_8h = **param_1;\n    uVar1 = fcn.00402f04(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    var_460h = **param_1;\n    arg_14h = *param_1[3];\n    fcn.004040e3(&var_460h, *param_1[2], param_1[2][1], arg_14h, param_1[1], *param_1[4]);\n    var_ch = 0;\n    fcn.00404124();\n    fcn.00403189();\n    fcn.00403d5a(var_464h, arg_8h, arg_10h);\n    fcn.0040241e(arg_14h);\n    return;\n}\n",
        "token_count": 306
    },
    "0042b178": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b178(uint *param_1)\n\n{\n    uint arg_10h;\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_14h;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_420h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    arg_10h = param_1[1];\n    arg_8h = **param_1;\n    uVar1 = fcn.00402f04(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    var_460h = **param_1;\n    arg_14h = *param_1[3];\n    fcn.004040e3(&var_460h, *param_1[2], param_1[2][1], arg_14h, param_1[1], *param_1[4]);\n    var_ch = 0;\n    fcn.004023f1();\n    fcn.00403189();\n    fcn.00403d5a(var_464h, arg_8h, arg_10h);\n    fcn.0040241e(arg_14h);\n    return;\n}\n",
        "token_count": 307
    },
    "0042b251": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b251(uint *param_1)\n\n{\n    uint arg_10h;\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_14h;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_420h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    arg_10h = param_1[1];\n    arg_8h = **param_1;\n    uVar1 = fcn.00402f04(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    var_460h = **param_1;\n    arg_14h = *param_1[3];\n    fcn.004017ad(&var_460h, *param_1[2], param_1[2][1], arg_14h, param_1[1], *param_1[4]);\n    var_ch = 0;\n    fcn.004031c5();\n    fcn.00403189();\n    fcn.00403d5a(var_464h, arg_8h, arg_10h);\n    fcn.0040241e(arg_14h);\n    return;\n}\n",
        "token_count": 306
    },
    "0042b31f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b31f(uint *param_1)\n\n{\n    uint arg_10h;\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_14h;\n    uint var_acch;\n    uint var_ac8h;\n    uint32_t var_ac4h;\n    uint var_ac0h;\n    uint var_abch;\n    uint var_ab8h;\n    uint var_ab4h;\n    uint var_a78h;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    arg_10h = param_1[1];\n    arg_8h = **param_1;\n    uVar1 = fcn.00402f04(arg_8h);\n    var_ac4h = var_ac4h & 0xffffff00 | uVar1;\n    var_ab8h = *param_1[4];\n    var_abch = *param_1[3];\n    var_acch = *param_1[2];\n    var_ac8h = param_1[2][1];\n    var_ac0h = **param_1;\n    arg_14h = param_1[1];\n    fcn.00402cde(&var_ac0h, &var_acch, &var_abch, arg_14h, &var_ab8h);\n    fcn.00403f3f();\n    fcn.00403189();\n    fcn.00403d5a(var_ac4h, arg_8h, arg_10h);\n    fcn.0040241e(arg_14h);\n    return;\n}\n",
        "token_count": 361
    },
    "0042b420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b420(uint *param_1)\n\n{\n    uint arg_10h;\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_14h;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_420h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x47502c ^ &stack0xfffffffc;\n    arg_10h = param_1[1];\n    arg_8h = **param_1;\n    uVar1 = fcn.00402f04(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    var_460h = **param_1;\n    arg_14h = *param_1[3];\n    fcn.004017ad(&var_460h, *param_1[2], param_1[2][1], arg_14h, param_1[1], *param_1[4]);\n    var_ch = 0;\n    fcn.00402487();\n    fcn.00403189();\n    fcn.00403d5a(var_464h, arg_8h, arg_10h);\n    fcn.0040241e(arg_14h);\n    return;\n}\n",
        "token_count": 305
    },
    "0042fd4e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042fd4e(uint32_t param_1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    uint32_t var_4h;\n    \n    cVar2 = fcn.004018b1();\n    if (cVar2 == '\\0') {\n        iVar3 = *(param_1 + 8);\n        *(param_1 + 0x38) = 0;\n        if (*(iVar3 + 0x14) == '\\0') {\n            fcn.004024f0();\n        }\n        uVar1 = *(param_1 + 0x2d);\n        iVar3 = fcn.00404192(**(iVar3 + 0xc), uVar1, 0x8000);\n        if (iVar3 == 0) {\n            var_4h = param_1 & 0xffffff00 | uVar1;\n        }\n        else {\n            fcn.004037c9(unaff_EBX & 0xffffff00 | uVar1, param_1 + 0x14, *(param_1 + 8));\n            uVar1 = **(param_1 + 0xc);\n            *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n            *(param_1 + 0x2d) = uVar1;\n            if (uVar1 == 0) {\n                iVar3 = *(param_1 + 8);\n                *(iVar3 + 0x1c) = 1;\n                *(iVar3 + 0x18) = 0x16;\n                fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                iVar3 = *(param_1 + 8);\n                *(iVar3 + 0x1c) = 1;\n                *(iVar3 + 0x18) = 0x16;\n                fcn.00402c20(0, 0, 0, 0, 0, *(param_1 + 8));\n                return 0;\n            }\n            var_4h = param_1 & 0xffffff00 | uVar1;\n        }\n        fcn.004037c9(var_4h, param_1 + 0x14, *(param_1 + 8));\n    }\n    return 1;\n}\n",
        "token_count": 537
    },
    "0043d111": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043d111(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint *arg_1ch_00;\n    uint var_5ch;\n    uint var_44h;\n    uint var_40h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    fcn.00401b40(arg_18h);\n    var_10h = arg_1ch;\n    var_ch = arg_14h;\n    var_8h = arg_10h;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    if ((arg_10h == 0) || (arg_14h == 0)) {\n        arg_1ch_00 = &var_5ch;\n        var_40h._0_1_ = 1;\n        var_44h = 0x16;\n        arg_ch_00 = NULL;\n        arg_8h_00 = NULL;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch_00);\n        uVar1 = 0xffffffff;\n    }\n    else {\n        var_34h = &var_8h;\n        var_14h = arg_10h;\n        var_30h = &var_5ch;\n        var_18h = arg_10h;\n        var_2ch = &var_20h;\n        var_28h = &var_ch;\n        var_24h = &var_10h;\n        arg_1ch_00 = &var_14h;\n        arg_ch_00 = &var_34h;\n        arg_8h_00 = &var_18h;\n        uVar1 = fcn.0041d820(arg_8h_00, arg_ch_00);\n    }\n    fcn.004024dc(arg_8h_00, arg_ch_00, arg_1ch_00);\n    return uVar1;\n}\n",
        "token_count": 600
    },
    "0043d1de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043d1de(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint *arg_1ch_00;\n    uint var_5ch;\n    uint var_44h;\n    uint var_40h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    fcn.00401b40(arg_18h);\n    var_10h = arg_1ch;\n    var_ch = arg_14h;\n    var_8h = arg_10h;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    if ((arg_10h == 0) || (arg_14h == 0)) {\n        arg_1ch_00 = &var_5ch;\n        var_40h._0_1_ = 1;\n        var_44h = 0x16;\n        arg_ch_00 = NULL;\n        arg_8h_00 = NULL;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch_00);\n        uVar1 = 0xffffffff;\n    }\n    else {\n        var_34h = &var_8h;\n        var_14h = arg_10h;\n        var_30h = &var_5ch;\n        var_18h = arg_10h;\n        var_2ch = &var_20h;\n        var_28h = &var_ch;\n        var_24h = &var_10h;\n        arg_1ch_00 = &var_14h;\n        arg_ch_00 = &var_34h;\n        arg_8h_00 = &var_18h;\n        uVar1 = fcn.0041d902(arg_8h_00, arg_ch_00);\n    }\n    fcn.004024dc(arg_8h_00, arg_ch_00, arg_1ch_00);\n    return uVar1;\n}\n",
        "token_count": 601
    },
    "0043d2ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043d2ab(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint *arg_1ch_00;\n    uint var_5ch;\n    uint var_44h;\n    uint var_40h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    fcn.00401b40(arg_18h);\n    var_10h = arg_1ch;\n    var_ch = arg_14h;\n    var_8h = arg_10h;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    if ((arg_10h == 0) || (arg_14h == 0)) {\n        arg_1ch_00 = &var_5ch;\n        var_40h._0_1_ = 1;\n        var_44h = 0x16;\n        arg_ch_00 = NULL;\n        arg_8h_00 = NULL;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch_00);\n        uVar1 = 0xffffffff;\n    }\n    else {\n        var_34h = &var_8h;\n        var_14h = arg_10h;\n        var_30h = &var_5ch;\n        var_18h = arg_10h;\n        var_2ch = &var_20h;\n        var_28h = &var_ch;\n        var_24h = &var_10h;\n        arg_1ch_00 = &var_14h;\n        arg_ch_00 = &var_34h;\n        arg_8h_00 = &var_18h;\n        uVar1 = fcn.0041d73e(arg_8h_00, arg_ch_00);\n    }\n    fcn.004024dc(arg_8h_00, arg_ch_00, arg_1ch_00);\n    return uVar1;\n}\n",
        "token_count": 602
    },
    "0043d378": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043d378(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint *arg_1ch_00;\n    uint var_5ch;\n    uint var_44h;\n    uint var_40h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    fcn.00401b40(arg_18h);\n    var_10h = arg_1ch;\n    var_ch = arg_14h;\n    var_8h = arg_10h;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    if ((arg_10h == 0) || (arg_14h == 0)) {\n        arg_1ch_00 = &var_5ch;\n        var_40h._0_1_ = 1;\n        var_44h = 0x16;\n        arg_ch_00 = NULL;\n        arg_8h_00 = NULL;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch_00);\n        uVar1 = 0xffffffff;\n    }\n    else {\n        var_34h = &var_8h;\n        var_14h = arg_10h;\n        var_30h = &var_5ch;\n        var_18h = arg_10h;\n        var_2ch = &var_20h;\n        var_28h = &var_ch;\n        var_24h = &var_10h;\n        arg_1ch_00 = &var_14h;\n        arg_ch_00 = &var_34h;\n        arg_8h_00 = &var_18h;\n        uVar1 = fcn.0041d6cd(arg_8h_00, arg_ch_00);\n    }\n    fcn.004024dc(arg_8h_00, arg_ch_00, arg_1ch_00);\n    return uVar1;\n}\n",
        "token_count": 601
    },
    "0043d445": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043d445(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint *arg_1ch_00;\n    uint var_5ch;\n    uint var_44h;\n    uint var_40h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    fcn.00401b40(arg_18h);\n    var_10h = arg_1ch;\n    var_ch = arg_14h;\n    var_8h = arg_10h;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    if ((arg_10h == 0) || (arg_14h == 0)) {\n        arg_1ch_00 = &var_5ch;\n        var_40h._0_1_ = 1;\n        var_44h = 0x16;\n        arg_ch_00 = NULL;\n        arg_8h_00 = NULL;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch_00);\n        uVar1 = 0xffffffff;\n    }\n    else {\n        var_34h = &var_8h;\n        var_14h = arg_10h;\n        var_30h = &var_5ch;\n        var_18h = arg_10h;\n        var_2ch = &var_20h;\n        var_28h = &var_ch;\n        var_24h = &var_10h;\n        arg_1ch_00 = &var_14h;\n        arg_ch_00 = &var_34h;\n        arg_8h_00 = &var_18h;\n        uVar1 = fcn.0041d7af(arg_8h_00, arg_ch_00);\n    }\n    fcn.004024dc(arg_8h_00, arg_ch_00, arg_1ch_00);\n    return uVar1;\n}\n",
        "token_count": 601
    },
    "0043d512": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043d512(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint *arg_8h_00;\n    uint *arg_ch_00;\n    uint *arg_1ch_00;\n    uint var_5ch;\n    uint var_44h;\n    uint var_40h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    fcn.00401b40(arg_18h);\n    var_10h = arg_1ch;\n    var_ch = arg_14h;\n    var_8h = arg_10h;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    if ((arg_10h == 0) || (arg_14h == 0)) {\n        arg_1ch_00 = &var_5ch;\n        var_40h._0_1_ = 1;\n        var_44h = 0x16;\n        arg_ch_00 = NULL;\n        arg_8h_00 = NULL;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_1ch_00);\n        uVar1 = 0xffffffff;\n    }\n    else {\n        var_34h = &var_8h;\n        var_14h = arg_10h;\n        var_30h = &var_5ch;\n        var_18h = arg_10h;\n        var_2ch = &var_20h;\n        var_28h = &var_ch;\n        var_24h = &var_10h;\n        arg_1ch_00 = &var_14h;\n        arg_ch_00 = &var_34h;\n        arg_8h_00 = &var_18h;\n        uVar1 = fcn.0041d891(arg_8h_00, arg_ch_00);\n    }\n    fcn.004024dc(arg_8h_00, arg_ch_00, arg_1ch_00);\n    return uVar1;\n}\n",
        "token_count": 600
    },
    "0043d5df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0043d5df(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(arg_20h);\n    uVar1 = fcn.0041de4b(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_28h, arg_24h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 155
    },
    "0043d634": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0043d634(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(arg_20h);\n    uVar1 = fcn.0041df8c(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_28h, arg_24h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 154
    },
    "0043d6da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0043d6da(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(arg_1ch);\n    uVar1 = fcn.0041e496(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h, arg_20h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 141
    },
    "0043d77c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0043d77c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(arg_1ch);\n    uVar1 = fcn.0041ea82(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h, arg_20h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 141
    },
    "0043d7cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0043d7cd(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(arg_1ch);\n    uVar1 = fcn.0041e69a(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h, arg_20h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "0043d81e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0043d81e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(arg_1ch);\n    uVar1 = fcn.0041ed2b(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h, arg_20h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "0043ef66": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ef66(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint extraout_ECX;\n    uint arg_10h_00;\n    uint arg_18h;\n    uint var_2ch;\n    \n    fcn.00401b40(arg_14h);\n    arg_18h = 1;\n    uVar1 = extraout_ECX;\n    arg_10h_00 = extraout_ECX;\n    fcn.004034f9(&stack0xffffffb8, arg_8h, arg_ch);\n    uVar1 = fcn.0040177b(&var_2ch, uVar1, arg_10h_00, arg_10h, arg_18h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 193
    },
    "0043efbe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043efbe(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint extraout_ECX;\n    uint arg_10h_00;\n    uint arg_18h;\n    uint var_2ch;\n    \n    fcn.00401b40(arg_14h);\n    arg_18h = 1;\n    uVar1 = extraout_ECX;\n    arg_10h_00 = extraout_ECX;\n    fcn.00402ce3(&stack0xffffffb8, arg_8h, arg_ch);\n    uVar1 = fcn.0040283d(&var_2ch, uVar1, arg_10h_00, arg_10h, arg_18h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 193
    },
    "0043f016": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0043f016(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint extraout_ECX;\n    ulong uVar1;\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    uint var_2ch;\n    \n    fcn.00401b40(arg_14h);\n    arg_18h = 1;\n    arg_ch_00 = extraout_ECX;\n    arg_10h_00 = extraout_ECX;\n    fcn.004034f9(&stack0xffffffb4, arg_8h, arg_ch);\n    uVar1 = fcn.004017d5(&var_2ch, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 202
    },
    "0043f076": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0043f076(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint extraout_ECX;\n    ulong uVar1;\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    uint var_2ch;\n    \n    fcn.00401b40(arg_14h);\n    arg_18h = 1;\n    arg_ch_00 = extraout_ECX;\n    arg_10h_00 = extraout_ECX;\n    fcn.00402ce3(&stack0xffffffb4, arg_8h, arg_ch);\n    uVar1 = fcn.004022d9(&var_2ch, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 202
    },
    "0043f13d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0043f13d(uint arg_8h)\n\n{\n    ulong uVar1;\n    uint var_2ch;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.004017d5(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 91
    },
    "0043f193": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0043f193(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_2ch;\n    \n    fcn.00401b40(arg_ch);\n    uVar1 = fcn.004017d5(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "0043f1ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f1ea(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_2ch;\n    \n    fcn.00401b40(arg_ch);\n    uVar1 = fcn.0040177b(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0043f23a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f23a(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_2ch;\n    \n    fcn.00401b40(arg_ch);\n    uVar1 = fcn.0040177b(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0043f28a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0043f28a(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_2ch;\n    \n    fcn.00401b40(arg_ch);\n    uVar1 = fcn.004017d5(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0043f2e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f2e1(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    if (arg_10h == NULL) {\n        arg_8h_00 = fcn.0040357b();\n    }\n    else {\n        arg_8h_00 = **arg_10h;\n    }\n    fcn.00404192(arg_8h_00, arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 115
    },
    "0043f37f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f37f(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_2ch;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.0040283d(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 91
    },
    "0043f3cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0043f3cd(uint arg_8h)\n\n{\n    ulong uVar1;\n    uint var_2ch;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.004022d9(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 91
    },
    "0043f423": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0043f423(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_2ch;\n    \n    fcn.00401b40(arg_ch);\n    uVar1 = fcn.004022d9(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "0043f47a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f47a(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_2ch;\n    \n    fcn.00401b40(arg_ch);\n    uVar1 = fcn.0040283d(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0043f518": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f518(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_2ch;\n    \n    fcn.00401b40(arg_ch);\n    uVar1 = fcn.0040283d(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "0043f568": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0043f568(uint arg_8h)\n\n{\n    ulong uVar1;\n    uint var_2ch;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.004022d9(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 90
    },
    "0043f5be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0043f5be(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_2ch;\n    \n    fcn.00401b40(arg_ch);\n    uVar1 = fcn.004022d9(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0043f615": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f615(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_2ch;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.0040177b(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 90
    },
    "0043f6b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0043f6b1(uint arg_8h)\n\n{\n    ulong uVar1;\n    uint var_2ch;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.004017d5(&var_2ch, arg_8h, 0, 10, 1);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 92
    },
    "004422bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004422bf(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.00401fe6(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 71
    },
    "004422ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004422ea(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.00403df5(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 71
    },
    "00442315": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442315(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.00401fe6(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 71
    },
    "00442340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442340(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.00401fe6(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 71
    },
    "0044236b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044236b(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.00403df5(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 72
    },
    "00442396": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442396(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.00403df5(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 71
    },
    "004427e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004427e8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.004428da();\n    if (iVar1 == 0) {\n        **(in_ECX + 4) = arg_8h;\n        *(in_ECX + 4) = *(in_ECX + 4) + 4;\n        iVar1 = 0;\n    }\n    else {\n        fcn.004042f5(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 128
    },
    "0044282a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044282a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00442982();\n    if (iVar1 == 0) {\n        **(in_ECX + 4) = arg_8h;\n        *(in_ECX + 4) = *(in_ECX + 4) + 4;\n        iVar1 = 0;\n    }\n    else {\n        fcn.004042f5(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 128
    },
    "00442a2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00442a2d(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00402a95();\n    iVar2 = fcn.00401c17(arg_ch, arg_8h, uVar1);\n    if (iVar2 == 0) {\n        uVar1 = *(arg_8h + 8);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 121
    },
    "00442a7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00442a7c(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00402a95();\n    iVar2 = fcn.00403666(arg_ch, arg_8h, uVar1);\n    if (iVar2 == 0) {\n        uVar1 = *(arg_8h + 8);\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 120
    },
    "00442c64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00442c64(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_1h;\n    \n    fcn.004026f3(arg_8h, arg_ch, &var_1h, arg_10h);\n    return;\n}\n",
        "token_count": 83
    },
    "004430d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004430d5(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    puVar1 = in_ECX + 1;\n    if (in_ECX != puVar1) {\n        do {\n            *in_ECX = arg_8h;\n            in_ECX = in_ECX + 1;\n        } while (in_ECX != puVar1);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "004430f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004430f8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    fcn.0040248c(arg_8h + 0x18, 0, 0x101);\n    *(arg_8h + 4) = 0;\n    *(arg_8h + 8) = 0;\n    *(arg_8h + 0x21c) = 0;\n    *(arg_8h + 0xc) = 0;\n    iVar1 = 0;\n    *(arg_8h + 0x10) = 0;\n    *(arg_8h + 0x14) = 0;\n    do {\n        *(arg_8h + 0x18 + iVar1) = *(iVar1 + 0x4750b8);\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x101);\n    do {\n        *(arg_8h + 0x119 + iVar2) = *(iVar2 + 0x4751b9);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x100);\n    return;\n}\n",
        "token_count": 277
    },
    "004436e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004436e3(uint arg_8h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00402f95();\n    fcn.0044338a(arg_8h, 0, uVar1, 0x4771c4);\n    return;\n}\n",
        "token_count": 70
    },
    "00444c8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444c8c(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00404098(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "00444cb1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444cb1(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.0040295a(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "00444cd6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444cd6(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00404098(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "00444cfb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444cfb(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.0040295a(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "00444d63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444d63(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00402946(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "00444d88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444d88(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.00403f62(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "0044697d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044697d(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = arg_8h + arg_ch;\n    for (; arg_8h != puVar1; arg_8h = arg_8h + 1) {\n        fcn.004042f5(*arg_8h);\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "00449997": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00449997(uint16_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    uVar1 = *arg_8h;\n    while (uVar1 != 0) {\n        arg_8h = arg_8h + 1;\n        if (uVar1 - 0x61 < 6) {\n            uVar1 = uVar1 - 0x27;\n        }\n        else if (uVar1 - 0x41 < 6) {\n            uVar1 = uVar1 - 7;\n        }\n        iVar2 = iVar2 * 0x10 + -0x30 + uVar1;\n        uVar1 = *arg_8h;\n    }\n    return iVar2;\n}\n",
        "token_count": 184
    },
    "0044a17d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a17d(void)\n\n{\n    fcn.0044a63a(0, \"AreFileApisANSI\", 0x46e0f8, \"AreFileApisANSI\");\n    return;\n}\n",
        "token_count": 52
    },
    "0044a19d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a19d(void)\n\n{\n    fcn.0044a63a(1, \"CompareStringEx\", 0x46e110, 0x46e118);\n    return;\n}\n",
        "token_count": 48
    },
    "0044a1bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a1bd(void)\n\n{\n    fcn.0044a63a(2, \"EnumSystemLocalesEx\", 0x46e130, 0x46e138);\n    return;\n}\n",
        "token_count": 50
    },
    "0044a27d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a27d(void)\n\n{\n    fcn.0044a63a(4, \"GetDateFormatEx\", 0x46e174, 0x46e17c);\n    return;\n}\n",
        "token_count": 49
    },
    "0044a2dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a2dd(void)\n\n{\n    fcn.0044a63a(7, \"GetLocaleInfoEx\", 0x46e1e4, 0x46e1ec);\n    return;\n}\n",
        "token_count": 52
    },
    "0044a33d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a33d(void)\n\n{\n    fcn.0044a63a(10, \"GetTimeFormatEx\", 0x46e258, 0x46e260);\n    return;\n}\n",
        "token_count": 49
    },
    "0044a35d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a35d(void)\n\n{\n    fcn.0044a63a(0xb, \"GetUserDefaultLocaleName\", 0x46e278, 0x46e280);\n    return;\n}\n",
        "token_count": 51
    },
    "0044a3dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a3dd(void)\n\n{\n    fcn.0044a63a(0xf, \"IsValidLocaleName\", 0x46e304, 0x46e30c);\n    return;\n}\n",
        "token_count": 50
    },
    "0044a3fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a3fd(void)\n\n{\n    fcn.0044a63a(0x11, \"LCIDToLocaleName\", 0x46e344, 0x46e34c);\n    return;\n}\n",
        "token_count": 53
    },
    "0044a41d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a41d(void)\n\n{\n    fcn.0044a63a(0x10, \"LCMapStringEx\", 0x46e328, 0x46e330);\n    return;\n}\n",
        "token_count": 51
    },
    "0044a45d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a45d(void)\n\n{\n    fcn.0044a63a(0x13, \"LocateXStateFeature\", 0x46e384, 0x46e38c);\n    return;\n}\n",
        "token_count": 53
    },
    "0044a47d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a47d(void)\n\n{\n    fcn.0044a63a(0x14, \"MessageBoxA\", 0x46e3a8, 0x46e3b0);\n    return;\n}\n",
        "token_count": 53
    },
    "0044a49d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044a49d(void)\n\n{\n    fcn.0044a63a(0x15, \"MessageBoxW\", 0x46e3c4, 0x46e3cc);\n    return;\n}\n",
        "token_count": 52
    },
    "0044ac69": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ac69(uint arg_8h)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.0044a63a(9, \"GetSystemTimePreciseAsFileTime\", 0x46e22c, \"GetSystemTimePreciseAsFileTime\");\n    if (pcVar1 != NULL) {\n        (**0x47a000)(arg_8h);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0044aca2. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)();\n    return;\n}\n",
        "token_count": 158
    },
    "0044ad58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ad58(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.0044a63a(0xd, \"GetXStateFeaturesMask\", 0x46e2d0, 0x46e2d8);\n    if (pcVar1 != NULL) {\n        (**0x47a000)(arg_8h, arg_ch);\n        (*pcVar1)();\n        return;\n    }\n    fcn.00403693();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 136
    },
    "0044b000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044b000(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.0044a63a(0x16, \"RoInitialize\", 0x46e3e0, \"RoInitialize\");\n    if (pcVar1 == NULL) {\n        uVar2 = 0;\n    }\n    else {\n        (**0x47a000)(arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 122
    },
    "0044b082": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b082(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = fcn.0044a63a(0x1d, \"SystemFunction036\", 0x46e4e8, 0x46e4f0);\n    if (pcVar1 != NULL) {\n        (**0x47a000)(arg_8h, arg_ch);\n        (*pcVar1)();\n        return;\n    }\n    fcn.00403693();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 137
    },
    "0044b0d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044b0d2(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.0044a63a(0x1c, \"SetThreadStackGuarantee\", 0x46e4c0, 0x46e4c8);\n    if (pcVar1 == NULL) {\n        uVar2 = 0;\n    }\n    else {\n        (**0x47a000)(arg_8h);\n        uVar2 = (*pcVar1)();\n    }\n    return uVar2;\n}\n",
        "token_count": 134
    },
    "0044b557": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b557(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    puVar1 = in_ECX + 1;\n    if (in_ECX != puVar1) {\n        do {\n            *in_ECX = arg_8h;\n            in_ECX = in_ECX + 1;\n        } while (in_ECX != puVar1);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0044b930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b930(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    \n    puVar1 = in_ECX + 1;\n    if (in_ECX != puVar1) {\n        do {\n            *in_ECX = arg_8h;\n            in_ECX = in_ECX + 1;\n        } while (in_ECX != puVar1);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0044c332": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.0044c332(uint *param_1)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint *puVar3;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puVar1 = *0x477594 + *0x477590;\n    for (puVar3 = *0x477594; puVar3 != puVar1; puVar3 = puVar3 + 1) {\n        var_8h = *puVar3;\n        cVar2 = fcn.0044c4a3(var_8h, *param_1);\n        if (cVar2 != '\\0') {\n            var_20h = &var_8h;\n            var_1ch = *param_1;\n            var_18h = param_1[1];\n            var_14h = param_1[2];\n            var_ch = var_8h;\n            var_10h = var_8h;\n            fcn.0044bf0d(&var_10h, &var_20h);\n        }\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "0044e301": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0044e301(uint *arg_8h, uchar *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    uint arg_18h_00;\n    int32_t iVar1;\n    int32_t var_ch;\n    \n    arg_18h_00 = fcn.00403a85(*arg_8h, arg_8h[1], arg_1ch + 1, 1, &var_ch, arg_14h, arg_18h);\n    iVar1 = -1;\n    if (arg_10h != -1) {\n        iVar1 = (arg_10h - (var_ch == 0x2d)) - (0 < arg_1ch);\n    }\n    iVar1 = fcn.00402b35(arg_ch + (0 < arg_1ch) + (var_ch == 0x2d), iVar1, arg_1ch + 1, &var_ch, arg_18h_00, arg_28h, \n                         arg_2ch);\n    if (iVar1 == 0) {\n        fcn.0044e3ce(arg_ch, arg_10h, arg_1ch, arg_20h, arg_24h, &var_ch, 0, arg_2ch);\n    }\n    else {\n        *arg_ch = 0;\n    }\n    return;\n}\n",
        "token_count": 345
    },
    "0044e564": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0044e564(uint *arg_8h, uchar *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint arg_18h_00;\n    int32_t iVar1;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint uStack8;\n    \n    var_ch = 0;\n    var_8h = 0;\n    uStack8 = 0;\n    arg_18h_00 = fcn.00403a85(*arg_8h, arg_8h[1], arg_1ch, 0, &var_ch, arg_14h, arg_18h);\n    iVar1 = -1;\n    if (arg_10h != -1) {\n        iVar1 = arg_10h - (var_ch == 0x2d);\n    }\n    iVar1 = fcn.00402b35(arg_ch + (var_ch == 0x2d), iVar1, var_8h + arg_1ch, &var_ch, arg_18h_00, arg_20h, arg_24h);\n    if (iVar1 == 0) {\n        fcn.0044e61f(arg_ch, arg_10h, arg_1ch, &var_ch, 0, arg_24h);\n    }\n    else {\n        *arg_ch = 0;\n    }\n    return;\n}\n",
        "token_count": 340
    },
    "0044e748": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0044e748(uint *arg_8h, uchar *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    bool bVar4;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint uStack16;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_14h = 0;\n    var_10h = 0;\n    uStack16 = 0;\n    var_4h = fcn.00403a85(*arg_8h, arg_8h[1], arg_1ch, 0, &var_14h, arg_14h, arg_18h);\n    bVar4 = var_14h == 0x2d;\n    var_8h = var_10h + -1;\n    iVar2 = -1;\n    if (arg_10h != -1) {\n        iVar2 = arg_10h - bVar4;\n    }\n    iVar2 = fcn.00402b35(arg_ch + bVar4, iVar2, arg_1ch, &var_14h, var_4h, arg_28h, arg_2ch);\n    if (iVar2 == 0) {\n        iVar2 = var_10h + -1;\n        if ((iVar2 < -4) || (arg_1ch <= iVar2)) {\n            fcn.0044e3ce(arg_ch, arg_10h, arg_1ch, arg_20h, arg_24h, &var_14h, 1, arg_2ch);\n        }\n        else {\n            pcVar1 = arg_ch + bVar4;\n            if (var_8h < iVar2) {\n                do {\n                    pcVar3 = pcVar1;\n                    pcVar1 = pcVar3 + 1;\n                } while (*pcVar3 != '\\0');\n                pcVar3[-1] = '\\0';\n            }\n            fcn.0044e61f(arg_ch, arg_10h, arg_1ch, &var_14h, 1, arg_2ch);\n        }\n    }\n    else {\n        *arg_ch = 0;\n    }\n    return;\n}\n",
        "token_count": 555
    },
    "0044ee3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044ee3a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(arg_18h);\n    uVar1 = fcn.00402f72(arg_8h, arg_ch, arg_10h, arg_14h, &var_28h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 119
    },
    "0044ee83": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044ee83(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *arg_18h;\n    uint var_2ch;\n    uint var_4h;\n    \n    fcn.00401b40(0);\n    var_4h = 0;\n    arg_18h = &var_2ch;\n    uVar1 = fcn.00402928();\n    iVar2 = fcn.00402f72(&var_4h, arg_8h, uVar1, arg_ch, arg_18h);\n    uVar1 = var_4h;\n    if (iVar2 != 0) {\n        uVar1 = 0xffffffff;\n    }\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 182
    },
    "0044eee2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044eee2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.00402f72(arg_8h, arg_ch, arg_10h, arg_14h, &var_28h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "0044f0ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f0ce(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(arg_14h);\n    uVar1 = fcn.0040123f(arg_8h, arg_ch, arg_10h, &var_28h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 108
    },
    "0044f114": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f114(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.0040123f(arg_8h, arg_ch, arg_10h, &var_28h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 99
    },
    "0044f1dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint __cdecl fcn.0044f1dd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    ushort uVar2;\n    uint uVar3;\n    ushort extraout_var;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00401b59(0x4746e8, 0xc);\n    iVar1 = *(unaff_EBP + 0xc);\n    if (iVar1 == 0) {\n        iVar1 = *(unaff_EBP + 0x10);\n        *(iVar1 + 0x1c) = 1;\n        *(iVar1 + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, iVar1);\n        uVar3 = 0xffff;\n    }\n    else {\n        *(unaff_EBP + -0x1c) = 0xffff;\n        fcn.0040127b(iVar1);\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.00403e8b(*(unaff_EBP + 8), iVar1, *(unaff_EBP + 0x10));\n        *(unaff_EBP + -0x1c) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0044f265();\n        uVar3 = CONCAT22(extraout_var, uVar2);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar3;\n}\n",
        "token_count": 434
    },
    "0044f291": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f291(uint arg_8h, uint16_t **arg_ch, uint arg_10h)\n\n{\n    uint16_t **ppuVar1;\n    \n    ppuVar1 = arg_ch + 2;\n    *ppuVar1 = *ppuVar1 + -1;\n    if (*ppuVar1 < 0) {\n        fcn.0040353f(arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    **arg_ch = arg_8h;\n    *arg_ch = *arg_ch + 1;\n    return;\n}\n",
        "token_count": 134
    },
    "0044f2d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f2d2(uint arg_8h, uint arg_ch)\n\n{\n    ushort uVar1;\n    ushort extraout_var;\n    uint var_28h;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.00403e8b(arg_8h, arg_ch, &var_28h);\n    fcn.004024dc();\n    return CONCAT22(extraout_var, uVar1);\n}\n",
        "token_count": 103
    },
    "0044f49b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f49b(uint arg_8h)\n\n{\n    uint arg_ch;\n    \n    arg_ch = fcn.0040298c(1);\n    fcn.004041fb(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 58
    },
    "0044f69d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f69d(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.00402c34(arg_8h, arg_ch, &var_28h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "0044f716": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f716(uint arg_8h)\n\n{\n    uint arg_ch;\n    \n    arg_ch = fcn.0040298c(1);\n    fcn.00403418(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 57
    },
    "00450333": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.00450333(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, int32_t arg_28h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *lpWideCharStr;\n    int32_t iVar3;\n    uint *arg_18h_00;\n    int32_t iVar4;\n    uint *puVar5;\n    uint unaff_EDI;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = arg_18h;\n    var_14h = unaff_EDI;\n    if (0 < arg_18h) {\n        iVar1 = fcn.00401eab(arg_14h, arg_18h);\n        iVar3 = iVar1 + 1;\n        if (arg_18h <= iVar1) {\n            iVar3 = iVar1;\n        }\n    }\n    if (arg_24h == 0) {\n        arg_24h = *(*arg_8h + 8);\n    }\n    iVar1 = fcn.00401726(arg_24h, (arg_28h != 0) * 8 + 1, arg_14h, iVar3, 0, 0);\n    lpWideCharStr = &var_14h;\n    if (iVar1 == 0) goto code_r0x0045050f;\n    uVar2 = iVar1 * 2 + 8;\n    uVar2 = -(iVar1 * 2 < uVar2) & uVar2;\n    if (uVar2 == 0) {\n        lpWideCharStr = NULL;\n    }\n    else {\n        if (uVar2 < 0x401) {\n            fcn.0040268f();\n            if (*0x10 != 0x18) {\n                var_14h = 0xcccc;\n                lpWideCharStr = &var_14h;\ncode_r0x004503e0:\n                lpWideCharStr = lpWideCharStr + 2;\n            }\n        }\n        else {\n            lpWideCharStr = fcn.00402d88(uVar2);\n            if (lpWideCharStr != NULL) {\n                *lpWideCharStr = 0xdddd;\n                goto code_r0x004503e0;\n            }\n        }\n        if ((lpWideCharStr != NULL) &&\n           (iVar3 = fcn.00401726(arg_24h, 1, arg_14h, iVar3, lpWideCharStr, iVar1),  iVar3 != 0)) {\n            puVar5 = &stack0xffffffc4;\n            arg_18h_00 = &stack0xffffffc4;\n            iVar3 = fcn.004013ac(arg_ch, arg_10h, lpWideCharStr, iVar1, 0, 0, 0, 0, 0);\n            if (iVar3 != 0) {\n                if ((arg_10h & 0x400) == 0) {\n                    uVar2 = iVar3 * 2 + 8;\n                    uVar2 = -(iVar3 * 2 < uVar2) & uVar2;\n                    if (uVar2 == 0) {\n                        arg_18h_00 = NULL;\n                    }\n                    else if (uVar2 < 0x401) {\n                        fcn.0040268f();\n                        if (*0x10 != 0x3c) {\ncode_r0x004504a1:\n                            arg_18h_00 = puVar5 + 2;\n                            if ((arg_18h_00 != NULL) &&\n                               (iVar4 = fcn.004013ac(arg_ch, arg_10h, lpWideCharStr, iVar1, arg_18h_00, iVar3, 0, 0, 0)\n                               ,  iVar4 != 0)) {\n                                if (arg_20h == 0) {\n                                    arg_20h = 0;\n                                    arg_1ch = 0;\n                                }\n                                iVar3 = fcn.00404458(arg_24h, 0, arg_18h_00, iVar3, arg_1ch, arg_20h, 0, 0);\n                                if (iVar3 != 0) {\n                                    fcn.0040124e(arg_18h_00);\n                                    goto code_r0x00450506;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        arg_18h_00 = fcn.00402d88(uVar2);\n                        if (arg_18h_00 != NULL) {\n                            *arg_18h_00 = 0xdddd;\n                            puVar5 = arg_18h_00;\n                            goto code_r0x004504a1;\n                        }\n                    }\n                    fcn.0040124e(arg_18h_00);\n                }\n                else if ((arg_20h != 0) && (iVar3 <= arg_20h)) {\n                    fcn.004013ac(arg_ch, arg_10h, lpWideCharStr, iVar1, arg_1ch, arg_20h, 0, 0, 0);\n                }\n            }\n        }\n    }\ncode_r0x00450506:\n    fcn.0040124e(lpWideCharStr);\ncode_r0x0045050f:\n    fcn.0040241e(iVar1);\n    return;\n}\n",
        "token_count": 1254
    },
    "004529bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004529bf(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.00402ca2(arg_8h, arg_ch, arg_10h, &var_28h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 98
    },
    "00457d0f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00457d0f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.00403cba(arg_8h, arg_ch, arg_10h, &var_28h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 99
    },
    "004581c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004581c5(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t arg_10h_00;\n    int32_t *in_FS_OFFSET;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x467c61;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x47502c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (arg_ch == NULL) {\n        *(arg_18h + 0x1c) = 1;\n        *(arg_18h + 0x18) = 0x16;\n        fcn.00402c20(0, 0, 0, 0, 0, arg_18h);\n    }\n    else {\n        arg_10h_00 = *arg_ch;\n        iVar2 = 0;\n        var_14h = 0;\n        if (arg_14h == 0) {\n            arg_14h = 0x4775d0;\n        }\n        if (*(arg_18h + 0x14) == '\\0') {\n            fcn.004024f0(uVar1);\n        }\n        if (*(*(arg_18h + 0xc) + 8) == 0xfde9) {\n            iVar2 = fcn.00402e46(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            goto code_r0x0045830e;\n        }\n        var_10h = arg_8h;\n        if (arg_8h != 0) {\n            var_18h = arg_10h;\n            if (arg_10h != 0) {\n                do {\n                    fcn.00457f27(&var_14h, var_10h, arg_10h_00, 0x7fffffff, arg_14h, arg_18h);\n                    if (var_14h < 0) {\n                        iVar2 = -1;\n                        break;\n                    }\n                    if (var_14h == 0) {\n                        arg_10h_00 = 0;\n                        break;\n                    }\n                    arg_10h_00 = arg_10h_00 + var_14h;\n                    iVar2 = iVar2 + 1;\n                    var_10h = var_10h + 2;\n                    var_18h = var_18h + -1;\n                } while (var_18h != 0);\n            }\n            *arg_ch = arg_10h_00;\n            goto code_r0x0045830e;\n        }\n        fcn.00457f27(&var_14h, &var_10h, arg_10h_00, 0x7fffffff, arg_14h, arg_18h);\n        while (-1 < var_14h) {\n            if (var_14h == 0) goto code_r0x0045830e;\n            arg_10h_00 = arg_10h_00 + var_14h;\n            iVar2 = iVar2 + 1;\n            fcn.00457f27(&var_14h, &var_10h, arg_10h_00, 0x7fffffff, arg_14h, arg_18h);\n        }\n    }\n    iVar2 = -1;\ncode_r0x0045830e:\n    *in_FS_OFFSET = var_ch;\n    return iVar2;\n}\n",
        "token_count": 853
    },
    "004584f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004584f7(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint var_2ch;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    fcn.00401b40(0);\n    if (arg_10h == 0) {\n        arg_10h = 0x4775b8;\n    }\n    fcn.00457f27(&var_4h, 0, arg_8h, arg_ch, arg_10h, &var_2ch);\n    fcn.004024dc();\n    return var_4h;\n}\n",
        "token_count": 146
    },
    "00458551": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458551(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint var_2ch;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    fcn.00401b40(0);\n    if (arg_ch == 0) {\n        if (arg_14h == 0) {\n            arg_14h = 0x4775c4;\n        }\n        arg_ch = 0x46a3bc;\n        arg_10h = 1;\n        arg_8h = 0;\n    }\n    else if (arg_14h == 0) {\n        arg_14h = 0x4775c4;\n    }\n    fcn.00457f27(&var_4h, arg_8h, arg_ch, arg_10h, arg_14h, &var_2ch);\n    fcn.004024dc();\n    return var_4h;\n}\n",
        "token_count": 226
    },
    "004585d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004585d1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.004581c5(arg_8h, arg_ch, arg_10h, arg_14h, &var_28h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "00458619": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458619(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.0045837a(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_28h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 131
    },
    "00458f26": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458f26(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(arg_14h);\n    uVar1 = fcn.00458ce9(arg_8h, arg_ch, arg_10h, &var_28h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 107
    },
    "00458f6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458f6c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(arg_1ch);\n    uVar1 = fcn.00458bd1(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, &var_28h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "00458fb9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458fb9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.00458ce9(arg_8h, arg_ch, arg_10h, &var_28h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 99
    },
    "00459bfe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459bfe(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.00459732(arg_8h, arg_ch, arg_10h, &var_28h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 98
    },
    "00459c4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459c4f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.004599eb(arg_8h, arg_ch, arg_10h, &var_28h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 99
    },
    "00459cf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00459cf0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0045987c(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 75
    },
    "0045c591": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045c591(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_28h;\n    \n    fcn.00401b40(0);\n    uVar1 = fcn.00402923(arg_8h, arg_ch, arg_10h, arg_14h, &var_28h);\n    fcn.004024dc();\n    return uVar1;\n}\n",
        "token_count": 109
    },
    "0045f1b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f1b9(ulong param_1, ulong param_2)\n\n{\n    fcn.0040102d(param_1, param_2);\n    return;\n}\n",
        "token_count": 43
    },
    "004607c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004607c7(void)\n\n{\n    unkint10 in_ST0;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    if (in_ST0 < 0) {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n    }\n    else {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n        if ((uStack28 < 0) && (uStack24 < 0x401f)) {\n            return uStack28 >> (0x3eU - uStack24 & 0x1f);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 197
    },
    "0046097c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0046097c(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    unkint10 in_ST0;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    uStack32 = in_ST0;\n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    if (in_ST0 < 0) {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n    }\n    else {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n        if ((uStack28 < 0) && (uStack24 < 0x403f)) {\n            uVar1 = 0x3e - uStack24;\n            uVar2 = uStack28;\n            if (0x1f < uVar1) {\n                uVar2 = 0;\n                uStack32 = uStack28;\n            }\n            return CONCAT44(uVar2 >> (uVar1 & 0x1f), uStack32 >> (uVar1 & 0x1f) | uVar2 << 0x20 - (uVar1 & 0x1f));\n        }\n    }\n    return 0xffffffffffffffff;\n}\n",
        "token_count": 317
    },
    "004627c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.004627c7(uint32_t *arg_8h, uint32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \ncode_r0x00462c65:\n    // switch table (32 cases) at 0x463d2f\n    switch(arg_10h) {\n    case 0:\n        return 0;\n    case 0x1c:\n        uVar1 = *(arg_8h + arg_10h + -0x1c);\n        if (uVar1 != *(arg_ch + arg_10h + -0x1c)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1c);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x18:\n        if (*(arg_8h + arg_10h + -0x18) != *(arg_ch + arg_10h + -0x18)) {\n            iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x14:\n        uVar1 = *(arg_8h + arg_10h + -0x14);\n        if (uVar1 != *(arg_ch + arg_10h + -0x14)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x14);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x10:\n        if (*(arg_8h + arg_10h + -0x10) != *(arg_ch + arg_10h + -0x10)) {\n            iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0xc:\n        uVar1 = *(arg_8h + arg_10h + -0xc);\n        if (uVar1 != *(arg_ch + arg_10h + -0xc)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xc);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 8:\n        if (*(arg_8h + arg_10h + -8) != *(arg_ch + arg_10h + -8)) {\n            iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 4:\n        uVar1 = *(arg_8h + arg_10h + -4);\n        if (uVar1 == *(arg_ch + arg_10h + -4)) {\n            return 0;\n        }\n        iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -4);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 == 0) {\n            iVar2 = *(arg_8h + arg_10h + -1) - *(arg_ch + arg_10h + -1);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 == 0) {\n                return 0;\n            }\n            return iVar2;\n        }\n        return iVar2;\n    case 0x1d:\n        uVar1 = *(arg_8h + arg_10h + -0x1d);\n        if (uVar1 != *(arg_ch + arg_10h + -0x1d)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1d);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x19:\n        uVar1 = *(arg_8h + arg_10h + -0x19);\n        if (uVar1 != *(arg_ch + arg_10h + -0x19)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x19);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x15:\n        uVar1 = *(arg_8h + arg_10h + -0x15);\n        if (uVar1 != *(arg_ch + arg_10h + -0x15)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x15);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x11:\n        uVar1 = *(arg_8h + arg_10h + -0x11);\n        if (uVar1 != *(arg_ch + arg_10h + -0x11)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x11);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0xd:\n        uVar1 = *(arg_8h + arg_10h + -0xd);\n        if (uVar1 != *(arg_ch + arg_10h + -0xd)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xd);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 9:\n        uVar1 = *(arg_8h + arg_10h + -9);\n        if (uVar1 != *(arg_ch + arg_10h + -9)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -9);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 5:\n        uVar1 = *(arg_8h + arg_10h + -5);\n        if (uVar1 != *(arg_ch + arg_10h + -5)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -5);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 1:\n        uVar3 = *(arg_8h + arg_10h + -1);\n        uVar1 = *(arg_ch + arg_10h + -1);\n        if (uVar3 != uVar1) {\n            return (0 < uVar3 - uVar1) * 2 + -1;\n        }\n        return 0;\n    case 0x1e:\n        uVar1 = *(arg_8h + arg_10h + -0x1e);\n        if (uVar1 != *(arg_ch + arg_10h + -0x1e)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1e);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1d) - *(arg_ch + arg_10h + -0x1d);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1b) - *(arg_ch + arg_10h + -0x1b);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x1a:\n        uVar1 = *(arg_8h + arg_10h + -0x1a);\n        if (uVar1 != *(arg_ch + arg_10h + -0x1a)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1a);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x17) - *(arg_ch + arg_10h + -0x17);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x16:\n        uVar1 = *(arg_8h + arg_10h + -0x16);\n        if (uVar1 != *(arg_ch + arg_10h + -0x16)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x16);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x13) - *(arg_ch + arg_10h + -0x13);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x12:\n        uVar1 = *(arg_8h + arg_10h + -0x12);\n        if (uVar1 != *(arg_ch + arg_10h + -0x12)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x12);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xf) - *(arg_ch + arg_10h + -0xf);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0xe:\n        uVar1 = *(arg_8h + arg_10h + -0xe);\n        if (uVar1 != *(arg_ch + arg_10h + -0xe)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xe);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xb) - *(arg_ch + arg_10h + -0xb);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 10:\n        uVar1 = *(arg_8h + arg_10h + -10);\n        if (uVar1 != *(arg_ch + arg_10h + -10)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -10);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 6:\n        uVar1 = *(arg_8h + arg_10h + -6);\n        if (uVar1 != *(arg_ch + arg_10h + -6)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -6);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 2:\n        if (*(arg_8h + arg_10h + -2) == *(arg_ch + arg_10h + -2)) {\n            return 0;\n        }\n        break;\n    case 0x1f:\n        uVar1 = *(arg_8h + arg_10h + -0x1f);\n        if (uVar1 != *(arg_ch + arg_10h + -0x1f)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1f);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1e) - *(arg_ch + arg_10h + -0x1e);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1d) - *(arg_ch + arg_10h + -0x1d);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1c) - *(arg_ch + arg_10h + -0x1c);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x1b:\n        uVar1 = *(arg_8h + arg_10h + -0x1b);\n        if (uVar1 != *(arg_ch + arg_10h + -0x1b)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x1b);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x1a) - *(arg_ch + arg_10h + -0x1a);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x19) - *(arg_ch + arg_10h + -0x19);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x18) - *(arg_ch + arg_10h + -0x18);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x17:\n        uVar1 = *(arg_8h + arg_10h + -0x17);\n        if (uVar1 != *(arg_ch + arg_10h + -0x17)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x17);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x16) - *(arg_ch + arg_10h + -0x16);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x15) - *(arg_ch + arg_10h + -0x15);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x14) - *(arg_ch + arg_10h + -0x14);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0x13:\n        uVar1 = *(arg_8h + arg_10h + -0x13);\n        if (uVar1 != *(arg_ch + arg_10h + -0x13)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0x13);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x12) - *(arg_ch + arg_10h + -0x12);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x11) - *(arg_ch + arg_10h + -0x11);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0x10) - *(arg_ch + arg_10h + -0x10);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0xf:\n        uVar1 = *(arg_8h + arg_10h + -0xf);\n        if (uVar1 != *(arg_ch + arg_10h + -0xf)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xf);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xe) - *(arg_ch + arg_10h + -0xe);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xd) - *(arg_ch + arg_10h + -0xd);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -0xc) - *(arg_ch + arg_10h + -0xc);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 0xb:\n        uVar1 = *(arg_8h + arg_10h + -0xb);\n        if (uVar1 != *(arg_ch + arg_10h + -0xb)) {\n            iVar2 = (uVar1 & 0xff) - *(arg_ch + arg_10h + -0xb);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -10) - *(arg_ch + arg_10h + -10);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -9) - *(arg_ch + arg_10h + -9);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -8) - *(arg_ch + arg_10h + -8);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 7:\n        if (*(arg_8h + arg_10h + -7) != *(arg_ch + arg_10h + -7)) {\n            iVar2 = *(arg_8h + arg_10h + -7) - *(arg_ch + arg_10h + -7);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -6) - *(arg_ch + arg_10h + -6);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -5) - *(arg_ch + arg_10h + -5);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar2 = *(arg_8h + arg_10h + -4) - *(arg_ch + arg_10h + -4);\n            if (iVar2 != 0) {\n                iVar2 = (0 < iVar2) * 2 + -1;\n            }\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n        }\n    case 3:\n        iVar2 = *(arg_8h + arg_10h + -3) - *(arg_ch + arg_10h + -3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        break;\n    default:\n        goto code_r0x004627de;\n    }\n    iVar2 = *(arg_8h + arg_10h + -2) - *(arg_ch + arg_10h + -2);\n    if (iVar2 != 0) {\n        iVar2 = (0 < iVar2) * 2 + -1;\n    }\n    if (iVar2 == 0) {\n        uVar3 = *(arg_8h + arg_10h + -1);\n        uVar1 = *(arg_ch + arg_10h + -1);\n        if (uVar3 != uVar1) {\n            return (0 < uVar3 - uVar1) * 2 + -1;\n        }\n        return 0;\n    }\n    return iVar2;\ncode_r0x004627de:\n    if (*arg_8h != *arg_ch) {\n        iVar2 = (*arg_8h & 0xff) - *arg_ch;\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 1) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 2) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 3) - *(arg_ch + 3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[1] != arg_ch[1]) {\n        iVar2 = (arg_8h[1] & 0xff) - *(arg_ch + 1);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 5) - *(arg_ch + 5);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 6) - *(arg_ch + 6);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 7) - *(arg_ch + 7);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[2] != arg_ch[2]) {\n        iVar2 = (arg_8h[2] & 0xff) - *(arg_ch + 2);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 9) - *(arg_ch + 9);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 10) - *(arg_ch + 10);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[3] != arg_ch[3]) {\n        iVar2 = (arg_8h[3] & 0xff) - *(arg_ch + 3);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xd) - *(arg_ch + 0xd);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xe) - *(arg_ch + 0xe);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[4] != arg_ch[4]) {\n        iVar2 = (arg_8h[4] & 0xff) - *(arg_ch + 4);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x11) - *(arg_ch + 0x11);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x12) - *(arg_ch + 0x12);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[5] != arg_ch[5]) {\n        iVar2 = (arg_8h[5] & 0xff) - *(arg_ch + 5);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x15) - *(arg_ch + 0x15);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x16) - *(arg_ch + 0x16);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[6] != arg_ch[6]) {\n        iVar2 = (arg_8h[6] & 0xff) - *(arg_ch + 6);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x19) - *(arg_ch + 0x19);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1a) - *(arg_ch + 0x1a);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    if (arg_8h[7] != arg_ch[7]) {\n        iVar2 = (arg_8h[7] & 0xff) - *(arg_ch + 7);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1d) - *(arg_ch + 0x1d);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1e) - *(arg_ch + 0x1e);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        iVar2 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n        if (iVar2 != 0) {\n            iVar2 = (0 < iVar2) * 2 + -1;\n        }\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    arg_8h = arg_8h + 8;\n    arg_ch = arg_ch + 8;\n    arg_10h = arg_10h + -0x20;\n    goto code_r0x00462c65;\n}\n",
        "token_count": 13100
    },
    "00415637": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415637(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004032dd(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 109
    },
    "00404458": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00404458(uint32_t arg_8h, uint32_t arg_ch, uint lpWideCharStr, uint arg_14h, uint arg_18h, uint arg_1ch, \n            uint32_t arg_20h, uint *arg_24h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    \n    if ((arg_8h == 65000) || (arg_8h == 0xfde9)) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (arg_8h < 0xc436) {\n        if ((arg_8h != 0xc435) && (arg_8h != 0x2a)) {\n            if (arg_8h < 0xc42c) {\ncode_r0x004440b2:\n                arg_ch = arg_ch & 0xffffff7f;\n                goto code_r0x004440bf;\n            }\n            if ((0xc42e < arg_8h) && (arg_8h != 0xc431)) {\n                bVar2 = arg_8h == 0xc433;\ncode_r0x004440b0:\n                if (!bVar2) goto code_r0x004440b2;\n            }\n        }\n    }\n    else if (arg_8h != 0xd698) {\n        if (arg_8h < 0xdeaa) goto code_r0x004440b2;\n        if ((0xdeb3 < arg_8h) && (arg_8h != 65000)) {\n            bVar2 = arg_8h == 0xfde9;\n            goto code_r0x004440b0;\n        }\n    }\n    arg_ch = 0;\ncode_r0x004440bf:\n    if ((bVar1) && (arg_24h != NULL)) {\n        *arg_24h = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n              (arg_8h, arg_ch, lpWideCharStr, arg_14h, arg_18h, arg_1ch, ~-bVar1 & arg_20h, ~-bVar1 & arg_24h);\n    return;\n}\n",
        "token_count": 499
    },
    "0045f6f8": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045f6f8(uint16_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    uVar3 = arg_8h[3];\n    uVar2 = uVar3 >> 4 & 0x7ff;\n    if (uVar2 == 0x7ff) {\n        if (((((uVar3 & 0xf) == 0) && (arg_8h[2] == 0)) && (arg_8h[1] == 0)) && (*arg_8h == 0)) {\n            return 1;\n        }\n        return 2;\n    }\n    if (((((uVar3 & 0x7fff) == 0) && (arg_8h[2] == 0)) && ((arg_8h[1] == 0 && (*arg_8h == 0)))) ||\n       (arg_ch._0_2_ = (0x433 - uVar2) - arg_ch,  arg_ch < 1)) {\n        return 0;\n    }\n    if (0x34 < arg_ch) {\n        *(arg_8h + 1) = 0;\n        *arg_8h = 0;\n        arg_8h[3] = uVar3 & 0x8000;\n        return -1;\n    }\n    iVar4 = arg_ch >> 4;\n    iVar1 = *(iVar4 * 4 + 0x47295c);\n    uVar3 = *((arg_ch & 0xfU) * 2 + 0x472934) & arg_8h[iVar1];\n    arg_8h[iVar1] = arg_8h[iVar1] ^ uVar3;\n    if (iVar4 != 1) {\n        if (iVar4 != 2) {\n            if (iVar4 != 3) goto code_r0x0045f7f0;\n            uVar3 = uVar3 | arg_8h[2];\n            arg_8h[2] = 0;\n        }\n        uVar3 = uVar3 | arg_8h[1];\n        arg_8h[1] = 0;\n    }\n    uVar3 = uVar3 | *arg_8h;\n    *arg_8h = 0;\ncode_r0x0045f7f0:\n    return (uVar3 == 0) - 1;\n}\n",
        "token_count": 564
    },
    "00460a77": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00460a77(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (*arg_8h == *arg_ch) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = (*arg_8h & 0xff) - *arg_ch;\n        if (iVar1 != 0) {\n            iVar1 = (0 < iVar1) * 2 + -1;\n        }\n        if (iVar1 == 0) {\n            iVar1 = *(arg_8h + 1) - *(arg_ch + 1);\n            if (iVar1 != 0) {\n                iVar1 = (0 < iVar1) * 2 + -1;\n            }\n            if (iVar1 == 0) {\n                iVar1 = *(arg_8h + 2) - *(arg_ch + 2);\n                if (iVar1 != 0) {\n                    iVar1 = (0 < iVar1) * 2 + -1;\n                }\n                if ((iVar1 == 0) && (iVar1 = *(arg_8h + 3) - *(arg_ch + 3),  iVar1 != 0)) {\n                    iVar1 = (0 < iVar1) * 2 + -1;\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 301
    },
    "00460b47": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00460b47(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (*arg_8h == *arg_ch) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = (*arg_8h & 0xff) - *arg_ch;\n        if (iVar1 != 0) {\n            iVar1 = (0 < iVar1) * 2 + -1;\n        }\n        if ((iVar1 == 0) && (iVar1 = *(arg_8h + 1) - *(arg_ch + 1),  iVar1 != 0)) {\n            iVar1 = (0 < iVar1) * 2 + -1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 177
    },
    "0040124e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040124e(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.004042f5(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "0040231a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.0040231a(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t in_MXCSR;\n    uint16_t in_FPUStatusWord;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x4763a8 < 1) {\n        uVar1 = 0;\n        if ((in_FPUStatusWord & 0x3f) != 0) {\n            uVar1 = (in_FPUStatusWord & 1) << 4;\n            if ((in_FPUStatusWord & 4) != 0) {\n                uVar1 = uVar1 | 8;\n            }\n            if ((in_FPUStatusWord & 8) != 0) {\n                uVar1 = uVar1 | 4;\n            }\n            if ((in_FPUStatusWord & 0x10) != 0) {\n                uVar1 = uVar1 | 2;\n            }\n            if ((in_FPUStatusWord & 0x20) != 0) {\n                uVar1 = uVar1 | 1;\n            }\n            if ((in_FPUStatusWord & 2) != 0) {\n                uVar1 = uVar1 | 0x80000;\n            }\n        }\n    }\n    else {\n        uVar1 = 0;\n        uVar2 = 0;\n        if ((in_FPUStatusWord & 0x3f) != 0) {\n            uVar2 = (in_FPUStatusWord & 1) << 4;\n            if ((in_FPUStatusWord & 4) != 0) {\n                uVar2 = uVar2 | 8;\n            }\n            if ((in_FPUStatusWord & 8) != 0) {\n                uVar2 = uVar2 | 4;\n            }\n            if ((in_FPUStatusWord & 0x10) != 0) {\n                uVar2 = uVar2 | 2;\n            }\n            if ((in_FPUStatusWord & 0x20) != 0) {\n                uVar2 = uVar2 | 1;\n            }\n            if ((in_FPUStatusWord & 2) != 0) {\n                uVar2 = uVar2 | 0x80000;\n            }\n        }\n        if ((in_MXCSR & 0x3f) != 0) {\n            uVar1 = (in_MXCSR & 1) << 4;\n            if ((in_MXCSR & 4) != 0) {\n                uVar1 = uVar1 | 8;\n            }\n            if ((in_MXCSR & 8) != 0) {\n                uVar1 = uVar1 | 4;\n            }\n            if ((in_MXCSR & 0x10) != 0) {\n                uVar1 = uVar1 | 2;\n            }\n            if ((in_MXCSR & 0x20) != 0) {\n                uVar1 = uVar1 | 1;\n            }\n            if ((in_MXCSR & 2) != 0) {\n                uVar1 = uVar1 | 0x80000;\n            }\n        }\n        uVar1 = uVar1 | uVar2;\n    }\n    return uVar1;\n}\n",
        "token_count": 736
    },
    "0040255e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0040255e(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    \n    if (arg_8h != arg_ch) {\n        do {\n            pcVar1 = *(arg_ch + -4);\n            if (pcVar1 != NULL) {\n                (**0x47a000)(0);\n                (*pcVar1)();\n            }\n            arg_ch = arg_ch + -8;\n        } while (arg_ch != arg_8h);\n    }\n    return 1;\n}\n",
        "token_count": 119
    },
    "004017ad": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004017ad(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *in_ECX;\n    \n    in_ECX[2] = arg_18h;\n    *(in_ECX + 0x2e) = 0;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[0x10f] = 0;\n    in_ECX[0x110] = 0;\n    in_ECX[5] = 0;\n    *(in_ECX + 6) = 0;\n    in_ECX[7] = 0;\n    in_ECX[8] = 0;\n    in_ECX[9] = 0;\n    *(in_ECX + 0xb) = 0;\n    in_ECX[0xd] = 0;\n    *(in_ECX + 0xe) = 0;\n    in_ECX[0x112] = *arg_8h;\n    *in_ECX = arg_ch;\n    in_ECX[3] = arg_14h;\n    in_ECX[4] = arg_1ch;\n    in_ECX[1] = arg_10h;\n    return;\n}\n",
        "token_count": 317
    },
    "00402b71": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402b71(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *in_ECX;\n    \n    in_ECX[2] = arg_18h;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[0x10f] = 0;\n    in_ECX[0x110] = 0;\n    in_ECX[5] = 0;\n    *(in_ECX + 6) = 0;\n    in_ECX[7] = 0;\n    in_ECX[8] = 0;\n    in_ECX[9] = 0;\n    *(in_ECX + 0xb) = 0;\n    in_ECX[0xd] = 0;\n    *(in_ECX + 0xe) = 0;\n    in_ECX[0x112] = *arg_8h;\n    *in_ECX = arg_ch;\n    in_ECX[3] = arg_14h;\n    in_ECX[4] = arg_1ch;\n    in_ECX[1] = arg_10h;\n    return;\n}\n",
        "token_count": 302
    },
    "00402f04": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402f04(int32_t *arg_8h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    piVar2 = fcn.0040392c(arg_8h);\n    if (piVar2 == '\\0') {\ncode_r0x0044cab4:\n        return piVar2 & 0xffffff00;\n    }\n    piVar2 = fcn.0040298c(1);\n    if (arg_8h == piVar2) {\n        piVar4 = 0x4775a0;\n    }\n    else {\n        piVar2 = fcn.0040298c(2);\n        if (arg_8h != piVar2) goto code_r0x0044cab4;\n        piVar4 = 0x4775a4;\n    }\n    *0x47759c = *0x47759c + 1;\n    ppiVar1 = arg_8h + 3;\n    piVar2 = *ppiVar1;\n    if ((piVar2 & 0x4c0) != 0) goto code_r0x0044cab4;\n    LOCK();\n    *ppiVar1 = *ppiVar1 | 0x282;\n    iVar3 = *piVar4;\n    if (iVar3 == 0) {\n        iVar3 = fcn.00402d88(0x1000);\n        *piVar4 = iVar3;\n        fcn.004042f5(0);\n        iVar3 = *piVar4;\n        if (iVar3 == 0) {\n            arg_8h[2] = 2;\n            arg_8h[1] = arg_8h + 5;\n            *arg_8h = arg_8h + 5;\n            arg_8h[6] = 2;\n            goto code_r0x0044ca99;\n        }\n    }\n    arg_8h[1] = iVar3;\n    iVar3 = *piVar4;\n    *arg_8h = iVar3;\n    arg_8h[2] = 0x1000;\n    arg_8h[6] = 0x1000;\ncode_r0x0044ca99:\n    return CONCAT31(iVar3 >> 8, 1);\n}\n",
        "token_count": 526
    },
    "00403602": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403602(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *in_ECX;\n    \n    in_ECX[2] = arg_18h;\n    *(in_ECX + 0x2e) = 0;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[0x10f] = 0;\n    in_ECX[0x110] = 0;\n    in_ECX[5] = 0;\n    *(in_ECX + 6) = 0;\n    in_ECX[7] = 0;\n    in_ECX[8] = 0;\n    in_ECX[9] = 0;\n    *(in_ECX + 0xb) = 0;\n    in_ECX[0xd] = 0;\n    *(in_ECX + 0xe) = 0;\n    in_ECX[0x112] = *arg_8h;\n    *in_ECX = arg_ch;\n    in_ECX[3] = arg_14h;\n    in_ECX[4] = arg_1ch;\n    in_ECX[1] = arg_10h;\n    return;\n}\n",
        "token_count": 317
    },
    "004040e3": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004040e3(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *in_ECX;\n    \n    in_ECX[2] = arg_18h;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[0x10f] = 0;\n    in_ECX[0x110] = 0;\n    in_ECX[5] = 0;\n    *(in_ECX + 6) = 0;\n    in_ECX[7] = 0;\n    in_ECX[8] = 0;\n    in_ECX[9] = 0;\n    *(in_ECX + 0xb) = 0;\n    in_ECX[0xd] = 0;\n    *(in_ECX + 0xe) = 0;\n    in_ECX[0x112] = *arg_8h;\n    *in_ECX = arg_ch;\n    in_ECX[3] = arg_14h;\n    in_ECX[4] = arg_1ch;\n    in_ECX[1] = arg_10h;\n    return;\n}\n",
        "token_count": 302
    },
    "0042a690": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a690(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    in_ECX[2] = arg_8h;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    *(in_ECX + 6) = 0;\n    in_ECX[7] = 0;\n    in_ECX[8] = 0;\n    in_ECX[9] = 0;\n    *(in_ECX + 0xb) = 0;\n    in_ECX[0xd] = 0;\n    *(in_ECX + 0xe) = 0;\n    in_ECX[0x10f] = 0;\n    in_ECX[0x110] = 0;\n    return;\n}\n",
        "token_count": 216
    },
    "0042a6e8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a6e8(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    in_ECX[2] = arg_8h;\n    *(in_ECX + 0x2e) = 0;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    *(in_ECX + 6) = 0;\n    in_ECX[7] = 0;\n    in_ECX[8] = 0;\n    in_ECX[9] = 0;\n    *(in_ECX + 0xb) = 0;\n    in_ECX[0xd] = 0;\n    *(in_ECX + 0xe) = 0;\n    in_ECX[0x10f] = 0;\n    in_ECX[0x110] = 0;\n    return;\n}\n",
        "token_count": 234
    },
    "00401997": {
        "rules": [
            "PEB access",
            "access PEB ldr_data",
            "get kernel32 base address"
        ],
        "decompiled_code": "\nuint fcn.00401997(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    return *(***(*(*(in_FS_OFFSET + 0x30) + 0xc) + 0xc) + 0x18);\n}\n",
        "token_count": 52
    },
    "004031cf": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.004031cf(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    return *(*(in_FS_OFFSET + 0x30) + 0x18);\n}\n",
        "token_count": 40
    },
    "0045c7ca": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0045c7ca(void)\n\n{\n    *0x475a80 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 64
    },
    "0040138e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040138e(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (param_1 < 0xffffffe1) {\n        if (param_1 == 0) {\n            param_1 = 1;\n        }\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x477570, 0, param_1);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.004032ba();\n        } while ((iVar1 != 0) && (iVar1 = fcn.00402e1e(param_1),  iVar1 != 0));\n    }\n    puVar2 = fcn.004029b9();\n    *puVar2 = 0xc;\n    return 0;\n}\n",
        "token_count": 193
    },
    "0040188e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040188e(void)\n\n{\n    uchar *in_EAX;\n    uint *puVar1;\n    uint *puVar2;\n    uint unaff_retaddr;\n    uchar auStack4 [4];\n    \n    puVar2 = &stack0x00000000 - in_EAX & ~-(*0x10 < in_EAX);\n    for (puVar1 = auStack4 & 0xfffff000; puVar2 < puVar1; puVar1 = puVar1 + -0x400) {\n    }\n    *puVar2 = unaff_retaddr;\n    return;\n}\n",
        "token_count": 133
    },
    "004019ab": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.004019ab(char *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    \n    fcn.00403e4f();\n    do {\n        cVar1 = *arg_8h;\n        if (cVar1 == arg_ch) {\n            return arg_8h;\n        }\n        arg_8h = arg_8h + 1;\n    } while (cVar1 != '\\0');\n    return NULL;\n}\n",
        "token_count": 104
    },
    "0040221b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040221b(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*0x477160 != 0) {\n        iVar2 = *0x477160 * 0x18 + 0x476ff8;\n        iVar1 = *0x477160;\n        do {\n            (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(iVar2);\n            *0x477160 = *0x477160 + -1;\n            iVar2 = iVar2 + -0x18;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 1;\n}\n",
        "token_count": 145
    },
    "004023d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004023d8(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.004020a9();\n    piVar1 = *(iVar2 + 0x24);\n    while( true ) {\n        if (piVar1 == NULL) {\n            return 1;\n        }\n        if (*piVar1 == arg_8h) break;\n        piVar1 = piVar1[1];\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "004025db": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004025db(uint32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t arg_8h;\n    \n    if ((param_1 == 0) || (param_2 <= 0xffffffe0 / param_1)) {\n        arg_8h = param_1 * param_2;\n        if (arg_8h == 0) {\n            arg_8h = 1;\n        }\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x477570, 8, arg_8h);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.004032ba();\n        } while ((iVar1 != 0) && (iVar1 = fcn.00402e1e(arg_8h),  iVar1 != 0));\n    }\n    puVar2 = fcn.004029b9();\n    *puVar2 = 0xc;\n    return 0;\n}\n",
        "token_count": 239
    },
    "0040293c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040293c(uchar *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    fcn.00403e4f();\n    if (arg_10h != 0) {\n        arg_ch = arg_ch - arg_8h;\n        do {\n            *arg_8h = arg_8h[arg_ch];\n            arg_8h = arg_8h + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0040295a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040295a(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    uint uStack16;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        if (arg_10h != 0) {\n            piVar3 = arg_8h;\n            do {\n                iVar1 = *((arg_10h - arg_8h) + piVar3);\n                *piVar3 = iVar1;\n                piVar3 = piVar3 + 1;\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            *arg_8h = 0;\n            puVar2 = fcn.004029b9();\n            uStack16 = 0x22;\n            goto code_r0x00440f86;\n        }\n        *arg_8h = 0;\n    }\n    puVar2 = fcn.004029b9();\n    uStack16 = 0x16;\ncode_r0x00440f86:\n    *puVar2 = uStack16;\n    fcn.00402842();\n    return uStack16;\n}\n",
        "token_count": 302
    },
    "00402d88": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402d88(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (arg_8h < 0xffffffe1) {\n        if (arg_8h == 0) {\n            arg_8h = 1;\n        }\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x477570, 0, arg_8h);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.004032ba();\n        } while ((iVar1 != 0) && (iVar1 = fcn.00402e1e(arg_8h),  iVar1 != 0));\n    }\n    puVar2 = fcn.004029b9();\n    *puVar2 = 0xc;\n    return 0;\n}\n",
        "token_count": 201
    },
    "00402fd1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402fd1(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (arg_8h == 0) {\n        iVar1 = fcn.00402d88(arg_ch);\n    }\n    else {\n        if (arg_ch == 0) {\n            fcn.004042f5(arg_8h);\n        }\n        else {\n            if (arg_ch < 0xffffffe1) {\n                do {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x477570, 0, arg_8h, arg_ch);\n                    if (iVar1 != 0) {\n                        return iVar1;\n                    }\n                    iVar1 = fcn.004032ba();\n                } while ((iVar1 != 0) && (iVar1 = fcn.00402e1e(arg_ch),  iVar1 != 0));\n            }\n            puVar2 = fcn.004029b9();\n            *puVar2 = 0xc;\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 254
    },
    "0040373d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040373d(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*0x476400 != 0) {\n        iVar2 = *0x476400 * 0x18 + 0x4763d0;\n        iVar1 = *0x476400;\n        do {\n            (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(iVar2);\n            *0x476400 = *0x476400 + -1;\n            iVar2 = iVar2 + -0x18;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 1;\n}\n",
        "token_count": 146
    },
    "0040375b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040375b(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t arg_8h_00;\n    \n    if ((arg_8h == 0) || (arg_ch <= 0xffffffe0 / arg_8h)) {\n        arg_8h_00 = arg_8h * arg_ch;\n        if (arg_8h_00 == 0) {\n            arg_8h_00 = 1;\n        }\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x477570, 8, arg_8h_00);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.004032ba();\n        } while ((iVar1 != 0) && (iVar1 = fcn.00402e1e(arg_8h_00),  iVar1 != 0));\n    }\n    puVar2 = fcn.004029b9();\n    *puVar2 = 0xc;\n    return 0;\n}\n",
        "token_count": 255
    },
    "00403995": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint8_t * fcn.00403995(void)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    \n    fcn.004032bf();\n    puVar4 = *0x4771e4;\n    if (*0x4771e4 == NULL) {\n        puVar4 = 0x476fd8;\n    }\n    bVar1 = false;\n    do {\n        uVar2 = *puVar4;\n        if (uVar2 < 0x21) {\n            if (uVar2 == 0) {\n                return puVar4;\n            }\n            if (!bVar1) {\n                do {\n                    if (0x20 < uVar2) {\n                        return puVar4;\n                    }\n                    puVar4 = puVar4 + 1;\n                    uVar2 = *puVar4;\n                } while (uVar2 != 0);\n                return puVar4;\n            }\n        }\n        if (uVar2 == 0x22) {\n            bVar1 = !bVar1;\n        }\n        iVar3 = fcn.00402c25(uVar2);\n        if (iVar3 != 0) {\n            puVar4 = puVar4 + 1;\n        }\n        puVar4 = puVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 302
    },
    "00403ae9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00403ae9(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_FS_OFFSET;\n    \n    iVar2 = fcn.0040288d();\n    if (iVar2 != 0) {\n        iVar2 = *(*(in_FS_OFFSET + 0x18) + 4);\n        while( true ) {\n            iVar3 = 0;\n            LOCK();\n            iVar1 = iVar2;\n            if (*0x476350 != 0) {\n                iVar3 = *0x476350;\n                iVar1 = *0x476350;\n            }\n            *0x476350 = iVar1;\n            if (iVar3 == 0) break;\n            if (iVar2 == iVar3) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 188
    },
    "00403e36": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403e36(char *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    \n    cVar1 = *arg_8h;\n    while ((cVar1 != '\\0' && (cVar1 != ***(*arg_ch + 0x88)))) {\n        arg_8h = arg_8h + 1;\n        cVar1 = *arg_8h;\n    }\n    if (cVar1 != '\\0') {\n        do {\n            arg_8h = arg_8h + 1;\n            cVar1 = *arg_8h;\n            pcVar2 = arg_8h;\n            if ((cVar1 == '\\0') || (cVar1 == 'e')) break;\n        } while (cVar1 != 'E');\n        do {\n            pcVar3 = pcVar2;\n            pcVar2 = pcVar3 + -1;\n        } while (*pcVar2 == '0');\n        if (*pcVar2 == ***(*arg_ch + 0x88)) {\n            pcVar2 = pcVar3 + -2;\n        }\n        do {\n            cVar1 = *arg_8h;\n            arg_8h = arg_8h + 1;\n            pcVar2 = pcVar2 + 1;\n            *pcVar2 = cVar1;\n        } while (cVar1 != '\\0');\n    }\n    return;\n}\n",
        "token_count": 327
    },
    "00404098": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404098(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    char *pcVar3;\n    uint uStack16;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        if (arg_10h != 0) {\n            pcVar3 = arg_8h;\n            do {\n                cVar1 = pcVar3[arg_10h - arg_8h];\n                *pcVar3 = cVar1;\n                pcVar3 = pcVar3 + 1;\n                if (cVar1 == '\\0') {\n                    return 0;\n                }\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            *arg_8h = '\\0';\n            puVar2 = fcn.004029b9();\n            uStack16 = 0x22;\n            goto code_r0x0041d2e8;\n        }\n        *arg_8h = '\\0';\n    }\n    puVar2 = fcn.004029b9();\n    uStack16 = 0x16;\ncode_r0x0041d2e8:\n    *puVar2 = uStack16;\n    fcn.00402842();\n    return uStack16;\n}\n",
        "token_count": 300
    },
    "0040b18e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040b18e(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (param_1 < 0xffffffe1) {\n        if (param_1 == 0) {\n            param_1 = 1;\n        }\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x477570, 0, param_1);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.004032ba();\n        } while ((iVar1 != 0) && (iVar1 = fcn.00402e1e(param_1),  iVar1 != 0));\n    }\n    puVar2 = fcn.004029b9();\n    *puVar2 = 0xc;\n    return 0;\n}\n",
        "token_count": 194
    },
    "0041700a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0041700a(uint8_t *param_1, uint8_t *param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint uVar6;\n    bool bVar7;\n    \n    iVar2 = *(param_1 + 4);\n    if (((iVar2 == 0) || (puVar5 = iVar2 + 8,  *puVar5 == 0)) || (((*param_1 & 0x80) != 0 && ((*param_2 & 0x10) != 0))))\n    {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = 0;\n        if (iVar2 != *(param_2 + 4)) {\n            puVar3 = *(param_2 + 4) + 8;\n            do {\n                uVar1 = *puVar5;\n                bVar7 = uVar1 < *puVar3;\n                if (uVar1 != *puVar3) {\ncode_r0x004166cf:\n                    uVar4 = -bVar7 | 1;\n                    goto code_r0x004166d4;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar5[1];\n                bVar7 = uVar1 < puVar3[1];\n                if (uVar1 != puVar3[1]) goto code_r0x004166cf;\n                puVar5 = puVar5 + 2;\n                puVar3 = puVar3 + 2;\n            } while (uVar1 != 0);\n            uVar4 = 0;\ncode_r0x004166d4:\n            if (uVar4 != 0) {\n                return 0;\n            }\n        }\n        if ((((*param_2 & 2) == 0) || ((*param_1 & 8) != 0)) &&\n           ((((*param_3 & 1) == 0 || ((*param_1 & 1) != 0)) && (((*param_3 & 2) == 0 || ((*param_1 & 2) != 0)))))) {\n            uVar6 = 1;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 523
    },
    "004170e3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004170e3(uint8_t *param_1, uint8_t *param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint uVar6;\n    bool bVar7;\n    \n    iVar2 = *(param_1 + 4);\n    if (((iVar2 == 0) || (puVar5 = iVar2 + 8,  *puVar5 == 0)) || (((*param_1 & 0x80) != 0 && ((*param_2 & 0x10) != 0))))\n    {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = 0;\n        if (iVar2 != *(param_2 + 4)) {\n            puVar3 = *(param_2 + 4) + 8;\n            do {\n                uVar1 = *puVar5;\n                bVar7 = uVar1 < *puVar3;\n                if (uVar1 != *puVar3) {\ncode_r0x004166cf:\n                    uVar4 = -bVar7 | 1;\n                    goto code_r0x004166d4;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar5[1];\n                bVar7 = uVar1 < puVar3[1];\n                if (uVar1 != puVar3[1]) goto code_r0x004166cf;\n                puVar5 = puVar5 + 2;\n                puVar3 = puVar3 + 2;\n            } while (uVar1 != 0);\n            uVar4 = 0;\ncode_r0x004166d4:\n            if (uVar4 != 0) {\n                return 0;\n            }\n        }\n        if ((((*param_2 & 2) == 0) || ((*param_1 & 8) != 0)) &&\n           ((((*param_3 & 1) == 0 || ((*param_1 & 1) != 0)) && (((*param_3 & 2) == 0 || ((*param_1 & 2) != 0)))))) {\n            uVar6 = 1;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 523
    },
    "0041900a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.0041900a(int32_t *param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    char **ppcVar7;\n    char **ppcVar8;\n    char **ppcStack36;\n    char **ppcStack32;\n    uint uStack28;\n    int32_t iStack24;\n    char *pcStack20;\n    char *pcStack16;\n    char *pcStack12;\n    uint uStack8;\n    \n    if (param_2 == NULL) {\n        puVar3 = fcn.004029b9();\n        iVar6 = 0x16;\n        *puVar3 = 0x16;\n        fcn.00402842();\n    }\n    else {\n        *param_2 = 0;\n        uStack28 = 0;\n        ppcStack32 = NULL;\n        ppcStack36 = NULL;\n        iVar6 = *param_1;\n        ppcVar8 = ppcStack36;\n        while (ppcStack36 = ppcVar8,  iVar6 != 0) {\n            uStack8 = CONCAT13(uStack8 >> 0x18, 0x3f2a);\n            iVar6 = fcn.004020c2(iVar6, &uStack8);\n            if (iVar6 == 0) {\n                iVar6 = fcn.00441bc5(*param_1, 0, 0, &ppcStack36);\n            }\n            else {\n                iVar6 = fcn.00441d83(*param_1, iVar6, &ppcStack36);\n            }\n            if (iVar6 != 0) goto code_r0x004418aa;\n            param_1 = param_1 + 1;\n            ppcVar8 = ppcStack36;\n            iVar6 = *param_1;\n        }\n        iVar6 = (ppcStack32 - ppcVar8 >> 2) + 1;\n        pcStack12 = NULL;\n        for (ppcVar7 = ppcVar8; ppcVar7 != ppcStack32; ppcVar7 = ppcVar7 + 1) {\n            pcVar5 = *ppcVar7;\n            pcStack16 = pcVar5 + 1;\n            do {\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            pcStack12 = pcVar5 + pcStack12 + (1 - pcStack16);\n        }\n        iVar4 = fcn.0040402a(iVar6, pcStack12, 1);\n        ppcVar7 = ppcStack32;\n        if (iVar4 == 0) {\n            fcn.004042f5(0);\n            iVar6 = -1;\ncode_r0x004418aa:\n            fcn.00442529();\n        }\n        else {\n            uStack8 = iVar4 + iVar6 * 4;\n            pcStack20 = uStack8;\n            if (ppcVar8 != ppcStack32) {\n                iStack24 = iVar4 - ppcVar8;\n                do {\n                    pcStack16 = *ppcVar8;\n                    pcVar5 = pcStack16 + 1;\n                    do {\n                        cVar1 = *pcStack16;\n                        pcStack16 = pcStack16 + 1;\n                    } while (cVar1 != '\\0');\n                    pcStack16 = pcStack16 + (1 - pcVar5);\n                    iVar6 = fcn.00401fe6(uStack8, pcStack12 + (pcStack20 - uStack8), *ppcVar8, pcStack16);\n                    if (iVar6 != 0) {\n                        fcn.0040277f(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        iVar6 = (*pcVar2)();\n                        return iVar6;\n                    }\n                    *(iStack24 + ppcVar8) = uStack8;\n                    ppcVar8 = ppcVar8 + 1;\n                    uStack8 = uStack8 + pcStack16;\n                } while (ppcVar8 != ppcVar7);\n            }\n            *param_2 = iVar4;\n            fcn.004042f5(0);\n            fcn.00442529();\n            iVar6 = 0;\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 1006
    },
    "00419017": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00419017(int32_t *param_1, int32_t *param_2)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int16_t *piVar7;\n    int16_t *piVar8;\n    int16_t **ppiVar9;\n    int16_t **ppiVar10;\n    int16_t **ppiStack40;\n    int16_t **ppiStack36;\n    uint uStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int16_t *piStack20;\n    int32_t iStack16;\n    ushort uStack12;\n    uint32_t uStack8;\n    \n    uStack8 = *0x47502c ^ &stack0xfffffffc;\n    if (param_2 == NULL) {\n        puVar4 = fcn.004029b9();\n        *puVar4 = 0x16;\n        fcn.00402842();\n    }\n    else {\n        *param_2 = 0;\n        iVar5 = *param_1;\n        ppiStack40 = NULL;\n        ppiStack36 = NULL;\n        uStack32 = 0;\n        ppiVar10 = ppiStack40;\n        while (ppiStack40 = ppiVar10,  iVar5 != 0) {\n            iStack16 = 0x3f002a;\n            uStack12 = 0;\n            iVar5 = fcn.00402941(iVar5, &iStack16);\n            if (iVar5 == 0) {\n                iVar5 = fcn.00441ca2(*param_1, 0, 0, &ppiStack40);\n            }\n            else {\n                iVar5 = fcn.004420a9(*param_1, iVar5, &ppiStack40);\n            }\n            if (iVar5 != 0) goto code_r0x00441aa6;\n            param_1 = param_1 + 1;\n            ppiVar10 = ppiStack40;\n            iVar5 = *param_1;\n        }\n        iVar5 = (ppiStack36 - ppiVar10 >> 2) + 1;\n        iStack24 = 0;\n        for (ppiVar9 = ppiVar10; ppiVar9 != ppiStack36; ppiVar9 = ppiVar9 + 1) {\n            piVar7 = *ppiVar9;\n            piStack20 = piVar7 + 1;\n            do {\n                iVar2 = *piVar7;\n                piVar7 = piVar7 + 1;\n            } while (iVar2 != 0);\n            iStack24 = iStack24 + 1 + (piVar7 - piStack20 >> 1);\n        }\n        iVar6 = fcn.0040402a(iVar5, iStack24, 2);\n        ppiVar9 = ppiStack36;\n        if (iVar6 == 0) {\n            fcn.004042f5(0);\ncode_r0x00441aa6:\n            fcn.0044255c();\n        }\n        else {\n            piVar7 = iVar6 + iVar5 * 4;\n            piStack20 = piVar7;\n            if (ppiVar10 != ppiStack36) {\n                iStack16 = iVar6 - ppiVar10;\n                do {\n                    piVar8 = *ppiVar10;\n                    piVar1 = piVar8 + 1;\n                    do {\n                        iVar2 = *piVar8;\n                        piVar8 = piVar8 + 1;\n                    } while (iVar2 != 0);\n                    iStack28 = (piVar8 - piVar1 >> 1) + 1;\n                    iVar5 = fcn.00403df5(piStack20, iStack24 - (piStack20 - piVar7 >> 1), *ppiVar10, iStack28);\n                    if (iVar5 != 0) {\n                        fcn.0040277f(0, 0, 0, 0, 0);\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                    *(iStack16 + ppiVar10) = piStack20;\n                    ppiVar10 = ppiVar10 + 1;\n                    piStack20 = piStack20 + iStack28;\n                } while (ppiVar10 != ppiVar9);\n            }\n            *param_2 = iVar6;\n            fcn.004042f5(0);\n            fcn.0044255c();\n        }\n    }\n    fcn.0040241e(param_2);\n    return;\n}\n",
        "token_count": 1036
    },
    "00419122": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00419122(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *arg_ch;\n    int16_t *arg_8h;\n    uint uStack16;\n    int32_t *piStack12;\n    int32_t iStack8;\n    \n    if (param_1 == 0) {\n        iVar2 = 0;\n    }\n    else if ((param_1 == 2) || (param_1 == 1)) {\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0x476d50, 0x104);\n        *0x4771d4 = 0x476d50;\n        if ((*0x4771e8 == NULL) || (arg_8h = *0x4771e8,  **0x4771e8 == 0)) {\n            arg_8h = 0x476d50;\n        }\n        iStack8 = 0;\n        uStack16 = 0;\n        fcn.00418cda(arg_8h, 0, 0, &iStack8, &uStack16);\n        arg_ch = fcn.0040402a(iStack8, uStack16, 2);\n        if (arg_ch == NULL) {\n            puVar3 = fcn.004029b9();\n            iVar2 = 0xc;\n            *puVar3 = 0xc;\n        }\n        else {\n            fcn.00418cda(arg_8h, arg_ch, arg_ch + iStack8, &iStack8, &uStack16);\n            if (param_1 != 1) {\n                piStack12 = NULL;\n                iVar2 = fcn.0040441c(arg_ch, &piStack12);\n                piVar1 = piStack12;\n                if (iVar2 == 0) {\n                    *0x4771d8 = 0;\n                    iVar2 = *piStack12;\n                    while (iVar2 != 0) {\n                        piStack12 = piStack12 + 1;\n                        *0x4771d8 = *0x4771d8 + 1;\n                        iVar2 = *piStack12;\n                    }\n                    piStack12 = NULL;\n                    *0x4771e0 = piVar1;\n                    fcn.004042f5(0);\n                    iVar2 = 0;\n                }\n                else {\n                    fcn.004042f5(piStack12);\n                }\n                piStack12 = NULL;\n                fcn.004042f5(arg_ch);\n                return iVar2;\n            }\n            *0x4771d8 = iStack8 + -1;\n            iVar2 = 0;\n            *0x4771e0 = arg_ch;\n        }\n        fcn.004042f5(0);\n    }\n    else {\n        puVar3 = fcn.004029b9();\n        iVar2 = 0x16;\n        *puVar3 = 0x16;\n        fcn.00402842();\n    }\n    return iVar2;\n}\n",
        "token_count": 682
    },
    "0041d252": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d252(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    char *pcVar3;\n    uint uStack16;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        if (arg_10h != 0) {\n            pcVar3 = arg_8h;\n            do {\n                cVar1 = pcVar3[arg_10h - arg_8h];\n                *pcVar3 = cVar1;\n                pcVar3 = pcVar3 + 1;\n                if (cVar1 == '\\0') {\n                    return 0;\n                }\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            *arg_8h = '\\0';\n            puVar2 = fcn.004029b9();\n            uStack16 = 0x22;\n            goto code_r0x0041d278;\n        }\n        *arg_8h = '\\0';\n    }\n    puVar2 = fcn.004029b9();\n    uStack16 = 0x16;\ncode_r0x0041d278:\n    *puVar2 = uStack16;\n    fcn.00402842();\n    return uStack16;\n}\n",
        "token_count": 297
    },
    "00440ee1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00440ee1(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    uint uStack16;\n    \n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        if (arg_10h != 0) {\n            piVar3 = arg_8h;\n            do {\n                iVar1 = *((arg_10h - arg_8h) + piVar3);\n                *piVar3 = iVar1;\n                piVar3 = piVar3 + 1;\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n            *arg_8h = 0;\n            puVar2 = fcn.004029b9();\n            uStack16 = 0x22;\n            goto code_r0x00440f09;\n        }\n        *arg_8h = 0;\n    }\n    puVar2 = fcn.004029b9();\n    uStack16 = 0x16;\ncode_r0x00440f09:\n    *puVar2 = uStack16;\n    fcn.00402842();\n    return uStack16;\n}\n",
        "token_count": 302
    },
    "00442b3e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint8_t * fcn.00442b3e(uint8_t *param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0;\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0;\n    uStack36 = 0;\n    uStack40 = 0;\n    for (; uVar1 = *param_2,  uVar1 != 0; param_2 = param_2 + 1) {\n        puVar2 = &uStack40 + (uVar1 >> 3);\n        *puVar2 = *puVar2 | '\\x01' << (uVar1 & 7);\n    }\n    do {\n        puVar3 = param_1;\n        puVar2 = *puVar3;\n        if (*puVar3 == 0) {\n            return puVar2;\n        }\n        param_1 = puVar3 + 1;\n    } while ((*(&uStack40 + (puVar2 >> 3)) >> (puVar2 & 7) & 1) == 0);\n    return puVar3;\n}\n",
        "token_count": 339
    },
    "00442b4b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * fcn.00442b4b(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int16_t *piVar3;\n    \n    if (*param_1 != 0) {\n        do {\n            if (*param_2 != 0) {\n                iVar1 = *param_1;\n                piVar3 = param_2;\n                iVar2 = *param_2;\n                do {\n                    if (iVar2 == iVar1) {\n                        return param_1;\n                    }\n                    piVar3 = piVar3 + 1;\n                    iVar2 = *piVar3;\n                    iVar1 = *param_1;\n                } while (iVar2 != 0);\n            }\n            param_1 = param_1 + 1;\n        } while (*param_1 != 0);\n    }\n    return NULL;\n}\n",
        "token_count": 199
    },
    "00444dd1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t * fcn.00444dd1(uint32_t *param_1, char param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    uchar auVar8 [16];\n    char cVar10;\n    char cVar11;\n    char cVar12;\n    char cVar13;\n    char cVar14;\n    char cVar15;\n    char cVar16;\n    uchar auVar9 [16];\n    \n    if (*0x4763a8 != 0) {\n        auVar9 = pshuflw(ZEXT216(CONCAT11(param_2, param_2)), ZEXT216(CONCAT11(param_2, param_2)), 0);\n        uVar3 = -1 << (param_1 & 0xf);\n        pcVar7 = param_1 - (param_1 & 0xf);\n        while( true ) {\n            cVar2 = SUB161(auVar9, 0);\n            cVar10 = SUB161(auVar9 >> 8, 0);\n            cVar11 = SUB161(auVar9 >> 0x10, 0);\n            cVar12 = SUB161(auVar9 >> 0x18, 0);\n            cVar13 = SUB161(auVar9 >> 0x20, 0);\n            cVar14 = SUB161(auVar9 >> 0x28, 0);\n            cVar15 = SUB161(auVar9 >> 0x30, 0);\n            cVar16 = SUB161(auVar9 >> 0x38, 0);\n            auVar8 = CONCAT115(-(pcVar7[0xf] == '\\0'), \n                               CONCAT114(-(pcVar7[0xe] == '\\0'), \n                                         CONCAT113(-(pcVar7[0xd] == '\\0'), \n                                                   CONCAT112(-(pcVar7[0xc] == '\\0'), \n                                                             CONCAT111(-(pcVar7[0xb] == '\\0'), \n                                                                       CONCAT110(-(pcVar7[10] == '\\0'), \n                                                                                 CONCAT19(-(pcVar7[9] == '\\0'), \n                                                                                          CONCAT18(-(pcVar7[8] == '\\0')\n                                                                                                   , CONCAT17(-(pcVar7[7\n                                                            ] == '\\0'), \n                                                            CONCAT16(-(pcVar7[6] == '\\0'), \n                                                                     CONCAT15(-(pcVar7[5] == '\\0'), \n                                                                              CONCAT14(-(pcVar7[4] == '\\0'), \n                                                                                       CONCAT13(-(pcVar7[3] == '\\0'), \n                                                                                                CONCAT12(-(pcVar7[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(pcVar7[1] == '\\0'), -(*pcVar7 == '\\0'))))))))))))\n                                                            )))) |\n                     CONCAT115(-(pcVar7[0xf] == cVar16), \n                               CONCAT114(-(pcVar7[0xe] == cVar15), \n                                         CONCAT113(-(pcVar7[0xd] == cVar14), \n                                                   CONCAT112(-(pcVar7[0xc] == cVar13), \n                                                             CONCAT111(-(pcVar7[0xb] == cVar12), \n                                                                       CONCAT110(-(pcVar7[10] == cVar11), \n                                                                                 CONCAT19(-(pcVar7[9] == cVar10), \n                                                                                          CONCAT18(-(pcVar7[8] == cVar2)\n                                                                                                   , CONCAT17(-(pcVar7[7\n                                                            ] == cVar16), \n                                                            CONCAT16(-(pcVar7[6] == cVar15), \n                                                                     CONCAT15(-(pcVar7[5] == cVar14), \n                                                                              CONCAT14(-(pcVar7[4] == cVar13), \n                                                                                       CONCAT13(-(pcVar7[3] == cVar12), \n                                                                                                CONCAT12(-(pcVar7[2] ==\n                                                                                                          cVar11), \n                                                                                                         CONCAT11(-(\n                                                            pcVar7[1] == cVar10), -(*pcVar7 == cVar2))))))))))))))));\n            uVar3 = (SUB161(auVar8 >> 7, 0) & 1 | (SUB161(auVar8 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar8 >> 0x17, 0) & 1) << 2 | (SUB161(auVar8 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar8 >> 0x27, 0) & 1) << 4 | (SUB161(auVar8 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar8 >> 0x37, 0) & 1) << 6 | (SUB161(auVar8 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar8 >> 0x47, 0) & 1) << 8 | (SUB161(auVar8 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar8 >> 0x57, 0) & 1) << 10 | (SUB161(auVar8 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar8 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar8 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar8 >> 0x77, 0) & 1) << 0xe | SUB161(auVar8 >> 0x7f, 0) << 0xf) & uVar3;\n            if (uVar3 != 0) break;\n            uVar3 = 0xffffffff;\n            pcVar7 = pcVar7 + 0x10;\n        }\n        iVar1 = 0;\n        if (uVar3 != 0) {\n            for (; (uVar3 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        puVar4 = pcVar7 + iVar1;\n        if (cVar2 != *puVar4) {\n            puVar4 = NULL;\n        }\n        return puVar4;\n    }\n    uVar3 = param_1 & 3;\n    while (uVar3 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar3 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar3 = *param_1;\n            uVar6 = uVar3 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar5 = uVar3 ^ 0xffffffff ^ uVar3 + 0x7efefeff;\n            puVar4 = param_1 + 1;\n            if (((uVar6 ^ 0xffffffff ^ uVar6 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar4;\n            if ((uVar5 & 0x81010100) != 0) {\n                if ((uVar5 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar3 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar3 = *param_1;\n        if (uVar3 == param_2) {\n            return param_1;\n        }\n        if (uVar3 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar3 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar3 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar3 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar4;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 1965
    },
    "00444dde": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint16_t * fcn.00444dde(uint16_t *param_1, uint16_t param_2)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    \n    if (0 < *0x4763a8) {\n        auVar1 = pshuflw(ZEXT216(param_2), ZEXT216(param_2), 0);\n        do {\n            if ((param_1 & 0xfff) < 0xff1) {\n                uVar3 = SUB162(auVar1, 0);\n                uVar4 = SUB162(auVar1 >> 0x10, 0);\n                auVar2 = CONCAT214(-(*0x472b4e == param_1[7]), \n                                   CONCAT212(-(*0x472b4c == param_1[6]), \n                                             CONCAT210(-(*0x472b4a == param_1[5]), \n                                                       CONCAT28(-(*0x472b48 == param_1[4]), \n                                                                CONCAT26(-(*0x472b46 == param_1[3]), \n                                                                         CONCAT24(-(*0x472b44 == param_1[2]), \n                                                                                  CONCAT22(-(*0x472b42 == param_1[1]), \n                                                                                           -(*0x472b40 == *param_1))))))\n                                            )) |\n                         CONCAT214(-(param_1[7] == uVar4), \n                                   CONCAT212(-(param_1[6] == uVar3), \n                                             CONCAT210(-(param_1[5] == uVar4), \n                                                       CONCAT28(-(param_1[4] == uVar3), \n                                                                CONCAT26(-(param_1[3] == uVar4), \n                                                                         CONCAT24(-(param_1[2] == uVar3), \n                                                                                  CONCAT22(-(param_1[1] == uVar4), \n                                                                                           -(*param_1 == uVar3))))))));\n                uVar3 = SUB161(auVar2 >> 7, 0) & 1 | (SUB161(auVar2 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar2 >> 0x17, 0) & 1) << 2 | (SUB161(auVar2 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar2 >> 0x27, 0) & 1) << 4 | (SUB161(auVar2 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar2 >> 0x37, 0) & 1) << 6 | (SUB161(auVar2 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar2 >> 0x47, 0) & 1) << 8 | (SUB161(auVar2 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar2 >> 0x57, 0) & 1) << 10 | (SUB161(auVar2 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar2 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar2 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar2 >> 0x77, 0) & 1) << 0xe | SUB161(auVar2 >> 0x7f, 0) << 0xf;\n                if (uVar3 != 0) goto code_r0x00464541;\n                iVar5 = 0x10;\n            }\n            else {\n                if (*param_1 == param_2) {\n                    return param_1;\n                }\n                if (*param_1 == 0) {\n                    return NULL;\n                }\n                iVar5 = 2;\n            }\n            param_1 = param_1 + iVar5;\n        } while( true );\n    }\n    uVar3 = *param_1;\n    while ((uVar3 != 0 && (uVar3 != param_2))) {\n        param_1 = param_1 + 1;\n        uVar3 = *param_1;\n    }\ncode_r0x004644e0:\n    return (uVar3 != param_2) - 1 & param_1;\ncode_r0x00464541:\n    iVar5 = 0;\n    if (uVar3 != 0) {\n        for (; (uVar3 >> iVar5 & 1) == 0; iVar5 = iVar5 + 1) {\n        }\n    }\n    param_1 = param_1 + iVar5;\n    uVar3 = *param_1;\n    goto code_r0x004644e0;\n}\n",
        "token_count": 1109
    },
    "0044e9fc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar (*) [16] fcn.0044e9fc(uchar (*param_1) [16], uint8_t param_2)\n\n{\n    char *pcVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uchar (*pauVar4) [16];\n    uint32_t uVar5;\n    int32_t iVar6;\n    uchar (*pauVar7) [16];\n    char *pcVar8;\n    uint8_t *puVar9;\n    uchar auVar11 [16];\n    uchar auVar13 [16];\n    char cVar16;\n    char cVar17;\n    char cVar18;\n    char cVar19;\n    char cVar20;\n    char cVar21;\n    char cVar22;\n    uchar auVar15 [16];\n    uint8_t *puVar10;\n    uint8_t uVar12;\n    uint8_t uVar14;\n    \n    if (*0x4763a8 != 0) {\n        if (*0x4763a8 < 2) {\n            auVar15 = pshuflw(ZEXT216(CONCAT11(param_2, param_2)), ZEXT216(CONCAT11(param_2, param_2)), 0);\n            uVar3 = -1 << (param_1 & 0xf);\n            pcVar8 = param_1 - (param_1 & 0xf);\n            pauVar7 = NULL;\n            while( true ) {\n                uVar14 = -(pcVar8[0xf] == '\\0');\n                auVar13 = CONCAT115(uVar14, CONCAT114(-(pcVar8[0xe] == '\\0'), \n                                                      CONCAT113(-(pcVar8[0xd] == '\\0'), \n                                                                CONCAT112(-(pcVar8[0xc] == '\\0'), \n                                                                          CONCAT111(-(pcVar8[0xb] == '\\0'), \n                                                                                    CONCAT110(-(pcVar8[10] == '\\0'), \n                                                                                              CONCAT19(-(pcVar8[9] ==\n                                                                                                        '\\0'), CONCAT18(\n                                                            -(pcVar8[8] == '\\0'), \n                                                            CONCAT17(-(pcVar8[7] == '\\0'), \n                                                                     CONCAT16(-(pcVar8[6] == '\\0'), \n                                                                              CONCAT15(-(pcVar8[5] == '\\0'), \n                                                                                       CONCAT14(-(pcVar8[4] == '\\0'), \n                                                                                                CONCAT13(-(pcVar8[3] ==\n                                                                                                          '\\0'), \n                                                            CONCAT12(-(pcVar8[2] == '\\0'), \n                                                                     CONCAT11(-(pcVar8[1] == '\\0'), -(*pcVar8 == '\\0')))\n                                                            )))))))))))));\n                cVar16 = SUB161(auVar15 >> 8, 0);\n                cVar17 = SUB161(auVar15 >> 0x10, 0);\n                cVar18 = SUB161(auVar15 >> 0x18, 0);\n                cVar19 = SUB161(auVar15 >> 0x20, 0);\n                cVar20 = SUB161(auVar15 >> 0x28, 0);\n                cVar21 = SUB161(auVar15 >> 0x30, 0);\n                cVar22 = SUB161(auVar15 >> 0x38, 0);\n                uVar12 = -(pcVar8[0xf] == cVar22);\n                auVar11 = CONCAT115(uVar12, CONCAT114(-(pcVar8[0xe] == cVar21), \n                                                      CONCAT113(-(pcVar8[0xd] == cVar20), \n                                                                CONCAT112(-(pcVar8[0xc] == cVar19), \n                                                                          CONCAT111(-(pcVar8[0xb] == cVar18), \n                                                                                    CONCAT110(-(pcVar8[10] == cVar17), \n                                                                                              CONCAT19(-(pcVar8[9] ==\n                                                                                                        cVar16), \n                                                                                                       CONCAT18(-(pcVar8\n                                                            [8] == SUB161(auVar15, 0)), \n                                                            CONCAT17(-(pcVar8[7] == cVar22), \n                                                                     CONCAT16(-(pcVar8[6] == cVar21), \n                                                                              CONCAT15(-(pcVar8[5] == cVar20), \n                                                                                       CONCAT14(-(pcVar8[4] == cVar19), \n                                                                                                CONCAT13(-(pcVar8[3] ==\n                                                                                                          cVar18), \n                                                                                                         CONCAT12(-(\n                                                            pcVar8[2] == cVar17), \n                                                            CONCAT11(-(pcVar8[1] == cVar16), \n                                                                     -(*pcVar8 == SUB161(auVar15, 0)))))))))))))))));\n                uVar5 = (SUB161(auVar13 >> 7, 0) & 1 | (SUB161(auVar13 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar13 >> 0x17, 0) & 1) << 2 | (SUB161(auVar13 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar13 >> 0x27, 0) & 1) << 4 | (SUB161(auVar13 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar13 >> 0x37, 0) & 1) << 6 | (SUB161(auVar13 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar13 >> 0x47, 0) & 1) << 8 | (SUB161(auVar13 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar13 >> 0x57, 0) & 1) << 10 | (SUB161(auVar13 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar13 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar13 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar13 >> 0x77, 0) & 1) << 0xe | (uVar14 >> 7) << 0xf) & uVar3;\n                if (uVar5 != 0) break;\n                uVar3 = (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf) & uVar3;\n                iVar6 = 0x1f;\n                if (uVar3 != 0) {\n                    for (; uVar3 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                    }\n                }\n                if (uVar3 != 0) {\n                    pauVar7 = pcVar8 + iVar6;\n                }\n                uVar3 = 0xffffffff;\n                pcVar8 = pcVar8 + 0x10;\n            }\n            uVar3 = (uVar5 * 2 & uVar5 * -2) - 1 &\n                    (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf) & uVar3;\n            iVar6 = 0x1f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                }\n            }\n            pauVar4 = pcVar8 + iVar6;\n            if (uVar3 == 0) {\n                pauVar4 = pauVar7;\n            }\n            return pauVar4;\n        }\n        uVar3 = param_2;\n        if (uVar3 == 0) {\n            pcVar8 = param_1 & 0xfffffff0;\n            auVar15 = CONCAT115(-(pcVar8[0xf] == '\\0'), \n                                CONCAT114(-(pcVar8[0xe] == '\\0'), \n                                          CONCAT113(-(pcVar8[0xd] == '\\0'), \n                                                    CONCAT112(-(pcVar8[0xc] == '\\0'), \n                                                              CONCAT111(-(pcVar8[0xb] == '\\0'), \n                                                                        CONCAT110(-(pcVar8[10] == '\\0'), \n                                                                                  CONCAT19(-(pcVar8[9] == '\\0'), \n                                                                                           CONCAT18(-(pcVar8[8] == '\\0')\n                                                                                                    , CONCAT17(-(pcVar8[\n                                                            7] == '\\0'), \n                                                            CONCAT16(-(pcVar8[6] == '\\0'), \n                                                                     CONCAT15(-(pcVar8[5] == '\\0'), \n                                                                              CONCAT14(-(pcVar8[4] == '\\0'), \n                                                                                       CONCAT13(-(pcVar8[3] == '\\0'), \n                                                                                                CONCAT12(-(pcVar8[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(pcVar8[1] == '\\0'), -(*pcVar8 == '\\0'))))))))))))\n                                                            ))));\n            uVar3 = (SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                     (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                     (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                     (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7 |\n                     (SUB161(auVar15 >> 0x47, 0) & 1) << 8 | (SUB161(auVar15 >> 0x4f, 0) & 1) << 9 |\n                     (SUB161(auVar15 >> 0x57, 0) & 1) << 10 | (SUB161(auVar15 >> 0x5f, 0) & 1) << 0xb |\n                     (SUB161(auVar15 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar15 >> 0x6f, 0) & 1) << 0xd |\n                     (SUB161(auVar15 >> 0x77, 0) & 1) << 0xe | (-(pcVar8[0xf] == '\\0') >> 7) << 0xf) &\n                    -1 << (param_1 & 0xf);\n            while (uVar3 == 0) {\n                pcVar1 = pcVar8 + 0x1f;\n                auVar15 = CONCAT115(-(*pcVar1 == '\\0'), \n                                    CONCAT114(-(pcVar8[0x1e] == '\\0'), \n                                              CONCAT113(-(pcVar8[0x1d] == '\\0'), \n                                                        CONCAT112(-(pcVar8[0x1c] == '\\0'), \n                                                                  CONCAT111(-(pcVar8[0x1b] == '\\0'), \n                                                                            CONCAT110(-(pcVar8[0x1a] == '\\0'), \n                                                                                      CONCAT19(-(pcVar8[0x19] == '\\0'), \n                                                                                               CONCAT18(-(pcVar8[0x18]\n                                                                                                         == '\\0'), \n                                                                                                        CONCAT17(-(\n                                                            pcVar8[0x17] == '\\0'), \n                                                            CONCAT16(-(pcVar8[0x16] == '\\0'), \n                                                                     CONCAT15(-(pcVar8[0x15] == '\\0'), \n                                                                              CONCAT14(-(pcVar8[0x14] == '\\0'), \n                                                                                       CONCAT13(-(pcVar8[0x13] == '\\0')\n                                                                                                , CONCAT12(-(pcVar8[0x12\n                                                            ] == '\\0'), \n                                                            CONCAT11(-(pcVar8[0x11] == '\\0'), -(pcVar8[0x10] == '\\0'))))\n                                                            ))))))))))));\n                pcVar8 = pcVar8 + 0x10;\n                uVar3 = SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar15 >> 0x17, 0) & 1) << 2 | (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar15 >> 0x27, 0) & 1) << 4 | (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar15 >> 0x37, 0) & 1) << 6 | (SUB161(auVar15 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar15 >> 0x47, 0) & 1) << 8 | (SUB161(auVar15 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar15 >> 0x57, 0) & 1) << 10 | (SUB161(auVar15 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar15 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar15 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar15 >> 0x77, 0) & 1) << 0xe | (-(*pcVar1 == '\\0') >> 7) << 0xf;\n            }\n            iVar6 = 0;\n            if (uVar3 != 0) {\n                for (; (uVar3 >> iVar6 & 1) == 0; iVar6 = iVar6 + 1) {\n                }\n            }\n            pauVar7 = pcVar8 + iVar6;\n        }\n        else {\n            pauVar7 = NULL;\n            uVar5 = param_1 & 0xf;\n            while (uVar5 != 0) {\n                if ((*param_1)[0] == uVar3) {\n                    pauVar7 = param_1;\n                }\n                if ((*param_1)[0] == 0) {\n                    return pauVar7;\n                }\n                param_1 = *param_1 + 1;\n                uVar5 = param_1 & 0xf;\n            }\n            do {\n                pauVar4 = param_1[1];\n                iVar6 = pcmpistri(ZEXT416(uVar3), *param_1, 0x40);\n                if (0xffffffef < param_1) {\n                    pauVar7 = pauVar4[-1] + iVar6;\n                }\n                param_1 = pauVar4;\n            } while (pauVar4 != NULL);\n        }\n        return pauVar7;\n    }\n    iVar6 = -1;\n    do {\n        pauVar7 = param_1;\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        pauVar7 = *param_1 + 1;\n        puVar2 = *param_1;\n        param_1 = pauVar7;\n    } while (*puVar2 != '\\0');\n    iVar6 = -(iVar6 + 1);\n    puVar10 = pauVar7[-1] + 0xf;\n    do {\n        puVar9 = puVar10;\n        if (iVar6 == 0) break;\n        iVar6 = iVar6 + -1;\n        puVar9 = puVar10 + -1;\n        uVar12 = *puVar10;\n        puVar10 = puVar9;\n    } while (param_2 != uVar12);\n    pauVar7 = puVar9 + 1;\n    if ((*pauVar7)[0] != param_2) {\n        pauVar7 = NULL;\n    }\n    return pauVar7;\n}\n",
        "token_count": 4332
    },
    "004412d7": {
        "rules": [
            "print debug messages"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004412d7(uint *arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(*arg_8h);\n    return;\n}\n",
        "token_count": 42
    },
    "00444c2b": {
        "rules": [
            "set environment variable"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444c2b(uint *arg_8h, uint *arg_ch)\n\n{\n    (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(*arg_8h, *arg_ch);\n    return;\n}\n",
        "token_count": 52
    },
    "0040456b": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040456b(uint ExceptionInfo)\n\n{\n    uint uVar1;\n    \n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(ExceptionInfo);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 101
    },
    "00417e8f": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417e8f(uint uExitCode)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    \n    cVar2 = fcn.00417f28();\n    if (cVar2 != '\\0') {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(uExitCode);\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar3);\n    }\n    fcn.00417f52(uExitCode);\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(uExitCode);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 152
    },
    "0040321a": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040321a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    pcVar1 = fcn.0044a2dd();\n    if (pcVar1 == NULL) {\n        uVar2 = fcn.00402afe(arg_8h, 0);\n        (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(uVar2);\n    }\n    else {\n        (**0x47a000)(arg_8h, arg_ch, arg_10h, arg_14h);\n        (*pcVar1)();\n    }\n    return;\n}\n",
        "token_count": 152
    }
}