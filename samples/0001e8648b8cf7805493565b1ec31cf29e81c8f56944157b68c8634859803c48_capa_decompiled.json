{
    "00401000": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401000(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_5ch;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    // [00] -r-x section size 28672 named .text\n    iVar3 = *0x42a214;\n    if (arg_ch == 0xf) {\n        uVar4 = (*_sym.imp.USER32.dll_BeginPaint)(arg_8h, &var_5ch);\n        var_ch = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &var_1ch);\n        iVar5 = var_10h;\n        pcVar2 = _sym.imp.GDI32.dll_DeleteObject;\n        var_10h = 0;\n        for (; var_18h < iVar5; var_18h = var_18h + 4) {\n            iVar7 = iVar5 - var_18h;\n            var_8h = CONCAT11((*(iVar3 + 0x52) * iVar7 + *(iVar3 + 0x56) * var_18h) / iVar5, \n                              (*(iVar3 + 0x51) * iVar7 + *(iVar3 + 0x55) * var_18h) / iVar5) << 8 |\n                     (*(iVar3 + 0x50) * iVar7 + *(iVar3 + 0x54) * var_18h) / iVar5 & 0xffU;\n            uVar6 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            var_10h = var_10h + 4;\n            (*_sym.imp.USER32.dll_FillRect)(uVar4, &var_1ch, uVar6);\n            (*pcVar2)(uVar6);\n        }\n        if (*(iVar3 + 0x58) != -1) {\n            iVar5 = (*_sym.imp.GDI32.dll_CreateFontIndirectW)(*(iVar3 + 0x34));\n            if (iVar5 != 0) {\n                var_1ch = 0x10;\n                var_18h = 8;\n                (*_sym.imp.GDI32.dll_SetBkMode)(uVar4, 1);\n                (*_sym.imp.GDI32.dll_SetTextColor)(uVar4, *(iVar3 + 0x58));\n                pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n                uVar6 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, iVar5);\n                (*_sym.imp.USER32.dll_DrawTextW)(uVar4, 0x429200, 0xffffffff, &var_1ch, 0x820);\n                (*pcVar1)(uVar4, uVar6);\n                (*pcVar2)(iVar5);\n            }\n        }\n        (*_sym.imp.USER32.dll_EndPaint)(arg_8h, &var_5ch);\n        uVar4 = 0;\n    }\n    else {\n        if (arg_ch == 0x46) {\n            *(arg_14h + 0x18) = *(arg_14h + 0x18) | 0x10;\n            *(arg_14h + 4) = *0x42a208;\n        }\n        uVar4 = (*_sym.imp.USER32.dll_DefWindowProcW)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar4;\n}\n",
        "token_count": 848
    },
    "004067df": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004067df(uint *param_1)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint16_t *puVar11;\n    uint *puVar12;\n    uint *puVar13;\n    bool bVar14;\n    uint var_90h;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    int32_t var_78h;\n    uint32_t var_74h;\n    uint8_t *var_70h;\n    int32_t var_6ch;\n    uint8_t *var_68h;\n    int32_t var_64h;\n    uint32_t var_60h;\n    uint var_5ch;\n    uint16_t *var_58h;\n    uint16_t *var_54h;\n    int32_t var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint32_t dwBytes;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t hMem;\n    \n    puVar12 = param_1;\n    puVar13 = &var_88h;\n    for (iVar8 = 0x22; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar13 = *puVar12;\n        puVar12 = puVar12 + 1;\n        puVar13 = puVar13 + 1;\n    }\n    uVar9 = var_44h;\n    puVar11 = var_54h;\n    if (var_30h == -1) {\n        return 1;\n    }\ncode_r0x00406812:\n    do {\n        uVar5 = var_20h;\n        uVar7 = var_2ch;\n        puVar4 = var_68h;\n        puVar3 = var_70h;\n        if (0x1c < var_88h) {\n            return 0xffffffff;\n        }\n    // switch table (29 cases) at 0x407231\n        switch(*(var_88h * 4 + 0x407231)) {\n        case 0x406828:\n            if (var_6ch == 0) goto code_r0x00407214;\n            var_6ch = var_6ch + -1;\n            var_70h = var_70h + 1;\n            uVar1 = *puVar3;\n            if (0xe1 < uVar1) {\n                return 0xffffffff;\n            }\n            var_3ch = (uVar1 % 0x2d) % 9;\n            var_1ch = (1 << uVar1 / 0x2d) - 1;\n            var_18h = (1 << (uVar1 % 0x2d) / 9) - 1;\n            iVar10 = (0x300 << var_3ch + uVar1 / 0x2d) + 0x736;\n            iVar8 = iVar10 * 2;\n            if (iVar8 != var_78h) {\n                if (hMem != 0) {\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(hMem);\n                }\n                hMem = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iVar8);\n                if (hMem == 0) {\n                    return 0xffffffff;\n                }\n                var_78h = iVar8;\n            }\n            while (iVar10 != 0) {\n                iVar10 = iVar10 + -1;\n                *(hMem + iVar10 * 2) = 0x400;\n            }\n            dwBytes = 0;\n            for (var_48h = 0; var_48h < 4; var_48h = var_48h + 1) {\ncode_r0x004068cd:\n                if (var_6ch == 0) {\n                    var_88h = 1;\n                    goto code_r0x00407214;\n                }\n                var_6ch = var_6ch + -1;\n                dwBytes = dwBytes | *var_70h << (var_48h << 3 & 0x1f);\n                var_70h = var_70h + 1;\n            }\n            if (dwBytes != var_74h) {\n                var_74h = dwBytes;\n                if (var_8h != 0) {\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(var_8h);\n                }\n                var_8h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n                if (var_8h == 0) {\n                    return 0xffffffff;\n                }\n            }\n            var_48h = 5;\n            *(var_8h + -1 + var_74h) = 0;\n            while (uVar7 = var_48h,  var_48h = var_48h - 1,  uVar7 != 0) {\ncode_r0x0040693d:\n                if (var_6ch == 0) {\n                    var_88h = 3;\n                    goto code_r0x00407214;\n                }\n                var_6ch = var_6ch + -1;\n                uVar1 = *var_70h;\n                var_70h = var_70h + 1;\n                var_ch = var_ch << 8 | uVar1;\n            }\n        case 0x406968:\n            var_84h = 6;\n            var_4ch = var_60h & var_1ch;\n            puVar11 = hMem + (var_38h * 0x10 + (var_60h & var_1ch)) * 2;\n            break;\n        case 0x4068cd:\n            goto code_r0x004068cd;\n        case 0x40693d:\n            goto code_r0x0040693d;\n        case 0x40698e:\n            if (dwBytes != 0) {\n                var_34h = 1;\n                var_84h = 7;\n                puVar11 = hMem + 0x180 + var_38h * 2;\n                break;\n            }\n            var_58h = ((var_5ch >> (8 - var_3ch & 0x1f)) + ((var_60h & var_18h) << (var_3ch & 0x1f))) * 0x600 + 0xe6c +\n                      hMem;\n            if (var_38h < 4) {\n                var_38h = 0;\n            }\n            else if (var_38h < 10) {\n                var_38h = var_38h + -3;\n            }\n            else {\n                var_38h = var_38h + -6;\n            }\n            if (var_34h != 0) {\n                uVar7 = var_14h - var_2ch;\n                if (var_74h <= uVar7) {\n                    uVar7 = uVar7 + var_74h;\n                }\n                uVar9 = 1;\n                var_5ch._1_1_ = *(uVar7 + var_8h);\n                do {\n                    uVar1 = var_5ch._1_1_;\n                    var_5ch._1_1_ = var_5ch._1_1_ << 1;\n                    var_48h = uVar1 >> 7;\n                    puVar11 = var_58h + ((uVar1 >> 7) + 1) * 0x100 + uVar9;\n                    uVar2 = *puVar11;\n                    var_54h = puVar11;\n                    uVar7 = (var_10h >> 0xb) * uVar2;\n                    bVar14 = uVar7 <= var_ch;\n                    if (bVar14) {\n                        var_10h = var_10h - uVar7;\n                        var_ch = var_ch - uVar7;\n                        dwBytes = 1;\n                        uVar9 = uVar9 * 2 + 1;\n                        *puVar11 = uVar2 - (uVar2 >> 5);\n                    }\n                    else {\n                        dwBytes = 0;\n                        var_10h = uVar7;\n                        uVar9 = uVar9 * 2;\n                        *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                    }\n                    dwBytes = bVar14;\n                    var_44h = uVar9;\n                    if (var_10h < 0x1000000) {\ncode_r0x00406a27:\n                        if (var_6ch == 0) {\n                            var_88h = 0xd;\n                            goto code_r0x00407214;\n                        }\n                        var_10h = var_10h << 8;\n                        uVar1 = *var_70h;\n                        var_6ch = var_6ch + -1;\n                        var_70h = var_70h + 1;\n                        var_ch = var_ch << 8 | uVar1;\n                    }\n                    if (var_48h != dwBytes) goto code_r0x00406b05;\n                } while (uVar9 < 0x100);\n                goto code_r0x00406b69;\n            }\n            uVar9 = 1;\n            do {\n                puVar11 = var_58h + uVar9;\n                uVar2 = *puVar11;\n                var_54h = puVar11;\n                uVar7 = (var_10h >> 0xb) * uVar2;\n                if (var_ch < uVar7) {\n                    var_10h = uVar7;\n                    uVar9 = uVar9 * 2;\n                    *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_10h = var_10h - uVar7;\n                    var_ch = var_ch - uVar7;\n                    uVar9 = uVar9 * 2 + 1;\n                    *puVar11 = uVar2 - (uVar2 >> 5);\n                }\n                var_44h = uVar9;\n                if (var_10h < 0x1000000) {\ncode_r0x00406ba4:\n                    if (var_6ch == 0) {\n                        var_88h = 0xf;\n                        goto code_r0x00407214;\n                    }\n                    var_10h = var_10h << 8;\n                    uVar1 = *var_70h;\n                    var_6ch = var_6ch + -1;\n                    var_70h = var_70h + 1;\n                    var_ch = var_ch << 8 | uVar1;\n                }\n            } while (uVar9 < 0x100);\n            goto code_r0x00406b6d;\n        case 0x406a27:\n            goto code_r0x00406a27;\n        case 0x406ae0:\n            goto code_r0x00406ae0;\n        case 0x406b73:\n            goto code_r0x00406b73;\n        case 0x406ba4:\n            goto code_r0x00406ba4;\n        case 0x406c2d:\n            if (dwBytes != 1) {\n                var_80h = 0x16;\n                var_20h = var_24h;\n                var_24h = var_28h;\n                var_28h = var_2ch;\n                var_38h = ((6 < var_38h) - 1 & 0xfffffffd) + 10;\n                var_58h = hMem + 0x664;\n                goto code_r0x00406c85;\n            }\n            var_84h = 8;\n            puVar11 = hMem + 0x198 + var_38h * 2;\n            break;\n        case 0x406c97:\n            if (dwBytes == 0) {\n                var_84h = 9;\n                puVar11 = hMem + ((var_38h + 0xf) * 0x10 + var_4ch) * 2;\n            }\n            else {\n                var_84h = 10;\n                puVar11 = hMem + 0x1b0 + var_38h * 2;\n            }\n            break;\n        case 0x406cda:\n            if (dwBytes != 0) goto code_r0x00406d95;\n            if (var_60h == 0) {\n                return 0xffffffff;\n            }\n            var_38h = (6 < var_38h) * 2 + 9;\n        case 0x406cfe:\n            if (var_64h == 0) {\n                var_88h = 0x1b;\n                goto code_r0x00407214;\n            }\n            uVar7 = var_14h - var_2ch;\n            if (var_74h <= uVar7) {\n                uVar7 = uVar7 + var_74h;\n            }\n            var_5ch._0_1_ = *(uVar7 + var_8h);\n            *(var_14h + var_8h) = var_5ch;\n            var_60h = var_60h + 1;\n            var_68h = var_68h + 1;\n            var_64h = var_64h + -1;\n            *puVar4 = var_5ch;\n            goto code_r0x00406d39;\n        case 0x406d4b:\n            if (dwBytes == 0) goto code_r0x00406d8c;\n            var_84h = 0xb;\n            puVar11 = hMem + 0x1c8 + var_38h * 2;\n            break;\n        case 0x406d72:\n            uVar6 = var_24h;\n            if (dwBytes != 0) {\n                var_20h = var_24h;\n                uVar6 = uVar5;\n            }\n            var_24h = var_28h;\n            var_28h = uVar6;\ncode_r0x00406d8c:\n            var_2ch = var_28h;\n            var_28h = uVar7;\ncode_r0x00406d95:\n            var_80h = 0x15;\n            var_58h = hMem + 0xa68;\n        case 0x406c85:\ncode_r0x00406c85:\n            var_84h = 0x12;\n            puVar11 = var_58h;\n            break;\n        case 0x406dac:\n            var_38h = ((6 < var_38h) - 1 & 0xfffffffd) + 0xb;\n            goto code_r0x00406f5d;\n        case 0x406dc3:\n            iVar8 = var_30h;\n            if (3 < var_30h) {\n                iVar8 = 3;\n            }\n            dwBytes = 6;\n            var_7ch = 0x19;\n            var_58h = iVar8 * 0x80 + 0x360 + hMem;\n            goto code_r0x004070bf;\n        case 0x406df1:\n            var_2ch = uVar9;\n            if (3 < uVar9) {\n                iVar8 = uVar9 >> 1;\n                dwBytes = iVar8 - 1;\n                uVar7 = (uVar9 & 1 | 2) << (dwBytes & 0x1f);\n                var_2ch = uVar7;\n                if (0xd < uVar9) {\n                    uVar9 = 0;\n                    var_48h = iVar8 - 5;\n                    goto code_r0x00406e5d;\n                }\n                var_58h = hMem + 0x55e + (uVar7 - uVar9) * 2;\ncode_r0x00406ea1:\n                uVar9 = 0;\n                var_50h = 1;\n                var_44h = 0;\n                for (var_48h = 0; var_48h < dwBytes; var_48h = var_48h + 1) {\n                    puVar11 = var_58h + var_50h;\n                    var_54h = puVar11;\n                    uVar2 = *puVar11;\n                    uVar7 = (var_10h >> 0xb) * uVar2;\n                    if (var_ch < uVar7) {\n                        var_10h = uVar7;\n                        var_50h = var_50h << 1;\n                        *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                    }\n                    else {\n                        var_10h = var_10h - uVar7;\n                        var_ch = var_ch - uVar7;\n                        uVar9 = var_44h | 1 << (var_48h & 0x1f);\n                        var_44h = uVar9;\n                        *puVar11 = uVar2 - (uVar2 >> 5);\n                        var_50h = var_50h * 2 + 1;\n                    }\n                    if (var_10h < 0x1000000) {\ncode_r0x00406eb5:\n                        if (var_6ch == 0) {\n                            var_88h = 0x10;\n                            goto code_r0x00407214;\n                        }\n                        var_10h = var_10h << 8;\n                        uVar1 = *var_70h;\n                        var_6ch = var_6ch + -1;\n                        var_70h = var_70h + 1;\n                        var_ch = var_ch << 8 | uVar1;\n                    }\n                }\n                var_2ch = var_2ch + uVar9;\n            }\n            var_2ch = var_2ch + 1;\ncode_r0x00406f5d:\n            if (var_2ch == 0) {\n                var_30h = 0xffffffff;\n                goto code_r0x00407214;\n            }\n            if (var_60h < var_2ch) {\n                return 0xffffffff;\n            }\n            var_30h = var_30h + 2;\n            var_60h = var_60h + var_30h;\ncode_r0x00406f7b:\n            do {\n                puVar3 = var_68h;\n                if (var_64h == 0) {\n                    var_88h = 0x1c;\n                    goto code_r0x00407214;\n                }\n                uVar7 = var_14h - var_2ch;\n                if (var_74h <= uVar7) {\n                    uVar7 = uVar7 + var_74h;\n                }\n                var_5ch._0_1_ = *(uVar7 + var_8h);\n                *(var_14h + var_8h) = var_5ch;\n                var_68h = var_68h + 1;\n                var_64h = var_64h + -1;\n                var_30h = var_30h + -1;\n                *puVar3 = var_5ch;\n                var_14h = (var_14h + 1) % var_74h;\n            } while (0 < var_30h);\n            goto code_r0x00406d3c;\n        case 0x406e32:\n            while (var_6ch != 0) {\n                var_10h = var_10h << 8;\n                uVar1 = *var_70h;\n                var_6ch = var_6ch + -1;\n                var_70h = var_70h + 1;\n                var_ch = var_ch << 8 | uVar1;\n                uVar7 = var_2ch;\n                do {\n                    var_48h = var_48h - 1;\ncode_r0x00406e5d:\n                    if (var_48h < 1) {\n                        dwBytes = 4;\n                        var_2ch = uVar7 + uVar9 * 0x10;\n                        var_58h = hMem + 0x644;\n                        goto code_r0x00406ea1;\n                    }\n                    uVar9 = uVar9 * 2;\n                    var_10h = var_10h >> 1;\n                    var_44h = uVar9;\n                    if (var_10h <= var_ch) {\n                        var_ch = var_ch - var_10h;\n                        uVar9 = uVar9 | 1;\n                        var_44h = uVar9;\n                    }\n                } while (0xffffff < var_10h);\n            }\n            var_88h = 0xc;\n            goto code_r0x00407214;\n        case 0x406eb5:\n            goto code_r0x00406eb5;\n        case 0x406f7b:\n            goto code_r0x00406f7b;\n        case 0x406fc4:\n            if (dwBytes == 0) {\n                var_30h = 0;\n                iVar8 = var_4ch * 8 + 2;\ncode_r0x00406fdb:\n                var_58h = var_58h + iVar8;\n                dwBytes = 3;\n                goto code_r0x004070b8;\n            }\n            var_84h = 0x13;\n            puVar11 = var_58h + 1;\n            break;\n        case 0x406ffd:\n            goto code_r0x00406ffd;\n        case 0x40704b:\n            goto code_r0x0040704b;\n        case 0x407081:\n            if (dwBytes == 0) {\n                var_30h = 8;\n                iVar8 = var_4ch * 8 + 0x82;\n                goto code_r0x00406fdb;\n            }\n            var_58h = var_58h + 0x102;\n            var_30h = 0x10;\n            dwBytes = 8;\ncode_r0x004070b8:\n            var_7ch = 0x14;\n        case 0x4070bf:\ncode_r0x004070bf:\n            var_50h = 1;\n            for (var_48h = dwBytes; 0 < var_48h; var_48h = var_48h - 1) {\n                puVar11 = var_58h + var_50h;\n                var_54h = puVar11;\n                uVar2 = *puVar11;\n                uVar9 = (var_10h >> 0xb) * uVar2;\n                if (var_ch < uVar9) {\n                    var_10h = uVar9;\n                    var_50h = var_50h << 1;\n                    *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    var_10h = var_10h - uVar9;\n                    var_ch = var_ch - uVar9;\n                    *puVar11 = uVar2 - (uVar2 >> 5);\n                    var_50h = var_50h * 2 + 1;\n                }\n                if (var_10h < 0x1000000) {\ncode_r0x004070ce:\n                    if (var_6ch == 0) {\n                        var_88h = 0x18;\n                        goto code_r0x00407214;\n                    }\n                    var_10h = var_10h << 8;\n                    uVar1 = *var_70h;\n                    var_6ch = var_6ch + -1;\n                    var_70h = var_70h + 1;\n                    var_ch = var_ch << 8 | uVar1;\n                }\n            }\n            uVar9 = var_50h - (1 << (dwBytes & 0x1f));\n            var_44h = uVar9;\n            var_88h = var_7ch;\n            goto code_r0x00407076;\n        case 0x4070ce:\n            goto code_r0x004070ce;\n        case 0x407172:\n            var_30h = var_30h + uVar9;\n            var_88h = var_80h;\n            goto code_r0x00407076;\n        }\n        var_54h = puVar11;\ncode_r0x00406ffd:\n        uVar2 = *puVar11;\n        uVar7 = (var_10h >> 0xb) * uVar2;\n        bVar14 = uVar7 <= var_ch;\n        if (bVar14) {\n            var_10h = var_10h - uVar7;\n            var_ch = var_ch - uVar7;\n            dwBytes = 1;\n            *puVar11 = uVar2 - (uVar2 >> 5);\n        }\n        else {\n            var_10h = uVar7;\n            dwBytes = 0;\n            *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n        }\n        dwBytes = bVar14;\n        var_88h = var_84h;\n        if (var_10h < 0x1000000) {\ncode_r0x0040704b:\n            if (var_6ch == 0) {\n                var_88h = 5;\n                goto code_r0x00407214;\n            }\n            var_10h = var_10h << 8;\n            uVar1 = *var_70h;\n            var_6ch = var_6ch + -1;\n            var_70h = var_70h + 1;\n            var_ch = var_ch << 8 | uVar1;\n            var_88h = var_84h;\n        }\ncode_r0x00407076:\n    } while( true );\ncode_r0x00406b05:\n    if (uVar9 < 0x100) {\n        puVar11 = var_58h + uVar9;\n        uVar2 = *puVar11;\n        var_54h = puVar11;\n        uVar7 = (var_10h >> 0xb) * uVar2;\n        if (var_ch < uVar7) {\n            var_10h = uVar7;\n            uVar9 = uVar9 * 2;\n            *puVar11 = (0x800 - uVar2 >> 5) + uVar2;\n        }\n        else {\n            var_10h = var_10h - uVar7;\n            var_ch = var_ch - uVar7;\n            uVar9 = uVar9 * 2 + 1;\n            *puVar11 = uVar2 - (uVar2 >> 5);\n        }\n        var_44h = uVar9;\n        if (var_10h < 0x1000000) {\ncode_r0x00406ae0:\n            if (var_6ch == 0) {\n                var_88h = 0xe;\n                goto code_r0x00407214;\n            }\n            var_10h = var_10h << 8;\n            uVar1 = *var_70h;\n            var_6ch = var_6ch + -1;\n            var_70h = var_70h + 1;\n            var_ch = var_ch << 8 | uVar1;\n        }\n        goto code_r0x00406b05;\n    }\ncode_r0x00406b69:\n    var_34h = 0;\ncode_r0x00406b6d:\n    var_5ch._0_1_ = var_44h;\ncode_r0x00406b73:\n    if (var_64h == 0) {\n        var_88h = 0x1a;\ncode_r0x00407214:\n        puVar12 = &var_88h;\n        for (iVar8 = 0x22; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *param_1 = *puVar12;\n            puVar12 = puVar12 + 1;\n            param_1 = param_1 + 1;\n        }\n        return 0;\n    }\n    var_60h = var_60h + 1;\n    var_68h = var_68h + 1;\n    var_64h = var_64h + -1;\n    *puVar4 = var_5ch;\n    *(var_14h + var_8h) = var_5ch;\ncode_r0x00406d39:\n    var_14h = (var_14h + 1) % var_74h;\ncode_r0x00406d3c:\n    var_88h = 2;\n    goto code_r0x00406812;\n}\n",
        "token_count": 6608
    },
    "00401434": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00401434(int32_t **hWndChildAfter)\n\n{\n    uint32_t *puVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint uVar10;\n    code *pcVar11;\n    int32_t *arg_10h;\n    int32_t iVar12;\n    int32_t extraout_EDX;\n    uint uVar13;\n    int32_t **ppiVar14;\n    int16_t *piVar15;\n    int32_t **ppiVar16;\n    int32_t **ppiVar17;\n    bool bVar18;\n    ulong uVar19;\n    ulong uVar20;\n    uint in_stack_fffffcc0;\n    uint in_stack_fffffcc4;\n    uint uVar21;\n    uint lpFindFileData;\n    uint var_2a8h;\n    uint var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    uint32_t var_78h;\n    uint var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint32_t lpFileOp;\n    uint var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    uint lpRect;\n    uint var_50h;\n    uint lpKeyName;\n    int16_t *lDistanceToMove;\n    uint32_t var_44h;\n    int32_t lpValueName;\n    code *lpNumberOfBytesRead;\n    int32_t var_34h;\n    int32_t *lpdwResult;\n    int32_t *var_2ch;\n    uint32_t var_28h;\n    uint32_t dwFileAttributes;\n    uint32_t var_20h;\n    uint32_t nNumberOfBytesToRead;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    code *hWndParent;\n    int16_t *lpBuffer;\n    uint32_t lpString2;\n    uint32_t var_4h;\n    \n    ppiVar16 = *0x40ce08;\n    pcVar11 = _sym.imp.USER32.dll_ShowWindow;\n    ppiVar14 = hWndChildAfter;\n    ppiVar17 = &var_2ch;\n    for (iVar12 = 7; iVar12 != 0; iVar12 = iVar12 + -1) {\n        *ppiVar17 = *ppiVar14;\n        ppiVar14 = ppiVar14 + 1;\n        ppiVar17 = ppiVar17 + 1;\n    }\n    lpString2 = *0x42a208;\n    uVar13 = 0;\n    lpBuffer = dwFileAttributes * 0x800 + 0x42b000;\n    *0x40ce04 = &var_28h;\n    iVar12 = var_28h * 0x800;\n    piVar15 = iVar12 + 0x42b000;\n    var_4h = 0;\n    if (0x43 < var_2ch - 2U) goto code_r0x00402ac5;\n    // switch table (68 cases) at 0x402ad7\n    switch(*((var_2ch - 2U) * 4 + 0x402ad7)) {\n    case 0x401491:\ncode_r0x00401493:\n        fcn.004052ec(in_stack_fffffcc0, in_stack_fffffcc4);\n        return 0x7fffffff;\n    case 0x40149d:\n        *0x4291cc = *0x4291cc + 1;\n        if (*0x42a208 == 0) {\n            return 0x7fffffff;\n        }\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        return 0x7fffffff;\n    case 0x4014b8:\n        iVar12 = fcn.0040136d(var_28h);\n        uVar8 = fcn.00401389(iVar12 + -1, 0);\n        return uVar8;\n    case 0x4014cb:\n        fcn.004052ec(var_28h, 0);\n        break;\n    case 0x4014d7:\n        uVar20 = fcn.00402c1f(0);\n        iVar12 = uVar20;\n        lpKeyName._0_2_ = uVar20 >> 0x20;\n        lpKeyName._2_2_ = uVar20 >> 0x30;\n        if (iVar12 < 2) {\n            iVar12 = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(iVar12);\n        break;\n    case 0x4014f5:\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(*0x42a208);\n        break;\n    case 0x401503:\n        iVar12 = var_28h * 4;\n        if (var_20h == 0) {\n            *(iVar12 + 0x42a2e0) = *(iVar12 + 0x42a2a0);\n            uVar13 = fcn.00402c1f(1);\n            *(var_28h * 4 + 0x42a2a0) = uVar13;\n        }\n        else {\n            *(iVar12 + 0x42a2a0) = *(iVar12 + 0x42a2e0);\n        }\n        break;\n    case 0x401542:\n        puVar1 = var_20h * 4 + 0x42a2a0;\n        uVar8 = *puVar1;\n        uVar3 = (&var_28h)[uVar8 == 0];\n        *puVar1 = uVar8 & nNumberOfBytesToRead;\n        return uVar3;\n    case 0x401563:\n        goto code_r0x00402a6b;\n    case 0x401573:\n        if (*0x4291d0 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x4291d0, dwFileAttributes);\n        }\n        if (*0x4291e4 != 0) {\n            (*pcVar11)(*0x4291e4, var_28h);\n        }\n        break;\n    case 0x4015a3:\n        uVar13 = fcn.00402c41(0xfffffff0);\n        iVar12 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(uVar13, dwFileAttributes);\n        goto code_r0x004015b4;\n    case 0x4015c1:\n        hWndChildAfter = fcn.00402c41(0xfffffff0);\n        piVar15 = fcn.00405c04(hWndChildAfter);\n        if (piVar15 != NULL) {\n            do {\n                piVar15 = fcn.00405b86(piVar15, 0x5c);\n                iVar2 = *piVar15;\n                *piVar15 = 0;\n                if (((iVar2 == 0) && (var_20h != 0)) && (iVar12 = fcn.00405855(),  iVar12 != 0)) {\n                    iVar12 = fcn.004057bb(hWndChildAfter);\n                }\n                else {\n                    iVar12 = fcn.00405838(hWndChildAfter);\n                }\n                if ((iVar12 != 0) &&\n                   ((iVar12 != 0xb7 ||\n                    (uVar8 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(hWndChildAfter),  (uVar8 & 0x10) == 0)))) {\n                    var_4h = var_4h + 1;\n                }\n                *piVar15 = iVar2;\n                piVar15 = piVar15 + 1;\n            } while (iVar2 != 0);\n        }\n        if (dwFileAttributes == 0) goto code_r0x0040224b;\n        fcn.00401423(0xffffffe6);\n        fcn.00406284(0x436000, hWndChildAfter);\n        iVar12 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(hWndChildAfter);\n        if (iVar12 == 0) {\n            var_4h = var_4h + 1;\n        }\n        break;\n    case 0x40166a:\n        uVar13 = fcn.00402c41(0);\n        iVar12 = fcn.004065c7(uVar13);\n        nNumberOfBytesToRead = dwFileAttributes;\n        goto joined_r0x00401a1e;\n    case 0x40167b:\n        uVar13 = fcn.00402c41(0xffffffd0);\n        uVar10 = fcn.00402c41(0xffffffdf);\n        fcn.00402c41(0x13);\n        iVar12 = (*_sym.imp.KERNEL32.dll_MoveFileW)(uVar13, uVar10);\n        if (iVar12 == 0) {\n            if ((var_20h == 0) || (iVar12 = fcn.004065c7(uVar13),  iVar12 == 0)) goto code_r0x0040288b;\n            fcn.0040604a(uVar13, uVar10);\n        }\n        goto code_r0x0040224b;\n    case 0x4016cc:\n        ppiVar16 = fcn.00402c41(0);\n        piVar15 = lpBuffer;\n        iVar12 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(ppiVar16, 0x400, lpBuffer, &hWndChildAfter);\n        if (iVar12 == 0) {\ncode_r0x00401710:\n            var_4h = 1;\n            *piVar15 = 0;\n        }\n        else if ((ppiVar16 < hWndChildAfter) && (*hWndChildAfter != 0)) {\n            iVar12 = fcn.004065c7(ppiVar16);\n            if (iVar12 == 0) goto code_r0x00401710;\n            fcn.00406284(hWndChildAfter, iVar12 + 0x2c);\n        }\n        if (var_20h == 0) {\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameW)(piVar15, piVar15, 0x400);\n        }\n        break;\n    case 0x401735:\n        uVar13 = fcn.00402c41(0xffffffff);\n        iVar12 = (*_sym.imp.KERNEL32.dll_SearchPathW)(0, uVar13, 0, 0x400, piVar15, &hWndChildAfter);\n        bVar18 = iVar12 == 0;\n        goto code_r0x00401751;\n    case 0x40175c:\n        uVar13 = fcn.00402c41(0xffffffef);\n        iVar12 = fcn.00405da9(piVar15, uVar13);\n        goto code_r0x004015b4;\n    case 0x40176f:\n        lpString2 = fcn.00402c41(0x31);\n        hWndChildAfter = var_28h & 7;\n        iVar12 = fcn.00405bd0(lpString2);\n        if (iVar12 == 0) {\n            uVar10 = 0x436000;\n            uVar13 = fcn.00406284(0x40a5a8, 0x436000, lpString2);\n            uVar13 = fcn.00405b59(uVar13);\n            sub.KERNEL32.dll_lstrcatW(uVar13);\n        }\n        else {\n            uVar10 = 0x40a5a8;\n            fcn.00406284(0x40a5a8);\n        }\n        fcn.00406518(0x40a5a8);\n        do {\n            if (2 < hWndChildAfter) {\n                iVar12 = fcn.004065c7(0x40a5a8);\n                uVar8 = 0;\n                if (iVar12 != 0) {\n                    uVar8 = (*_sym.imp.KERNEL32.dll_CompareFileTime)(iVar12 + 0x14, &nNumberOfBytesToRead);\n                }\n                hWndChildAfter = ((hWndChildAfter - 3U | 0x80000000) & uVar8) == 0;\n            }\n            if (hWndChildAfter == NULL) {\n                fcn.00405d55(0x40a5a8);\n            }\n            lpdwResult = fcn.00405d7a(0x40a5a8, 0x40000000, (hWndChildAfter != 0x1) + '\\x01');\n            if (lpdwResult != 0xffffffff) {\n                fcn.004052ec(0xffffffea, lpString2);\n                *0x42a2d4 = *0x42a2d4 + 1;\n                iVar12 = fcn.00403116(var_20h, lpdwResult, 0, 0);\n                *0x42a2d4 = *0x42a2d4 + -1;\n                if ((nNumberOfBytesToRead != 0xffffffff) || (var_18h != 0xffffffff)) {\n                    (*_sym.imp.KERNEL32.dll_SetFileTime)(lpdwResult, &nNumberOfBytesToRead, 0, &nNumberOfBytesToRead);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(lpdwResult);\n                if (-1 < iVar12) goto code_r0x00402ac5;\n                if (iVar12 == -2) {\n                    uVar7 = 0xffffffe9;\n                    fcn.004062a6(0x40a5a8, 0xffffffe9);\n                    uVar21 = 0x40a5a8;\n                    sub.KERNEL32.dll_lstrcatW(uVar10, lpString2, 0x40a5a8);\n                }\n                else {\n                    uVar7 = 0xffffffee;\n                    uVar21 = 0x40a5a8;\n                    fcn.004062a6(0x40a5a8, 0xffffffee);\n                }\n                uVar10 = 0x200010;\n                uVar13 = 0x40a5a8;\n                goto code_r0x004022f2;\n            }\n            if (hWndChildAfter != NULL) {\n                fcn.004052ec(0xffffffe2, lpString2);\n                bVar18 = hWndChildAfter == 0x2;\n                goto code_r0x004015b6;\n            }\n            fcn.00406284(0x40b5a8, 0x42b000);\n            fcn.00406284(0x42b000, 0x40a5a8);\n            fcn.004062a6(0x40ada8, var_14h);\n            fcn.00406284(0x42b000, 0x40b5a8);\n            iVar12 = fcn.004058ea();\n        } while (iVar12 == 4);\n        if (iVar12 != 5) {\n            in_stack_fffffcc4 = 0x40a5a8;\n            in_stack_fffffcc0 = 0xfffffffa;\n            goto code_r0x00401493;\n        }\n        *0x42a2a8 = *0x42a2a8 + 1;\n        goto code_r0x00402ace;\n    case 0x40190c:\n        uVar13 = 0;\n        goto code_r0x00401943;\n    case 0x40190f:\n        uVar13 = fcn.00402c41(0x31);\n        uVar8 = fcn.004058ea(uVar13, var_28h);\n        if (uVar8 == 0) goto code_r0x0040288b;\n        if (uVar8 == var_20h) {\n            return nNumberOfBytesToRead;\n        }\n        if (uVar8 == var_18h) {\n            return var_14h;\n        }\n        break;\n    case 0x401941:\n        uVar13 = 0xfffffff0;\ncode_r0x00401943:\n        uVar13 = fcn.00402c41(uVar13);\n        fcn.00405996(uVar13, dwFileAttributes);\n        break;\n    case 0x401956:\n        uVar13 = fcn.00402c41(1);\n        sub.KERNEL32.dll_lstrlenW(uVar13);\n        goto code_r0x00402a6b;\n    case 0x401968:\n        uVar20 = fcn.00402c1f(2);\n        var_50h._0_2_ = uVar20;\n        var_50h._2_2_ = uVar20 >> 0x10;\n        lpKeyName._0_2_ = uVar20 >> 0x20;\n        lpKeyName._2_2_ = uVar20 >> 0x30;\n        _var_34h = fcn.00402c1f(3);\n        iVar12 = _var_34h;\n        hWndChildAfter = CONCAT22(var_50h._2_2_, var_50h);\n        lpValueName = fcn.00402c41(1);\n        iVar9 = sub.KERNEL32.dll_lstrlenW(lpValueName);\n        *piVar15 = 0;\n        if (CONCAT22(lpKeyName._2_2_, lpKeyName) == 0) {\n            hWndChildAfter = iVar9;\n        }\n        if ((hWndChildAfter != NULL) && ((-1 < var_34h || (iVar12 = iVar9 + var_34h,  -1 < iVar12)))) {\n            if (iVar9 < iVar12) {\n                iVar12 = iVar9;\n            }\n            fcn.00406284(piVar15, lpValueName + iVar12 * 2);\n            if (hWndChildAfter < 0) {\n                iVar12 = sub.KERNEL32.dll_lstrlenW(piVar15);\n                hWndChildAfter = hWndChildAfter + iVar12;\n                if (hWndChildAfter < 0) {\n                    hWndChildAfter = NULL;\n                }\n            }\n            if (hWndChildAfter < 0x400) {\n                piVar15[hWndChildAfter] = 0;\n            }\n        }\n        break;\n    case 0x4019ff:\n        uVar13 = fcn.00402c41(0x20);\n        uVar10 = fcn.00402c41(0x31);\n        if (var_18h == 0) {\n            iVar12 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n        }\n        else {\n            iVar12 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(uVar13, uVar10);\n        }\n        goto joined_r0x00401a1e;\n    case 0x401a30:\n        hWndChildAfter = fcn.00402c41(1);\n        iVar9 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(hWndChildAfter, piVar15, 0x400);\n        if ((iVar9 == 0) ||\n           ((var_20h != 0 && (iVar9 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(hWndChildAfter, piVar15),  iVar9 == 0)))) {\n            var_4h = 1;\n            *piVar15 = 0;\n        }\n        *(iVar12 + 0x42b7fe) = 0;\n        break;\n    case 0x401a72:\n        uVar20 = fcn.00402c1f(0);\n        uVar8 = uVar20;\n        lpKeyName._0_2_ = uVar20 >> 0x20;\n        lpKeyName._2_2_ = uVar20 >> 0x30;\n        uVar3 = fcn.00402c1f(1);\n        if (var_14h != 0) {\n            if (uVar8 < uVar3) {\n                return nNumberOfBytesToRead;\n            }\n            if (uVar8 <= uVar3) {\n                return var_20h;\n            }\n            return var_18h;\n        }\n        if (uVar8 < uVar3) {\n            return nNumberOfBytesToRead;\n        }\n        if (uVar8 <= uVar3) {\n            return var_20h;\n        }\n        return var_18h;\n    case 0x401ab2:\n        uVar20 = fcn.00402c1f(1);\n        hWndChildAfter = uVar20;\n        lpKeyName._0_2_ = uVar20 >> 0x20;\n        lpKeyName._2_2_ = uVar20 >> 0x30;\n        uVar20 = fcn.00402c1f(2);\n        lpKeyName._0_2_ = uVar20 >> 0x20;\n        lpKeyName._2_2_ = uVar20 >> 0x30;\n        if (0xd < nNumberOfBytesToRead) goto code_r0x00402a6b;\n    // switch table (14 cases) at 0x402be7\n        switch(*(nNumberOfBytesToRead * 4 + 0x402be7)) {\n        case 0x401ade:\n            break;\n        case 0x401ae2:\n            break;\n        case 0x401ae6:\n            break;\n        case 0x401aeb:\n            goto joined_r0x00401b28;\n        case 0x401af8:\n            break;\n        case 0x401afc:\n            break;\n        case 0x401b00:\n            break;\n        case 0x401b06:\n            break;\n        case 0x401b0f:\n            break;\n        case 0x401b19:\n            break;\n        case 0x401b26:\njoined_r0x00401b28:\n            if (uVar20 == 0) {\n                var_4h = 1;\n            }\n            break;\n        case 0x401b3e:\n            break;\n        case 0x401b42:\n            break;\n        case 0x401b46:\n        }\n        goto code_r0x00402a6b;\n    case 0x401b53:\n        uVar13 = fcn.00402c41(1);\n        uVar20 = fcn.00402c1f(2);\n        lpKeyName._0_2_ = uVar20 >> 0x20;\n        lpKeyName._2_2_ = uVar20 >> 0x30;\n        (*_sym.imp.USER32.dll_wsprintfW)(piVar15, uVar13, uVar20);\n        break;\n    case 0x401b77:\n        ppiVar14 = *0x40ce08;\n        if (var_20h == 0) {\n            if (dwFileAttributes != 0) {\n                if (*0x40ce08 != NULL) {\n                    fcn.00406284(piVar15, *0x40ce08 + 1);\n                    *0x40ce08 = *ppiVar16;\n                    goto code_r0x00401be7;\n                }\n                goto code_r0x0040288b;\n            }\n            ppiVar16 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x804);\n            fcn.004062a6(ppiVar16 + 1, var_28h);\n            *ppiVar16 = *0x40ce08;\n            *0x40ce08 = ppiVar16;\n        }\n        else {\n            do {\n                var_20h = var_20h - 1;\n                if (ppiVar14 == NULL) goto code_r0x004022e4;\n                ppiVar14 = *ppiVar14;\n            } while (var_20h != 0);\n            if (ppiVar14 == NULL) goto code_r0x004022e4;\n            ppiVar14 = ppiVar14 + 1;\n            piVar15 = 0x40a5a8;\n            ppiVar16 = ppiVar14;\n            fcn.00406284(0x40a5a8, ppiVar14);\n            fcn.00406284(ppiVar14, *0x40ce08 + 1);\ncode_r0x004029e1:\n            fcn.00406284(piVar15, ppiVar16);\n        }\n        break;\n    case 0x401c1f:\n        uVar20 = fcn.00402c1f(3);\n        hWndParent = uVar20;\n        lpKeyName._0_2_ = uVar20 >> 0x20;\n        lpKeyName._2_2_ = uVar20 >> 0x30;\n        uVar20 = fcn.00402c1f(4);\n        hWndChildAfter = uVar20;\n        lpKeyName._0_2_ = uVar20 >> 0x20;\n        lpKeyName._2_2_ = uVar20 >> 0x30;\n        if ((var_14h & 1) != 0) {\n            hWndParent = fcn.00402c41(0x33);\n        }\n        if ((var_14h & 2) != 0) {\n            hWndChildAfter = fcn.00402c41(0x44);\n        }\n        if (var_2ch == 0x21) {\n            uVar20 = fcn.00402c1f();\n            lpKeyName._0_2_ = uVar20 >> 0x20;\n            lpKeyName._2_2_ = uVar20 >> 0x30;\n            uVar19 = fcn.00402c1f(2);\n            lpKeyName._0_2_ = uVar19 >> 0x20;\n            lpKeyName._2_2_ = uVar19 >> 0x30;\n            if (var_14h >> 2 == 0) {\n                lpdwResult = (*_sym.imp.USER32.dll_SendMessageW)(uVar20, uVar19, hWndParent, hWndChildAfter);\n                dwFileAttributes = var_28h;\n            }\n            else {\n                iVar12 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)\n                                   (uVar20, uVar19, hWndParent, hWndChildAfter, 0, var_14h >> 2, &lpdwResult);\n                var_4h = iVar12 == 0;\n                dwFileAttributes = var_28h;\n            }\n        }\n        else {\n            piVar5 = fcn.00402c41(1);\n            piVar4 = fcn.00402c41(0x12);\n            lpdwResult = (*_sym.imp.USER32.dll_FindWindowExW)\n                                   (hWndParent, hWndChildAfter, -(*piVar5 != 0) & piVar5, -(*piVar4 != 0) & piVar4);\n            dwFileAttributes = var_28h;\n        }\njoined_r0x00402816:\n        if (-1 < dwFileAttributes) goto code_r0x00402a6b;\n        break;\n    case 0x401cf3:\n        uVar20 = fcn.00402c1f(0);\n        lpKeyName._0_2_ = uVar20 >> 0x20;\n        lpKeyName._2_2_ = uVar20 >> 0x30;\n        iVar12 = (*_sym.imp.USER32.dll_IsWindow)(uVar20);\n        nNumberOfBytesToRead = dwFileAttributes;\njoined_r0x00401a1e:\n        if (iVar12 == 0) {\n            return var_20h;\n        }\n        return nNumberOfBytesToRead;\n    case 0x401d14:\n        uVar20 = fcn.00402c1f(2);\n        lpKeyName._0_2_ = uVar20 >> 0x20;\n        lpKeyName._2_2_ = uVar20 >> 0x30;\n        uVar19 = fcn.00402c1f(1);\n        lpKeyName._0_2_ = uVar19 >> 0x20;\n        lpKeyName._2_2_ = uVar19 >> 0x30;\n        (*_sym.imp.USER32.dll_GetDlgItem)(uVar19, uVar20);\n        goto code_r0x00402a6b;\n    case 0x401d39:\n        iVar12 = *0x42a268 + dwFileAttributes;\n        uVar20 = fcn.00402c1f(0);\n        lpKeyName._0_2_ = uVar20 >> 0x20;\n        lpKeyName._2_2_ = uVar20 >> 0x30;\n        (*_sym.imp.USER32.dll_SetWindowLongW)(uVar20, 0xffffffeb, iVar12);\n        break;\n    case 0x401d5d:\n        uVar13 = (*_sym.imp.USER32.dll_GetDlgItem)(*0x42a208, dwFileAttributes);\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar13, &lpRect);\n        uVar10 = fcn.00402c41(0, 0, CONCAT22(var_50h._2_2_, var_50h) * var_20h, \n                              CONCAT22(lpKeyName._2_2_, lpKeyName) * var_20h, 0x10);\n        uVar10 = (*_sym.imp.USER32.dll_LoadImageW)(0, uVar10);\n        iVar12 = (*_sym.imp.USER32.dll_SendMessageW)(uVar13, 0x172, 0, uVar10);\n        if (iVar12 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar12);\n        }\n        break;\n    case 0x401db9:\n        uVar13 = (*_sym.imp.USER32.dll_GetDC)(*0x42a208);\n        uVar20 = fcn.00402c1f(2);\n        lpKeyName._0_2_ = uVar20 >> 0x20;\n        lpKeyName._2_2_ = uVar20 >> 0x30;\n        uVar10 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar13, 0x5a, 0x48);\n        *0x40cda8 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar20, uVar10);\n        *0x40cda8 = -*0x40cda8;\n        (*_sym.imp.USER32.dll_ReleaseDC)(lpString2, uVar13);\n        uVar20 = fcn.00402c1f(3);\n        *0x40cdb8 = uVar20;\n        lpKeyName._0_2_ = uVar20 >> 0x20;\n        lpKeyName._2_2_ = uVar20 >> 0x30;\n        *0x40cdbc = var_18h & 1;\n        *0x40cdbf = 1;\n        *0x40cdbd = var_18h & 2;\n        *0x40cdbe = var_18h & 4;\n        fcn.004062a6(0x40cdc4, dwFileAttributes);\n        (*_sym.imp.GDI32.dll_CreateFontIndirectW)(0x40cda8);\n        goto code_r0x00402a6b;\n    case 0x401e49:\n        uVar20 = fcn.00402c1f(0);\n        lpKeyName._0_2_ = uVar20 >> 0x20;\n        lpKeyName._2_2_ = uVar20 >> 0x30;\n        uVar19 = fcn.00402c1f(1);\n        lpKeyName._0_2_ = uVar19 >> 0x20;\n        lpKeyName._2_2_ = uVar19 >> 0x30;\n        if (nNumberOfBytesToRead == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)();\n        }\n        else {\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar20, uVar19);\n        }\n        break;\n    case 0x401e7d:\n        piVar15 = fcn.00402c41(0);\n        iVar12 = 0x31;\n        var_74h = fcn.00402c41(0x31);\n        piVar5 = fcn.00402c41(0x22);\n        fcn.00402c41(0x15);\n        fcn.00401423(0xffffffec);\n        var_80h = var_18h;\n        var_7ch = lpString2;\n        lpFileOp = nNumberOfBytesToRead;\n        var_78h = -(*piVar15 != 0) & piVar15;\n        var_6ch = 0x436000;\n        var_70h = -(*piVar5 != 0) & piVar5;\n        iVar9 = fcn.004058b0(&var_84h);\n        if (iVar9 == 0) goto code_r0x0040288b;\n        if ((var_80h & 0x40) != 0) {\n            fcn.0040670f(CONCAT22(lpKeyName._2_2_, lpKeyName));\n            goto code_r0x00401f4d;\n        }\n        break;\n    case 0x401f06:\n        uVar13 = fcn.00402c41(0);\n        fcn.004052ec(0xffffffeb, uVar13);\n        iVar12 = fcn.0040586d(uVar13);\n        if (iVar12 == 0) goto code_r0x0040288b;\n        if (var_20h != 0) {\n            iVar9 = fcn.0040670f(iVar12);\n            if (dwFileAttributes < 0) {\n                if (iVar9 != 0) {\n                    var_4h = 1;\n                }\n            }\n            else {\n                fcn.004061cb(lpBuffer, iVar9);\n            }\n        }\ncode_r0x00401f4d:\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar12);\n        break;\n    case 0x401f58:\n        uVar13 = fcn.00402c41(2);\n        iVar12 = fcn.004065c7(uVar13);\n        if (iVar12 != 0) {\n            fcn.004061cb(lpBuffer, *(iVar12 + 0x14));\n            goto code_r0x00402a6b;\n        }\n        *piVar15 = 0;\n        *lpBuffer = 0;\n        goto code_r0x0040288b;\n    case 0x401f8c:\n        lpdwResult = fcn.00402c41(0xffffffee);\n        pcVar11 = fcn.0040665e(9, lpdwResult, &lpKeyName);\n        iVar12 = (*pcVar11)();\n        *piVar15 = 0;\n        *lpBuffer = 0;\n        var_4h = 1;\n        if ((iVar12 != 0) &&\n           (hWndChildAfter = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iVar12),  hWndChildAfter != NULL)) {\n            lpNumberOfBytesRead = fcn.0040665e(10);\n            hWndParent = fcn.0040665e(0xb);\n            iVar12 = (*lpNumberOfBytesRead)(lpdwResult, 0, iVar12, hWndChildAfter);\n            ppiVar16 = hWndChildAfter;\n            if ((iVar12 != 0) &&\n               (ppiVar14 = hWndChildAfter, \n               iVar12 = (*hWndParent)(hWndChildAfter, 0x40a014, &lpValueName, &lDistanceToMove), \n               ppiVar16 = hWndChildAfter,  iVar12 != 0)) {\n                uVar13 = *(lpValueName + 8);\n                fcn.004061cb(piVar15, uVar13);\n                fcn.004061cb(ppiVar14, *(lpValueName + 0xc), piVar15, uVar13, lpBuffer);\n                var_4h = 0;\n                ppiVar16 = hWndChildAfter;\n            }\ncode_r0x00401be7:\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(ppiVar16);\n        }\n        break;\n    case 0x402031:\n        var_4h = 1;\n        if (-1 < *0x42a2d8) {\n            uVar13 = fcn.00402c41(0xfffffff0);\n            lpValueName = fcn.00402c41(1);\n            if (((var_18h != 0) &&\n                (hWndChildAfter = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(uVar13),  hWndChildAfter != NULL)) ||\n               (hWndChildAfter = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(uVar13, 0, 8),  hWndChildAfter != NULL)) {\n                pcVar11 = fcn.004066cd(hWndChildAfter, lpValueName);\n                if (pcVar11 == NULL) {\n                    fcn.004052ec(0xfffffff7, lpValueName);\n                }\n                else {\n                    var_4h = 0;\n                    if (var_20h == 0) {\n                        (*pcVar11)(lpString2, 0x400, 0x42b000, 0x40ce08, 0x40a000);\n                    }\n                    else {\n                        fcn.00401423(var_20h);\n                        iVar12 = (*pcVar11)();\n                        if (iVar12 != 0) {\n                            var_4h = 1;\n                        }\n                    }\n                }\n                if ((nNumberOfBytesToRead == 0) && (iVar12 = fcn.00403914(hWndChildAfter),  iVar12 != 0)) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(hWndChildAfter);\n                }\n                break;\n            }\n        }\n        goto code_r0x0040224b;\n    case 0x402104:\n        uVar13 = fcn.00402c41(0xfffffff0);\n        lpKeyName._0_2_ = uVar13;\n        lpKeyName._2_2_ = uVar13 >> 0x10;\n        lpValueName = fcn.00402c41(0xffffffdf);\n        lpString2 = fcn.00402c41(2);\n        lDistanceToMove = fcn.00402c41(0xffffffcd);\n        lpBuffer = fcn.00402c41(0x45);\n        var_44h = var_18h & 0xfff;\n        lpNumberOfBytesRead = var_18h >> 0x10 & 0xffff;\n        uVar8 = var_18h >> 0xc & 7;\n        iVar12 = fcn.00405bd0(lpValueName);\n        if (iVar12 == 0) {\n            fcn.00402c41(0x21);\n        }\n        iVar12 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x4084e4, 0, 1, 0x4084d4, &hWndChildAfter);\n        if (-1 < iVar12) {\n            hWndParent = (***hWndChildAfter)(hWndChildAfter, 0x4084f4, &lpdwResult);\n            if (-1 < hWndParent) {\n                hWndParent = (*(*hWndChildAfter)[0x14])(hWndChildAfter, lpValueName);\n                if ((var_18h & 0x8000) == 0) {\n                    (*(*hWndChildAfter)[9])(hWndChildAfter, 0x436000);\n                }\n                if (uVar8 != 0) {\n                    (*(*hWndChildAfter)[0xf])(hWndChildAfter, uVar8);\n                }\n                (*(*hWndChildAfter)[0xd])(hWndChildAfter, lpNumberOfBytesRead);\n                if (*lDistanceToMove != 0) {\n                    (*(*hWndChildAfter)[0x11])(hWndChildAfter, lDistanceToMove, var_44h);\n                }\n                (*(*hWndChildAfter)[0xb])(hWndChildAfter, lpString2);\n                (*(*hWndChildAfter)[7])(hWndChildAfter, lpBuffer);\n                if (-1 < hWndParent) {\n                    hWndParent = (**(*lpdwResult + 0x18))(lpdwResult, CONCAT22(lpKeyName._2_2_, lpKeyName), 1);\n                }\n                (**(*lpdwResult + 8))(lpdwResult);\n            }\n            (*(*hWndChildAfter)[2])(hWndChildAfter);\n            if (-1 < hWndParent) goto code_r0x0040224b;\n        }\n        var_4h = 1;\n        goto code_r0x0040224b;\n    case 0x402259:\n        iVar12 = fcn.00402c41(0);\n        iVar9 = fcn.00402c41(0x11);\n        hWndChildAfter = fcn.00402c41(0x23);\n        iVar6 = fcn.004065c7(iVar12);\n        if (iVar6 != 0) {\n            lpFileOp = lpString2;\n            var_64h = 2;\n            iVar6 = sub.KERNEL32.dll_lstrlenW(iVar12);\n            *(iVar12 + 2 + iVar6 * 2) = 0;\n            iVar6 = sub.KERNEL32.dll_lstrlenW(iVar9);\n            *(iVar9 + 2 + iVar6 * 2) = 0;\n            var_50h._2_2_ = SUB42(hWndChildAfter, 0);\n            lpKeyName._0_2_ = hWndChildAfter >> 0x10;\n            lpRect._0_2_ = var_20h;\n            var_60h = iVar12;\n            var_5ch = iVar9;\n            fcn.004052ec(0, hWndChildAfter);\n            iVar12 = (*_sym.imp.SHELL32.dll_SHFileOperationW)(&lpFileOp);\n            if (iVar12 == 0) break;\n        }\n        fcn.004052ec(0xfffffff9, 0);\n        goto code_r0x0040288b;\n    case 0x4022dd:\n        if (var_28h != 0xbadf00d) {\ncode_r0x004022e4:\n            uVar7 = 0x200010;\n            uVar21 = 0xffffffe8;\n            uVar10 = 0;\n            uVar13 = fcn.004062a6(0, 0xffffffe8);\ncode_r0x004022f2:\n            fcn.004058ea(uVar13, uVar10, uVar21, uVar7);\n            return 0x7fffffff;\n        }\n        *0x42a2b4 = *0x42a2b4 + 1;\n        break;\n    case 0x40230c:\n        uVar10 = 0;\n        uVar21 = 0;\n        if (var_28h != 0) {\n            uVar10 = fcn.00402c41(0);\n        }\n        if (dwFileAttributes != 0) {\n            uVar21 = fcn.00402c41(0x11);\n        }\n        if (var_18h != 0) {\n            uVar13 = fcn.00402c41(0x22);\n        }\n        uVar7 = fcn.00402c41(0xffffffcd);\n        iVar12 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(uVar10, uVar21, uVar13, uVar7);\ncode_r0x004015b4:\n        bVar18 = iVar12 == 0;\ncode_r0x004015b6:\n        if (bVar18) goto code_r0x0040288b;\n        break;\n    case 0x40234e:\n        hWndChildAfter = *0x40a010;\n        uVar13 = fcn.00402c41(1);\n        uVar10 = fcn.00402c41(0x12);\n        lpKeyName._0_2_ = uVar10;\n        lpKeyName._2_2_ = uVar10 >> 0x10;\n        uVar10 = fcn.00402c41(0xffffffdd);\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)\n                  (uVar13, CONCAT22(lpKeyName._2_2_, lpKeyName), &hWndChildAfter, piVar15, 0x3ff, uVar10);\n        bVar18 = *piVar15 == 10;\ncode_r0x00401751:\n        if (bVar18) {\ncode_r0x00402859:\n            var_4h = 1;\n            *piVar15 = 0;\n        }\n        break;\n    case 0x40238e:\n        if (var_18h == 0) {\n            iVar9 = fcn.00402c81(2);\n            if (iVar9 == 0) goto code_r0x0040288b;\n            uVar13 = fcn.00402c41(0x33);\n            iVar12 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(iVar9, uVar13);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar9);\n        }\n        else {\n            uVar13 = fcn.00402c41(0x22);\n            iVar12 = fcn.00402cff(dwFileAttributes, uVar13, var_18h >> 1);\n        }\n        if (iVar12 != 0) goto code_r0x0040288b;\n        break;\n    case 0x4023e4:\n        lpKeyName._0_2_ = var_14h;\n        lpKeyName._2_2_ = var_14h >> 0x10;\n        lpValueName = fcn.00402c41(2);\n        uVar13 = fcn.00402c41(0x11);\n        var_4h = 1;\n        hWndChildAfter = fcn.00402cd1(var_28h, uVar13, 2);\n        if (hWndChildAfter != NULL) {\n            uVar8 = 0;\n            if (var_18h == 1) {\n                fcn.00402c41(0x23);\n                iVar12 = sub.KERNEL32.dll_lstrlenW(0x40b5a8);\n                uVar8 = iVar12 * 2 + 2;\n            }\n            uVar20 = CONCAT44(lpdwResult, *0x40b5a8);\n            if (var_18h == 4) {\n                uVar20 = fcn.00402c1f(3);\n                uVar8 = var_18h;\n            }\n            if (var_18h == 3) {\n                uVar8 = fcn.00403116(nNumberOfBytesToRead, 0, 0x40b5a8, 0x1800);\n                lpdwResult = uVar20 >> 0x20;\n                *0x40b5a8 = uVar20;\n            }\n            iVar12 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)\n                               (hWndChildAfter, lpValueName, 0, CONCAT22(lpKeyName._2_2_, lpKeyName), 0x40b5a8, uVar8);\n            lpdwResult = uVar20 >> 0x20;\n            *0x40b5a8 = uVar20;\n            ppiVar16 = hWndChildAfter;\n            if (iVar12 == 0) {\n                var_4h = 0;\n            }\ncode_r0x00402557:\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(ppiVar16);\n            lpdwResult = uVar20 >> 0x20;\n            *0x40b5a8 = uVar20;\n        }\n        break;\n    case 0x402484:\n        ppiVar16 = fcn.00402c81(0x20019);\n        uVar13 = fcn.00402c41(0x33);\n        *piVar15 = 0;\n        if (ppiVar16 != NULL) {\n            lpKeyName._0_2_ = 0x800;\n            lpKeyName._2_2_ = 0;\n            iVar9 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(ppiVar16, uVar13, 0, &hWndChildAfter, piVar15, &lpKeyName)\n            ;\n            if (iVar9 == 0) {\n                if (hWndChildAfter == 0x4) {\n                    var_4h = var_18h == 0;\n                    fcn.004061cb();\n                    uVar20 = CONCAT44(lpdwResult, *0x40b5a8);\n                    goto code_r0x00402557;\n                }\n                if ((hWndChildAfter == 0x1) || (hWndChildAfter == 0x2)) {\n                    var_4h = var_18h;\n                    goto code_r0x0040254f;\n                }\n            }\n            *piVar15 = 0;\n            uVar20 = CONCAT44(lpdwResult, *0x40b5a8);\n            var_4h = 1;\n            goto code_r0x00402557;\n        }\n        goto code_r0x0040288b;\n    case 0x4024f8:\n        ppiVar16 = fcn.00402c81(0x20019);\n        uVar20 = fcn.00402c1f(3);\n        lpKeyName._0_2_ = uVar20 >> 0x20;\n        lpKeyName._2_2_ = uVar20 >> 0x30;\n        *piVar15 = 0;\n        if (ppiVar16 != NULL) {\n            hWndChildAfter = 0x3ff;\n            if (var_18h == 0) {\n                iVar9 = (*_sym.imp.ADVAPI32.dll_RegEnumValueW)(ppiVar16, uVar20, piVar15, &hWndChildAfter, 0, 0, 0, 0);\n                if (iVar9 != 0) {\n                    var_4h = 1;\n                }\n            }\n            else {\n                (*_sym.imp.ADVAPI32.dll_RegEnumKeyW)(ppiVar16, uVar20, piVar15, 0x3ff);\n            }\ncode_r0x0040254f:\n            *(iVar12 + 0x42b7fe) = 0;\n            uVar20 = CONCAT44(lpdwResult, *0x40b5a8);\n            goto code_r0x00402557;\n        }\n        goto code_r0x0040288b;\n    case 0x402562:\n        iVar12 = fcn.004061e4(piVar15);\n        if (iVar12 != 0) goto code_r0x00401f4d;\n        break;\n    case 0x402576:\n        uVar13 = fcn.00402c41(0xffffffed);\n        iVar12 = fcn.00405d7a(uVar13, dwFileAttributes, var_20h);\n        if (iVar12 == -1) goto code_r0x00402888;\ncode_r0x00402a6b:\n        fcn.004061cb(piVar15);\n        break;\n    case 0x402598:\n        lpKeyName._0_2_ = var_20h;\n        lpKeyName._2_2_ = var_20h >> 0x10;\n        if (var_20h == 0) {\n            if (var_2ch == 0x38) {\n                fcn.00402c41(0x21);\n                (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, 0x40b5a8, 0xffffffff, 0x40ada8, 0x400, 0, 0);\n                hWndChildAfter = (*_sym.imp.KERNEL32.dll_lstrlenA)(0x40ada8);\n            }\n            else {\n                uVar13 = fcn.00402c41(0x11);\n                iVar12 = sub.KERNEL32.dll_lstrlenW(uVar13);\n                hWndChildAfter = iVar12 * 2;\n            }\n        }\n        else {\n            *0x40ada8 = fcn.00402c1f(1);\n            hWndChildAfter = ((var_2ch == 0x38) == 0) + 1;\n            lpValueName = extraout_EDX;\n        }\n        if ((*piVar15 != 0) &&\n           (((uVar13 = fcn.004061e4(piVar15),  (var_2ch == 0x38 | CONCAT22(lpKeyName._2_2_, lpKeyName)) != 0 ||\n             (nNumberOfBytesToRead == 0)) || (iVar12 = fcn.00405e5b(uVar13, uVar13),  -1 < iVar12)))) {\n            iVar12 = fcn.00405e2c(uVar13, 0x40ada8, hWndChildAfter);\n            goto code_r0x004015b4;\n        }\n        goto code_r0x0040288b;\n    case 0x40264a:\n        lpString2 = 0;\n        lDistanceToMove = 0x2;\n        uVar20 = fcn.00402c1f(2);\n        lpValueName = uVar20;\n        lpKeyName._0_2_ = uVar20 >> 0x20;\n        lpKeyName._2_2_ = uVar20 >> 0x30;\n        if (lpValueName < 1) break;\n        if (0x3ff < lpValueName) {\n            lpValueName = 0x3ff;\n        }\n        if (*piVar15 != 0) {\n            lpdwResult = NULL;\n            hWndParent = fcn.004061e4(piVar15);\n            pcVar11 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n            if (0 < lpValueName) {\n                do {\n                    if (var_2ch == 0x39) {\n                        uVar8 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                          (hWndParent, &hWndChildAfter + 2, 2 - nNumberOfBytesToRead, \n                                           &lpNumberOfBytesRead, 0);\n                        if ((uVar8 != 0) && (lpNumberOfBytesRead != NULL)) {\n                            var_44h = uVar8 & 0xffff0000 | hWndChildAfter >> 0x10 & 0xff;\n                            lDistanceToMove = lpNumberOfBytesRead;\n                            if (nNumberOfBytesToRead == 0) {\n                                iVar12 = (*pcVar11)(0, 8, &hWndChildAfter + 2, lpNumberOfBytesRead, &var_44h, 1);\n                                if (iVar12 == 0) {\n                                    iVar12 = -lDistanceToMove;\n                                    do {\n                                        lpNumberOfBytesRead = lpNumberOfBytesRead + -1;\n                                        var_44h = 0xfffd;\n                                        if (lpNumberOfBytesRead == NULL) break;\n                                        lDistanceToMove = lDistanceToMove + -1;\n                                        iVar12 = iVar12 + 1;\n                                        (*_sym.imp.KERNEL32.dll_SetFilePointer)(hWndParent, iVar12, 0, 1);\n                                        iVar9 = (*pcVar11)(0, 8, &hWndChildAfter + 2, lpNumberOfBytesRead, &var_44h, 1);\n                                    } while (iVar9 == 0);\n                                }\n                                goto code_r0x00402762;\n                            }\ncode_r0x00402798:\n                            fcn.004061cb(lpBuffer, var_44h & 0xffff);\n                            goto code_r0x00402ace;\n                        }\n                        break;\n                    }\n                    if ((((nNumberOfBytesToRead == 0) && (lpString2 == 0)) &&\n                        (iVar12 = fcn.00405e5b(hWndParent, 0),  iVar12 < 0)) ||\n                       (iVar12 = fcn.00405dfd(hWndParent, &var_44h, 2),  iVar12 == 0)) break;\ncode_r0x00402762:\n                    if (nNumberOfBytesToRead != 0) goto code_r0x00402798;\n                    iVar2 = var_44h;\n                    if ((lpdwResult == 0xd) || (lpdwResult == 10)) {\n                        if ((lpdwResult == iVar2) || ((iVar2 != 0xd && (iVar2 != 10)))) {\n                            (*_sym.imp.KERNEL32.dll_SetFilePointer)(hWndParent, -lDistanceToMove, 0, 1);\n                        }\n                        else {\n                            lpBuffer[lpString2] = iVar2;\n                            lpString2 = lpString2 + 1;\n                        }\n                        break;\n                    }\n                    iVar12 = lpString2 + 1;\n                    lpBuffer[lpString2] = iVar2;\n                    lpString2 = iVar12;\n                    if ((iVar2 == 0) || (lpdwResult = var_44h,  lpValueName <= iVar12)) break;\n                } while( true );\n            }\n        }\n        bVar18 = lpString2 == 0;\n        lpBuffer[lpString2] = 0;\n        goto code_r0x004015b6;\n    case 0x4027ed:\n        if (*piVar15 != 0) {\n            uVar20 = fcn.00402c1f(2);\n            uVar13 = uVar20;\n            lpKeyName._0_2_ = uVar20 >> 0x20;\n            lpKeyName._2_2_ = uVar20 >> 0x30;\n            uVar21 = 0;\n            uVar10 = fcn.004061e4(piVar15);\n            (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar10, piVar15, uVar13, uVar21, nNumberOfBytesToRead);\n            piVar15 = lpBuffer;\n            goto joined_r0x00402816;\n        }\n        break;\n    case 0x402821:\n        iVar12 = fcn.004061e4(piVar15);\n        if (iVar12 != 0) {\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar12);\n        }\n        break;\n    case 0x40283b:\n        iVar12 = fcn.004061e4(lpBuffer);\n        if ((iVar12 != 0) && (iVar12 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar12, &lpFindFileData),  iVar12 != 0)) {\ncode_r0x004028a0:\n            ppiVar16 = &var_2a8h;\n            goto code_r0x004029e1;\n        }\n        goto code_r0x00402859;\n    case 0x402868:\n        uVar13 = fcn.00402c41(2);\n        iVar12 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(uVar13, &lpFindFileData);\n        if (iVar12 != -1) {\n            fcn.004061cb(lpBuffer, iVar12);\n            goto code_r0x004028a0;\n        }\n        *lpBuffer = 0;\ncode_r0x00402888:\n        *piVar15 = 0;\ncode_r0x0040288b:\n        var_4h = 1;\n        break;\n    case 0x4028ad:\n        lpdwResult = 0xfffffd66;\n        pcVar11 = fcn.00402c41(0xfffffff0);\n        lpNumberOfBytesRead = pcVar11;\n        iVar12 = fcn.00405bd0(pcVar11);\n        if (iVar12 == 0) {\n            fcn.00402c41(0xffffffed);\n        }\n        fcn.00405d55(pcVar11);\n        hWndChildAfter = fcn.00405d7a(pcVar11, 0x40000000, 2);\n        pcVar11 = _sym.imp.KERNEL32.dll_GlobalAlloc;\n        if (hWndChildAfter != 0xffffffff) {\n            lpValueName = *0x42a218;\n            iVar12 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x42a218);\n            if (iVar12 != 0) {\n                fcn.00403311(0);\n                fcn.004032fb(iVar12, lpValueName);\n                arg_10h = (*pcVar11)(0x40, var_20h);\n                lpKeyName._0_2_ = SUB42(arg_10h, 0);\n                lpKeyName._2_2_ = arg_10h >> 0x10;\n                if (arg_10h != NULL) {\n                    fcn.00403116(dwFileAttributes, 0, arg_10h, var_20h);\n                    for (; *arg_10h != '\\0'; arg_10h = arg_10h + var_34h + 8) {\n                        var_34h = *arg_10h;\n                        dwFileAttributes = arg_10h[1] + iVar12;\n                        fcn.00405d35();\n                    }\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(CONCAT22(lpKeyName._2_2_, lpKeyName), dwFileAttributes);\n                }\n                fcn.00405e2c(hWndChildAfter, iVar12, lpValueName);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar12);\n                lpdwResult = fcn.00403116(0xffffffff, hWndChildAfter, 0, 0);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hWndChildAfter);\n        }\n        if (lpdwResult < 0) {\n            (*_sym.imp.KERNEL32.dll_DeleteFileW)(lpNumberOfBytesRead);\n            var_4h = 1;\n        }\ncode_r0x0040224b:\n        fcn.00401423();\n        break;\n    case 0x4029a8:\n        uVar20 = fcn.00402c1f(0);\n        uVar8 = uVar20;\n        lpKeyName._0_2_ = uVar20 >> 0x20;\n        lpKeyName._2_2_ = uVar20 >> 0x30;\n        if (*0x42a24c <= uVar8) goto code_r0x0040288b;\n        iVar12 = uVar8 * 0x818 + *0x42a248;\n        if (-1 < var_20h) {\n            piVar15 = lpBuffer;\n            if (var_20h == 0) {\n                ppiVar16 = iVar12 + 0x18;\n                goto code_r0x004029e1;\n            }\n            goto code_r0x00402a6b;\n        }\n        var_20h = -1 - var_20h;\n        if (var_20h == 0) {\n            fcn.004062a6(iVar12 + 0x18, var_18h);\n            *(iVar12 + 9) = *(iVar12 + 9) | 1;\n        }\n        else {\n            uVar20 = fcn.00402c1f(1);\n            dwFileAttributes = uVar20;\n            lpKeyName._0_2_ = uVar20 >> 0x20;\n            lpKeyName._2_2_ = uVar20 >> 0x30;\n        }\n        *(iVar12 + var_20h * 4) = dwFileAttributes;\n        if (nNumberOfBytesToRead != 0) {\n            fcn.0040117d(uVar8);\n        }\n        break;\n    case 0x402a35:\n        uVar20 = fcn.00402c1f(0);\n        uVar8 = uVar20;\n        lpKeyName._0_2_ = uVar20 >> 0x20;\n        lpKeyName._2_2_ = uVar20 >> 0x30;\n        if (0x1f < uVar8) goto code_r0x0040288b;\n        if (nNumberOfBytesToRead == 0) {\n            if (var_20h == 0) {\n                fcn.004062a6(lpBuffer, *(*0x42a214 + 0x94 + uVar8 * 4));\n            }\n            else {\n                *(*0x42a214 + 0x94 + uVar8 * 4) = dwFileAttributes;\n            }\n        }\n        else {\n            if (var_20h == 0) {\n                fcn.004012e2(0);\n                piVar15 = lpBuffer;\n                goto code_r0x00402a6b;\n            }\n            fcn.00401299(uVar8);\n            fcn.004011ef(0, 0);\n        }\n        break;\n    case 0x402aa0:\n        (*_sym.imp.USER32.dll_SendMessageW)(*0x42a208, 0xb, *0x4256e8 & var_28h, 0);\n        if (var_28h != 0) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(lpString2, 0, 0);\n        }\n        break;\n    case 0x402ad0:\n        goto code_r0x00402ad0;\n    }\ncode_r0x00402ac5:\n    *0x42a2a8 = *0x42a2a8 + var_4h;\ncode_r0x00402ace:\n    var_28h = 0;\ncode_r0x00402ad0:\n    return var_28h;\n}\n",
        "token_count": 14600
    },
    "00402edd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar16_t * __cdecl fcn.00402edd(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t dwBytes;\n    int32_t var_10h;\n    uint *hFile;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_8h = NULL;\n    var_4h = 0;\n    *0x42a210 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x42a210 = *0x42a210 + 1000;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0x438800, 0x400);\n    puVar1 = fcn.00405d7a(0x438800, 0x80000000, 3);\n    if (puVar1 == 0xffffffff) {\n        *0x40a018 = puVar1;\n        return L\"Error launching installer\";\n    }\n    *0x40a018 = puVar1;\n    hFile = puVar1;\n    fcn.00406284(0x436800, 0x438800);\n    uVar2 = fcn.00405ba5(0x436800);\n    fcn.00406284(0x439000, uVar2);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(puVar1, 0);\n    *0x418ea4 = uVar3;\n    for (; 0 < uVar3; uVar3 = uVar3 - uVar8) {\n        uVar4 = (-(*0x42a218 != 0) & 0x7e00) + 0x200;\n        uVar8 = uVar3;\n        if (uVar4 <= uVar3) {\n            uVar8 = uVar4;\n        }\n        puVar1 = 0x418ea8;\n        iVar5 = fcn.004032fb();\n        if (iVar5 == 0) {\n            fcn.00402e79(1);\n            goto code_r0x004030b5;\n        }\n        if (*0x42a218 == 0) {\n            puVar1 = &var_28h;\n            fcn.00405d35();\n            if (((((var_28h & 0xfffffff0) == 0) && (var_24h == -0x21524111)) && (var_18h == 0x74736e49)) &&\n               ((var_1ch == 0x74666f73 && (var_20h == 0x6c6c754e)))) {\n                arg_8h = arg_8h | var_28h;\n                *0x42a2c0 = *0x42a2c0 | arg_8h & 2;\n                *0x42a218 = *0x40ce98;\n                if (uVar3 < var_10h) goto code_r0x004030b5;\n                if (((arg_8h & 8) == 0) && ((arg_8h & 4) != 0)) break;\n                var_4h = var_4h + 1;\n                uVar3 = var_10h - 4;\n                if (uVar3 < uVar8) {\n                    uVar8 = uVar3;\n                }\n            }\n        }\n        else if ((arg_8h & 2) == 0) {\n            fcn.00402e79(0);\n        }\n        if (uVar3 < *0x418ea4) {\n            puVar6 = fcn.00406751();\n            puVar1 = var_8h;\n            var_8h = puVar6;\n        }\n        *0x40ce98 = *0x40ce98 + uVar8;\n    }\n    fcn.00402e79(1, puVar1);\n    if (*0x42a218 != 0) {\n        if (var_4h != 0) {\n            fcn.00403311(*0x40ce98);\n            iVar5 = fcn.004032fb(&arg_8h, 4);\n            if ((iVar5 == 0) || (var_8h != arg_8h)) goto code_r0x004030b5;\n        }\n        puVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n        fcn.00403311(*0x42a218 + 0x1c);\n        iVar5 = fcn.00403116(0xffffffff, 0, puVar1, dwBytes);\n        if (iVar5 == dwBytes) {\n            *0x42a21c = *puVar1;\n            if ((var_28h & 1) != 0) {\n                *0x42a220 = *0x42a220 + 1;\n            }\n            piVar7 = puVar1 + 0x11;\n            iVar5 = 8;\n            *0x42a214 = puVar1;\n            do {\n                piVar7 = piVar7 + -2;\n                *piVar7 = *piVar7 + puVar1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            uVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0, 0, 1);\n            puVar1[0xf] = uVar2;\n            fcn.00405d35(0x42a240, puVar1 + 1, 0x40);\n            return NULL;\n        }\n    }\ncode_r0x004030b5:\n    return \n    L\"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n    ;\n}\n",
        "token_count": 1400
    },
    "null": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid entry0(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    uint32_t *puVar10;\n    int32_t *unaff_EBP;\n    char *arg_8h;\n    char16_t *arg_8h_00;\n    int32_t iStack800;\n    int32_t iStack792;\n    uint uStack788;\n    char16_t *pcStack784;\n    char16_t *pcStack780;\n    uint uStack776;\n    uchar *puStack772;\n    uint uStack768;\n    uint uStack764;\n    uint uStack760;\n    uint uStack712;\n    \n    iStack800 = 0x20;\n    uStack712 = 0;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    *0x42a20c = (*_sym.imp.KERNEL32.dll_GetVersion)();\n    *0x42a20c = *0x42a20c & 0xbfffffff;\n    if ((*0x42a20c != 6) && (pcVar2 = fcn.0040665e(),  pcVar2 != NULL)) {\n        (*pcVar2)();\n    }\n    arg_8h = \"UXTHEME\";\n    do {\n        fcn.004065ee(arg_8h);\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        arg_8h = arg_8h + iVar3 + 1;\n    } while (*arg_8h != '\\0');\n    fcn.0040665e();\n    *0x42a204 = fcn.0040665e();\n    pcVar2 = fcn.0040665e();\n    if (pcVar2 != NULL) {\n        uStack760 = 0x4033e6;\n        iVar3 = (*pcVar2)();\n        if (iVar3 != 0) {\n            *0x42a20c = *0x42a20c | 0x40000000;\n        }\n    }\n    uStack760 = 0x4033f8;\n    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n    uStack760 = 0;\n    uStack764 = 0x4033ff;\n    *0x42a2d8 = (*_sym.imp.ole32.dll_OleInitialize)();\n    uStack764 = 0;\n    puStack772 = &stack0xfffffd38;\n    uStack768 = 0x2b4;\n    uStack776 = 0;\n    pcStack780 = 0x4216a8;\n    pcStack784 = 0x40341b;\n    (*_sym.imp.SHELL32.dll_SHGetFileInfoW)();\n    pcStack784 = L\"NSIS Error\";\n    uStack788 = 0x429200;\n    iStack792 = 0x40342a;\n    fcn.00406284();\n    iStack792 = 0x403430;\n    iStack792 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n    iVar3 = 0x435000;\n    fcn.00406284(0x435000);\n    *0x42a200 = 0x400000;\n    uVar4 = 0x435000;\n    if (*0x435000 == 0x22) {\n        uVar4 = 0x435002;\n        iStack800 = 0x22;\n    }\n    puVar5 = fcn.00405b86(uVar4);\n    puVar6 = (*_sym.imp.USER32.dll_CharNextW)(puVar5);\n    iVar1 = *puVar6;\n    pcStack784 = puVar6;\n    while (iVar1 != 0) {\n        while (iVar1 == 0x20) {\n            puVar6 = puVar6 + 2;\n            iVar1 = *puVar6;\n        }\n        if (*puVar6 == 0x22) {\n            puVar6 = puVar6 + 2;\n        }\n        puVar10 = puVar6;\n        if (*puVar6 == 0x2f) {\n            puVar10 = puVar6 + 2;\n            if ((*puVar10 == 0x53) && ((*(puVar6 + 1) == 0x20 || (*(puVar6 + 1) == 0)))) {\n                *0x42a2c0 = 1;\n            }\n            if (((*puVar10 == CONCAT22(str.NCRC[1], str.NCRC[0])) &&\n                (*(puVar6 + 6) == (CONCAT22(str.NCRC[3], str.NCRC[2]) | str.NCRC[1] >> 0xf))) &&\n               ((*(puVar6 + 10) == 0x20 || (*(puVar6 + 10) == 0)))) {\n                pcStack780 = pcStack780 | 4;\n            }\n            if ((*(puVar6 + -2) == CONCAT22(str.__D[1], str.__D[0])) &&\n               (*puVar10 == (CONCAT22(str.__D[3], str.__D[2]) | str.__D[1] >> 0xf))) {\n                *(puVar6 + -2) = 0;\n                fcn.00406284(0x435800, puVar6 + 6);\n                break;\n            }\n        }\n        puVar6 = fcn.00405b86();\n        if (*puVar6 == 0x22) {\n            puVar6 = puVar6 + 2;\n        }\n        puVar5 = puVar10;\n        iVar1 = *puVar6;\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GetTempPathW;\n    (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x400, 0x437800, puVar5);\n    iVar7 = fcn.00403328();\n    if (iVar7 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(0x437800, 0x3fb);\n        arg_8h_00 = 0x437800;\n        sub.KERNEL32.dll_lstrcatW(0x437800, L\"\\\\Temp\");\n        iVar7 = fcn.00403328();\n        if (iVar7 == 0) {\n            (*pcVar2)(0x3fc, 0x437800);\n            sub.KERNEL32.dll_lstrcatW(0x437800, 0x40a29c);\n            pcVar2 = _sym.imp.KERNEL32.dll_SetEnvironmentVariableW;\n            (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(L\"TEMP\", 0x437800);\n            (*pcVar2)(0x40a288, 0x437800);\n            iVar7 = fcn.00403328();\n            if (iVar7 == 0) goto code_r0x004036c8;\n        }\n    }\n    arg_8h_00 = unaff_EBP;\n    (*_sym.imp.KERNEL32.dll_DeleteFileW)(0x437000);\n    iStack792 = 0x403611;\n    puStack772 = fcn.00402edd(arg_8h_00);\n    if (puStack772 == NULL) {\n        if (*0x42a220 != 0) {\n            iStack792 = 0;\n            iVar3 = 0x435000;\n            iStack800 = 0x403630;\n            piVar8 = fcn.00405b86(0x435000);\n            if (0x434fff < piVar8) {\n                do {\n                    if ((*piVar8 == CONCAT22(str.___[1], str.___[0])) &&\n                       (piVar8[1] == (CONCAT22(str.___[3], str.___[2]) | str.___[1] >> 0xf))) break;\n                    piVar8 = piVar8 + -2;\n                } while (0x434fff < piVar8);\n            }\n            pcStack780 = L\"Error launching installer\";\n            if (piVar8 < 0x435000) goto code_r0x004036f4;\n            *piVar8 = 0;\n            piVar8 = piVar8 + 2;\n            arg_8h_00 = piVar8;\n            iVar7 = fcn.00405c61();\n            if (iVar7 == 0) goto code_r0x004036c8;\n            fcn.00406284(0x435800, piVar8);\n            arg_8h_00 = 0x436000;\n            fcn.00406284(0x436000, piVar8);\n            iStack800 = 0;\n        }\n        *0x42a2cc = -1;\n        iVar3 = fcn.00403974();\n    }\ncode_r0x004036c8:\n    while( true ) {\n        fcn.0040389a(arg_8h_00);\n        (*_sym.imp.ole32.dll_OleUninitialize)();\n        if (iStack800 == 0) break;\n        fcn.004058ea(iStack800, 0x200010);\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(2);\ncode_r0x004036f4:\n        iVar7 = fcn.00405855();\n        iStack800 = 0x40a270;\n        sub.KERNEL32.dll_lstrcatW(0x437800);\n        if (iVar7 != 0) {\n            sub.KERNEL32.dll_lstrcatW(0x437800, 0x40a26c);\n        }\n        arg_8h_00 = L\".tmp\";\n        sub.KERNEL32.dll_lstrcatW(0x437800);\n        iVar9 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(0x437800, 0x436800);\n        if (iVar9 != 0) {\n            if (iVar7 == 0) {\n                fcn.00405838();\n            }\n            else {\n                fcn.004057bb(0x437800);\n            }\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(0x437800);\n            if (*0x435800 == 0) {\n                iStack800 = 0x435800;\n                fcn.00406284();\n            }\n            fcn.00406284(0x42b000, uStack776);\n            *0x42b800 = CONCAT22(*0x40a25a, *0x40a258);\n            iVar7 = 0x1a;\n            do {\n                fcn.004062a6(0x420ea8, *(*0x42a214 + 0x120));\n                (*_sym.imp.KERNEL32.dll_DeleteFileW)(0x420ea8);\n                if ((iStack792 != 0) && (iVar9 = (*_sym.imp.KERNEL32.dll_CopyFileW)(0x438800, 0x420ea8, 1),  iVar9 != 0)\n                   ) {\n                    fcn.0040604a(0x420ea8, 0);\n                    fcn.004062a6(0x420ea8, *(*0x42a214 + 0x124));\n                    iVar9 = fcn.0040586d(0x420ea8);\n                    if (iVar9 != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar9);\n                        iStack792 = 0;\n                    }\n                }\n                *0x42b800 = *0x42b800 + 1;\n                *0x42b800 = *0x42b800 & 0xffff0000 | *0x42b800;\n                iVar7 = iVar7 + -1;\n            } while (iVar7 != 0);\n            arg_8h_00 = 0x437800;\n            fcn.0040604a(0x437800, 0);\n        }\n    }\n    if (*0x42a2b4 != 0) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &stack0xfffffce8);\n        iVar7 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar4);\n        if (iVar7 != 0) {\n            (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, L\"SeShutdownPrivilege\", &stack0xfffffcfc);\n            uStack788 = 1;\n            uStack776 = 2;\n            (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(iVar3, 0, &stack0xfffffcec, 0, 0, 0);\n        }\n        pcVar2 = fcn.0040665e(4);\n        if (((pcVar2 != NULL) && (iVar7 = (*pcVar2)(0, 0, 0, 0x25, 0x80040002),  iVar7 == 0)) ||\n           (iVar7 = (*_sym.imp.USER32.dll_ExitWindowsEx)(2, 0x80040002),  iVar7 == 0)) {\n            fcn.0040140b(9);\n        }\n    }\n    if (*0x42a2cc != -1) {\n        iVar3 = *0x42a2cc;\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(iVar3);\n    if (*0x40a018 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a018);\n        *0x40a018 = -1;\n    }\n    fcn.004038df();\n    fcn.00405996(0x438000, 7);\n    return;\n}\n",
        "token_count": 3037
    },
    "0040389a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040389a(void)\n\n{\n    if (*0x40a018 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a018);\n        *0x40a018 = -1;\n    }\n    fcn.004038df();\n    fcn.00405996(0x438000, 7);\n    return;\n}\n",
        "token_count": 84
    },
    "00403974": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00403974(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    \n    iVar7 = *0x42a214;\n    pcVar2 = fcn.0040665e();\n    if (pcVar2 == NULL) {\n        *0x437000 = 0x30;\n        *0x437002 = 0x78;\n        *0x437004 = 0;\n        fcn.00406152(0x80000001, L\"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x4236e8, 0);\n        if (*0x4236e8 == 0) {\n            fcn.00406152(0x80000003, L\".DEFAULT\\\\Control Panel\\\\International\", L\"Locale\", 0x4236e8, 0);\n        }\n        sub.KERNEL32.dll_lstrcatW();\n    }\n    else {\n        (*pcVar2)();\n        fcn.004061cb();\n    }\n    fcn.00403c4a();\n    *0x42a2a0 = *0x42a21c & 0x20;\n    *0x42a2bc = 0x10000;\n    iVar3 = fcn.00405c61();\n    if ((iVar3 == 0) && (*(iVar7 + 0x48) != 0)) {\n        uVar6 = 0x4281a0;\n        fcn.00406152(*(iVar7 + 0x44), *0x42a258 + *(iVar7 + 0x48) * 2, *0x42a258 + *(iVar7 + 0x4c) * 2, 0x4281a0, 0);\n        if (*0x4281a0 != 0) {\n            if (*0x4281a0 == 0x22) {\n                uVar6 = 0x4281a2;\n                puVar4 = fcn.00405b86();\n                *puVar4 = 0;\n            }\n            iVar3 = sub.KERNEL32.dll_lstrlenW();\n            if (((uVar6 < (uVar6 - 8) + iVar3 * 2) && (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(),  iVar3 == 0)) &&\n               ((uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(),  uVar6 == 0xffffffff || ((uVar6 & 0x10) == 0))))\n            {\n                fcn.00405ba5();\n            }\n            fcn.00405b59();\n            fcn.00406284();\n        }\n    }\n    iVar3 = fcn.00405c61();\n    if (iVar3 == 0) {\n        uStack148 = 0x403acb;\n        fcn.004062a6(0x435800, *(iVar7 + 0x118));\n    }\n    uStack148 = 0x8040;\n    uStack152 = 0;\n    uStack156 = 0;\n    iVar9 = 1;\n    iVar8 = 0x67;\n    iVar3 = *0x42a200;\n    *0x4291e8 = (*_sym.imp.USER32.dll_LoadImageW)(*0x42a200, 0x67, 1);\n    if (*(iVar7 + 0x50) == -1) {\ncode_r0x00403b71:\n        iVar7 = fcn.0040140b(0);\n        if (iVar7 == 0) {\n            fcn.00403c4a();\n            if (*0x42a2c0 == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x4236c8, 5);\n                iVar7 = fcn.004065ee(\"RichEd20\");\n                if (iVar7 == 0) {\n                    fcn.004065ee(\"RichEd32\");\n                }\n                pcVar2 = _sym.imp.USER32.dll_GetClassInfoW;\n                iVar7 = (*_sym.imp.USER32.dll_GetClassInfoW)(0, L\"RichEdit20W\", 0x4291a0);\n                if (iVar7 == 0) {\n                    (*pcVar2)(0, L\"RichEdit\", 0x4291a0);\n                    *0x4291c4 = L\"RichEdit20W\";\n                    (*_sym.imp.USER32.dll_RegisterClassW)(0x4291a0);\n                }\n                uVar5 = (*_sym.imp.USER32.dll_DialogBoxParamW)(*0x42a200, *0x4291e0 + 0x69U & 0xffff, 0, 0x403d22, 0);\n                fcn.0040140b(5);\n                fcn.004038c4(1);\n                return uVar5;\n            }\n            iVar7 = fcn.004053bf(0);\n            if (iVar7 == 0) {\n                fcn.0040140b(1);\n                goto code_r0x00403c40;\n            }\n            if (*0x4291cc == 0) {\n                fcn.0040140b(2);\n            }\n        }\n        uVar5 = 2;\n    }\n    else {\n        iVar7 = 0x4291a0;\n        *0x4291a4 = fcn.00401000;\n        *0x4291b0 = *0x42a200;\n        *0x4291c4 = 0x40a380;\n        *0x4291b4 = *0x4291e8;\n        iVar1 = (*_sym.imp.USER32.dll_RegisterClassW)(0x4291a0);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &stack0xffffff64, 0);\n            *0x4236c8 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                                  (0x80, 0x40a380, 0, 0x80000000, iVar7, iVar3, iVar8 - iVar7, iVar9 - iVar3, 0, 0, \n                                   *0x42a200, 0);\n            goto code_r0x00403b71;\n        }\ncode_r0x00403c40:\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 1483
    },
    "00404c68": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c68(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t *var_38h;\n    uint32_t *var_34h;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_1ch;\n    uint32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    var_8h = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3f9);\n    uVar2 = arg_8h;\n    var_4h = (*pcVar1)(arg_8h, 0x408);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    var_10h = *0x42a248;\n    var_14h = *0x42a214 + 0x94;\n    if (arg_ch == 0x110) {\n        var_1ch = 0;\n        var_ch = 2;\n        *0x42a280 = arg_8h;\n        *0x4236e0 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x42a24c << 2);\n        uVar2 = (*_sym.imp.USER32.dll_LoadBitmapW)(*0x42a200, 0x6e);\n        *0x4236d4 = 0xffffffff;\n        *0x4236dc = (*_sym.imp.USER32.dll_SetWindowLongW)(var_4h, 0xfffffffc, fcn.00405260);\n        *0x4236cc = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 6, 0);\n        (*_sym.imp.COMCTL32.dll_ImageList_AddMasked)(*0x4236cc, uVar2, 0xff00ff);\n        (*pcVar1)(var_4h, 0x1109, 2, *0x4236cc);\n        iVar3 = (*pcVar1)(var_4h, 0x111c, 0, 0);\n        if (iVar3 < 0x10) {\n            (*pcVar1)(var_4h, 0x111b, 0x10, 0);\n        }\n        (*_sym.imp.GDI32.dll_DeleteObject)(uVar2);\n        iVar3 = 0;\n        do {\n            iVar7 = *(var_14h + iVar3 * 4);\n            if (iVar7 != 0) {\n                if (iVar3 != 0x20) {\n                    var_ch = 0;\n                }\n                uVar2 = fcn.004062a6(0, iVar7);\n                uVar2 = (*pcVar1)(var_8h, 0x143, 0, uVar2);\n                (*pcVar1)(var_8h, 0x151, uVar2, iVar3);\n            }\n            uVar5 = var_ch;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x21);\n        fcn.004041fb(arg_8h, 0x15, *(arg_14h + 0x30 + var_ch * 4));\n        fcn.004041fb(arg_8h, 0x16, *(arg_14h + 0x34 + uVar5 * 4));\n        iVar3 = 0;\n        uVar2 = 0;\n        if (*0x42a24c < 1) {\ncode_r0x00404e94:\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(var_4h, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongW)(var_4h, 0xfffffff0, uVar5 & 0xfffffffb);\n        }\n        else {\n            var_18h = var_10h + 8;\n            do {\n                puVar8 = var_18h + 4;\n                if (*puVar8 != 0) {\n                    uVar5 = *var_18h;\n                    var_40h = uVar5 & 0x20;\n                    var_4ch = 0xffff0002;\n                    var_48h = 0xd;\n                    var_3ch = 0x20;\n                    var_50h = uVar2;\n                    var_38h = puVar8;\n                    var_24h = iVar3;\n                    if ((uVar5 & 2) == 0) {\n                        if ((uVar5 & 4) == 0) {\n                            uVar4 = (*pcVar1)(var_4h, 0x1132, 0, &var_50h);\n                            *(*0x4236e0 + iVar3 * 4) = uVar4;\n                        }\n                        else {\n                            uVar2 = (*pcVar1)(var_4h, 0x110a, 3, uVar2);\n                        }\n                    }\n                    else {\n                        var_48h = 0x4d;\n                        var_28h = 1;\n                        uVar2 = (*pcVar1)(var_4h, 0x1132, 0, &var_50h);\n                        var_1ch = 1;\n                        *(*0x4236e0 + iVar3 * 4) = uVar2;\n                        uVar2 = *(*0x4236e0 + iVar3 * 4);\n                    }\n                }\n                iVar3 = iVar3 + 1;\n                var_18h = var_18h + 0x206;\n            } while (iVar3 < *0x42a24c);\n            if (var_1ch == 0) goto code_r0x00404e94;\n        }\n        if (var_ch == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(var_8h, 5);\n            fcn.00404230(var_8h);\n            goto code_r0x0040524b;\n        }\n        uVar2 = var_4h;\n        fcn.00404230(var_4h);\n    }\n    if (arg_ch == 0x405) {\n        arg_10h = 0;\n        arg_ch = 0x40f;\n        arg_14h = 1;\n    }\n    if (((arg_ch == 0x4e) || (arg_ch == 0x413)) && ((var_ch = arg_14h,  arg_ch == 0x413 || (*(arg_14h + 4) == 0x408))))\n    {\n        if (((*0x42a21c & 0x200) == 0) &&\n           (((arg_ch == 0x413 || (*(arg_14h + 8) == -2)) && (iVar3 = fcn.00404bb6(var_4h, arg_ch != 0x413),  -1 < iVar3)\n            ))) {\n            puVar8 = iVar3 * 0x818 + 8 + var_10h;\n            uVar5 = *puVar8;\n            if ((uVar5 & 0x10) == 0) {\n                if ((uVar5 & 0x40) == 0) {\n                    uVar5 = uVar5 ^ 1;\n                }\n                else {\n                    uVar6 = uVar5 ^ 0x80;\n                    if (uVar6 < '\\0') {\n                        uVar5 = uVar5 & 0xffffff00 | uVar6 & 0xff | 1;\n                    }\n                    else {\n                        uVar5 = uVar5 & 0xffffff00 | uVar6 & 0xfe;\n                    }\n                }\n                *puVar8 = uVar5;\n                fcn.0040117d(iVar3);\n                arg_10h = iVar3 + 1;\n                arg_14h = ~*0x42a21c >> 8 & 1;\n                arg_ch = 0x40f;\n            }\n        }\n        if (var_ch != 0) {\n            if (*(var_ch + 8) == -0x1c3) {\n                (*pcVar1)(var_4h, 0x419, 0, *(var_ch + 0x5c));\n            }\n            if (*(var_ch + 8) == -0x1c7) {\n                if (*(var_ch + 0xc) == 2) {\n                    puVar8 = *(var_ch + 0x5c) * 0x818 + 8 + var_10h;\n                    *puVar8 = *puVar8 | 0x20;\n                }\n                else {\n                    puVar8 = *(var_ch + 0x5c) * 0x818 + 8 + var_10h;\n                    *puVar8 = *puVar8 & 0xffffffdf;\n                }\n            }\n        }\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h != 0x3f9) || (arg_10h >> 0x10 != 1)) || (iVar3 = (*pcVar1)(var_8h, 0x147, 0, 0),  iVar3 == -1))\n        goto code_r0x0040524b;\n        iVar3 = (*pcVar1)(var_8h, 0x150, iVar3, 0);\n        if ((iVar3 == -1) || (*(var_14h + iVar3 * 4) == 0)) {\n            iVar3 = 0x20;\n        }\n        fcn.00401299(iVar3);\n        (*pcVar1)(arg_8h, 0x420, 0, iVar3);\n        arg_10h = -1;\n        arg_14h = 0;\n        arg_ch = 0x40f;\n    }\n    if (arg_ch == 0x200) {\n        (*pcVar1)(var_4h, 0x200, 0, 0);\n    }\n    if (arg_ch == 0x40b) {\n        if (*0x4236cc != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(*0x4236cc);\n        }\n        if (*0x4236e0 != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(*0x4236e0);\n        }\n        *0x4236cc = 0;\n        *0x4236e0 = 0;\n        *0x42a280 = 0;\n    }\n    if (arg_ch == 0x40f) {\n        fcn.004011ef(0, 0);\n        if (arg_10h != 0) {\n            iVar3 = arg_10h;\n            if (arg_10h != -1) {\n                iVar3 = arg_10h + -1;\n            }\n            fcn.00404c36(8, iVar3);\n        }\n        if (arg_14h != 0) {\n            arg_14h = fcn.004012e2(*0x4236e0);\n            fcn.00401299(arg_14h);\n            iVar3 = 0;\n            iVar7 = 0;\n            if (0 < arg_14h) {\n                do {\n                    if (*(var_14h + iVar3 * 4) != 0) {\n                        iVar7 = iVar7 + 1;\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < arg_14h);\n            }\n            (*pcVar1)(var_8h, 0x14e, iVar7, 0);\n            arg_ch = 0x420;\n        }\n        fcn.004011ef(0, 0);\n        var_1ch = *0x4236e0;\n        var_38h = 0xf030;\n        var_10h = 0;\n        if (0 < *0x42a24c) {\n            puVar8 = *0x42a248 + 8;\n            do {\n                uVar5 = *(var_1ch + var_10h * 4);\n                if (uVar5 != 0) {\n                    uVar6 = *puVar8;\n                    var_44h = 8;\n                    if ((uVar6 & 0x100) != 0) {\n                        var_34h = puVar8 + 4;\n                        var_44h = 9;\n                        *(puVar8 + 1) = *(puVar8 + 1) & 0xfe;\n                    }\n                    if ((uVar6 & 0x40) == 0) {\n                        iVar3 = (uVar6 & 1) + 1;\n                        if ((uVar6 & 0x10) != 0) {\n                            iVar3 = (uVar6 & 1) + 4;\n                        }\n                    }\n                    else {\n                        iVar3 = 3;\n                    }\n                    var_3ch = (iVar3 << 0xb | uVar6 & 8) * 2 | uVar6 & 0x20;\n                    var_40h = uVar5;\n                    (*pcVar1)(var_4h, 0x1102, (uVar6 >> 5 & 1U) + 1, uVar5);\n                    (*pcVar1)(var_4h, 0x113f, 0, &var_44h);\n                }\n                var_10h = var_10h + 1;\n                puVar8 = puVar8 + 0x206;\n            } while (var_10h < *0x42a24c);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(var_4h, 0, 1);\n        if (*(*0x4291dc + 0x10) != 0) {\n            fcn.00404b89(5);\n            uVar2 = 0x3ff;\n            fcn.00404b71();\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n    if ((arg_ch == 0x420) && ((*0x42a21c & 0x100) != 0)) {\n        iVar3 = (arg_14h == 0x20) << 3;\n        (*_sym.imp.USER32.dll_ShowWindow)(var_4h, iVar3, uVar2);\n        uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fe, iVar3);\n        (*pcVar1)(uVar2);\n    }\ncode_r0x0040524b:\n    fcn.00404262(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 3406
    },
    "0040542b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040542b(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    ushort *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    ushort *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint uStack32;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar10 = *0x4291e4;\n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    iVar9 = 0;\n    var_4h = *0x4291e4;\n    if (arg_ch == 0x110) {\n        var_30h = 0xffffffff;\n        var_24h = 0xffffffff;\n        var_38h = 2;\n        var_34h = 0;\n        var_2ch = NULL;\n        var_28h = 0;\n        var_20h = 0;\n        uStack32 = 0;\n        iVar10 = *(*0x42a214 + 0x5c);\n        iVar9 = *(*0x42a214 + 0x60);\n        *0x4291d0 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x403);\n        *0x4291c8 = (*pcVar1)(arg_8h, 0x3ee);\n        *0x4291e4 = (*pcVar1)(arg_8h, 0x3f8);\n        var_4h = *0x4291e4;\n        fcn.00404230(*0x4291d0);\n        *0x4291d4 = fcn.00404b89(4);\n        *0x4291ec = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(var_4h, &var_18h);\n        var_30h = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n        pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n        var_30h = var_10h - var_30h;\n        (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1061, 0, &var_38h);\n        (*pcVar2)(var_4h, 0x1036, 0x4000, 0x4000);\n        if (-1 < iVar10) {\n            (*pcVar2)(var_4h, 0x1001, 0, iVar10);\n            (*pcVar2)(var_4h, 0x1026, 0, iVar10);\n        }\n        if (-1 < iVar9) {\n            (*pcVar2)(var_4h, 0x1024, 0, iVar9);\n        }\n        fcn.004041fb(arg_8h, 0x1b, *(arg_14h + 0x30));\n        if ((*0x42a21c & 3) != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x4291d0, 0);\n            if ((*0x42a21c & 2) == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(var_4h, 8);\n            }\n            else {\n                *0x4291d0 = 0;\n            }\n            fcn.00404230(*0x4291c8);\n        }\n        uVar3 = (*pcVar1)(arg_8h, 0x3ec);\n        (*pcVar2)(uVar3, 0x401, 0, 0x75300000);\n        if ((*0x42a21c & 4) != 0) {\n            (*pcVar2)(uVar3, 0x409, 0, iVar9);\n            (*pcVar2)(uVar3, 0x2001, 0, iVar10);\n        }\ncode_r0x004057b4:\n        uVar3 = 0;\n    }\n    else {\n        if (arg_ch == 0x405) {\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3ec, 0, &var_8h);\n            uVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.004053bf, uVar3);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n        }\n        pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n        if (arg_ch == 0x111) {\n            if (arg_10h == 0x403) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x4291d0, 0);\n                (*pcVar1)(iVar10, 8);\n                fcn.00404230(iVar10);\n                goto code_r0x00405631;\n            }\n        }\n        else {\ncode_r0x00405631:\n            iVar10 = 1;\n            if (arg_ch == 0x404) {\n                if (*0x4291cc != 0) {\n                    *0x421eb8 = 2;\n                    fcn.004041d4();\n                    goto code_r0x00405656;\n                }\n                (*pcVar1)(*0x42a208, 8);\n                if (*0x42a2ac == 0) {\n                    fcn.004052ec(*(*0x4226c0 + 0x34), 0);\n                }\n                fcn.004041d4(1);\n            }\n            if ((arg_ch == 0x7b) && (arg_10h == var_4h)) {\n                iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1004, 0, 0);\n                if (0 < iVar4) {\n                    uVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    uVar5 = fcn.004062a6(0, 0xffffffe1);\n                    (*_sym.imp.USER32.dll_AppendMenuW)(uVar3, 0, 1, uVar5);\n                    iVar6 = arg_14h;\n                    iVar8 = arg_14h >> 0x10;\n                    if (arg_14h == -1) {\n                        (*_sym.imp.USER32.dll_GetWindowRect)(var_4h, &var_18h);\n                        iVar6 = var_18h;\n                        iVar8 = var_14h;\n                    }\n                    iVar6 = (*_sym.imp.USER32.dll_TrackPopupMenu)(uVar3, 0x180, iVar6, iVar8, 0, arg_8h, 0);\n                    if (iVar6 == 1) {\n                        var_38h = 0;\n                        var_2ch = 0x4236e8;\n                        var_28h = 0x1000;\n                        arg_8h = iVar4;\n                        do {\n                            arg_8h = arg_8h + -1;\n                            iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1073, arg_8h, &var_40h);\n                            iVar10 = iVar10 + 2 + iVar6;\n                        } while (arg_8h != 0);\n                        (*_sym.imp.USER32.dll_OpenClipboard)(0);\n                        (*_sym.imp.USER32.dll_EmptyClipboard)();\n                        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar10 * 2);\n                        puVar7 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar3);\n                        do {\n                            var_2ch = puVar7;\n                            iVar10 = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1073, iVar9, &var_40h);\n                            puVar7 = puVar7 + iVar10;\n                            *puVar7 = 0xd;\n                            puVar7[1] = 10;\n                            puVar7 = puVar7 + 2;\n                            iVar9 = iVar9 + 1;\n                        } while (iVar9 < iVar4);\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar3);\n                        (*_sym.imp.USER32.dll_SetClipboardData)(0xd, uVar3);\n                        (*_sym.imp.USER32.dll_CloseClipboard)();\n                    }\n                }\n                goto code_r0x004057b4;\n            }\n        }\ncode_r0x00405656:\n        uVar3 = fcn.00404262(arg_ch, arg_10h, arg_14h);\n    }\n    return uVar3;\n}\n",
        "token_count": 2027
    },
    "0040594e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040594e(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t unaff_retaddr;\n    \n    iVar1 = fcn.00405d55(param_1);\n    if (iVar1 != -1) {\n        if ((param_1 & 1) == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(param_1);\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)();\n        }\n        if (iVar2 != 0) {\n            return 1;\n        }\n        if ((unaff_retaddr & 4) == 0) {\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(param_1, iVar1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 188
    },
    "00405996": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405996(int16_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint lpFindFileData;\n    uint var_22ch;\n    int16_t var_228h;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch & 4;\n    var_8h = fcn.00405c61(arg_8h);\n    if ((arg_ch & 8) == 0) {\n        uVar1 = arg_ch & 1;\n        if ((uVar1 == 0) || ((var_8h != 0 && ((arg_ch & 2) != 0)))) {\n            fcn.00406284(0x4256f0, arg_8h);\n            if (uVar1 == 0) {\n                fcn.00405ba5(arg_8h);\n            }\n            else {\n                sub.KERNEL32.dll_lstrcatW(0x4256f0, L\"\\\\*.*\");\n            }\n            if ((*arg_8h != 0) || (*0x4256f0 == 0x5c)) {\n                sub.KERNEL32.dll_lstrcatW(arg_8h, 0x40a014);\n            }\n            iVar2 = sub.KERNEL32.dll_lstrlenW(arg_8h);\n            iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(0x4256f0, &lpFindFileData);\n            if (iVar3 != -1) {\n                do {\n                    if ((var_22ch != 0x2e) || ((var_22ch._2_2_ != 0 && ((var_22ch._2_2_ != 0x2e || (var_228h != 0))))))\n                    {\n                        fcn.00406284(arg_8h + iVar2, &var_22ch);\n                        if ((lpFindFileData & 0x10) == 0) {\n                            iVar4 = fcn.0040594e(arg_8h, var_4h);\n                            if (iVar4 == 0) {\n                                if (var_4h == 0) {\n                                    *0x42a2a8 = *0x42a2a8 + 1;\n                                }\n                                else {\n                                    fcn.004052ec(0xfffffff1, arg_8h);\n                                    fcn.0040604a(arg_8h, 0);\n                                }\n                            }\n                            else {\n                                fcn.004052ec(0xfffffff2, arg_8h);\n                            }\n                        }\n                        else if ((arg_ch & 3) == 3) {\n                            fcn.00405996(arg_8h, arg_ch);\n                        }\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar3, &lpFindFileData);\n                } while (iVar4 != 0);\n                (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n            }\n            if (uVar1 != 0) {\n                (arg_8h + iVar2)[-1] = 0;\n            }\n        }\n        if (uVar1 != 0) {\n            if (var_8h != 0) {\n                iVar2 = fcn.004065c7(arg_8h);\n                if (iVar2 == 0) {\n                    return;\n                }\n                fcn.00405b59(arg_8h);\n                iVar2 = fcn.0040594e(arg_8h, var_4h | 1);\n                if (iVar2 != 0) {\n                    fcn.004052ec(0xffffffe5, arg_8h);\n                    return;\n                }\n                if (var_4h != 0) {\n                    fcn.004052ec(0xfffffff1, arg_8h);\n                    fcn.0040604a(arg_8h, 0);\n                    return;\n                }\n            }\n            *0x42a2a8 = *0x42a2a8 + 1;\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(arg_8h);\n        *0x42a2a8 = *0x42a2a8 + (iVar2 == 0);\n    }\n    return;\n}\n",
        "token_count": 987
    },
    "00405c61": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00405c61(uint param_1)\n\n{\n    int16_t *piVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int16_t *piVar5;\n    \n    fcn.00406284(0x425ef0, param_1);\n    piVar1 = fcn.00405c04(0x425ef0);\n    if ((piVar1 != NULL) &&\n       ((piVar5 = piVar1,  fcn.00406518(piVar1),  (*0x42a21c & 0x80) == 0 || ((*piVar1 != 0 && (*piVar1 != 0x5c)))))) {\n        while( true ) {\n            uVar4 = 0x425ef0;\n            iVar3 = sub.KERNEL32.dll_lstrlenW(0x425ef0);\n            if (iVar3 <= piVar1 + -0x212f78 >> 1) {\n                fcn.00405b59(0x425ef0, uVar4, piVar5);\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(0x425ef0);\n                return iVar3 != -1;\n            }\n            puVar2 = fcn.004065c7(0x425ef0);\n            if ((puVar2 != NULL) && ((*puVar2 & 0x10) == 0)) break;\n            piVar5 = 0x425ef0;\n            fcn.00405ba5();\n        }\n    }\n    return false;\n}\n",
        "token_count": 352
    },
    "00405d55": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00405d55(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    if (uVar1 != 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(unaff_retaddr, uVar1 & 0xfffffffe);\n    }\n    return uVar1;\n}\n",
        "token_count": 104
    },
    "00405ed0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00405ed0(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *hFile;\n    uchar *arg_10h;\n    int32_t lpBuffer;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetShortPathNameW;\n    *0x426d88 = 0x55004e;\n    *0x426d8c = 0x4c;\n    if (param_2 != 0) {\n        uVar2 = fcn.00405d7a(param_2, 0, 1);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n        iVar3 = (*pcVar1)(param_2, 0x426d88, 0x400);\n        if (iVar3 == 0) {\n            return;\n        }\n        if (0x400 < iVar3) {\n            return;\n        }\n    }\n    iVar3 = (*pcVar1)(param_1, 0x427588, 0x400);\n    if ((iVar3 != 0) && (iVar3 < 0x401)) {\n        iVar3 = (*_sym.imp.USER32.dll_wsprintfA)(0x426988, \"%ls=%ls\\r\\n\", 0x426d88, 0x427588);\n        fcn.004062a6(0x427588, *(*0x42a214 + 0x128));\n        hFile = fcn.00405d7a(0x427588, 0xc0000000, 4);\n        if (hFile != 0xffffffff) {\n            arg_10h = (*_sym.imp.KERNEL32.dll_GetFileSize)(hFile, 0);\n            lpBuffer = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, arg_10h + iVar3 + 10);\n            if ((lpBuffer != 0) && (puVar7 = arg_10h,  iVar4 = fcn.00405dfd(hFile, lpBuffer, arg_10h),  iVar4 != 0)) {\n                iVar4 = fcn.00405cdf(lpBuffer, \"[Rename]\\r\\n\");\n                if (iVar4 == 0) {\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)(arg_10h + lpBuffer, \"[Rename]\\r\\n\");\n                    arg_10h = arg_10h + 10;\n                    puVar7 = arg_10h;\n                }\n                else {\n                    hFile = puVar7;\n                    puVar5 = fcn.00405cdf(iVar4 + 10, 0x40a560);\n                    puVar7 = arg_10h;\n                    if (puVar5 != NULL) {\n                        puVar7 = arg_10h + lpBuffer;\n                        puVar6 = puVar7 + iVar3;\n                        for (; puVar5 < puVar7; puVar7 = puVar7 + -1) {\n                            *puVar6 = *puVar7;\n                            puVar6 = puVar6 + -1;\n                        }\n                        puVar7 = puVar5 + (1 - lpBuffer);\n                    }\n                }\n                fcn.00405d35(puVar7 + lpBuffer, 0x426988, iVar3);\n                (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0, 0, 0);\n                fcn.00405e2c(hFile, lpBuffer, arg_10h + iVar3);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(lpBuffer);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hFile);\n        }\n    }\n    return;\n}\n",
        "token_count": 842
    },
    "004065c7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004065c7(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(param_1, 0x426738);\n    if (iVar1 == -1) {\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n        uVar2 = 0x426738;\n    }\n    return uVar2;\n}\n",
        "token_count": 114
    },
    "0040117d": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.0040117d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    uVar1 = *(param_1 * 0x818 + 8 + *0x42a248);\n    if ((uVar1 & 2) != 0) {\n        uVar4 = param_1 + 1;\n        if (uVar4 < *0x42a24c) {\n            puVar3 = uVar4 * 0x818 + 8 + *0x42a248;\n            iVar5 = 0;\n            do {\n                uVar2 = *puVar3;\n                if ((uVar2 & 2) == 0) {\n                    if ((uVar2 & 4) == 0) {\n                        iVar6 = iVar5;\n                        if ((uVar2 & 0x10) == 0) {\n                            *puVar3 = (uVar2 ^ uVar1) & 1 ^ uVar2;\n                        }\n                    }\n                    else {\n                        iVar6 = iVar5 + -1;\n                        if (iVar5 == 0) {\n                            return;\n                        }\n                    }\n                }\n                else {\n                    iVar6 = iVar5 + 1;\n                }\n                uVar4 = uVar4 + 1;\n                puVar3 = puVar3 + 0x206;\n                iVar5 = iVar6;\n            } while (uVar4 < *0x42a24c);\n        }\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "004012e2": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004012e2(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    bool bVar3;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = *0x42a214 + 0x94;\n    do {\n        uVar1 = 0;\n        if (*var_8h != 0) {\n            bVar3 = *0x42a24c == 0;\n            if (*0x42a24c != 0) {\n                puVar2 = *0x42a248 + 8;\n                do {\n                    if (((*puVar2 & 6) == 0) &&\n                       (((arg_8h == 0 || (*(arg_8h + uVar1 * 4) != 0)) &&\n                        ((puVar2[-1] & 1 << (var_4h & 0x1f)) != (*puVar2 & 1) << (var_4h & 0x1f))))) break;\n                    uVar1 = uVar1 + 1;\n                    puVar2 = puVar2 + 0x206;\n                } while (uVar1 < *0x42a24c);\n                bVar3 = uVar1 == *0x42a24c;\n            }\n            if (bVar3) {\n                return var_4h;\n            }\n        }\n        var_4h = var_4h + 1;\n        var_8h = var_8h + 1;\n        if (0x1f < var_4h) {\n            return var_4h;\n        }\n    } while( true );\n}\n",
        "token_count": 394
    },
    "00402d44": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402d44(uint arg_8h, uint lpSubKey, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_210h;\n    uint hKey;\n    \n    iVar1 = fcn.004060f1(arg_8h, lpSubKey, CONCAT31((arg_10h & 0x300) >> 8, 8), &hKey);\n    pcVar2 = _sym.imp.ADVAPI32.dll_RegEnumKeyW;\n    if (iVar1 == 0) {\n        do {\n            iVar1 = (*pcVar2)(hKey, 0, &var_210h, 0x105);\n            if (iVar1 != 0) break;\n            if ((arg_10h & 1) != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n                return 0x3eb;\n            }\n            iVar1 = fcn.00402d44(hKey, &var_210h, arg_10h);\n        } while (iVar1 == 0);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        pcVar2 = fcn.0040665e(3);\n        if (pcVar2 == NULL) {\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(arg_8h, lpSubKey);\n        }\n        else {\n            iVar1 = (*pcVar2)(arg_8h, lpSubKey, arg_10h & 0x300, 0);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 365
    },
    "004043ba": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004043ba(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int16_t *piVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int16_t *var_ch;\n    int32_t var_8h;\n    code *var_4h;\n    \n    pcVar4 = _sym.imp.USER32.dll_SendMessageW;\n    if (arg_ch == 0x110) {\n        iVar7 = *(arg_14h + 0x30);\n        if (iVar7 < 0) {\n            iVar7 = *(*0x4291dc - (iVar7 * 4 + 4));\n        }\n        piVar5 = *0x42a258 + iVar7 * 2;\n        iVar2 = *piVar5;\n        piVar5 = piVar5 + 1;\n        var_8h = 0;\n        var_4h = fcn.0040436b;\n        if (iVar2 != 2) {\n            var_4h = fcn.00404331;\n        }\n        uVar9 = ~*(arg_14h + 0x14) >> 5 & 1 | *(arg_14h + 0x14) & 1;\n        var_ch = piVar5;\n        fcn.004041fb(arg_8h, 0x22, *(arg_14h + 0x34));\n        fcn.004041fb(arg_8h, 0x23, *(arg_14h + 0x38));\n        (*_sym.imp.USER32.dll_CheckDlgButton)(arg_8h, (uVar9 == 0) + 0x40a, 1);\n        fcn.0040421d(uVar9);\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        fcn.00404230(uVar6);\n        pcVar4 = _sym.imp.USER32.dll_SendMessageW;\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x45b, 1, 0);\n        iVar7 = *(*0x42a214 + 0x68);\n        if (iVar7 < 0) {\n            iVar7 = (*_sym.imp.USER32.dll_GetSysColor)(-iVar7);\n        }\n        (*pcVar4)(uVar6, 0x443, 0, iVar7);\n        (*pcVar4)(uVar6, 0x445, 0, 0x4010000);\n        uVar8 = sub.KERNEL32.dll_lstrlenW(piVar5);\n        (*pcVar4)(uVar6, 0x435, 0, uVar8);\n        *0x4216b4 = 0;\n        (*pcVar4)(uVar6, 0x449, iVar2, &var_ch);\n        *0x4216b4 = 0;\n        return 0;\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h >> 0x10 != 0) || (*0x4216b4 != 0)) || (puVar1 = *0x4226c0 + 0x14,  (*puVar1 & 0x20) == 0))\n        goto code_r0x00404632;\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x40a, 0xf0, 0, 0);\n        uVar9 = (*pcVar4)(uVar6);\n        *puVar1 = *puVar1 & 0xfffffffe | uVar9 & 1;\n        fcn.0040421d(uVar9 & 1);\n        fcn.00404645();\n    }\n    if (arg_ch == 0x4e) {\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        if ((*(arg_14h + 8) == 0x70b) && (*(arg_14h + 0xc) == 0x201)) {\n            var_8h = *(arg_14h + 0x1c);\n            var_ch = *(arg_14h + 0x18);\n            var_4h = 0x4281a0;\n            if (var_8h - var_ch < 0x800) {\n                (*pcVar4)(uVar6, 1099, 0, &var_ch);\n                pcVar3 = _sym.imp.USER32.dll_LoadCursorW;\n                uVar6 = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f02);\n                (*_sym.imp.USER32.dll_SetCursor)(uVar6);\n                uVar8 = 1;\n                uVar6 = var_4h;\n                fcn.00404669(arg_8h, var_4h);\n                uVar6 = (*pcVar3)(0, 0x7f00, arg_8h, uVar6, uVar8);\n                (*_sym.imp.USER32.dll_SetCursor)(uVar6);\n            }\n        }\n        if ((*(arg_14h + 8) == 0x700) && (*(arg_14h + 0xc) == 0x100)) {\n            if (*(arg_14h + 0x10) == 0xd) {\n                (*pcVar4)(*0x42a208, 0x111, 1, 0);\n            }\n            if (*(arg_14h + 0x10) == 0x1b) {\n                (*pcVar4)(*0x42a208, 0x10, 0, 0);\n            }\n            return 1;\n        }\n    }\n    else if (arg_ch == 0x40b) {\n        *0x4216b4 = *0x4216b4 + 1;\n    }\ncode_r0x00404632:\n    uVar6 = fcn.00404262(arg_ch, arg_10h, arg_14h);\n    return uVar6;\n}\n",
        "token_count": 1397
    },
    "004052ec": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004052ec(uint arg_8h, int32_t lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *0x4291e4;\n    if (*0x4291e4 != 0) {\n        var_8h = *0x42a2d4;\n        uVar4 = *0x42a2d4 & 1;\n        if (uVar4 == 0) {\n            fcn.004062a6(0x4226c8, arg_8h);\n        }\n        iVar2 = sub.KERNEL32.dll_lstrlenW(0x4226c8);\n        if (lpString2 != 0) {\n            iVar3 = sub.KERNEL32.dll_lstrlenW(lpString2);\n            if (0xfff < iVar3 + iVar2) {\n                return;\n            }\n            sub.KERNEL32.dll_lstrcatW(0x4226c8, lpString2);\n        }\n        if ((var_8h & 4) == 0) {\n            (*_sym.imp.USER32.dll_SetWindowTextW)(*0x4291c8, 0x4226c8);\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        if ((var_8h & 2) == 0) {\n            var_1ch = 0x4226c8;\n            var_30h = 1;\n            var_2ch = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1004, 0, 0);\n            var_2ch = var_2ch - uVar4;\n            var_28h = 0;\n            (*pcVar1)(var_4h, 0x104d - uVar4, 0, &var_30h);\n            (*pcVar1)(var_4h, 0x1013, var_2ch, 0);\n        }\n        if (uVar4 != 0) {\n            *(iVar2 * 2 + 0x4226c8) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 538
    },
    "00406751": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.00406751(uint32_t param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (*0x427d8c == 0) {\n        uVar2 = 0;\n        do {\n            iVar3 = 8;\n            uVar1 = uVar2;\n            do {\n                uVar1 = uVar1 >> 1 ^ -((uVar1 & 1) != 0) & 0xedb88320;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            *(uVar2 * 4 + 0x427d88) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x100);\n    }\n    param_1 = ~param_1;\n    if (param_3 != 0) {\n        do {\n            param_1 = param_1 >> 8 ^ *((param_1 & 0xff ^ *param_2) * 4 + 0x427d88);\n            param_2 = param_2 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return ~param_1;\n}\n",
        "token_count": 308
    },
    "004011ef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004011ef(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *0x42a248;\n    iVar5 = arg_8h * 0x818 + *0x42a248;\n    var_4h = 0;\n    var_8h = 0;\n    if (((*(iVar5 + 8) & 2) != 0) && (arg_ch != 0)) {\n        arg_8h = arg_8h + 1;\n        *(iVar5 + 8) = *(iVar5 + 8) & 0xffffffbe;\n    }\n    if (arg_8h < *0x42a24c) {\n        do {\n            puVar1 = arg_8h * 0x818 + 8 + iVar2;\n            uVar3 = arg_8h + 1;\n            uVar4 = *puVar1;\n            if ((uVar4 & 2) != 0) {\n                uVar3 = fcn.004011ef(arg_8h, 1);\n                uVar4 = *puVar1;\n            }\n            if ((uVar4 & 4) != 0) {\n                if (var_4h == 0) {\n                    return uVar3;\n                }\n                if (var_8h != 0) {\n                    *(iVar5 + 8) = *(iVar5 + 8) | 0x40;\n                    return uVar3;\n                }\n                *(iVar5 + 8) = *(iVar5 + 8) & 0xffffff7f | 1;\n                return uVar3;\n            }\n            if ((uVar4 & 0x40) != 0) {\n                var_4h = var_4h + 1;\n            }\n            if ((uVar4 & 1) == 0) {\n                var_8h = var_8h + 1;\n            }\n            else {\n                var_4h = var_4h + 1;\n            }\n            arg_8h = uVar3;\n        } while (uVar3 < *0x42a24c);\n    }\n    return 0;\n}\n",
        "token_count": 538
    },
    "00403116": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403116(int32_t nDenominator, uint arg_ch, int32_t arg_10h, uint32_t nNumber)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t arg_10h_00;\n    uint32_t uVar4;\n    uint uVar5;\n    uint var_90h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = nNumber;\n    var_8h = nNumber;\n    if (arg_10h == 0) {\n        var_8h = 0x8000;\n    }\n    var_4h = 0;\n    iVar2 = arg_10h;\n    if (arg_10h == 0) {\n        iVar2 = 0x410ea0;\n    }\n    if (-1 < nDenominator) {\n        fcn.00403311(*0x42a278 + nDenominator);\n    }\n    uVar5 = 4;\n    iVar1 = fcn.004032fb(&nNumber, 4);\n    if (iVar1 != 0) {\n        if ((nNumber & 0x80000000) == 0) {\n            if (arg_10h == 0) {\n                while( true ) {\n                    if (nNumber < 1) {\n                        return var_4h;\n                    }\n                    uVar4 = var_8h;\n                    if (nNumber < var_8h) {\n                        uVar4 = nNumber;\n                    }\n                    iVar2 = fcn.004032fb(uVar5, uVar4);\n                    if (iVar2 == 0) break;\n                    iVar2 = fcn.00405e2c(arg_ch, 0x40cea0, uVar4);\n                    if (iVar2 == 0) {\n                        return 0xfffffffe;\n                    }\n                    var_4h = var_4h + uVar4;\n                    nNumber = nNumber - uVar4;\n                }\n            }\n            else {\n                if (nNumber < uVar4) {\n                    uVar4 = nNumber;\n                }\n                iVar2 = fcn.004032fb(arg_10h, uVar4);\n                if (iVar2 != 0) {\n                    return uVar4;\n                }\n            }\n        }\n        else {\n            var_ch = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            fcn.004067bf();\n            uVar4 = nNumber & 0x7fffffff;\n            nNumber = uVar4;\n            if (uVar4 == 0) {\n                return var_4h;\n            }\n            while( true ) {\n                uVar3 = 0x4000;\n                if (nNumber < 0x4000) {\n                    uVar3 = nNumber;\n                }\n                uVar5 = 0x40cea0;\n                iVar1 = fcn.004032fb();\n                if (iVar1 == 0) break;\n                nNumber = nNumber - uVar3;\n                *0x40ce28 = 0x40cea0;\n                *0x40ce2c = uVar3;\n                while( true ) {\n                    *0x40ce34 = var_8h;\n                    *0x40ce30 = iVar2;\n                    var_10h = fcn.004067df(uVar5);\n                    if (var_10h < 0) {\n                        return 0xfffffffc;\n                    }\n                    arg_10h_00 = *0x40ce30 - iVar2;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n                    if (((*0x42a2d4 & 1) != 0) && ((200 < iVar1 - var_ch || (nNumber == 0)))) {\n                        uVar5 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar4 - nNumber, 100, uVar4);\n                        (*_sym.imp.USER32.dll_wsprintfW)(&var_90h, L\"... %d%%\", uVar5);\n                        uVar5 = 0;\n                        fcn.004052ec(0, &var_90h);\n                        var_ch = iVar1;\n                    }\n                    if (arg_10h_00 == 0) break;\n                    if (arg_10h == 0) {\n                        uVar5 = arg_ch;\n                        iVar1 = fcn.00405e2c(arg_ch, iVar2, arg_10h_00);\n                        if (iVar1 == 0) {\n                            return 0xfffffffe;\n                        }\n                    }\n                    else {\n                        var_8h = var_8h - arg_10h_00;\n                        iVar2 = *0x40ce30;\n                    }\n                    var_4h = var_4h + arg_10h_00;\n                    if (var_10h == 1) {\n                        return var_4h;\n                    }\n                }\n                if (nNumber < 1) {\n                    return var_4h;\n                }\n            }\n        }\n    }\n    return 0xfffffffd;\n}\n",
        "token_count": 1133
    },
    "00404262": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404262(int32_t arg_8h, uint hdc, uint hWnd)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    if ((((arg_8h - 0x133U < 6) &&\n         (puVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xffffffeb),  pcVar1 = _sym.imp.USER32.dll_GetSysColor, \n         puVar2 != NULL)) && (puVar2[2] < 2)) && ((puVar2[4] < 3 && ((puVar2[5] & 0xffffffe0) == 0)))) {\n        uVar3 = *puVar2;\n        if ((puVar2[5] & 2) != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetSysColor)(uVar3);\n        }\n        if ((*(puVar2 + 5) & 1) != 0) {\n            (*_sym.imp.GDI32.dll_SetTextColor)(hdc, uVar3);\n        }\n        (*_sym.imp.GDI32.dll_SetBkMode)(hdc, puVar2[4]);\n        var_8h = puVar2[1];\n        if ((*(puVar2 + 5) & 8) != 0) {\n            var_8h = (*pcVar1)(var_8h);\n        }\n        if ((*(puVar2 + 5) & 4) != 0) {\n            (*_sym.imp.GDI32.dll_SetBkColor)(hdc, var_8h);\n        }\n        if ((*(puVar2 + 5) & 0x10) != 0) {\n            var_ch = puVar2[2];\n            if (puVar2[3] != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(puVar2[3]);\n            }\n            uVar3 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            puVar2[3] = uVar3;\n        }\n        return puVar2[3];\n    }\n    return 0;\n}\n",
        "token_count": 494
    },
    "00404b89": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00404b89(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    iVar2 = *0x42a248;\n    iVar3 = *0x42a24c;\n    if (*0x42a24c != 0) {\n        do {\n            if ((*(iVar2 + 8) & 1) != 0) {\n                iVar1 = iVar1 + *(iVar2 + param_1 * 4);\n            }\n            iVar3 = iVar3 + -1;\n            iVar2 = iVar2 + 0x818;\n        } while (iVar3 != 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 167
    },
    "004053bf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.004053bf(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    iVar4 = *0x42a24c;\n    iVar2 = *0x42a248;\n    uVar1 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    *0x42a2d8 = *0x42a2d8 | uVar1;\n    uVar5 = 0;\n    fcn.00404247(0);\n    if (iVar4 != 0) {\n        puVar3 = iVar2 + 0xc;\n        do {\n            iVar4 = iVar4 + -1;\n            if ((*(puVar3 + -1) & 1) != 0) {\n                uVar5 = *puVar3;\n                iVar2 = fcn.00401389();\n                if (iVar2 != 0) {\n                    *0x42a2ac = *0x42a2ac + 1;\n                    break;\n                }\n            }\n            puVar3 = puVar3 + 0x206;\n        } while (iVar4 != 0);\n    }\n    fcn.00404247(0x404, uVar5);\n    (*_sym.imp.ole32.dll_OleUninitialize)();\n    return *0x42a2ac;\n}\n",
        "token_count": 312
    },
    "00401389": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint fcn.00401389(int32_t param_1)\n\n{\n    int32_t *hWndChildAfter;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_retaddr;\n    \n    while ((-1 < param_1 && (hWndChildAfter = param_1 * 0x1c + *0x42a250,  *hWndChildAfter != 1))) {\n        iVar1 = fcn.00401434(hWndChildAfter);\n        if (iVar1 == 0x7fffffff) {\n            return 0x7fffffff;\n        }\n        iVar1 = fcn.0040136d();\n        if (iVar1 == 0) {\n            iVar2 = 1;\n            iVar1 = param_1 + 1;\n        }\n        else {\n            iVar1 = iVar1 + -1;\n            iVar2 = iVar1 - param_1;\n        }\n        param_1 = iVar1;\n        if (unaff_retaddr != 0) {\n            *0x4291ec = *0x4291ec + iVar2;\n            uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*0x4291ec, 30000, *0x4291d4, 0);\n            (*_sym.imp.USER32.dll_SendMessageW)(0x4013a8, 0x402, uVar3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 319
    },
    "00402cff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402cff(uint arg_8h, int16_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t arg_8h_00;\n    \n    if (*arg_ch == 0) {\n        uVar1 = 0x3eb;\n    }\n    else {\n        arg_10h = arg_10h | 0x100020;\n        uVar1 = fcn.00402cb9(arg_8h, &arg_10h);\n        arg_8h_00 = fcn.00406076(uVar1);\n        if (arg_8h_00 == 0) {\n            uVar1 = 6;\n        }\n        else {\n            uVar1 = fcn.00402d44(arg_8h_00, arg_ch, arg_10h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 199
    },
    "00404645": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00404645(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x4216b0;\n    if (*0x42a2ac == 0) {\n        uVar1 = *0x4236e4;\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0xf4, 1, 1);\n    return;\n}\n",
        "token_count": 91
    },
    "00404a42": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404a42(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (arg_ch == 1) {\n        fcn.004058ce(0x3fb, arg_14h);\n        (*pcVar1)(arg_8h, 0x467, 1, arg_14h);\n    }\n    if (arg_ch == 2) {\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)(arg_10h, arg_14h);\n        if ((iVar2 == 0) || (iVar2 = fcn.0040140b(7),  iVar2 != 0)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n        (*pcVar1)(arg_8h, 0x465, 0, uVar3);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 257
    },
    "00404bb6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404bb6(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_38h;\n    uint var_34h;\n    uint var_14h;\n    int32_t lpPoint;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    var_34h = (*_sym.imp.USER32.dll_SendMessageW)(arg_8h, 0x110a, 9, 0);\n    if (arg_ch != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n        lpPoint = uVar2;\n        var_ch = uVar2 >> 0x10;\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n        (*pcVar1)(arg_8h, 0x1111, 0, &lpPoint);\n        var_34h = var_4h;\n        if ((var_8h & 0x66) == 0) {\n            return 0xffffffff;\n        }\n    }\n    var_38h = 4;\n    (*pcVar1)(arg_8h, 0x113e, 0, &var_38h);\n    return var_14h;\n}\n",
        "token_count": 321
    },
    "004058ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004058ea(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 & 0x1fffff;\n    if ((*0x42a2c0 == 0) || (param_2 >> 0x15 == 0)) {\n        if (*0x42a2c8 != 0) {\n            uVar1 = uVar1 ^ 0x180000;\n        }\n        *0x40a3bc = *0x42a208;\n        *0x40a3c0 = *0x42a200;\n        *0x40a3c4 = param_1;\n        *0x40a3c8 = 0x429200;\n        *0x40a3cc = uVar1;\n        (*_sym.imp.USER32.dll_MessageBoxIndirectW)(0x40a3b8);\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00405c04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint16_t * fcn.00405c04(int16_t *param_1)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_CharNextW;\n    piVar2 = (*_sym.imp.USER32.dll_CharNextW)(param_1);\n    uVar3 = (*pcVar1)(piVar2);\n    if (((*param_1 == 0) || (*piVar2 != 0x3a)) || (piVar2[1] != 0x5c)) {\n        if ((*param_1 == 0x5c) && (param_1[1] == 0x5c)) {\n            iVar4 = 2;\n            do {\n                iVar4 = iVar4 + -1;\n                piVar2 = fcn.00405b86();\n                if (*piVar2 == 0) goto code_r0x00405c59;\n                piVar2 = piVar2 + 1;\n            } while (iVar4 != 0);\n        }\n        else {\ncode_r0x00405c59:\n            piVar2 = NULL;\n        }\n    }\n    else {\n        piVar2 = (*pcVar1)(uVar3);\n    }\n    return piVar2;\n}\n",
        "token_count": 294
    },
    "00406152": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406152(uint arg_8h, int32_t arg_ch, uint lpValueName, ushort *arg_14h, int32_t hKey)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    var_4h = 0x800;\n    iVar2 = fcn.004060f1(arg_8h, arg_ch, -(hKey != 0) & 0x100 | 0x20019, &hKey);\n    puVar1 = arg_14h;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, lpValueName, 0, &arg_ch, arg_14h, &var_4h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        puVar1[0x3ff] = 0;\n        if (iVar2 == 0) {\n            if (arg_ch == 1) {\n                return;\n            }\n            if (arg_ch == 2) {\n                return;\n            }\n        }\n    }\n    *puVar1 = 0;\n    return;\n}\n",
        "token_count": 268
    },
    "004062a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004062a6(uint16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint16_t *puVar5;\n    uint32_t arg_ch_00;\n    uint16_t *arg_8h_00;\n    int32_t iVar6;\n    uint16_t *puVar7;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint16_t *ppidl;\n    uint32_t var_4h;\n    \n    puVar7 = arg_8h;\n    if (arg_ch < 0) {\n        arg_ch = *(*0x4291dc - (arg_ch * 4 + 4));\n    }\n    puVar5 = *0x42a258 + arg_ch * 2;\n    arg_8h_00 = 0x4281a0;\n    if ((0x42819f < arg_8h) && (arg_8h + -0x2140d0 >> 1 < 0x800)) {\n        arg_8h = NULL;\n        arg_8h_00 = puVar7;\n    }\n    do {\n        while( true ) {\n            uVar2 = *puVar5;\n            if ((uVar2 == 0) || (0x7ff < (arg_8h_00 + -0x2140d0 & 0xfffffffe))) {\n                *arg_8h_00 = 0;\n                if (arg_8h != NULL) {\n                    fcn.00406284(arg_8h, 0x4281a0);\n                }\n                return;\n            }\n            puVar7 = puVar5 + 1;\n            if (uVar2 < 4) break;\n            if (uVar2 == 4) {\n                *arg_8h_00 = *puVar7;\n                arg_8h_00 = arg_8h_00 + 1;\n                puVar5 = puVar5 + 2;\n            }\n            else {\n                *arg_8h_00 = uVar2;\n                arg_8h_00 = arg_8h_00 + 1;\n                puVar5 = puVar7;\n            }\n        }\n        uVar1 = *puVar7;\n        var_14h = uVar1;\n        uVar4 = (*(puVar5 + 3) & 0x7f) << 7 | uVar1 & 0x7f;\n        var_18h = var_14h | 0x8000;\n        arg_ch_00 = *(puVar5 + 3);\n        var_ch = arg_ch_00;\n        var_10h = arg_ch_00 | 0x8000;\n        if (uVar2 == 2) {\n            puVar7 = 0x2;\n            iVar6 = 2;\n            if ((((*0x42a20c < 0) && (*0x42a20c != 0x5a04)) && (arg_ch_00 != 0x23)) && (arg_ch_00 != 0x2e)) {\n                var_4h = 0;\n            }\n            else {\n                var_4h = 1;\n            }\n            if (*0x42a2a4 != 0) {\n                puVar7 = 0x4;\n                iVar6 = 4;\n            }\n            if (uVar1 < '\\0') {\n                puVar7 = var_14h & 0x40;\n                fcn.00406152(0x80000002, L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", \n                             *0x42a258 + (var_14h & 0x3f) * 2, arg_8h_00, puVar7);\n                if (*arg_8h_00 == 0) {\n                    fcn.004062a6(arg_8h_00, arg_ch_00);\n                    goto code_r0x00406461;\n                }\ncode_r0x0040646a:\n                if (arg_ch_00 == 0x1a) {\n                    sub.KERNEL32.dll_lstrcatW(puVar7, L\"\\\\Microsoft\\\\Internet Explorer\\\\Quick Launch\", arg_8h_00);\n                }\n            }\n            else {\n                if (var_14h == 0x25) {\n                    puVar7 = 0x400;\n                    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(arg_8h_00, 0x400);\n                }\n                else {\n                    if (var_14h == 0x24) {\n                        puVar7 = 0x400;\n                        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(arg_8h_00, 0x400);\n                        iVar6 = 0;\n                    }\n                    while ((iVar6 != 0 &&\n                           (((iVar6 = iVar6 + -1,  *0x42a204 == NULL || (var_4h == 0)) ||\n                            (puVar7 = arg_8h_00,  iVar3 = (**0x42a204)(*0x42a208, (&var_18h)[iVar6], 0, 0, arg_8h_00), \n                            iVar3 != 0))))) {\n                        puVar7 = (&var_18h)[iVar6];\n                        iVar3 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderLocation)(*0x42a208, puVar7, &ppidl);\n                        if (iVar3 == 0) {\n                            puVar7 = ppidl;\n                            iVar3 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)(ppidl, arg_8h_00);\n                            (*_sym.imp.ole32.dll_CoTaskMemFree)(ppidl);\n                            if (iVar3 != 0) break;\n                        }\n                        *arg_8h_00 = 0;\n                    }\n                }\ncode_r0x00406461:\n                arg_ch_00 = var_ch;\n                if (*arg_8h_00 != 0) goto code_r0x0040646a;\n            }\ncode_r0x0040647a:\n            fcn.00406518(arg_8h_00);\n        }\n        else {\n            var_4h = uVar4;\n            if (uVar2 == 3) {\n                if (uVar4 == 0x1d) {\n                    fcn.004061cb(arg_8h_00, *0x42a208);\n                }\n                else {\n                    fcn.00406284(arg_8h_00, uVar4 * 0x800 + 0x42b000);\n                }\n                if (uVar4 - 0x15 < 7) goto code_r0x0040647a;\n            }\n            else if (uVar2 == 1) {\n                fcn.004062a6(arg_8h_00, -1 - uVar4);\n            }\n        }\n        iVar6 = sub.KERNEL32.dll_lstrlenW();\n        arg_8h_00 = arg_8h_00 + iVar6;\n        puVar5 = puVar5 + 2;\n    } while( true );\n}\n",
        "token_count": 1616
    },
    "00406518": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00406518(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    \n    if ((((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (param_1[2] == 0x3f)) && (param_1[3] == 0x5c)) {\n        param_1 = param_1 + 4;\n    }\n    if ((*param_1 != 0) && (in_EAX = fcn.00405bd0(param_1),  in_EAX != 0)) {\n        param_1 = param_1 + 2;\n    }\n    pcVar2 = _sym.imp.USER32.dll_CharNextW;\n    uVar1 = *param_1;\n    uVar3 = in_EAX & 0xffff0000 | uVar1;\n    puVar7 = param_1;\n    puVar6 = param_1;\n    while (uVar1 != 0) {\n        if ((0x1f < uVar3) && (piVar4 = fcn.00405b86(L\"*?|<>/\\\":\", uVar3),  *piVar4 == 0)) {\n            iVar5 = (*pcVar2)(puVar7);\n            fcn.00405d35(puVar6, puVar7, iVar5 - puVar7 >> 1);\n            puVar6 = (*pcVar2)(puVar6);\n        }\n        puVar7 = (*pcVar2)(puVar7);\n        uVar1 = *puVar7;\n        uVar3 = puVar7 & 0xffff0000 | uVar1;\n    }\n    *puVar6 = 0;\n    while( true ) {\n        puVar6 = (*_sym.imp.USER32.dll_CharPrevW)(param_1, puVar6);\n        if ((*puVar6 != 0x20) && (*puVar6 != 0x5c)) break;\n        *puVar6 = 0;\n        if (puVar6 <= param_1) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 525
    },
    "0040136d": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nvoid fcn.0040136d(int32_t param_1)\n\n{\n    if (param_1 < 0) {\n        fcn.004061e4((param_1 + 1) * -0x800 + 0x42b000);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00402c41": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint fcn.00402c41(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = param_1;\n    if (param_1 < 0) {\n        uVar1 = -param_1;\n    }\n    uVar2 = fcn.004062a6((uVar1 >> 4) * 0x800 + 0x40a5a8, *(*0x40ce04 + (uVar1 & 0xf) * 4));\n    if (param_1 < 0) {\n        fcn.00406518(uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 150
    },
    "004046a5": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004046a5(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_ch == 0x110) {\n        fcn.004041fb(arg_8h, 0x1d, *(arg_14h + 0x30));\n        sub.USER32.dll_SetDlgItemTextW(arg_8h, 1000, *(arg_14h + 0x3c) * 0x800 + 0x42b000);\n    }\n    fcn.00404262(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 148
    },
    "004046ec": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004046ec(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    ushort *puVar8;\n    uint32_t uVar9;\n    uint *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    code *var_38h;\n    int32_t var_34h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    code *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_1ch = *0x4226c0;\n    var_8h = *(*0x4226c0 + 0x38);\n    iVar6 = *(*0x4226c0 + 0x3c) * 0x800 + 0x42b000;\n    if (arg_ch == 0x40b) {\n        fcn.004058ce(0x3fb, iVar6);\n        fcn.00406518(iVar6);\n    }\n    if (arg_ch == 0x110) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fb);\n        iVar2 = fcn.00405bd0(iVar6);\n        if ((iVar2 != 0) && (iVar2 = fcn.00405c04(iVar6),  iVar2 == 0)) {\n            fcn.00405b59(iVar6);\n        }\n        *0x4291d8 = arg_8h;\n        (*_sym.imp.USER32.dll_SetWindowTextW)(uVar1, iVar6);\n        var_48h = *(arg_14h + 0x34);\n        var_4ch = 0x1;\n        fcn.004041fb(arg_8h);\n        fcn.004041fb(arg_8h, 0x14, *(arg_14h + 0x30));\n        fcn.00404230(uVar1);\n        pcVar3 = fcn.0040665e(7);\n        if (pcVar3 == NULL) goto code_r0x00404a2d;\n        (*pcVar3)(uVar1, 1);\n    }\n    iVar2 = var_8h;\n    if (arg_ch == 0x111) {\n        if ((arg_10h & 0xffff) == 0x3fb) {\n            if (arg_10h >> 0x10 != 0x300) goto code_r0x00404a2d;\n            arg_ch = 0x40f;\n        }\n        if ((arg_10h & 0xffff) == 0x3e9) {\n            puVar7 = &fcn.004046ec::var_48h;\n            for (iVar5 = 7; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            var_4ch = arg_8h;\n            var_44h = 0x4236e8;\n            var_38h = fcn.00404a42;\n            var_34h = iVar6;\n            var_40h = fcn.004062a6(0x421ec0, iVar2);\n            var_3ch = 0x41;\n            iVar2 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderW)(&fcn.004046ec::var_4ch);\n            if (iVar2 == 0) {\n                arg_ch = 0x40f;\n            }\n            else {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar2);\n                fcn.00405b59(iVar6);\n                if ((*(*0x42a214 + 0x11c) != 0) && (iVar6 == 0x435800)) {\n                    uVar1 = 0;\n                    fcn.004062a6(0, *(*0x42a214 + 0x11c));\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(0x4281a0, 0x4236e8);\n                    if (iVar2 != 0) {\n                        sub.KERNEL32.dll_lstrcatW(uVar1, 0x4281a0, 0x435800);\n                    }\n                }\n                *0x4236d8 = *0x4236d8 + 1;\n                sub.USER32.dll_SetDlgItemTextW(arg_8h, 0x3fb, iVar6);\n            }\n        }\n    }\n    if ((arg_ch == 0x40f) || (arg_ch == 0x405)) {\n        var_4h = 0;\n        var_8h = 0;\n        fcn.004058ce(0x3fb, iVar6);\n        iVar2 = fcn.00405c61(iVar6);\n        if (iVar2 == 0) {\n            var_4h = 1;\n        }\n        fcn.00406284(0x4216b8, iVar6);\n        var_48h = 1;\n        var_ch = fcn.0040665e();\n        if (var_ch != NULL) {\n            puVar8 = NULL;\n            do {\n                var_4ch = &fcn.004046ec::var_24h;\n                iVar2 = (*var_ch)(0x4216b8, &fcn.004046ec::var_2ch, &fcn.004046ec::var_18h);\n                if (iVar2 != 0) {\n                    var_2ch = var_2ch >> 10 | var_28h << 0x16;\n                    var_28h = var_28h >> 10;\n                    var_8h = 1;\n                    goto code_r0x00404986;\n                }\n                if (puVar8 != NULL) {\n                    *puVar8 = 0;\n                }\n                var_48h = 0x4216b8;\n                var_4ch = 0x4048fc;\n                puVar8 = fcn.00405ba5();\n                *puVar8 = 0;\n                puVar8 = puVar8 + -1;\n                *puVar8 = 0x5c;\n            } while (puVar8 != 0x4216b8);\n        }\n        var_4ch = iVar6;\n        fcn.00406284(0x4216b8);\n        puVar8 = fcn.00405c04(0x4216b8);\n        if (puVar8 != NULL) {\n            *puVar8 = 0;\n        }\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceW)\n                          (0x4216b8, &fcn.004046ec::var_10h, &fcn.004046ec::var_14h, &fcn.004046ec::var_ch, \n                           &fcn.004046ec::var_20h);\n        if (iVar6 != 0) {\n            var_48h = 0x400;\n            var_4ch = var_ch;\n            var_2ch = (*_sym.imp.KERNEL32.dll_MulDiv)(var_10h * var_14h);\n            var_28h = var_2ch >> 0x1f;\n            var_8h = 1;\n        }\ncode_r0x00404986:\n        uVar9 = 5;\n        var_4ch = 0x40498d;\n        uVar4 = fcn.00404b89();\n        if (((var_8h != 0) && (var_28h == 0)) && (var_2ch < uVar4)) {\n            var_4h = 2;\n        }\n        if (*(*0x4291dc + 0x10) != 0) {\n            var_4ch = uVar4;\n            fcn.00404b71(0x3ff, 0xfffffffb);\n            if (var_8h == 0) {\n                sub.USER32.dll_SetDlgItemTextW(arg_8h, 0x400, 0x4216a8);\n                uVar9 = arg_8h;\n            }\n            else {\n                uVar9 = 0x400;\n                fcn.00404aa8(0x400, 0x400, var_2ch, var_28h);\n            }\n        }\n        *0x42a2c4 = var_4h;\n        if (var_4h == 0) {\n            uVar9 = 7;\n            var_4h = fcn.0040140b();\n        }\n        if ((*(var_1ch + 0x14) & 0x400) != 0) {\n            var_4h = 0;\n        }\n        fcn.0040421d(var_4h == 0, uVar9);\n        if ((var_4h == 0) && (*0x4236d8 == 0)) {\n            fcn.00404645();\n        }\n        *0x4236d8 = 0;\n    }\ncode_r0x00404a2d:\n    fcn.00404262(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 2174
    },
    "00404331": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404331(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpynW)(arg_ch, *0x4216b4 + arg_8h, arg_10h >> 1);\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_ch);\n    *arg_14h = iVar1 * 2;\n    *0x4216b4 = *0x4216b4 + iVar1 * 2;\n    return 0;\n}\n",
        "token_count": 148
    },
    "0040436b": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040436b(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_8h + *0x4216b4 * 2);\n    if (arg_10h >> 1 <= uVar1) {\n        uVar1 = arg_10h >> 1;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, arg_8h + *0x4216b4 * 2, uVar1, arg_ch, arg_10h, 0, 0);\n    *arg_14h = iVar2;\n    *0x4216b4 = *0x4216b4 + iVar2;\n    return 0;\n}\n",
        "token_count": 215
    },
    "004061e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004061e4(uint16_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar2 = 10;\n    var_8h = 1;\n    uVar6 = 0x39;\n    if (*arg_8h == 0x2d) {\n        arg_8h = arg_8h + 1;\n        var_8h = -1;\n    }\n    puVar3 = arg_8h;\n    if (*arg_8h == 0x30) {\n        puVar3 = arg_8h + 1;\n        uVar1 = *puVar3;\n        if ((0x2f < uVar1) && (uVar1 < 0x38)) {\n            uVar2 = 8;\n            uVar6 = 0x37;\n        }\n        if ((uVar1 & 0xffdf) == 0x58) {\n            uVar2 = 0x10;\n            puVar3 = arg_8h + 2;\n        }\n    }\n    do {\n        uVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if ((uVar4 < 0x30) || (uVar6 < uVar4)) {\n            if ((uVar2 != 0x10) || (((uVar4 & 0xffffffdf) < 0x41 || (0x46 < (uVar4 & 0xffffffdf))))) {\n                return var_8h * var_4h;\n            }\n            iVar5 = (uVar4 & 7) + 9;\n        }\n        else {\n            iVar5 = uVar4 - 0x30;\n        }\n        var_4h = uVar2 * var_4h + iVar5;\n    } while( true );\n}\n",
        "token_count": 472
    },
    "00402df3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402df3(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_80h;\n    \n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0xfa, 0);\n        arg_ch = 0x113;\n    }\n    if (arg_ch == 0x113) {\n        iVar2 = *0x40ce98;\n        if (*0x418ea4 <= *0x40ce98) {\n            iVar2 = *0x418ea4;\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(iVar2, 100, *0x418ea4);\n        (*_sym.imp.USER32.dll_wsprintfW)(&var_80h, L\"verifying installer: %d%%\", uVar1);\n        (*_sym.imp.USER32.dll_SetWindowTextW)(arg_8h, &var_80h);\n        sub.USER32.dll_SetDlgItemTextW(arg_8h, 0x406, &var_80h);\n    }\n    return 0;\n}\n",
        "token_count": 265
    },
    "004065ee": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004065ee(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint lpBuffer;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(&lpBuffer, 0x104);\n    if (0x104 < uVar1) {\n        uVar1 = 0;\n    }\n    if ((uVar1 == 0) || (*(&stack0xfffffdbe + uVar1 * 2) == 0x5c)) {\n        iVar2 = 1;\n    }\n    else {\n        iVar2 = 0;\n    }\n    (*_sym.imp.USER32.dll_wsprintfW)(&lpBuffer + uVar1 * 2, L\"%s%S.dll\", iVar2 * 2 + 0x40a014, arg_8h);\n    (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(&lpBuffer, 0, 8);\n    return;\n}\n",
        "token_count": 217
    },
    "00401299": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401299(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if ((param_1 < 0x20) && (*0x42a24c != 0)) {\n        puVar2 = *0x42a248 + 8;\n        do {\n            uVar1 = *puVar2;\n            if ((uVar1 & 6) == 0) {\n                if ((puVar2[-1] & 1 << (param_1 & 0x1f)) == 0) {\n                    uVar1 = uVar1 & 0xfffffffe;\n                }\n                else {\n                    uVar1 = uVar1 | 1;\n                }\n                *puVar2 = uVar1;\n            }\n            uVar3 = uVar3 + 1;\n            puVar2 = puVar2 + 0x206;\n        } while (uVar3 < *0x42a24c);\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00403c4a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403c4a(void)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    \n    uVar3 = 0xffff;\n    uVar1 = fcn.004061e4(0x437000);\n    do {\n        if (*0x42a264 != 0) {\n            puVar2 = *(*0x42a214 + 100) * *0x42a264 + *0x42a260;\n            iVar4 = *0x42a264;\n            do {\n                puVar2 = puVar2 - *(*0x42a214 + 100);\n                iVar4 = iVar4 + -1;\n                if (((*puVar2 ^ uVar1) & uVar3) == 0) {\n                    *0x4291e0 = *(puVar2 + 1);\n                    *0x42a2c8 = *(puVar2 + 3);\n                    *0x4291dc = puVar2 + 5;\n                    if (*0x4291dc != NULL) {\n                        fcn.004061cb(0x437000, *puVar2);\n                        fcn.00403d03();\n                        piVar5 = *0x42a248;\n                        for (iVar4 = *0x42a24c; iVar4 != 0; iVar4 = iVar4 + -1) {\n                            if (*piVar5 != 0) {\n                                fcn.004062a6(piVar5 + 6, *piVar5);\n                            }\n                            piVar5 = piVar5 + 0x206;\n                        }\n                        return;\n                    }\n                    break;\n                }\n            } while (iVar4 != 0);\n        }\n        if (uVar3 == 0xffff) {\n            uVar3 = 0x3ff;\n        }\n        else {\n            uVar3 = 0;\n        }\n    } while( true );\n}\n",
        "token_count": 440
    },
    "004041fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004041fb(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.004062a6(0, param_3);\n    sub.USER32.dll_SetDlgItemTextW(param_3, unaff_retaddr + 1000, uVar1);\n    return;\n}\n",
        "token_count": 89
    },
    "00404aa8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404aa8(uint nIDDlgItem, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int8_t iVar5;\n    uint arg_ch_00;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    char16_t *pcVar9;\n    uint *arg_8h;\n    uint var_80h;\n    uint var_40h;\n    \n    arg_ch_00 = 0xffffffdc;\n    if (arg_14h == 0) {\n        iVar5 = 0x14;\n        if (arg_10h < 0x100000) {\n            iVar5 = 10;\n            arg_ch_00 = 0xffffffdd;\n        }\n        if (arg_10h < 0x400) {\n            iVar5 = 0;\n            arg_ch_00 = 0xffffffde;\n        }\n        if (arg_10h < 0xffff3333) {\n            arg_10h = (1 << iVar5) / 0x14 + arg_10h;\n        }\n        uVar6 = arg_10h >> iVar5;\n        uVar7 = ((arg_10h & 0xffffff) * 10 >> iVar5) % 10;\n    }\n    else {\n        uVar6 = arg_10h >> 0x14 | arg_14h << 0xc;\n        uVar7 = 0;\n    }\n    uVar1 = fcn.004062a6(&var_40h, 0xffffffdf);\n    arg_8h = &var_80h;\n    uVar2 = fcn.004062a6(arg_8h, arg_ch_00);\n    pcVar9 = L\"%u.%u%s%s\";\n    uVar8 = 0x4236e8;\n    iVar3 = fcn.004062a6(0x4236e8, arg_ch);\n    iVar4 = sub.KERNEL32.dll_lstrlenW(0x4236e8, uVar8, arg_ch, pcVar9, uVar6, uVar7, uVar2, arg_8h, arg_ch_00, uVar1);\n    (*_sym.imp.USER32.dll_wsprintfW)(iVar3 + iVar4 * 2);\n    sub.USER32.dll_SetDlgItemTextW(*0x4291d8, nIDDlgItem, 0x4236e8);\n    return;\n}\n",
        "token_count": 568
    },
    "00405ba5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.00405ba5(int16_t *param_1)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenW(param_1);\n    piVar2 = param_1 + iVar1;\n    do {\n        if (*piVar2 == 0x5c) break;\n        piVar2 = (*_sym.imp.USER32.dll_CharPrevW)(param_1, piVar2);\n    } while (param_1 < piVar2);\n    *piVar2 = 0;\n    return piVar2 + 1;\n}\n",
        "token_count": 139
    },
    "00405da9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nushort * __cdecl fcn.00405da9(ushort *arg_8h, uint lpPathName)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = 100;\n    do {\n        iVar3 = iVar3 + -1;\n        var_8h = *0x40a558;\n        var_4h = *0x40a55c;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        var_4h = var_4h & 0xffff0000 | var_4h + uVar1 % 0x1a;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetTempFileNameW)(lpPathName, &var_8h, 0, arg_8h);\n        if (iVar2 != 0) {\n            return arg_8h;\n        }\n    } while (iVar3 != 0);\n    *arg_8h = 0;\n    return NULL;\n}\n",
        "token_count": 249
    },
    "00405e5b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405e5b(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint hFile;\n    int32_t iVar2;\n    \n    hFile = arg_8h;\n    pcVar1 = _sym.imp.KERNEL32.dll_SetFilePointer;\n    iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(arg_8h, 0, 0, 1);\n    if (iVar2 == 0) {\n        iVar2 = fcn.00405dfd(hFile, &arg_8h + 2, 2);\n        if ((iVar2 != 0) && (arg_8h._2_2_ == -0x101)) {\n            return 0;\n        }\n        if ((arg_ch != 0) && (iVar2 = (*pcVar1)(hFile, 0, 0, 1),  iVar2 == 0)) {\n            iVar2 = fcn.00405e2c(hFile, 0x40841c, 2);\n            return (-(iVar2 != 0) & 0x7fffbffb) + 0x80004005;\n        }\n        (*pcVar1)(hFile, 0, 0, 0);\n    }\n    return 1;\n}\n",
        "token_count": 290
    },
    "004061cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004061cb(uint param_1, uint param_2)\n\n{\n    (*_sym.imp.USER32.dll_wsprintfW)(param_1, 0x408420, param_2);\n    return;\n}\n",
        "token_count": 49
    },
    "0040670f": {
        "rules": [
            "delay execution",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040670f(uint hProcess)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpExitCode;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 100);\n    while (iVar2 == 0x102) {\n        fcn.0040669a(0xf);\n        iVar2 = (*pcVar1)(hProcess, 100);\n    }\n    (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(hProcess, &lpExitCode);\n    return lpExitCode;\n}\n",
        "token_count": 149
    },
    "00405d7a": {
        "rules": [
            "get file attributes",
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00405d7a(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    (*_sym.imp.KERNEL32.dll_CreateFileW)(unaff_retaddr, param_1, 1, 0, param_2, -(uVar1 != 0xffffffff) & uVar1, 0);\n    return;\n}\n",
        "token_count": 112
    },
    "0040586d": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040586d(uint lpCommandLine)\n\n{\n    int32_t iVar1;\n    int32_t lpProcessAttributes;\n    uint hObject;\n    \n    *0x4266f0 = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                      (0, lpCommandLine, 0, 0, 0, 0x4000000, 0, 0, 0x4266f0, &lpProcessAttributes);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        iVar1 = lpProcessAttributes;\n    }\n    return iVar1;\n}\n",
        "token_count": 151
    },
    "004058b0": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004058b0(uint *param_1)\n\n{\n    param_1[9] = 0;\n    *param_1 = 0x3c;\n    (*_sym.imp.SHELL32.dll_ShellExecuteExW)(param_1);\n    return;\n}\n",
        "token_count": 62
    },
    "004060f1": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004060f1(uint arg_8h, uint lpSubKey, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00406076(arg_8h, &arg_10h);\n    if (iVar1 == 0) {\n        uVar2 = 6;\n    }\n    else {\n        uVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(iVar1, lpSubKey, 0, arg_10h, arg_14h);\n    }\n    return uVar2;\n}\n",
        "token_count": 142
    },
    "0040611f": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040611f(uint arg_8h, uint lpSubKey, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00406076(arg_8h, &arg_10h);\n    if (iVar1 == 0) {\n        uVar2 = 6;\n    }\n    else {\n        uVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(iVar1, lpSubKey, 0, 0, 0, arg_10h, 0, arg_14h, 0);\n    }\n    return uVar2;\n}\n",
        "token_count": 154
    },
    "004038c4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004038c4(uint param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *0x4216ac; puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(param_1);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "004038df": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004038df(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x4216ac;\n    fcn.004038c4(0);\n    if (piVar2 != NULL) {\n        do {\n            piVar1 = *piVar2;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(piVar2[2]);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(piVar2);\n            piVar2 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    *0x4216ac = NULL;\n    return;\n}\n",
        "token_count": 145
    },
    "00403914": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00403914(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *0x4216ac;\n    while( true ) {\n        if (puVar1 == NULL) {\n            return 1;\n        }\n        if (puVar1[2] == param_1) break;\n        puVar1 = *puVar1;\n    }\n    return 0;\n}\n",
        "token_count": 93
    },
    "00405b86": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405b86(int16_t *param_1, int16_t param_2)\n\n{\n    for (; (*param_1 != 0 && (*param_1 != param_2)); param_1 = (*_sym.imp.USER32.dll_CharNextW)(param_1)) {\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00405cdf": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405cdf(int32_t arg_8h, uint lpString2)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    while( true ) {\n        iVar4 = (*pcVar2)(arg_8h);\n        if (iVar4 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(iVar3 + arg_8h);\n        *(iVar3 + arg_8h) = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(arg_8h, lpString2);\n        *(iVar3 + arg_8h) = uVar1;\n        if (iVar4 == 0) break;\n        arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 246
    },
    "00405d35": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405d35(uchar *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (param_3 != 0) {\n        param_2 = param_2 - param_1;\n        do {\n            *param_1 = param_1[param_2];\n            param_1 = param_1 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0040669a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040669a(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageW;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, arg_8h, arg_8h, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageW)(&lpMsg);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "004067bf": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004067bf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x80;\n    do {\n        iVar1 = iVar1 + -1;\n        *(iVar1 + param_1) = 0;\n    } while (iVar1 != 0);\n    *(param_1 + 0x78) = 0xffffffff;\n    *(param_1 + 0x68) = 1;\n    *(param_1 + 100) = 1;\n    *(param_1 + 0x60) = 1;\n    *(param_1 + 0x5c) = 1;\n    return;\n}\n",
        "token_count": 150
    },
    "00405dfd": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405dfd(uint hFile, uint lpBuffer, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = arg_10h;\n    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, lpBuffer, arg_10h, &arg_10h, 0);\n    if ((iVar2 == 0) || (iVar1 != arg_10h)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 142
    },
    "0040604a": {
        "rules": [
            "move file"
        ],
        "decompiled_code": "\nvoid fcn.0040604a(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 5;\n    iVar1 = (*_sym.imp.KERNEL32.dll_MoveFileExW)(param_1, param_2, 5);\n    if (iVar1 == 0) {\n        fcn.00405ed0(param_2, uVar2);\n    }\n    *0x42a2b0 = *0x42a2b0 + 1;\n    return;\n}\n",
        "token_count": 124
    },
    "004057bb": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004057bb(uint lpFileName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar pSecurityDescriptor;\n    uint var_1fh;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpSecurityAttributes;\n    uchar *var_8h;\n    uint var_4h;\n    \n    var_1fh._0_1_ = 0;\n    stack0xffffffe0 = 0x4083f8;\n    var_18h = 0x4083f8;\n    var_8h = &pSecurityDescriptor;\n    var_14h = 0;\n    var_4h = 0;\n    pSecurityDescriptor = 1;\n    var_1fh._1_2_ = 4;\n    var_10h = 0x4083e8;\n    lpSecurityAttributes = 0xc;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(lpFileName, &lpSecurityAttributes);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar2 != 0xb7) {\n            return iVar2;\n        }\n        iVar2 = (*_sym.imp.ADVAPI32.dll_SetFileSecurityW)(lpFileName, 0x80000007, &pSecurityDescriptor);\n        if (iVar2 == 0) {\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 364
    },
    "00405838": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nuint fcn.00405838(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(param_1, 0);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 99
    },
    "00405e2c": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405e2c(uint hFile, uint lpBuffer, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = arg_10h;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, lpBuffer, arg_10h, &arg_10h, 0);\n    if ((iVar2 == 0) || (iVar1 != arg_10h)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 144
    },
    "0040665e": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint fcn.0040665e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = *(param_1 * 8 + 0x40a3e0);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar2);\n    if ((iVar1 == 0) && (iVar1 = fcn.004065ee(uVar2),  iVar1 == 0)) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, *(param_1 * 8 + 0x40a3e4));\n    return uVar2;\n}\n",
        "token_count": 156
    }
}