{
    "0040131c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nushort fcn.0040131c(void)\n\n{\n    ushort uVar1;\n    uchar auStack72 [40];\n    uint8_t uStack32;\n    ushort uStack28;\n    \n    sub.kernel32.dll_GetStartupInfoA(auStack72);\n    uVar1 = 10;\n    if ((uStack32 & 1) != 0) {\n        uVar1 = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 96
    },
    "00401cc0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00401cc0(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *(in_EAX + -4);\n    if ((uVar1 & 0x80000002) != 0x80000002) {\n        *0x4705c8 = 4;\n    }\n    uVar3 = uVar1 & 0x7ffffffc;\n    puVar2 = in_EAX - uVar3;\n    if (((uVar1 ^ *puVar2) & 0xfffffffe) != 0) {\n        *0x4705c8 = 5;\n    }\n    if ((*puVar2 & 1) != 0) {\n        uVar1 = puVar2[-1];\n        if (uVar1 != *(puVar2 + (8 - uVar1))) {\n            *0x4705c8 = 6;\n        }\n        fcn.00401bb0();\n        uVar3 = uVar3 + uVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 255
    },
    "00402288": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00402288(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    *0x4705c8 = 0;\n    if (*0x4705c4 == '\\0') {\n        puStack24 = 0x4022a6;\n        cVar2 = fcn.00401a0c();\n        if (cVar2 == '\\0') {\n            *0x4705c8 = 8;\n            return 8;\n        }\n    }\n    uStack28 = 0x40241a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*0x47004d != '\\0') {\n        uStack36 = 0x4705cc;\n        puStack24 = &stack0xfffffffc;\n        sub.kernel32.dll_EnterCriticalSection();\n    }\n    puVar5 = in_EAX + -4;\n    uVar4 = *puVar5;\n    if ((uVar4 & 2) == 0) {\n        *0x4705c8 = 9;\n        goto code_r0x004023f1;\n    }\n    *0x4705b4 = *0x4705b4 + -1;\n    *0x4705b8 = *0x4705b8 - ((uVar4 & 0x7ffffffc) - 4);\n    if ((uVar4 & 1) != 0) {\n        uVar1 = *(in_EAX + -8);\n        if ((uVar1 < 0xc) || ((uVar1 & 0x80000003) != 0)) {\n            *0x4705c8 = 10;\n            goto code_r0x004023f1;\n        }\n        puVar5 = puVar5 - uVar1;\n        if (uVar1 != puVar5[2]) {\n            *0x4705c8 = 10;\n            goto code_r0x004023f1;\n        }\n        uVar4 = uVar4 + uVar1;\n        fcn.00401bb0();\n    }\n    uVar4 = uVar4 & 0x7ffffffc;\n    puVar5 = puVar5 + uVar4;\n    if (puVar5 == *0x470620) {\n        *0x470620 = *0x470620 - uVar4;\n        *0x47061c = *0x47061c + uVar4;\n        if (0x3c00 < *0x47061c) {\n            fcn.00401ea0();\n        }\n        fcn.00403a70();\n        return 0;\n    }\n    if ((*puVar5 & 2) == 0) {\n        if (((puVar5[1] == 0) || (*puVar5 == 0)) || (puVar5[2] < 0xc)) {\n            *0x4705c8 = 0xb;\n            goto code_r0x004023f1;\n        }\n        fcn.00401bb0();\n    }\n    else {\n        if ((*puVar5 & 0x7ffffffc) < 4) {\n            *0x4705c8 = 0xb;\n            goto code_r0x004023f1;\n        }\n        *puVar5 = *puVar5 | 1;\n    }\n    fcn.00401e18();\ncode_r0x004023f1:\n    uVar3 = 0;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x402421;\n    if (*0x47004d != '\\0') {\n        uStack32 = 0x4705cc;\n        uVar3 = sub.kernel32.dll_LeaveCriticalSection();\n    }\n    return uVar3;\n}\n",
        "token_count": 915
    },
    "004173c4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004173c4(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    \n    if (param_2 < *(in_EAX + 4)) {\n        return -((*(*(in_EAX + 8) + (param_2 >> 3)) >> (param_2 & 7) & 1) != 0) & 1;\n    }\n    fcn.0040b620();\n    uVar1 = fcn.004039c4();\n    return uVar1;\n}\n",
        "token_count": 132
    },
    "0041a3f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a3f0(int32_t arg_8h)\n\n{\n    if (((*(arg_8h + -9) & 1) == 0) && (*(arg_8h + -0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 72
    },
    "0041a6c4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a6c4(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x41a8e5;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x41a6fa;\n    (**(*in_EAX + 0x24))();\n    puStack72 = 0x41a705;\n    fcn.0041b970();\n    puStack72 = 0x41a710;\n    fcn.0041b970();\n    iVar1 = in_EAX[0xb];\n    iVar2 = in_EAX[7];\n    uStack76 = 0x41a8b5;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    if (param_2 == NULL) {\n        if ((var_9h & 1) == 0) {\n            uStack88 = 0x41a751;\n            puStack72 = &stack0xfffffffc;\n            fcn.0041a470(&stack0xfffffffc);\n        }\n        else {\n            uStack88 = 0x41a748;\n            puStack72 = &stack0xfffffffc;\n            fcn.0041a620(&stack0xfffffffc);\n        }\n    }\n    if (param_2 != NULL) {\n        uStack88 = 0x41a873;\n        uStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        fcn.0041a310(&stack0xfffffffc);\n        *(param_2 + 7) = *(param_2 + 7) | 1;\n        fcn.0041a388(&stack0xfffffffc);\n        if ((var_9h & 1) == 0) {\n            fcn.0041a580(&stack0xfffffffc);\n        }\n        if (param_2 == NULL) {\n            *in_FS_OFFSET = uStack92;\n            fcn.00403a70();\n            *in_FS_OFFSET = uStack80;\n            puStack72 = 0x41a8ec;\n            uStack76 = 0x41a8d6;\n            fcn.00403fac();\n            uStack76 = 0x41a8e4;\n            fcn.0040519c();\n            return;\n        }\n        if ((*(param_2 + 0x1d) & 2) != 0) {\n            in_EAX[7] = param_2;\n        }\n        *(param_2 + 7) = *(param_2 + 7) | 2;\n        fcn.0041a388(&stack0xfffffffc);\n        (**(*param_2 + 0x14))();\n        *(param_2 + 7) = *(param_2 + 7) & 0xfffd;\n        fcn.0041a388(&stack0xfffffffc);\n        if ((var_9h & 2) != 0) {\n            fcn.0040344c();\n        }\n        if (((var_9h & 1) == 0) && ((*(param_2 + 0x1d) & 2) == 0)) {\n            fcn.0041a2d4(&stack0xfffffffc);\n            fcn.00416d68();\n        }\n        else {\n            iVar3 = fcn.00416f20();\n            if (iVar3 < 0) {\n                fcn.0041a2d4(&stack0xfffffffc);\n                fcn.00416d68();\n            }\n        }\n        *in_FS_OFFSET = uStack92;\n    }\n    *in_FS_OFFSET = uStack80;\n    in_EAX[0xb] = iVar1;\n    in_EAX[7] = iVar2;\n    return;\n}\n",
        "token_count": 1027
    },
    "0041cac4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0041cac4(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    while (*(in_EAX + 0x10) != 0) {\n        piVar1 = fcn.00416fac();\n        if (((*(piVar1 + 0x1d) & 1) == 0) && (*0x41cb18 != (*0x41cb18 & *(in_EAX + 0x1c)))) {\n            fcn.0041ca0c();\n        }\n        else {\n            fcn.0041ca8c();\n        }\n        (**(*piVar1 + -4))();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0041f8f4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041f8f4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStack112;\n    int32_t iStack108;\n    uint uStack104;\n    uchar *puStack100;\n    int32_t iStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    int32_t var_4h;\n    \n    puStack88 = &stack0xfffffffc;\n    uStack92 = 0x41fa7d;\n    iStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack100 = 0x41f933;\n        fcn.0041ec38();\n        uStack104 = 0x41fa55;\n        iStack108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStack100 = &stack0xfffffffc;\n        if (*(var_4h + 8) == 0) {\n            var_40h = *(var_4h + 0x14);\n            var_3ch = 0;\n            var_38h = 0;\n            var_34h = 0;\n            if ((*(var_4h + 0x19) & 1) == 0) {\n                var_30h = 400;\n            }\n            else {\n                var_30h = 700;\n            }\n            var_2ch._0_1_ = (*(var_4h + 0x19) & 2) != 0;\n            var_2ch._1_1_ = (*(var_4h + 0x19) & 4) != 0;\n            var_2ch._2_1_ = (*(var_4h + 0x19) & 8) != 0;\n            var_2ch._3_1_ = *(var_4h + 0x1a);\n            puStack100 = &stack0xfffffffc;\n            fcn.004041ec();\n            iVar2 = fcn.00407e64();\n            if (iVar2 == 0) {\n                fcn.004041ec();\n                fcn.00408674();\n            }\n            else {\n                fcn.004041ec();\n                fcn.00408674();\n            }\n            var_26h = 0;\n            var_28h = 0;\n            var_27h = 0;\n            cVar1 = fcn.0041fbd8();\n            if (cVar1 == '\\x01') {\n                var_25h = 2;\n            }\n            else if (cVar1 == '\\x02') {\n                var_25h = 1;\n            }\n            else {\n                var_25h = 0;\n            }\n            puStack112 = &fcn.0041f8f4::var_40h;\n            uVar3 = sub.gdi32.dll_CreateFontIndirectA();\n            *(var_4h + 8) = uVar3;\n        }\n        *in_FS_OFFSET = puStack112;\n        uStack104 = 0x41fa5c;\n        iStack108 = 0x41fa54;\n        fcn.0041ec44();\n        return;\n    }\n    *in_FS_OFFSET = iStack96;\n    puStack88 = 0x41fa84;\n    uStack92 = 0x41fa7c;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 914
    },
    "00420920": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420920(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    param_2 = ~*(in_EAX + 2) & param_2;\n    if (*0x420990 != param_2) {\n        if ((param_2 & 1) != 0) {\n            (**(*in_EAX + 0x14))();\n            if (in_EAX[1] == 0) {\n                fcn.0040b620();\n                fcn.004039c4();\n            }\n        }\n        if ((param_2 & 2) != 0) {\n            fcn.004209bc();\n        }\n        if ((param_2 & 4) != 0) {\n            fcn.004209e8();\n        }\n        if ((param_2 & 8) != 0) {\n            fcn.00420a18();\n        }\n        *(in_EAX + 2) = param_2 | *(in_EAX + 2);\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "00433fc8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433fc8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00403250();\n        *(in_EAX + 0x6c) = 0;\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) & 0xffff7fff;\n    }\n    else {\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) | 0x8000;\n        if (*(in_EAX + 0x6c) == 0) {\n            iVar1 = fcn.0040344c();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x6c) = uVar2;\n        }\n        (**(**(in_EAX + 0x6c) + 0xc))();\n        iVar1 = *(in_EAX + 0x6c);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x436c08;\n        fcn.0040344c();\n        fcn.0041c94c();\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "00434168": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434168(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = *(in_EAX + 0x5b);\n    if (param_2 != cVar1) {\n        *(in_EAX + 0x5b) = param_2;\n        fcn.00433fa8();\n        if (((*(in_EAX + 7) & 1) == 0) &&\n           (((((*(in_EAX + 7) & 0x10) == 0 || (in_EAX[0xc] != 0)) && (param_2 != '\\x06')) && (cVar1 != '\\x06')))) {\n            if ((((cVar1 - 1U < 2 == param_2 - 3U < 2) && (cVar1 != '\\0')) && (cVar1 != '\\x05')) &&\n               ((param_2 != '\\0' && (param_2 != '\\x05')))) {\n                (**(*in_EAX + 0x84))(in_EAX[0x12], in_EAX[0x13]);\n            }\n            else {\n                fcn.0040344c();\n            }\n        }\n    }\n    fcn.0040344c();\n    return;\n}\n",
        "token_count": 293
    },
    "00434210": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434210(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    cVar1 = fcn.0043637c();\n    if ((cVar1 != '\\0') &&\n       ((((in_EDX != in_EAX[0x10] || (in_ECX != in_EAX[0x11])) || (arg_ch != in_EAX[0x12])) || (arg_8h != in_EAX[0x13]))\n       )) {\n        fcn.0043508c();\n        in_EAX[0x10] = in_EDX;\n        in_EAX[0x11] = in_ECX;\n        in_EAX[0x12] = arg_ch;\n        in_EAX[0x13] = arg_8h;\n        fcn.004342a8();\n        (**(*in_EAX + 0x7c))();\n        fcn.00435dec(0);\n        fcn.0040344c();\n        if ((*(in_EAX + 7) & 1) == 0) {\n            fcn.0040344c();\n        }\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "004342a8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004342a8(void)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uStack16;\n    uint uStack12;\n    \n    if ((*(in_EAX + 0x62) == '\\0') && ((*(in_EAX + 0x1c) & 1) == 0)) {\n        uVar1 = *(in_EAX + 0x61);\n        if (*0x4343c0 == uVar1) {\n            *(in_EAX + 0x90) = 0;\n            *(in_EAX + 0x94) = 0;\n        }\n        else {\n            if ((uVar1 & 4) == 0) {\n                iVar3 = *(in_EAX + 0x48) >> 1;\n                if (iVar3 < 0) {\n                    iVar3 = iVar3 + ((*(in_EAX + 0x48) & 1) != 0);\n                }\n                *(in_EAX + 0x88) = iVar3 + *(in_EAX + 0x40);\n            }\n            else if ((uVar1 & 1) == 0) {\n                *(in_EAX + 0x88) = *(in_EAX + 0x40);\n            }\n            else {\n                *(in_EAX + 0x88) = *(in_EAX + 0x48);\n            }\n            if ((uVar1 & 8) == 0) {\n                iVar3 = *(in_EAX + 0x4c) >> 1;\n                if (iVar3 < 0) {\n                    iVar3 = iVar3 + ((*(in_EAX + 0x4c) & 1) != 0);\n                }\n                *(in_EAX + 0x8c) = iVar3 + *(in_EAX + 0x44);\n            }\n            else if ((uVar1 & 2) == 0) {\n                *(in_EAX + 0x8c) = *(in_EAX + 0x44);\n            }\n            else {\n                *(in_EAX + 0x8c) = *(in_EAX + 0x4c);\n            }\n            iVar3 = *(in_EAX + 0x30);\n            if (iVar3 != 0) {\n                if ((*(iVar3 + 0x1c) & 2) == 0) {\n                    cVar2 = fcn.0043b724();\n                    if (cVar2 == '\\0') {\n                        *(in_EAX + 0x90) = *(*(in_EAX + 0x30) + 0x48);\n                        *(in_EAX + 0x94) = *(*(in_EAX + 0x30) + 0x4c);\n                    }\n                    else {\n                        (**(**(in_EAX + 0x30) + 0x44))();\n                        *(in_EAX + 0x90) = uStack16;\n                        *(in_EAX + 0x94) = uStack12;\n                    }\n                }\n                else if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n                    *(in_EAX + 0x90) = *(iVar3 + 0x1fa);\n                    *(in_EAX + 0x94) = *(iVar3 + 0x1fe);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 766
    },
    "004345bc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004345bc(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x150) = 1;\n    }\n    *(in_EAX + 0x158) = param_2;\n    return;\n}\n",
        "token_count": 90
    },
    "004345d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004345d0(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x150) = 0;\n    }\n    fcn.00403fdc();\n    return;\n}\n",
        "token_count": 73
    },
    "00434860": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434860(int32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    bool bVar4;\n    int32_t in_stack_ffffffd4;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    \n    if (param_2 != param_1) {\n        uVar1 = *0x434a04;\n        if ((*(in_EAX + 7) & 1) != 0) {\n            uVar1 = *(in_EAX + 0x26);\n        }\n        if ((uVar1 & 1) != 0) {\n            in_stack_ffffffd4 = in_EAX[0x10];\n            in_stack_ffffffdc = param_1;\n            sub.kernel32.dll_MulDiv(in_stack_ffffffd4, param_2, param_1);\n        }\n        if ((uVar1 & 2) != 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n        }\n        if (((uVar1 & 4) == 0) || ((*(in_EAX + 0x51) & 1) != 0)) {\n            in_stack_ffffffdc = in_EAX[0x12];\n        }\n        else if ((uVar1 & 1) == 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        else {\n            sub.kernel32.dll_MulDiv(in_EAX[0x10] + in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        bVar4 = (uVar1 & 8) == 0;\n        if ((bVar4) || ((*(in_EAX + 0x51) & 2) != 0)) {\n            iStack32 = in_EAX[0x13];\n        }\n        else {\n            iStack32 = param_1;\n            if (bVar4) {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n            }\n            else {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11] + in_EAX[0x13], param_2, in_stack_ffffffd4);\n            }\n        }\n        (**(*in_EAX + 0x84))(iStack32, in_stack_ffffffdc);\n        if (*0x434a0c != (uVar1 & *0x434a08)) {\n            iVar2 = sub.kernel32.dll_MulDiv(in_EAX[0x24], param_2, iStack32);\n            in_EAX[0x24] = iVar2;\n        }\n        if (*0x434a0c != (uVar1 & *0x434a10)) {\n            iVar2 = sub.kernel32.dll_MulDiv(in_EAX[0x25], param_2, iStack32);\n            in_EAX[0x25] = iVar2;\n        }\n        if ((*(in_EAX + 0x59) == '\\0') && ((uVar1 & 0x10) != 0)) {\n            uVar3 = fcn.0041fb64(param_2, iStack32);\n            sub.kernel32.dll_MulDiv(uVar3);\n            fcn.0041fb80();\n        }\n    }\n    *(in_EAX + 0x26) = *0x434a0c;\n    return;\n}\n",
        "token_count": 807
    },
    "00434a2c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00434a2c(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uchar *puVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x434ac2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar3 = &stack0xfffffffc;\n    if (((*(in_EAX + 0x50) & 0x20) != 0) && (uVar5 = (*(in_EAX + 0x1c) & 1) == 0,  puVar3 = &stack0xfffffffc,  uVar5)) {\n        fcn.00434c44();\n        fcn.00404394();\n        puVar3 = puStack28;\n        if (uVar5) {\n            iVar1 = *(in_EAX + 4);\n            if (iVar1 != 0) {\n                cVar4 = fcn.004033dc();\n                if ((cVar4 != '\\0') && (puVar3 = puStack28,  (*(iVar1 + 0x1c) & 1) != 0)) goto code_r0x00434a8e;\n            }\n            bVar2 = true;\n            goto code_r0x00434a94;\n        }\n    }\ncode_r0x00434a8e:\n    puStack28 = puVar3;\n    bVar2 = false;\ncode_r0x00434a94:\n    fcn.0041cdd4();\n    if (bVar2) {\n        fcn.00434c74();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x434ac9;\n    uStack32 = 0x434ac1;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 468
    },
    "004352e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004352e0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint arg_8h;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    cVar1 = fcn.004033dc();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x9b) != '\\x01')) {\n        fcn.0040b620();\n        fcn.004039c4();\n    }\n    fcn.00435e20();\n    if ((*0x470b30 == 0) || (*0x470b30 == -1)) {\n        *0x470b30 = 0;\n        if ((*(in_EAX + 0x54) & 1) != 0) {\n            sub.user32.dll_GetCursorPos(&uStack28);\n            fcn.00434798();\n            uStack28 = uStack20;\n            arg_8h = fcn.00406b3c(uStack24);\n            fcn.00435dec(arg_8h);\n        }\n        if (*0x470b30 != -1) {\n            fcn.00432fa4();\n        }\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00436720": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436720(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + -0x10))();\n    if (*0x4367cc == (*0x4367c8 & *(in_EAX + 7))) {\n        iVar1 = in_EAX[0x1d];\n        if ((*(iVar1 + 0xc) == 0) || (in_EAX[0x12] <= *(iVar1 + 0xc))) {\n            if ((*(iVar1 + 0x14) != 0) && (in_EAX[0x12] < *(iVar1 + 0x14))) {\n                *(iVar1 + 0x14) = in_EAX[0x12];\n            }\n        }\n        else {\n            *(iVar1 + 0xc) = in_EAX[0x12];\n        }\n        if ((*(iVar1 + 8) == 0) || (in_EAX[0x13] <= *(iVar1 + 8))) {\n            if ((*(iVar1 + 0x10) != 0) && (in_EAX[0x13] < *(iVar1 + 0x10))) {\n                *(iVar1 + 0x10) = in_EAX[0x13];\n            }\n        }\n        else {\n            *(iVar1 + 8) = in_EAX[0x13];\n        }\n        iVar1 = *(param_2 + 8);\n        if ((((iVar1 != 0) && (in_EAX[0x28] != 0)) && ((*(in_EAX + 0x55) & 4) == 0)) &&\n           ((((*(iVar1 + 0x18) & 1) == 0 && (*(iVar1 + 0x10) != 0)) && (*(iVar1 + 0x14) != 0)))) {\n            fcn.00435e20();\n        }\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "00436f18": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00436f18(uint param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.0040344c();\n    if (cVar1 != '\\0') {\n        if ((param_2 & 2) == 2) {\n            param_2 = param_2 & 0xfffffffd;\n        }\n        else if ((param_2 & 1) != 1) {\n            param_2 = param_2 | 2;\n        }\n    }\n    uVar2 = fcn.00436f58();\n    return param_2 | uVar2;\n}\n",
        "token_count": 152
    },
    "0043751c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043751c(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_ECX;\n    uint8_t in_DL;\n    int32_t iVar3;\n    uint32_t *in_FS_OFFSET;\n    uint *puStack92;\n    uint *puStack88;\n    uint *puStack84;\n    uint var_40h;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t nNumerator;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_5h;\n    \n    var_30h = *in_ECX;\n    uStack48 = in_ECX[1];\n    uStack44 = in_ECX[2];\n    uStack40 = in_ECX[3];\n    unique0x100001df = in_EAX;\n    if ((in_DL == 0) || (*(in_DL + 0x464a10) != *(in_EAX + 0x61))) {\n        if ((in_EAX[0x24] != 0) && (in_EAX[0x25] != 0)) {\n            var_ch = in_EAX[0x10];\n            var_10h = in_EAX[0x11];\n            var_14h = in_EAX[0x12];\n            var_18h = in_EAX[0x13];\n            puStack84 = 0x4375a0;\n            cVar2 = fcn.0043b724();\n            if (cVar2 == '\\0') {\n                puStack84 = 0x4375d4;\n                fcn.00415a68();\n            }\n            else {\n                puStack84 = 0x4375b2;\n                (**(*stack0xfffffff8[0xc] + 0x44))();\n                nNumerator = var_38h;\n                var_1ch = var_34h;\n            }\n            if ((*(stack0xfffffff8 + 0x61) & 4) == 0) {\n                if ((*(stack0xfffffff8 + 0x61) & 1) == 0) {\n                    puStack84 = stack0xfffffff8[0x24];\n                    puStack88 = nNumerator;\n                    puStack92 = stack0xfffffff8[0x22];\n                    var_ch = sub.kernel32.dll_MulDiv();\n                    iVar3 = var_14h >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((var_14h & 1) != 0);\n                    }\n                    var_ch = var_ch - iVar3;\n                }\n            }\n            else if ((*(stack0xfffffff8 + 0x61) & 1) == 0) {\n                var_ch = nNumerator - (stack0xfffffff8[0x24] - stack0xfffffff8[0x22]);\n            }\n            else {\n                var_14h = nNumerator - (stack0xfffffff8[0x24] - stack0xfffffff8[0x22]);\n            }\n            if ((*(stack0xfffffff8 + 0x61) & 8) == 0) {\n                if ((*(stack0xfffffff8 + 0x61) & 2) == 0) {\n                    puStack84 = stack0xfffffff8[0x25];\n                    puStack88 = var_1ch;\n                    puStack92 = stack0xfffffff8[0x23];\n                    var_10h = sub.kernel32.dll_MulDiv();\n                    iVar3 = var_18h >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((var_18h & 1) != 0);\n                    }\n                    var_10h = var_10h - iVar3;\n                }\n            }\n            else if ((*(stack0xfffffff8 + 0x61) & 2) == 0) {\n                var_10h = var_1ch - (stack0xfffffff8[0x25] - stack0xfffffff8[0x23]);\n            }\n            else {\n                var_18h = var_1ch - (stack0xfffffff8[0x25] - stack0xfffffff8[0x23]);\n            }\n            *(stack0xfffffff8 + 0x62) = 1;\n            puStack88 = 0x437715;\n            puStack92 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffa4;\n            puStack84 = &stack0xfffffffc;\n            (**(*stack0xfffffff8 + 0x84))(var_18h, var_14h);\n            *in_FS_OFFSET = var_18h;\n            *(stack0xfffffff8 + 0x62) = 0;\n            return;\n        }\n        if (in_DL == 0) {\n            return;\n        }\n    }\n    var_14h = *(*(arg_8h + -8) + 8) - **(arg_8h + -8);\n    if (((var_14h < 0) || (in_DL - 3 < 2)) || (in_DL == 6)) {\n        var_14h = in_EAX[0x12];\n    }\n    var_18h = *(*(arg_8h + -8) + 0xc) - *(*(arg_8h + -8) + 4);\n    if (((var_18h < 0) || (in_DL - 1 < 2)) || (in_DL == 6)) {\n        var_18h = in_EAX[0x13];\n    }\n    var_ch = **(arg_8h + -8);\n    var_10h = *(*(arg_8h + -8) + 4);\n    // switch table (7 cases) at 0x4377b2\n    switch(in_DL) {\n    case 1:\n        piVar1 = *(arg_8h + -8) + 4;\n        *piVar1 = *piVar1 + var_18h;\n        break;\n    case 2:\n        piVar1 = *(arg_8h + -8) + 0xc;\n        *piVar1 = *piVar1 - var_18h;\n        var_10h = *(*(arg_8h + -8) + 0xc);\n        break;\n    case 3:\n        **(arg_8h + -8) = **(arg_8h + -8) + var_14h;\n        break;\n    case 4:\n        piVar1 = *(arg_8h + -8) + 8;\n        *piVar1 = *piVar1 - var_14h;\n        var_ch = *(*(arg_8h + -8) + 8);\n        break;\n    case 6:\n        var_ch = in_EAX[0x10];\n        var_10h = in_EAX[0x11];\n        puStack84 = &fcn.0043751c::var_10h;\n        puStack88 = &fcn.0043751c::var_14h;\n        puStack92 = &fcn.0043751c::var_18h;\n        (**(**(arg_8h + -4) + 0xa8))(&fcn.0043751c::var_30h, *(arg_8h + -8));\n    }\n    *(stack0xfffffff8 + 0x62) = 1;\n    puStack88 = 0x43789d;\n    puStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    (**(*stack0xfffffff8 + 0x84))(var_18h, var_14h);\n    *in_FS_OFFSET = var_18h;\n    *(stack0xfffffff8 + 0x62) = 0;\n    return;\n}\n",
        "token_count": 1814
    },
    "004382ac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004382ac(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x4383ca;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.00402c5c();\n    *param_2 = in_EAX[0x19];\n    param_2[1] = 0x44000000;\n    fcn.00438244();\n    if ((*(in_EAX + 0x14) & 1) != 0) {\n        param_2[1] = param_2[1] | 0x2000000;\n        param_2[2] = param_2[2] | 0x10000;\n    }\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 == '\\0') {\n            param_2[1] = param_2[1] | 0x8000000;\n        }\n    }\n    if (*(in_EAX + 0x69) != '\\0') {\n        param_2[1] = param_2[1] | 0x10000;\n    }\n    param_2[3] = in_EAX[0x10];\n    param_2[4] = in_EAX[0x11];\n    param_2[5] = in_EAX[0x12];\n    param_2[6] = in_EAX[0x13];\n    if (in_EAX[0xc] == 0) {\n        param_2[7] = in_EAX[100];\n    }\n    else {\n        iVar2 = fcn.0043b420();\n        param_2[7] = iVar2;\n    }\n    param_2[9] = 0xb;\n    param_2[10] = sub.user32.dll_DefWindowProcA;\n    uVar3 = 0;\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    param_2[0xf] = iVar2;\n    param_2[0x10] = 0;\n    param_2[0xd] = *0x470668;\n    fcn.004031a0();\n    fcn.004041ec();\n    fcn.00408674();\n    *in_FS_OFFSET = uVar3;\n    uStack288 = 0x4383d1;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 649
    },
    "004395b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004395b0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack172;\n    uint uStack168;\n    uchar *puStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint var_6ch;\n    uint nWidth;\n    uint var_5ch;\n    uint nHeight;\n    uint var_4ch;\n    uint var_ch;\n    uint hgdiobj;\n    uint hdc;\n    \n    if ((*(in_EAX + 0x7e) != '\\0') && (*(param_2 + 4) == 0)) {\n        uStack128 = 0;\n        uStack132 = 0x439600;\n        uVar2 = sub.user32.dll_GetDC();\n        uStack132 = 0x43960c;\n        (**(*in_EAX + 0x44))();\n        uStack136 = 0x43961a;\n        (**(*in_EAX + 0x44))();\n        uStack144 = 0x439624;\n        uStack140 = uVar2;\n        hgdiobj = sub.gdi32.dll_CreateCompatibleBitmap();\n        uStack148 = 0;\n        uStack152 = 0x43962f;\n        uStack144 = uVar2;\n        sub.user32.dll_ReleaseDC();\n        uStack152 = 0;\n        uStack156 = 0x439636;\n        uStack160 = sub.gdi32.dll_CreateCompatibleDC();\n        uStack156 = hgdiobj;\n        puStack164 = 0x439646;\n        hdc = uStack160;\n        var_ch = sub.gdi32.dll_SelectObject();\n        uStack168 = 0x439702;\n        uStack172 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff54;\n        puStack164 = &stack0xfffffffc;\n        uVar2 = fcn.0043b420(&fcn.004395b0::var_4ch);\n        uVar2 = sub.user32.dll_BeginPaint(uVar2);\n        fcn.00435dec(hdc);\n        *(param_2 + 4) = hdc;\n        fcn.004395b0();\n        *(param_2 + 4) = 0;\n        (**(*in_EAX + 0x44))(hdc, 0, 0, 0xcc0020);\n        (**(*in_EAX + 0x44))(nHeight);\n        sub.gdi32.dll_BitBlt(uVar2, 0, 0, nWidth);\n        uVar2 = fcn.0043b420(&fcn.004395b0::var_4ch);\n        sub.user32.dll_EndPaint();\n        *in_FS_OFFSET = uVar2;\n        sub.gdi32.dll_SelectObject(hdc, var_ch, 0x439709);\n        sub.gdi32.dll_DeleteDC(hdc);\n        sub.gdi32.dll_DeleteObject(hgdiobj);\n        return;\n    }\n    if ((*(in_EAX + 0x55) & 1) == 0) {\n        uStack128 = 0x4395d9;\n        iVar1 = fcn.00438150();\n        if (iVar1 == 0) {\n            uStack128 = 0x4395e6;\n            (**(*in_EAX + -0x10))();\n            return;\n        }\n    }\n    uStack128 = 0x4395f4;\n    fcn.004390d4();\n    return;\n}\n",
        "token_count": 826
    },
    "004398fc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004398fc(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    uchar uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint16_t uVar5;\n    \n    if ((((*(in_EAX + 0x1a5) == '\\0') || ((*(in_EAX + 0x50) & 0x10) == 0)) || (*(in_EAX + 0x30) == 0)) ||\n       ((*(*(param_2 + 8) + 0x18) & 8) != 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if ((*(*(param_2 + 8) + 0x18) & 2) == 0) {\n        iVar4 = sub.user32.dll_IsWindowVisible(*(in_EAX + 0x180), param_1);\n        if (iVar4 == 0) goto code_r0x00439941;\n        uVar2 = 1;\n    }\n    else {\ncode_r0x00439941:\n        uVar2 = 0;\n    }\n    if ((*(*(param_2 + 8) + 0x18) & 1) == 0) {\n        iVar4 = sub.user32.dll_IsWindowVisible(*(in_EAX + 0x180));\n        if (iVar4 != 0) {\n            uVar3 = 1;\n            goto code_r0x00439969;\n        }\n    }\n    uVar3 = 0;\ncode_r0x00439969:\n    uVar5 = CONCAT11(uVar3, uVar2);\n    if ((bVar1) && ((uVar2 | uVar5 >> 8) != 0)) {\n        fcn.0043b328();\n    }\n    if ((*(in_EAX + 0x55) & 2) == 0) {\n        fcn.0043b730();\n    }\n    fcn.00436720();\n    if ((bVar1) && (((uVar5 | uVar5 >> 8) != 0 || ((*(*(param_2 + 8) + 0x18) & 0xc0) != 0)))) {\n        fcn.0043b328();\n    }\n    return;\n}\n",
        "token_count": 522
    },
    "004399bc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004399bc(uint param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    \n    if ((*0x439a08 == (*0x439a04 & *(in_EAX + 7))) && (iVar2 = *(param_2 + 8),  (*(iVar2 + 0x18) & 1) == 0)) {\n        cVar3 = fcn.0043637c();\n        if (cVar3 == '\\0') {\n            puVar1 = iVar2 + 0x18;\n            *puVar1 = *puVar1 | 1;\n        }\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 183
    },
    "00439a0c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00439a0c(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.0043b730();\n    (**(*in_EAX + -0x10))();\n    fcn.00437ce0();\n    if ((*(in_EAX + 7) & 1) == 0) {\n        fcn.0040344c();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0043a4a8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043a4a8(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    if ((*(in_EAX + 0x1a6) != '\\0') && (in_EAX = fcn.00438150(),  piVar2 = in_EAX,  -1 < in_EAX + -1)) {\n        do {\n            piVar1 = fcn.00438114();\n            in_EAX = piVar1;\n            if (((*(piVar1 + 0x57) != '\\0') && (in_EAX = (**(*piVar1 + 0x50))(),  in_EAX != '\\0')) &&\n               ((((*(piVar1 + 0x52) & 1) != 0 && (in_EAX = fcn.00435dec(*(*(arg_8h + -4) + 8)),  in_EAX != NULL)) ||\n                ((in_EAX = fcn.004033dc(),  in_EAX != '\\0' && (in_EAX = fcn.0043a4a8(arg_8h),  in_EAX != '\\0')))))) {\n                var_5h = 1;\n                break;\n            }\n            piVar2 = piVar2 + -1;\n        } while (piVar2 != NULL);\n    }\n    return in_EAX & 0xffffff00 | var_5h;\n}\n",
        "token_count": 357
    },
    "0043c234": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c234(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint var_3ch;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_8h = param_2;\n    var_4h = in_EAX;\n    if ((*(in_EAX + 0x165) == '\\0') && (in_EAX[0x5b] == 0)) {\n        uStack80 = 0x43c4ac;\n        (**(*in_EAX + -0x10))();\n        uStack80 = 0x43c4b1;\n        fcn.0042cf2c();\n        uStack80 = 0x43c4b6;\n        cVar3 = fcn.0042d00c();\n        if ((cVar3 != '\\0') && ((*(var_4h + 0x52) & 2) != 0)) {\n            uStack80 = 0x43c4c8;\n            fcn.0042cf2c();\n            uStack80 = 0x43c4d2;\n            fcn.0042d6f4();\n        }\n        return;\n    }\n    uStack80 = 0x43c267;\n    uStack80 = fcn.0043b420();\n    puStack84 = 0x43c26d;\n    var_ch = sub.user32.dll_GetWindowDC();\n    uStack88 = 0x43c49a;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar4 = fcn.0043b420(&fcn.0043c234::var_1ch);\n    sub.user32.dll_GetClientRect(uVar4);\n    uVar4 = fcn.0043b420(&fcn.0043c234::var_2ch);\n    sub.user32.dll_GetWindowRect(uVar4);\n    uVar4 = fcn.0043b420(&fcn.0043c234::var_2ch, 2);\n    sub.user32.dll_MapWindowPoints(0, uVar4);\n    sub.user32.dll_OffsetRect(&fcn.0043c234::var_1ch, -var_2ch, -var_28h);\n    sub.gdi32.dll_ExcludeClipRect(var_ch, var_1ch, var_18h, var_14h, var_10h);\n    iVar2 = var_28h;\n    iVar1 = var_2ch;\n    sub.user32.dll_InflateRect(&fcn.0043c234::var_1ch, var_4h[0x5b], var_4h[0x5b]);\n    var_2ch = var_1ch;\n    var_28h = var_18h;\n    var_24h = var_14h;\n    var_20h = var_10h;\n    if (*(var_4h + 0x165) != '\\0') {\n        iVar8 = 0;\n        if (*(var_4h + 0x163) != '\\0') {\n            iVar8 = var_4h[0x5a];\n        }\n        if (*(var_4h + 0x59) != '\\0') {\n            iVar8 = iVar8 + var_4h[0x5a];\n        }\n        uVar4 = fcn.0043b420(0xfffffff0);\n        uVar5 = sub.user32.dll_GetWindowLongA(uVar4);\n        if ((*(var_4h + 0x162) & 1) != 0) {\n            var_2ch = var_2ch - iVar8;\n        }\n        if ((*(var_4h + 0x162) & 2) != 0) {\n            var_28h = var_28h - iVar8;\n        }\n        if ((*(var_4h + 0x162) & 4) != 0) {\n            var_24h = var_24h + iVar8;\n        }\n        if ((uVar5 & 0x200000) != 0) {\n            iVar6 = (***0x46f870)(0x14);\n            var_24h = var_24h + iVar6;\n        }\n        if ((*(var_4h + 0x162) & 8) != 0) {\n            var_20h = var_20h + iVar8;\n        }\n        if ((uVar5 & 0x100000) != 0) {\n            iVar8 = (***0x46f870)(0x15);\n            var_20h = var_20h + iVar8;\n        }\n        sub.user32.dll_DrawEdge\n                  (var_ch, &fcn.0043c234::var_2ch, \n                   *(*(var_4h + 0x163) * 4 + 0x464ad4) | *(*(var_4h + 0x59) * 4 + 0x464ae4), \n                   *(var_4h + 0x162) | *(*(var_4h + 0x165) * 4 + 0x464af4) | *(*(var_4h + 0x1a5) * 4 + 0x464b04) |\n                   0x2000);\n    }\n    sub.gdi32.dll_IntersectClipRect(var_ch, var_2ch, var_28h, var_24h, var_20h);\n    sub.user32.dll_OffsetRect(&fcn.0043c234::var_2ch, -iVar1, -iVar2);\n    uVar7 = fcn.004200e0();\n    uVar4 = var_ch;\n    sub.user32.dll_FillRect(var_ch, &fcn.0043c234::var_2ch, uVar7);\n    *in_FS_OFFSET = uVar4;\n    uVar4 = fcn.0043b420(var_ch, 0x43c4a1);\n    sub.user32.dll_ReleaseDC(uVar4);\n    return;\n}\n",
        "token_count": 1513
    },
    "00444274": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t __fastcall fcn.00444274(uint param_1, uint8_t param_2)\n\n{\n    int16_t in_AX;\n    int16_t iVar1;\n    uint var_3h;\n    \n    var_3h._2_1_ = in_AX >> 8;\n    iVar1 = 0;\n    if (var_3h._2_1_ == '\\0') {\n        if ((param_2 & 1) != 0) {\n            in_AX = in_AX + 0x2000;\n        }\n        if ((param_2 & 4) != 0) {\n            in_AX = in_AX + 0x4000;\n        }\n        iVar1 = in_AX;\n        if ((param_2 & 2) != 0) {\n            iVar1 = in_AX + -0x8000;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 219
    },
    "0044548c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044548c(uint32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x445d74;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puVar2 = &stack0xfffffffc;\n    if (*(lprc - 0x21) != '\\0') {\n        if (((*(lprc + 0xc) & 1) == 0) && ((*(lprc + 0xc) & 0x40) == 0)) {\n            puVar2 = &stack0xfffffffc;\n            if (*(lprc + 8) != '\\0') {\n                fcn.004200ac();\n                puVar2 = puStack24;\n            }\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            fcn.004200ac();\n            fcn.0041f8e0();\n            puVar2 = puStack24;\n        }\n    }\n    puStack24 = puVar2;\n    if ((*(lprc - 0x29) == '\\0') || (*(lprc - 0x21) != '\\0')) {\n        fcn.004204cc();\n    }\n    if (*(lprc - 0x30) == 0) {\n        cVar3 = fcn.004033dc();\n        if (cVar3 == '\\0') {\n            *(lprc - 0x31) = 0;\n        }\n        else {\n            *(lprc - 0x31) = *(*(lprc - 0x30) + 0x60);\n        }\n    }\n    else {\n        *(lprc - 0x31) = 0;\n    }\n    *(lprc - 0x10) = *(lprc - 0x20) + 1;\n    iVar5 = *(lprc - 0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc - 0xc) = iVar5;\n    fcn.00404394();\n    if (bVar9) {\n        fcn.004204cc();\n        *(lprc - 0x10) = 0;\n        *(lprc - 8) = 0xfffffffc;\n        *(lprc - 0x39) = 0;\n    }\n    else {\n        if ((*(lprc - 0x40) == 0) ||\n           (((iVar5 = *(*(lprc - 0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.00442028(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc - 0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc - 0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0'))))\n            )))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc - 0x41) = uVar4;\n        if ((*(lprc - 0x41) == '\\0') &&\n           ((piVar1 = *(*(lprc - 0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0')))) {\n            if ((*(lprc - 0x40) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc - 8) = *(lprc - 0x10);\n                *(lprc - 4) = *(lprc - 0xc);\n            }\n            else {\n                *(lprc - 8) = *(lprc - 0x10) + *(*(lprc - 0x40) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x40) + 0x30);\n            }\n            *(lprc - 0x39) = 0;\n        }\n        else {\n            *(lprc - 0x39) = 1;\n            if (*(lprc - 0x41) == '\\0') {\n                *(lprc - 8) = *(lprc - 0x10) + 0x10;\n                *(lprc - 4) = *(lprc - 0xc) + 0x10;\n            }\n            else {\n                *(lprc - 8) = *(lprc - 0x10) + *(*(lprc - 0x40) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x40) + 0x30);\n            }\n            if ((*(*(lprc - 0x38) + 0x38) != '\\0') && (*(lprc - 0x21) == '\\0')) {\n                *(lprc - 8) = *(lprc - 8) + 1;\n                *(lprc - 4) = *(lprc - 4) + 1;\n                uVar7 = fcn.004200a4();\n                *(lprc - 0x48) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.004200a4();\n                    *(lprc - 0x48) = uVar7;\n                    fcn.00425080();\n                    fcn.00420080();\n                    fcn.004204cc();\n                }\n                else {\n                    fcn.004200ac();\n                    fcn.004204cc();\n                }\n                fcn.004200ac();\n                *(lprc - 0x10) = *(lprc - 0x10) + 1;\n                *(lprc - 0xc) = *(lprc - 0xc) + 1;\n            }\n            if (*(lprc - 0x41) == '\\0') {\n                *(lprc - 0x5c) = *(lprc - 0x10);\n                *(lprc - 0x58) = *(lprc - 0xc);\n                *(lprc - 0x54) = *(lprc - 8);\n                *(lprc - 0x50) = *(lprc - 4);\n                iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc - 8) - *(lprc - 0x10)) {\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc - 8) - *(lprc - 0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 0x10) = iVar5 + *(lprc - 0x10) + 1;\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                    *(lprc - 8) = iVar5 + *(lprc - 0x10);\n                }\n                iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc - 4) - *(lprc - 0xc)) {\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 0xc) = iVar5 + *(lprc - 0xc) + 1;\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                    *(lprc - 4) = iVar5 + *(lprc - 0xc);\n                }\n                fcn.0042062c();\n                *(lprc - 0x10) = *(lprc - 0x5c);\n                *(lprc - 0xc) = *(lprc - 0x58);\n                *(lprc - 8) = *(lprc - 0x54);\n                *(lprc - 4) = *(lprc - 0x50);\n            }\n            else {\n                iVar5 = *(*(lprc - 0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.00442028(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.00422f44();\n                    *(lprc - 0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc - 0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.0042402c();\n                    *(lprc - 0x48) = *(*(*(lprc - 0x28) + 0xc) + 0x18);\n                    fcn.0041f8e0();\n                    iVar5 = *(lprc - 0x4c);\n                    iVar6 = (**(**(lprc - 0x4c) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc - 0x4c) + 0x2c))(iVar6 + *(lprc - 0xc) + 1);\n                    fcn.004203a4(iVar5);\n                    fcn.0041f8e0();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00403250(0x4459e4);\n                    return;\n                }\n                fcn.00442540(*(lprc - 0x38) & 0xffffff00 | *(*(lprc - 0x38) + 0x39), *(*(lprc - 0x38) + 0x40), \n                             *(lprc - 0xc));\n            }\n            if (*(*(lprc - 0x38) + 0x38) != '\\0') {\n                *(lprc - 8) = *(lprc - 8) + -1;\n                *(lprc - 4) = *(lprc - 4) + -1;\n            }\n        }\n    }\n    *(lprc - 0x10) = *(lprc - 0x10) + -1;\n    *(lprc - 0xc) = *(lprc - 0xc) + -1;\n    *(lprc - 8) = *(lprc - 8) + 2;\n    *(lprc - 4) = *(lprc - 4) + 2;\n    if (((*(*(lprc - 0x38) + 0x38) != '\\0') || ((*(lprc - 0x29) != '\\0' && (*(lprc - 0x39) != '\\0')))) &&\n       (*(lprc - 0x21) == '\\0')) {\n        uVar7 = fcn.0042084c();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc - 0x29) != '\\0') {\n        if (*(lprc - 0x39) != '\\0') {\n            *(lprc - 0x20) = *(lprc - 8) + 1;\n        }\n        if ((*(lprc - 0x5d) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.004200ac();\n        }\n        fcn.004204cc();\n    }\n    if (((*(lprc + 8) != '\\0') && (*(lprc - 0x5d) != '\\0')) && (*(lprc - 0x21) == '\\0')) {\n        if (*(lprc - 0x29) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.0042084c();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.0042084c();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc - 0x29) == '\\0') {\n            iStack32 = lprc - 0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc - 0x29) == '\\0') || (*(lprc - 0x39) == '\\0')) {\n        *(lprc - 0x20) = *(lprc - 8) + 1;\n    }\n    *(lprc - 0x20) = *(lprc - 0x20) + 2;\n    *(lprc - 0x18) = *(lprc - 0x18) + -1;\n    *(lprc - 100) = *(*(lprc - 0x31) * 2 + 0x464c24) | 0x60;\n    if ((*(lprc - 0x65) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc - 100) = *(lprc - 100) | 0x100000;\n    }\n    *(lprc - 0x5c) = *(lprc - 0x20);\n    *(lprc - 0x58) = *(lprc - 0x1c);\n    *(lprc - 0x54) = *(lprc - 0x18);\n    *(lprc - 0x50) = *(lprc - 0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.0041fbac();\n    }\n    fcn.0044523c(*(lprc - 100) | 0x500, lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    uVar8 = (*(lprc - 0x50) - *(lprc - 0x58)) - (*(lprc - 0x14) - *(lprc - 0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc - 0x20, 0, iVar5);\n    if ((((*(lprc + 8) != '\\0') && (*(lprc - 0x29) != '\\0')) && (*(lprc - 0x5d) != '\\0')) && (*(lprc - 0x21) == '\\0')) {\n        sub.user32.dll_OffsetRect(lprc - 0x20, 1, 0);\n    }\n    fcn.0044523c(*(lprc - 100), lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    if ((*(*(lprc - 0x38) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        *(lprc - 0x20) = *(lprc - 0x18);\n        *(lprc - 0x18) = *(lprc - 0x54) + -10;\n        iVar5 = lprc - 0x20;\n        uVar8 = lprc & 0xffffff00 | *(lprc - 0x29);\n        in_stack_ffffffa4 = 2;\n        fcn.00444300();\n        fcn.0044523c(in_stack_ffffffa4, uVar8, iVar5);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.00403f88(0x445d7b);\n    return;\n}\n",
        "token_count": 4046
    },
    "00445d94": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445d94(uint32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x44669c;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puVar2 = &stack0xfffffffc;\n    if (*(lprc - 0x21) != '\\0') {\n        if (((*(lprc + 0xc) & 1) == 0) && ((*(lprc + 0xc) & 0x40) == 0)) {\n            puVar2 = &stack0xfffffffc;\n            if (*(lprc + 8) != '\\0') {\n                fcn.004200ac();\n                puVar2 = puStack24;\n            }\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            fcn.004200ac();\n            fcn.0041f8e0();\n            puVar2 = puStack24;\n        }\n    }\n    puStack24 = puVar2;\n    if ((*(lprc - 0x29) == '\\0') || ((*(lprc - 0x21) != '\\0' && (*(*(lprc - 0x38) + 0x38) == '\\0')))) {\n        fcn.004204cc();\n    }\n    if (*(lprc - 0x30) == 0) {\n        cVar3 = fcn.004033dc();\n        if (cVar3 == '\\0') {\n            *(lprc - 0x31) = 0;\n        }\n        else {\n            *(lprc - 0x31) = *(*(lprc - 0x30) + 0x60);\n        }\n    }\n    else {\n        *(lprc - 0x31) = 0;\n    }\n    *(lprc - 8) = *(lprc - 0x18) + -1;\n    iVar5 = *(lprc - 0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc - 0xc) = iVar5;\n    fcn.00404394();\n    if (bVar9) {\n        fcn.004204cc();\n        *(lprc - 0x10) = *(lprc - 8) + 2;\n        *(lprc - 8) = 0;\n        *(lprc - 0x39) = 0;\n    }\n    else {\n        if ((*(lprc - 0x40) == 0) ||\n           (((iVar5 = *(*(lprc - 0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.00442028(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc - 0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc - 0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0'))))\n            )))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc - 0x41) = uVar4;\n        if ((*(lprc - 0x41) == '\\0') &&\n           ((piVar1 = *(*(lprc - 0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0')))) {\n            if ((*(lprc - 0x40) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc - 0x10) = *(lprc - 8);\n                *(lprc - 4) = *(lprc - 0xc);\n            }\n            else {\n                *(lprc - 0x10) = *(lprc - 8) - *(*(lprc - 0x40) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x40) + 0x30);\n            }\n            *(lprc - 0x39) = 0;\n        }\n        else {\n            *(lprc - 0x39) = 1;\n            if (*(lprc - 0x41) == '\\0') {\n                *(lprc - 0x10) = *(lprc - 8) + -0x10;\n                *(lprc - 4) = *(lprc - 0xc) + 0x10;\n            }\n            else {\n                *(lprc - 0x10) = *(lprc - 8) - *(*(lprc - 0x40) + 0x34);\n                *(lprc - 4) = *(lprc - 0xc) + *(*(lprc - 0x40) + 0x30);\n            }\n            if (*(*(lprc - 0x38) + 0x38) != '\\0') {\n                *(lprc - 0x10) = *(lprc - 0x10) + -1;\n                *(lprc - 4) = *(lprc - 4) + 1;\n                uVar7 = fcn.004200a4();\n                *(lprc - 0x48) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.004200a4();\n                    *(lprc - 0x48) = uVar7;\n                    fcn.00425080();\n                    fcn.00420080();\n                    fcn.004204cc();\n                }\n                else {\n                    fcn.004200ac();\n                    fcn.004204cc();\n                }\n                fcn.004200ac();\n                *(lprc - 8) = *(lprc - 8) + -1;\n                *(lprc - 0xc) = *(lprc - 0xc) + 1;\n            }\n            if (*(lprc - 0x41) == '\\0') {\n                *(lprc - 0x5c) = *(lprc - 0x10);\n                *(lprc - 0x58) = *(lprc - 0xc);\n                *(lprc - 0x54) = *(lprc - 8);\n                *(lprc - 0x50) = *(lprc - 4);\n                iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc - 8) - *(lprc - 0x10)) {\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc - 8) - *(lprc - 0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 8) = (*(lprc - 8) - iVar5) + 1;\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x2c))();\n                    *(lprc - 0x10) = *(lprc - 8) - iVar5;\n                }\n                iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc - 4) - *(lprc - 0xc)) {\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc - 0xc) = iVar5 + *(lprc - 0xc) + 1;\n                    iVar5 = (**(**(*(lprc - 0x38) + 0x4c) + 0x20))();\n                    *(lprc - 4) = iVar5 + *(lprc - 0xc);\n                }\n                fcn.0042062c();\n                *(lprc - 0x10) = *(lprc - 0x5c);\n                *(lprc - 0xc) = *(lprc - 0x58);\n                *(lprc - 8) = *(lprc - 0x54);\n                *(lprc - 4) = *(lprc - 0x50);\n            }\n            else {\n                iVar5 = *(*(lprc - 0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.00442028(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.00422f44();\n                    *(lprc - 0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc - 0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.0042402c();\n                    *(lprc - 0x48) = *(*(*(lprc - 0x28) + 0xc) + 0x18);\n                    fcn.0041f8e0();\n                    iVar5 = *(lprc - 0x4c);\n                    iVar6 = (**(**(lprc - 0x4c) + 0x20))();\n                    uVar8 = (*(lprc - 4) - *(lprc - 0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc - 0x4c) + 0x2c))(iVar6 + *(lprc - 0xc) + 1);\n                    fcn.004203a4(iVar5);\n                    fcn.0041f8e0();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00403250(0x4462f4);\n                    return;\n                }\n                fcn.00442540(*(lprc - 0x38) & 0xffffff00 | *(*(lprc - 0x38) + 0x39), *(*(lprc - 0x38) + 0x40), \n                             *(lprc - 0xc));\n            }\n            if (*(*(lprc - 0x38) + 0x38) != '\\0') {\n                *(lprc - 8) = *(lprc - 8) + -1;\n                *(lprc - 4) = *(lprc - 4) + -1;\n            }\n        }\n    }\n    *(lprc - 0x10) = *(lprc - 0x10) + -1;\n    *(lprc - 0xc) = *(lprc - 0xc) + -1;\n    *(lprc - 8) = *(lprc - 8) + 2;\n    *(lprc - 4) = *(lprc - 4) + 2;\n    if ((*(*(lprc - 0x38) + 0x38) != '\\0') ||\n       (((*(lprc - 0x29) != '\\0' && (*(lprc - 0x39) != '\\0')) && (*(lprc - 0x21) == '\\0')))) {\n        uVar7 = fcn.0042084c();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc - 0x29) != '\\0') {\n        if (*(lprc - 0x39) != '\\0') {\n            *(lprc - 0x18) = *(lprc - 0x10) + -1;\n        }\n        if ((*(lprc - 0x5d) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.004200ac();\n        }\n        fcn.004204cc();\n    }\n    if (((*(lprc + 8) != '\\0') && (*(lprc - 0x5d) != '\\0')) && (*(lprc - 0x21) == '\\0')) {\n        if (*(lprc - 0x29) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.0042084c();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.0042084c();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc - 0x29) == '\\0') {\n            iStack32 = lprc - 0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc - 0x29) == '\\0') || (*(lprc - 0x39) == '\\0')) {\n        *(lprc - 0x18) = *(lprc - 0x10) + -1;\n    }\n    *(lprc - 0x20) = *(lprc - 0x20) + 2;\n    *(lprc - 0x18) = *(lprc - 0x18) + -1;\n    *(lprc - 100) = *(*(lprc - 0x31) * 2 + 0x464c24) | 0x60;\n    if ((*(lprc - 0x65) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc - 100) = *(lprc - 100) | 0x100000;\n    }\n    *(lprc - 0x5c) = *(lprc - 0x20);\n    *(lprc - 0x58) = *(lprc - 0x1c);\n    *(lprc - 0x54) = *(lprc - 0x18);\n    *(lprc - 0x50) = *(lprc - 0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.0041fbac();\n    }\n    fcn.0044523c(*(lprc - 100) | 0x500, lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    *(lprc - 0x20) = *(lprc - 0x5c);\n    *(lprc - 0x18) = *(lprc - 0x54);\n    uVar8 = (*(lprc - 0x50) - *(lprc - 0x58)) - (*(lprc - 0x14) - *(lprc - 0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc - 0x20, 0, iVar5);\n    if (((*(lprc + 8) != '\\0') && (*(lprc - 0x29) != '\\0')) && (*(lprc - 0x5d) != '\\0')) {\n        sub.user32.dll_OffsetRect(lprc - 0x20, 1, 0);\n    }\n    fcn.0044523c(*(lprc - 100), lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    if ((*(*(lprc - 0x38) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        fcn.00444300();\n        *(lprc - 0x20) = 10;\n        iVar5 = fcn.004206ac();\n        *(lprc - 0x18) = iVar5 + *(lprc - 0x20);\n        in_stack_ffffffa4 = 2;\n        fcn.0044523c(2, lprc & 0xffffff00 | *(lprc - 0x29), lprc - 0x20);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.00403f88(0x4466a3);\n    return;\n}\n",
        "token_count": 4074
    },
    "004466bc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004466bc(uint noname_0, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    uint var_65h;\n    uint var_5dh;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    var_20h = *in_ECX;\n    uStack32 = in_ECX[1];\n    uStack28 = in_ECX[2];\n    uStack24 = in_ECX[3];\n    iVar2 = fcn.004471d4();\n    iVar3 = fcn.004467f0();\n    if (((iVar2 == 0) || ((*(iVar2 + 0x40) == '\\0' && (iVar3 == 0)))) ||\n       ((*(in_EAX + 0x9a) == 0 && (*(in_EAX + 0x92) == 0)))) {\n        if ((iVar2 == 0) || (cVar1 = fcn.00448810(),  cVar1 != '\\0')) {\n            fcn.00445d94(&stack0xfffffffc);\n        }\n        else {\n            fcn.0044548c(&stack0xfffffffc);\n        }\n    }\n    else {\n        (**(*in_EAX + 0x34))(in_EAX & 0xffffff00 | (arg_ch & 1) != 0);\n        if (*(in_EAX + 0x9a) != 0) {\n            (*in_EAX[0x26])(&var_20h & 0xffff0000 | arg_ch & 0xffff, &var_20h);\n        }\n    }\n    return;\n}\n",
        "token_count": 424
    },
    "0044709c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044709c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00403250();\n        *(in_EAX + 0x44) = 0;\n    }\n    else {\n        if (*(in_EAX + 0x44) == 0) {\n            iVar1 = fcn.0040344c();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x44) = uVar2;\n        }\n        (**(**(in_EAX + 0x44) + 0xc))();\n        iVar1 = *(in_EAX + 0x44);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x447330;\n        fcn.0040344c();\n        fcn.0041c94c();\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "00448548": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448548(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint hMenu;\n    \n    iVar1 = sub.user32.dll_GetMenuItemCount();\n    puVar2 = arg_8h + -0x200;\n    iVar4 = 0;\n    while ((iVar4 < iVar1 && (puVar2 < arg_8h + -5))) {\n        fcn.00448ae4(0x400, (arg_8h + -5) - puVar2, puVar2);\n        puVar2 = fcn.004085f4();\n        uVar3 = sub.user32.dll_GetMenuState();\n        if ((uVar3 & 2) != 0) {\n            *puVar2 = 0x24;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 0x40) != 0) {\n            *puVar2 = 0x40;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 1) != 0) {\n            *puVar2 = 0x23;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        *puVar2 = 0x3b;\n        puVar2 = puVar2 + 1;\n        *puVar2 = 0;\n        iVar4 = iVar4 + 1;\n    }\n    return;\n}\n",
        "token_count": 378
    },
    "00449758": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449758(uint32_t arg_8h)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    uint16_t extraout_var;\n    uint16_t extraout_var_00;\n    uint16_t extraout_var_01;\n    uint16_t uVar3;\n    uint var_15h;\n    uint var_4h;\n    \n    if ((**0x46f858 < 5) && ((**0x46f858 != 4 || (**0x46fa98 < 1)))) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    fcn.0040344c();\n    uVar2 = fcn.004033dc();\n    if (((arg_8h & 1) == 0) || ((uVar2 != 0 && ((uVar2 == 0 || (bVar1)))))) {\n        if ((bVar1) && ((arg_8h & 0x80) != 0)) {\n            fcn.004200ac();\n            fcn.0041f8e0();\n            uVar3 = extraout_var_00;\n        }\n        else {\n            fcn.004200ac();\n            fcn.0041f8e0();\n            uVar3 = extraout_var_01;\n        }\n    }\n    else {\n        fcn.004200ac();\n        fcn.0041f8e0();\n        uVar3 = extraout_var;\n    }\n    (**(*in_EAX + 0x30))(arg_8h & 0xff00 | uVar3 << 0x10 | uVar2, arg_8h & 0xffff | uVar3 << 0x10);\n    return;\n}\n",
        "token_count": 393
    },
    "0044c580": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.0044c580(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint32_t unaff_EBX;\n    uint32_t uVar2;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *0x44c5d0;\n    if ((in_EAX & 4) != 0) {\n        uVar2 = uVar2 | 1;\n    }\n    if ((in_EAX & 8) != 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 1) != 0) {\n        uVar2 = uVar2 | 8;\n    }\n    if ((in_EAX & 2) != 0) {\n        uVar2 = uVar2 | 0x10;\n    }\n    if ((in_EAX & 0x10) != 0) {\n        uVar2 = uVar2 | 0x20;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x12);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 269
    },
    "0044d838": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d838(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_1 != param_2) {\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            *(*(in_EAX + 0x208) + 0x1e) = 1;\n            *(*(in_EAX + 0x20c) + 0x1e) = 1;\n        }\n        fcn.0044cf5c();\n        fcn.0044cf5c();\n        if (*(in_EAX + 0x210) == '\\0') {\n            if (*(*(in_EAX + 0x208) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x208) + 0x10), param_2, param_1);\n                fcn.0044d0ac();\n            }\n            if (*(*(in_EAX + 0x20c) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x20c) + 0x10), param_2, param_1);\n                fcn.0044d0ac();\n            }\n        }\n    }\n    *(*(in_EAX + 0x208) + 0x1e) = 0;\n    *(*(in_EAX + 0x20c) + 0x1e) = 0;\n    return;\n}\n",
        "token_count": 353
    },
    "0044ea64": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ea64(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x2f4) & 1) == 0) {\n        if ((param_2 != '\\0') && (param_2 != *(in_EAX + 0x57))) {\n            fcn.0044fb9c();\n        }\n        fcn.00434b64();\n    }\n    else {\n        if (param_2 == '\\0') {\n            *(in_EAX + 0x2f4) = *(in_EAX + 0x2f4) & 0xfd;\n            return;\n        }\n        *(in_EAX + 0x2f4) = *(in_EAX + 0x2f4) | 2;\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "00450430": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450430(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4504d8;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (param_2 == *(in_EAX + 0x220)) goto code_r0x004504c2;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 == 0) goto code_r0x0045049b;\n    puVar1 = &stack0xfffffffc;\n    if (in_EAX == param_2) {\ncode_r0x0045047a:\n        puStack24 = puVar1;\n        fcn.00405d0c();\n        fcn.0040b564();\n        fcn.004039c4();\n        puVar1 = puStack24;\n    }\n    else {\n        iVar3 = fcn.0044c6cc();\n        puVar1 = puStack24;\n        if (in_EAX != iVar3) goto code_r0x0045047a;\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            cVar2 = fcn.0040344c();\n            puVar1 = puStack24;\n            if (cVar2 == '\\0') goto code_r0x0045047a;\n        }\n    }\ncode_r0x0045049b:\n    puStack24 = puVar1;\n    *(in_EAX + 0x220) = param_2;\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        if (*(in_EAX + 0x22e) != '\\0') {\n            fcn.004507e8();\n        }\n        fcn.0040344c();\n    }\ncode_r0x004504c2:\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4504df;\n    uStack28 = 0x4504d7;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 538
    },
    "00450d04": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450d04(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (((*(*(arg_8h + -4) + 0x229) != '\\0') && ((*(*(arg_8h + -4) + 0x228) & 1) != 0)) &&\n       (*(*(arg_8h + -4) + 0x22f) != '\\x01')) {\n        uVar1 = fcn.0043b420(0);\n        uVar1 = sub.user32.dll_GetSystemMenu(uVar1);\n        if (*(*(arg_8h + -4) + 0x229) == '\\x03') {\n            sub.user32.dll_DeleteMenu(uVar1, 0xf130, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 7, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 5, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf030, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf020, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf000, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf120, 0);\n        }\n        else {\n            if ((*(*(arg_8h + -4) + 0x228) & 2) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf020, 1);\n            }\n            if ((*(*(arg_8h + -4) + 0x228) & 4) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf030, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "00452928": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00452928(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4529ff;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = fcn.00439ebc();\n    if (iVar1 == 1) {\n        fcn.00434bb8();\n        fcn.00404078();\n        uVar2 = fcn.00404248();\n        fcn.00404448(uVar2);\n        fcn.00434bc8();\n        iVar1 = fcn.00404248();\n        if (0 < iVar1) {\n            iVar3 = 1;\n            do {\n                if ((*(iVar3 + -1) == '\\n') || (*(iVar3 + -1) == '\\r')) {\n                    fcn.004045d4();\n                    break;\n                }\n                iVar3 = iVar3 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00434c74();\n    }\n    fcn.00439d28();\n    fcn.00434168();\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        fcn.0044ea64();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x452a06;\n    uStack32 = 0x4529fe;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 413
    },
    "00457184": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457184(uint32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    piVar1 = *(in_EAX + 0x208);\n    if ((piVar1 != NULL) && ((*(in_EAX + 0x1c) & 1) == 0)) {\n        if (*param_2 < 0xf) {\n            *param_2 = 0xf;\n        }\n        iVar2 = *param_1 >> 1;\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + ((*param_1 & 1) != 0);\n        }\n        (**(*piVar1 + 0x84))(iVar2, *param_2);\n        (**(**(in_EAX + 0x20c) + 0x84))((*param_1 - *(*(in_EAX + 0x208) + 0x4c)) + 1, *param_2);\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "0045ba2c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045ba2c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar2 = 0;\n    if ((arg_ch != 0) && (iVar5 = arg_8h,  iVar6 = arg_ch,  iVar2 = fcn.0045b9c0(arg_8h),  iVar2 == 0)) {\n        fcn.00437cb8(iVar5, iVar6);\n        var_8h = fcn.00438150();\n        if (-1 < var_8h + -1) {\n            do {\n                fcn.00438114();\n                cVar1 = fcn.0045be0c();\n                if (cVar1 != '\\0') {\n                    fcn.00434b64();\n                    fcn.00416d68();\n                }\n                var_8h = var_8h + -1;\n            } while (var_8h != 0);\n        }\n        uVar4 = 0;\n        do {\n            if (0 < *(arg_ch + uVar4 * 4)) {\n                if (*(arg_8h + 0x24 + uVar4 * 4) == 0) {\n                    piVar3 = fcn.00433d54();\n                    if ((uVar4 & 1) == 0) {\n                        fcn.004343c4();\n                    }\n                    else {\n                        fcn.004343e8();\n                    }\n                    fcn.00434168();\n                    (**(*piVar3 + 0x68))();\n                    *(arg_8h + 0x24 + uVar4 * 4) = piVar3;\n                }\n                if ((uVar4 & 1) == 0) {\n                    fcn.00434410();\n                }\n                else {\n                    fcn.00434434();\n                }\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 != 4);\n        fcn.00437cc0();\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 520
    },
    "0045d6f8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.0045d6f8(uint32_t param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uStack20;\n    \n    uStack20 = CONCAT31(param_1 >> 8, 1);\n    uVar1 = fcn.0045d780();\n    uVar2 = uVar1;\n    if (uVar1 == 0) {\n        uVar2 = fcn.00404248();\n        if (0 < uVar2) {\n            fcn.0045d688();\n            uVar2 = fcn.0045d780();\n            uVar1 = uVar2;\n        }\n    }\n    if (uVar1 != 0) {\n        uVar2 = fcn.00404248();\n        if (uVar2 == 0) {\n            uVar2 = fcn.0045d6c0();\n            goto code_r0x0045d774;\n        }\n    }\n    if (uVar1 != 0) {\n        uVar2 = fcn.0045e00c();\n        uStack20 = param_1 & 0xffffff00 | uVar2 & 0xff;\n        uStack20._0_1_ = uVar2 & 0xff;\n        if ((uStack20 == '\\0') && ((*(in_EAX + 0x1c) & 1) == 0)) {\n            uVar2 = fcn.0045d6c0();\n        }\n    }\ncode_r0x0045d774:\n    return CONCAT44(uStack20, uVar2 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 384
    },
    "0045de88": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0045de88(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x34) == 0) {\n        if ((*(in_EAX + 0x1c) & 1) != 0) {\n            fcn.00403fdc();\n        }\n    }\n    else {\n        fcn.00403fdc();\n        cVar1 = fcn.0045d6f8();\n        if ((cVar1 == '\\0') &&\n           ((((*(in_EAX + 0x1c) & 1) == 0 || (*(*(in_EAX + 0x34) + 0x38) != 0)) ||\n            (*(*(in_EAX + 0x34) + 0xc5) != '\\x01')))) {\n            fcn.00403f88();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "00401380": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.00401380(void)\n\n{\n    int32_t **ppiVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    if (*0x4705e8 == NULL) {\n        puVar2 = sub.kernel32.dll_LocalAlloc(0, 0x644);\n        if (puVar2 == NULL) {\n            return NULL;\n        }\n        *puVar2 = *0x4705e4;\n        iVar4 = 0;\n        *0x4705e4 = puVar2;\n        do {\n            ppiVar1 = puVar2 + iVar4 * 4 + 1;\n            *ppiVar1 = *0x4705e8;\n            iVar4 = iVar4 + 1;\n            *0x4705e8 = ppiVar1;\n        } while (iVar4 != 100);\n    }\n    piVar3 = *0x4705e8;\n    *0x4705e8 = **0x4705e8;\n    return piVar3;\n}\n",
        "token_count": 238
    },
    "00401490": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00401490(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *in_EAX;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t iStack20;\n    \n    piVar6 = in_EAX;\n    while( true ) {\n        uVar1 = *param_2;\n        uVar4 = piVar6[2];\n        if ((uVar4 <= uVar1) && (uVar1 + param_2[1] <= uVar4 + piVar6[3])) break;\n        piVar6 = *piVar6;\n        if (in_EAX == piVar6) {\n            uVar5 = 0;\ncode_r0x0040151c:\n            return CONCAT44(iStack20, uVar5);\n        }\n    }\n    if (uVar1 == uVar4) {\n        piVar6[2] = piVar6[2] + param_2[1];\n        uVar4 = param_2[1];\n        piVar6[3] = piVar6[3] - uVar4;\n        if (piVar6[3] == 0) {\n            uVar4 = fcn.00401408();\n        }\n    }\n    else if (uVar1 + param_2[1] == uVar4 + piVar6[3]) {\n        piVar6[3] = piVar6[3] - param_2[1];\n    }\n    else {\n        uVar2 = *param_2;\n        uVar3 = param_2[1];\n        iStack20 = (piVar6[2] + piVar6[3]) - (uVar2 + uVar3);\n        piVar6[3] = uVar1 - uVar4;\n        uVar4 = fcn.004013d8(uVar2 + uVar3);\n        if (uVar4 == '\\0') {\n            uVar5 = 0;\n            goto code_r0x0040151c;\n        }\n    }\n    uVar5 = CONCAT31(uVar4 >> 8, 1);\n    goto code_r0x0040151c;\n}\n",
        "token_count": 510
    },
    "00401588": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401588(int32_t *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    param_1[1] = 0x100000;\n    iVar2 = sub.kernel32.dll_VirtualAlloc();\n    *param_1 = iVar2;\n    if (iVar2 == 0) {\n        param_1[1] = param_2 + 0xffffU & 0xffff0000;\n        iVar2 = sub.kernel32.dll_VirtualAlloc();\n        *param_1 = iVar2;\n    }\n    if (*param_1 != 0) {\n        cVar1 = fcn.004013d8();\n        if (cVar1 == '\\0') {\n            sub.kernel32.dll_VirtualFree(*param_1, 0, 0x8000);\n            *param_1 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "00401600": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401600(uint32_t *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    \n    uStack28 = 0xffffffff;\n    uStack24 = 0;\n    puVar1 = *0x4705ec;\n    while (puVar4 = puVar1,  puVar4 != 0x4705ec) {\n        puVar1 = *puVar4;\n        uVar2 = puVar4[2];\n        if ((in_EAX <= uVar2) && (uVar2 + puVar4[3] <= param_2 + in_EAX)) {\n            if (uVar2 < uStack28) {\n                uStack28 = uVar2;\n            }\n            if (uStack24 < uVar2 + puVar4[3]) {\n                uStack24 = uVar2 + puVar4[3];\n            }\n            iVar3 = sub.kernel32.dll_VirtualFree(uVar2, 0, 0x8000);\n            if (iVar3 == 0) {\n                *0x4705c8 = 1;\n            }\n            fcn.00401408();\n        }\n    }\n    *param_1 = 0;\n    if (uStack24 != 0) {\n        *param_1 = uStack28;\n        param_1[1] = uStack24 - uStack28;\n    }\n    return;\n}\n",
        "token_count": 357
    },
    "004017cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004017cc(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iStack24;\n    \n    puVar1 = *0x4705fc;\n    do {\n        for (; puVar1 != 0x4705fc; puVar1 = *puVar1) {\n            if ((in_EAX + 0x3fffU & 0xffffc000) <= puVar1[3]) {\n                fcn.004016b8();\n                if (*param_2 == 0) {\n                    return;\n                }\n                puVar1[2] = puVar1[2] + param_2[1];\n                puVar1[3] = puVar1[3] - param_2[1];\n                if (puVar1[3] != 0) {\n                    return;\n                }\n                fcn.00401408();\n                return;\n            }\n        }\n        fcn.00401524();\n        if (*param_2 == 0) {\n            return;\n        }\n        fcn.00401420();\n        puVar1 = *0x4705fc;\n    } while (iStack24 != 0);\n    fcn.00401600();\n    *param_2 = 0;\n    return;\n}\n",
        "token_count": 292
    },
    "0040185c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040185c(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iStack32;\n    int32_t iStack24;\n    \n    uVar2 = param_2 + 0x3fffU & 0xffffc000;\n    puVar1 = *0x4705fc;\ncode_r0x00401882:\n    do {\n        for (; (puVar1 != 0x4705fc && (in_EAX != puVar1[2])); puVar1 = *puVar1) {\n        }\n        if (in_EAX == puVar1[2]) {\n            if (uVar2 <= puVar1[3]) goto code_r0x0040192f;\n            fcn.00401588();\n            if (iStack32 != 0) {\n                fcn.00401420();\n                puVar1 = *0x4705fc;\n                if (iStack24 == 0) {\n                    fcn.00401600();\n                    *param_1 = 0;\n                    return;\n                }\n                goto code_r0x00401882;\n            }\n        }\n        fcn.00401588();\n        if (iStack32 == 0) {\ncode_r0x0040192f:\n            if ((in_EAX != puVar1[2]) || (puVar1[3] < uVar2)) {\n                *param_1 = 0;\n                return;\n            }\n            fcn.004016b8();\n            if (*param_1 == 0) {\n                return;\n            }\n            puVar1[2] = puVar1[2] + param_1[1];\n            puVar1[3] = puVar1[3] - param_1[1];\n            if (puVar1[3] != 0) {\n                return;\n            }\n            fcn.00401408();\n            return;\n        }\n        fcn.00401420();\n        puVar1 = *0x4705fc;\n        if (iStack24 == 0) {\n            fcn.00401600();\n            *param_1 = 0;\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 501
    },
    "00401980": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401980(uint *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iStack28;\n    int32_t iStack20;\n    \n    if ((in_EAX + 0x3fffU & 0xffffc000) < (param_2 + in_EAX & 0xffffc000U)) {\n        fcn.0040174c();\n        fcn.00401420();\n        if (iStack28 != 0) {\n            fcn.00401600();\n            iStack28 = iStack20;\n        }\n        if (iStack28 != 0) {\n            fcn.00401490();\n        }\n    }\n    else {\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00401a0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00401a0c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x401ac2;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    sub.kernel32.dll_InitializeCriticalSection(0x4705cc);\n    if (*0x47004d != '\\0') {\n        sub.kernel32.dll_EnterCriticalSection(0x4705cc);\n    }\n    fcn.004013d0();\n    fcn.004013d0();\n    fcn.004013d0();\n    uVar2 = 0;\n    *0x470624 = sub.kernel32.dll_LocalAlloc(0, 0xff8);\n    if (*0x470624 != 0) {\n        iVar1 = 3;\n        do {\n            *(*0x470624 + -0xc + iVar1 * 4) = 0;\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != 0x401);\n        *0x470610 = 0x47060c;\n        *0x47060c = 0x47060c;\n        *0x470618 = 0x47060c;\n        *0x4705c4 = 1;\n    }\n    *in_FS_OFFSET = uVar2;\n    if (*0x47004d != '\\0') {\n        sub.kernel32.dll_LeaveCriticalSection(0x4705cc, 0x401ac9);\n    }\n    return;\n}\n",
        "token_count": 370
    },
    "00401ad0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00401ad0(void)\n\n{\n    uchar *puVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint *puVar3;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = &stack0xfffffffc;\n    if (*0x4705c4 == '\\0') {\n        return;\n    }\n    uStack16 = 0x401ba6;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puVar1 = &stack0xfffffffc;\n    if (*0x47004d != '\\0') {\n        sub.kernel32.dll_EnterCriticalSection(0x4705cc);\n        puVar1 = puStack12;\n    }\n    puStack12 = puVar1;\n    *0x4705c4 = 0;\n    puVar3 = *0x470624;\n    sub.kernel32.dll_LocalFree();\n    *0x470624 = NULL;\n    for (puVar2 = *0x4705ec; puVar2 != 0x4705ec; puVar2 = *puVar2) {\n        puVar3 = puVar2[2];\n        sub.kernel32.dll_VirtualFree();\n    }\n    fcn.004013d0();\n    fcn.004013d0();\n    fcn.004013d0();\n    while (puVar2 = *0x4705e4,  puVar2 != NULL) {\n        *0x4705e4 = *puVar2;\n        sub.kernel32.dll_LocalFree();\n        puVar3 = puVar2;\n    }\n    *0x4705e4 = puVar2;\n    *in_FS_OFFSET = puVar3;\n    uStack20 = 0x401bad;\n    if (*0x47004d != '\\0') {\n        sub.kernel32.dll_LeaveCriticalSection(0x4705cc);\n    }\n    sub.kernel32.dll_DeleteCriticalSection(0x4705cc);\n    return;\n}\n",
        "token_count": 444
    },
    "00401ea0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00401ea0(void)\n\n{\n    if (0 < *0x47061c) {\n        if (*0x47061c < 0xc) {\n            *0x4705c8 = 7;\n        }\n        else {\n            **0x470620 = *0x47061c | 2;\n            fcn.00401c74();\n            *0x470620 = NULL;\n            *0x47061c = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00401f78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00401f78(void)\n\n{\n    uint uVar1;\n    int32_t iStack12;\n    uint uStack8;\n    \n    fcn.004017cc();\n    if (iStack12 != 0) {\n        uVar1 = fcn.00401eec();\n        if (uVar1 != '\\0') {\n            uVar1 = CONCAT31(uVar1 >> 8, 1);\n            goto code_r0x00401f9f;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00401f9f:\n    return CONCAT44(uStack8, uVar1);\n}\n",
        "token_count": 139
    },
    "00401fa4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00401fa4(void)\n\n{\n    uint uVar1;\n    int32_t iStack16;\n    uint uStack12;\n    \n    fcn.0040185c();\n    if (iStack16 != 0) {\n        uVar1 = fcn.00401eec();\n        if (uVar1 != '\\0') {\n            uVar1 = CONCAT31(uVar1 >> 8, 1);\n            goto code_r0x00401fd0;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00401fd0:\n    return CONCAT44(uStack12, uVar1);\n}\n",
        "token_count": 138
    },
    "004020f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t * fcn.004020f8(void)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x4705c4 == '\\0') {\n        puStack28 = 0x402111;\n        cVar2 = fcn.00401a0c();\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    if (0x7ffffff8 < in_EAX) {\n        return NULL;\n    }\n    uStack32 = 0x402274;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    if (*0x47004d != '\\0') {\n        uStack40 = 0x4705cc;\n        puStack28 = &stack0xfffffffc;\n        sub.kernel32.dll_EnterCriticalSection();\n    }\n    puVar4 = *0x470620;\n    uVar5 = in_EAX + 7U & 0xfffffffc;\n    if (uVar5 < 0xc) {\n        uVar5 = 0xc;\n    }\n    if (uVar5 < 0x1001) {\n        uVar3 = uVar5;\n        if (uVar5 < 0) {\n            uVar3 = uVar5 + 3;\n        }\n        puVar1 = *(*0x470624 + -0xc + (uVar3 >> 2) * 4);\n        if (puVar1 != NULL) {\n            *(puVar1 + uVar5) = *(puVar1 + uVar5) & 0xfffffffe;\n            puVar4 = puVar1[1];\n            if (puVar1 == puVar4) {\n                uVar3 = uVar5;\n                if (uVar5 < 0) {\n                    uVar3 = uVar5 + 3;\n                }\n                *(*0x470624 + -0xc + (uVar3 >> 2) * 4) = 0;\n            }\n            else {\n                uVar3 = uVar5;\n                if (uVar5 < 0) {\n                    uVar3 = uVar5 + 3;\n                }\n                *(*0x470624 + -0xc + (uVar3 >> 2) * 4) = puVar4;\n                uVar3 = *puVar1;\n                *(uVar3 + 4) = puVar4;\n                *puVar4 = uVar3;\n            }\n            *puVar1 = puVar1[2] | 2;\n            *0x4705b4 = *0x4705b4 + 1;\n            *0x4705b8 = *0x4705b8 + (uVar5 - 4);\n            fcn.00403a70();\n            return puVar1 + 1;\n        }\n    }\n    if (*0x47061c < uVar5) {\n        fcn.00402004();\n        puVar4 = NULL;\n        *in_FS_OFFSET = uStack40;\n        uStack32 = 0x40227b;\n        if (*0x47004d != '\\0') {\n            uStack36 = 0x4705cc;\n            puVar4 = sub.kernel32.dll_LeaveCriticalSection();\n        }\n        return puVar4;\n    }\n    *0x47061c = *0x47061c - uVar5;\n    if (*0x47061c < 0xc) {\n        uVar5 = uVar5 + *0x47061c;\n        *0x47061c = 0;\n    }\n    *0x470620 = *0x470620 + uVar5;\n    *puVar4 = uVar5 | 2;\n    *0x4705b4 = *0x4705b4 + 1;\n    *0x4705b8 = *0x4705b8 + (uVar5 - 4);\n    fcn.00403a70();\n    return puVar4 + 1;\n}\n",
        "token_count": 966
    },
    "00402608": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00402608(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0x4705c4 == '\\0') {\n        puStack24 = 0x402621;\n        cVar1 = fcn.00401a0c();\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n    }\n    uStack28 = 0x4026b9;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*0x47004d != '\\0') {\n        uStack36 = 0x4705cc;\n        puStack24 = &stack0xfffffffc;\n        sub.kernel32.dll_EnterCriticalSection();\n    }\n    cVar1 = fcn.0040242c();\n    if ((cVar1 == '\\0') && (iVar2 = fcn.004020f8(),  iVar2 != 0)) {\n        fcn.004028c8();\n        fcn.00402288();\n    }\n    uVar3 = 0;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x4026c0;\n    if (*0x47004d != '\\0') {\n        uStack32 = 0x4705cc;\n        uVar3 = sub.kernel32.dll_LeaveCriticalSection();\n    }\n    return uVar3;\n}\n",
        "token_count": 363
    },
    "00402828": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402828(void)\n\n{\n    uint8_t in_AL;\n    \n    if (*0x470008 != NULL) {\n        (**0x470008)();\n    }\n    if ((in_AL & 0x7f) == 0) {\n        fcn.00405f78();\n    }\n    fcn.004027d0();\n    return;\n}\n",
        "token_count": 80
    },
    "0040275c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040275c(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00405f78();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.00405f78();\n        return *(*piVar1 + 8);\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "0040277c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040277c(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00405f78();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.00405f78();\n        return *(*piVar1 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "00402834": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402809)\n// WARNING: Removing unreachable block (ram,0x0040280e)\n\nvoid __fastcall fcn.00402834(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00405f78(param_1, param_2);\n    if (*(iVar1 + 4) != 0) {\n        if (*0x470008 != NULL) {\n            (**0x470008)();\n        }\n        fcn.00405f78();\n        fcn.004027d0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00402908": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00402908(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    \n    while( true ) {\n        while ((*in_EAX != 0 && (*in_EAX < 0x21))) {\n            in_EAX = sub.user32.dll_CharNextA();\n        }\n        puVar4 = in_EAX;\n        if ((*in_EAX != 0x22) || (in_EAX[1] != 0x22)) break;\n        in_EAX = in_EAX + 2;\n    }\n    while (0x20 < *puVar4) {\n        if (*puVar4 == 0x22) {\n            puVar2 = sub.user32.dll_CharNextA(puVar4);\n            puVar3 = puVar4;\n            for (; (*puVar2 != 0 && (*puVar2 != 0x22)); puVar2 = sub.user32.dll_CharNextA(puVar3, puVar2)) {\n            }\n            puVar4 = puVar2;\n            if (*puVar2 != 0) {\n                puVar4 = sub.user32.dll_CharNextA(puVar3, puVar2);\n            }\n        }\n        else {\n            puVar4 = sub.user32.dll_CharNextA();\n        }\n    }\n    fcn.004045d4();\n    iVar1 = *param_2;\n    iVar5 = 0;\n    while (0x20 < *in_EAX) {\n        if (*in_EAX == 0x22) {\n            puVar4 = in_EAX;\n            in_EAX = sub.user32.dll_CharNextA(in_EAX);\n            while ((*in_EAX != 0 && (*in_EAX != 0x22))) {\n                puVar3 = sub.user32.dll_CharNextA(puVar4, in_EAX);\n                for (; in_EAX < puVar3; in_EAX = in_EAX + 1) {\n                    *(iVar1 + iVar5) = *in_EAX;\n                    iVar5 = iVar5 + 1;\n                }\n            }\n            if (*in_EAX != 0) {\n                in_EAX = sub.user32.dll_CharNextA(puVar4, in_EAX);\n            }\n        }\n        else {\n            puVar4 = sub.user32.dll_CharNextA();\n            for (; in_EAX < puVar4; in_EAX = in_EAX + 1) {\n                *(iVar1 + iVar5) = *in_EAX;\n                iVar5 = iVar5 + 1;\n            }\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 613
    },
    "004029f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004029f4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uchar auStack276 [264];\n    \n    fcn.00403f88();\n    if (in_EAX == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(0, auStack276, 0x105);\n        fcn.00404078();\n    }\n    else {\n        sub.kernel32.dll_GetCommandLineA();\n        while( true ) {\n            fcn.00402908();\n            if ((in_EAX == 0) || (*param_2 == 0)) break;\n            in_EAX = in_EAX + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "00403304": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403304(int32_t **param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x403388;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *param_1 = NULL;\n    iVar1 = fcn.00403398();\n    if (iVar1 != 0) {\n        if (*(iVar1 + 0x14) == 0) {\n            fcn.004032d4();\n            fcn.00405860();\n        }\n        else {\n            *param_1 = in_EAX + *(iVar1 + 0x14);\n            if (*param_1 != NULL) {\n                (**(**param_1 + 4))(*param_1);\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40338f;\n    uStack32 = 0x403387;\n    fcn.00405848();\n    return;\n}\n",
        "token_count": 281
    },
    "0040344c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040344c(uint param_1, uint param_2)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    uchar in_ZF;\n    \n    fcn.0040341c(param_1);\n    if (!in_ZF) {\n    // WARNING: Could not recover jumptable at 0x00403459. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    if (*0x47002c != NULL) {\n        (**0x47002c)();\n    }\n    *0x464004 = param_2;\n    *0x464000 = 0xd2;\n    fcn.00403e98();\n    return;\n}\n",
        "token_count": 169
    },
    "004035f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004035f0(uint param_1, uint param_2)\n\n{\n    uint auStack12 [3];\n    \n    if (*0x464028 != '\\0') {\n        auStack12[0] = param_2;\n        (**0x470014)(0xeedfae4, 0, 2, auStack12);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "00403e0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403e0c(void)\n\n{\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint uStack8;\n    uchar auStack4 [4];\n    \n    if (*0x47004c != '\\0') {\n        if ((*0x470220 == -0x284e) && (*0x470228 != 0)) {\n            uStack8 = 0x403e35;\n            (**0x470238)();\n        }\n        puStack12 = &stack0xfffffffc;\n        uStack8 = 0;\n        uStack16 = 0x1e;\n        uStack20 = 0x46406c;\n        uStack24 = 0xfffffff5;\n        uStack28 = 0x403e4a;\n        uStack28 = sub.kernel32.dll_GetStdHandle();\n        sub.kernel32.dll_WriteFile();\n        uVar1 = sub.kernel32.dll_GetStdHandle(0xfffffff5, 0x403e94, 2, &stack0xffffffe4, 0);\n        sub.kernel32.dll_WriteFile(uVar1);\n        return;\n    }\n    if (*0x464030 == '\\0') {\n        uStack8 = 0;\n        puStack12 = 0x464064;\n        uStack16 = 0x46406c;\n        uStack20 = 0;\n        uStack24 = 0x403e89;\n        sub.user32.dll_MessageBoxA();\n    }\n    return;\n}\n",
        "token_count": 343
    },
    "00403e98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403e98(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    if ((*0x470660 == 0) && (*0x470048 != NULL)) {\n        do {\n            pcVar1 = *0x470048;\n            *0x470048 = NULL;\n            (*pcVar1)();\n        } while (*0x470048 != NULL);\n    }\n    if (*0x464004 != 0) {\n        fcn.00403d80();\n        fcn.00403e0c();\n        *0x464004 = 0;\n    }\n    do {\n        if ((*0x470660 == 2) && (*0x464000 == 0)) {\n            *0x470644 = 0;\n        }\n        fcn.00403c10();\n        if (((*0x470660 < 2) || (*0x464000 != 0)) && (*0x470648 != 0)) {\n            fcn.004057d8();\n            iVar2 = *(*0x470648 + 0x10);\n            if ((iVar2 != *(*0x470648 + 4)) && (iVar2 != 0)) {\n                sub.kernel32.dll_FreeLibrary(iVar2);\n            }\n        }\n        fcn.00403be8();\n        if (*0x470660 == 1) {\n            (**0x47065c)();\n        }\n        if (*0x470660 != 0) {\n            fcn.00403ddc();\n        }\n        if (*0x470638 == NULL) {\n            if (*0x470028 != NULL) {\n                (**0x470028)();\n            }\n            sub.kernel32.dll_ExitProcess(*0x464000);\n        }\n        puVar3 = *0x470638;\n        puVar4 = 0x470638;\n        for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 482
    },
    "004049ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004049ec(void)\n\n{\n    if (*0x46400c != NULL) {\n        (**0x46400c)();\n        return;\n    }\n    fcn.00402828();\n    return;\n}\n",
        "token_count": 48
    },
    "00404a04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027fc)\n\nvoid __fastcall fcn.00404a04(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00403f88();\n            }\n            else {\n                fcn.00403fac();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00404668();\n            }\n            else {\n                fcn.00404680();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.004049ec();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00404a04();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.004049b8();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.00405848();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x470008 != NULL) {\n                    (**0x470008)();\n                }\n                fcn.004027d0();\n                return;\n            }\n            do {\n                fcn.0040519c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 577
    },
    "00404afc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00404afc(void)\n\n{\n    if (*0x464014 != NULL) {\n        (**0x464014)();\n        return;\n    }\n    fcn.00402828();\n    return;\n}\n",
        "token_count": 46
    },
    "00404da4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404e99)\n// WARNING: Removing unreachable block (ram,0x00404f8e)\n// WARNING: Removing unreachable block (ram,0x00404f95)\n// WARNING: Removing unreachable block (ram,0x00404f1b)\n// WARNING: Removing unreachable block (ram,0x00404f31)\n// WARNING: Removing unreachable block (ram,0x00404f9f)\n// WARNING: Removing unreachable block (ram,0x00404fa2)\n// WARNING: Removing unreachable block (ram,0x00404fa8)\n// WARNING: Removing unreachable block (ram,0x00404f27)\n\nulong __fastcall fcn.00404da4(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    int32_t *piStack36;\n    uint32_t uStack28;\n    int32_t iStack24;\n    \n    iVar7 = 1;\n    uStack28 = 0;\n    iStack24 = 0;\n    if (in_EAX == 0) {\n        *param_2 = 1;\n        goto code_r0x00404fc3;\n    }\n    for (; *(in_EAX + -1 + iVar7) == ' '; iVar7 = iVar7 + 1) {\n    }\n    bVar9 = false;\n    cVar4 = *(in_EAX + -1 + iVar7);\n    if (cVar4 == '-') {\n        bVar9 = true;\n        iVar7 = iVar7 + 1;\n    }\n    else if (cVar4 == '+') {\n        iVar7 = iVar7 + 1;\n    }\n    uVar3 = 1;\n    piStack36 = param_2;\n    if (((*(in_EAX + -1 + iVar7) == '$') || (cVar4 = fcn.00402a54(),  cVar4 == 'X')) ||\n       ((*(in_EAX + -1 + iVar7) == '0' && (cVar4 = fcn.00402a54(),  cVar4 == 'X')))) {\n        if (*(in_EAX + -1 + iVar7) == '0') {\n            iVar7 = iVar7 + 1;\n        }\n        do {\n            iVar7 = iVar7 + 1;\n            uVar1 = *(in_EAX + -1 + iVar7);\n            if (uVar1 - 0x30 < 10) {\n                uVar8 = uVar1 - 0x30;\n            }\n            else if (uVar1 + 0xbf < 6) {\n                uVar8 = uVar1 - 0x37;\n            }\n            else {\n                if (5 < uVar1 + 0x9f) goto code_r0x00404ecb;\n                uVar8 = uVar1 - 0x57;\n            }\n            if (((iStack24 != 0) && (iStack24 < 0)) || ((iStack24 != 0xfffffff && (0xfffffff < iStack24))))\n            goto code_r0x00404ecb;\n            uVar2 = uStack28 >> 0x1c;\n            uVar5 = uStack28 * 0x10;\n            uStack28 = uVar5 + uVar8;\n            iStack24 = (iStack24 << 4 | uVar2) + (uVar8 >> 0x1f) + CARRY4(uVar5, uVar8);\n            uVar3 = 0;\n        } while( true );\n    }\n    for (; uVar1 = *(in_EAX + -1 + iVar7),  uVar1 - 0x30 < 10; iVar7 = iVar7 + 1) {\n        iVar6 = fcn.00404d80();\n        piStack36 = (uVar1 - 0x30) + iVar6;\n        uVar3 = 0;\n    }\n    iStack24 = 0;\n    uStack28 = 0;\n    goto code_r0x00404fa9;\ncode_r0x00404ecb:\n    if (bVar9) {\n        bVar9 = uStack28 != 0;\n        uStack28 = -uStack28;\n        iStack24 = -(iStack24 + bVar9);\n    }\ncode_r0x00404fa9:\n    if (uVar3 | *(in_EAX + -1 + iVar7) != '\\0') {\n        *piStack36 = iVar7;\n    }\n    else {\n        *piStack36 = 0;\n    }\ncode_r0x00404fc3:\n    return CONCAT44(iStack24, uStack28);\n}\n",
        "token_count": 1088
    },
    "00405230": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00405230(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack272 [264];\n    \n    if (*(in_EAX + 0x10) == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(*(in_EAX + 4), auStack272, 0x105);\n        iVar1 = fcn.0040546c();\n        *(in_EAX + 0x10) = iVar1;\n        if (iVar1 == 0) {\n            *(in_EAX + 0x10) = *(in_EAX + 4);\n        }\n    }\n    return *(in_EAX + 0x10);\n}\n",
        "token_count": 152
    },
    "004052b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * __cdecl\nfcn.004052b4(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint arg_5ch)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    code *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint in_EDX;\n    uint *puVar6;\n    uint lpFileName;\n    uint lpFindFileData;\n    uint lpString2;\n    char *var_ch;\n    uint iMaxLength;\n    char *lpString1;\n    \n    var_ch = in_EAX;\n    iMaxLength = in_EDX;\n    lpString1 = in_EAX;\n    iVar1 = sub.kernel32.dll_GetModuleHandleA(0x405448);\n    if (((iVar1 == 0) || (pcVar2 = sub.kernel32.dll_GetProcAddress(iVar1, 0x405458),  pcVar2 == NULL)) ||\n       (iVar1 = (*pcVar2)(lpString1, &lpFileName, 0x105),  iVar1 == 0)) {\n        if (*lpString1 == '\\\\') {\n            if (lpString1[1] != '\\\\') {\n                return var_ch;\n            }\n            pcVar3 = fcn.004052a0();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n            pcVar3 = fcn.004052a0();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n        }\n        else {\n            pcVar3 = lpString1 + 2;\n        }\n        iVar1 = pcVar3 - lpString1;\n        puVar6 = &lpFileName;\n        sub.kernel32.dll_lstrcpynA(puVar6, lpString1, iVar1 + 1);\n        while (*pcVar3 != '\\0') {\n            pcVar4 = fcn.004052a0();\n            if (0x105 < pcVar4 + (iVar1 - pcVar3) + 1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar1, pcVar3, pcVar4 + (1 - pcVar3));\n            iVar5 = sub.kernel32.dll_FindFirstFileA(&lpFileName, &lpFindFileData);\n            if (iVar5 == -1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_FindClose(iVar5);\n            iVar5 = sub.kernel32.dll_lstrlenA(&lpString2);\n            if (0x105 < iVar5 + iVar1 + 2) {\n                return var_ch;\n            }\n            *(&lpFileName + iVar1) = 0x5c;\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar1 + 1, &lpString2, 0x104 - iVar1);\n            puVar6 = &lpString2;\n            iVar5 = sub.kernel32.dll_lstrlenA();\n            iVar1 = iVar1 + iVar5 + 1;\n            pcVar3 = pcVar4;\n        }\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength, puVar6);\n    }\n    else {\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength);\n    }\n    return var_ch;\n}\n",
        "token_count": 844
    },
    "0040546c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0040546c(void)\n\n{\n    uint noname_0;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    char *pcVar4;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffe50;\n    uint in_stack_fffffe8c;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    uint in_stack_fffffe98;\n    uint *in_stack_fffffe9c;\n    uint in_stack_fffffea0;\n    uint in_stack_fffffea4;\n    uint in_stack_fffffea8;\n    uint in_stack_fffffeac;\n    uint *noname_12;\n    uint uVar5;\n    uint noname_14;\n    uint noname_15;\n    uint noname_16;\n    uint noname_18;\n    uint *noname_19;\n    uint noname_20;\n    uint lpLibFileName;\n    uint var_18h;\n    uint var_12h;\n    uint var_eh;\n    uint hKey;\n    uint lpString2;\n    \n    noname_20 = 0x105;\n    noname_19 = &fcn.0040546c::lpLibFileName;\n    noname_18 = 0;\n    sub.kernel32.dll_GetModuleFileNameA();\n    var_12h._0_1_ = '\\0';\n    puVar3 = &fcn.0040546c::hKey;\n    noname_16 = 0xf0019;\n    noname_15 = 0;\n    noname_14 = 0x40569c;\n    uVar5 = 0x80000001;\n    noname_12 = 0x4054ab;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 != 0) {\n        noname_12 = &fcn.0040546c::hKey;\n        in_stack_fffffeac = 0xf0019;\n        in_stack_fffffea8 = 0;\n        in_stack_fffffea4 = 0x40569c;\n        in_stack_fffffea0 = 0x80000002;\n        in_stack_fffffe9c = 0x4054c9;\n        iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n        if (iVar1 != 0) {\n            in_stack_fffffe9c = &fcn.0040546c::hKey;\n            in_stack_fffffe98 = 0xf0019;\n            in_stack_fffffe94 = 0;\n            in_stack_fffffe90 = 0x4056b8;\n            in_stack_fffffe8c = 0x80000001;\n            iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n            if (iVar1 != 0) {\n                sub.kernel32.dll_lstrcpynA();\n                uVar5 = sub.kernel32.dll_GetThreadLocale(3, &fcn.0040546c::var_eh + 1, 5);\n                sub.kernel32.dll_GetLocaleInfoA(uVar5);\n                iVar1 = 0;\n                if ((lpLibFileName != '\\0') && ((var_eh._1_1_ != '\\0' || (var_12h != '\\0')))) {\n                    iVar2 = sub.kernel32.dll_lstrlenA(&fcn.0040546c::lpLibFileName);\n                    for (puVar3 = &fcn.0040546c::lpLibFileName + iVar2;\n                        (*puVar3 != '.' && (puVar3 != &fcn.0040546c::lpLibFileName)); puVar3 = puVar3 + -1) {\n                    }\n                    if (puVar3 != &fcn.0040546c::lpLibFileName) {\n                        pcVar4 = puVar3 + 1;\n                        if (var_12h != '\\0') {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.0040546c::var_12h, 0x105 - (pcVar4 - &fcn.0040546c::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.0040546c::lpLibFileName, 0, 2);\n                        }\n                        if ((iVar1 == 0) && (var_eh._1_1_ != '\\0')) {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.0040546c::var_eh + 1, \n                                       0x105 - (pcVar4 - &fcn.0040546c::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.0040546c::lpLibFileName, 0, 2);\n                            if (iVar1 == 0) {\n                                var_eh._3_1_ = 0;\n                                sub.kernel32.dll_lstrcpynA\n                                          (pcVar4, &fcn.0040546c::var_eh + 1, \n                                           0x105 - (pcVar4 - &fcn.0040546c::lpLibFileName));\n                                iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.0040546c::lpLibFileName, 0, 2);\n                            }\n                        }\n                    }\n                }\n                return iVar1;\n            }\n        }\n    }\n    noname_0 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe80;\n    var_18h = 5;\n    fcn.004052b4(noname_0, 0x405571, &stack0xfffffffc, in_stack_fffffe8c, in_stack_fffffe90, in_stack_fffffe94, \n                 in_stack_fffffe98, in_stack_fffffe9c, in_stack_fffffea0, in_stack_fffffea4, in_stack_fffffea8, \n                 in_stack_fffffeac, noname_12, uVar5, noname_14, noname_15, noname_16, puVar3, noname_18, noname_19, \n                 noname_20, unaff_ESI);\n    iVar1 = sub.advapi32.dll_RegQueryValueExA\n                      (hKey, &fcn.0040546c::lpLibFileName, 0, 0, &fcn.0040546c::var_12h, &fcn.0040546c::var_18h);\n    if (iVar1 != 0) {\n        in_stack_fffffe50 = hKey;\n        iVar1 = sub.advapi32.dll_RegQueryValueExA(hKey, 0x4056d8, 0, 0, &fcn.0040546c::var_12h, &fcn.0040546c::var_18h);\n        if (iVar1 != 0) {\n            var_12h._0_1_ = '\\0';\n        }\n    }\n    var_eh._0_1_ = 0;\n    *in_FS_OFFSET = in_stack_fffffe50;\n    iVar1 = sub.advapi32.dll_RegCloseKey(hKey, 0x405578);\n    return iVar1;\n}\n",
        "token_count": 1589
    },
    "0040576c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040576c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_8h = *0x464038;\n    if (*0x464038 != NULL) {\n        do {\n            uStack32 = 0x4057a7;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &uStack36;\n            puStack28 = &stack0xfffffffc;\n            (*var_8h[1])();\n            *in_FS_OFFSET = uStack36;\n            var_8h = *var_8h;\n        } while (var_8h != NULL);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00405958": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405958(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t in_EDX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (in_ECX != 0) {\n        uVar5 = 0;\n        uVar2 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar1 = *(in_ECX + uVar2 * 2);\n                    uVar2 = uVar2 + 1;\n                    if (0x7f < uVar1) {\n                        if (0x7ff < uVar1) {\n                            uVar5 = uVar5 + 1;\n                        }\n                        uVar5 = uVar5 + 1;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while (uVar2 < arg_8h);\n            }\n        }\n        else {\n            while ((uVar2 < arg_8h && (uVar5 < in_EDX))) {\n                uVar1 = *(in_ECX + uVar2 * 2);\n                uVar2 = uVar2 + 1;\n                uVar3 = uVar1;\n                if (uVar1 < 0x80) {\n                    *(in_EAX + uVar5) = uVar3;\n                    uVar5 = uVar5 + 1;\n                }\n                else if (uVar1 < 0x800) {\n                    if (in_EDX < uVar5 + 2) break;\n                    *(in_EAX + uVar5) = uVar1 >> 6 | 0xc0;\n                    *(in_EAX + 1 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 2;\n                }\n                else {\n                    if (in_EDX < uVar5 + 3) break;\n                    *(in_EAX + uVar5) = uVar1 >> 0xc | 0xe0;\n                    *(in_EAX + 1 + uVar5) = uVar1 >> 6 & 0x3f | 0x80;\n                    *(in_EAX + 2 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 3;\n                }\n            }\n            if (in_EDX <= uVar5) {\n                uVar5 = in_EDX - 1;\n            }\n            *(in_EAX + uVar5) = 0;\n        }\n        iVar4 = uVar5 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 653
    },
    "00405a34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405a34(uint32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX == 0) {\n        var_10h = 0;\n    }\n    else {\n        uVar3 = 0;\n        uVar5 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar6 = uVar5 + 1;\n                    if ((*(in_ECX + uVar5) & 0x80) != 0) {\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        if ((*(in_ECX + uVar5) & 0x20) != 0) {\n                            puVar1 = in_ECX + uVar6;\n                            uVar6 = uVar5 + 2;\n                            if ((*puVar1 & 0xc0) != 0x80) {\n                                return -1;\n                            }\n                            if (arg_8h <= uVar6) {\n                                return -1;\n                            }\n                        }\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar6 + 1;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                    }\n                    uVar3 = uVar3 + 1;\n                    uVar5 = uVar6;\n                } while (uVar6 < arg_8h);\n            }\n        }\n        else {\n            for (; (uVar5 < arg_8h && (uVar3 < in_EDX)); uVar3 = uVar3 + 1) {\n                uVar2 = *(in_ECX + uVar5);\n                uVar6 = uVar5 + 1;\n                if ((uVar2 & 0x80) == 0) {\n                    *(in_EAX + uVar3 * 2) = uVar2;\n                }\n                else {\n                    if (arg_8h <= uVar6) {\n                        return -1;\n                    }\n                    uVar4 = uVar2 & 0x3f;\n                    if ((uVar2 & 0x20) != 0) {\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar5 + 2;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        uVar4 = *puVar1 & 0x3f | uVar4 << 6;\n                    }\n                    puVar1 = in_ECX + uVar6;\n                    uVar6 = uVar6 + 1;\n                    if ((*puVar1 & 0xc0) != 0x80) {\n                        return -1;\n                    }\n                    *(in_EAX + uVar3 * 2) = *puVar1 & 0x3f | uVar4 << 6;\n                }\n                uVar5 = uVar6;\n            }\n            if (in_EDX <= uVar3) {\n                uVar3 = in_EDX - 1;\n            }\n            *(in_EAX + uVar3 * 2) = 0;\n        }\n        var_10h = uVar3 + 1;\n    }\n    return var_10h;\n}\n",
        "token_count": 848
    },
    "00405d64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405d64(void)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint lpLCData;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x405dca;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = 7;\n    sub.kernel32.dll_GetLocaleInfoA();\n    fcn.004041f8();\n    fcn.00402c7c();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00403f88(0x405dd1, uVar1);\n    return;\n}\n",
        "token_count": 185
    },
    "00406c14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406c14(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    uint var_4h;\n    \n    iVar1 = sub.user32.dll_FindWindowA(0x406cc4, 0x406cb0);\n    uVar2 = sub.user32.dll_RegisterWindowMessageA(0x406ccc);\n    *in_EAX = uVar2;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x406cdc);\n    *in_EDX = iVar3;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x406cf4);\n    *in_ECX = iVar3;\n    if ((*in_EDX == 0) || (iVar1 == 0)) {\n        *arg_ch = 0;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_EDX, 0, 0);\n        *arg_ch = uVar2;\n    }\n    if ((*in_ECX == 0) || (iVar1 == 0)) {\n        *arg_8h = 3;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_ECX, 0, 0);\n        *arg_8h = uVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 338
    },
    "0040cd40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040cd40(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar2 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar2 != *(in_EAX + 0x24)) {\n        fcn.0040ccfc();\n        iVar1 = *(in_EAX + 0x28);\n        fcn.0040cb78();\n        bVar5 = *(param_1 + 0xc) != 0;\n        if (bVar5) {\n            fcn.0040cae8();\n        }\n        while( true ) {\n            iVar3 = fcn.0040cb08();\n            if (iVar3 == 0xffff) break;\n            iVar3 = fcn.0040cb08();\n            if (iVar3 != 0) {\n                fcn.0040cd30();\n            }\n        }\n        fcn.0040ccfc();\n        if (bVar5) {\n            fcn.0040caf4();\n        }\n        *(in_EAX + 0x24) = iVar2;\n        iVar2 = fcn.0040cae8();\n        uVar4 = unaff_EBX & 0xffffff00 | iVar2 + -1 == iVar1;\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 1;\n    return CONCAT44(param_1, uVar4);\n}\n",
        "token_count": 377
    },
    "00408110": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00408110(void)\n\n{\n    uint uVar1;\n    int32_t iStack20;\n    \n    uVar1 = fcn.00402c7c();\n    if (iStack20 != 0) {\n        fcn.00407c44();\n    }\n    return uVar1;\n}\n",
        "token_count": 69
    },
    "0040814c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040814c(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00402c7c();\n    if (param_1 != 0) {\n        uVar1 = param_2;\n    }\n    return CONCAT44(param_1, uVar1);\n}\n",
        "token_count": 80
    },
    "00408164": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00408164(int32_t param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00402c7c();\n    *param_2 = uVar1;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 84
    },
    "00408184": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00408184(int32_t param_1, uint32_t *param_2)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.00404da4();\n    *param_2 = uVar1;\n    param_2[1] = uVar1 >> 0x20;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 98
    },
    "0040887c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040887c(void)\n\n{\n    if (**0x46fbd8 != NULL) {\n        (***0x46fbd8)();\n        return;\n    }\n    fcn.00402828();\n    return;\n}\n",
        "token_count": 52
    },
    "004088ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040897b)\n\nvoid __cdecl fcn.004088ac(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    char *in_EAX;\n    char *in_ECX;\n    char *pcVar3;\n    char *extraout_ECX;\n    char *extraout_ECX_00;\n    char *extraout_ECX_01;\n    char *pcVar4;\n    int32_t in_EDX;\n    char *extraout_EDX;\n    char *extraout_EDX_00;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint unaff_ESI;\n    char *pcVar8;\n    uint unaff_EDI;\n    bool bVar9;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = in_ECX + arg_10h;\ncode_r0x004088d5:\n    pcVar4 = in_ECX;\n    if (in_EDX != 0) {\n        do {\n            if (pcVar4 == pcVar3) break;\n            pcVar5 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar7 = pcVar5;\n            if (cVar1 == '%') {\n                if (pcVar5 == pcVar3) break;\n                pcVar7 = pcVar4 + 2;\n                cVar1 = *pcVar5;\n                if (cVar1 != '%') goto code_r0x004088ff;\n            }\n            *in_EAX = cVar1;\n            in_EDX = in_EDX + -1;\n            pcVar4 = pcVar7;\n            in_EAX = in_EAX + 1;\n            if (in_EDX == 0) break;\n        } while( true );\n    }\ncode_r0x00408c13:\n    fcn.00408c03();\n    return;\ncode_r0x004088ff:\n    in_ECX = pcVar7;\n    if (cVar1 == '-') {\n        if (pcVar7 == pcVar3) goto code_r0x00408c13;\n        in_ECX = pcVar7 + 1;\n    }\n    cVar2 = fcn.0040898e(unaff_EDI, unaff_ESI);\n    pcVar3 = extraout_ECX;\n    if (cVar2 != ':') goto code_r0x0040891e;\n    if (in_ECX == extraout_ECX) goto code_r0x00408c13;\n    pcVar7 = in_ECX + 1;\n    cVar1 = *in_ECX;\n    goto code_r0x004088ff;\ncode_r0x0040891e:\n    pcVar5 = extraout_EDX;\n    if (cVar2 == '.') {\n        if (in_ECX == extraout_ECX) goto code_r0x00408c13;\n        in_ECX = in_ECX + 1;\n        fcn.0040898e(unaff_EDI, unaff_ESI);\n        pcVar3 = extraout_ECX_00;\n        pcVar5 = extraout_EDX_00;\n    }\n    fcn.004089d6(pcVar5, pcVar3);\n    pcVar7 = pcVar4 + -extraout_ECX_01;\n    if (pcVar4 < extraout_ECX_01) {\n        pcVar7 = NULL;\n    }\n    pcVar4 = extraout_ECX_01;\n    pcVar8 = in_ECX;\n    if (cVar1 == '-') {\n        bVar9 = pcVar5 < extraout_ECX_01;\n        pcVar5 = pcVar5 + -extraout_ECX_01;\n        if (bVar9) {\n            pcVar4 = extraout_ECX_01 + pcVar5;\n            pcVar5 = NULL;\n        }\n        for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n            *in_EAX = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    pcVar6 = pcVar5 + -pcVar7;\n    if (pcVar5 < pcVar7) {\n        pcVar7 = pcVar7 + pcVar6;\n        pcVar6 = NULL;\n    }\n    for (; pcVar7 != NULL; pcVar7 = pcVar7 + -1) {\n        *in_EAX = ' ';\n        in_EAX = in_EAX + 1;\n    }\n    in_EDX = pcVar6 - pcVar4;\n    if (pcVar6 < pcVar4) {\n        pcVar4 = pcVar4 + in_EDX;\n        in_EDX = 0;\n    }\n    for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n        *in_EAX = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    goto code_r0x004088d5;\n}\n",
        "token_count": 1184
    },
    "0040898e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040898e(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t in_AL;\n    uint8_t *in_ECX;\n    int32_t unaff_EBP;\n    uint8_t *unaff_ESI;\n    uint var_ch;\n    uint var_8h;\n    \n    if (in_AL == 0x2a) {\n        if (*(unaff_EBP + -0xc) <= *(unaff_EBP + 8)) {\n            *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n        }\n        if (unaff_ESI == in_ECX) {\ncode_r0x00408c13:\n            fcn.00408c03();\n            return;\n        }\n    }\n    else {\n        while ((0x2f < in_AL && (in_AL < 0x3a))) {\n            if (unaff_ESI == in_ECX) goto code_r0x00408c13;\n            in_AL = *unaff_ESI;\n            unaff_ESI = unaff_ESI + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "00408dbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00408dbc(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char in_CL;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint var_2ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = 0x13;\n    if (in_CL == '\\0') {\n        iVar1 = arg_ch;\n        if (arg_ch < 2) {\n            iVar1 = 2;\n        }\n        if (0x12 < iVar1) {\n            iVar1 = 0x12;\n        }\n    }\n    uVar2 = 9999;\n    if (1 < arg_10h) {\n        uVar2 = arg_8h;\n    }\n    fcn.00409090(uVar2, iVar1);\n    puVar5 = in_EAX;\n    if (var_2ch - 0x7fff < 2) {\n        fcn.00408ebb();\n        puVar4 = extraout_ECX * 3 + 0x408eac;\n        for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    else {\n        uVar3 = arg_10h;\n        if ((arg_10h != 1) && ((4 < arg_10h || (iVar1 < var_2ch)))) {\n            uVar3 = 0;\n        }\n        (**(uVar3 * 4 + 0x408e98))();\n    }\n    return puVar5 - in_EAX;\n}\n",
        "token_count": 442
    },
    "00408ebb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00408ebb(void)\n\n{\n    int32_t unaff_EBP;\n    uchar *unaff_EDI;\n    uint var_2ah;\n    \n    if (*(unaff_EBP + -0x2a) != '\\0') {\n        *unaff_EDI = 0x2d;\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "00409090": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409090(char param_1)\n\n{\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint var_4h;\n    \n    if (param_1 == '\\0') {\n        fcn.004090bd(unaff_EBX, unaff_ESI);\n    }\n    else {\n        fcn.004091df(unaff_EBX);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "004090bd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004090bd(uint arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    float10 fVar2;\n    int16_t *piVar3;\n    ushort uVar4;\n    uint32_t uVar5;\n    uint16_t uVar6;\n    uint8_t uVar8;\n    int32_t iVar7;\n    ushort *unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int16_t *piVar9;\n    float10 fVar10;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(unaff_ESI + 2);\n    uVar5 = uVar6 & 0x7fff;\n    if ((uVar6 & 0x7fff) == 0) {\ncode_r0x004090e8:\n        uVar6 = 0;\n    }\n    else {\n        if (uVar5 != 0x7fff) {\n            *(unaff_EBP + -8) = ((uVar5 - 0x3fff) * 0x4d10 >> 0x10) + 1;\n            fVar10 = fcn.00402d94();\n            fVar10 = ROUND(fVar10);\n            fVar2 = *(*(unaff_EBP + -4) + 0x464168);\n            *(unaff_EBP + -10) = (fVar2 < fVar10) << 8 | (fVar2 == fVar10) << 0xe;\n            if ((*(unaff_EBP + -10) & 0x4100) != 0) {\n                fVar10 = fVar10 / *(*(unaff_EBP + -4) + 0x464174);\n                *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n            }\n            *(unaff_EBP + -0x18) = fVar10;\n            iVar7 = 9;\n            piVar9 = unaff_EBX + 3;\n            do {\n                uVar8 = *(iVar7 + -0x19 + unaff_EBP);\n                piVar3 = piVar9 + 1;\n                *piVar9 = (CONCAT11(uVar8, uVar8 >> 4) & 0xfff) + 0x3030;\n                iVar7 = iVar7 + -1;\n                piVar9 = piVar3;\n            } while (iVar7 != 0);\n            *piVar3 = 0;\n            uVar5 = *(unaff_EBP + -8) + *(unaff_EBP + 8);\n            if (uVar5 < 0) {\n                uVar5 = 0;\n                goto code_r0x004090e8;\n            }\n            if (*(unaff_EBP + 0xc) <= uVar5) {\n                uVar5 = *(unaff_EBP + 0xc);\n            }\n            if (uVar5 < 0x12) {\n                if (*(unaff_EBX + uVar5 + 3) < 0x35) goto code_r0x004091aa;\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        *(unaff_EBX + 3) = 0x31;\n                        *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n                        break;\n                    }\n                    pcVar1 = unaff_EBX + uVar5 + 2;\n                    *pcVar1 = *pcVar1 + '\\x01';\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (0x39 < *(unaff_EBX + iVar7));\n            }\n            else {\n                uVar5 = 0x12;\ncode_r0x004091aa:\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        uVar8 = 0;\n                        goto code_r0x004091bd;\n                    }\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (*(unaff_EBX + iVar7) == '0');\n            }\n            uVar8 = *(unaff_ESI + 2) >> 8;\ncode_r0x004091bd:\n            uVar4 = *(unaff_EBP + -8);\n            goto code_r0x004091c0;\n        }\n        if (((*(unaff_ESI + 6) & 0x8000) != 0) && ((*unaff_ESI != 0 || (unaff_ESI[1] != -0x80000000)))) {\n            uVar5 = 0x8000;\n            goto code_r0x004090e8;\n        }\n    }\n    uVar8 = uVar6 >> 8;\n    uVar4 = uVar5;\n    *(unaff_EBX + 3) = 0;\ncode_r0x004091c0:\n    *unaff_EBX = uVar4;\n    *(unaff_EBX + 1) = uVar8 >> 7;\n    return;\n}\n",
        "token_count": 1173
    },
    "004092bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004092bc(uint param_1, float10 *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    ushort extraout_var;\n    uint8_t *extraout_ECX;\n    uint8_t *extraout_ECX_00;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    uint16_t in_FPUStatusWord;\n    uint16_t uVar5;\n    float10 fVar6;\n    uint16_t uVar7;\n    uint var_4h;\n    \n    uVar2 = *0x47068b;\n    uVar5 = (in_FPUStatusWord >> 8 & 0x7f) << 8;\n    fcn.00409373();\n    uVar1 = *in_EAX;\n    uVar7 = uVar1;\n    if ((uVar1 == 0x2b) || (uVar1 == 0x2d)) {\n        in_EAX = in_EAX + 1;\n    }\n    fcn.0040937e();\n    iVar4 = 0;\n    puVar3 = extraout_ECX;\n    if (*in_EAX == uVar2) {\n        in_EAX = in_EAX + 1;\n        fcn.0040937e();\n        iVar4 = -extraout_EDX;\n        puVar3 = extraout_ECX_00;\n    }\n    if (puVar3 != in_EAX) {\n        if ((*in_EAX & 0xdf) == 0x45) {\n            in_EAX = in_EAX + 1;\n            fcn.0040939a(iVar4);\n        }\n        fcn.00409373();\n        if (*in_EAX == 0) {\n            fVar6 = fcn.00402d94();\n            if (uVar7 >> 8 == '-') {\n                fVar6 = -fVar6;\n            }\n            if (uVar7 == '\\0') {\n                *param_2 = fVar6;\n            }\n            else {\n                *param_2 = ROUND(fVar6);\n            }\n            if ((uVar5 & 9) == 0) {\n                return CONCAT31(CONCAT22(extraout_var, uVar5) >> 8, 1);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 529
    },
    "00409958": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409958(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x13) == '\\0') {\n        fcn.00409820(*(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x13) = 1;\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "00409990": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409990(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x1d) == '\\0') {\n        fcn.00409574(arg_8h + -0x1c, *(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x1d) = 1;\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00409c40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409c40(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    uint8_t *in_EAX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint *in_FS_OFFSET;\n    uint uVar8;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_28h;\n    uint var_24h;\n    uint var_1dh;\n    int16_t var_18h;\n    uint16_t var_16h;\n    uint var_13h;\n    int32_t var_ch;\n    uint8_t *var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x40a3c1;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if ((in_EAX != NULL) && (*(arg_8h + -0x108) < 2)) {\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + 1;\n        uVar7 = 0x20;\n        var_4h = in_EAX;\n        while (uVar1 = *var_4h,  uVar1 != 0) {\n            if ((*((uVar1 >> 3) + 0x46410c) >> (uVar1 & 7) & 1) == 0) {\n                var_4h = fcn.0040c190();\n                uVar3 = uVar1;\n                if (uVar1 + 0x9f < 0x1a) {\n                    uVar3 = uVar1 - 0x20;\n                }\n                uVar6 = uVar7;\n                if (((uVar3 + 0xbf < 0x1a) && (uVar6 = uVar3,  uVar3 == 0x4d)) && (uVar7 == 0x48)) {\n                    uVar3 = 0x4e;\n                    uVar6 = uVar3;\n                }\n                uVar7 = uVar6;\n    // switch table (16 cases) at 0x409d5c\n                switch(uVar3) {\n                case 0x22:\n                case 0x27:\n                    while( true ) {\n                        uVar3 = *var_4h;\n                        if ((uVar3 == 0) || (uVar3 == uVar1)) break;\n                        if ((*((uVar3 >> 3) + 0x46410c) >> (uVar3 & 7) & 1) == 0) {\n                            var_4h = var_4h + 1;\n                        }\n                        else {\n                            var_4h = fcn.0040c190();\n                        }\n                    }\n                    fcn.0040987c(arg_8h);\n                    if (*var_4h != 0) {\n                        var_4h = var_4h + 1;\n                    }\n                    break;\n                default:\n                    fcn.0040987c(arg_8h);\n                    break;\n                case 0x2f:\n                    if (*0x47068d != '\\0') {\n                        fcn.0040987c(arg_8h);\n                    }\n                    break;\n                case 0x3a:\n                    if (*0x470698 != '\\0') {\n                        fcn.0040987c(arg_8h);\n                    }\n                    break;\n                case 0x41:\n                    fcn.00409990(&stack0xfffffffc);\n                    iVar5 = fcn.0040871c();\n                    if (iVar5 == 0) {\n                        fcn.0040987c(arg_8h);\n                        var_4h = var_4h + 4;\n                    }\n                    else {\n                        iVar5 = fcn.0040871c();\n                        if (iVar5 == 0) {\n                            fcn.0040987c(arg_8h);\n                            var_4h = var_4h + 2;\n                        }\n                        else {\n                            iVar5 = fcn.0040871c();\n                            if (iVar5 == 0) {\n                                if (var_16h < 0xc) {\n                                    fcn.004098c0(arg_8h);\n                                }\n                                else {\n                                    fcn.004098c0(arg_8h);\n                                }\n                                var_4h = var_4h + 3;\n                            }\n                            else {\n                                iVar5 = fcn.0040871c();\n                                if (iVar5 == 0) {\n                                    fcn.00409958(&stack0xfffffffc);\n                                    uVar8 = *(arg_8h + 8);\n                                    fcn.00409840(uVar8, *(arg_8h + 0xc));\n                                    fcn.004098c0(uVar8);\n                                    var_4h = var_4h + 3;\n                                }\n                                else {\n                                    iVar5 = fcn.0040871c();\n                                    if (iVar5 == 0) {\n                                        fcn.00409958(&stack0xfffffffc);\n                                        uVar8 = *(arg_8h + 8);\n                                        fcn.00409840(uVar8, *(arg_8h + 0xc));\n                                        fcn.004098c0(uVar8);\n                                        var_4h = var_4h + 2;\n                                    }\n                                    else {\n                                        fcn.0040987c(arg_8h);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 0x43:\n                    fcn.0040992c(&stack0xfffffffc);\n                    fcn.00409c40(arg_8h);\n                    fcn.00409990(&stack0xfffffffc);\n                    if (((var_16h != 0) || (var_18h != 0)) || (stack0xffffffe2 != 0)) {\n                        fcn.0040987c(arg_8h);\n                        fcn.00409c40(arg_8h);\n                    }\n                    break;\n                case 0x44:\n                    fcn.0040992c(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.00409958(&stack0xfffffffc);\n                        fcn.004098e0(arg_8h);\n                    }\n                    else if (var_ch == 3) {\n                        uVar8 = *(arg_8h + 8);\n                        fcn.00409840(uVar8, *(arg_8h + 0xc));\n                        fcn.004098c0(uVar8);\n                    }\n                    else if (var_ch == 4) {\n                        uVar8 = *(arg_8h + 8);\n                        fcn.00409840(uVar8, *(arg_8h + 0xc));\n                        fcn.004098c0(uVar8);\n                    }\n                    else if (var_ch == 5) {\n                        fcn.00409c40(arg_8h);\n                    }\n                    else {\n                        fcn.00409c40(arg_8h);\n                    }\n                    break;\n                case 0x45:\n                    fcn.0040992c(&stack0xfffffffc);\n                    fcn.00409958(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.00409b38(&stack0xfffffffc);\n                    fcn.004098c0(iVar5);\n                    break;\n                case 0x47:\n                    fcn.0040992c(&stack0xfffffffc);\n                    fcn.00409958(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.004099d0(&stack0xfffffffc);\n                    fcn.004098c0(iVar5);\n                    break;\n                case 0x48:\n                    fcn.0040992c(&stack0xfffffffc);\n                    fcn.00409990(&stack0xfffffffc);\n                    bVar2 = false;\n                    puVar4 = var_4h;\n                    while (uVar1 = *puVar4,  uVar1 != 0) {\n                        if ((*((uVar1 >> 3) + 0x46410c) >> (uVar1 & 7) & 1) == 0) {\n                            uVar1 = *puVar4;\n                            if (uVar1 < 0x49) {\n                                if (uVar1 == 0x48) break;\n                                if ((uVar1 == 0x22) || (uVar1 == 0x27)) {\n                                    bVar2 = bVar2 ^ 1;\n                                }\n                                else if (uVar1 == 0x41) goto code_r0x00409fb2;\n                            }\n                            else if (uVar1 == 0x61) {\ncode_r0x00409fb2:\n                                if (!bVar2) {\n                                    iVar5 = fcn.0040871c();\n                                    if ((iVar5 != 0) && (iVar5 = fcn.0040871c(),  iVar5 != 0)) {\n                                        fcn.0040871c();\n                                    }\n                                    break;\n                                }\n                            }\n                            else if (uVar1 == 0x68) break;\n                            puVar4 = puVar4 + 1;\n                        }\n                        else {\n                            puVar4 = fcn.0040c190();\n                        }\n                    }\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.004098e0(arg_8h);\n                    break;\n                case 0x4d:\n                    fcn.0040992c(&stack0xfffffffc);\n                    fcn.00409958(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.004098e0(arg_8h);\n                    }\n                    else if (var_ch - 1U == 2) {\n                        fcn.004098c0(arg_8h);\n                    }\n                    else {\n                        fcn.004098c0(arg_8h);\n                    }\n                    break;\n                case 0x4e:\n                    fcn.0040992c(&stack0xfffffffc);\n                    fcn.00409990(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.004098e0(arg_8h);\n                    break;\n                case 0x53:\n                    fcn.0040992c(&stack0xfffffffc);\n                    fcn.00409990(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.004098e0(arg_8h);\n                    break;\n                case 0x54:\n                    fcn.0040992c(&stack0xfffffffc);\n                    if (var_ch == 1) {\n                        fcn.00409c40(arg_8h);\n                    }\n                    else {\n                        fcn.00409c40(arg_8h);\n                    }\n                    break;\n                case 0x59:\n                    fcn.0040992c(&stack0xfffffffc);\n                    fcn.00409958(&stack0xfffffffc);\n                    if (var_ch < 3) {\n                        fcn.004098e0(arg_8h);\n                    }\n                    else {\n                        fcn.004098e0(arg_8h);\n                    }\n                    break;\n                case 0x5a:\n                    fcn.0040992c(&stack0xfffffffc);\n                    fcn.00409990(&stack0xfffffffc);\n                    if (3 < var_ch) {\n                        var_ch = 3;\n                    }\n                    fcn.004098e0(arg_8h);\n                }\n            }\n            else {\n                iVar5 = arg_8h;\n                fcn.0040c170();\n                fcn.0040987c(iVar5);\n                var_4h = fcn.0040c190();\n                uVar7 = 0x20;\n            }\n        }\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + -1;\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x40a3c8;\n    uStack60 = 0x40a3c0;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 2721
    },
    "0040a674": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0040a674(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uStack20;\n    \n    uStack20 = 0;\n    iVar5 = 7;\n    piVar3 = 0x470754;\n    puVar4 = 0x470770;\n    do {\n        if (*piVar3 == 0) break;\n        uVar1 = fcn.00404448();\n        fcn.00404448(uVar1);\n        iVar2 = fcn.0040c2bc();\n        if (iVar2 != 0) {\n            uStack20 = *puVar4;\n            break;\n        }\n        puVar4 = puVar4 + 1;\n        piVar3 = piVar3 + 1;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    return CONCAT44(uStack20, uStack20);\n}\n",
        "token_count": 225
    },
    "0040a6c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a6c8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (*0x470748 == 0x12) {\n        if (in_EAX < 100) {\n            uVar1 = fcn.00409868();\n            uVar2 = *(arg_8h + -4) >> 0x1f;\n            in_EAX = in_EAX + (((uVar1 & 0xffff) + ((*(arg_8h + -4) ^ uVar2) - uVar2)) / 100) * 100;\n        }\n        if (0 < *(arg_8h + -4)) {\n            *(arg_8h + -4) = -*(arg_8h + -4);\n        }\n    }\n    else {\n        *(arg_8h + -4) = *(arg_8h + -4) + -1;\n    }\n    return *(arg_8h + -4) + in_EAX;\n}\n",
        "token_count": 242
    },
    "0040a724": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040a724(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    ushort var_14h;\n    uint var_12h;\n    ushort var_eh;\n    ushort var_ch;\n    char var_ah;\n    uchar var_9h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_20h = 0;\n    var_1ch = 0;\n    uStack64 = 0x40aa3f;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_12h._0_2_ = 0;\n    var_14h = 0;\n    var_18h._0_1_ = 0;\n    var_9h = 0;\n    var_ah = fcn.0040a5e0();\n    var_4h = 0;\n    if ((*0x470690 == NULL) || (**0x470690 != 'g')) {\n        iVar2 = fcn.0040c284();\n        if (0 < iVar2) {\n            var_4h = *0x470770;\n        }\n    }\n    else {\n        fcn.0040a62c();\n        fcn.004044a8(&fcn.0040a724::var_20h);\n        fcn.00407ed4();\n        var_4h = fcn.0040a674();\n    }\n    cVar1 = fcn.0040a488(&fcn.0040a724::var_18h + 3);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.0040a5a8(),  cVar1 != '\\0')) {\n        in_stack_ffffffac = 0x40a81a;\n        cVar1 = fcn.0040a488(&fcn.0040a724::var_18h + 2);\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0040a5a8();\n            if (cVar1 == '\\0') {\n                fcn.00409868();\n                if (var_ah == '\\x01') {\n                    var_14h = var_ch;\n                    var_12h._0_2_ = var_eh;\n                }\n                else {\n                    var_12h._0_2_ = var_ch;\n                    var_14h = var_eh;\n                }\n            }\n            else {\n                in_stack_ffffffac = &fcn.0040a724::var_18h + 1;\n                cVar1 = fcn.0040a488(in_stack_ffffffac);\n                if (cVar1 == '\\0') goto code_r0x0040aa24;\n                if (var_ah == '\\0') {\n                    var_18h._0_1_ = var_18h._1_1_;\n                    var_12h._0_2_ = var_ch;\n                    var_14h = var_eh;\n                }\n                else if (var_ah == '\\x01') {\n                    var_18h._0_1_ = var_18h._1_1_;\n                    var_12h._0_2_ = var_eh;\n                    var_14h = var_ch;\n                }\n                else if (var_ah == '\\x02') {\n                    var_18h._0_1_ = var_18h._3_1_;\n                    var_12h._0_2_ = var_eh;\n                    var_14h = var_12h._2_2_;\n                }\n                if (var_4h < 1) {\n                    if (var_18h < 3) {\n                        fcn.00409868();\n                    }\n                }\n                else {\n                    fcn.0040a6c8(&stack0xfffffffc);\n                }\n            }\n            fcn.0040a5a8();\n            fcn.0040a464();\n            if ((*0x470750 != '\\0') && (iVar2 = fcn.0040458c(),  iVar2 != 0)) {\n                if (**0x4706a4 - 0x30U < 10) {\n                    fcn.0040a62c();\n                }\n                else {\n                    do {\n                        while ((iVar2 = fcn.00404248(),  *param_2 <= iVar2 && (*(in_EAX + -1 + *param_2) != ' '))) {\n                            *param_2 = *param_2 + 1;\n                        }\n                        fcn.0040a464();\n                        iVar2 = fcn.00404248();\n                        if (iVar2 < *param_2) break;\n                        fcn.00404248();\n                        fcn.004044a8();\n                        iVar2 = fcn.00407e64();\n                        if (iVar2 == 0) break;\n                        fcn.00404248();\n                        fcn.004044a8();\n                        iVar2 = fcn.00407e64();\n                    } while (iVar2 != 0);\n                }\n            }\n            var_9h = fcn.0040960c(var_8h);\n            in_stack_ffffffac = var_8h;\n        }\n    }\ncode_r0x0040aa24:\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00403fac(0x40aa46);\n    return;\n}\n",
        "token_count": 1298
    },
    "0040aa68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040aa68(void)\n\n{\n    char cVar1;\n    ushort extraout_var;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *in_stack_ffffffd0;\n    uint16_t in_stack_ffffffd4;\n    uchar *puVar4;\n    ushort uVar5;\n    uint32_t uStack32;\n    ushort uStack28;\n    ushort uStack26;\n    uchar auStack24 [4];\n    uchar auStack20 [4];\n    \n    uVar2 = 0;\n    iVar3 = -1;\n    cVar1 = fcn.0040a51c();\n    if ((cVar1 == '\\0') && (cVar1 = fcn.0040a51c(),  cVar1 == '\\0')) {\n        cVar1 = fcn.0040a51c();\n        if ((cVar1 != '\\0') || (cVar1 = fcn.0040a51c(),  cVar1 != '\\0')) {\n            iVar3 = 0xc;\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    if (-1 < iVar3) {\n        fcn.0040a464();\n    }\n    cVar1 = fcn.0040a488(&stack0xffffffec);\n    if (cVar1 != '\\0') {\n        uStack32 = uStack32 & 0xffff;\n        uStack28 = 0;\n        uStack26 = 0;\n        uVar5 = 0x40;\n        cVar1 = fcn.0040a5a8();\n        if (cVar1 != '\\0') {\n            puVar4 = &stack0xffffffe8;\n            cVar1 = fcn.0040a488(puVar4);\n            uVar5 = puVar4 >> 0x10;\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            in_stack_ffffffd4 = 0xab46;\n            cVar1 = fcn.0040a5a8();\n            if (cVar1 != '\\0') {\n                puVar4 = &stack0xffffffe4;\n                cVar1 = fcn.0040a488(puVar4);\n                in_stack_ffffffd4 = puVar4;\n                if (cVar1 == '\\0') {\n                    return 0;\n                }\n                in_stack_ffffffd0 = 0x40ab73;\n                cVar1 = fcn.0040a5a8();\n                if (cVar1 != '\\0') {\n                    in_stack_ffffffd0 = &stack0xffffffe0;\n                    cVar1 = fcn.0040a488(in_stack_ffffffd0);\n                    if (cVar1 == '\\0') {\n                        return 0;\n                    }\n                }\n            }\n        }\n        if (iVar3 < 0) {\n            cVar1 = fcn.0040a51c();\n            if ((cVar1 == '\\0') && (cVar1 = fcn.0040a51c(),  cVar1 == '\\0')) {\n                cVar1 = fcn.0040a51c();\n                if ((cVar1 != '\\0') || (cVar1 = fcn.0040a51c(),  cVar1 != '\\0')) {\n                    iVar3 = 0xc;\n                }\n            }\n            else {\n                iVar3 = 0;\n            }\n        }\n        if ((iVar3 < 0) || ((in_stack_ffffffd4 != 0 && (in_stack_ffffffd4 < 0xd)))) {\n            fcn.0040a464();\n            uVar2 = fcn.00409504(in_stack_ffffffd0, CONCAT22(extraout_var, uVar5));\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 829
    },
    "0040ae10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ae10(int32_t *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.0040ad9c(arg_8h);\n    if (*arg_8h == 0) {\n        fcn.00405d0c();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0040af70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040af70(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 1;\n    while( true ) {\n        if (*(iVar1 * 4 + 0x470750) == 0) {\n            fcn.00404180();\n            return 1;\n        }\n        if (iVar1 == 7) break;\n        iVar1 = iVar1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 103
    },
    "0040b490": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040b490(void)\n\n{\n    uint uVar1;\n    uint uStack1128;\n    uchar *puStack1124;\n    uchar *puStack1120;\n    uint uStack1116;\n    uchar *puStack1112;\n    uint uStack1108;\n    uchar *puStack1104;\n    uchar *puStack1100;\n    uchar auStack1092 [48];\n    uchar auStack1044 [8];\n    uchar auStack1036 [8];\n    uchar auStack1028 [1028];\n    \n    puStack1100 = 0x40b4a4;\n    fcn.0040b308(0x400);\n    if (**0x46fab4 == '\\0') {\n        puStack1100 = 0x40;\n        puStack1104 = &stack0xfffffbbc;\n        uStack1108 = *(*0x46f7ac + 4);\n        puStack1112 = 0x40b526;\n        puStack1112 = fcn.00405278();\n        uStack1116 = 0x40b52c;\n        sub.user32.dll_LoadStringA_1();\n        uStack1116 = 0x2010;\n        puStack1120 = &stack0xfffffbac;\n        puStack1124 = &stack0xfffffbec;\n        uStack1128 = 0;\n        sub.user32.dll_MessageBoxA_1();\n    }\n    else {\n        puStack1100 = 0x40b4b8;\n        fcn.00402ae8();\n        puStack1100 = 0x40b4bd;\n        fcn.00402834();\n        puStack1100 = &stack0xfffffbfc;\n        puStack1104 = &stack0xfffffbfc;\n        puStack1112 = &stack0xfffffbb0;\n        uStack1108 = 0x40b4cc;\n        sub.user32.dll_CharToOemA();\n        uStack1108 = 0;\n        uStack1116 = 0x40b4dc;\n        uStack1116 = fcn.004085dc();\n        puStack1120 = &stack0xfffffbf4;\n        puStack1124 = 0xfffffff4;\n        uStack1128 = 0x40b4e9;\n        uStack1128 = sub.kernel32.dll_GetStdHandle_1();\n        sub.kernel32.dll_WriteFile_1();\n        uVar1 = sub.kernel32.dll_GetStdHandle_1(0xfffffff4, 0x40b554, 2, &stack0xfffffb98, 0);\n        sub.kernel32.dll_WriteFile_1(uVar1);\n    }\n    return;\n}\n",
        "token_count": 586
    },
    "0040b9c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b9c0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *puVar4;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint lpFilename;\n    uint lpBuffer;\n    uint hModule;\n    int32_t var_10h;\n    uint var_4h;\n    \n    puStack384 = &stack0xfffffffc;\n    var_14ch = 0;\n    var_154h = 0;\n    var_150h = 0;\n    var_4h = 0;\n    uStack388 = 0x40bb7b;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack392;\n    iVar1 = *(arg_8h + -4);\n    if (*(iVar1 + 0x14) == 0) {\n        puStack384 = &stack0xfffffffc;\n        fcn.00405d0c();\n    }\n    else {\n        fcn.00405d0c();\n    }\n    uVar2 = *(iVar1 + 0x18);\n    sub.kernel32.dll_VirtualQuery_1(*(iVar1 + 0xc), &lpBuffer, 0x1c);\n    if (var_10h == 0x1000) {\n        iVar3 = sub.kernel32.dll_GetModuleFileNameA_1(hModule, &lpFilename, 0x105);\n        if (iVar3 != 0) {\n            var_148h = *(iVar1 + 0xc);\n            var_144h._0_1_ = 5;\n            fcn.004041f8();\n            fcn.004084f4();\n            var_140h = var_14ch;\n            var_13ch._0_1_ = 0xb;\n            var_138h = var_4h;\n            var_134h._0_1_ = 0xb;\n            var_12ch._0_1_ = 5;\n            puVar4 = &var_148h;\n            arg_8h_00 = 3;\n            var_130h = uVar2;\n            fcn.00405d0c();\n            fcn.0040b5a0(arg_8h_00, puVar4);\n            goto code_r0x0040bb4a;\n        }\n    }\n    var_16ch = *(iVar1 + 0xc);\n    var_168h._0_1_ = 5;\n    var_164h = var_4h;\n    var_160h._0_1_ = 0xb;\n    var_158h._0_1_ = 5;\n    puVar4 = &var_16ch;\n    arg_8h_00 = 2;\n    var_15ch = uVar2;\n    fcn.00405d0c();\n    fcn.0040b5a0(arg_8h_00, puVar4);\ncode_r0x0040bb4a:\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00403f88(0x40bb82);\n    fcn.00403fac();\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 874
    },
    "0040bcec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040bcec(void)\n\n{\n    if (*0x470798 != NULL) {\n        *(*0x470798 + 3) = 1;\n        (**(**0x470798 + -8))();\n        *0x470798 = NULL;\n    }\n    if (*0x47079c != 0) {\n        *(*0x47079c + 0xc) = 1;\n        fcn.00403250();\n        *0x47079c = 0;\n    }\n    **0x46f704 = 0;\n    **0x46f86c = 0;\n    **0x46f794 = 0;\n    **0x46f84c = 0;\n    **0x46f874 = 0;\n    **0x46fa20 = 0;\n    return;\n}\n",
        "token_count": 182
    },
    "0040bee8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040bee8(uint param_1, int32_t param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0;\n    if ((in_EAX != NULL) && (in_EAX[param_2] != 0)) {\n        if (param_2 == 0) {\n            if ((*((*in_EAX >> 3) + 0x46410c) >> (*in_EAX & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n        else {\n            iVar3 = param_2 + -1;\n            while ((-1 < iVar3 && ((*((in_EAX[iVar3] >> 3) + 0x46410c) >> (in_EAX[iVar3] & 7) & 1) != 0))) {\n                iVar3 = iVar3 + -1;\n            }\n            uVar1 = param_2 - iVar3 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == 0) {\n                uVar2 = 2;\n            }\n            else if ((*((in_EAX[param_2] >> 3) + 0x46410c) >> (in_EAX[param_2] & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 364
    },
    "0040bf60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040bf60(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x470750 != '\\0') {\n        fcn.00404448();\n        uVar1 = fcn.0040bee8();\n    }\n    return uVar1;\n}\n",
        "token_count": 69
    },
    "0040bf84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040bf84(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x470750 != '\\0') {\n        uVar1 = fcn.0040bee8();\n    }\n    return uVar1;\n}\n",
        "token_count": 61
    },
    "0040bfc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040bfc4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0 < param_2) {\n        iVar1 = fcn.00404248();\n        if ((param_2 <= iVar1) && (iVar3 = param_2,  *0x470750 != '\\0')) {\n            iVar1 = 1;\n            iVar3 = 0;\n            if (0 < param_2) {\n                do {\n                    uVar2 = *(in_EAX + -1 + iVar1);\n                    if ((*((uVar2 >> 3) + 0x46410c) >> (uVar2 & 7) & 1) == 0) {\n                        iVar1 = iVar1 + 1;\n                    }\n                    else {\n                        iVar1 = fcn.0040c1d4();\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar1 <= param_2);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 260
    },
    "0040c0ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040c0ac(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *in_stack_ffffffec;\n    uchar *puVar3;\n    int32_t iStack16;\n    \n    puVar3 = &stack0xfffffff0;\n    iStack16 = 0;\n    iVar2 = iStack16;\n    if (0 < param_2) {\n        in_stack_ffffffec = 0x40c0c5;\n        iVar1 = fcn.00404248();\n        iVar2 = iStack16;\n        if (((param_2 <= iVar1) && (iVar2 = param_2,  1 < param_2)) && (iVar2 = param_2,  *0x470750 != '\\0')) {\n            fcn.0040c01c(&stack0xfffffff0);\n            if ((iStack16 < param_2 + -1) || (iVar2 = fcn.00404248(),  iVar2 <= puVar3)) {\n                in_stack_ffffffec = NULL;\n                iVar2 = iStack16;\n            }\n            else {\n                in_stack_ffffffec = puVar3 + 1;\n                iVar2 = iStack16;\n            }\n        }\n    }\n    iStack16 = iVar2;\n    return CONCAT44(iStack16, in_stack_ffffffec);\n}\n",
        "token_count": 308
    },
    "0040c110": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040c110(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *in_stack_ffffffec;\n    uchar *puVar3;\n    int32_t iStack16;\n    \n    puVar3 = &stack0xfffffff0;\n    iStack16 = 0;\n    iVar1 = iStack16;\n    if (0 < param_2) {\n        in_stack_ffffffec = 0x40c129;\n        iVar1 = fcn.00404248();\n        if (iVar1 < param_2) {\n            in_stack_ffffffec = 0x40c134;\n            param_2 = fcn.00404248();\n        }\n        iVar1 = param_2;\n        if (*0x470750 != '\\0') {\n            fcn.0040c01c(&stack0xfffffff0);\n            iVar2 = fcn.00404248();\n            in_stack_ffffffec = puVar3;\n            iVar1 = iStack16;\n            if (iVar2 < puVar3) {\n                in_stack_ffffffec = fcn.00404248();\n                iVar1 = iStack16;\n            }\n        }\n    }\n    iStack16 = iVar1;\n    return CONCAT44(iStack16, in_stack_ffffffec);\n}\n",
        "token_count": 293
    },
    "0040c170": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040c170(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*0x470750 != '\\0') {\n        iVar1 = sub.user32.dll_CharNextA_1();\n        return iVar1 - in_EAX;\n    }\n    return 1;\n}\n",
        "token_count": 73
    },
    "0040c198": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040c198(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 1;\n    if ((*0x470750 != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x46410c) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.00404448();\n        uVar1 = fcn.0040c170();\n    }\n    return uVar1;\n}\n",
        "token_count": 151
    },
    "0040c1d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040c1d4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = param_2 + 1;\n    if ((*0x470750 != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x46410c) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.00404448();\n        iVar1 = fcn.0040c170();\n        iVar1 = iVar1 + param_2;\n    }\n    return iVar1;\n}\n",
        "token_count": 168
    },
    "0040c2bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040c2bc(uint param_1, char *param_2)\n\n{\n    uint8_t uVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack24;\n    uint32_t uStack20;\n    \n    iVar4 = 0;\n    if ((((in_EAX != NULL) && (*in_EAX != '\\0')) && (param_2 != NULL)) && (*param_2 != '\\0')) {\n        iStack24 = fcn.004085dc();\n        uVar2 = fcn.004085dc();\n        iVar4 = fcn.00408774();\n        while ((iVar4 != 0 && (uVar2 <= iStack24 - (iVar4 - in_EAX)))) {\n            uVar1 = fcn.0040bf84();\n            uStack20 = uStack20 & 0xffffff00 | uVar1;\n            if (uVar1 != 2) {\n                iStack24 = 0x400;\n                iVar3 = sub.kernel32.dll_CompareStringA();\n                if (iVar3 == 2) goto code_r0x0040c352;\n            }\n            iVar4 = fcn.00408774();\n        }\n        iVar4 = 0;\n    }\ncode_r0x0040c352:\n    return CONCAT44(uStack20, iVar4);\n}\n",
        "token_count": 312
    },
    "0040c624": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.0040c624(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x40c8ef;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040c624::var_18h;\n    var_1ch = 0x40c647;\n    var_ch = unaff_EBX;\n    fcn.0040c4b0();\n    var_1ch = 0x40c64c;\n    fcn.0040ae4c();\n    if (*0x470750 != '\\0') {\n        var_1ch = 0x40c65a;\n        fcn.0040b024();\n    }\n    var_1ch = 0x40c65f;\n    sub.kernel32.dll_GetThreadLocale_1();\n    var_1ch = &fcn.0040c624::var_10h;\n    var_20h = 0x40c673;\n    fcn.0040ad9c(var_1ch);\n    var_20h = 0x40c680;\n    fcn.00403fdc();\n    var_20h = &fcn.0040c624::var_14h;\n    var_24h = 0x40c695;\n    fcn.0040ad9c(var_20h);\n    var_24h = 0x40c69f;\n    *0x470688 = fcn.0040814c();\n    var_24h = &fcn.0040c624::var_18h;\n    var_28h = 0x40c6b9;\n    fcn.0040ad9c(var_24h);\n    var_28h = 0x40c6c3;\n    *0x470689 = fcn.0040814c();\n    var_28h = 0x40c6d6;\n    *0x47068a = fcn.0040ade8();\n    var_28h = 0x40c6e9;\n    *0x47068b = fcn.0040ade8();\n    var_28h = &fcn.0040c624::var_1ch;\n    var_2ch = 0x40c703;\n    fcn.0040ad9c(var_28h);\n    var_2ch = 0x40c70d;\n    *0x47068c = fcn.0040814c();\n    var_2ch = 0x40c720;\n    *0x47068d = fcn.0040ade8();\n    var_2ch = &fcn.0040c624::var_24h;\n    var_30h = 0x40c73a;\n    fcn.0040ad9c(var_2ch);\n    var_30h = 0x40c745;\n    fcn.0040b0d4();\n    var_30h = 0x40c752;\n    fcn.00403fdc();\n    var_30h = &fcn.0040c624::var_2ch;\n    var_34h = 0x40c767;\n    fcn.0040ad9c(var_30h);\n    var_34h = 0x40c772;\n    fcn.0040b0d4();\n    var_34h = 0x40c77f;\n    fcn.00403fdc();\n    var_34h = 0x40c78d;\n    *0x470698 = fcn.0040ade8();\n    var_34h = &fcn.0040c624::var_30h;\n    var_38h = 0x40c7a7;\n    fcn.0040ad9c(var_34h);\n    var_38h = 0x40c7b4;\n    fcn.00403fdc();\n    var_38h = &fcn.0040c624::var_34h;\n    var_3ch = 0x40c7c9;\n    fcn.0040ad9c(var_38h);\n    var_3ch = 0x40c7d6;\n    fcn.00403fdc();\n    var_3ch = 0x40c7de;\n    fcn.00403f88();\n    var_3ch = 0x40c7e6;\n    fcn.00403f88();\n    var_3ch = &fcn.0040c624::var_38h;\n    var_40h = 0x40c7fb;\n    fcn.0040ad9c(var_3ch);\n    var_40h = 0x40c805;\n    iVar1 = fcn.0040814c();\n    if (iVar1 == 0) {\n        var_40h = 0x40c816;\n        fcn.00404020();\n    }\n    else {\n        var_40h = 0x40c825;\n        fcn.00404020();\n    }\n    var_40h = &fcn.0040c624::var_3ch;\n    fcn.0040ad9c(var_40h);\n    iVar1 = fcn.0040814c();\n    if (iVar1 == 0) {\n        fcn.0040ad9c(&fcn.0040c624::var_40h);\n        iVar1 = fcn.0040814c();\n        if (iVar1 == 0) {\n            fcn.00404020();\n        }\n        else {\n            fcn.00404020();\n        }\n    }\n    fcn.00404308(var_ch, 0x40c988, var_4h, var_8h);\n    fcn.00404308(var_ch, 0x40c994, var_4h, var_8h);\n    *0x470752 = fcn.0040ade8();\n    *in_FS_OFFSET = var_ch;\n    fcn.00403fac(0x40c8f6);\n    return;\n}\n",
        "token_count": 1685
    },
    "0040ca6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040ca6c(void)\n\n{\n    while( true ) {\n        if (*0x46430c == NULL) break;\n        *0x46430c = **0x46430c;\n        fcn.004026ec();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "0040ca8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040ca8c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x40cac4);\n    if (iVar1 != 0) {\n        *0x464130 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x40cad4);\n    }\n    if (*0x464130 == NULL) {\n        *0x464130 = fcn.00408568;\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0040d4a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040d4a0(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x40d508;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x470794 == 0;\n    *0x470794 = *0x470794 + -1;\n    if (bVar1) {\n        fcn.00403d34();\n        fcn.00403d5c();\n        if (*0x470665 != '\\0') {\n            fcn.00403fdc();\n        }\n        fcn.0040bc68();\n        fcn.0040bd6c();\n        fcn.0040ca8c();\n        fcn.0040c624();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 224
    },
    "0040d9a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d9a4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EDX;\n    \n    iVar1 = in_EDX;\n    if (*(arg_8h + -4) != 0) {\n        iVar1 = sub.kernel32.dll_GetProcAddress_1(*(arg_8h + -4));\n        if (iVar1 == 0) {\n            iVar1 = in_EDX;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 113
    },
    "0040f120": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f120(uint32_t param_1, uint16_t *param_2)\n\n{\n    float10 fVar1;\n    ulong uVar2;\n    \n    if (param_1 != *param_2) {\n        if (*param_2 == 0x400c) {\n            fcn.0040f120();\n        }\n        else {\n    // switch table (21 cases) at 0x40f165\n            switch(param_1) {\n            case 0:\n                if ((*param_2 == 1) && (*0x464318 != '\\0')) {\n                    fcn.0040e348();\n                }\n                else {\n                    fcn.0040eb2c();\n                }\n                break;\n            case 1:\n                fcn.0040e894();\n                break;\n            case 2:\n                fcn.0040fa8c();\n                fcn.00412d70();\n                break;\n            case 3:\n                fcn.0040f4e4();\n                fcn.00412cd0();\n                break;\n            case 4:\n                fVar1 = fcn.00410e28();\n                fcn.00412dbc(fVar1);\n                break;\n            case 5:\n                fVar1 = fcn.00410aac();\n                fcn.00412de0(SUB84(fVar1, 0), fVar1 >> 0x20);\n                break;\n            case 6:\n                fVar1 = fcn.00411768();\n                fcn.00412e0c(ROUND(fVar1), ROUND(fVar1) >> 0x20);\n                break;\n            case 7:\n                fVar1 = fcn.00411200();\n                fcn.00412e38(SUB84(fVar1, 0), fVar1 >> 0x20);\n                break;\n            case 8:\n                fcn.0040ef04();\n                break;\n            case 9:\n                fcn.0040ef9c();\n                break;\n            default:\n                if (param_1 == 0x100) {\n                    fcn.0040ef50();\n                }\n                else if (param_1 == 0x101) {\n                    fcn.0040e348();\n                }\n                else {\n                    fcn.0040f0b4();\n                }\n                break;\n            case 0xb:\n                fcn.004105a4();\n                fcn.00412e64();\n                break;\n            case 0xd:\n                fcn.0040efe8();\n                break;\n            case 0x10:\n                fcn.0040f934();\n                fcn.00412d50();\n                break;\n            case 0x11:\n                fcn.0040f9e4();\n                fcn.00412cf0();\n                break;\n            case 0x12:\n                fcn.0040fb84();\n                fcn.00412d10();\n                break;\n            case 0x13:\n                fcn.0040fc5c();\n                fcn.00412d30();\n                break;\n            case 0x14:\n                uVar2 = fcn.0040ffa8();\n                fcn.00412d90(uVar2, uVar2 >> 0x20);\n            }\n        }\n        return;\n    }\n    fcn.0040ee54();\n    return;\n}\n",
        "token_count": 733
    },
    "0040f4e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040f4e4(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x40f905;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x40f517\n    switch(uVar1) {\n    case 0:\n        var_8h = 0;\n        break;\n    case 1:\n        if (*0x464318 != '\\0') {\n            puStack28 = &stack0xfffffffc;\n            fcn.0040e348();\n        }\n        var_8h = 0;\n        break;\n    case 2:\n        var_8h = in_EAX[4];\n        break;\n    case 3:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 4:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00402a78();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00403188();\n        }\n        break;\n    case 5:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00402a78();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00403188();\n        }\n        break;\n    case 6:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00402a78();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00403188();\n        }\n        break;\n    case 7:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00402a78();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00403188();\n        }\n        break;\n    case 8:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.0040f34c();\n        break;\n    case 9:\n    case 0xd:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.0040f400();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.0040f34c();\n        }\n        else if (uVar1 == 0x101) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.0040f43c();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            puStack28 = &stack0xfffffffc;\n            cVar2 = fcn.0040f4a0();\n            if (cVar2 == '\\0') {\n                var_8h = fcn.0040f400();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x40f73b\n            switch(uVar1 & 0xbfff) {\n            default:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.0040f400();\n                break;\n            case 2:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 3:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 4:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00402a78();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00403188();\n                }\n                break;\n            case 5:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00402a78();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00403188();\n                }\n                break;\n            case 6:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00402a78();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00403188();\n                }\n                break;\n            case 7:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00402a78();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00403188();\n                }\n                break;\n            case 8:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.0040f34c();\n                break;\n            case 0xb:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0xc:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.0040f4e4();\n                break;\n            case 0x10:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x11:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x12:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x13:\n                var_8h = **(in_EAX + 4);\n                if (var_8h < 0) {\n                    puStack28 = &stack0xfffffffc;\n                    var_8h = fcn.00403188();\n                }\n                break;\n            case 0x14:\n                var_8h = **(in_EAX + 4);\n                if (var_8h >> 0x1f != (*(in_EAX + 4))[1]) {\n                    puStack28 = &stack0xfffffffc;\n                    var_8h = fcn.00403188();\n                }\n            }\n        }\n        break;\n    case 0xb:\n        var_8h = in_EAX[4];\n        break;\n    case 0xc:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.0040f4e4();\n        break;\n    case 0x10:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x11:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x12:\n        var_8h = in_EAX[4];\n        break;\n    case 0x13:\n        var_8h = *(in_EAX + 4);\n        if (var_8h < 0) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00403188();\n        }\n        break;\n    case 0x14:\n        var_8h = *(in_EAX + 4);\n        if (var_8h >> 0x1f != *(in_EAX + 6)) {\n            var_8h = fcn.00403188();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    return var_8h;\n}\n",
        "token_count": 1845
    },
    "0040f934": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040f934(void)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar1 = *in_EAX;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else if (iVar1 == 1) {\n        if (*0x464318 != '\\0') {\n            puStack24 = 0x40f974;\n            fcn.0040e348();\n        }\n        uVar2 = 0;\n    }\n    else if (iVar1 == 0xb) {\n        uVar2 = in_EAX & 0xffffff00 | *(in_EAX + 4);\n    }\n    else if (iVar1 == 0x10) {\n        uVar2 = in_EAX & 0xffffff00 | *(in_EAX + 4);\n    }\n    else {\n        uStack28 = 0x40f9c0;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.0040f4e4();\n        if (0xff < uVar2 + 0x80) {\n            fcn.00403188();\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return uVar2;\n}\n",
        "token_count": 341
    },
    "0040f9e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040f9e4(void)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar1 = *in_EAX;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else if (iVar1 == 1) {\n        if (*0x464318 != '\\0') {\n            puStack24 = 0x40fa24;\n            fcn.0040e348();\n        }\n        uVar2 = 0;\n    }\n    else if (iVar1 == 0xb) {\n        uVar2 = in_EAX & 0xffffff00 | *(in_EAX + 4);\n    }\n    else if (iVar1 == 0x11) {\n        uVar2 = in_EAX & 0xffffff00 | *(in_EAX + 4);\n    }\n    else {\n        uStack28 = 0x40fa67;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.0040f4e4();\n        if (0xff < uVar2) {\n            fcn.00403188();\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return uVar2;\n}\n",
        "token_count": 336
    },
    "0040fa8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040fa8c(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (7 cases) at 0x40fac4\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x464318 != '\\0') {\n            puStack24 = 0x40fafd;\n            fcn.0040e348();\n        }\n        uVar1 = 0;\n        break;\n    case 2:\n        uVar1 = in_EAX & 0xffff0000 | in_EAX[4];\n        break;\n    default:\n        uStack28 = 0x40fb60;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar1 = fcn.0040f4e4();\n        if (0xffff < uVar1 + 0x8000) {\n            fcn.00403188();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX & 0xffff0000 | in_EAX[4];\n        break;\n    case 0x10:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n    }\n    return uVar1;\n}\n",
        "token_count": 370
    },
    "0040fb84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040fb84(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (6 cases) at 0x40fbb9\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x464318 != '\\0') {\n            puStack24 = 0x40fbeb;\n            fcn.0040e348();\n        }\n        uVar1 = 0;\n        break;\n    default:\n        uStack28 = 0x40fc39;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar1 = fcn.0040f4e4();\n        if (0xffff < uVar1) {\n            fcn.00403188();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX & 0xffff0000 | in_EAX[4];\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar1 = in_EAX & 0xffff0000 | in_EAX[4];\n    }\n    return uVar1;\n}\n",
        "token_count": 343
    },
    "0040fc5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040fc5c(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    ulong uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (7 cases) at 0x40fc96\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x464318 != '\\0') {\n            puStack24 = 0x40fccf;\n            fcn.0040e348();\n        }\n        uVar1 = 0;\n        break;\n    default:\n        uStack28 = 0x40fd21;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.0040ffa8();\n        uVar1 = uVar2;\n        if (uVar2 >> 0x20 != 0) {\n            uVar1 = fcn.00403188();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x13:\n        uVar1 = *(in_EAX + 4);\n    }\n    return uVar1;\n}\n",
        "token_count": 368
    },
    "0040ffa8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0040ffa8(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint64_t uVar3;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar3 = CONCAT44(var_ch, var_10h);\n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x4103b4;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x40ffdb\n    switch(uVar1) {\n    case 0:\n        uVar3 = 0;\n        break;\n    case 1:\n        if (*0x464318 != '\\0') {\n            puStack36 = &stack0xfffffffc;\n            fcn.0040e348();\n        }\n        uVar3 = 0;\n        break;\n    case 2:\n        uVar3 = in_EAX[4];\n        break;\n    case 3:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 4:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00402a78();\n        break;\n    case 5:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00402a78();\n        break;\n    case 6:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00402a78();\n        break;\n    case 7:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00402a78();\n        break;\n    case 8:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.0040fdf0();\n        break;\n    case 9:\n    case 0xd:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.0040fd44();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            puStack36 = &stack0xfffffffc;\n            uVar3 = fcn.0040fdf0();\n        }\n        else if (uVar1 == 0x101) {\n            puStack36 = &stack0xfffffffc;\n            uVar3 = fcn.0040fef0();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            puStack36 = &stack0xfffffffc;\n            cVar2 = fcn.0040ff5c();\n            if (cVar2 == '\\0') {\n                uVar3 = fcn.0040fd44();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x4101ff\n            switch(uVar1 & 0xbfff) {\n            default:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.0040fd44();\n                break;\n            case 2:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 3:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 4:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00402a78();\n                break;\n            case 5:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00402a78();\n                break;\n            case 6:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00402a78();\n                break;\n            case 7:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00402a78();\n                break;\n            case 8:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.0040fdf0();\n                break;\n            case 0xb:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0xc:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.0040ffa8();\n                break;\n            case 0x10:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x11:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x12:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x13:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x14:\n                uVar3 = **(in_EAX + 4);\n            }\n        }\n        break;\n    case 0xb:\n        uVar3 = in_EAX[4];\n        break;\n    case 0xc:\n        uVar3 = fcn.0040ffa8();\n        break;\n    case 0x10:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar3 = in_EAX[4];\n        break;\n    case 0x13:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        uVar3 = *(in_EAX + 4);\n    }\n    *in_FS_OFFSET = uStack44;\n    return uVar3;\n}\n",
        "token_count": 1258
    },
    "004105a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004105a4(uint32_t param_1)\n\n{\n    float fVar1;\n    double dVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint16_t *in_EAX;\n    int32_t *piVar6;\n    bool bVar7;\n    uint32_t uStack8;\n    \n    uVar3 = *in_EAX;\n    uVar4 = in_EAX & 0xffff0000;\n    uVar5 = uVar3;\n    piVar6 = uVar4 | uVar5;\n    // switch table (21 cases) at 0x4105be\n    switch(uVar5) {\n    case 0:\n        uStack8 = param_1 & 0xffffff00;\n        break;\n    case 1:\n        if (*0x464318 != '\\0') {\n            piVar6 = fcn.0040e348();\n        }\n        uStack8 = param_1 & 0xffffff00;\n        break;\n    case 2:\n        uStack8 = param_1 & 0xffffff00 | in_EAX[4] != 0;\n        break;\n    case 3:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != 0;\n        break;\n    case 4:\n        uVar3 = *(in_EAX + 4) == *0x4108e8;\n        piVar6 = uVar4 | ((*(in_EAX + 4) < *0x4108e8) << 8 | uVar3 << 0xe);\n        uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n        break;\n    case 5:\n        uVar3 = *(in_EAX + 4) == *0x4108e8;\n        piVar6 = uVar4 | ((*(in_EAX + 4) < *0x4108e8) << 8 | uVar3 << 0xe);\n        uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n        break;\n    case 6:\n        uVar3 = *(in_EAX + 4) == *0x4108e8;\n        piVar6 = uVar4 | ((*(in_EAX + 4) < *0x4108e8) << 8 | uVar3 << 0xe);\n        uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n        break;\n    case 7:\n        uVar3 = *(in_EAX + 4) == *0x4108e8;\n        piVar6 = uVar4 | ((*(in_EAX + 4) < *0x4108e8) << 8 | uVar3 << 0xe);\n        uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n        break;\n    case 8:\n        piVar6 = fcn.004103ec();\n        uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n        break;\n    case 9:\n    case 0xd:\n        piVar6 = fcn.004104b4();\n        uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n        break;\n    default:\n        if (uVar3 == 0x100) {\n            piVar6 = fcn.004103ec();\n            uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n        }\n        else if (uVar3 == 0x101) {\n            piVar6 = fcn.004104f4();\n            uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n        }\n        else if ((uVar3 & 0x4000) == 0) {\n            piVar6 = fcn.00410558();\n            uStack8 = param_1;\n            if (piVar6 == '\\0') {\n                piVar6 = fcn.004104b4();\n                uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x410780\n            switch(uVar5 & 0xbfff) {\n            default:\n                piVar6 = fcn.004104b4();\n                uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n                break;\n            case 2:\n                piVar6 = *(in_EAX + 4);\n                uStack8 = param_1 & 0xffffff00 | *piVar6 != 0;\n                break;\n            case 3:\n                piVar6 = *(in_EAX + 4);\n                uStack8 = param_1 & 0xffffff00 | *piVar6 != 0;\n                break;\n            case 4:\n                fVar1 = **(in_EAX + 4);\n                uVar3 = fVar1 == *0x4108e8;\n                piVar6 = *(in_EAX + 4) & 0xffff0000 | (fVar1 < *0x4108e8) << 8 | uVar3 << 0xe;\n                uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n                break;\n            case 5:\n                dVar2 = **(in_EAX + 4);\n                uVar3 = dVar2 == *0x4108e8;\n                piVar6 = *(in_EAX + 4) & 0xffff0000 | (dVar2 < *0x4108e8) << 8 | uVar3 << 0xe;\n                uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n                break;\n            case 6:\n                fVar1 = **(in_EAX + 4);\n                uVar3 = fVar1 == *0x4108e8;\n                piVar6 = *(in_EAX + 4) & 0xffff0000 | (fVar1 < *0x4108e8) << 8 | uVar3 << 0xe;\n                uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n                break;\n            case 7:\n                dVar2 = **(in_EAX + 4);\n                uVar3 = dVar2 == *0x4108e8;\n                piVar6 = *(in_EAX + 4) & 0xffff0000 | (dVar2 < *0x4108e8) << 8 | uVar3 << 0xe;\n                uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n                break;\n            case 8:\n                piVar6 = fcn.004103ec();\n                uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n                break;\n            case 0xb:\n                piVar6 = NULL;\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 0xc:\n                piVar6 = fcn.004105a4();\n                uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n                break;\n            case 0x10:\n                piVar6 = *(in_EAX + 4);\n                uStack8 = param_1 & 0xffffff00 | *piVar6 != '\\0';\n                break;\n            case 0x11:\n                piVar6 = *(in_EAX + 4);\n                uStack8 = param_1 & 0xffffff00 | *piVar6 != '\\0';\n                break;\n            case 0x12:\n                piVar6 = *(in_EAX + 4);\n                uStack8 = param_1 & 0xffffff00 | *piVar6 != 0;\n                break;\n            case 0x13:\n                piVar6 = *(in_EAX + 4);\n                uStack8 = param_1 & 0xffffff00 | *piVar6 != 0;\n                break;\n            case 0x14:\n                piVar6 = *(in_EAX + 4);\n                bVar7 = piVar6[1] == 0;\n                if (bVar7) {\n                    bVar7 = *piVar6 == 0;\n                }\n                piVar6 = piVar6 & 0xffffff00;\n                uStack8 = param_1 & 0xffffff00 | !bVar7;\n            }\n        }\n        break;\n    case 0xb:\n        piVar6 = NULL;\n        uStack8 = param_1 & 0xffffff00 | in_EAX[4] != 0;\n        break;\n    case 0xc:\n        piVar6 = fcn.004105a4();\n        uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n        break;\n    case 0x10:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != '\\0';\n        break;\n    case 0x11:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != '\\0';\n        break;\n    case 0x12:\n        uStack8 = param_1 & 0xffffff00 | in_EAX[4] != 0;\n        break;\n    case 0x13:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != 0;\n        break;\n    case 0x14:\n        bVar7 = *(in_EAX + 6) == 0;\n        if (bVar7) {\n            bVar7 = *(in_EAX + 4) == 0;\n        }\n        piVar6 = uVar4 | uVar5 & 0xffffff00;\n        uStack8 = param_1 & 0xffffff00 | !bVar7;\n    }\n    return CONCAT44(uStack8, piVar6 & 0xffffff00 | uStack8 & 0xff);\n}\n",
        "token_count": 2265
    },
    "00410aac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00410aac(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    double dStack24;\n    \n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x410ac8\n    switch(uVar1) {\n    case 0:\n        dStack24 = 0.0;\n        break;\n    case 1:\n        if (*0x464318 != '\\0') {\n            fcn.0040e348();\n        }\n        dStack24 = 0.0;\n        break;\n    case 2:\n        dStack24 = in_EAX[4];\n        break;\n    case 3:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 4:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 5:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 6:\n        dStack24 = *(in_EAX + 4) / *0x410e24;\n        break;\n    case 7:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 8:\n        fVar3 = fcn.004108ec();\n        dStack24 = fVar3;\n        break;\n    case 9:\n    case 0xd:\n        fVar3 = fcn.004109b0();\n        dStack24 = fVar3;\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            fVar3 = fcn.004108ec();\n            dStack24 = fVar3;\n        }\n        else if (uVar1 == 0x101) {\n            fVar3 = fcn.004109fc();\n            dStack24 = fVar3;\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            cVar2 = fcn.00410a60();\n            if (cVar2 == '\\0') {\n                fVar3 = fcn.004109b0();\n                dStack24 = fVar3;\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x410ca5\n            switch(uVar1 & 0xbfff) {\n            default:\n                fVar3 = fcn.004109b0();\n                dStack24 = fVar3;\n                break;\n            case 2:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 3:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 4:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 5:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 6:\n                dStack24 = **(in_EAX + 4) / *0x410e24;\n                break;\n            case 7:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 8:\n                fVar3 = fcn.004108ec();\n                dStack24 = fVar3;\n                break;\n            case 0xb:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0xc:\n                fVar3 = fcn.00410aac();\n                dStack24 = fVar3;\n                break;\n            case 0x10:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x11:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x12:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x13:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x14:\n                dStack24 = **(in_EAX + 4);\n            }\n        }\n        break;\n    case 0xb:\n        dStack24 = in_EAX[4];\n        break;\n    case 0xc:\n        fVar3 = fcn.00410aac();\n        dStack24 = fVar3;\n        break;\n    case 0x10:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        dStack24 = in_EAX[4];\n        break;\n    case 0x13:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        dStack24 = *(in_EAX + 4);\n    }\n    return dStack24;\n}\n",
        "token_count": 1057
    },
    "00410e28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00410e28(void)\n\n{\n    ushort *in_EAX;\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    float var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    // switch table (21 cases) at 0x410e4a\n    switch(*in_EAX) {\n    case 0:\n        var_8h = 0.0;\n        break;\n    case 1:\n        if (*0x464318 != '\\0') {\n            puStack40 = 0x410ebe;\n            fcn.0040e348();\n        }\n        var_8h = 0.0;\n        break;\n    case 2:\n        var_8h = in_EAX[4];\n        break;\n    case 3:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 4:\n        var_8h = *(in_EAX + 4);\n        break;\n    default:\n        uStack44 = 0x410f8d;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        fVar1 = fcn.00410aac();\n        var_8h = fVar1;\n        *in_FS_OFFSET = uStack48;\n        break;\n    case 0xb:\n        var_8h = in_EAX[4];\n        break;\n    case 0x10:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x11:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x12:\n        var_8h = in_EAX[4];\n        break;\n    case 0x13:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x14:\n        var_8h = *(in_EAX + 4);\n    }\n    return var_8h;\n}\n",
        "token_count": 480
    },
    "00411200": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00411200(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    uint uVar4;\n    double in_stack_ffffffe0;\n    \n    uVar1 = *in_EAX;\n    uVar4 = SUB84(in_stack_ffffffe0, 0);\n    // switch table (21 cases) at 0x41121c\n    switch(uVar1) {\n    case 0:\n        break;\n    case 1:\n        if (*0x464318 != '\\0') {\n            in_stack_ffffffe0 = CONCAT44(0x411294, uVar4);\n            fcn.0040e348();\n        }\n        break;\n    case 2:\n        break;\n    case 3:\n        break;\n    case 4:\n    case 5:\n    case 6:\n        in_stack_ffffffe0 = CONCAT44(0x4112c1, uVar4);\n        fcn.00411104();\n        break;\n    case 7:\n        break;\n    case 8:\n        in_stack_ffffffe0 = CONCAT44(0x4112e3, uVar4);\n        fcn.00410fb8();\n        break;\n    case 9:\n    case 0xd:\n        in_stack_ffffffe0 = CONCAT44(0x41138d, uVar4);\n        fcn.00411104();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            in_stack_ffffffe0 = CONCAT44(0x4113ad, uVar4);\n            fcn.00410fb8();\n        }\n        else if (uVar1 == 0x101) {\n            in_stack_ffffffe0 = CONCAT44(0x4113bd, uVar4);\n            fcn.00411150();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            in_stack_ffffffe0 = CONCAT44(0x411537, uVar4);\n            cVar2 = fcn.004111b4();\n            if (cVar2 == '\\0') {\n                in_stack_ffffffe0 = CONCAT44(0x411542, SUB84(in_stack_ffffffe0, 0));\n                fcn.00411104();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x4113e7\n            switch(uVar1 & 0xbfff) {\n            default:\n                in_stack_ffffffe0 = CONCAT44(0x411528, uVar4);\n                fcn.00411104();\n                break;\n            case 2:\n                break;\n            case 3:\n                break;\n            case 4:\n            case 5:\n            case 6:\n                in_stack_ffffffe0 = CONCAT44(0x41145e, uVar4);\n                fcn.00411104();\n                break;\n            case 7:\n                break;\n            case 8:\n                in_stack_ffffffe0 = CONCAT44(0x411482, uVar4);\n                fcn.00410fb8();\n                break;\n            case 0xb:\n                break;\n            case 0xc:\n                in_stack_ffffffe0 = CONCAT44(0x41151b, uVar4);\n                fcn.00411200();\n                break;\n            case 0x10:\n                break;\n            case 0x11:\n                break;\n            case 0x12:\n                break;\n            case 0x13:\n                break;\n            case 0x14:\n                fVar3 = fcn.004110a4(SUB84(**(in_EAX + 4), 0), **(in_EAX + 4) >> 0x20);\n                in_stack_ffffffe0 = fVar3;\n            }\n        }\n        break;\n    case 0xb:\n        break;\n    case 0xc:\n        in_stack_ffffffe0 = CONCAT44(0x41137d, uVar4);\n        fcn.00411200();\n        break;\n    case 0x10:\n        break;\n    case 0x11:\n        break;\n    case 0x12:\n        break;\n    case 0x13:\n        break;\n    case 0x14:\n        fVar3 = fcn.004110a4(SUB84(*(in_EAX + 4), 0), *(in_EAX + 4) >> 0x20);\n        in_stack_ffffffe0 = fVar3;\n    }\n    return in_stack_ffffffe0;\n}\n",
        "token_count": 1004
    },
    "00411768": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00411768(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    uint uVar4;\n    int64_t in_stack_ffffffe0;\n    \n    uVar1 = *in_EAX;\n    uVar4 = in_stack_ffffffe0;\n    // switch table (21 cases) at 0x411784\n    switch(uVar1) {\n    case 0:\n        break;\n    case 1:\n        if (*0x464318 != '\\0') {\n            in_stack_ffffffe0 = CONCAT44(0x4117fc, uVar4);\n            fcn.0040e348();\n        }\n        break;\n    case 2:\n        break;\n    case 3:\n        break;\n    case 4:\n    case 5:\n        in_stack_ffffffe0 = CONCAT44(0x411835, uVar4);\n        fcn.0041166c();\n        break;\n    case 6:\n        break;\n    case 7:\n        in_stack_ffffffe0 = CONCAT44(0x411857, uVar4);\n        fcn.0041166c();\n        break;\n    case 8:\n        in_stack_ffffffe0 = CONCAT44(0x411867, uVar4);\n        fcn.00411550();\n        break;\n    case 9:\n    case 0xd:\n        in_stack_ffffffe0 = CONCAT44(0x41192f, uVar4);\n        fcn.0041166c();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            in_stack_ffffffe0 = CONCAT44(0x41194f, uVar4);\n            fcn.00411550();\n        }\n        else if (uVar1 == 0x101) {\n            in_stack_ffffffe0 = CONCAT44(0x41195f, uVar4);\n            fcn.004116b8();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            in_stack_ffffffe0 = CONCAT44(0x411b16, uVar4);\n            cVar2 = fcn.0041171c();\n            if (cVar2 == '\\0') {\n                in_stack_ffffffe0 = CONCAT44(0x411b21, in_stack_ffffffe0);\n                fcn.0041166c();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x411989\n            switch(uVar1 & 0xbfff) {\n            default:\n                in_stack_ffffffe0 = CONCAT44(0x411b07, uVar4);\n                fcn.0041166c();\n                break;\n            case 2:\n                break;\n            case 3:\n                break;\n            case 4:\n            case 5:\n                in_stack_ffffffe0 = CONCAT44(0x411a0c, uVar4);\n                fcn.0041166c();\n                break;\n            case 6:\n                break;\n            case 7:\n                in_stack_ffffffe0 = CONCAT44(0x411a30, uVar4);\n                fcn.0041166c();\n                break;\n            case 8:\n                in_stack_ffffffe0 = CONCAT44(0x411a40, uVar4);\n                fcn.00411550();\n                break;\n            case 0xb:\n                break;\n            case 0xc:\n                in_stack_ffffffe0 = CONCAT44(0x411afa, uVar4);\n                fcn.00411768();\n                break;\n            case 0x10:\n                break;\n            case 0x11:\n                break;\n            case 0x12:\n                break;\n            case 0x13:\n                break;\n            case 0x14:\n                fVar3 = fcn.0041160c(SUB84(**(in_EAX + 4), 0), **(in_EAX + 4) >> 0x20);\n                in_stack_ffffffe0 = ROUND(fVar3);\n            }\n        }\n        break;\n    case 0xb:\n        break;\n    case 0xc:\n        in_stack_ffffffe0 = CONCAT44(0x41191f, uVar4);\n        fcn.00411768();\n        break;\n    case 0x10:\n        break;\n    case 0x11:\n        break;\n    case 0x12:\n        break;\n    case 0x13:\n        break;\n    case 0x14:\n        fVar3 = fcn.0041160c(SUB84(*(in_EAX + 4), 0), *(in_EAX + 4) >> 0x20);\n        in_stack_ffffffe0 = ROUND(fVar3);\n    }\n    return in_stack_ffffffe0;\n}\n",
        "token_count": 1064
    },
    "00411d98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00411d98(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint *puStack40;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    puStack40 = 0x411dba;\n    var_4h = param_2;\n    uVar1 = fcn.00413564();\n    var_5h = uVar1;\n    if (var_5h != '\\0') {\n        puStack40 = &fcn.00411d98::pvarg;\n        puStack44 = 0x411dcc;\n        sub.oleaut32.dll_VariantInit();\n        uStack48 = 0x411e0d;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        puStack44 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))();\n        fcn.00403fdc();\n        *in_FS_OFFSET = 0x100;\n        uStack48 = 0x411e14;\n        uStack52 = 0x411e0c;\n        uVar1 = fcn.0040eb2c();\n        return uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 344
    },
    "00411e1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00411e1c(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    float10 fVar4;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 0xf;\n    do {\n        var_4h = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x412353;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00411e1c::var_1ch;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x411e55\n    switch(uVar1) {\n    case 0:\n        var_14h = &stack0xfffffffc;\n        fcn.00403f88();\n        break;\n    case 1:\n        var_14h = &stack0xfffffffc;\n        if (*0x464318 != '\\0') {\n            var_14h = &stack0xfffffffc;\n            fcn.0040e348();\n        }\n        fcn.00403fdc();\n        break;\n    case 2:\n        var_14h = &stack0xfffffffc;\n        fcn.00407fd4();\n        fcn.00403fdc();\n        break;\n    case 3:\n        var_14h = &stack0xfffffffc;\n        fcn.00407fd4();\n        fcn.00403fdc();\n        break;\n    case 4:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.004093d0(var_28h);\n        fcn.00403fdc(var_28h, var_24h, var_20h);\n        break;\n    case 5:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.004093d0(var_28h);\n        fcn.00403fdc(var_28h, var_24h, var_20h);\n        break;\n    case 6:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.00411b34(var_24h, *(param_2 + 6));\n        fcn.00404210();\n        break;\n    case 7:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.00411b6c(var_24h, *(param_2 + 6));\n        fcn.00404210();\n        break;\n    case 8:\n        var_14h = &stack0xfffffffc;\n        fcn.00404778();\n        fcn.00404864(&fcn.00411e1c::var_1ch);\n        var_24h = 0x411fb9;\n        fcn.00404210();\n        break;\n    case 9:\n    case 0xd:\n        var_14h = &stack0xfffffffc;\n        fcn.00411c68();\n        fcn.00403fdc();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_14h = &stack0xfffffffc;\n            fcn.00403fdc();\n        }\n        else if (uVar1 == 0x101) {\n            var_14h = &stack0xfffffffc;\n            fcn.00411d34();\n            fcn.00403fdc();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_14h = &stack0xfffffffc;\n            fcn.00403f88();\n            cVar2 = fcn.00411d98();\n            if (cVar2 == '\\0') {\n                fcn.00411c68();\n                fcn.00403fdc();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x4120e9\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_14h = &stack0xfffffffc;\n                fcn.00411c68();\n                fcn.00403fdc();\n                break;\n            case 2:\n                var_14h = &stack0xfffffffc;\n                fcn.00407fd4();\n                fcn.00403fdc();\n                break;\n            case 3:\n                var_14h = &stack0xfffffffc;\n                fcn.00407fd4();\n                fcn.00403fdc();\n                break;\n            case 4:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.004093d0(var_28h);\n                fcn.00403fdc(var_28h, var_24h, var_20h);\n                break;\n            case 5:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.004093d0(var_28h);\n                fcn.00403fdc(var_28h, var_24h, var_20h);\n                break;\n            case 6:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00411b34(var_24h, (*(param_2 + 4))[1]);\n                fcn.00404210();\n                break;\n            case 7:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00411b6c(var_24h, (*(param_2 + 4))[1]);\n                fcn.00404210();\n                break;\n            case 8:\n                var_14h = &stack0xfffffffc;\n                fcn.004041b0();\n                break;\n            case 0xb:\n                var_14h = &stack0xfffffffc;\n                fcn.00411ba4();\n                fcn.00404210();\n                break;\n            case 0xc:\n                var_14h = &stack0xfffffffc;\n                fcn.00411e1c();\n                break;\n            case 0x10:\n                var_14h = &stack0xfffffffc;\n                fcn.00407fd4();\n                fcn.00403fdc();\n                break;\n            case 0x11:\n                var_14h = &stack0xfffffffc;\n                fcn.00407fd4();\n                fcn.00403fdc();\n                break;\n            case 0x12:\n                var_14h = &stack0xfffffffc;\n                fcn.00407fd4();\n                fcn.00403fdc();\n                break;\n            case 0x13:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.004080c0(var_24h);\n                fcn.00403fdc(var_24h, 0);\n                break;\n            case 0x14:\n                var_20h._0_1_ = (*(param_2 + 4))[1];\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.004080c0(var_24h);\n                fcn.00403fdc(var_24h, var_20h);\n            }\n        }\n        break;\n    case 0xb:\n        var_14h = &stack0xfffffffc;\n        fcn.00411ba4();\n        fcn.00404210();\n        break;\n    case 0xc:\n        var_14h = &stack0xfffffffc;\n        fcn.00411e1c();\n        break;\n    case 0x10:\n        var_14h = &stack0xfffffffc;\n        fcn.00407fd4();\n        fcn.00403fdc();\n        break;\n    case 0x11:\n        var_14h = &stack0xfffffffc;\n        fcn.00407fd4();\n        fcn.00403fdc();\n        break;\n    case 0x12:\n        var_14h = &stack0xfffffffc;\n        fcn.00407fd4();\n        fcn.00403fdc();\n        break;\n    case 0x13:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.004080c0(var_24h);\n        fcn.00403fdc(var_24h, 0);\n        break;\n    case 0x14:\n        var_20h._0_1_ = *(param_2 + 6);\n        var_24h = *(param_2 + 4);\n        fcn.004080c0(var_24h);\n        fcn.00403fdc(var_24h, var_20h);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x41235a;\n    fcn.00403fac();\n    fcn.00404680();\n    fcn.00403fac();\n    fcn.00404680();\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 2571
    },
    "0041247c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041247c(uint param_1, uint *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    uStack48 = 0x412534;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x4124b1;\n    var_4h = param_2;\n    var_5h = fcn.00413564();\n    if (var_5h != '\\0') {\n        puStack56 = &fcn.0041247c::pvarg;\n        puStack60 = 0x4124c3;\n        sub.oleaut32.dll_VariantInit();\n        uStack64 = 0x412517;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))(8);\n        arg_8h = var_4h;\n        fcn.00404778();\n        fcn.00404864(arg_8h);\n        *in_FS_OFFSET = arg_8h;\n        uStack68 = 0x41251e;\n        fcn.0040eb2c();\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x41253b;\n    uStack48 = 0x412533;\n    fcn.00404668();\n    return;\n}\n",
        "token_count": 451
    },
    "00412544": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00412544(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    float10 fVar3;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 0xe;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x412a96;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00412544::var_20h;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x41257e\n    switch(uVar1) {\n    case 0:\n        var_18h = &stack0xfffffffc;\n        fcn.00404668();\n        break;\n    case 1:\n        var_18h = &stack0xfffffffc;\n        if (*0x464318 != '\\0') {\n            var_18h = &stack0xfffffffc;\n            fcn.0040e348();\n        }\n        fcn.004047b4();\n        break;\n    case 2:\n        var_18h = &stack0xfffffffc;\n        fcn.00407fd4();\n        fcn.004047b4();\n        break;\n    case 3:\n        var_18h = &stack0xfffffffc;\n        fcn.00407fd4();\n        fcn.004047b4();\n        break;\n    case 4:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.004093d0(var_2ch);\n        fcn.004047b4(var_2ch, var_28h, var_24h);\n        break;\n    case 5:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.004093d0(var_2ch);\n        fcn.004047b4(var_2ch, var_28h, var_24h);\n        break;\n    case 6:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.00411b34(var_28h, *(param_2 + 6));\n        fcn.004046a4();\n        break;\n    case 7:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.00411b6c(var_28h, *(param_2 + 6));\n        fcn.004046a4();\n        break;\n    case 8:\n        var_18h = &stack0xfffffffc;\n        fcn.00404778();\n        var_28h = 0x4126d5;\n        fcn.00404864(in_EAX);\n        break;\n    case 9:\n    case 0xd:\n        var_18h = &stack0xfffffffc;\n        fcn.00412360();\n        fcn.004046a4();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_18h = &stack0xfffffffc;\n            fcn.004047b4();\n        }\n        else if (uVar1 == 0x101) {\n            var_18h = &stack0xfffffffc;\n            fcn.00412418();\n            fcn.004046a4();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_18h = &stack0xfffffffc;\n            fcn.00404668();\n            cVar2 = fcn.0041247c();\n            if (cVar2 == '\\0') {\n                fcn.00412360();\n                fcn.004046a4();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x412805\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_18h = &stack0xfffffffc;\n                fcn.00412360();\n                fcn.004046a4();\n                break;\n            case 2:\n                var_18h = &stack0xfffffffc;\n                fcn.00407fd4();\n                fcn.004047b4();\n                break;\n            case 3:\n                var_18h = &stack0xfffffffc;\n                fcn.00407fd4();\n                fcn.004047b4();\n                break;\n            case 4:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.004093d0(var_2ch);\n                fcn.004047b4(var_2ch, var_28h, var_24h);\n                break;\n            case 5:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.004093d0(var_2ch);\n                fcn.004047b4(var_2ch, var_28h, var_24h);\n                break;\n            case 6:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00411b34(var_28h, (*(param_2 + 4))[1]);\n                fcn.004046a4();\n                break;\n            case 7:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00411b6c(var_28h, (*(param_2 + 4))[1]);\n                fcn.004046a4();\n                break;\n            case 8:\n                var_18h = &stack0xfffffffc;\n                fcn.00404778();\n                break;\n            case 0xb:\n                var_18h = &stack0xfffffffc;\n                fcn.00411ba4();\n                fcn.004046a4();\n                break;\n            case 0xc:\n                var_18h = &stack0xfffffffc;\n                fcn.00412544();\n                break;\n            case 0x10:\n                var_18h = &stack0xfffffffc;\n                fcn.00407fd4();\n                fcn.004047b4();\n                break;\n            case 0x11:\n                var_18h = &stack0xfffffffc;\n                fcn.00407fd4();\n                fcn.004047b4();\n                break;\n            case 0x12:\n                var_18h = &stack0xfffffffc;\n                fcn.00407fd4();\n                fcn.004047b4();\n                break;\n            case 0x13:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.004080c0(var_28h);\n                fcn.004047b4(var_28h, 0);\n                break;\n            case 0x14:\n                var_24h._0_1_ = (*(param_2 + 4))[1];\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.004080c0(var_28h);\n                fcn.004047b4(var_28h, var_24h);\n            }\n        }\n        break;\n    case 0xb:\n        var_18h = &stack0xfffffffc;\n        fcn.00411ba4();\n        fcn.004046a4();\n        break;\n    case 0xc:\n        var_18h = &stack0xfffffffc;\n        fcn.00412544();\n        break;\n    case 0x10:\n        var_18h = &stack0xfffffffc;\n        fcn.00407fd4();\n        fcn.004047b4();\n        break;\n    case 0x11:\n        var_18h = &stack0xfffffffc;\n        fcn.00407fd4();\n        fcn.004047b4();\n        break;\n    case 0x12:\n        var_18h = &stack0xfffffffc;\n        fcn.00407fd4();\n        fcn.004047b4();\n        break;\n    case 0x13:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.004080c0(var_28h);\n        fcn.004047b4(var_28h, 0);\n        break;\n    case 0x14:\n        var_24h._0_1_ = *(param_2 + 6);\n        var_28h = *(param_2 + 4);\n        fcn.004080c0(var_28h);\n        fcn.004047b4(var_28h, var_24h);\n    }\n    *in_FS_OFFSET = var_28h;\n    var_20h = 0x412a9d;\n    fcn.00404680();\n    fcn.00403fac();\n    fcn.00404680();\n    fcn.00403fac();\n    fcn.00404680();\n    fcn.00403fac();\n    fcn.00404680();\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 2589
    },
    "00412b1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412b1c(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    \n    uVar1 = *param_2;\n    if (uVar1 < 0xe) {\n        if (uVar1 != 0xd) {\n            if (uVar1 == 0) {\n                fcn.00405848();\n                return;\n            }\n            if (uVar1 == 1) {\n                if (*0x464318 != '\\0') {\n                    fcn.0040e348();\n                }\n                fcn.00405848();\n                return;\n            }\n            if (uVar1 != 9) goto code_r0x00412b9d;\n        }\n        fcn.00405860();\n    }\n    else {\n        if (uVar1 == 0x101) {\n            fcn.00412aa4(param_1);\n            return;\n        }\n        if ((uVar1 == 0x4009) || (uVar1 == 0x400d)) {\n            fcn.00405860();\n            return;\n        }\ncode_r0x00412b9d:\n        cVar2 = fcn.00413564();\n        if (cVar2 != '\\0') {\n            fcn.00405848();\n            cVar2 = fcn.00403304();\n            if (cVar2 != '\\0') {\n                return;\n            }\n        }\n        fcn.0040e348();\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "00412be8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412be8(uint param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    \n    iVar1 = *param_2;\n    if (iVar1 == 0) {\n        fcn.00405848(param_1);\n    }\n    else if (iVar1 == 1) {\n        if (*0x464318 != '\\0') {\n            fcn.0040e348();\n        }\n        fcn.00405848(param_1);\n    }\n    else if (iVar1 == 9) {\n        fcn.00405860();\n    }\n    else if (iVar1 == 0x4009) {\n        fcn.00405860();\n    }\n    else {\n        cVar2 = fcn.00413564();\n        if (cVar2 != '\\0') {\n            fcn.00405848(param_1);\n            cVar2 = fcn.00403304();\n            if (cVar2 != '\\0') {\n                return;\n            }\n        }\n        fcn.0040e348();\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "00412c94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412c94(char param_1, uint param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.0040eab0();\n    }\n    if (*0x464320 == '\\0') {\n        *in_EAX = 3;\n    }\n    else {\n        *in_EAX = *(param_1 * 2 + 0x464334);\n    }\n    *(in_EAX + 4) = param_2;\n    return;\n}\n",
        "token_count": 128
    },
    "004132c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004132c0(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    \n    uStack16 = 0x470828;\n    puStack20 = 0x4132d4;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack24 = 0x413321;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.00404fd4();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            if (*(*0x470824 + iVar1 * 4) != *0x464328) {\n                fcn.00403250();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x413328;\n    uStack24 = 0x470828;\n    uStack28 = 0x413320;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 278
    },
    "00413564": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00413564(uint param_1, uint *param_2)\n\n{\n    bool bVar1;\n    uint32_t in_EAX;\n    unkuint3 Var3;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_1h;\n    \n    if (((*0x470824 == 0) || (in_EAX < 0x100)) || (0x7ff < in_EAX)) {\n        bVar1 = false;\n        Var3 = 0;\n    }\n    else {\n        Var3 = in_EAX >> 8;\n        bVar1 = true;\n    }\n    if (bVar1) {\n        uStack24 = 0x470828;\n        puStack28 = 0x41359f;\n        sub.kernel32.dll_EnterCriticalSection_1();\n        uStack32 = 0x41360c;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &fcn.00413564::var_1h + 1;\n        iVar2 = fcn.00404fd4();\n        if ((in_EAX & 0xffff) - 0x100 < iVar2) {\n            *param_2 = *(*0x470824 + -0x400 + (in_EAX & 0xffff) * 4);\n        }\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x413613;\n        uStack32 = 0x470828;\n        uStack36 = 0x41360b;\n        iVar2 = sub.kernel32.dll_LeaveCriticalSection_1();\n        return iVar2;\n    }\n    return Var3 << 8;\n}\n",
        "token_count": 416
    },
    "004139d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004139d4(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*in_EAX == '\\x01') {\n        uVar2 = fcn.00408110();\n        return uVar2;\n    }\n    iVar3 = fcn.0041397c();\n    if (*(iVar3 + 1) < 0) {\n        cVar1 = fcn.00407e08();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00407e08();\n            if (cVar1 == '\\0') {\n                uVar2 = fcn.00408110();\n            }\n            else {\n                uVar2 = 0xffffffff;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = fcn.00413988();\n    }\n    return uVar2;\n}\n",
        "token_count": 214
    },
    "00413aa8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00413aa8(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint8_t uVar5;\n    \n    pcVar1 = **param_2;\n    uVar5 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar5 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[1];\n    if (*(param_2 + 7) < 0xfe) {\n        uVar3 = (*pcVar2)();\n    }\n    else if (*(param_2 + 7) == 0xff) {\n        puVar4 = (pcVar2 & 0xffffff) + in_EAX;\n        uVar3 = in_EAX & 0xffffff00 | *puVar4;\n        if ((1 < uVar5) && (uVar3 = in_EAX & 0xffff0000 | *puVar4,  3 < uVar5)) {\n            uVar3 = *puVar4;\n        }\n    }\n    else {\n        uVar3 = (**(pcVar2 + *in_EAX))();\n    }\n    if (uVar5 < 4) {\n        if (uVar5 < 2) {\n            uVar3 = uVar3;\n            if (uVar5 != 0) {\n                return uVar3 & 0xff;\n            }\n        }\n        else {\n            uVar3 = uVar3;\n            if (uVar5 != 2) {\n                uVar3 = uVar3 & 0xffff;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 398
    },
    "00417674": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417674(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 4))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "00417694": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417694(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 8))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "0041d04c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d04c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 4))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "0041d06c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d06c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 8))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "00415c10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415c10(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    if (in_EDX == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00415bb0();\n    }\n    if (in_ECX == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00415bb0();\n    }\n    if ((iVar1 != 0) && (iVar2 != 0)) {\n        fcn.00403464();\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "00415c80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00415c80(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403220();\n    uVar1 = fcn.00403220();\n    *(in_EAX + 4) = uVar1;\n    uVar1 = fcn.00403220();\n    *(in_EAX + 8) = uVar1;\n    uVar1 = fcn.00403220();\n    *(in_EAX + 0xc) = uVar1;\n    fcn.00416d68();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 251
    },
    "00415ec0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00415ec0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0xc) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.00416ec4();\n            cVar1 = fcn.00415ea0();\n            if (cVar1 != '\\0') {\n                fcn.00416db4();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.00416ec4();\n            cVar1 = fcn.00415ea0();\n            if (cVar1 != '\\0') {\n                fcn.00416db4();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    iVar2 = (**(**(in_EAX + 8) + 0x14))();\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        do {\n            (**(**(in_EAX + 8) + 0x18))();\n            cVar1 = fcn.00415ea0();\n            if (cVar1 != '\\0') {\n                (**(**(in_EAX + 8) + 0x48))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "004160c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004160c4(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00416ec4();\n            if (*(iVar1 + 0x10) != '\\0') {\n                iVar3 = fcn.00415d3c();\n            }\n        } while ((iVar3 == 0) && (iVar2 = iVar2 + -1,  iVar2 != 0));\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 176
    },
    "00416198": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00416198(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00416080();\n    if (iVar2 == 0) {\n        fcn.00416108(&stack0xfffffffc);\n    }\n    fcn.00415ba4();\n    var_18h = *(*(in_EAX + 4) + 8);\n    if (-1 < var_18h + -1) {\n        do {\n            iVar3 = fcn.00416ec4();\n            if ((iVar3 != iVar2) && (iVar3 = *(*(iVar3 + 4) + 8) + -1,  -1 < iVar3)) {\n                do {\n                    fcn.00416ec4();\n                    cVar1 = fcn.00403464();\n                    if ((cVar1 != '\\0') && (iVar4 = fcn.00416080(),  iVar4 == iVar2)) {\n                        fcn.00416db4();\n                        fcn.00416d68();\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    return;\n}\n",
        "token_count": 348
    },
    "00416324": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00416324(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            iVar1 = fcn.00416ec4();\n            fcn.00415ec0();\n            if (*(*(iVar1 + 0xc) + 8) == 0) {\n                fcn.00403250();\n                fcn.00416db4();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00416374": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416374(uint arg_8h)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    char in_DL;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (in_DL != '\\0') {\n        puStack48 = 0x416389;\n        in_EAX = fcn.0040355c();\n    }\n    puStack48 = 0x41639c;\n    fcn.00403220();\n    puStack48 = 0x4163a8;\n    uVar3 = fcn.00403220();\n    *(in_EAX + 4) = uVar3;\n    puStack48 = 0x4163b8;\n    fcn.00416260();\n    uStack52 = 0x416473;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar5 = *(*(*0x470860 + 4) + 8);\n    puStack48 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar5 + -1) {\n        do {\n            puStack48 = puVar1;\n            fcn.00416ec4();\n            cVar2 = fcn.00415d9c();\n            if (cVar2 != '\\0') {\n                fcn.00416d68();\n            }\n            iVar5 = iVar5 + -1;\n            puVar1 = puStack48;\n        } while (iVar5 != 0);\n    }\n    if ((arg_8h != '\\0') && (iVar5 = *(*(*0x470860 + 4) + 8),  -1 < iVar5 + -1)) {\n        do {\n            iVar4 = fcn.00416ec4();\n            if (*(iVar4 + 0x10) != '\\0') {\n                fcn.00416d68();\n            }\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x41647a;\n    uStack52 = 0x416472;\n    fcn.00416318();\n    return;\n}\n",
        "token_count": 542
    },
    "004164d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004164d0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4164ed;\n    fcn.00416260();\n    uStack32 = 0x416547;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00416ec4();\n            iVar1 = fcn.00415d3c();\n            if (iVar1 != 0) {\n                fcn.00403a70();\n                return iVar1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41654e;\n    uStack32 = 0x416546;\n    iVar2 = fcn.00416318();\n    return iVar2;\n}\n",
        "token_count": 293
    },
    "004168b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004168b8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4168d0;\n    iVar1 = fcn.00417230();\n    uStack28 = 0x416922;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack24 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00416ec4();\n            if (in_EAX == *(iVar2 + 4)) {\n                uVar3 = *(iVar2 + 8);\n                fcn.00403a70();\n                return uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x416929;\n    uStack28 = 0x416921;\n    uVar3 = fcn.00417294();\n    return uVar3;\n}\n",
        "token_count": 299
    },
    "004169b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004169b8(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x470864 == 0) {\n        *0x470864 = fcn.00403220();\n    }\n    iVar1 = fcn.00416f20();\n    if (iVar1 < 0) {\n        fcn.00416d68();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "004169f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004169f8(void)\n\n{\n    if (*0x470864 != 0) {\n        fcn.00417008();\n    }\n    return;\n}\n",
        "token_count": 38
    },
    "00416a10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00416a10(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    if ((*0x470864 != 0) && (iVar3 = *(*0x470864 + 8) + -1,  -1 < iVar3)) {\n        do {\n            pcVar2 = fcn.00416ec4();\n            iVar1 = (*pcVar2)();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 150
    },
    "00416a50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00416a50(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x470850 != NULL) {\n        uVar1 = (**0x470850)();\n        return uVar1;\n    }\n    uVar1 = fcn.00416a10();\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 85
    },
    "00416b80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00416b80(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.00405f78();\n    fcn.00403250();\n    iVar1 = fcn.00405f78();\n    iVar1 = *(iVar1 + 0xc);\n    uVar2 = fcn.00416fac();\n    iVar3 = fcn.00405f78();\n    *(iVar3 + 8) = uVar2;\n    fcn.00416db4();\n    if (*(iVar1 + 8) == 0) {\n        iVar1 = fcn.00405f78();\n        *(iVar1 + 0xc) = 0;\n        fcn.00403250();\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "00416c84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416c84(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    char var_ah;\n    uchar var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    puStack20 = 0x416c9a;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    (**(**0x47084c + 0x14))();\n    uStack24 = 0x416d32;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    var_ah = *0x416d44 == (*(var_4h + 0x1c) & *0x416d40);\n    puStack20 = &stack0xfffffffc;\n    if (var_ah) {\n        puStack32 = 0x416ccf;\n        puStack20 = &stack0xfffffffc;\n        fcn.00416af8();\n    }\n    uStack36 = 0x416d13;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00403198();\n    var_9h = fcn.00416bdc(arg_8h);\n    if (var_ah != '\\0') {\n        fcn.00416b50();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x416d1a;\n    if (var_ah != '\\0') {\n        uStack36 = 0x416d12;\n        fcn.00416b80();\n    }\n    return;\n}\n",
        "token_count": 448
    },
    "004172f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004172f4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (param_2 < 0) {\n            fcn.004172d0(param_1);\n        }\n        iVar1 = param_2 + 0x1f;\n        if (iVar1 < 0) {\n            iVar1 = param_2 + 0x3e;\n        }\n        iVar2 = (iVar1 >> 5) << 2;\n        iVar1 = *(in_EAX + 4) + 0x1f;\n        if (iVar1 < 0) {\n            iVar1 = *(in_EAX + 4) + 0x3e;\n        }\n        iVar1 = (iVar1 >> 5) << 2;\n        if (iVar1 != iVar2) {\n            iVar3 = 0;\n            if (iVar2 != 0) {\n                iVar3 = fcn.004026cc();\n                fcn.00402c5c();\n            }\n            if (iVar1 != 0) {\n                if (iVar3 != 0) {\n                    fcn.004172e8();\n                    fcn.004028c8();\n                }\n                fcn.004026ec();\n            }\n            *(in_EAX + 8) = iVar3;\n        }\n        *(in_EAX + 4) = param_2;\n    }\n    return;\n}\n",
        "token_count": 350
    },
    "00417398": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417398(char param_1, uint32_t param_2)\n\n{\n    uint8_t *puVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) <= param_2) {\n        if (param_2 < 0) {\n            fcn.0040b620();\n            fcn.004039c4();\n            return;\n        }\n        fcn.004172f4();\n    }\n    if (param_1 != '\\0') {\n        puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n        *puVar1 = *puVar1 | '\\x01' << (param_2 & 7);\n        return;\n    }\n    puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n    *puVar1 = *puVar1 & ~('\\x01' << (param_2 & 7));\n    return;\n}\n",
        "token_count": 215
    },
    "00417570": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004175d9)\n\nvoid fcn.00417570(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x417605;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.004031a0();\n    fcn.004041ec();\n    iVar1 = fcn.0040344c();\n    if (iVar1 != 0) {\n        fcn.0040344c();\n        fcn.0040344c();\n    }\n    *in_FS_OFFSET = in_stack_fffffed4;\n    fcn.00403f88(0x41760c);\n    return;\n}\n",
        "token_count": 218
    },
    "004176fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004176fc(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (0 < *(in_EAX[2] + 8)) {\n        puStack16 = 0x417718;\n        (**(*in_EAX + 0x20))();\n        uStack20 = 0x417756;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        while (0 < *(in_EAX[2] + 8)) {\n            fcn.00416fac();\n            fcn.00403250();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x41775d;\n        uStack20 = 0x417755;\n        (**(*in_EAX + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "0041792c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041792c(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[2] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    in_EAX[2] = in_EAX[2] + 1;\n    return;\n}\n",
        "token_count": 73
    },
    "004179e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004179e8(void)\n\n{\n    int32_t *in_EAX;\n    \n    in_EAX[2] = in_EAX[2] + -1;\n    if (in_EAX[2] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "004182bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004182bc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != 0) {\n        (**(**(in_EAX + 0xc) + 0x10))();\n    }\n    fcn.00405860();\n    if (*(in_EAX + 0xc) != 0) {\n        (**(**(in_EAX + 0xc) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00418340": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418340(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4183f4;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x418367;\n    fcn.0041792c();\n    uStack36 = 0x4183d7;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    (**(*in_EAX + 0x44))();\n    if (param_2 != NULL) {\n        while (*param_2 != '\\0') {\n            for (; ((cVar1 = *param_2,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r')); param_2 = param_2 + 1) {\n            }\n            fcn.00404078();\n            (**(*in_EAX + 0x38))();\n            if (*param_2 == '\\r') {\n                param_2 = param_2 + 1;\n            }\n            if (*param_2 == '\\n') {\n                param_2 = param_2 + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4183de;\n    uStack36 = 0x4183d6;\n    fcn.004179e8();\n    return;\n}\n",
        "token_count": 421
    },
    "00418854": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418854(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    if (*(in_EAX + 7) != '\\0') {\n        fcn.00417ae0();\n    }\n    if ((in_EDX < 0) || (in_EAX[5] < in_EDX)) {\n        fcn.00417ae0();\n    }\n    (**(*in_EAX + 0x88))(arg_8h);\n    return;\n}\n",
        "token_count": 117
    },
    "00418bb4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418bb4(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *extraout_ECX;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x00418bcc:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x00418bf6;\n            }\n            else if (arg_ch < 1) goto code_r0x00418bf6;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x00418bcc;\n    fcn.0040b620();\n    fcn.004039c4();\n    in_EAX = extraout_ECX;\ncode_r0x00418bf6:\n    (**(*in_EAX + 4))();\n    return;\n}\n",
        "token_count": 209
    },
    "00418c54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418c54(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t var_20h;\n    int32_t var_1ah;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t *var_4h;\n    \n    var_14h = &var_20h;\n    var_10h = *(*in_EAX + 0x18);\n    var_4h = in_EAX;\n    var_20h = fcn.00403198();\n    while ((var_20h != 0 && (var_20h != *0x415090))) {\n        var_20h = fcn.004031dc();\n    }\n    if (var_20h == 0) {\n        fcn.00418c08(&stack0xfffffffc);\n    }\n    unique0x00007a00 = *(var_20h + 0x18);\n    if (var_10h == unique0x00007a00) {\n        fcn.00418c08(&stack0xfffffffc);\n    }\n    (**(*var_4h + 0x18))(param_2, param_2 >> 0x1f);\n    return;\n}\n",
        "token_count": 286
    },
    "00418cd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.00418cd8(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x00418cf7:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x00418d21;\n            }\n            else if (arg_ch < 1) goto code_r0x00418d21;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x00418cf7;\n    fcn.0040b620();\n    fcn.004039c4();\ncode_r0x00418d21:\n    iVar1 = (**(*in_EAX + 0x14))();\n    return iVar1;\n}\n",
        "token_count": 221
    },
    "00418db8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418db8(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_EDX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    int64_t iVar2;\n    uint uStackY52;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = CONCAT44(arg_ch, arg_8h);\n    if ((arg_ch == 0) && (iVar2 = CONCAT44(arg_ch, arg_8h),  arg_8h == 0)) {\n        uStackY52 = 0x418ddd;\n        fcn.00418b3c(0, 0);\n        uStackY52 = 0x418de3;\n        iVar2 = (***in_EDX)();\n    }\n    arg_ch = iVar2 >> 0x20;\n    arg_8h = iVar2;\n    if (arg_ch == 0) {\n        if (arg_8h < 0xf001) {\ncode_r0x00418e11:\n            var_14h = arg_8h;\n            goto code_r0x00418e17;\n        }\n    }\n    else if (iVar2 < 0x100000000) goto code_r0x00418e11;\n    var_14h = 0xf000;\ncode_r0x00418e17:\n    fcn.004026cc();\n    uStackY52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    do {\n        arg_ch = iVar2 >> 0x20;\n        arg_8h = iVar2;\n        if (iVar2 == 0) {\n            *in_FS_OFFSET = uStackY52;\n            fcn.004026ec();\n            return;\n        }\n        uVar1 = var_14h;\n        if (var_14h >> 0x1f == arg_ch) {\n            if (arg_8h <= var_14h) {\ncode_r0x00418e49:\n                uVar1 = arg_8h;\n            }\n        }\n        else if (arg_ch <= var_14h >> 0x1f) goto code_r0x00418e49;\n        fcn.00418d48();\n        fcn.00418d80();\n        iVar2 = iVar2 - uVar1;\n    } while( true );\n}\n",
        "token_count": 540
    },
    "00419014": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00419014(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa8;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack72 = 0x419037;\n        in_EAX = fcn.0040355c();\n        in_DL = extraout_DL;\n    }\n    uStack76 = 0x41913d;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    var_1h._0_1_ = in_DL;\n    if (arg_ch == -1) {\n        puStack72 = &fcn.00419014::var_1h + 1;\n        fcn.004083d4();\n        fcn.00418f0c();\n        if (*(in_EAX + 4) < 0) {\n            fcn.0040852c();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError();\n            fcn.0040ad50();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            in_stack_ffffffa8 = 1;\n            fcn.0040b65c(1, &fcn.00419014::var_14h);\n            fcn.004039c4();\n        }\n    }\n    else {\n        puStack72 = &fcn.00419014::var_1h + 1;\n        fcn.00408358();\n        fcn.00418f0c();\n        if (*(in_EAX + 4) < 0) {\n            fcn.0040852c();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError();\n            fcn.0040ad50();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            in_stack_ffffffa8 = 1;\n            fcn.0040b65c(1, &fcn.00419014::var_14h);\n            fcn.004039c4();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffa8;\n    uStack80 = 0x419144;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 652
    },
    "004196d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.004196d4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    \n    for (pcVar2 = *(in_EAX + 0x14); (*pcVar2 != '\\0' && (*pcVar2 != '.')); pcVar2 = pcVar2 + 1) {\n    }\n    cVar1 = *pcVar2;\n    if (cVar1 != '\\0') {\n        fcn.00404078();\n        fcn.004044e8();\n    }\n    return cVar1 != '\\0';\n}\n",
        "token_count": 131
    },
    "004197b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004197b0(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x419856;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_2 != NULL) {\n        while (*param_2 != '\\0') {\n            for (; (*param_2 != '\\0' && (1 < *param_2 - 0x2dU)); param_2 = param_2 + 1) {\n            }\n            fcn.00404078();\n            iVar2 = fcn.0041cd84();\n            if ((iVar2 == 0) && (cVar1 = fcn.00407e08(),  cVar1 != '\\0')) {\n                iVar2 = in_EAX;\n            }\n            if (iVar2 == 0) break;\n            if (*param_2 == '.') {\n                param_2 = param_2 + 1;\n            }\n            if (*param_2 == '-') {\n                param_2 = param_2 + 1;\n            }\n            in_EAX = iVar2;\n            if (*param_2 == '>') {\n                param_2 = param_2 + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41985d;\n    uStack32 = 0x419855;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 392
    },
    "004198f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004198f8(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x41990b;\n    (**(**0x47084c + 0x14))();\n    uStack36 = 0x419a91;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x419923;\n    puStack32 = &stack0xfffffffc;\n    iVar1 = fcn.00417230();\n    uStack48 = 0x419a72;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    if (*(iVar1 + 8) < 1) {\n        *in_FS_OFFSET = uStack52;\n        puStack44 = 0x419a79;\n        uStack48 = 0x419a71;\n        fcn.00417294();\n        return;\n    }\n    puStack56 = 0x419949;\n    puStack44 = &stack0xfffffffc;\n    fcn.00403220();\n    uStack60 = 0x419a53;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = 0x419966;\n    puStack56 = &stack0xfffffffc;\n    fcn.00403220();\n    uStack72 = 0x419a01;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar5 = 0;\n    puStack68 = &stack0xfffffffc;\n    do {\n        while( true ) {\n            if (*(iVar1 + 8) <= iVar5) {\n                *in_FS_OFFSET = uStack76;\n                puStack68 = 0x419a08;\n                uStack72 = 0x419a00;\n                fcn.00403250();\n                return;\n            }\n            puVar2 = fcn.00416ec4();\n            iVar3 = fcn.00416a10();\n            if (iVar3 == 0) break;\ncode_r0x004199a6:\n            if (iVar3 != 0) {\n                fcn.004197b0();\n                (***puVar2)();\n            }\n            fcn.00419878(&stack0xfffffffc);\n            fcn.00416db4();\n            fcn.00403250();\n        }\n        iVar4 = fcn.00413aa8();\n        if (iVar4 != 0) goto code_r0x004199a6;\n        fcn.004198b0(&stack0xfffffffc);\n        iVar5 = iVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 725
    },
    "00419aa0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419aa0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x470868 == 0) {\n        return;\n    }\n    puStack28 = 0x419ac6;\n    iVar2 = fcn.00417230();\n    uStack32 = 0x419b3b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(iVar2 + 8) + -1;\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            iVar3 = fcn.00416ec4();\n            if ((in_EAX == 0) || (*(iVar3 + 8) == in_EAX)) {\n                if (param_2 != 0) {\n                    cVar1 = fcn.00407e08();\n                    if (cVar1 == '\\0') goto code_r0x00419b1d;\n                }\n                fcn.00416db4();\n                fcn.00403250();\n            }\ncode_r0x00419b1d:\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x419b42;\n    uStack32 = 0x419b3a;\n    fcn.00417294();\n    return;\n}\n",
        "token_count": 387
    },
    "00419b4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419b4c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0x470868 != 0) {\n        puStack24 = 0x419b69;\n        iVar1 = fcn.00417230();\n        uStack28 = 0x419bc3;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack24 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.00416ec4();\n                if (*(iVar2 + 4) == in_EAX) {\n                    fcn.00416db4();\n                    fcn.00403250();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x419bca;\n        uStack28 = 0x419bc2;\n        fcn.00417294();\n        return;\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "00419c98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419c98(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00407e08();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        (*arg_10h)();\n        fcn.00403f88();\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00419ccc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419ccc(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x419ce5;\n    cVar1 = fcn.00407e08();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        puStack24 = 0x419d00;\n        cVar1 = fcn.0041bb4c();\n        if (cVar1 != '\\n') {\n            *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n            puStack24 = 0x419d12;\n            fcn.0041bc5c();\n            *(in_EAX + 0x78) = 1;\n            puStack24 = 0x419d1e;\n            fcn.00419be8();\n        }\n        puStack24 = 0x419d2a;\n        piVar2 = fcn.00403220();\n        uStack28 = 0x419d8d;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.0041a110();\n        (**(*piVar2 + 4))();\n        fcn.0041a110();\n        *(in_EAX + 0x78) = 1;\n        (*arg_10h)();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x419d94;\n        uStack28 = 0x419d8c;\n        fcn.00403250();\n        return;\n    }\n    return;\n}\n",
        "token_count": 455
    },
    "00419e44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419e44(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x419e56;\n    iVar1 = fcn.00417230();\n    uStack24 = 0x419eb4;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00416ec4();\n            if ((*(iVar2 + 4) == *(in_EAX + 4)) && (*(iVar2 + 0xc) == *(in_EAX + 0xc))) {\n                fcn.00403250();\n                fcn.00416db4();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x419ebb;\n    uStack24 = 0x419eb3;\n    fcn.00417294();\n    return;\n}\n",
        "token_count": 294
    },
    "0041a388": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nvoid __cdecl fcn.0041a388(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint16_t in_AX;\n    int32_t iVar2;\n    char in_DL;\n    int32_t iVar3;\n    uint var_3h;\n    \n    iVar2 = fcn.00404fd4();\n    if (-1 < iVar2 + -1) {\n        iVar3 = 0;\n        do {\n            if (in_DL == '\\0') {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = ~in_AX & *(iVar1 + 0x1c);\n            }\n            else {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = *(iVar1 + 0x1c) | in_AX;\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "0041a470": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a470(int32_t arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41a556;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x41a495;\n    iVar2 = fcn.0041bfe0();\n    *(arg_8h + -0x14) = 0;\n    if (*(*(arg_8h + -8) + 0x6a) != 0) {\n        puStack32 = arg_8h + -0x14;\n        uStack36 = 0x41a4c7;\n        (**(*(arg_8h + -8) + 0x68))();\n    }\n    if (*(arg_8h + -0x14) == 0) {\n        puStack32 = 0x41a4d5;\n        uVar3 = (**(iVar2 + -0xc))();\n        *(arg_8h + -0x14) = uVar3;\n        if ((*(arg_8h + -9) & 4) != 0) {\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 1;\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 0x200;\n        }\n        uStack36 = 0x41a52a;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        (**(**(arg_8h + -0x14) + 0x2c))();\n        *in_FS_OFFSET = uStack40;\n    }\n    puVar1 = *(arg_8h + -0x14) + 0x1c;\n    *puVar1 = *puVar1 | 1;\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 543
    },
    "0041a900": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041a900(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) == 0) {\n        puStack16 = 0x41a91f;\n        uVar1 = fcn.00403220();\n        *(in_EAX + 0x30) = uVar1;\n        uStack20 = 0x41a95b;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        fcn.0041a970();\n        fcn.00419ec0();\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x41a96c;\n        uStack20 = 0x41a95a;\n        fcn.0041a004();\n        return;\n    }\n    puStack16 = 0x41a96c;\n    fcn.0041a970();\n    return;\n}\n",
        "token_count": 259
    },
    "0041ad5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041ad5c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    int32_t var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    puStack304 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack308 = 0x41ae4d;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack312;\n    fcn.00403f88();\n    cVar1 = fcn.004033dc();\n    if (cVar1 != '\\0') {\n        fcn.00404020();\n    }\n    if (var_4h == 0) {\n        fcn.004031a0();\n        fcn.004041ec();\n    }\n    var_124h = var_4h;\n    var_120h._0_1_ = 0xb;\n    var_11ch = **0x46f890;\n    var_118h._0_1_ = 0xb;\n    var_114h = *(arg_8h + -8);\n    var_110h._0_1_ = 0xb;\n    var_10ch = *(in_EAX + 4);\n    var_108h._0_1_ = 0xb;\n    uVar2 = 3;\n    fcn.0040b65c(3, &var_124h);\n    fcn.004039c4();\n    *in_FS_OFFSET = uVar2;\n    uStack312 = 0x41ae54;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 462
    },
    "0041ae78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ae78(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack72;\n    uint uStack68;\n    uchar *puStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack52 = &stack0xfffffffc;\n    uStack44 = 0x41b048;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack56 = 0x41affd;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack64 = 0x41aeb3;\n    fcn.0041b970();\n    uStack68 = 0x41afd6;\n    iStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    iVar4 = 1;\n    puStack64 = &stack0xfffffffc;\n    iVar2 = fcn.00404248();\n    *(in_EAX + 0x78) = 1;\n    var_10h = param_2;\n    while( true ) {\n        for (; (iVar4 <= iVar2 && (*(iVar4 + -1) != '.')); iVar4 = iVar4 + 1) {\n        }\n        iStack72 = in_EAX + 0x70;\n        fcn.004044a8();\n        if (iVar2 < iVar4) break;\n        fcn.00403478();\n        puVar3 = fcn.00413a38();\n        if (puVar3 == NULL) {\n            fcn.0041a0fc();\n        }\n        var_14h = NULL;\n        if (***puVar3 == '\\a') {\n            var_14h = fcn.00413aa8();\n        }\n        cVar1 = fcn.004033dc();\n        if (cVar1 == '\\0') {\n            fcn.0041ae5c(&stack0xfffffffc);\n        }\n        var_10h = var_14h;\n        iVar4 = iVar4 + 1;\n    }\n    fcn.00403478();\n    iVar2 = fcn.00413a38();\n    if (iVar2 == 0) {\n        *(in_EAX + 0x78) = 0;\n        (**(*var_10h + 4))();\n        *(in_EAX + 0x78) = 1;\n        if (*(in_EAX + 0x70) != 0) {\n            fcn.0041a0fc();\n        }\n    }\n    else {\n        fcn.0041b1fc();\n    }\n    *in_FS_OFFSET = iStack72;\n    *in_FS_OFFSET = iStack60;\n    *in_FS_OFFSET = iStack48;\n    puStack40 = 0x41b04f;\n    uStack44 = 0x41b047;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 775
    },
    "0041b1fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __fastcall fcn.0041b1fc(uint param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uint *in_FS_OFFSET;\n    unkbyte10 Var4;\n    ulong uVar5;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 5;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_ch = NULL;\n    var_18h = 0x41b4f7;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0041b1fc::var_1ch;\n    puVar1 = &stack0xfffffffc;\n    var_10h = unaff_EBX;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (*0x8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**_pe_dos_header == '\\a') {\n            fcn.00413aa8();\n            cVar2 = fcn.004033dc();\n            puVar1 = var_14h;\n            if (cVar2 != '\\0') {\n                iVar3 = fcn.00413aa8();\n                puVar1 = var_14h;\n                if ((*(iVar3 + 0x24) & 4) != 0) goto code_r0x0041b271;\n            }\n        }\n        var_14h = puVar1;\n        fcn.00419bd0();\n        puVar1 = var_14h;\n    }\ncode_r0x0041b271:\n    var_14h = puVar1;\n    if (***var_ch < 0x11) {\n    // switch table (17 cases) at 0x41b28c\n        switch(*(***var_ch * 4 + 0x41b28c)) {\n        case 0x41b2d0:\n            cVar2 = fcn.0041a0ec();\n            if (cVar2 == '\\a') {\n                fcn.0041ab5c();\n                fcn.0041b058();\n            }\n            else {\n                fcn.0041ac5c();\n                fcn.00413b1c();\n            }\n            break;\n        case 0x41b314:\n            fcn.0041a1ac();\n            fcn.00413b1c();\n            break;\n        case 0x41b330:\n            fcn.0041ab5c();\n            fcn.004139d4();\n            fcn.00413b1c();\n            break;\n        case 0x41b357:\n            Var4 = fcn.0041aa40();\n            var_28h = Var4;\n            var_24h = Var4 >> 0x20;\n            fcn.00413dac(var_28h, var_24h, CONCAT22(0x41, Var4 >> 0x40));\n            break;\n        case 0x41b376:\n            fcn.0041b9ac();\n            fcn.00413cac();\n            break;\n        case 0x41b394:\n            fcn.0041ba68();\n            fcn.00413cd8();\n            break;\n        case 0x41b3b2:\n            fcn.0041b890();\n            fcn.00413b1c();\n            break;\n        case 0x41b3ce:\n            cVar2 = fcn.0041a0ec();\n            if (cVar2 == '\\r') {\n                fcn.0041bb4c();\n                fcn.00413b1c();\n            }\n            else if (cVar2 == '\\x0e') {\n                fcn.0041bb4c();\n                fcn.00413aa8();\n                fcn.0041a204();\n            }\n            else {\n                fcn.0041ab5c();\n                var_24h = 0x41b436;\n                fcn.0041b0a0(&stack0xfffffffc);\n            }\n            break;\n        case 0x41b43c:\n            cVar2 = fcn.0041a0ec();\n            if (cVar2 == '\\r') {\n                fcn.0041bb4c();\n                fcn.00413ff8();\n            }\n            else {\n                fcn.0041ab5c();\n                var_14h = (**(*var_4h + 0x18))();\n                var_10h = var_4h[6];\n                if (var_14h != NULL) {\n                    fcn.00413ff8();\n                }\n            }\n            break;\n        case 0x41b4a0:\n            var_24h = 0x41b4a6;\n            fcn.0041b0e0(&stack0xfffffffc);\n            break;\n        case 0x41b4a9:\n            uVar5 = fcn.0041acc8();\n            var_24h = uVar5;\n            fcn.00414030(var_24h, uVar5 >> 0x20);\n            break;\n        case 0x41b4c0:\n            var_24h = 0x41b4c6;\n            fcn.0041b13c(&stack0xfffffffc);\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x41b4fe;\n    fcn.00403fac();\n    fcn.00404668();\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 1403
    },
    "0041b564": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b564(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint uStackY128;\n    uint uStackY124;\n    uchar *puStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    uchar *puStackY108;\n    uint arg_8h;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    puStack92 = &stack0xfffffffc;\n    uStack72 = 0x41b87f;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x41b59d;\n    fcn.0041b94c();\n    puStack80 = 0x41b5ac;\n    (**(**0x47084c + 0x14))();\n    uStack84 = 0x41b85d;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 0x41b81e;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack80 = &stack0xfffffffc;\n    (**(*in_EAX + 0x24))();\n    if (param_2 == NULL) {\n        fcn.0041b970();\n        iVar1 = fcn.00416624();\n        var_ch = (**(iVar1 + 0x2c))();\n        fcn.0041b970();\n        (**(*var_ch + 0x18))();\n    }\n    else {\n        fcn.0041b970();\n        var_ch = param_2;\n        if ((*(param_2 + 7) & 0x10) == 0) {\n            *(param_2 + 7) = *(param_2 + 7) | 1;\n            *(param_2 + 7) = *(param_2 + 7) | 2;\n            fcn.0041b970();\n            fcn.0041b504();\n            (**(*param_2 + 0x18))();\n        }\n        else {\n            fcn.0041b970();\n        }\n    }\n    in_EAX[6] = var_ch;\n    arg_8h = 1;\n    puStackY108 = 0x41b67c;\n    fcn.00403198();\n    puStackY108 = 0x41b68a;\n    iVar1 = fcn.00416374(arg_8h);\n    in_EAX[0x1d] = iVar1;\n    uStackY112 = 0x41b7c3;\n    uStackY116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    in_EAX[7] = var_ch;\n    puStackY120 = 0x41b6ac;\n    puStackY108 = &stack0xfffffffc;\n    iVar1 = fcn.00405f78();\n    iVar1 = *(iVar1 + 8);\n    if (iVar1 == 0) {\n        puStackY120 = 0x41b6d2;\n        iVar2 = fcn.00403220();\n        in_EAX[0xd] = iVar2;\n    }\n    else {\n        in_EAX[0xd] = iVar1;\n    }\n    uStackY124 = 0x41b7a3;\n    uStackY128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    puStackY120 = &stack0xfffffffc;\n    iVar2 = fcn.00416f20();\n    if (iVar2 < 0) {\n        fcn.00416d68();\n    }\n    in_EAX[10] = in_EAX[6];\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 1;\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 2;\n    (**(*in_EAX[6] + 0x14))();\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) & 0xfffd;\n    if ((iVar1 == 0) && (iVar2 = *(in_EAX[0xd] + 8),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.00416ec4();\n            (**(*piVar3 + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStackY128;\n    puStackY120 = 0x41b7aa;\n    if (iVar1 == 0) {\n        uStackY124 = 0x41b79a;\n        fcn.00403250();\n    }\n    in_EAX[0xd] = 0;\n    return;\n}\n",
        "token_count": 1290
    },
    "0041b890": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041b8ef)\n// WARNING: Removing unreachable block (ram,0x0041b8fe)\n\nvoid fcn.0041b890(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x41b93a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x41b90d;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    cVar1 = fcn.0041bb4c();\n    if (cVar1 != '\\v') {\n        fcn.00419be8();\n    }\n    fcn.0041397c();\n    fcn.0041b970();\n    *in_FS_OFFSET = uStack48;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41b941;\n    uStack32 = 0x41b939;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 316
    },
    "0041bb60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041bb60(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStack20 = 0x41bb9c;\n    fcn.0041b970();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41bba3;\n    uStack20 = 0x41bb9b;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 151
    },
    "0041bee8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041bee8(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.00404020();\n    var_4h = 0;\n    if (*(in_EAX + 0x1c) != 0) {\n        var_4h = fcn.0041cd84();\n    }\n    if (var_4h == 0) {\n        if (*(in_EAX + 0x52) != 0) {\n            (**(in_EAX + 0x50))(&var_4h, param_1);\n        }\n        if (var_4h == 0) {\n            var_10h = var_8h;\n            var_ch._0_1_ = 0xb;\n            uVar1 = 0;\n            fcn.0040b65c(0, &var_10h);\n            fcn.004039c4();\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 311
    },
    "0041bfe0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0041bfe0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iStack12;\n    \n    iStack12 = fcn.0041a040();\n    if (((iStack12 == 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x1c) != *(in_EAX + 0x18))) {\n        iStack12 = fcn.0041a040();\n    }\n    if (*(in_EAX + 0x62) != 0) {\n        (**(in_EAX + 0x60))(&iStack12);\n    }\n    if (iStack12 != 0) {\n        cVar1 = fcn.00403464();\n        if (cVar1 != '\\0') goto code_r0x0041c04a;\n    }\n    fcn.00416564();\ncode_r0x0041c04a:\n    return CONCAT44(iStack12, iStack12);\n}\n",
        "token_count": 227
    },
    "0041c668": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041c668(void)\n\n{\n    sub.kernel32.dll_InitializeCriticalSection_1(0x47086c);\n    *0x470854 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0, 0x41c698);\n    if (*0x470854 == 0) {\n        fcn.0040c9a4();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0041c6dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041c6dc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStackY108;\n    uint uStackY104;\n    uchar *puStackY100;\n    uint uStackY96;\n    uint uStackY92;\n    uchar *puStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uchar *puStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint uStackY56;\n    uchar *puStackY52;\n    uint uStackY48;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    puStackY100 = &fcn.0041c6dc::var_1h + 1;\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 != **0x46fc20) {\n        var_14h = sub.kernel32.dll_GetCurrentThreadId_1();\n        var_10h._0_1_ = 0;\n        uStackY48 = 0x41c71a;\n        fcn.0040b65c(0, &fcn.0041c6dc::var_14h);\n        uStackY48 = 0x41c71f;\n        fcn.004039c4();\n    }\n    if (in_EAX < 1) {\n        uStackY48 = 0x41c731;\n        fcn.0041c6b4();\n    }\n    else {\n        uStackY48 = 0x41c72a;\n        fcn.0041c6c0();\n    }\n    var_ch = 0;\n    uStackY48 = 0x47086c;\n    puStackY52 = 0x41c740;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStackY56 = 0x41c86a;\n    uStackY60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uStackY64 = var_ch;\n    uStackY68 = 0x4643f8;\n    puStackY72 = 0x41c75c;\n    puStackY52 = &fcn.0041c6dc::var_1h + 1;\n    var_ch = sub.kernel32.dll_InterlockedExchange();\n    uStackY76 = 0x41c84b;\n    uStackY80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if ((var_ch == 0) || (*(var_ch + 8) < 1)) {\n        var_1h._0_1_ = '\\0';\n    }\n    else {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((var_1h != '\\0') && (0 < *(var_ch + 8))) {\n        uStackY84 = 0x41c79e;\n        puStackY72 = &fcn.0041c6dc::var_1h + 1;\n        var_8h = fcn.00416ec4();\n        uStackY84 = 0x41c7ab;\n        fcn.00416db4();\n        uStackY84 = 0x47086c;\n        puStackY88 = 0x41c7b5;\n        sub.kernel32.dll_LeaveCriticalSection_1();\n        uStackY92 = 0x41c815;\n        uStackY96 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa0;\n        uStackY104 = 0x41c7e6;\n        uStackY108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStackY88 = &fcn.0041c6dc::var_1h + 1;\n        (**(*var_8h + 8))();\n        *in_FS_OFFSET = uStackY108;\n        *in_FS_OFFSET = uStackY96;\n        puStackY88 = 0x41c81c;\n        uStackY92 = 0x47086c;\n        uStackY96 = 0x41c814;\n        sub.kernel32.dll_EnterCriticalSection_1();\n        return;\n    }\n    *in_FS_OFFSET = uStackY80;\n    puStackY72 = 0x41c852;\n    uStackY76 = 0x41c84a;\n    fcn.00403250();\n    return;\n}\n",
        "token_count": 1051
    },
    "0041c8c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041c8c8(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char extraout_DL;\n    \n    iVar1 = fcn.004035c4();\n    fcn.0041cb1c();\n    if (*(iVar1 + 0x14) != 0) {\n        while ((*(iVar1 + 0x14) != 0 && (0 < *(*(iVar1 + 0x14) + 8)))) {\n            piVar2 = fcn.00416ec4();\n            (**(*piVar2 + 0x10))();\n        }\n        fcn.0040cf00();\n    }\n    fcn.0041cac4();\n    if (*(iVar1 + 4) != 0) {\n        fcn.0041ca8c();\n    }\n    fcn.00417454();\n    if ('\\0' < extraout_DL) {\n        fcn.004035ac();\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "0041c94c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c94c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 4) == 0) || (*(in_EAX + 4) != *(param_2 + 4))) {\n        if (*(in_EAX + 0x14) == 0) {\n            uVar1 = fcn.00403220();\n            *(in_EAX + 0x14) = uVar1;\n        }\n        iVar2 = fcn.00416f20();\n        if (iVar2 < 0) {\n            fcn.00416d68();\n            fcn.0041c94c();\n        }\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x100;\n    return;\n}\n",
        "token_count": 207
    },
    "0041c9e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c9e0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        uVar1 = fcn.00403220();\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.00416d68();\n    *(param_2 + 4) = in_EAX;\n    return;\n}\n",
        "token_count": 115
    },
    "0041ca0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ca0c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 4) = 0;\n    fcn.00417008();\n    if (*(*(in_EAX + 0x10) + 8) == 0) {\n        fcn.00403250();\n        *(in_EAX + 0x10) = 0;\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0041cb58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041cb58(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x14) != 0) {\n        fcn.00417008();\n        if (*(*(in_EAX + 0x14) + 8) == 0) {\n            fcn.00403250();\n            *(in_EAX + 0x14) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0041ccec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041ccec(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        cVar1 = fcn.00407e08();\n        if ((cVar1 == '\\0') && (in_EAX == *(in_EDX + 4))) {\n            iVar2 = fcn.0041cd84();\n            if (iVar2 != 0) {\n                var_ch = arg_8h;\n                var_8h._0_1_ = 0xb;\n                fcn.0040b65c(0, &var_ch);\n                fcn.004039c4();\n            }\n        }\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 4) != 0)) {\n        (**(**(in_EAX + 4) + 0x20))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 269
    },
    "0041cd84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041cd84(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (((param_2 != 0) && (*(in_EAX + 0x10) != 0)) && (iVar3 = *(*(in_EAX + 0x10) + 8),  -1 < iVar3 + -1)) {\n        do {\n            uVar2 = fcn.00416ec4();\n            cVar1 = fcn.00407e08();\n            if (cVar1 != '\\0') goto code_r0x0041cdc9;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    uVar2 = 0;\ncode_r0x0041cdc9:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 209
    },
    "0041ce74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041ce74(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        fcn.00416e50();\n    }\n    fcn.00416ec4();\n    return;\n}\n",
        "token_count": 62
    },
    "0041cf04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cf04(char param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == '\\0') {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) & 0xffef;\n    }\n    else {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x10;\n    }\n    if ((param_1 != '\\0') && (iVar1 = fcn.0041cea0(),  -1 < iVar1 + -1)) {\n        do {\n            fcn.0041ce74();\n            fcn.0041cf04();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0041d00c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d00c(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        cVar1 = fcn.00403304();\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = (****(arg_8h + 0x20))(*(arg_8h + 0x20), arg_ch, arg_10h);\n    }\n    return uVar2;\n}\n",
        "token_count": 163
    },
    "0041d1c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041d1c8(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.004035c4();\n    fcn.0041c8c8();\n    if (*(iVar1 + 0x30) != 0) {\n        fcn.0041cb7c();\n    }\n    while (0 < *(*(iVar1 + 0x50) + 8)) {\n        fcn.00416fac();\n        fcn.0041d308();\n    }\n    fcn.0040cf00();\n    if ('\\0' < extraout_DL) {\n        fcn.004035ac();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0041d254": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0041d254(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x42) != 0) {\n        (**(in_EAX + 0x40))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 64
    },
    "0041d270": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0041d270(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x4a) != 0) {\n        (**(in_EAX + 0x48))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 65
    },
    "0041d3f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d3f4(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41d443;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0xc))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 229
    },
    "0041d45c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d45c(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41d4ab;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0x10))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 230
    },
    "0041d5ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041d5ac(int32_t arg_8h, int32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t *arg_18h, uint32_t *arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    puStack60 = 0x41d5bd;\n    fcn.004058bc();\n    uStack64 = 0x41d799;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_4h = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    uStack76 = 0x41d772;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if (arg_14h == 0) {\n        if (arg_10h < 0x100001) {\ncode_r0x0041d616:\n            var_ch = arg_10h;\n            goto code_r0x0041d61c;\n        }\n    }\n    else if (arg_14h < 1) goto code_r0x0041d616;\n    var_ch = 0x100000;\ncode_r0x0041d61c:\n    puStack84 = 0x41d624;\n    puStack60 = &stack0xfffffffc;\n    var_8h = fcn.004026cc();\n    uStack88 = 0x41d761;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    do {\n        if (arg_14h == 0) {\n            if (arg_10h == 0) {\ncode_r0x0041d721:\n                *in_FS_OFFSET = uStack92;\n                puStack84 = 0x41d768;\n                uStack88 = 0x41d736;\n                fcn.004026ec();\n                if (arg_1ch != NULL) {\n                    *arg_1ch = var_20h;\n                    arg_1ch[1] = var_1ch;\n                }\n                if (arg_18h != NULL) {\n                    *arg_18h = var_18h;\n                    arg_18h[1] = var_14h;\n                }\n                return;\n            }\n        }\n        else if (arg_14h < 1) goto code_r0x0041d721;\n        uVar1 = arg_10h;\n        if (arg_14h == 0) {\n            if (0x7fffffff < arg_10h) {\ncode_r0x0041d64d:\n                uVar1 = 0x7fffffff;\n            }\n        }\n        else if (0 < arg_14h) goto code_r0x0041d64d;\n        for (; 0 < uVar1; uVar1 = uVar1 - uVar2) {\n            uVar2 = (**(**(arg_8h + 0xc) + 0xc))();\n            if (uVar2 == 0) {\n                fcn.00403a70();\n                *in_FS_OFFSET = uStack92;\ncode_r0x0041d783:\n                *in_FS_OFFSET = uStack80;\n                puStack72 = 0x41d7a0;\n                uStack76 = 0x41d798;\n                fcn.00405848();\n                return;\n            }\n            bVar3 = CARRY4(var_18h, uVar2);\n            var_18h = var_18h + uVar2;\n            var_14h = var_14h + (uVar2 >> 0x1f) + bVar3;\n            var_28h = 0;\n            var_24h = 0;\n            var_4h = (**(*arg_ch + 0x10))(arg_ch, var_8h, uVar2, &fcn.0041d5ac::var_28h);\n            bVar3 = CARRY4(var_20h, var_28h);\n            var_20h = var_20h + var_28h;\n            var_1ch = var_1ch + var_24h + bVar3;\n            if ((var_4h == 0) && (uVar2 != var_28h)) {\n                var_4h = -0x7fffbffb;\n            }\n            if (var_4h != 0) {\n                fcn.00403a70();\n                *in_FS_OFFSET = uStack92;\n                goto code_r0x0041d783;\n            }\n            bVar3 = arg_10h < uVar2;\n            arg_10h = arg_10h - uVar2;\n            arg_14h = (arg_14h - (uVar2 >> 0x1f)) - bVar3;\n        }\n    } while( true );\n}\n",
        "token_count": 1281
    },
    "0041d90c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0041d90c(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    puVar1 = *0x470884;\n    if (*0x470888 == NULL) {\n        puVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0x1000, 0x1000, 0x40);\n        *puVar1 = *0x470884;\n        fcn.004028c8();\n        uVar2 = fcn.0041d904();\n        *(puVar1 + 6) = uVar2;\n        puVar3 = puVar1 + 10;\n        do {\n            puVar4 = puVar3;\n            *puVar4 = 0xe8;\n            uVar2 = fcn.0041d904();\n            *(puVar4 + 1) = uVar2;\n            *(puVar4 + 5) = *0x470888;\n            puVar3 = puVar4 + 0xd;\n            *0x470888 = puVar4;\n        } while ((puVar4 + 0xd) - puVar1 < 0xffc);\n    }\n    *0x470884 = puVar1;\n    puVar3 = *0x470888;\n    puVar1 = *0x470888 + 5;\n    *0x470888 = *(*0x470888 + 5);\n    *puVar1 = arg_8h;\n    *(puVar3 + 9) = arg_ch;\n    return puVar3;\n}\n",
        "token_count": 365
    },
    "0041d9c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d9c8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint lpWndClass;\n    code *var_24h;\n    \n    *0x464410 = *0x470668;\n    iVar1 = sub.user32.dll_GetClassInfoA(*0x470668, *0x464424, &lpWndClass);\n    if ((iVar1 == 0) || (var_24h != sub.user32.dll_DefWindowProcA)) {\n        if (iVar1 != 0) {\n            sub.user32.dll_UnregisterClassA(*0x464424, *0x470668);\n        }\n        sub.user32.dll_RegisterClassA(0x464400);\n    }\n    uVar2 = fcn.00406b64(0, *0x470668, 0, 0, 0, 0, 0, 0, 0x80000000);\n    if (arg_8h._2_2_ != 0) {\n        uVar3 = fcn.0041d90c(arg_8h, arg_ch);\n        sub.user32.dll_SetWindowLongA(uVar2, 0xfffffffc, uVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 290
    },
    "0041ec50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ec50(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x41ec6b;\n    iVar2 = fcn.0041ebc4();\n    puStack24 = 0x41ec75;\n    fcn.0041ec38();\n    uStack28 = 0x41ed24;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    for (var_8h = *(in_EAX + 4); var_8h != NULL; var_8h = *var_8h) {\n        if (iVar2 == *(var_8h + 3)) {\n            cVar1 = fcn.00407d94();\n            if (cVar1 != '\\0') break;\n        }\n    }\n    if (var_8h == NULL) {\n        var_8h = fcn.004026cc();\n        *var_8h = *(in_EAX + 4);\n        var_8h[1] = 0;\n        var_8h[2] = *param_2;\n        *(var_8h + 3) = iVar2;\n        fcn.004028c8();\n        *(in_EAX + 4) = var_8h;\n    }\n    var_8h[1] = var_8h[1] + 1;\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41ed2b;\n    uStack28 = 0x41ed23;\n    fcn.0041ec44();\n    return;\n}\n",
        "token_count": 432
    },
    "0041ed34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ed34(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *var_10h;\n    uchar var_9h;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    if (param_2 == NULL) {\n        return;\n    }\n    uStack24 = 0x41ed58;\n    var_10h = param_2;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.0041ec38();\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    var_10h[1] = var_10h[1] + -1;\n    var_9h = var_10h[1] == 0;\n    if (var_9h) {\n        puVar1 = *(var_4h + 4);\n        if (*(var_4h + 4) == var_8h) {\n            *(var_4h + 4) = *var_8h;\n        }\n        else {\n            do {\n                puVar2 = puVar1;\n                puVar1 = *puVar2;\n            } while (puVar1 != var_8h);\n            *puVar2 = *var_8h;\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    uStack24 = 0x41edc2;\n    uStack28 = 0x41edba;\n    fcn.0041ec44();\n    return;\n}\n",
        "token_count": 391
    },
    "0041eec8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041eec8(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x41eed9;\n    fcn.0041ec38();\n    uStack24 = 0x41ef27;\n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    for (puVar2 = *(in_EAX + 4); puVar2 != NULL; puVar2 = *puVar2) {\n        iStack28 = puVar2[2];\n        if ((iStack28 != 0) && (puVar2[5] < 0)) {\n            sub.gdi32.dll_DeleteObject();\n            puVar2[2] = 0;\n            iVar1 = iStack28;\n        }\n        iStack28 = iVar1;\n        iVar1 = iStack28;\n    }\n    *in_FS_OFFSET = iVar1;\n    puStack20 = 0x41ef2e;\n    uStack24 = 0x41ef26;\n    iStack28 = iVar1;\n    fcn.0041ec44();\n    return;\n}\n",
        "token_count": 306
    },
    "0041f450": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f450(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 10) != 0) {\n        (**(in_EAX + 8))();\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "0041fdf4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0041fdf4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack28 = 0x41fe13;\n        fcn.0041ec38();\n        uStack32 = 0x41fe7a;\n        iStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        if (*(var_4h + 8) == 0) {\n            var_14h = *(*(var_4h + 0x1c) * 2 + 0x464698);\n            var_10h = *(var_4h + 0x18);\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.0041f420();\n            puStack40 = &fcn.0041fdf4::var_14h;\n            uVar1 = sub.gdi32.dll_CreatePenIndirect();\n            *(var_4h + 8) = uVar1;\n        }\n        *in_FS_OFFSET = puStack40;\n        uStack32 = 0x41fe81;\n        iStack36 = 0x41fe79;\n        uVar1 = fcn.0041ec44();\n        return uVar1;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 399
    },
    "004200e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004200e0(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack24 = 0x420103;\n        fcn.0041ec38();\n        uStack28 = 0x4201ad;\n        puStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        if (*(var_4h + 8) == 0) {\n            if (*(var_4h + 0x18) == NULL) {\n                var_8h = 0;\n                uVar1 = *(var_4h + 0x1c);\n                if (uVar1 == 0) {\n                    var_10h = 0;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else if (uVar1 == 1) {\n                    var_10h = 1;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else {\n                    var_10h = 2;\n                    var_8h = (uVar1 & 0x7f) - 2;\n                    puStack24 = &stack0xfffffffc;\n                }\n            }\n            else {\n                var_10h = 3;\n                puStack24 = &stack0xfffffffc;\n                (**(**(var_4h + 0x18) + 0x6c))();\n                var_8h = (**(**(var_4h + 0x18) + 100))();\n            }\n            var_ch = fcn.0041f420();\n            puStack32 = &fcn.004200e0::var_10h;\n            uVar2 = sub.gdi32.dll_CreateBrushIndirect();\n            *(var_4h + 8) = uVar2;\n        }\n        *in_FS_OFFSET = puStack32;\n        puStack24 = 0x4201b4;\n        uStack28 = 0x4201ac;\n        uVar2 = fcn.0041ec44();\n        return uVar2;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 556
    },
    "004206e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.004206e8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_1h;\n    \n    uStack16 = 0x4708c4;\n    puStack20 = 0x4206f9;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack24 = 0x420734;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x50) == 0) {\n        puStack20 = &fcn.004206e8::var_1h + 1;\n        fcn.00420540();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42073b;\n    uStack24 = 0x4708c4;\n    uStack28 = 0x420733;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 255
    },
    "00420c48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420c48(char param_1, uint *param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff44;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint lpvObject;\n    uint var_30h;\n    uint var_2ch;\n    uint hdcDest;\n    int32_t var_18h;\n    int32_t hdc;\n    int32_t var_10h;\n    uint nWidth;\n    uint nHeight;\n    uint hgdiobj;\n    \n    nWidth = *param_2;\n    nHeight = param_2[1];\n    uStack72 = 0;\n    uStack76 = 0x420c64;\n    hgdiobj = in_EAX;\n    var_18h = sub.gdi32.dll_CreateCompatibleDC();\n    uStack76 = 0;\n    puStack80 = 0x420c6e;\n    hdcDest = sub.gdi32.dll_CreateCompatibleDC();\n    uStack84 = 0x420d96;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = &fcn.00420c48::lpvObject;\n    uStack96 = 0x18;\n    uStack100 = hgdiobj;\n    uStack104 = 0x420c8e;\n    puStack80 = &stack0xfffffffc;\n    sub.gdi32.dll_GetObjectA();\n    if (param_1 != '\\0') {\n        uStack104 = 0;\n        puStack108 = 0x1;\n        uStack112 = 1;\n        iStack116 = nHeight;\n        var_10h = sub.gdi32.dll_CreateBitmap(nWidth);\n        if (var_10h != 0) {\n            iVar1 = sub.gdi32.dll_SelectObject(var_18h, hgdiobj);\n            iVar2 = sub.gdi32.dll_SelectObject(hdcDest, var_10h);\n            sub.gdi32.dll_StretchBlt(hdcDest, 0, 0, nWidth, nHeight, var_18h, 0, 0, var_30h, var_2ch, 0xcc0020);\n            if (iVar1 != 0) {\n                in_stack_ffffff44 = var_18h;\n                sub.gdi32.dll_SelectObject(var_18h, iVar1);\n            }\n            if (iVar2 != 0) {\n                sub.gdi32.dll_SelectObject(hdcDest, iVar2);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffff44;\n        sub.gdi32.dll_DeleteDC(var_18h, 0x420d9d);\n        sub.gdi32.dll_DeleteDC(hdcDest);\n        return;\n    }\n    uStack104 = 0;\n    puStack108 = 0x420cb1;\n    hdc = sub.user32.dll_GetDC();\n    if (hdc == 0) {\n        puStack108 = 0x420cbf;\n        fcn.00420b90();\n    }\n    uStack112 = 0x420d05;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    iVar1 = hdc;\n    puStack108 = &stack0xfffffffc;\n    var_10h = sub.gdi32.dll_CreateCompatibleBitmap(hdc, nWidth, nHeight);\n    if (var_10h == 0) {\n        fcn.00420b90();\n    }\n    *in_FS_OFFSET = iVar1;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x420d0c);\n    return;\n}\n",
        "token_count": 883
    },
    "00420ddc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00420ddc(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h, \n            uint hdc, int32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    int32_t hpal;\n    uint var_20h;\n    uint crColor;\n    uint var_18h;\n    uint hgdiobj;\n    uint hdcDest;\n    uint nYOriginDest;\n    uint nXOriginDest;\n    \n    if (((**0x46fc18 == 2) && (arg_18h == arg_2ch)) && (arg_14h == arg_28h)) {\n        uStack56 = 1;\n        puStack60 = 0x1;\n        uStack64 = hdc;\n        uStack68 = 0x420e24;\n        sub.gdi32.dll_CreateCompatibleBitmap();\n        uStack68 = 0x420e29;\n        uStack68 = fcn.00420c38();\n        iStack72 = arg_10h;\n        puStack76 = 0x420e39;\n        uVar1 = sub.gdi32.dll_SelectObject();\n        uStack80 = 0x420eaf;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &stack0xfffffffc;\n        uVar2 = fcn.00406b1c();\n        uVar3 = uVar1;\n        sub.gdi32.dll_MaskBlt();\n        *in_FS_OFFSET = in_EAX;\n        uVar3 = sub.gdi32.dll_SelectObject\n                          (arg_10h, uVar1, 0x421063, arg_2ch, arg_28h, hdc, arg_20h, arg_1ch, uVar3, arg_ch, arg_8h, \n                           uVar2);\n        sub.gdi32.dll_DeleteObject(uVar3);\n        return;\n    }\n    uStack56 = 0;\n    puStack60 = 0x420ec2;\n    sub.gdi32.dll_CreateCompatibleDC();\n    puStack60 = 0x420ec7;\n    uVar3 = fcn.00420c38();\n    uStack64 = 0x42105c;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    iStack72 = arg_14h;\n    puStack76 = arg_18h;\n    uStack80 = hdc;\n    uStack84 = 0x420ee3;\n    puStack60 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack84 = 0x420ee8;\n    uVar1 = fcn.00420c38();\n    uStack84 = uVar1;\n    iVar4 = sub.gdi32.dll_SelectObject(uVar3);\n    iVar5 = sub.gdi32.dll_SelectPalette(hdc, *0x470890, 0);\n    sub.gdi32.dll_SelectPalette(hdc, iVar5, 0);\n    if (iVar5 == 0) {\n        hpal = sub.gdi32.dll_SelectPalette(uVar3, *0x470890, 0xffffffff);\n    }\n    else {\n        hpal = sub.gdi32.dll_SelectPalette(uVar3, iVar5, 0xffffffff);\n    }\n    sub.gdi32.dll_RealizePalette(uVar3);\n    sub.gdi32.dll_StretchBlt(uVar3, 0, 0, arg_18h, arg_14h, arg_10h, arg_ch, arg_8h, arg_18h, arg_14h, 0xcc0020);\n    sub.gdi32.dll_StretchBlt(uVar3, 0, 0, arg_18h, arg_14h, hdc, arg_20h, arg_1ch, arg_18h, arg_14h, 0x440328);\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    if (iVar4 != 0) {\n        sub.gdi32.dll_SelectObject(uVar3, iVar4);\n    }\n    sub.gdi32.dll_DeleteObject();\n    *in_FS_OFFSET = uVar1;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar3, hpal, 0, 0x421063);\n    }\n    sub.gdi32.dll_DeleteDC(uVar3);\n    return;\n}\n",
        "token_count": 1137
    },
    "00421290": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00421290(void)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffb8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint hdc;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if (*0x470890 != 0) {\n        uStack20 = 0;\n        puStack24 = 0x4212ad;\n        uVar1 = sub.user32.dll_GetDC();\n        uStack28 = 0x421316;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &fcn.00421290::var_1h + 1;\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar1, 0x68);\n        if (0xf < iVar2) {\n            sub.gdi32.dll_GetPaletteEntries(*0x470890, 0, 8, in_EAX + 4);\n            in_stack_ffffffb8 = *0x470890;\n            sub.gdi32.dll_GetPaletteEntries(*0x470890, 8, 8, (in_EAX - 0x1c) + *(in_EAX + 2) * 4);\n            var_1h._0_1_ = 1;\n        }\n        *in_FS_OFFSET = in_stack_ffffffb8;\n        uVar3 = sub.user32.dll_ReleaseDC(0, uVar1, 0x42131d);\n        return uVar3;\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 431
    },
    "00421328": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00421328(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uStack1080;\n    uint32_t uStack1076;\n    uint uStack1072;\n    uint32_t uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uchar *puStack1056;\n    uint32_t uStack1052;\n    uint uStack1048;\n    uint uStack1044;\n    ushort uStack1040;\n    \n    uStack1040 = 0x300;\n    if (in_EAX == 0) {\n        uStack1044 = 0x42138a;\n        fcn.004028c8();\n    }\n    else {\n        uStack1044 = 0;\n        uStack1048 = 0x421346;\n        uVar3 = sub.gdi32.dll_CreateCompatibleDC();\n        puStack1056 = 0x42134f;\n        uStack1052 = uVar3;\n        uVar4 = sub.gdi32.dll_SelectObject();\n        puStack1056 = &stack0xfffffbe8;\n        uStack1060 = 0x100;\n        uStack1064 = 0;\n        uStack1072 = 0x421363;\n        uStack1068 = uVar3;\n        uVar2 = sub.gdi32.dll_GetDIBColorTable();\n        uStack1068 = uStack1068 & 0xffff | uVar2 << 0x10;\n        uStack1080 = 0x42136f;\n        uStack1076 = uVar3;\n        uStack1072 = uVar4;\n        sub.gdi32.dll_SelectObject();\n        uStack1080 = uVar3;\n        sub.gdi32.dll_DeleteDC();\n    }\n    if (uStack1080._2_2_ != 0) {\n        if ((uStack1080._2_2_ != 0x10) || (cVar1 = fcn.00421290(),  cVar1 == '\\0')) {\n            fcn.00421120();\n        }\n        uVar4 = sub.gdi32.dll_CreatePalette(&stack0xfffffbc8);\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 521
    },
    "004213cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004213cc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack44;\n    \n    if (((in_EAX != 0) && (iVar1 = sub.gdi32.dll_GetObjectA(),  iVar1 != 0)) && (in_EAX != 0)) {\n        sub.gdi32.dll_GetPaletteEntries();\n        fcn.00421120();\n        iStack44 = in_EAX;\n    }\n    return CONCAT44(iStack44, iStack44);\n}\n",
        "token_count": 118
    },
    "00421420": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421420(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    int32_t iStack76;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint lpbInit;\n    uint hdc;\n    uint var_ch;\n    uint var_8h;\n    uint lpbmih;\n    \n    *(in_EAX + 8) = *(in_EAX + 8) >> 1;\n    uStack40 = 0x42144e;\n    iVar1 = fcn.00420dc8();\n    *(in_EAX + 0x14) = iVar1 * *(in_EAX + 8);\n    uStack40 = 0x421466;\n    iVar1 = fcn.00420da8();\n    uStack40 = 0;\n    puStack44 = 0x42146f;\n    iStack76 = sub.user32.dll_GetDC();\n    if (iStack76 == 0) {\n        puStack44 = 0x42147d;\n        fcn.00420b3c();\n    }\n    uStack48 = 0x4215cc;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    iStack64 = in_EAX + 0x28 + iVar1 * 4;\n    uStack56 = 0;\n    uStack68 = 4;\n    puStack80 = 0x4214b6;\n    puStack44 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateDIBitmap();\n    puStack80 = 0x4214bb;\n    uVar2 = fcn.00420c38();\n    uStack84 = 0x4214f2;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = fcn.00420c48();\n    *in_EDX = uVar3;\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x4214f9;\n    uStack88 = 0x4214f1;\n    uStack84 = uVar2;\n    sub.gdi32.dll_DeleteObject();\n    return;\n}\n",
        "token_count": 577
    },
    "00421678": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421678(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar3;\n    int32_t iStack156;\n    uint uStack152;\n    uchar *puStack148;\n    uint uStack144;\n    int32_t iStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint hdc;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack132 = 0x42169e;\n    fcn.00407c68();\n    uStack136 = 0x42196f;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    uStack144 = 0x4216bd;\n    puStack132 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    if ((*arg_ch | arg_ch[1]) == 0) {\n        uStack144 = 0xb;\n        puStack148 = 0x4216cb;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        *arg_8h = uVar1;\n        puStack148 = 0xc;\n        uStack152 = 0x4216d7;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        arg_8h[1] = uVar1;\n    }\n    else {\n        *arg_8h = *arg_ch;\n        arg_8h[1] = arg_ch[1];\n    }\n    uStack144 = 0;\n    puStack148 = 0x4216f3;\n    iVar2 = sub.user32.dll_GetDC();\n    if (iVar2 == 0) {\n        puStack148 = 0x421701;\n        fcn.00420b3c();\n    }\n    uStack152 = 0x421761;\n    iStack156 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff64;\n    puStack148 = &stack0xfffffffc;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xe);\n    iVar3 = iVar2;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xc);\n    *in_FS_OFFSET = iVar3;\n    sub.user32.dll_ReleaseDC(0, iVar2, 0x421768);\n    return;\n}\n",
        "token_count": 573
    },
    "00421980": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421980(uint32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uchar auStack96 [4];\n    int16_t iStack92;\n    int16_t iStack90;\n    uint32_t auStack84 [18];\n    \n    auStack84[3] = 0;\n    iVar1 = sub.gdi32.dll_GetObjectA();\n    if (iVar1 == 0) {\n        fcn.00420b24();\n    }\n    else if ((iVar1 < 0x40) || (auStack84[0] < 0x28)) {\n        fcn.00402c5c();\n        *param_2 = 0x28;\n        param_2[1] = 0x54;\n        param_2[2] = auStack96;\n    }\n    else {\n        puVar3 = auStack84;\n        puVar4 = param_2;\n        for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    if (param_1 == 2) {\n        *(param_2 + 0xe) = 1;\n    }\n    else if (param_1 - 3 < 0xe) {\n        *(param_2 + 0xe) = 4;\n        param_2[8] = param_1;\n    }\n    else if (param_1 - 0x11 < 0xf0) {\n        *(param_2 + 0xe) = 8;\n        param_2[8] = param_1;\n    }\n    else {\n        *(param_2 + 0xe) = iStack90 * iStack92;\n    }\n    *(param_2 + 3) = 1;\n    if (param_2[8] < param_2[9]) {\n        param_2[9] = param_2[8];\n    }\n    if (param_2[5] == 0) {\n        iVar1 = fcn.00420dc8();\n        uVar2 = param_2[2] >> 0x1f;\n        param_2[5] = iVar1 * ((param_2[2] ^ uVar2) - uVar2);\n    }\n    return;\n}\n",
        "token_count": 565
    },
    "00421ad0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00421ad0(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint hdc;\n    int32_t hpal;\n    uint var_1h;\n    \n    uStack32 = 0x421aeb;\n    fcn.00421980();\n    hpal = 0;\n    uStack32 = 0;\n    puStack36 = 0x421af7;\n    uVar1 = sub.gdi32.dll_CreateCompatibleDC();\n    uStack40 = 0x421b6d;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.00421ad0::var_1h + 1;\n    if (in_EDX != 0) {\n        puStack36 = &fcn.00421ad0::var_1h + 1;\n        hpal = sub.gdi32.dll_SelectPalette(uVar1);\n        sub.gdi32.dll_RealizePalette(uVar1);\n    }\n    uVar4 = *(in_ECX + 8);\n    uVar3 = uVar1;\n    iVar2 = sub.gdi32.dll_GetDIBits();\n    var_1h._0_1_ = iVar2 != 0;\n    *in_FS_OFFSET = uVar3;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar1, hpal, 0, 0x421b74, uVar4, arg_ch);\n    }\n    sub.gdi32.dll_DeleteDC(uVar1);\n    return;\n}\n",
        "token_count": 443
    },
    "00421ba4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00421ba4(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint uStack108;\n    uint *puStack104;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint piconinfo;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ah;\n    ushort var_26h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack104 = 0x421bc3;\n    fcn.00402c5c();\n    puStack104 = 0x421bd2;\n    fcn.00402c5c();\n    puStack104 = &fcn.00421ba4::piconinfo;\n    puStack112 = 0x421bdc;\n    uStack108 = param_2;\n    sub.user32.dll_GetIconInfo();\n    puStack112 = 0x421be1;\n    fcn.00421b98();\n    uStack116 = 0x421d92;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &fcn.00421ba4::var_1h + 1;\n    fcn.00421a64(2);\n    puStack132 = 0x421c0f;\n    fcn.00421a64(0x10);\n    var_18h = 0;\n    var_1ch = 0;\n    var_20h = 0;\n    var_24h = 0;\n    uStack136 = 0x421d6b;\n    uStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &fcn.00421ba4::var_1h + 1;\n    var_18h = fcn.00407c68();\n    var_1ch = fcn.00407c68();\n    var_20h = fcn.00407c68();\n    var_24h = fcn.00407c68();\n    fcn.00421ad0(2, var_1ch);\n    uVar3 = 0x10;\n    fcn.00421ad0(0x10, var_24h);\n    if (var_1h != '\\0') {\n        var_30h = var_ch + 0x16 + var_14h + var_10h;\n        (**(*in_EAX + 0x10))();\n    }\n    var_2ah._2_2_ = 1;\n    var_26h = 1;\n    (**(*in_EAX + 0x10))();\n    iVar2 = var_20h;\n    (**(*in_EAX + 0x10))();\n    piVar1 = iVar2 + 8;\n    *piVar1 = *piVar1 + *(iVar2 + 8);\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    *in_FS_OFFSET = uVar3;\n    fcn.004026ec(0x421d72);\n    fcn.004026ec();\n    fcn.004026ec();\n    fcn.004026ec();\n    return;\n}\n",
        "token_count": 896
    },
    "00421dd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00421dd8(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x20) = 1;\n    if (*(in_EAX + 0x12) != 0) {\n        (**(in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00421df0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00421df0(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        uVar2 = (**(**(arg_8h + -8) + 0x1c))();\n        return uVar2 ^ 1;\n    }\n    cVar1 = fcn.004033dc();\n    if ((cVar1 != '\\0') && (cVar1 = (**(**(arg_8h + -8) + 0x18))(),  cVar1 != '\\0')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 163
    },
    "00421e94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.00421e94(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint *in_FS_OFFSET;\n    ulong uVar8;\n    ulong uVar9;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 == NULL) {\ncode_r0x00421eb9:\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack32 = 0x421eac;\n        iVar2 = fcn.00403198();\n        puStack32 = 0x421eb5;\n        iVar3 = fcn.00403198();\n        if (iVar2 != iVar3) goto code_r0x00421eb9;\n        var_1h._0_1_ = 1;\n    }\n    puStack32 = 0x421ec9;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 == '\\0') {\n        puStack32 = 0x421ed4;\n        uVar4 = (**(*param_2 + 0x1c))();\n        if (uVar4 == '\\0') {\n            if (var_1h != 0) {\n                puStack32 = 0x421f12;\n                puVar6 = fcn.00403220();\n                uStack36 = 0x421fcb;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x421f2d;\n                puStack32 = &fcn.00421e94::var_1h + 1;\n                (**(*in_EAX + 0x44))();\n                puStack44 = 0x421f39;\n                puVar7 = fcn.00403220();\n                uStack48 = 0x421fae;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.00421e94::var_1h + 1;\n                (**(*param_2 + 0x44))();\n                uVar8 = (***puVar6)();\n                uVar9 = (***puVar7)();\n                if (uVar9 >> 0x20 == uVar8 >> 0x20 && uVar9 == uVar8) {\n                    (***puVar6)();\n                    cVar1 = fcn.00407d94();\n                    if (cVar1 != '\\0') {\n                        var_1h._0_1_ = 1;\n                        goto code_r0x00421f95;\n                    }\n                }\n                var_1h._0_1_ = 0;\ncode_r0x00421f95:\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x421fb5;\n                uStack48 = 0x421fad;\n                uVar4 = fcn.00403250();\n                return uVar4;\n            }\n            goto code_r0x00421fd2;\n        }\n    }\n    puStack32 = 0x421edf;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 == '\\0') {\ncode_r0x00421eee:\n        uVar4 = 0;\n    }\n    else {\n        puStack32 = 0x421eea;\n        uVar5 = (**(*param_2 + 0x1c))();\n        if (uVar5 == '\\0') goto code_r0x00421eee;\n        uVar4 = CONCAT31(uVar5 >> 8, 1);\n    }\n    var_1h._0_1_ = uVar4;\ncode_r0x00421fd2:\n    return uVar4 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 971
    },
    "00422038": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422038(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t in_EAX;\n    uint32_t unaff_EBX;\n    \n    if (*(in_EAX + 0x1a) != 0) {\n        (**(in_EAX + 0x18))(arg_8h, arg_ch, unaff_EBX & 0xffffff00 | arg_10h & 0xff, \n                            unaff_EBX & 0xffffff00 | arg_14h & 0xff);\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00422180": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00422180(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x422190;\n    var_8h = fcn.00417230();\n    uStack24 = 0x42221e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x4221bb;\n            var_ch = fcn.00416ec4();\n            puStack32 = 0x4221c6;\n            cVar1 = fcn.004206e8();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x4221f6;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.00422310();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x4221fd;\n                uStack36 = 0x4221f5;\n                fcn.00420744();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x422225;\n    uStack24 = 0x42221d;\n    fcn.00417294();\n    return;\n}\n",
        "token_count": 447
    },
    "0042222c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042222c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        puStack20 = 0x422245;\n        iVar1 = fcn.00417230();\n        uStack24 = 0x42229c;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack20 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.00416ec4();\n                if ((*(iVar2 + 0x58) != 0) && (*(*(*(iVar2 + 0x58) + 0x28) + 8) == in_EAX)) {\n                    fcn.00422310();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x4222a3;\n        uStack24 = 0x42229b;\n        fcn.00417294();\n        return;\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "00422310": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00422310(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 4) != 0) {\n        puStack16 = 0x42232d;\n        fcn.00420540();\n        uStack20 = 0x4223a4;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        if (*(in_EAX + 0x5c) != 0) {\n            puStack16 = &stack0xfffffffc;\n            sub.gdi32.dll_SelectObject(*(in_EAX + 4), *(in_EAX + 0x5c));\n        }\n        if (*(in_EAX + 0x60) != 0) {\n            sub.gdi32.dll_SelectPalette(*(in_EAX + 4), *(in_EAX + 0x60), 0xffffffff);\n        }\n        uVar1 = *(in_EAX + 4);\n        fcn.004208cc();\n        sub.gdi32.dll_DeleteDC();\n        fcn.00417244();\n        *in_FS_OFFSET = uVar1;\n        fcn.00420744(0x4223ab);\n        return;\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "004223b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004223b0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) != 0) {\n        puStack20 = 0x4223ce;\n        fcn.00420540();\n        uStack24 = 0x42248f;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        fcn.004236cc();\n        fcn.0042222c();\n        fcn.004237cc();\n        uVar2 = sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 8);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x5c) = 0;\n        }\n        else {\n            in_stack_ffffffd8 = uVar2;\n            uVar3 = sub.gdi32.dll_SelectObject(uVar2, iVar1);\n            *(in_EAX + 0x5c) = uVar3;\n        }\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 0x10);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x60) = 0;\n        }\n        else {\n            uVar3 = sub.gdi32.dll_SelectPalette(uVar2, iVar1, 0xffffffff);\n            *(in_EAX + 0x60) = uVar3;\n            sub.gdi32.dll_RealizePalette(uVar2);\n        }\n        fcn.004208cc();\n        fcn.004171a8();\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        fcn.00420744(0x422496);\n        return;\n    }\n    return;\n}\n",
        "token_count": 475
    },
    "004224a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004224a0(void)\n\n{\n    uint *in_EAX;\n    \n    if ((in_EAX != NULL) && (in_EAX[1] = in_EAX[1] + -1,  in_EAX[1] == 0)) {\n        (***in_EAX)();\n        fcn.00403250();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00422624": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00422624(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x28) & 3) != 0) && (*(in_EAX + 0x40) == 0)) {\n        if (*(in_EAX + 0x26) == 0x10) {\n            *(in_EAX + 0x40) = 0xf800;\n            *(in_EAX + 0x44) = 0x7e0;\n            *(in_EAX + 0x48) = 0x1f;\n        }\n        else if (*(in_EAX + 0x26) == 0x20) {\n            *(in_EAX + 0x40) = 0xff0000;\n            *(in_EAX + 0x44) = 0xff00;\n            *(in_EAX + 0x48) = 0xff;\n        }\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00422670": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422670(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_EDX;\n    uint32_t uVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    int32_t *in_FS_OFFSET;\n    uint *puStack312;\n    int32_t iStack308;\n    uchar *puStack304;\n    int32_t iStack300;\n    int32_t iStack296;\n    int32_t iStack292;\n    uint *puStack288;\n    int32_t iStack272;\n    int32_t iStack268;\n    uchar *puStack264;\n    uint *puStack260;\n    int32_t iStack256;\n    int32_t iStack252;\n    uint *puStack248;\n    code *pcStack244;\n    uint *puStack240;\n    uchar *puStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    uchar *puStack224;\n    int32_t iStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack200;\n    uint uStack196;\n    uchar *puStack192;\n    int32_t iStack188;\n    uint uStack184;\n    int32_t iStack180;\n    uint uStack176;\n    uint *puStack172;\n    uint lprc;\n    uint lpvObject;\n    int32_t var_84h;\n    int32_t var_80h;\n    int32_t var_74h;\n    int32_t var_70h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint *pbmi;\n    int32_t var_20h;\n    int32_t hdcDest;\n    int32_t hdc;\n    uint var_14h;\n    uint var_10h;\n    int32_t hpal;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    puStack236 = &stack0xfffffffc;\n    var_10h = 0;\n    if (((*(arg_ch + 0x18) == 0) || ((*(arg_ch + 0x1c) != 0 && (*(arg_ch + 0x20) != 0)))) &&\n       ((*(arg_ch + 0x18) != 0 || ((*(arg_ch + 4) != 0 && (*(arg_ch + 8) != 0)))))) {\n        puStack172 = 0x4226d8;\n        var_8h = in_EDX;\n        hgdiobj = in_EAX;\n        fcn.0042222c();\n        var_70h = 0;\n        if (hgdiobj != 0) {\n            puStack172 = &fcn.00422670::lpvObject;\n            uStack176 = 0x54;\n            iStack180 = hgdiobj;\n            uStack184 = 0x4226f5;\n            iVar4 = sub.gdi32.dll_GetObjectA();\n            if (iVar4 < 0x18) {\n                uStack184 = 0x4226ff;\n                fcn.00420b24();\n            }\n        }\n        uStack184 = 0;\n        iStack188 = 0x422706;\n        sub.user32.dll_GetDC();\n        iStack188 = 0x42270b;\n        iStack188 = fcn.00420c38();\n        puStack192 = 0x422717;\n        hdc = iStack188;\n        sub.gdi32.dll_CreateCompatibleDC();\n        puStack192 = 0x42271c;\n        hdcDest = fcn.00420c38();\n        uStack196 = 0x422cbe;\n        iStack200 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff38;\n        if (*(arg_ch + 0x18) < 0x28) {\n            if ((*(arg_ch + 0x10) | *(arg_ch + 0x12)) == 1) {\n                puStack204 = NULL;\n                uStack208 = 1;\n                iStack212 = 1;\n                uStack216 = *(arg_ch + 8);\n                iStack220 = *(arg_ch + 4);\n                puStack224 = 0x422763;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateBitmap();\n                puStack224 = 0x422768;\n                var_10h = fcn.00420c38();\n            }\n            else {\n                puStack204 = *(arg_ch + 8);\n                uStack208 = *(arg_ch + 4);\n                iStack212 = hdc;\n                uStack216 = 0x422787;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateCompatibleBitmap();\n                uStack216 = 0x42278c;\n                var_10h = fcn.00420c38();\n            }\n            uStack216 = 0x4229d7;\n            fcn.00420c38();\n            uStack216 = var_10h;\n            iStack220 = hdcDest;\n            puStack224 = 0x4229e4;\n            sub.gdi32.dll_SelectObject();\n            puStack224 = 0x4229e9;\n            var_14h = fcn.00420c38();\n            iStack228 = 0x422c6f;\n            iStack232 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff18;\n            puStack240 = 0x422c5e;\n            pcStack244 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff0c;\n            var_34h = 0;\n            uVar8 = 0;\n            puVar1 = &stack0xfffffffc;\n            puStack224 = &stack0xfffffffc;\n            if (hpal != 0) {\n                puStack248 = NULL;\n                iStack252 = hpal;\n                iStack256 = hdcDest;\n                puStack260 = 0x422a24;\n                puStack224 = &stack0xfffffffc;\n                var_34h = sub.gdi32.dll_SelectPalette();\n                puStack260 = hdcDest;\n                puStack264 = 0x422a30;\n                sub.gdi32.dll_RealizePalette();\n                puVar1 = puStack236;\n            }\n            puStack236 = puVar1;\n            iStack268 = 0x422c3c;\n            iStack272 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffef0;\n            if (arg_8h == 0) {\n                puStack288 = NULL;\n                iStack292 = 0;\n                iStack296 = hdcDest;\n                iStack300 = 0x422b1d;\n                puStack264 = &stack0xfffffffc;\n                sub.gdi32.dll_PatBlt();\n            }\n            else {\n                puStack264 = &stack0xfffffffc;\n                fcn.004200e0();\n                puStack288 = 0x422a71;\n                fcn.00415a90(&fcn.00422670::lprc, *(arg_ch + 8));\n                puStack288 = &fcn.00422670::lprc;\n                iStack292 = hdcDest;\n                iStack296 = 0x422a81;\n                sub.user32.dll_FillRect();\n                iStack296 = 0x422a8f;\n                iStack296 = fcn.0041f420();\n                iStack300 = hdcDest;\n                puStack304 = 0x422a99;\n                sub.gdi32.dll_SetTextColor();\n                puStack304 = 0x422aa4;\n                fcn.004200a4();\n                puStack304 = 0x422aa9;\n                puStack304 = fcn.0041f420();\n                iStack308 = hdcDest;\n                puStack312 = 0x422ab3;\n                sub.gdi32.dll_SetBkColor();\n                if ((*(arg_ch + 0x26) == 1) && (*(arg_ch + 0x14) != 0)) {\n                    puStack312 = 0x422ad4;\n                    var_30h = fcn.0041f420();\n                    puStack312 = 0x422ae2;\n                    fcn.004200a4();\n                    puStack312 = 0x422ae7;\n                    var_2ch = fcn.0041f420();\n                    puStack312 = &fcn.00422670::var_30h;\n                    sub.gdi32.dll_SetDIBColorTable(hdcDest, 0, 2);\n                }\n            }\n            if (hgdiobj != 0) {\n                iStack300 = hdc;\n                puStack304 = 0x422b30;\n                sub.gdi32.dll_CreateCompatibleDC();\n                puStack304 = 0x422b35;\n                var_20h = fcn.00420c38();\n                iStack308 = 0x422c12;\n                puStack312 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffec8;\n                puStack304 = &stack0xfffffffc;\n                sub.gdi32.dll_SelectObject(var_20h, hgdiobj);\n                uVar5 = fcn.00420c38();\n                if (var_8h != 0) {\n                    uVar8 = sub.gdi32.dll_SelectPalette(var_20h, var_8h, 0);\n                    sub.gdi32.dll_RealizePalette(var_20h);\n                }\n                if (arg_8h != 0) {\n                    uVar6 = fcn.0041f420();\n                    sub.gdi32.dll_SetTextColor(var_20h, uVar6);\n                    fcn.004200a4();\n                    uVar6 = fcn.0041f420();\n                    sub.gdi32.dll_SetBkColor(var_20h, uVar6);\n                }\n                sub.gdi32.dll_BitBlt(hdcDest, 0, 0, *(arg_ch + 4), *(arg_ch + 8), var_20h, 0, 0, 0xcc0020);\n                if (var_8h != 0) {\n                    sub.gdi32.dll_SelectPalette(var_20h, uVar8, 0xffffffff);\n                }\n                iVar4 = var_20h;\n                sub.gdi32.dll_SelectObject(var_20h, uVar5);\n                fcn.00420c38();\n                *in_FS_OFFSET = iVar4;\n                uVar8 = sub.gdi32.dll_DeleteDC(var_20h, 0x422c19);\n                return uVar8;\n            }\n            uVar8 = 0;\n            *in_FS_OFFSET = iStack296;\n            puStack288 = 0x422c43;\n            if (hpal != 0) {\n                iStack292 = 0xffffffff;\n                iStack296 = var_34h;\n                iStack300 = hdcDest;\n                puStack304 = 0x422c3b;\n                uVar8 = sub.gdi32.dll_SelectPalette();\n            }\n            return uVar8;\n        }\n        puStack204 = 0x42279e;\n        puStack192 = &stack0xfffffffc;\n        pbmi = fcn.004026cc();\n        uStack208 = 0x4229c8;\n        iStack212 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff2c;\n        *(arg_ch + 0x18) = 0x28;\n        *(arg_ch + 0x24) = 1;\n        puStack204 = &stack0xfffffffc;\n        if (*(arg_ch + 0x26) == 0) {\n            uStack216 = 0xc;\n            iStack220 = hdc;\n            puStack224 = 0x4227d7;\n            puStack204 = &stack0xfffffffc;\n            iVar2 = sub.gdi32.dll_GetDeviceCaps();\n            puStack224 = 0xe;\n            iStack228 = hdc;\n            iStack232 = 0x4227e4;\n            iVar3 = sub.gdi32.dll_GetDeviceCaps();\n            *(arg_ch + 0x26) = iVar2 * iVar3;\n        }\n        puVar9 = arg_ch + 0x18;\n        puVar10 = pbmi;\n        for (iVar4 = 10; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar10 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        *(arg_ch + 4) = *(arg_ch + 0x1c);\n        *(arg_ch + 8) = *(arg_ch + 0x20);\n        if (*(arg_ch + 0x26) < 9) {\n            if ((*(arg_ch + 0x26) == 1) && ((hgdiobj == 0 || (var_74h == 0)))) {\n                pbmi[10] = 0;\n                pbmi[0xb] = 0xffffff;\n            }\n            else if (hpal == 0) {\n                if (hgdiobj != 0) {\n                    iStack232 = hgdiobj;\n                    puStack236 = hdcDest;\n                    puStack240 = 0x42288e;\n                    var_14h = sub.gdi32.dll_SelectObject();\n                    if ((var_70h == 0) || (var_74h == 0)) {\n                        puStack240 = NULL;\n                        pcStack244 = pbmi;\n                        puStack248 = NULL;\n                        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n                        iStack252 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n                        iStack256 = 0;\n                        puStack260 = hgdiobj;\n                        puStack264 = hdcDest;\n                        iStack268 = 0x4228df;\n                        sub.gdi32.dll_GetDIBits();\n                    }\n                    else {\n                        puStack240 = pbmi + 10;\n                        pcStack244 = pe_nt_image_headers32;\n                        puStack248 = NULL;\n                        iStack252 = hdcDest;\n                        iStack256 = 0x4228b4;\n                        uVar8 = sub.gdi32.dll_GetDIBColorTable();\n                        *(arg_ch + 0x38) = uVar8;\n                    }\n                    puStack224 = var_14h;\n                    iStack228 = hdcDest;\n                    iStack232 = 0x4228ec;\n                    sub.gdi32.dll_SelectObject();\n                }\n            }\n            else {\n                iStack232 = 0x422872;\n                fcn.004213cc();\n            }\n        }\n        else if (((*(arg_ch + 0x26) == 0x10) || (*(arg_ch + 0x26) == 0x20)) && ((*(arg_ch + 0x28) & 3) != 0)) {\n            iStack232 = 0x422915;\n            fcn.00422624();\n            iStack232 = 0x42292b;\n            fcn.004028c8();\n        }\n        iStack232 = 0;\n        puStack236 = NULL;\n        puStack240 = &fcn.00422670::var_28h;\n        pcStack244 = NULL;\n        puStack248 = pbmi;\n        iStack252 = hdc;\n        iStack256 = 0x422942;\n        sub.gdi32.dll_CreateDIBSection();\n        iStack256 = 0x422947;\n        var_10h = fcn.00420c38();\n        if (var_28h == 0) {\n            iStack256 = 0x422955;\n            fcn.00420b90();\n        }\n        if ((((hgdiobj == 0) || (*(arg_ch + 0x1c) != var_84h)) || (*(arg_ch + 0x20) != var_80h)) ||\n           (*(arg_ch + 0x26) < 9)) {\n            *in_FS_OFFSET = iStack252;\n            pcStack244 = 0x4229cf;\n            puStack248 = 0x4229c7;\n            uVar8 = fcn.004026ec();\n            return uVar8;\n        }\n        iStack256 = 0;\n        puStack260 = pbmi;\n        puStack264 = var_28h;\n        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n        iStack268 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n        iStack272 = 0;\n        sub.gdi32.dll_GetDIBits();\n        fcn.00403a70();\n        fcn.00403a70();\n    }\n    return var_10h;\n}\n",
        "token_count": 3764
    },
    "00422cd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00422cd4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack1064;\n    int32_t iStack1060;\n    uchar *puStack1056;\n    int32_t iStack1052;\n    uint uStack1048;\n    uchar *puStack1044;\n    uint uStack1040;\n    \n    puStack1044 = &stack0xfffffbf0;\n    uVar2 = 0;\n    if (in_EAX != 0) {\n        uStack1040 = 0;\n        uStack1048 = 4;\n        puStack1056 = 0x422cf2;\n        iStack1052 = in_EAX;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if ((iVar1 != 0) && (iStack1052 != 0)) {\n            uStack1048 = CONCAT22(iStack1052, 0x300);\n            puStack1056 = &stack0xfffffbec;\n            iStack1060 = iStack1052;\n            uStack1064 = 0;\n            sub.gdi32.dll_GetPaletteEntries();\n            uVar2 = sub.gdi32.dll_CreatePalette(&stack0xfffffbd8);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 298
    },
    "00422d38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00422d38(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffec8;\n    int32_t in_stack_ffffff24;\n    int32_t iStack204;\n    uint uStack200;\n    uchar *puStack196;\n    int32_t iStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    int32_t iStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uint uStack148;\n    uchar *puStack144;\n    uint uStack136;\n    uint *puStack132;\n    uint lpvObject;\n    uint nWidth;\n    uint nHeight;\n    int32_t var_5ch;\n    uint var_58h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    char var_11h;\n    int32_t hdcDest;\n    int32_t hdc;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    hgdiobj = 0;\n    if (in_EAX != 0) {\n        puStack132 = &fcn.00422d38::lpvObject;\n        uStack136 = 0x54;\n        puStack144 = 0x422d60;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            puStack144 = 0x422d6f;\n            fcn.0042222c();\n            var_8h = 0;\n            hdcDest = 0;\n            uStack148 = 0x422f33;\n            iStack152 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff68;\n            uStack156 = 0;\n            iStack160 = 0x422d8e;\n            puStack144 = &stack0xfffffffc;\n            sub.user32.dll_GetDC();\n            iStack160 = 0x422d93;\n            iStack160 = fcn.00420c38();\n            uStack164 = 0x422d9f;\n            var_8h = iStack160;\n            sub.gdi32.dll_CreateCompatibleDC();\n            uStack164 = 0x422da4;\n            hdcDest = fcn.00420c38();\n            uStack164 = 0;\n            uStack168 = 1;\n            uStack172 = 1;\n            uStack176 = nHeight;\n            uStack180 = nWidth;\n            iStack184 = 0x422dba;\n            hgdiobj = sub.gdi32.dll_CreateBitmap();\n            if (hgdiobj != 0) {\n                iStack188 = hdcDest;\n                iStack192 = 0x422dd4;\n                iStack184 = hgdiobj;\n                var_1ch = sub.gdi32.dll_SelectObject();\n                if (param_1 != 0x1fffffff) {\n                    iStack192 = var_8h;\n                    puStack196 = 0x422e04;\n                    sub.gdi32.dll_CreateCompatibleDC();\n                    puStack196 = 0x422e09;\n                    hdc = fcn.00420c38();\n                    uStack200 = 0x422eeb;\n                    iStack204 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffff34;\n                    if (var_5ch == 0) {\n                        var_11h = '\\0';\n                        puStack196 = &stack0xfffffffc;\n                    }\n                    else {\n                        var_11h = '\\x01';\n                        var_58h = 0;\n                        puStack196 = &stack0xfffffffc;\n                        in_EAX = fcn.00422670(0, &fcn.00422d38::lpvObject);\n                    }\n                    var_18h = sub.gdi32.dll_SelectObject(hdc, in_EAX);\n                    if (param_2 != 0) {\n                        sub.gdi32.dll_SelectPalette(hdc, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdc);\n                        sub.gdi32.dll_SelectPalette(hdcDest, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdcDest);\n                    }\n                    uVar2 = sub.gdi32.dll_SetBkColor(hdc, param_1);\n                    sub.gdi32.dll_BitBlt(hdcDest, 0, 0, nWidth, nHeight, hdc, 0, 0, 0xcc0020);\n                    sub.gdi32.dll_SetBkColor(hdc, uVar2);\n                    if (var_18h != 0) {\n                        in_stack_fffffec8 = hdc;\n                        sub.gdi32.dll_SelectObject(hdc, var_18h);\n                    }\n                    if (var_11h != '\\0') {\n                        sub.gdi32.dll_DeleteObject(in_EAX);\n                    }\n                    *in_FS_OFFSET = in_stack_fffffec8;\n                    uVar2 = sub.gdi32.dll_DeleteDC(hdc, 0x422ef2);\n                    return uVar2;\n                }\n                iStack192 = 0x42;\n                puStack196 = nHeight;\n                uStack200 = nWidth;\n                iStack204 = 0;\n                sub.gdi32.dll_PatBlt(hdcDest, 0);\n                if (var_1ch != 0) {\n                    in_stack_ffffff24 = hdcDest;\n                    sub.gdi32.dll_SelectObject(hdcDest, var_1ch);\n                }\n            }\n            uVar2 = 0;\n            *in_FS_OFFSET = in_stack_ffffff24;\n            if (hdcDest != 0) {\n                uVar2 = sub.gdi32.dll_DeleteDC(hdcDest, 0x422f3a);\n            }\n            if (var_8h != 0) {\n                uVar2 = sub.user32.dll_ReleaseDC(0, var_8h);\n            }\n            return uVar2;\n        }\n    }\n    return hgdiobj;\n}\n",
        "token_count": 1349
    },
    "00422f44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00422f44(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00421da0();\n    in_EAX[0xd] = 0x20000000;\n    iVar1 = fcn.00403220();\n    in_EAX[10] = iVar1;\n    fcn.0042249c();\n    if (*0x464454 != '\\0') {\n        (**(*in_EAX + 0x6c))();\n    }\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 219
    },
    "0042323c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042323c(int32_t *param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_2ch;\n    int32_t arg_28h;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint uStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint *puStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint uStack84;\n    uint *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_dh;\n    char var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar6 = in_EAX[10];\n    uStack48 = 0x42325d;\n    var_4h = param_2;\n    fcn.00420920();\n    uStack48 = 0x423264;\n    fcn.004237cc();\n    var_8h = 0;\n    var_9h = 0;\n    iVar3 = *(iVar6 + 0x10);\n    if (iVar3 != 0) {\n        uStack48 = 0xffffffff;\n        uStack56 = *(var_4h + 4);\n        uStack60 = 0x423283;\n        iStack52 = iVar3;\n        var_8h = sub.gdi32.dll_SelectPalette();\n        uStack60 = *(var_4h + 4);\n        uStack64 = 0x423292;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack64 = 0xc;\n    uStack68 = *(var_4h + 4);\n    uStack72 = 0x4232a4;\n    var_9h = iVar3 != 0;\n    uStack72 = sub.gdi32.dll_GetDeviceCaps();\n    uStack76 = 0xe;\n    puStack80 = *(var_4h + 4);\n    uStack84 = 0x4232b3;\n    iVar3 = sub.gdi32.dll_GetDeviceCaps();\n    if ((puStack80 * iVar3 < 9) && (puStack80 * iVar3 < *(iVar6 + 0x2a) * *(iVar6 + 0x28))) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        puStack80 = &fcn.0042323c::var_11h;\n        uStack84 = *(var_4h + 4);\n        puStack88 = 0x4232e6;\n        sub.gdi32.dll_GetBrushOrgEx();\n        puStack88 = 0x4;\n        uStack92 = *(var_4h + 4);\n        puStack96 = 0x4232f4;\n        sub.gdi32.dll_SetStretchBltMode();\n        puStack96 = &fcn.0042323c::var_11h;\n        puStack100 = var_dh;\n        uStack104 = var_11h;\n        uStack108 = *(var_4h + 4);\n        sub.gdi32.dll_SetBrushOrgEx();\n    }\n    else {\n        puStack80 = 0x423315;\n        cVar2 = fcn.004235c8();\n        if (cVar2 == '\\0') {\n            puStack80 = 0x3;\n            uStack84 = 0x423323;\n            uStack84 = fcn.0042084c();\n            puStack88 = 0x423329;\n            sub.gdi32.dll_SetStretchBltMode();\n        }\n    }\n    uStack92 = 0x423478;\n    puStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    puStack100 = 0x42333e;\n    puStack88 = &stack0xfffffffc;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        puStack100 = 0x423349;\n        fcn.0042376c();\n    }\n    puStack100 = 0x423350;\n    fcn.0042350c();\n    puStack100 = 0x42335b;\n    fcn.00420920();\n    puStack100 = 0x423362;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        uStack104 = 0x42340d;\n        uStack108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStack100 = &stack0xfffffffc;\n        sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar3 = fcn.00420c38();\n        iVar4 = sub.gdi32.dll_SelectObject(iVar3, *(iVar6 + 0xc));\n        arg_2ch = param_1[2] - *param_1;\n        arg_28h = param_1[3] - param_1[1];\n        iVar5 = fcn.0042350c();\n        uVar7 = 0;\n        fcn.00420ddc(0, 0, iVar3, *(iVar6 + 0x20), *(iVar6 + 0x1c), 0, 0, *(iVar5 + 4), arg_28h, arg_2ch);\n        *in_FS_OFFSET = uVar7;\n        if (iVar4 != 0) {\n            sub.gdi32.dll_SelectObject(iVar3, iVar4, 0x423452);\n        }\n        if (iVar3 != 0) {\n            sub.gdi32.dll_DeleteDC(iVar3);\n        }\n        return;\n    }\n    puStack100 = *(var_4h + 0x20);\n    uStack104 = *(iVar6 + 0x20);\n    uStack108 = *(iVar6 + 0x1c);\n    iVar6 = fcn.0042350c(0, 0);\n    uVar7 = *(var_4h + 4);\n    sub.gdi32.dll_StretchBlt(uVar7, *param_1, param_1[1], param_1[2] - *param_1, param_1[3] - param_1[1], *(iVar6 + 4));\n    *in_FS_OFFSET = uVar7;\n    if (var_9h != '\\0') {\n        sub.gdi32.dll_SelectPalette(*(var_4h + 4), var_8h, 0xffffffff, 0x42347f);\n    }\n    return;\n}\n",
        "token_count": 1564
    },
    "0042348c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042348c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (1 < *(iVar1 + 4)) {\n        fcn.004236cc();\n        fcn.004230d8(iVar1 + 0x18);\n        return;\n    }\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 8) != *(iVar1 + 0x14))) {\n        if ((*(iVar1 + 0x14) != 0) && (iVar2 = sub.gdi32.dll_DeleteObject(*(iVar1 + 0x14)),  iVar2 == 0)) {\n            fcn.00420b90();\n        }\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x2c) = 0;\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "0042350c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0042350c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0xb] == 0) {\n        fcn.004236cc();\n        if (in_EAX[0xb] == 0) {\n            iVar1 = fcn.004222a8();\n            in_EAX[0xb] = iVar1;\n            *(iVar1 + 0x2c) = in_EAX;\n            *(iVar1 + 0x28) = *(*in_EAX + 0x10);\n            *(iVar1 + 0x34) = in_EAX;\n            *(iVar1 + 0x30) = fcn.00423198;\n        }\n    }\n    return in_EAX[0xb];\n}\n",
        "token_count": 177
    },
    "00423578": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00423578(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    unkbyte3 Var3;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    Var3 = iVar1 >> 8;\n    if ((*(iVar1 + 8) == 0) || (*(iVar1 + 8) == *(iVar1 + 0x14))) {\n        if (*(iVar1 + 0x14) != 0) {\n            return 0;\n        }\n        if (*(iVar1 + 0x30) == 0) {\n            uVar2 = CONCAT31(Var3, 1);\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = CONCAT31(Var3, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 193
    },
    "00423648": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00423648(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 0x14) == 0)) {\n        fcn.004237cc();\n        if (*(iVar1 + 0x30) == 0) {\n            sub.gdi32.dll_GetObjectA(*(iVar1 + 8), 0x54, iVar1 + 0x18);\n            *(iVar1 + 0x30) = 0x28;\n            *(iVar1 + 0x34) = *(iVar1 + 0x1c);\n            *(iVar1 + 0x38) = *(iVar1 + 0x20);\n            *(iVar1 + 0x3c) = 1;\n            *(iVar1 + 0x3e) = *(iVar1 + 0x28) * *(iVar1 + 0x2a);\n        }\n        uVar2 = fcn.00422670(0, iVar1 + 0x18);\n        *(iVar1 + 0x14) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "004236cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004236cc(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStackY40;\n    uint uStackY36;\n    uchar *puStackY32;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (((*(iVar1 + 8) == 0) && (*(iVar1 + 0x14) == 0)) && (*(iVar1 + 0x6c) != 0)) {\n        puStackY32 = 0x4236f9;\n        fcn.00418b3c(0, 0);\n        iVar1 = in_EAX[4];\n        iVar2 = in_EAX[5];\n        uStackY36 = 0x42374f;\n        uStackY40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        in_EAX[4] = 0;\n        in_EAX[5] = 0;\n        puStackY32 = &stack0xfffffffc;\n        (**(*in_EAX + 0x54))();\n        *in_FS_OFFSET = uStackY40;\n        in_EAX[4] = iVar1;\n        in_EAX[5] = iVar2;\n        return;\n    }\n    iVar1 = in_EAX[10];\n    if (*(iVar1 + 8) == 0) {\n        *(iVar1 + 8) = *(iVar1 + 0x14);\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "0042376c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042376c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((*(in_EAX + 0x32) == '\\0') || (*(in_EAX + 0x31) == '\\0')) {\n        iVar1 = *(in_EAX + 0x28);\n        if (*(iVar1 + 0xc) != 0) {\n            fcn.0042222c();\n            sub.gdi32.dll_DeleteObject(*(iVar1 + 0xc));\n            *(iVar1 + 0xc) = 0;\n        }\n        fcn.004236bc();\n        fcn.004236cc();\n        iVar1 = *(in_EAX + 0x28);\n        fcn.004235f8();\n        uVar2 = fcn.00422d38();\n        *(iVar1 + 0xc) = uVar2;\n        *(in_EAX + 0x32) = 1;\n        *(in_EAX + 0x31) = 1;\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "004237cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004237cc(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char cVar6;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(in_EAX + 0x30) != '\\0') {\n        return;\n    }\n    if (*(iVar1 + 0x10) != 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == *(iVar1 + 8)) {\n        fcn.0042222c();\n    }\n    iVar2 = fcn.00421328();\n    *(iVar1 + 0x10) = iVar2;\n    if (iVar2 != 0) {\n        return;\n    }\n    sub.user32.dll_GetDC(0);\n    uVar3 = fcn.00420c38();\n    if (*(iVar1 + 0x71) == '\\0') {\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xc);\n        iVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xe);\n        if (*(iVar1 + 0x2a) * *(iVar1 + 0x28) <= iVar2 * iVar4) {\n            cVar6 = '\\0';\n            goto code_r0x0042385d;\n        }\n    }\n    cVar6 = '\\x01';\ncode_r0x0042385d:\n    *(iVar1 + 0x71) = cVar6;\n    if (cVar6 != '\\0') {\n        uVar5 = sub.gdi32.dll_CreateHalftonePalette(uVar3);\n        *(iVar1 + 0x10) = uVar5;\n    }\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    if (*(iVar1 + 0x10) == 0) {\n        *(in_EAX + 0x30) = 1;\n    }\n    return;\n}\n",
        "token_count": 471
    },
    "00423884": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423884(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int16_t in_DX;\n    uint var_54h;\n    int32_t var_40h;\n    uint var_3ch;\n    \n    if ((in_DX != 2) || (in_ECX == 0)) {\n        fcn.00420b0c();\n    }\n    fcn.004236bc();\n    fcn.00402c5c();\n    sub.gdi32.dll_GetObjectA();\n    if (var_40h == 0) {\n        var_3ch = 0;\n    }\n    fcn.004230d8(&var_54h);\n    *(in_EAX[10] + 0x70) = 0;\n    iVar1 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar1 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 237
    },
    "0042392c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042392c(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t iVar3;\n    uint in_EDX;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x423948;\n    iVar1 = fcn.00403220();\n    puStack32 = 0x4239b3;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(iVar1 + 8) = in_EDX;\n    *(iVar1 + 0x10) = in_ECX;\n    puVar4 = iVar1 + 0x18;\n    for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *arg_10h;\n        arg_10h = arg_10h + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *(iVar1 + 0x70) = arg_ch;\n    if (*(iVar1 + 0x2c) != 0) {\n        *(iVar1 + 0x14) = *(iVar1 + 8);\n    }\n    uStack40 = 0x4239a3;\n    puStack28 = &stack0xfffffffc;\n    uVar2 = fcn.00403400();\n    *(iVar1 + 0x6c) = uVar2;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4708ac;\n    puStack32 = 0x4239d4;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack36 = 0x423a13;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.004224a0();\n    *(in_EAX + 0x28) = iVar1;\n    fcn.0042249c();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x423a1a;\n    uStack36 = 0x4708ac;\n    uStack40 = 0x423a12;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 578
    },
    "00423a54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00423a54(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uint uVar6;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uchar *puStack256;\n    uint uStack252;\n    int32_t *piStack248;\n    uint uStack244;\n    uint *puStack240;\n    uint uStack236;\n    uchar *puStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack212;\n    uint uStack208;\n    uchar *puStack204;\n    uint uStack200;\n    uint uStack196;\n    uchar *puStack192;\n    uint var_aah;\n    uint var_48h;\n    uint var_44h;\n    ushort var_40h;\n    ushort var_3eh;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint hpal;\n    uint hgdiobj;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint lpbmih;\n    int32_t lpbInit;\n    uint var_10h;\n    uint hdc;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack204 = &stack0xfffffffc;\n    puStack192 = 0x423a87;\n    var_8h = in_EDX;\n    (**(*in_EDX + 0xc))();\n    bVar5 = var_20h == 0xc;\n    if (bVar5) {\n        var_20h = 0x28;\n    }\n    puStack192 = 0x423aac;\n    piVar1 = fcn.004026cc();\n    uStack196 = 0x423f71;\n    uStack200 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff38;\n    uStack208 = 0x423f44;\n    uStack212 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff2c;\n    if (bVar5) {\n        puStack204 = &stack0xfffffffc;\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        fcn.00402c5c();\n        piVar1[1] = var_44h;\n        piVar1[2] = var_44h._2_2_;\n        *(piVar1 + 3) = var_40h;\n        *(piVar1 + 0xe) = var_3eh;\n    }\n    else {\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        if ((piVar1[4] != 3) && (piVar1[4] != 0)) {\n            var_8h = fcn.00403220();\n            if (arg_8h == 0) {\n                fcn.00402c5c();\n            }\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            uStack224 = 0x423bda;\n            fcn.00418db8(in_ECX - var_20h, 0);\n            uStack224 = 0x423bea;\n            (**(*var_8h + 0x14))();\n        }\n    }\n    *piVar1 = var_20h;\n    if (*(piVar1 + 3) != 1) {\n        fcn.00420b24();\n    }\n    if ((var_20h == 0x28) && (((*(piVar1 + 0xe) == 0x10 || (*(piVar1 + 0xe) == 0x20)) && (piVar1[4] == 3)))) {\n        fcn.00418d48();\n    }\n    if (piVar1[8] == 0) {\n        iVar2 = fcn.00420da8();\n        piVar1[8] = iVar2;\n    }\n    fcn.00418d48();\n    if (piVar1[5] == 0) {\n        iVar2 = fcn.00420dc8();\n        uVar4 = piVar1[2] >> 0x1f;\n        piVar1[5] = iVar2 * ((piVar1[2] ^ uVar4) - uVar4);\n    }\n    if (bVar5) {\n        fcn.00421070();\n    }\n    sub.user32.dll_GetDC();\n    uStack252 = fcn.00420c38();\n    uStack224 = 0x423ebf;\n    uStack228 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff1c;\n    hdc = uStack252;\n    if (((piVar1[4] == 0) || (piVar1[4] == 3)) && (*0x464454 == '\\0')) {\n        puStack232 = NULL;\n        uStack236 = 0;\n        puStack240 = &fcn.00423a54::lpbInit;\n        uStack244 = 0;\n        puStack256 = 0x423e45;\n        piStack248 = piVar1;\n        iVar2 = sub.gdi32.dll_CreateDIBSection();\n        if ((iVar2 == 0) || (lpbInit == 0)) {\n            puStack256 = 0x423e59;\n            iVar2 = sub.kernel32.dll_GetLastError();\n            if (iVar2 == 0) {\n                puStack256 = 0x423e62;\n                fcn.00420b24();\n            }\n            else {\n                puStack256 = 0x423e69;\n                fcn.0040c9a4();\n            }\n        }\n        uStack260 = 0x423e8e;\n        uStack264 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffef8;\n        uStack268 = 0x423e84;\n        puStack256 = &stack0xfffffffc;\n        fcn.00418d48();\n        *in_FS_OFFSET = uStack264;\n        *in_FS_OFFSET = uStack252;\n        uStack244 = 0x423ec6;\n        piStack248 = hdc;\n        uStack252 = 0;\n        puStack256 = 0x423ebe;\n        sub.user32.dll_ReleaseDC();\n        return;\n    }\n    var_10h = 0;\n    puStack232 = 0x423d01;\n    lpbInit = fcn.004026cc();\n    uStack236 = 0x423e27;\n    puStack240 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff10;\n    uStack244 = 0x423d1f;\n    puStack232 = &stack0xfffffffc;\n    fcn.00418d48();\n    uStack244 = hdc;\n    piStack248 = 0x423d28;\n    sub.gdi32.dll_CreateCompatibleDC();\n    piStack248 = 0x423d2d;\n    var_10h = fcn.00420c38();\n    piStack248 = 0x1;\n    uStack252 = 1;\n    puStack256 = hdc;\n    uStack260 = 0x423d3d;\n    uStack260 = sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack264 = var_10h;\n    uStack268 = 0x423d47;\n    uVar3 = sub.gdi32.dll_SelectObject();\n    var_34h = 0;\n    if (piVar1[8] != 0) {\n        uStack268 = 0x423d65;\n        uStack272 = fcn.00421328();\n        uStack268 = 0;\n        uStack276 = var_10h;\n        uStack280 = 0x423d77;\n        var_34h = sub.gdi32.dll_SelectPalette();\n        uStack280 = var_10h;\n        puStack284 = 0x423d83;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack288 = 0x423dfb;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    uVar6 = var_10h;\n    puStack284 = &stack0xfffffffc;\n    iVar2 = sub.gdi32.dll_CreateDIBitmap(var_10h, piVar1, 4, lpbInit, piVar1, 0);\n    if (iVar2 == 0) {\n        iVar2 = sub.kernel32.dll_GetLastError();\n        if (iVar2 == 0) {\n            fcn.00420b24();\n        }\n        else {\n            fcn.0040c9a4();\n        }\n    }\n    *in_FS_OFFSET = uVar6;\n    if (var_34h != 0) {\n        sub.gdi32.dll_SelectPalette(var_10h, var_34h, 0xffffffff, 0x423e02);\n    }\n    uVar3 = sub.gdi32.dll_SelectObject(var_10h, uVar3);\n    sub.gdi32.dll_DeleteObject(uVar3);\n    return;\n}\n",
        "token_count": 2141
    },
    "0042447c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042447c(char param_1, int32_t *param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iStackY1120;\n    uchar *puStackY1116;\n    char cVar5;\n    char cStack1080;\n    uchar auStack1054 [1038];\n    \n    fcn.00402c5c();\n    puVar1 = *(*(in_EAX + 0x28) + 0x6c);\n    if (puVar1 == NULL) {\n        fcn.00423648();\n        iVar2 = *(in_EAX + 0x28);\n        if (*(iVar2 + 0x14) != 0) {\n            cVar5 = *(iVar2 + 0x50);\n            fcn.00421a64(*(iVar2 + 0x50));\n            if (*(iVar2 + 0x70) != '\\0') {\n                cStack1080 = '\\f';\n                if (*(iVar2 + 0x3e) < 9) {\n                    cStack1080 = (1 << (*(iVar2 + 0x3e) & 0x1f)) * '\\x03' + '\\f';\n                }\n            }\n            fcn.00402c5c(cVar5 + cStack1080 + '\\x0e');\n            fcn.0042350c();\n            fcn.00420920();\n            sub.gdi32.dll_SelectObject(*(*(in_EAX + 0x2c) + 4), *(iVar2 + 0x14));\n            fcn.00420c38();\n            sub.gdi32.dll_GetDIBColorTable(*(*(in_EAX + 0x2c) + 4), 0, 0x100);\n            iStackY1120 = *(*(in_EAX + 0x2c) + 4);\n            sub.gdi32.dll_SelectObject();\n            puVar3 = *(iVar2 + 0x50);\n            puStackY1116 = auStack1054;\n            if ((puVar3 != NULL) && (puVar3 < auStack1054)) {\n                puStackY1116 = puVar3;\n            }\n            if ((((*(iVar2 + 0x70) == '\\0') && (puStackY1116 == NULL)) && (*(iVar2 + 0x10) != 0)) &&\n               ((*(iVar2 + 0x71) == '\\0' && (puStackY1116 = fcn.004213cc(),  8 < *(iVar2 + 0x3e))))) {\n                iStackY1120 = iStackY1120 + puStackY1116 * 4;\n            }\n        }\n        if (param_1 != '\\0') {\n            fcn.00418d80();\n        }\n        if (iStackY1120 != 0) {\n            fcn.00422624();\n            if (puStackY1116 != NULL) {\n                if ((*(iVar2 + 0x50) == NULL) || (*(iVar2 + 0x50) != puStackY1116)) {\n                    *(iVar2 + 0x50) = puStackY1116;\n                }\n                if (*(iVar2 + 0x70) != '\\0') {\n                    fcn.004210a8();\n                }\n            }\n            if (*(iVar2 + 0x70) == '\\0') {\n                fcn.00418d80();\n                fcn.00418d80();\n                if ((8 < *(iVar2 + 0x3e)) && ((*(iVar2 + 0x40) & 3) != 0)) {\n                    fcn.00418d80();\n                }\n            }\n            else {\n                fcn.00418d80();\n                fcn.00418d80();\n            }\n            fcn.00418d80();\n            fcn.00418d80();\n        }\n    }\n    else {\n        uVar4 = (***puVar1)();\n        if (param_1 != '\\0') {\n            fcn.00418d80(uVar4);\n        }\n        (****(*(in_EAX + 0x28) + 0x6c))();\n        (**(*param_2 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 960
    },
    "0042499c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042499c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uStack32;\n    int16_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) == 0) && (*(iVar1 + 0xc) != 0)) {\n        iVar2 = 0;\n        fcn.00418b3c(0, 0);\n        uStack32 = 0x4249cb;\n        fcn.00418d48();\n        if (iVar2 != 0) {\n            if (iVar2 == 1) {\n                uStack32 = 6;\n                fcn.00421678(iVar1 + 0x10, in_EAX + 0x2c);\n            }\n            else {\n                uStack32 = 0x424a07;\n                fcn.00420b30();\n            }\n        }\n        *(iVar1 + 8) = uStack32;\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "00424a14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00424a14(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(iVar1 + 0xc) == 0) {\n        if (*(iVar1 + 8) == 0) {\n            puStack32 = 0x424a37;\n            fcn.00420b30();\n        }\n        puStack32 = 0x424a43;\n        uVar2 = fcn.00403220();\n        uStack36 = 0x424aa1;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        iVar3 = fcn.00424960();\n        if (iVar3 == *0x4708a8) {\n            fcn.00402c5c();\n            fcn.00418d80();\n        }\n        else {\n            fcn.00424960();\n            fcn.00421ba4();\n        }\n        *in_FS_OFFSET = uStack40;\n        *(iVar1 + 0xc) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 315
    },
    "00424d0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00424d0c(void)\n\n{\n    char cVar1;\n    \n    *0x46442c = sub.kernel32.dll_MulDiv(8, *0x470898, 0x48);\n    *0x46442c = -*0x46442c;\n    if (*(*0x46fc24 + 0xc) != '\\0') {\n        cVar1 = fcn.00424cc8();\n        if (cVar1 == -0x80) {\n            *0x464433 = *0x424d6c;\n            *0x464437 = *0x424d70;\n            *0x46443b = *0x424d74;\n            *0x46443f = *0x424d78;\n            *0x46442c = sub.kernel32.dll_MulDiv(9, *0x470898, 0x48);\n            *0x46442c = -*0x46442c;\n            *0x464432 = cVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "00424e54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424e54(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x424e6c;\n    fcn.00424e3c();\n    uStack32 = 0x424ef5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    for (var_8h = *(in_EAX + 4); (var_8h != NULL && ((param_2 != var_8h[2] || (param_1 != var_8h[3]))));\n        var_8h = *var_8h) {\n    }\n    if (var_8h == NULL) {\n        puStack28 = &stack0xfffffffc;\n        puVar1 = fcn.004026cc();\n        *puVar1 = *(in_EAX + 4);\n        uVar2 = fcn.00424f08();\n        puVar1[1] = uVar2;\n        puVar1[2] = param_2;\n        puVar1[3] = param_1;\n        *(in_EAX + 4) = puVar1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x424efc;\n    uStack32 = 0x424ef4;\n    fcn.00424e48();\n    return;\n}\n",
        "token_count": 371
    },
    "00425080": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00425080(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x4708ec != 0) {\n        uVar1 = fcn.0041f420();\n        fcn.0041f420(uVar1);\n        iVar2 = fcn.00424e54();\n        return *(iVar2 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 92
    },
    "00425684": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00425684(void)\n\n{\n    uint8_t in_AL;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x42569a;\n    fcn.00404438();\n    uStack28 = 0x425743;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*(in_AL + 0x470924) == '\\0') {\n        if (*0x470920 == 0) {\n            iVar2 = 0;\n            puStack24 = &stack0xfffffffc;\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            if (((in_AL == 0) && (puStack24 = &stack0xfffffffc,  *0x47092c == '\\0')) &&\n               (puStack24 = &stack0xfffffffc,  *0x47090c = fcn.00425684(),  *0x47092c == '\\0')) {\n                fcn.00403f88();\n            }\n            uVar1 = fcn.00404448();\n            in_stack_ffffffd8 = *0x470920;\n            iVar2 = sub.kernel32.dll_GetProcAddress_1(*0x470920, uVar1);\n        }\n        if ((iVar2 != 0) && (in_AL != 0)) {\n            *0x47092c = '\\x01';\n        }\n        *(in_AL + 0x470924) = 1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    iStack32 = 0x42574a;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 428
    },
    "0042576c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042576c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x470924 == '\\0') {\n        *0x4708fc = fcn.00425684();\n        (**0x4708fc)(arg_8h);\n    }\n    else {\n        iVar1 = -1;\n        if (arg_8h - 0x4cU < 2) {\n            iVar1 = 0;\n        }\n        else if (arg_8h == 0x4e) {\n            arg_8h = 0;\n        }\n        else if (arg_8h == 0x4f) {\n            arg_8h = 1;\n        }\n        else if (arg_8h - 0x50U < 2) {\n            iVar1 = 1;\n        }\n        if (iVar1 == -1) {\n            sub.user32.dll_GetSystemMetrics(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "004257f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004257f4(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x470926 == '\\0') {\n        *0x470904 = fcn.00425684();\n        uVar1 = (**0x470904)(arg_8h, arg_ch);\n        return uVar1;\n    }\n    if ((arg_ch & 3) == 0) {\n        if (arg_8h[2] < 1) {\n            return 0;\n        }\n        if (arg_8h[3] < 1) {\n            return 0;\n        }\n        iVar2 = (**0x4708fc)(0);\n        if (iVar2 <= *arg_8h) {\n            return 0;\n        }\n        iVar2 = (**0x4708fc)(1);\n        if (iVar2 <= arg_8h[1]) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 231
    },
    "00425884": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425884(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_10h;\n    \n    if (*0x470925 == '\\0') {\n        *0x470900 = fcn.00425684();\n        uVar1 = (**0x470900)(arg_8h, arg_ch);\n    }\n    else if ((arg_ch & 3) == 0) {\n        iVar2 = sub.user32.dll_IsIconic(arg_8h);\n        if (iVar2 == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n        }\n        else {\n            sub.user32.dll_GetWindowPlacement(arg_8h, &var_2ch);\n        }\n        uVar1 = fcn.004257f4(&var_10h, arg_ch);\n    }\n    else {\n        uVar1 = 0x12340042;\n    }\n    return uVar1;\n}\n",
        "token_count": 231
    },
    "0042591c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042591c(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x470927 == '\\0') {\n        *0x470908 = fcn.00425684();\n        uVar1 = (**0x470908)(arg_8h, arg_ch, arg_10h);\n        return uVar1;\n    }\n    if ((arg_10h & 3) == 0) {\n        if (arg_8h < 0) {\n            return 0;\n        }\n        iVar2 = (**0x4708fc)(0);\n        if (iVar2 <= arg_8h) {\n            return 0;\n        }\n        if (arg_ch < 0) {\n            return 0;\n        }\n        iVar2 = (**0x4708fc)(1);\n        if (iVar2 <= arg_ch) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 232
    },
    "004259b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004259b4(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x470928 == '\\0') {\n        *0x47090c = fcn.00425684();\n        uVar1 = (**0x47090c)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x4708fc)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x4708fc)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x4b < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x425a80);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 396
    },
    "00425a88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425a88(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x470929 == '\\0') {\n        *0x470910 = fcn.00425684();\n        uVar1 = (**0x470910)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x4708fc)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x4708fc)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x4b < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x425b54);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 394
    },
    "00425b5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425b5c(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x47092a == '\\0') {\n        *0x470914 = fcn.00425684();\n        uVar1 = (**0x470914)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x4708fc)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x4708fc)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x4b < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x425c28);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 396
    },
    "00425c30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425c30(int32_t arg_8h, int32_t arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*0x47092b == '\\0') {\n        *0x470918 = fcn.00425684();\n        uVar1 = (**0x470918)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        uVar1 = 0;\n        if (arg_10h != NULL) {\n            var_1ch = 0;\n            var_18h = 0;\n            var_14h = (**0x4708fc)(0);\n            var_10h = (**0x4708fc)(1);\n            if (arg_8h == 0) {\n                if ((arg_ch != 0) && (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    return 1;\n                }\n            }\n            else {\n                var_ch = sub.gdi32.dll_GetClipBox(arg_8h, &var_2ch);\n                iVar2 = sub.gdi32.dll_GetDCOrgEx(arg_8h, &var_8h);\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                sub.user32.dll_OffsetRect(&var_1ch, -var_8h, -var_4h);\n                iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, &var_2ch);\n                if (((iVar2 == 0) || (arg_ch != 0)) &&\n                   (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    if (var_ch != 1) {\n                        return 0;\n                    }\n                    return 1;\n                }\n            }\n            uVar1 = (*arg_10h)(0x12340042, arg_8h, &var_1ch, arg_14h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 550
    },
    "004267cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004267cc(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_20h = 0;\n    uVar5 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    var_10h = 0;\n    iVar4 = 0;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (param_1 != 0) {\n        fcn.00403fdc();\n    }\n    iVar2 = *(*(var_4h + 0x10) + 8);\n    if (0 < iVar2) {\n        if (-1 < iVar2 + -1) {\n            iVar3 = 0;\n            do {\n                iVar1 = fcn.0042543c();\n                iVar1 = (**(**(iVar1 + 4) + 0x10))();\n                if (0 < iVar1) {\n                    iVar4 = iVar4 + 1;\n                    var_10h = iVar3;\n                }\n                iVar3 = iVar3 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (iVar4 == 0) {\n            var_2ch = fcn.00404448();\n            var_28h._0_1_ = 6;\n            uVar5 = 0;\n            fcn.0040b65c(0, &var_2ch);\n            fcn.004039c4();\n        }\n        if (iVar4 == 1) {\n            iVar2 = fcn.0042543c();\n            (**(**(iVar2 + 4) + 0x20))();\n        }\n        if (1 < iVar4) {\n            var_14h = fcn.00403220();\n            iVar4 = *(*(var_4h + 0x10) + 8);\n            if (-1 < iVar4 + -1) {\n                do {\n                    var_1ch = fcn.0042543c();\n                    iVar2 = (**(**(var_1ch + 4) + 0x10))();\n                    if (0 < iVar2) {\n                        var_18h = (**(**(var_1ch + 4) + 0x14))();\n                        iVar2 = (**(*var_18h + 0x14))();\n                        if (-1 < iVar2 + -1) {\n                            var_ch = 0;\n                            var_24h = iVar2;\n                            do {\n                                (**(*var_18h + 0xc))();\n                                (**(*var_14h + 0x3c))();\n                                var_ch = var_ch + 1;\n                                var_24h = var_24h + -1;\n                            } while (var_24h != 0);\n                        }\n                        fcn.00403250();\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            if (*(var_4h + 0xc) == 0) {\n                iVar4 = (**(*var_14h + 0x18))();\n                (**(*var_14h + 0xc))();\n                (**(**(iVar4 + 4) + 0x20))();\n            }\n            else {\n                (**(*var_14h + 0x90))();\n                iVar4 = (**(**(var_4h + 0xc) + 0xc))();\n                if (-1 < iVar4) {\n                    iVar4 = (**(*var_14h + 0x18))();\n                    (**(*var_14h + 0xc))();\n                    (**(**(iVar4 + 4) + 0x20))();\n                }\n            }\n            fcn.00403250();\n        }\n    }\n    *in_FS_OFFSET = uVar5;\n    fcn.00403f88();\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 1011
    },
    "004269e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004269e0(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x426ad3;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.00403fdc();\n        puVar1 = puStack44;\n    }\n    puStack44 = puVar1;\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (iVar3 == 0) {\n        fcn.0040b620();\n        fcn.004039c4();\n    }\n    else if (-1 < iVar3 + -1) {\n        do {\n            fcn.0042543c();\n            fcn.00405860();\n            fcn.0040588c();\n            cVar2 = (**(_pe_dos_header + 0x38))();\n            if (cVar2 != '\\0') {\n                fcn.0040588c();\n                (**(_pe_dos_header + 0x3c))();\n                break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x426ada;\n    uStack48 = 0x426aca;\n    fcn.00404a04();\n    uStack48 = 0x426ad2;\n    fcn.00405848();\n    return;\n}\n",
        "token_count": 445
    },
    "00426bf8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00426bf8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x426c0a;\n    fcn.004058bc();\n    uStack20 = 0x426c47;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0xc) != 0) {\n        puStack16 = &stack0xfffffffc;\n        fcn.00405848();\n    }\n    fcn.00405860();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x426c4e;\n    uStack20 = 0x426c46;\n    fcn.00405848();\n    return;\n}\n",
        "token_count": 213
    },
    "00426c54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426c54(uint arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x426c6d;\n    fcn.00404438();\n    uStack28 = 0x426ce9;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (in_ECX != 0) {\n        puStack24 = &stack0xfffffffc;\n        fcn.00403fdc();\n    }\n    iVar1 = arg_ch;\n    if (iVar1 == 1) {\n        fcn.004269e0();\n    }\n    else if (iVar1 == 2) {\n        fcn.004264f4();\n    }\n    else if (iVar1 == 3) {\n        fcn.00426524();\n    }\n    else {\n        fcn.004266c4(arg_8h, arg_ch);\n        in_stack_ffffffd8 = arg_8h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x426cf0;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 322
    },
    "00426208": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426208(uint param_1, uint *param_2)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    uStack24 = 0x42627e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puVar1 = &stack0xfffffffc;\n    if (*0x470938 == 0) {\n        *0x470938 = fcn.00426320();\n        puVar1 = puStack20;\n    }\n    puStack20 = puVar1;\n    fcn.00426394();\n    fcn.00405860();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x426285;\n    uStack24 = 0x42627d;\n    fcn.00405848();\n    return;\n}\n",
        "token_count": 255
    },
    "0042628c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042628c(void)\n\n{\n    uint *in_EAX;\n    \n    if (in_EAX != NULL) {\n        *in_EAX = 0;\n    }\n    if (*0x470938 == 0) {\n        *0x470938 = fcn.00426320();\n    }\n    fcn.0040588c();\n    return 0;\n}\n",
        "token_count": 84
    },
    "00426524": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00426524(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x4266b6;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*(*(in_EAX + 0x10) + 8) == 1) {\n        puStack44 = 0x426553;\n        puStack32 = &stack0xfffffffc;\n        iVar3 = fcn.0042543c();\n        puStack44 = 0x42655b;\n        cVar2 = (**(**(iVar3 + 4) + 0x18))();\n        if (cVar2 != '\\0') {\n            puStack44 = 0x42656d;\n            iVar3 = fcn.0042543c();\n            puStack44 = 0x426575;\n            (**(**(iVar3 + 4) + 0x1c))();\n        }\n    }\n    else {\n        if (*(in_EAX + 0xc) != 0) {\n            puStack44 = 0x426590;\n            puStack32 = &stack0xfffffffc;\n            piVar4 = fcn.00403220();\n            uStack48 = 0x426651;\n            uStack52 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffcc;\n            var_ch = *(*(in_EAX + 0x10) + 8);\n            puStack44 = &stack0xfffffffc;\n            puVar1 = &stack0xfffffffc;\n            if (-1 < var_ch + -1) {\n                do {\n                    puStack44 = puVar1;\n                    iVar3 = fcn.0042543c();\n                    cVar2 = (**(**(iVar3 + 4) + 0x18))();\n                    if (cVar2 != '\\0') {\n                        (**(**(iVar3 + 4) + 0xc))();\n                        (**(*piVar4 + 0x3c))();\n                    }\n                    var_ch = var_ch + -1;\n                    puVar1 = puStack44;\n                } while (var_ch != 0);\n            }\n            iVar3 = (**(*piVar4 + 0x14))();\n            if (iVar3 < 2) {\n                iVar3 = (**(*piVar4 + 0x18))();\n                (**(**(iVar3 + 4) + 0x1c))();\n            }\n            else {\n                (**(*piVar4 + 0x90))();\n                (**(**(in_EAX + 0xc) + 0x10))();\n                iVar3 = (**(*piVar4 + 0x18))();\n                (**(**(iVar3 + 4) + 0x1c))();\n            }\n            *in_FS_OFFSET = uStack52;\n            puStack44 = 0x4266a0;\n            uStack48 = 0x426650;\n            fcn.00403250();\n            return;\n        }\n        puVar1 = &stack0xfffffffc;\n        if (0 < *(*(in_EAX + 0x10) + 8)) {\n            puStack44 = 0x42666a;\n            iVar3 = fcn.0042543c();\n            puStack44 = 0x426672;\n            cVar2 = (**(**(iVar3 + 4) + 0x18))();\n            puVar1 = puStack32;\n            if (cVar2 != '\\0') {\n                puStack44 = 0x426680;\n                iVar3 = fcn.0042543c();\n                puStack44 = 0x426688;\n                (**(**(iVar3 + 4) + 0x1c))();\n                goto code_r0x004266a0;\n            }\n        }\n        puStack32 = puVar1;\n        puStack44 = 0x42669b;\n        fcn.0040b620();\n        puStack44 = 0x4266a0;\n        fcn.004039c4();\n    }\ncode_r0x004266a0:\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4266bd;\n    uStack36 = 0x4266b5;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 1050
    },
    "00426df4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00426df4(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack16 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack16;\n    *0x470934 = *0x470934 + 1;\n    if ((*0x470934 == 0) && (*0x470938 != 0)) {\n        *0x470938 = 0;\n    }\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 118
    },
    "00426eb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00426eb8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x47096c != NULL) {\n        iVar2 = (**0x47096c)(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x00426ee4;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00426ee4:\n    return -uVar1;\n}\n",
        "token_count": 151
    },
    "00426eec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00426eec(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x470970 != NULL) {\n        iVar2 = (**0x470970)(arg_8h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x00426f0c;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00426f0c:\n    return -uVar1;\n}\n",
        "token_count": 121
    },
    "0042737c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042737c(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = 0x427389;\n    fcn.00427334();\n    uStack12 = 0x427533;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    if (0 < *0x470a40) {\n        *0x470a40 = *0x470a40 + -1;\n    }\n    puStack8 = &stack0xfffffffc;\n    if ((*0x470a3c != 0) && (puStack8 = &stack0xfffffffc,  *0x470a40 == 0)) {\n        iStack20 = *0x470a3c;\n        puStack8 = &stack0xfffffffc;\n        sub.kernel32.dll_FreeLibrary_1();\n        *0x470a3c = 0;\n        *0x47097c = 0;\n        *0x470980 = 0;\n        *0x470984 = 0;\n        *0x470988 = 0;\n        *0x47098c = 0;\n        *0x470990 = 0;\n        *0x470994 = 0;\n        *0x470998 = 0;\n        *0x47099c = 0;\n        *0x4709a0 = 0;\n        *0x4709a4 = 0;\n        *0x4709a8 = 0;\n        *0x4709ac = 0;\n        *0x4709b0 = 0;\n        *0x4709b4 = 0;\n        *0x4709b8 = 0;\n        *0x4709bc = 0;\n        *0x4709c0 = 0;\n        *0x4709c4 = 0;\n        *0x4709c8 = 0;\n        *0x4709cc = 0;\n        *0x4709d0 = 0;\n        *0x4709d4 = 0;\n        *0x4709d8 = 0;\n        *0x4709dc = 0;\n        *0x4709e0 = 0;\n        *0x4709e4 = 0;\n        *0x4709e8 = 0;\n        *0x4709ec = 0;\n        *0x4709f0 = 0;\n        *0x4709f4 = 0;\n        *0x4709f8 = 0;\n        *0x4709fc = 0;\n        *0x470a00 = 0;\n        *0x470a04 = 0;\n        *0x470a08 = 0;\n        *0x470a0c = 0;\n        *0x470a10 = 0;\n        *0x470a14 = 0;\n        *0x470a18 = 0;\n        *0x470a1c = 0;\n        *0x470a20 = 0;\n        *0x470a24 = 0;\n        *0x470a28 = 0;\n        *0x470a2c = 0;\n        *0x470a30 = 0;\n        *0x470a34 = 0;\n    }\n    *in_FS_OFFSET = iStack20;\n    uStack12 = 0x42753a;\n    iStack16 = 0x427532;\n    fcn.0042733c();\n    return;\n}\n",
        "token_count": 811
    },
    "0042753c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0042753c(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffe6c;\n    int32_t iStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_1h;\n    \n    puStack16 = 0x427550;\n    fcn.00427334();\n    uStack20 = 0x4278ef;\n    iStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    *0x470a40 = *0x470a40 + 1;\n    puStack16 = &fcn.0042753c::var_1h + 1;\n    if (*0x470a3c == 0) {\n        puStack16 = &fcn.0042753c::var_1h + 1;\n        *0x470a3c = sub.kernel32.dll_LoadLibraryA(0x427900);\n        if (*0x470a3c != 0) {\n            *0x47097c = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x42790c);\n            *0x470980 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x42791c);\n            *0x470984 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x42792c);\n            *0x470988 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427940);\n            *0x47098c = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427950);\n            *0x470990 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427950);\n            *0x470994 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427970);\n            *0x470998 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427984);\n            *0x47099c = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427998);\n            *0x4709a0 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x4279ac);\n            *0x4709a4 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x4279c8);\n            *0x4709a8 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x4279e0);\n            *0x4709ac = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x4279f0);\n            *0x4709b0 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427a00);\n            *0x4709b4 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427a14);\n            *0x4709b8 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427a3c);\n            *0x4709bc = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427a4c);\n            *0x4709c0 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427a5c);\n            *0x4709c4 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427a6c);\n            *0x4709c8 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427a7c);\n            *0x4709cc = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427a88);\n            *0x4709d0 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427a9c);\n            *0x4709d4 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427ab0);\n            *0x4709d8 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427ac0);\n            *0x4709dc = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427ad0);\n            *0x4709e0 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427ae0);\n            *0x4709e4 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427af0);\n            *0x4709e8 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427b08);\n            *0x4709ec = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427b18);\n            *0x4709f0 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427b2c);\n            *0x4709f4 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427b40);\n            *0x4709f8 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427b58);\n            *0x4709fc = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427b68);\n            *0x470a00 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427b78);\n            *0x470a04 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427b88);\n            *0x470a08 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427b9c);\n            *0x470a0c = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427bac);\n            *0x470a10 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427bbc);\n            *0x470a14 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427bc8);\n            *0x470a18 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427bd8);\n            *0x470a1c = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427bf4);\n            *0x470a20 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427c10);\n            *0x470a24 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427c28);\n            *0x470a28 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427c40);\n            *0x470a2c = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427c54);\n            *0x470a30 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427c74);\n            in_stack_fffffe6c = *0x470a3c;\n            *0x470a34 = sub.kernel32.dll_GetProcAddress_1(*0x470a3c, 0x427c90);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffe6c;\n    fcn.0042733c(0x4278f6);\n    return;\n}\n",
        "token_count": 1772
    },
    "00427ca0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00427ca0(void)\n\n{\n    int32_t iVar1;\n    \n    if (((*0x470a3c != 0) && (iVar1 = (**0x470a10)(),  iVar1 != 0)) && (iVar1 = (**0x470a0c)(),  iVar1 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 89
    },
    "00427cc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00427cc8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x427d10;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x470a38 = *0x470a38 + 1;\n    if (*0x470a38 == 0) {\n        while (0 < *0x470a40) {\n            fcn.0042737c();\n        }\n        fcn.00403250();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 162
    },
    "00428504": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00428504(void)\n\n{\n    uchar *puVar1;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x428556;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x470a6c = *0x470a6c + 1;\n    if (*0x470a6c == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x464734 != 0) {\n            uStack20 = *0x464734;\n            sub.kernel32.dll_GlobalDeleteAtom();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00404a04();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 222
    },
    "00428f4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00428f4c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.0043c624();\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x428fec;\n    fcn.00434410();\n    fcn.00434434();\n    iVar1 = fcn.0041fc38();\n    *(in_EAX + 0x168) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x42914c;\n    iVar1 = fcn.0041ff04();\n    *(in_EAX + 0x16c) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x42914c;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 326
    },
    "00429284": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429284(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffcc;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x429303;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    sub.user32.dll_KillTimer(*(in_EAX + 0x34), 1);\n    if (((*(in_EAX + 0x30) != 0) && (*(in_EAX + 0x40) != '\\0')) && (*(in_EAX + 0x3a) != 0)) {\n        in_stack_ffffffcc = *(in_EAX + 0x34);\n        iVar1 = sub.user32.dll_SetTimer(in_stack_ffffffcc, 1, *(in_EAX + 0x30), 0);\n        if (iVar1 == 0) {\n            fcn.00405d0c();\n            fcn.0040b564();\n            fcn.004039c4();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    fcn.00403f88(0x42930a);\n    return;\n}\n",
        "token_count": 303
    },
    "00429404": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429404(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.0043b420(0, 0x412);\n    uVar1 = sub.user32.dll_GetDCEx(uVar1);\n    *(in_EAX + 0x180) = uVar1;\n    if (*(in_EAX + 0x1a8) == '\\x03') {\n        if (*(in_EAX + 0x170) == 0) {\n            uVar1 = fcn.0041ff04();\n            *(in_EAX + 0x170) = uVar1;\n            fcn.00425080();\n            fcn.00420080();\n        }\n        uVar1 = fcn.004200e0();\n        uVar1 = sub.gdi32.dll_SelectObject(*(in_EAX + 0x180), uVar1);\n        *(in_EAX + 0x1a4) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "00429534": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.00429534(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    fcn.00415a68();\n    cVar1 = *(in_EAX + 0x5b);\n    if (((((cVar1 == '\\x01') || (cVar1 == '\\x02')) || (cVar1 == '\\x03')) || (cVar1 == '\\x04')) &&\n       (iVar2 = fcn.00438150(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.00438114();\n            if ((*(piVar3 + 0x57) != '\\0') && (cVar1 = (**(*piVar3 + 0x50))(),  cVar1 != '\\0')) {\n                fcn.004345f4();\n                if (iStack24 == iStack32) {\n                    if ((*(in_EAX + 0x5b) == '\\x01') || (*(in_EAX + 0x5b) == '\\x03')) {\n                        iStack32 = iStack32 + -1;\n                    }\n                    else {\n                        iStack24 = iStack24 + 1;\n                    }\n                }\n                if (iStack20 == iStack28) {\n                    if ((*(in_EAX + 0x5b) == '\\x01') || (*(in_EAX + 0x5b) == '\\x03')) {\n                        iStack28 = iStack28 + -1;\n                    }\n                    else {\n                        iStack20 = iStack20 + 1;\n                    }\n                }\n                iVar4 = sub.user32.dll_PtInRect();\n                if (iVar4 != 0) {\n                    return piVar3;\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return NULL;\n}\n",
        "token_count": 467
    },
    "00429814": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.00429814(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char in_DL;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    fcn.00436200(arg_8h, arg_ch);\n    if (in_DL == '\\0') {\n        uVar1 = fcn.00429534();\n        *(in_EAX + 0x174) = uVar1;\n        fcn.00415a68();\n        *(in_EAX + 0x178) = var_ch;\n        *(in_EAX + 0x17c) = var_8h;\n        if (*(in_EAX + 0x174) != 0) {\n            if (*(in_EAX + 0x5b) - 3U < 2) {\n                iVar2 = fcn.00434658();\n                *(in_EAX + 0x18c) = iVar2 - *(in_EAX + 0x188);\n                iVar2 = fcn.00438150();\n                if (-1 < iVar2 + -1) {\n                    do {\n                        iVar3 = fcn.00438114();\n                        if ((*(iVar3 + 0x57) != '\\0') && (*(iVar3 + 0x5b) - 3U < 2)) {\n                            *(in_EAX + 0x18c) = *(in_EAX + 0x18c) - *(iVar3 + 0x48);\n                        }\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n                *(in_EAX + 0x18c) = *(in_EAX + 0x18c) + *(*(in_EAX + 0x174) + 0x48);\n            }\n            else {\n                iVar2 = fcn.0043469c();\n                *(in_EAX + 0x18c) = iVar2 - *(in_EAX + 0x188);\n                iVar2 = fcn.00438150();\n                if (-1 < iVar2 + -1) {\n                    do {\n                        iVar3 = fcn.00438114();\n                        if (*(iVar3 + 0x5b) - 1U < 2) {\n                            *(in_EAX + 0x18c) = *(in_EAX + 0x18c) - *(iVar3 + 0x4c);\n                        }\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n                *(in_EAX + 0x18c) = *(in_EAX + 0x18c) + *(*(in_EAX + 0x174) + 0x4c);\n            }\n            fcn.00429c10();\n            fcn.00429404();\n            iVar2 = fcn.0044c6f4();\n            iVar2 = *(iVar2 + 0x220);\n            if (iVar2 != 0) {\n                *(in_EAX + 0x168) = iVar2;\n                *(in_EAX + 0x198) = *(iVar2 + 0x1d8);\n                *(in_EAX + 0x19c) = *(iVar2 + 0x1dc);\n                iVar2 = *(in_EAX + 0x168);\n                *(iVar2 + 0x1dc) = in_EAX;\n                *(iVar2 + 0x1d8) = fcn.00429d24;\n            }\n            if ((*(in_EAX + 0x1a8) == '\\x01') || (*(in_EAX + 0x1a8) == '\\x03')) {\n                fcn.00429480();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 864
    },
    "004299b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004299b8(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (in_EAX[100] != in_EAX[0x68]) {\n        cVar1 = *(in_EAX + 0x5b);\n        if (cVar1 == '\\x01') {\n            puStack16 = 0x429a1c;\n            fcn.00434434();\n        }\n        else {\n            if (cVar1 == '\\x02') {\n                puStack16 = 0x429a99;\n                fcn.00437cb8();\n                uStack20 = 0x429af4;\n                uStack24 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffe8;\n                puStack16 = &stack0xfffffffc;\n                fcn.004343e8();\n                fcn.00434434();\n                *in_FS_OFFSET = uStack24;\n                puStack16 = 0x429afb;\n                uStack20 = 0x429af3;\n                fcn.00437cc0();\n                return;\n            }\n            if (cVar1 == '\\x03') {\n                puStack16 = 0x429a07;\n                fcn.00434410();\n            }\n            else if (cVar1 == '\\x04') {\n                puStack16 = 0x429a2c;\n                fcn.00437cb8();\n                uStack20 = 0x429a87;\n                uStack24 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffe8;\n                puStack16 = &stack0xfffffffc;\n                fcn.004343c4();\n                fcn.00434410();\n                *in_FS_OFFSET = uStack24;\n                puStack16 = 0x429afb;\n                uStack20 = 0x429a86;\n                fcn.00437cc0();\n                return;\n            }\n        }\n        puStack16 = 0x429b06;\n        (**(*in_EAX + 0x88))();\n        if (*(in_EAX + 0x1ba) != 0) {\n            puStack16 = 0x429b25;\n            (*in_EAX[0x6e])();\n        }\n        in_EAX[0x68] = in_EAX[100];\n    }\n    return;\n}\n",
        "token_count": 549
    },
    "00429c28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00429c28(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint8_t in_DL;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = in_DL;\n    fcn.004364b8(arg_8h);\n    if (((var_1h & 8) != 0) && (in_EAX[0x5d] != 0)) {\n        fcn.00429b3c(&var_ch, &var_8h);\n        cVar1 = (**(*in_EAX + 0x94))();\n        if (cVar1 != '\\0') {\n            if ((*(in_EAX + 0x6a) == '\\x01') || (*(in_EAX + 0x6a) == '\\x03')) {\n                fcn.00429480();\n            }\n            in_EAX[100] = var_8h;\n            in_EAX[0x6b] = var_ch;\n            if (*(in_EAX + 0x6a) == '\\x02') {\n                fcn.004299b8();\n            }\n            if ((*(in_EAX + 0x6a) == '\\x01') || (*(in_EAX + 0x6a) == '\\x03')) {\n                fcn.00429480();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 354
    },
    "00429cd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00429cd0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint var_1h;\n    \n    fcn.00436560(arg_8h, arg_ch);\n    if (*(in_EAX + 0x174) != 0) {\n        if ((*(in_EAX + 0x1a8) == '\\x01') || (*(in_EAX + 0x1a8) == '\\x03')) {\n            fcn.00429480();\n        }\n        fcn.004299b8();\n        fcn.0040344c();\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "00429d24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429d24(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    int16_t *in_ECX;\n    \n    if (*in_ECX == 0x1b) {\n        fcn.0040344c();\n    }\n    else if (*(in_EAX + 0x19a) != 0) {\n        (**(in_EAX + 0x198))(in_EAX & 0xffffff00 | arg_8h & 0xff);\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "0042ac08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0042ac08(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            iVar3 = 0x42ac2a;\n            iVar1 = fcn.00416ec4();\n            if ((param_2 == *(iVar1 + 0x34)) && (*(iVar1 + 0x30) == param_1)) goto code_r0x0042ac5d;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    iVar1 = fcn.0042aa68(param_1);\n    fcn.00416d68();\n    iVar3 = param_1;\ncode_r0x0042ac5d:\n    return CONCAT44(iVar3, iVar1);\n}\n",
        "token_count": 231
    },
    "0042ac68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ac68(uint param_1, int32_t param_2)\n\n{\n    if ((param_2 != 0) && (*(param_2 + 0x84) == 0)) {\n        fcn.00417008();\n        fcn.00403250();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "0042ac98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0042ac98(uint param_1, char param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403220();\n    iVar2 = fcn.00422f44();\n    *(in_EAX + 4) = iVar2;\n    *(iVar2 + 0x14) = in_EAX;\n    *(iVar2 + 0x10) = fcn.0042adcc;\n    *(in_EAX + 0x1c) = 0x8080;\n    *(in_EAX + 0x20) = 1;\n    uVar1 = 0;\n    do {\n        *(in_EAX + 0xc + uVar1 * 4) = 0xffffffff;\n        uVar1 = uVar1 + 1;\n    } while (uVar1 != 4);\n    if (*0x464948 == 0) {\n        *0x464948 = fcn.0042ab94();\n    }\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 350
    },
    "0042adcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042adcc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 == *(in_EAX + 4)) {\n        uVar1 = fcn.004235f8();\n        *(in_EAX + 0x1c) = uVar1;\n        fcn.0042ad88();\n        if (*(in_EAX + 0x2a) != 0) {\n            (**(in_EAX + 0x28))();\n        }\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0042ae9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.0042ae9c(uint param_1, uint8_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack112;\n    uint uStack108;\n    uint *puVar9;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_38h;\n    uint var_28h;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t var_5h;\n    \n    var_5h._0_1_ = param_2;\n    if ((param_2 == 2) && (*(in_EAX + 0x20) < 3)) {\n        var_5h._0_1_ = 0;\n    }\n    iVar4 = *(in_EAX + 0xc + var_5h * 4);\n    if (iVar4 != -1) {\n        return iVar4;\n    }\n    puStack76 = 0x42aede;\n    unique0x100005ae = in_EAX;\n    uVar2 = (**(**(in_EAX + 4) + 0x2c))();\n    puStack76 = 0x42aeeb;\n    uVar3 = (**(**(stack0xfffffff8 + 4) + 0x20))();\n    if ((uVar2 | uVar3) == 0) {\n        return -1;\n    }\n    puStack76 = 0x42aefe;\n    iVar4 = (**(**(stack0xfffffff8 + 4) + 0x2c))();\n    iVar4 = iVar4 / *(stack0xfffffff8 + 0x20);\n    puStack76 = 0x42af17;\n    uVar5 = (**(**(stack0xfffffff8 + 4) + 0x20))();\n    if (*(stack0xfffffff8 + 8) == 0) {\n        if (*0x464948 == 0) {\n            puStack76 = 0x42af37;\n            *0x464948 = fcn.0042ab94();\n        }\n        puStack76 = 0x42af4a;\n        uVar6 = fcn.0042ac08();\n        *(stack0xfffffff8 + 8) = uVar6;\n    }\n    puStack76 = 0x42af5c;\n    var_ch = fcn.00422f44();\n    uStack80 = 0x42b44b;\n    iStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    (**(*var_ch + 0x40))();\n    (**(*var_ch + 0x34))();\n    fcn.00415a90(&fcn.0042ae9c::var_28h, uVar5);\n    fcn.0042350c();\n    fcn.004200ac();\n    (**(**(stack0xfffffff8 + 4) + 0x24))();\n    fcn.00422cd4();\n    (**(*var_ch + 0x38))();\n    puVar9 = 0x42afe7;\n    fcn.00415a90(&fcn.0042ae9c::var_38h, uVar5);\n    if (var_5h != 0) {\n        if (var_5h == 1) {\n            var_14h = NULL;\n            var_10h = NULL;\n            uStack108 = 0x42b40f;\n            iStack112 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff90;\n            var_14h = fcn.00422f44();\n            var_10h = fcn.00422f44();\n            (**(*var_10h + 8))();\n            (**(*var_10h + 0x6c))();\n            if (*(stack0xfffffff8 + 0x20) < 2) {\n                (**(*var_14h + 8))();\n                (**(*var_14h + 0x6c))();\n                fcn.0042350c();\n                fcn.004200ac();\n                (**(*var_14h + 0x40))();\n                cVar1 = fcn.004235c8();\n                if (cVar1 != '\\0') {\n                    fcn.0042350c();\n                    fcn.0041f8e0();\n                    fcn.0042427c();\n                    fcn.0042350c();\n                    fcn.004200ac();\n                }\n                fcn.0042427c();\n                fcn.0042350c();\n                fcn.004200ac();\n                fcn.004204cc();\n                fcn.004200ac();\n                uVar6 = fcn.0042084c(0);\n                sub.gdi32.dll_SetTextColor(uVar6);\n                uVar6 = fcn.0042084c(0xffffff);\n                sub.gdi32.dll_SetBkColor(uVar6);\n                fcn.0042350c(0, 0, 0xe20746);\n                uVar6 = fcn.0042084c();\n                uVar6 = fcn.0042084c(1, 1, iVar4, uVar5, uVar6);\n                sub.gdi32.dll_BitBlt(uVar6);\n                fcn.004200ac();\n                uVar6 = fcn.0042084c(0);\n                sub.gdi32.dll_SetTextColor(uVar6);\n                uVar6 = fcn.0042084c(0xffffff);\n                sub.gdi32.dll_SetBkColor(uVar6);\n                fcn.0042350c(0, 0, 0xe20746);\n                uVar6 = fcn.0042084c();\n                iVar8 = fcn.0042084c(0, 0, iVar4, uVar5, uVar6);\n                sub.gdi32.dll_BitBlt();\n            }\n            else {\n                var_18h = fcn.0042350c();\n                puVar9 = &fcn.0042ae9c::var_38h;\n                fcn.0042350c();\n                fcn.0042031c(puVar9);\n                fcn.0042427c();\n                (**(*var_14h + 0x40))();\n                (**(*var_14h + 0x34))();\n                fcn.0042350c();\n                fcn.004200ac();\n                puVar9 = &fcn.0042ae9c::var_38h;\n                uVar6 = fcn.0042350c();\n                fcn.0042350c(uVar6);\n                fcn.0042031c(puVar9);\n                fcn.004200ac();\n                uVar6 = fcn.0042084c();\n                sub.gdi32.dll_SetTextColor(uVar6, 0);\n                sub.gdi32.dll_SetBkColor(uVar6, 0xffffff);\n                fcn.0042350c(0, 0, 0xe20746);\n                uVar7 = fcn.0042084c();\n                sub.gdi32.dll_BitBlt(uVar6, 0, 0, iVar4, uVar5, uVar7);\n                fcn.0042350c();\n                fcn.004200ac();\n                puVar9 = &fcn.0042ae9c::var_38h;\n                uVar6 = fcn.0042350c();\n                fcn.0042350c(uVar6);\n                fcn.0042031c(puVar9);\n                fcn.004200ac();\n                uVar6 = fcn.0042084c();\n                sub.gdi32.dll_SetTextColor(uVar6, 0);\n                sub.gdi32.dll_SetBkColor(uVar6, 0xffffff);\n                fcn.0042350c(0, 0, 0xe20746);\n                uVar7 = fcn.0042084c();\n                sub.gdi32.dll_BitBlt(uVar6, 0, 0, iVar4, uVar5, uVar7);\n                uVar6 = fcn.0041f420();\n                fcn.0042350c(uVar6);\n                fcn.004200ac();\n                puVar9 = &fcn.0042ae9c::var_38h;\n                uVar6 = fcn.0042350c();\n                fcn.0042350c(uVar6);\n                fcn.0042031c(puVar9);\n                fcn.004200ac();\n                iVar8 = fcn.0042084c();\n                sub.gdi32.dll_SetTextColor(iVar8, 0);\n                sub.gdi32.dll_SetBkColor(iVar8, 0xffffff);\n                fcn.0042350c(0, 0, 0xe20746);\n                uVar6 = fcn.0042084c();\n                sub.gdi32.dll_BitBlt(iVar8, 0, 0, iVar4, uVar5, uVar6);\n            }\n            *in_FS_OFFSET = iVar8;\n            fcn.00403250(0x42b416);\n            iVar4 = fcn.00403250();\n            return iVar4;\n        }\n        if (1 < var_5h - 2) goto code_r0x0042b435;\n    }\n    puVar9 = &fcn.0042ae9c::var_38h;\n    uStack108 = 0x42b008;\n    uStack108 = fcn.0042350c();\n    iStack112 = 0x42b011;\n    fcn.0042350c();\n    uStack108 = 0x42b01a;\n    fcn.0042031c(puVar9);\n    if (*(*(stack0xfffffff8 + 4) + 0x38) == '\\x01') {\n        uStack108 = 0x42b03a;\n        uVar5 = fcn.0042ab38();\n        *(stack0xfffffff8 + 0xc + var_5h * 4) = uVar5;\n    }\n    else {\n        uStack108 = 0x42b05e;\n        uVar5 = fcn.0042ab38();\n        *(stack0xfffffff8 + 0xc + var_5h * 4) = uVar5;\n    }\ncode_r0x0042b435:\n    *in_FS_OFFSET = puVar9;\n    iVar4 = fcn.00403250();\n    return iVar4;\n}\n",
        "token_count": 2429
    },
    "0042b474": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b474(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *arg_10h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 4) != 0) && (iVar2 = (**(**(in_EAX + 4) + 0x2c))(),  iVar2 != 0)) &&\n       (iVar2 = (**(**(in_EAX + 4) + 0x20))(),  iVar2 != 0)) {\n        uVar3 = fcn.0042ae9c();\n        fcn.0042cf2c();\n        cVar1 = fcn.0042d00c();\n        if (cVar1 == '\\0') {\n            if ((arg_8h == '\\0') && (arg_ch != '\\x03')) {\n                uVar4 = fcn.0041f420(0x1fffffff, 0);\n                uVar4 = fcn.0042084c(*var_8h, var_8h[1], 0, 0, uVar4);\n                uVar3 = fcn.00441d04(uVar3, uVar4);\n                sub.comctl32.dll_ImageList_DrawEx(uVar3);\n            }\n            else {\n                uVar4 = fcn.0042084c(*var_8h, var_8h[1], 0, 0, 0x1fffffff, 0x1fffffff, 1);\n                uVar3 = fcn.00441d04(uVar3, uVar4);\n                sub.comctl32.dll_ImageList_DrawEx(uVar3);\n            }\n        }\n        else {\n            var_24h = *var_8h;\n            var_20h = var_8h[1];\n            iVar2 = (**(**(in_EAX + 4) + 0x2c))();\n            var_1ch = iVar2 / *(in_EAX + 0x20) + var_24h;\n            var_18h = (**(**(in_EAX + 4) + 0x20))();\n            var_18h = var_18h + var_20h;\n            fcn.0042cf2c();\n            fcn.0042d20c();\n            arg_10h = &var_24h;\n            uVar4 = fcn.00441d04();\n            uVar5 = fcn.0042084c();\n            fcn.0042cf2c(uVar5);\n            fcn.0042d15c(uVar3, uVar4, arg_10h);\n        }\n    }\n    return;\n}\n",
        "token_count": 670
    },
    "0042b6b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0042b6b8(uint32_t arg_8h, uint *arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, \n            uint arg_20h, int32_t *arg_24h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    uint var_40h;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t dx;\n    int32_t dy;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((arg_8h & 2) == 2) {\n        if (arg_1ch == 0) {\n            arg_1ch._0_1_ = 1;\n        }\n        else if (arg_1ch == 1) {\n            arg_1ch._0_1_ = 0;\n        }\n    }\n    var_4h = in_EAX;\n    fcn.00415a68();\n    if (*(var_4h + 4) == 0) {\n        fcn.00415a68();\n    }\n    else {\n        uVar2 = (**(**(var_4h + 4) + 0x20))();\n        (**(**(var_4h + 4) + 0x2c))(uVar2);\n        fcn.00415a68();\n    }\n    iVar3 = fcn.00404248();\n    if (iVar3 < 1) {\n        fcn.00415a90(&var_40h, 0);\n        *arg_ch = var_40h;\n        arg_ch[1] = uStack64;\n        arg_ch[2] = uStack60;\n        arg_ch[3] = uStack56;\n        fcn.00415a68();\n    }\n    else {\n        fcn.00415a90(&var_40h, 0);\n        *arg_ch = var_40h;\n        arg_ch[1] = uStack64;\n        arg_ch[2] = uStack60;\n        arg_ch[3] = uStack56;\n        uVar2 = fcn.00404248(arg_ch, arg_8h | 0x400);\n        uVar2 = fcn.00404448(uVar2);\n        uVar2 = fcn.0042084c(uVar2);\n        sub.user32.dll_DrawTextA(uVar2);\n        fcn.00415a68();\n    }\n    if (arg_1ch < 2) {\n        uVar4 = (var_14h - var_1ch) + 1;\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        arg_10h[1] = iVar3;\n        uVar4 = (var_14h - var_24h) + 1;\n        dy = uVar4 >> 1;\n        if (dy < 0) {\n            dy = dy + ((uVar4 & 1) != 0);\n        }\n    }\n    else {\n        uVar4 = (var_18h - var_20h) + 1;\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        *arg_10h = iVar3;\n        uVar4 = (var_18h - var_28h) + 1;\n        dx = uVar4 >> 1;\n        if (dx < 0) {\n            dx = dx + ((uVar4 & 1) != 0);\n        }\n    }\n    if ((var_28h == 0) || (var_20h == 0)) {\n        arg_14h = 0;\n    }\n    if (arg_18h == -1) {\n        if (arg_14h == -1) {\n            fcn.00415a68();\n            if (arg_1ch < 2) {\n                var_30h = var_18h - var_30h;\n            }\n            else {\n                var_30h = var_14h - var_2ch;\n            }\n            arg_18h = var_30h / 3;\n            arg_14h = arg_18h;\n        }\n        else {\n            fcn.00415a68();\n            if (arg_1ch < 2) {\n                uVar4 = (var_18h - var_30h) + 1;\n                arg_18h = uVar4 >> 1;\n                if (arg_18h < 0) {\n                    arg_18h = arg_18h + ((uVar4 & 1) != 0);\n                }\n            }\n            else {\n                uVar4 = (var_14h - var_2ch) + 1;\n                arg_18h = uVar4 >> 1;\n                if (arg_18h < 0) {\n                    arg_18h = arg_18h + ((uVar4 & 1) != 0);\n                }\n            }\n        }\n    }\n    else if (arg_14h == -1) {\n        fcn.00415a68();\n        if (arg_1ch < 2) {\n            arg_14h = var_30h - var_28h >> 1;\n            if (arg_14h < 0) {\n                arg_14h = arg_14h + ((var_30h - var_28h & 1U) != 0);\n            }\n        }\n        else {\n            arg_14h = var_2ch - var_24h >> 1;\n            if (arg_14h < 0) {\n                arg_14h = arg_14h + ((var_2ch - var_24h & 1U) != 0);\n            }\n        }\n    }\n    if (arg_1ch == 0) {\n        *arg_10h = arg_18h;\n        dx = arg_18h + var_20h + arg_14h;\n    }\n    else if (arg_1ch == 1) {\n        var_20h = (var_18h - arg_18h) - var_20h;\n        *arg_10h = var_20h;\n        dx = (var_20h - arg_14h) - var_28h;\n    }\n    else if (arg_1ch == 2) {\n        arg_10h[1] = arg_18h;\n        dy = arg_18h + var_1ch + arg_14h;\n    }\n    else if (arg_1ch == 3) {\n        var_1ch = (var_14h - arg_18h) - var_1ch;\n        arg_10h[1] = var_1ch;\n        dy = (var_1ch - arg_14h) - var_24h;\n    }\n    *arg_10h = *arg_10h + *in_ECX + *arg_24h;\n    arg_10h[1] = arg_10h[1] + in_ECX[1] + arg_24h[1];\n    fcn.0042cf2c();\n    cVar1 = fcn.0042d00c();\n    if (cVar1 == '\\0') {\n        sub.user32.dll_OffsetRect(arg_ch, *in_ECX + dx + *arg_24h, in_ECX[1] + dy + arg_24h[1]);\n    }\n    else {\n        sub.user32.dll_OffsetRect(arg_ch, *in_ECX + dx, in_ECX[1] + dy);\n    }\n    return;\n}\n",
        "token_count": 1827
    },
    "0042bb34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0042bb34(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    iVar1 = fcn.0042ac98();\n    in_EAX[0x5b] = iVar1;\n    iVar1 = in_EAX[0x5b];\n    *(iVar1 + 0x2c) = in_EAX;\n    *(iVar1 + 0x28) = 0x42c364;\n    fcn.0043c624();\n    uVar2 = 0x16;\n    (**(*in_EAX + 0x84))(0x16, 0x17);\n    in_EAX[0x14] = *0x42bbf0;\n    fcn.00434d70();\n    fcn.00434de4();\n    in_EAX[0x5d] = 4;\n    in_EAX[0x5f] = -1;\n    *(in_EAX + 0x173) = 0;\n    *(in_EAX + 0x5e) = 1;\n    *0x46494c = *0x46494c + 1;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 384
    },
    "0042bc2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042bc2c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint uVar10;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint var_28h;\n    uint lprc;\n    uint uStack25;\n    uint uStack21;\n    uint uStack17;\n    char var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack84 = &stack0xfffffffc;\n    uStack88 = 0x42c056;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack92;\n    cVar1 = (**(*in_EAX + 0x50))();\n    if (cVar1 == '\\0') {\n        *(in_EAX + 0x182) = 1;\n        *(in_EAX + 0x171) = 0;\n    }\n    else if (*(in_EAX + 0x182) == '\\x01') {\n        if ((*(in_EAX + 0x5c) == '\\0') || (in_EAX[0x5a] == 0)) {\n            *(in_EAX + 0x182) = 0;\n        }\n        else {\n            *(in_EAX + 0x182) = 3;\n        }\n    }\n    fcn.0042076c();\n    fcn.0042cf2c();\n    cVar1 = fcn.0042d00c();\n    if (cVar1 == '\\0') {\n        fcn.00415a90(&lprc, in_EAX[0x13]);\n        if (*(in_EAX + 0x60) == '\\0') {\n            uVar2 = 0x2010;\n            if (*(in_EAX + 0x182) - 2U < 2) {\n                uVar2 = 0x2210;\n            }\n            uVar2 = fcn.0042084c(&lprc, 4, uVar2);\n            sub.user32.dll_DrawFrameControl(uVar2);\n        }\n        else {\n            if ((*(in_EAX + 0x182) - 2U < 2) ||\n               (((*(in_EAX + 0x181) != '\\0' && (*(in_EAX + 0x182) != '\\x01')) || ((*(in_EAX + 7) & 0x10) != 0)))) {\n                uVar2 = fcn.0042084c(&lprc, *((*(in_EAX + 0x182) - 2U < 2) * 4 + 0x464950), \n                                     *(*(in_EAX + 0x5e) * 4 + 0x464958) | 0xf);\n                sub.user32.dll_DrawEdge(uVar2);\n            }\n            else if (*(in_EAX + 0x5e) == '\\0') {\n                fcn.004200ac();\n                fcn.004204cc();\n            }\n            sub.user32.dll_InflateRect(&lprc, 0xffffffff, 0xffffffff);\n        }\n        if (*(in_EAX + 0x182) - 2U < 2) {\n            if ((*(in_EAX + 0x182) == '\\x03') && ((*(in_EAX + 0x60) == '\\0' || (*(in_EAX + 0x181) == '\\0')))) {\n                fcn.00425080();\n                fcn.00420080();\n                fcn.004204cc();\n            }\n            var_8h = 1;\n            var_4h = 1;\n        }\n        else {\n            var_8h = 0;\n            var_4h = 0;\n        }\n        puVar9 = &var_8h;\n        fcn.00434c44();\n        uVar10 = 0;\n        uVar8 = *(in_EAX + 0x173);\n        iVar7 = in_EAX[0x5f];\n        uVar6 = in_EAX[0x5d];\n        uVar3 = uVar6 & 0xffffff00 | *(in_EAX + 0x182);\n        uVar4 = uVar6 & 0xffffff00 | *(in_EAX + 0x5e);\n        uVar2 = fcn.00436f18();\n        puVar5 = &var_38h;\n        fcn.0042b9e4(puVar5, uVar2, uVar4, uVar3, uVar6, iVar7, uVar8, uVar10, puVar9);\n    }\n    else {\n        fcn.0042084c();\n        fcn.00431da8();\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 == '\\0') {\n            var_9h = '\\x05';\n        }\n        else if (*(in_EAX + 0x182) - 2U < 2) {\n            var_9h = '\\x04';\n        }\n        else if (*(in_EAX + 0x181) == '\\0') {\n            var_9h = '\\x02';\n        }\n        else {\n            var_9h = '\\x03';\n        }\n        cVar1 = '\\0';\n        if (*(in_EAX + 0x60) != '\\0') {\n            if (var_9h == '\\x02') {\n                cVar1 = '\\x02';\n            }\n            else if (var_9h == '\\x03') {\n                cVar1 = '\\x03';\n            }\n            else if (var_9h == '\\x04') {\n                cVar1 = '\\x04';\n            }\n            else if (var_9h == '\\x05') {\n                cVar1 = '\\x05';\n            }\n        }\n        (**(*in_EAX + 0x44))();\n        if (cVar1 == '\\0') {\n            fcn.0042cf2c();\n            fcn.0042d20c();\n            puVar5 = &lprc;\n            uVar10 = 0;\n            uVar2 = fcn.0042084c();\n            fcn.0042cf2c(uVar2);\n            fcn.0042d118(uVar10, puVar5);\n            puVar5 = &lprc;\n            puVar9 = &var_38h;\n            uVar2 = fcn.0042084c();\n            fcn.0042cf2c(uVar2);\n            fcn.0042d07c(puVar9, puVar5);\n            lprc = var_38h;\n            uStack25 = uStack56;\n            uStack21 = uStack52;\n            uStack17 = uStack48;\n        }\n        else {\n            fcn.0042cf2c();\n            fcn.0042d2cc();\n            puVar5 = &lprc;\n            uVar10 = 0;\n            uVar2 = fcn.0042084c();\n            fcn.0042cf2c(uVar2);\n            fcn.0042d118(uVar10, puVar5);\n            puVar5 = &lprc;\n            puVar9 = &var_38h;\n            uVar2 = fcn.0042084c();\n            fcn.0042cf2c(uVar2);\n            fcn.0042d07c(puVar9, puVar5);\n            lprc = var_38h;\n            uStack25 = uStack56;\n            uStack21 = uStack52;\n            uStack17 = uStack48;\n        }\n        if (var_9h == '\\x04') {\n            if (cVar1 != '\\0') {\n                fcn.0041f8e0();\n            }\n            fcn.00415a68();\n        }\n        else {\n            fcn.00415a68();\n        }\n        puVar9 = &var_8h;\n        fcn.00434c44();\n        uVar10 = 0;\n        uVar8 = *(in_EAX + 0x173);\n        iVar7 = in_EAX[0x5f];\n        uVar6 = in_EAX[0x5d];\n        uVar3 = uVar6 & 0xffffff00 | *(in_EAX + 0x182);\n        uVar4 = uVar6 & 0xffffff00 | *(in_EAX + 0x5e);\n        uVar2 = fcn.00436f18();\n        puVar5 = &var_38h;\n        fcn.0042b9e4(puVar5, uVar2, uVar4, uVar3, uVar6, iVar7, uVar8, uVar10, puVar9);\n    }\n    *in_FS_OFFSET = puVar5;\n    fcn.00403fac(0x42c05d);\n    return;\n}\n",
        "token_count": 2077
    },
    "0042c064": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042c064(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    uchar auStack16 [8];\n    \n    if (*(in_EAX + 0x60) != '\\0') {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 != '\\0') {\n            sub.user32.dll_GetCursorPos(auStack16);\n            piVar2 = fcn.00433500();\n            *(in_EAX + 0x181) = in_EAX != piVar2;\n            if (in_EAX != piVar2) {\n                fcn.00435dec(0);\n            }\n            else {\n                fcn.00435dec(0);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "0042c0f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0042c0f4(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    char in_DL;\n    uint var_1h;\n    \n    fcn.00436200(arg_8h, arg_ch);\n    if (in_DL == '\\0') {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 != '\\0') {\n            if (*(in_EAX + 0x5c) == '\\0') {\n                *(in_EAX + 0x182) = 2;\n                (**(*in_EAX + 0x7c))();\n            }\n            *(in_EAX + 0x171) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0042c14c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0042c14c(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    char var_2h;\n    uint var_1h;\n    \n    fcn.004364b8(arg_8h);\n    if (*(in_EAX + 0x171) == '\\0') {\n        if (*(in_EAX + 0x181) == '\\0') {\n            fcn.0042c064();\n        }\n    }\n    else {\n        if (*(in_EAX + 0x5c) == '\\0') {\n            var_2h = '\\0';\n        }\n        else {\n            var_2h = '\\x03';\n        }\n        if (-1 < in_ECX) {\n            iVar1 = fcn.00434658();\n            if ((in_ECX < iVar1) && (-1 < arg_8h)) {\n                iVar1 = fcn.0043469c();\n                if (arg_8h <= iVar1) {\n                    if (*(in_EAX + 0x5c) == '\\0') {\n                        var_2h = '\\x02';\n                    }\n                    else {\n                        var_2h = '\\x03';\n                    }\n                }\n            }\n        }\n        if (var_2h != *(in_EAX + 0x182)) {\n            *(in_EAX + 0x182) = var_2h;\n            (**(*in_EAX + 0x7c))();\n        }\n    }\n    return;\n}\n",
        "token_count": 357
    },
    "0042c1ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.0042c1ec(int32_t arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint var_2h;\n    \n    fcn.00436560(arg_8h, arg_ch);\n    if (*(in_EAX + 0x171) != '\\0') {\n        *(in_EAX + 0x171) = 0;\n        if ((((arg_ch < 0) || (iVar2 = fcn.00434658(),  iVar2 <= arg_ch)) || (arg_8h < 0)) ||\n           (iVar2 = fcn.0043469c(),  iVar2 < arg_8h)) {\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n        if (in_EAX[0x5a] == 0) {\n            *(in_EAX + 0x182) = 0;\n            *(in_EAX + 0x181) = 0;\n            if ((bVar1) && (1 < *(in_EAX + 0x182) - 2U)) {\n                (**(*in_EAX + 0x7c))();\n            }\n        }\n        else if (bVar1) {\n            fcn.0042c3a4();\n            if (*(in_EAX + 0x5c) != '\\0') {\n                (**(*in_EAX + 0x80))();\n            }\n        }\n        else {\n            if (*(in_EAX + 0x5c) != '\\0') {\n                *(in_EAX + 0x182) = 3;\n            }\n            (**(*in_EAX + 0x80))();\n        }\n        if (bVar1) {\n            fcn.0040344c();\n        }\n        fcn.0042c064();\n        return;\n    }\n    return;\n}\n",
        "token_count": 440
    },
    "0042c36c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042c36c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x168) != 0) && (*(in_EAX + 0x30) != 0)) {\n        fcn.00438170(0xb018, *(in_EAX + 0x168));\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0042c3a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c3a4(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[0x5a] == 0) {\n        param_2 = '\\0';\n    }\n    if ((param_2 != *(in_EAX + 0x5c)) && ((*(in_EAX + 0x5c) == '\\0' || (*(in_EAX + 0x172) != '\\0')))) {\n        *(in_EAX + 0x5c) = param_2;\n        if (param_2 == '\\0') {\n            *(in_EAX + 0x182) = 0;\n            (**(*in_EAX + 0x80))();\n        }\n        else {\n            if (*(in_EAX + 0x182) == '\\0') {\n                (**(*in_EAX + 0x7c))();\n            }\n            *(in_EAX + 0x182) = 3;\n        }\n        if (param_2 != '\\0') {\n            fcn.0042c36c();\n        }\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "0042c5b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c5b0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42c639;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00434c44();\n    cVar1 = fcn.0044c65c();\n    if (cVar1 != '\\0') {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if ((((cVar1 != '\\0') && (*(in_EAX + 0x57) != '\\0')) && (in_EAX[0xc] != 0)) && (*(in_EAX[0xc] + 0x1a6) != '\\0'))\n        {\n            fcn.0040344c();\n            *(param_2 + 0xc) = 1;\n            goto code_r0x0042c623;\n        }\n    }\n    (**(*in_EAX + -0x10))();\ncode_r0x0042c623:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42c640;\n    uStack24 = 0x42c638;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 340
    },
    "0042c7e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c7e8(char param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    fcn.00436b0c();\n    cVar1 = fcn.004033dc();\n    if (cVar1 != '\\0') {\n        if ((param_1 != '\\0') || (*(in_EAX + 0x168) == 0)) {\n            fcn.0042c430();\n        }\n        piVar2 = fcn.0042c308();\n        cVar1 = (**(*piVar2 + 0x1c))();\n        if ((((cVar1 != '\\0') && (*(param_2 + 0x5c) != 0)) && (*(*(param_2 + 0x5c) + 0x38) != 0)) &&\n           (-1 < *(param_2 + 0x80))) {\n            iVar3 = fcn.00442028();\n            if (*(param_2 + 0x80) < iVar3) {\n                fcn.0042c758(&stack0xfffffffc);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "0042ca9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042ca9c(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42cae1;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x470acc = *0x470acc + 1;\n    if (*0x470acc == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x464978 != 0) {\n            iStack20 = *0x464978;\n            sub.kernel32.dll_FreeLibrary_1();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00403f88();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 220
    },
    "0042caf4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042caf4(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42cb38;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x470ad0 = *0x470ad0 + 1;\n    if (((*0x470ad0 == 0) && (*0x470ad8 != '\\0')) && (*0x470ad4 != 0)) {\n        iStack20 = *0x470ad4;\n        sub.kernel32.dll_FreeLibrary_1();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 187
    },
    "0042cc24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0042cc24(void)\n\n{\n    if (*0x470aec == 0) {\n        *0x470aec = fcn.0040bdfc();\n    }\n    return *0x470aec;\n}\n",
        "token_count": 53
    },
    "0042cc84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042cc84(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42ccf3;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x470ae0 = *0x470ae0 + 1;\n    if (*0x470ae0 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x470ae4 != 0) {\n            iStack20 = *0x470ae4;\n            sub.kernel32.dll_FreeLibrary_1();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x470ae8 != 0) {\n            sub.kernel32.dll_FreeLibrary_1(*0x470ae8);\n        }\n        fcn.004049b8();\n        fcn.004049b8();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 265
    },
    "0042cf2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0042cf2c(void)\n\n{\n    if (*0x470af4 == 0) {\n        *0x470af4 = (**(*0x464994 + 4))();\n    }\n    return *0x470af4;\n}\n",
        "token_count": 59
    },
    "0042cfcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042cfcc(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if ((*(in_EAX + 6) != '\\0') && (*(in_EAX + 8 + (param_2 & 0xff) * 4) == 0)) {\n        uVar1 = (***0x46f7f4)(0, *((param_2 & 0x7f) * 4 + 0x46499c));\n        *(in_EAX + 8 + (param_2 & 0x7f) * 4) = uVar1;\n    }\n    return *(in_EAX + 8 + (param_2 & 0xff) * 4);\n}\n",
        "token_count": 175
    },
    "0042d00c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042d00c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 5) != '\\0') && (*(in_EAX + 6) != '\\0')) && (*(in_EAX + 4) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "0042d1a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d1a4(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch == '\\0') || (arg_10h == 0)) {\n        cVar1 = '\\x01';\n    }\n    else {\n        uVar2 = fcn.0042cfcc(*(arg_10h + 4), *(arg_10h + 8));\n        iVar3 = (***0x46f7dc)(uVar2);\n        cVar1 = '\\x01' - (iVar3 == 0);\n    }\n    if (cVar1 != '\\0') {\n        (***0x46f9fc)(in_EDX, in_ECX, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "0042d860": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042d860(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 6) != '\\0') {\n        fcn.0042d038();\n    }\n    uVar1 = fcn.00427ca0();\n    *(in_EAX + 6) = uVar1;\n    return;\n}\n",
        "token_count": 84
    },
    "0042e2a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042e2a8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.0043714c();\n    if ((*(*0x46fc24 + 0xc) != '\\0') && (**0x46fc18 == 2)) {\n        *(in_EAX + 0x184) = 0;\n    }\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 184
    },
    "0042e444": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042e444(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    fcn.004382ac();\n    if (*(in_EAX + 0x209) != '\\0') {\n        *(param_2 + 4) = *(param_2 + 4) | 0x2000;\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0042ef50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042ef50(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x42efa8;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*0x470b00 != NULL) {\n        fcn.0042eb04();\n        (**(**0x470b00 + 0x10))();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x42efaf;\n    uStack28 = 0x42efa7;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 177
    },
    "0042efb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042efb8(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack296;\n    uint uStack292;\n    uchar *puStack288;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    puStack288 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack292 = 0x42f0ae;\n    uStack296 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed8;\n    var_108h._0_1_ = 0xb;\n    var_10ch = param_2;\n    fcn.00408c64(0, &fcn.0042efb8::var_10ch);\n    fcn.0042eb04();\n    uVar2 = 0x42f01e;\n    cVar1 = fcn.0042f448();\n    if (cVar1 != '\\0') {\n        uVar2 = 0;\n        fcn.004041f8();\n        cVar1 = fcn.0042f3a0(uVar2);\n        if ((cVar1 != '\\0') && (var_4h != 0)) {\n            *(in_EAX + 0x10) = 1;\n            fcn.004041f8();\n            uVar2 = fcn.00404448(0x102, &fcn.0042efb8::var_104h);\n            uVar2 = (**(**(in_EAX + 0x1c) + 0xc))(uVar2);\n            sub.user32.dll_WinHelpA();\n        }\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00403f88(0x42f0b5);\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 460
    },
    "0042f0cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042f0cc(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42f12e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*0x470b00 != NULL) {\n        fcn.0042eb04();\n        (**(**0x470b00 + 0x14))();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42f135;\n    uStack32 = 0x42f12d;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 186
    },
    "0042f140": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042f189)\n\nvoid __fastcall fcn.0042f140(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x42f1c0;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.0042eb04();\n    uVar2 = 0x42f16f;\n    cVar1 = fcn.0042f448();\n    if (cVar1 != '\\0') {\n        fcn.0042f3a0(param_2);\n        uVar2 = param_2;\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack28 = 0x42f1c7;\n    uStack32 = 0x42f1bf;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 253
    },
    "0042ec10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042ec10(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42ec77;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*0x470b00 != NULL) {\n        fcn.0042eb04();\n        (**(**0x470b00 + 0xc))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42ec7e;\n    uStack24 = 0x42ec76;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 177
    },
    "0042ec88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ec88(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42ed10;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*0x470b00 == NULL) {\n        piVar1 = fcn.00403220();\n        fcn.0042ebfc();\n        fcn.00404308(param_2, 0x42ed28, 0);\n        (**(*piVar1 + 0x38))();\n    }\n    else {\n        puStack28 = &stack0xfffffffc;\n        (**(**0x470b00 + 0x18))();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42ed17;\n    uStack32 = 0x42ed0f;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 264
    },
    "0042ed30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042ed75)\n\nvoid fcn.0042ed30(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42edab;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    cVar1 = fcn.0042f448();\n    if (cVar1 != '\\0') {\n        *(in_EAX + 0x10) = 2;\n        (**(**(in_EAX + 0x1c) + 0x10))();\n        fcn.0042eb04();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42edb2;\n    uStack24 = 0x42edaa;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 246
    },
    "0042edb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042ee59)\n\nvoid __fastcall fcn.0042edb8(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint *arg_8h;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x42eeb0;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 == 0) {\n        fcn.0040b620();\n        fcn.004039c4();\n        puVar1 = puStack44;\n    }\n    puStack44 = puVar1;\n    arg_8h = &fcn.0042edb8::var_4h;\n    fcn.0042eb04();\n    fcn.00408ca4(arg_8h);\n    uVar3 = 0x42ee31;\n    cVar2 = fcn.0042f448();\n    if (cVar2 != '\\0') {\n        fcn.0042eb04();\n        uVar3 = 0;\n        fcn.0042f3a0(0);\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack52 = 0x42eeb7;\n    fcn.00403f88();\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 409
    },
    "0042eb04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042eb04(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42ebb9;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.00403f88();\n    if ((param_2 == 0) && (*(in_EAX + 0x1c) != 0)) {\n        (**(**(in_EAX + 0x1c) + 0x10))();\n    }\n    else {\n        fcn.00404020();\n    }\n    if (*0x470b00 != NULL) {\n        (**(**0x470b00 + 0x20))();\n    }\n    if (*0x470b00 != NULL) {\n        (**(**0x470b00 + 0x1c))();\n        puStack28 = NULL;\n        uStack32 = 0x42ebd0;\n        uStack36 = 0;\n        fcn.00404308();\n    }\n    fcn.00403fdc();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42ebc0;\n    uStack32 = 0x42ebb8;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 340
    },
    "0042ebd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042ebd4(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0042ef04();\n    if (*(in_EAX + 0x1c) != 0) {\n        (**(**(in_EAX + 0x1c) + 0x14))();\n        fcn.00405848();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "0042f3a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042f3a0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack40 = 0x42f3b7;\n    fcn.00404438();\n    uStack44 = 0x42f416;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0042f384();\n    if ((((var_ch != '\\0') && (in_DL == *(in_EAX + 0x10))) && (in_DL != '\\0')) && (in_DL == '\\x01')) {\n        fcn.00407d64();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x42f41d;\n    uStack44 = 0x42f415;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 267
    },
    "0042f448": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042f448(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    uchar auStack24 [4];\n    uint uStack20;\n    char cStack12;\n    \n    uVar3 = 0;\n    fcn.0042f384();\n    if (cStack12 != '\\0') {\n        uVar2 = sub.user32.dll_GetWindowThreadProcessId(uStack20, 0, fcn.0042f32c, auStack24);\n        sub.user32.dll_EnumThreadWindows(uVar2);\n    }\n    cVar1 = fcn.0042f428();\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.0042f42c();\n        if (cVar1 != '\\0') {\n            fcn.0042f4a4();\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 207
    },
    "0042f4a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042f4f0)\n\nvoid fcn.0042f4a4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42f521;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0042ef04();\n    iVar1 = sub.kernel32.dll_GetTickCount();\n    do {\n        uStack28 = 0;\n        sub.kernel32.dll_Sleep();\n        iVar2 = sub.kernel32.dll_GetTickCount();\n    } while (iVar2 - iVar1 < 0x3e9);\n    fcn.0042eb04();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42f528;\n    uStack24 = 0x42f520;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 249
    },
    "0042f5a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042f5a4(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42f612;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x470b08 = *0x470b08 + 1;\n    if (*0x470b08 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*(*0x470b0c + 0x1c) != 0) {\n            fcn.0042ebd4();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00405848();\n        fcn.00405848();\n        fcn.00405848();\n        fcn.00403f88();\n        fcn.00405848();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 243
    },
    "0043da6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043da6c(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x6c) = *(in_EAX + 0x6c) + -1;\n    if (*(in_EAX + 0x6c) < 1) {\n        *(in_EAX + 0x6c) = 0;\n        fcn.0043f2ec();\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00431dfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00431dfc(void)\n\n{\n    int32_t iVar1;\n    \n    sub.user32.dll_GetCapture();\n    iVar1 = fcn.00431ae0();\n    if (((iVar1 != 0) && (*0x464ac8 != 0)) && (iVar1 == *(*0x464ac8 + 0x30))) {\n        iVar1 = *0x464ac8;\n    }\n    return iVar1;\n}\n",
        "token_count": 99
    },
    "00431e24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00431e24(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    sub.user32.dll_ReleaseCapture();\n    *0x464ac8 = 0;\n    if ((in_EAX != 0) &&\n       ((cVar2 = fcn.004033dc(),  iVar1 = *0x464ac8,  cVar2 != '\\0' || (iVar1 = in_EAX,  *(in_EAX + 0x30) != 0)))) {\n        *0x464ac8 = iVar1;\n        uVar3 = fcn.0043b420();\n        sub.user32.dll_SetCapture(uVar3);\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "004322cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004322cc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    \n    if (arg_8h == '\\0') {\n        fcn.0040344c();\n    }\n    (**(*in_EAX + 0x24))(arg_ch);\n    return;\n}\n",
        "token_count": 73
    },
    "00432368": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00432368(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00432250();\n    uVar1 = fcn.0041ff04();\n    *(in_EAX + 0x40) = uVar1;\n    fcn.00425080();\n    fcn.00420080();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 207
    },
    "0043255c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043255c(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_10h;\n    \n    if (arg_8h == arg_ch[1]) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_ch[2] == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n            iVar2 = sub.user32.dll_PtInRect(&var_10h, arg_ch[3], arg_ch[4]);\n            if (iVar2 != 0) {\n                arg_ch[2] = arg_8h;\n            }\n        }\n        if (arg_8h == arg_ch[2]) {\n            uVar1 = 0;\n            *(arg_ch + 5) = 1;\n        }\n        else if (arg_8h == *arg_ch) {\n            uVar1 = 0xffffffff;\n            arg_ch[2] = 0;\n        }\n        else {\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 255
    },
    "004325c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004325c8(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint lprcSrc2;\n    uint lprcSrc1;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t hWnd;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    hWnd = fcn.00432a18();\n    uVar2 = func_0x00406844(hWnd, 4);\n    if (uVar2 != *(**0x46fa30 + 0x30)) {\n        uVar2 = fcn.00431ae0();\n        if (uVar2 == 0) goto code_r0x00432756;\n        do {\n            uVar2 = *(uVar2 + 0x30);\n        } while (uVar2 != 0);\n        uVar2 = fcn.0043b420();\n        hWnd = uVar2;\n    }\n    if (hWnd != 0) {\n        do {\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n        uVar2 = fcn.0043b420();\n        if (uVar2 != hWnd) {\n            iVar4 = *(*(arg_8h + -0x10) + 0x30);\n            var_18h = uVar2;\n            if (iVar4 == 0) {\n                cVar1 = fcn.004033dc();\n                if (cVar1 == '\\0') {\n                    var_1ch = 0;\n                }\n                else {\n                    var_1ch = fcn.0043b420();\n                }\n            }\n            else {\n                do {\n                    iVar4 = *(iVar4 + 0x30);\n                } while (iVar4 != 0);\n                var_1ch = fcn.0043b420();\n            }\n            var_8h._0_1_ = '\\0';\n            var_10h = *(arg_8h + -9);\n            var_ch = *(arg_8h + -5);\n            uVar3 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0043255c, &var_1ch);\n            uVar2 = sub.user32.dll_EnumThreadWindows(uVar3);\n            if (var_8h != '\\0') {\n                sub.user32.dll_GetWindowRect(hWnd, &lprcSrc1);\n                fcn.0040344c(arg_8h + -1, arg_8h + -9);\n                cVar1 = fcn.004033dc();\n                if ((((cVar1 == '\\0') || (*(*(*0x470b34 + 0x38) + 0xa0) == 0)) ||\n                    (uVar2 = fcn.0043b420(),  uVar2 != hWnd)) &&\n                   (uVar2 = sub.user32.dll_IntersectRect(&lprcSrc1, &lprcSrc1, &lprcSrc2),  uVar2 != 0)) {\n                    var_1h._0_1_ = 0;\n                }\n            }\n        }\n    }\ncode_r0x00432756:\n    return uVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 798
    },
    "004327a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.004327a4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lprc;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint pt;\n    uint var_5h;\n    uint var_1h;\n    \n    pt = *in_EAX;\n    var_5h = in_EAX[1];\n    var_18h = 0;\n    if (*0x470b58 != 0) {\n        puVar5 = 0x11;\n        var_10h = param_2;\n        uVar2 = sub.user32.dll_GetKeyState(0x11);\n        if (((uVar2 & 0x8000) != 0) != *(**0x46fa30 + 0xb4)) {\n            (**(**0x470b5c + 8))();\n            iVar4 = *(*0x470b58 + 8);\n            if (-1 < iVar4 + -1) {\n                do {\n                    var_14h = fcn.00416ec4();\n                    if (((var_14h != var_10h) && (*(var_14h + 0x1a6) != '\\0')) &&\n                       (cVar1 = (**(*var_14h + 0x50))(),  cVar1 != '\\0')) {\n                        puVar5 = fcn.0043b420();\n                        iVar3 = sub.user32.dll_IsWindowVisible();\n                        if (((iVar3 != 0) && (cVar1 = fcn.00432760(&var_1h + 1),  cVar1 == '\\0')) &&\n                           ((var_10h[0x28] != var_14h || (iVar3 = fcn.00439f50(),  1 < iVar3)))) {\n                            var_1h._0_1_ = '\\x01';\n                            puVar5 = &var_1h;\n                            fcn.0040344c();\n                            if (var_1h != '\\0') {\n                                puVar5 = &lprc;\n                                iVar3 = sub.user32.dll_PtInRect();\n                                if (iVar3 != 0) {\n                                    fcn.00431f2c();\n                                }\n                            }\n                        }\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            if (0 < (*0x470b5c)[2]) {\n                var_18h = fcn.00431fbc(puVar5);\n            }\n            if ((var_18h != 0) && (cVar1 = fcn.004325c8(&var_1h + 1),  cVar1 == '\\0')) {\n                var_18h = 0;\n            }\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 699
    },
    "00432900": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432900(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != 0) {\n        if (*0x470b58 == 0) {\n            *0x470b58 = fcn.00403220();\n        }\n        iVar1 = fcn.00416f20();\n        if (param_2 == '\\0') {\n            if (iVar1 != -1) {\n                fcn.00416db4();\n            }\n        }\n        else if (iVar1 == -1) {\n            fcn.00416d68();\n        }\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00432ad0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00432ad0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0;\n    iVar1 = *(*0x470b34 + 4);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x1a7) != '\\0')) && (*(iVar1 + 0x178) != 0)) &&\n       (iVar2 = fcn.00439ebc(),  iVar2 != 0)) {\n        iVar2 = fcn.00439ebc();\n        if ((iVar2 == 1) && (iVar2 = fcn.00416ec4(),  iVar2 == *(*0x470b34 + 0x38))) {\n            return 0;\n        }\n        iVar2 = fcn.00433500();\n        while( true ) {\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (iVar1 == iVar2) {\n                return 0;\n            }\n            iVar3 = fcn.00416f20();\n            if (iVar3 != -1) break;\n            iVar2 = *(iVar2 + 0x30);\n        }\n        uVar4 = fcn.00439ed0();\n    }\n    return uVar4;\n}\n",
        "token_count": 292
    },
    "00432b64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00432b64(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uchar uVar5;\n    char cVar6;\n    int32_t *in_EAX;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    if (((*0x470b50 == '\\0') &&\n        (uVar9 = *0x470b40 - *in_EAX >> 0x1f,  (*0x470b40 - *in_EAX ^ uVar9) - uVar9 < *0x470b4c)) &&\n       (uVar9 = *0x470b44 - in_EAX[1] >> 0x1f,  (*0x470b44 - in_EAX[1] ^ uVar9) - uVar9 < *0x470b4c)) {\n        return;\n    }\n    iVar10 = 0x432bbe;\n    iVar7 = fcn.00432a44(*0x470b30);\n    if ((*0x470b50 == '\\0') && (*0x470b54 != 0)) {\n        iVar10 = *0x470b44;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.0043cf00(iVar10);\n    }\n    if (*(*0x470b30 + 0x9b) == '\\0') {\n        *0x470b50 = '\\x01';\n    }\n    else {\n        *0x470b50 = '\\x02';\n    }\n    if (iVar7 != (*0x470b34)[1]) {\n        fcn.00432a94();\n        if (*0x470b34 == NULL) {\n            return;\n        }\n        (*0x470b34)[1] = iVar7;\n        (*0x470b34)[2] = iVar10;\n        piVar1 = *0x470b34;\n        (*0x470b34)[3] = *in_EAX;\n        piVar1[4] = in_EAX[1];\n        fcn.00432a94();\n        if (*0x470b34 == NULL) {\n            return;\n        }\n    }\n    piVar1 = *0x470b34;\n    (*0x470b34)[3] = *in_EAX;\n    piVar1[4] = in_EAX[1];\n    if ((*0x470b34)[1] != 0) {\n        fcn.00434798();\n        piVar1 = *0x470b34;\n        (*0x470b34)[5] = iStack28;\n        piVar1[6] = iStack24;\n    }\n    fcn.00432a94(in_EAX[1]);\n    (**(**0x470b34 + 4))();\n    if (*0x470b54 != 0) {\n        if ((iVar7 == 0) || ((*(iVar7 + 0x51) & 0x20) != 0)) {\n            fcn.0043cebc();\n            if (*(*0x470b54 + 0x6a) == '\\0') {\n                iVar10 = in_EAX[1];\n                sub.user32.dll_GetDesktopWindow();\n                fcn.0043cf00(iVar10);\n            }\n            else {\n                fcn.0043cfe8();\n            }\n        }\n        else {\n            fcn.0043d05c();\n            uVar8 = fcn.004534d0();\n            sub.user32.dll_SetCursor(uVar8);\n        }\n    }\n    cVar4 = fcn.004534d0();\n    sub.user32.dll_SetCursor();\n    if (*0x470b50 == '\\x02') {\n        if (iVar7 == 0) {\n            fcn.0040344c(in_EAX[1]);\n        }\n        else {\n            iVar10 = fcn.00432ad0();\n            (*0x470b34)[0x16] = iVar10;\n            if (iVar10 == 0) {\n                uVar5 = fcn.0040344c();\n                *(*0x470b34 + 0x15) = uVar5;\n            }\n            else {\n                fcn.00434798();\n                uVar5 = fcn.0040344c();\n                *(*0x470b34 + 0x15) = uVar5;\n            }\n        }\n        if ((*0x470b34 != NULL) && (cVar6 = fcn.00407d94(),  cVar6 == '\\0')) {\n            if (cVar4 != '\\0') {\n                (**(**0x470b34 + 0x34))();\n            }\n            (**(**0x470b34 + 0x30))();\n            piVar3 = *0x470b34;\n            piVar2 = *0x470b34 + 0x18;\n            piVar1 = *0x470b34 + 0x12;\n            (*0x470b34)[0x17] = (*0x470b34)[0x11];\n            *piVar2 = *piVar1;\n            piVar3[0x19] = piVar3[0x13];\n            piVar3[0x1a] = piVar3[0x14];\n        }\n    }\n    return;\n}\n",
        "token_count": 1205
    },
    "00432e34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432e34(uint param_1, char param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    \n    *0x470b34 = in_EAX;\n    in_EAX[1] = 0;\n    sub.user32.dll_GetCursorPos(0x470b40);\n    piVar1 = *0x470b34;\n    (*0x470b34)[3] = *0x470b40;\n    piVar1[4] = *0x470b44;\n    *0x470b48 = sub.user32.dll_GetCursor();\n    *0x470b3c = fcn.00432060();\n    *0x470b4c = param_1;\n    cVar2 = fcn.004033dc();\n    if (cVar2 == '\\0') {\n        if (param_2 == '\\0') {\n            *0x470b50 = '\\0';\n        }\n        else {\n            *0x470b50 = '\\x01';\n        }\n    }\n    else {\n        iVar3 = in_EAX[0x11];\n        if (in_EAX[0x13] == iVar3 || in_EAX[0x13] - iVar3 < 0) {\n            in_EAX[8] = 0;\n            in_EAX[9] = 0;\n        }\n        else {\n            *(in_EAX + 8) = (in_EAX[3] - iVar3) / (in_EAX[0x13] - in_EAX[0x11]);\n        }\n        iVar3 = in_EAX[0x12];\n        if (in_EAX[0x14] == iVar3 || in_EAX[0x14] - iVar3 < 0) {\n            in_EAX[10] = 0;\n            in_EAX[0xb] = 0;\n        }\n        else {\n            *(in_EAX + 10) = (in_EAX[4] - iVar3) / (in_EAX[0x14] - in_EAX[0x12]);\n        }\n        if (param_2 == '\\0') {\n            *0x470b50 = '\\0';\n        }\n        else {\n            *0x470b50 = '\\x02';\n            (**(*in_EAX + 0x30))();\n        }\n    }\n    *0x470b54 = (**(**0x470b34 + 8))();\n    if (*0x470b54 != 0) {\n        iVar3 = *0x470b44;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.0043cf00(iVar3);\n    }\n    *0x470b5c = fcn.00403220();\n    if (*0x470b50 != '\\0') {\n        fcn.00432b64();\n    }\n    return;\n}\n",
        "token_count": 642
    },
    "00432fa4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00432fa4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint lpPoint;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x433149;\n    iStack60 = *in_FS_OFFSET;\n    *0x470b30 = in_EAX;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_8h = 0;\n    *0x470b38 = 0;\n    if (*(in_EAX + 0x9b) == '\\0') {\n        puStack64 = 0x432feb;\n        puStack52 = &stack0xfffffffc;\n        fcn.0040344c();\n        if (*0x470b30 == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            puStack64 = 0x433019;\n            var_8h = fcn.00432250();\n            *0x470b38 = 1;\n        }\n    }\n    else {\n        fcn.0040344c();\n        if (*0x470b30 == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            var_8h = fcn.00432368();\n            *0x470b38 = 1;\n        }\n        cVar1 = fcn.004033dc();\n        if (cVar1 == '\\0') {\n            if ((*(*(var_8h + 0x38) + 0x30) == 0) && (cVar1 = fcn.004033dc(),  cVar1 == '\\0')) {\n                puStack64 = &fcn.00432fa4::lpPoint;\n                sub.user32.dll_GetCursorPos();\n                *(var_8h + 0x44) = lpPoint;\n                *(var_8h + 0x48) = var_ch;\n            }\n            else {\n                fcn.00415a68();\n                puStack64 = 0x4330ea;\n                fcn.0043476c();\n                *(var_8h + 0x44) = var_18h;\n                *(var_8h + 0x48) = var_14h;\n            }\n            fcn.00415a68();\n            *(var_8h + 0x4c) = var_18h;\n            *(var_8h + 0x50) = var_14h;\n        }\n        else {\n            puStack64 = var_8h + 0x44;\n            uVar2 = fcn.0043b420();\n            sub.user32.dll_GetWindowRect(uVar2);\n        }\n        *(var_8h + 0x5c) = *(var_8h + 0x44);\n        *(var_8h + 0x60) = *(var_8h + 0x48);\n        *(var_8h + 100) = *(var_8h + 0x4c);\n        *(var_8h + 0x68) = *(var_8h + 0x50);\n    }\n    fcn.00432e34();\n    *in_FS_OFFSET = puStack64;\n    return;\n}\n",
        "token_count": 813
    },
    "00433168": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00433168(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t unaff_EBX;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *(*0x470b34 + 4) != 0;\n    if ((*(arg_8h + -1) != '\\0') && (*0x470b50 == '\\x02')) {\n        cVar1 = (**(**0x470b30 + 0x54))();\n        if ((cVar1 == '\\0') && ((*0x470b30)[0x28] != 0)) {\n            if ((*0x470b30)[0x28] != 0) {\n                uVar2 = fcn.0040344c();\n            }\n        }\n        else {\n            uVar2 = CONCAT31((unaff_EBX & 0xffffff00) >> 8, 1);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 223
    },
    "004331dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004331dc(void)\n\n{\n    char in_AL;\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ah;\n    uint32_t var_6h;\n    uint var_1h;\n    \n    puStack24 = &fcn.004331dc::var_1h + 1;\n    puStack36 = &fcn.004331dc::var_1h + 1;\n    piVar4 = NULL;\n    if ((*0x470b34 == NULL) || (*(*0x470b34 + 0xc) != '\\0')) {\n        return;\n    }\n    uStack28 = 0x4334a8;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    *0x470b60 = *0x470b34;\n    uStack40 = 0x433436;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    *(*0x470b34 + 0xc) = 1;\n    *(*0x470b34 + 7) = in_AL;\n    var_1h._0_1_ = in_AL;\n    fcn.004320a8();\n    if (*0x470b50 == '\\x02') {\n        piVar4 = fcn.00403400();\n        (**(*piVar4 + 0x34))();\n        *(piVar4 + 0x1b) = piVar4[1] == 0;\n    }\n    if ((*0x470b34)[1] == 0) {\ncode_r0x004332b3:\n        var_6h = (*0x470b34)[4];\n    }\n    else {\n        cVar1 = fcn.004033dc();\n        if (cVar1 == '\\0') goto code_r0x004332b3;\n        var_6h = (*0x470b34)[6];\n    }\n    cVar1 = fcn.00433168(&fcn.004331dc::var_1h + 1);\n    if (cVar1 != '\\0') {\n        if ((*0x470b50 == '\\x02') && (*(piVar4 + 0x1b) != '\\0')) {\ncode_r0x004332f2:\n            if (var_1h != '\\0') {\n                uVar2 = 1;\n                goto code_r0x004332fe;\n            }\n        }\n        else if (*0x470b50 != '\\0') {\n            cVar1 = fcn.00432a94();\n            if (cVar1 != '\\0') goto code_r0x004332f2;\n        }\n    }\n    uVar2 = 0;\ncode_r0x004332fe:\n    if (*0x470b50 == '\\x02') {\n        if ((uVar2 != 0) && (*(piVar4 + 0x1b) != '\\0')) {\n            iVar3 = fcn.0044c6cc();\n            if ((iVar3 != 0) && (*(iVar3 + 0x220) == piVar4[0xe])) {\n                fcn.00450430();\n            }\n            fcn.00435dec(*0x470b34);\n        }\n    }\n    else if (*0x470b54 == 0) {\n        sub.user32.dll_SetCursor(*0x470b48);\n    }\n    else {\n        fcn.0043d05c();\n    }\n    *0x470b30 = 0;\n    *0x470b34 = NULL;\n    if ((*0x470b60 != NULL) && ((*0x470b60)[1] != 0)) {\n        if (uVar2 == 0) {\n            (*0x470b60)[3] = 0;\n            (*0x470b60)[4] = 0;\n            var_6h = 0;\n        }\n        fcn.00432960(*0x470b60 + 3, (*0x470b60)[1]);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x43343d;\n    uStack40 = 0x4333f9;\n    fcn.00403250();\n    *0x470b5c = 0;\n    if (*0x470b60 != NULL) {\n        *(*0x470b60 + 0xc) = 0;\n        uStack40 = var_6h;\n        uStack44 = var_6h & 0xffffff00 | uVar2;\n        (****0x470b60)();\n    }\n    *0x470b34 = NULL;\n    return;\n}\n",
        "token_count": 1116
    },
    "004334b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004334b4(void)\n\n{\n    if (*0x470b34 != 0) {\n        fcn.004331dc();\n    }\n    *0x470b30 = 0;\n    return;\n}\n",
        "token_count": 50
    },
    "00433548": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00433548(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*in_EAX == 0) {\n        iVar1 = fcn.00403220();\n        *in_EAX = iVar1;\n    }\n    fcn.00416d68();\n    return;\n}\n",
        "token_count": 74
    },
    "00433570": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00433570(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00417008();\n    if (*(*in_EAX + 8) == 0) {\n        fcn.00403250();\n        *in_EAX = 0;\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "0043367c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043367c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x43368c;\n    var_8h = fcn.00417230();\n    uStack24 = 0x43371a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x4336b7;\n            var_ch = fcn.00416ec4();\n            puStack32 = 0x4336c2;\n            cVar1 = fcn.004206e8();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x4336f2;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.004337fc();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x4336f9;\n                uStack36 = 0x4336f1;\n                fcn.00420744();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x433721;\n    uStack24 = 0x433719;\n    fcn.00417294();\n    return;\n}\n",
        "token_count": 450
    },
    "00433754": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00433754(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) == 0) {\n        puStack16 = 0x43376d;\n        fcn.004208c8();\n    }\n    else {\n        if (*(in_EAX + 0x5c) == 0) {\n            puStack16 = 0x433785;\n            iVar1 = fcn.00417230();\n            uStack20 = 0x4337d9;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            if (3 < *(iVar1 + 8)) {\n                puStack16 = &stack0xfffffffc;\n                fcn.004335c0();\n            }\n            uVar2 = (**(**(in_EAX + 0x58) + 0x48))();\n            *(in_EAX + 0x5c) = uVar2;\n            fcn.00416d68();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x4337e0;\n            uStack20 = 0x4337d8;\n            fcn.00417294();\n            return;\n        }\n        puStack16 = 0x4337ee;\n        fcn.004208cc();\n        puStack16 = 0x4337f6;\n        fcn.00433848();\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "004337fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004337fc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) != 0) {\n        fcn.004208cc();\n        fcn.00417244();\n        sub.user32.dll_ReleaseDC(*(in_EAX + 0x60), *(in_EAX + 0x5c));\n        *(in_EAX + 0x5c) = 0;\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "004339b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004339b4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack48 = &fcn.004339b4::var_1h + 1;\n    var_8h = 0;\n    uStack52 = 0x433a81;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_1h._0_1_ = 1;\n    arg_8h = 0x4339e9;\n    cVar1 = fcn.004033dc();\n    if (cVar1 != '\\0') {\n        arg_8h = 0x4339fb;\n        cVar1 = fcn.0040344c();\n        if ((((cVar1 != '\\0') && (*(**0x46fa30 + 0x7c) != '\\0')) && (*(*(in_EAX + 0x10) + 0x84) != 0)) &&\n           (*param_2 != 0)) {\n            arg_8h = &fcn.004339b4::var_8h;\n            fcn.00444300();\n            fcn.00408ca4(arg_8h);\n            fcn.00403fdc();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x433a88;\n    iStack56 = 0x433a78;\n    fcn.00403f88();\n    iStack56 = 0x433a80;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 476
    },
    "00433d54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.00433d54(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041c87c();\n    in_EAX[0xf] = in_EAX;\n    in_EAX[0xe] = *(*in_EAX + 0x74);\n    in_EAX[0x14] = *0x433e24;\n    iVar1 = fcn.0041f70c();\n    in_EAX[0x1a] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x434cf4;\n    *(in_EAX + 0x61) = *0x433e28;\n    iVar1 = fcn.00433874();\n    in_EAX[0x1d] = iVar1;\n    *(iVar1 + 0x1c) = in_EAX;\n    *(iVar1 + 0x18) = 0x435bac;\n    in_EAX[0x1c] = -0xfffffb;\n    *(in_EAX + 0x57) = 1;\n    *(in_EAX + 0x16) = 1;\n    *(in_EAX + 0x59) = 1;\n    *(in_EAX + 0x5a) = 1;\n    *(in_EAX + 0x9a) = 1;\n    *(in_EAX + 0x18) = 1;\n    *(in_EAX + 0x5e) = 0;\n    *(in_EAX + 0x7a) = 0xfff4;\n    in_EAX[0x2e] = *0x44be34;\n    *(in_EAX + 0x54) = 1;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 526
    },
    "00433f20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00433f20(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_stack_ffffffe8;\n    uint uStack20;\n    \n    uVar2 = 0;\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar1 = fcn.0040344c(in_stack_ffffffe8 & 0xffffff00 | param_2);\n        if (iVar1 != 0) {\n            uStack20 = (**(*in_EAX + 0x48))();\n            uVar2 = sub.gdi32.dll_SelectPalette();\n            iVar1 = sub.gdi32.dll_RealizePalette(uStack20);\n            if (iVar1 != 0) {\n                (**(*in_EAX + 0x7c))();\n            }\n            sub.gdi32.dll_SelectPalette(uStack20, uVar2, 0xffffffff);\n            sub.user32.dll_ReleaseDC(uVar2);\n            uVar2 = 1;\n        }\n    }\n    return CONCAT44(uStack20, uVar2);\n}\n",
        "token_count": 254
    },
    "00434090": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00434090(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    *(in_EAX + 0x15) = *(in_EAX + 0x15) | 8;\n    cVar1 = fcn.004033dc();\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x68))();\n    }\n    fcn.0041ccdc();\n    *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfff7;\n    if (in_EAX[0xc] != 0) {\n        fcn.00435dec(0);\n        fcn.00435dec(0);\n        fcn.00435dec(0);\n        fcn.00435dec(0);\n        fcn.00435dec(0);\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "00434458": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434458(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0xa0)) {\n        if ((*(in_EAX + 0xa0) != 0) && (*(*(in_EAX + 0xa0) + 0x178) != 0)) {\n            puStack40 = 0x43449e;\n            fcn.00417008();\n        }\n        if (((param_2 != 0) && (param_2 != -1)) && (*(param_2 + 0x178) != 0)) {\n            puStack40 = 0x4344be;\n            fcn.00416d68();\n        }\n    }\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x400;\n    uStack44 = 0x434553;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    if (param_2 != -1) {\n        puStack40 = &stack0xfffffffc;\n        fcn.0040344c();\n    }\n    iVar1 = *(in_EAX + 0xa0);\n    if (param_2 != iVar1) {\n        if (param_2 == -1) {\n            *(in_EAX + 0xa0) = 0;\n        }\n        else {\n            *(in_EAX + 0xa0) = param_2;\n            if (param_2 != 0) {\n                fcn.0040344c();\n            }\n        }\n        if (iVar1 != 0) {\n            fcn.0040344c();\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xfbff;\n    return;\n}\n",
        "token_count": 486
    },
    "004346dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004346dc(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x43475d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.00405d0c();\n        fcn.0040b5a0(in_stack_ffffffd4, arg_ch);\n        fcn.004039c4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    (**(**(in_EAX + 0x30) + 0x40))();\n    *param_2 = *param_2 + *(in_EAX + 0x40);\n    param_2[1] = param_2[1] + *(in_EAX + 0x44);\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x434764;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 394
    },
    "004347f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004347f4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0xa0) != 0) && (*0x470b34 == 0)) && (*0x43485c == (*0x434858 & *(in_EAX + 0x1c)))) {\n        var_8h = arg_8h;\n        fcn.00435dec(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00434d70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434d70(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x59)) && (*(in_EAX + 0x59) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00435dec(0);\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "00434e08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434e08(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x5a)) && (*(in_EAX + 0x5a) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00435dec(0);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00434e2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434e2c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x60)) && (*(in_EAX + 0x60) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00435dec(0);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "00434f58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00434f58(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x434fee;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        uVar2 = 0;\n        fcn.00405d0c();\n        fcn.0040b5a0(uVar2, arg_ch);\n        fcn.004039c4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    uVar2 = (**(**(in_EAX + 0x30) + 0x48))();\n    sub.gdi32.dll_SetViewportOrgEx(uVar2, *(in_EAX + 0x40), *(in_EAX + 0x44), 0);\n    sub.gdi32.dll_IntersectClipRect(uVar2, 0, 0, *(in_EAX + 0x48), *(in_EAX + 0x4c));\n    *in_FS_OFFSET = uVar2;\n    fcn.00403f88(0x434ff5);\n    return;\n}\n",
        "token_count": 400
    },
    "00435000": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00435000(int32_t lprcSrc1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint lprcSrc2;\n    uint lprcDst;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    uVar1 = fcn.00416f20();\n    uVar2 = uVar1;\n    do {\n        do {\n            if (uVar1 < 1) {\n                var_1h._0_1_ = 0;\n                goto code_r0x00435081;\n            }\n            uVar1 = uVar1 - 1;\n            uVar2 = fcn.00416ec4();\n        } while ((*(uVar2 + 0x57) == '\\0') || ((*(uVar2 + 0x50) & 0x40) == 0));\n        fcn.004345f4();\n        sub.user32.dll_IntersectRect(&lprcDst, lprcSrc1 + -0x14, &lprcSrc2);\n        uVar2 = sub.user32.dll_EqualRect(&lprcDst, lprcSrc1 + -0x14);\n    } while (uVar2 == 0);\ncode_r0x00435081:\n    return uVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 337
    },
    "0043508c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043508c(uint param_1, char param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint var_15h;\n    int32_t var_4h;\n    \n    if (param_2 == '\\0') {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            return;\n        }\n        if ((*(in_EAX + 0x51) & 4) != 0) {\n            return;\n        }\n    }\n    if (*(in_EAX + 0x30) == 0) {\n        return;\n    }\n    var_4h = in_EAX;\n    cVar2 = fcn.0043b724();\n    if (cVar2 != '\\0') {\n        fcn.004345f4();\n        if (((var_15h == '\\0') && ((*(*(var_4h + 0x30) + 0x50) & 0x40) == 0)) &&\n           (cVar2 = fcn.00435000(&stack0xfffffffc),  cVar2 == '\\0')) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n        uVar3 = fcn.0043b420(&var_15h + 1, -uVar1);\n        sub.user32.dll_InvalidateRect(uVar3);\n        return;\n    }\n    return;\n}\n",
        "token_count": 350
    },
    "00435180": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00435180(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x57) != '\\0') || (((*(in_EAX + 7) & 0x10) != 0 && ((*(in_EAX + 0x51) & 4) == 0)))) &&\n       (in_EAX[0xc] != 0)) {\n        uStack20 = 0x4351c5;\n        cVar1 = fcn.0043b724();\n        if (cVar1 != '\\0') {\n            if ((*(in_EAX + 0x14) & 0x40) != 0) {\n                uStack20 = 0x4351e5;\n                uStack20 = fcn.0043b420();\n                puStack24 = 0x4351eb;\n                uVar2 = sub.user32.dll_GetDC();\n                uStack28 = 0x435259;\n                uStack32 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffe0;\n                uVar3 = uVar2;\n                puStack24 = &stack0xfffffffc;\n                sub.gdi32.dll_IntersectClipRect\n                          (uVar2, in_EAX[0x10], in_EAX[0x11], in_EAX[0x10] + in_EAX[0x12], in_EAX[0x11] + in_EAX[0x13]);\n                fcn.0043922c();\n                *in_FS_OFFSET = uVar3;\n                uVar3 = fcn.0043b420(uVar2, 0x435273);\n                sub.user32.dll_ReleaseDC(uVar3);\n                return;\n            }\n            uStack20 = 0x435268;\n            (**(*in_EAX + 0x7c))();\n            uStack20 = 0x435273;\n            (**(*in_EAX + 0x88))();\n        }\n    }\n    return;\n}\n",
        "token_count": 502
    },
    "0043527c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043527c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x46fc24 + 0xd) != '\\0') && (*(in_EAX + 0x5f) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 69
    },
    "004352ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004352ac(void)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x46fc24 + 0xd) != '\\0') && (iVar1 = (in_EAX & 0xffffff00 | *(in_EAX + 0x5f)) - 1,  iVar1 < 2)) {\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 105
    },
    "004353b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004353b4(uchar *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    *arg_8h = 0;\n    if (*(in_EAX + 0xf2) != 0) {\n        *arg_8h = 1;\n        (**(in_EAX + 0xf0))(arg_8h, arg_10h & 0xffffff00 | arg_ch & 0xff, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "004353f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004353f0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xea) != 0) {\n        (**(in_EAX + 0xe8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "0043543c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043543c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x11a) != 0) {\n        (**(in_EAX + 0x118))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "0043554c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043554c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10a) != 0) {\n        (**(in_EAX + 0x108))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00435598": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00435598(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint8_t var_ah;\n    uint var_9h;\n    uint uStack9;\n    uint var_1h;\n    \n    var_9h = *arg_8h;\n    uStack9 = arg_8h[1];\n    var_ah = 0;\n    uVar2 = in_EAX;\n    if (*(in_EAX + 0x13a) != 0) {\n        uVar2 = (**(in_EAX + 0x138))(&var_ah, &var_9h);\n    }\n    if (var_ah == 0) {\n        *(in_EAX + 0xa4) = *(in_EAX + 0xa4) + in_ECX;\n        while( true ) {\n            uVar1 = *(in_EAX + 0xa4);\n            uVar2 = (uVar1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f);\n            if (uVar2 < 0x78) break;\n            uVar2 = *(in_EAX + 0xa4) >> 0x1f;\n            iVar3 = ((*(in_EAX + 0xa4) ^ uVar2) - uVar2) + -0x78;\n            *(in_EAX + 0xa4) = iVar3;\n            if (uVar1 < 0) {\n                if (iVar3 != 0) {\n                    *(in_EAX + 0xa4) = -iVar3;\n                }\n                var_ah = fcn.0040344c();\n            }\n            else {\n                var_ah = fcn.0040344c();\n            }\n        }\n    }\n    return uVar2 & 0xffffff00 | var_ah;\n}\n",
        "token_count": 457
    },
    "004356f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004356f4(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uStack52 = 0x435709;\n    iVar1 = (**(*param_2 + 0x38))();\n    if (var_1h == '\\0') {\n        var_20h = param_2[0x11];\n        var_1ch = param_2[0x12];\n        var_18h = param_2[0x13];\n        var_14h = param_2[0x14];\n    }\n    else {\n        var_20h = param_2[0x17];\n        var_1ch = param_2[0x18];\n        var_18h = param_2[0x19];\n        var_14h = param_2[0x1a];\n    }\n    uStack52 = 0x435730;\n    uVar2 = sub.user32.dll_GetDesktopWindow();\n    uStack52 = 0x402;\n    uStack56 = 0;\n    puStack64 = 0x435743;\n    uStack60 = uVar2;\n    uVar3 = sub.user32.dll_GetDCEx();\n    uStack68 = 0x43580f;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &fcn.004356f4::var_1h + 1;\n    uVar4 = fcn.004200e0();\n    uVar5 = sub.gdi32.dll_SelectObject(uVar3, uVar4);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h + iVar1, var_1ch, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_18h - iVar1, var_1ch + iVar1, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_14h - iVar1, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_1ch, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    uVar4 = uVar3;\n    sub.gdi32.dll_SelectObject(uVar3, uVar5);\n    *in_FS_OFFSET = uVar4;\n    sub.user32.dll_ReleaseDC(uVar2, uVar3, 0x435816);\n    return;\n}\n",
        "token_count": 784
    },
    "00435848": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435848(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uchar auStack28 [5];\n    uint32_t uStack23;\n    \n    cVar1 = fcn.004033dc();\n    if ((*0x470b38 != '\\0') && (cVar1 == '\\0')) {\n        fcn.00403400();\n    }\n    fcn.00434798();\n    if (*(param_2 + 4) < 3) {\n        auStack28[0] = 1;\n        if (cVar1 == '\\0') {\n            uVar2 = uStack23 & 0xffffff00 | *(param_2 + 4);\n            fcn.0040344c(auStack28, uVar2, uStack23);\n        }\n        else {\n            uVar2 = uStack23 & 0xffffff00 | *(param_2 + 4);\n            fcn.0040344c(auStack28, uVar2, uStack23);\n        }\n        *(param_2 + 0xc) = uVar2 & 0xff;\n    }\n    else if (*(param_2 + 4) == 3) {\n        if (cVar1 == '\\0') {\n            fcn.0040344c(uStack23);\n        }\n        else {\n            fcn.0040344c(uStack23);\n        }\n    }\n    return;\n}\n",
        "token_count": 321
    },
    "00435938": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00435938(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint *arg_8h_00;\n    uint var_34h;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    if ((in_EDX == 0) || (in_EDX == -1)) {\n        iVar3 = *(in_EAX + 0xa0);\n        if (((iVar3 == 0) || (*(iVar3 + 0x1a7) == '\\0')) || (*(iVar3 + 0x17c) == 0)) {\n            fcn.00415a68();\n            var_1ch = var_24h;\n            var_18h = var_20h;\n            if (*(in_EAX + 0x30) != 0) {\n                fcn.0043476c();\n                var_1ch = var_24h;\n                var_18h = var_20h;\n            }\n        }\n        else {\n            (**(**(iVar3 + 0x17c) + 0x14))();\n            var_34h = 2;\n            fcn.0043b420();\n            sub.user32.dll_MapWindowPoints();\n        }\n        uVar1 = fcn.00434bd4();\n        arg_8h_00 = &fcn.00435938::var_34h;\n        uStack80 = 0x4359e9;\n        fcn.00434be8();\n        uStack80 = 0x4359f6;\n        fcn.00415ab8(arg_8h_00, uVar1);\n        var_1ch = var_34h;\n        var_18h = uStack52;\n        uStack24 = uStack48;\n        uStack20 = uStack44;\n        uStack80 = 0x435a0a;\n        uVar2 = fcn.00435b18();\n        var_5h = uVar2;\n        goto code_r0x00435b0a;\n    }\n    uVar1 = fcn.00435e20();\n    if (*(in_EAX + 0xa0) == 0) {\ncode_r0x00435a3d:\n        uVar2 = CONCAT31(uVar1 >> 8, 1);\n    }\n    else {\n        uVar1 = fcn.0040344c();\n        if (uVar1 != '\\0') goto code_r0x00435a3d;\n        uVar2 = 0;\n    }\n    var_5h = uVar2;\n    if (var_5h != 0) {\n        var_ch = fcn.00432368();\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        if (*(in_EAX + 0xa0) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.0043b420();\n        }\n        fcn.004345f4();\n        if (iVar3 != 0) {\n            sub.user32.dll_MapWindowPoints(iVar3, 0, &fcn.00435938::var_1ch, 2);\n        }\n        *(var_ch + 4) = in_EDX;\n        *(var_ch + 0x54) = arg_8h;\n        *(var_ch + 0x58) = var_4h;\n        *(var_ch + 0x44) = var_1ch;\n        *(var_ch + 0x48) = var_18h;\n        *(var_ch + 0x4c) = uStack24;\n        *(var_ch + 0x50) = uStack20;\n        uVar1 = fcn.0043b420(&fcn.00435938::var_1ch, 1);\n        sub.user32.dll_MapWindowPoints(0, uVar1);\n        fcn.0040344c();\n        *in_FS_OFFSET = var_18h;\n        uVar2 = fcn.00403250(0x435b0a);\n        return uVar2;\n    }\ncode_r0x00435b0a:\n    return uVar2 & 0xffffff00 | var_5h;\n}\n",
        "token_count": 1034
    },
    "00435bbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00435bbc(uint param_1)\n\n{\n    uint32_t in_EAX;\n    uint uStack8;\n    \n    uStack8 = CONCAT31(param_1 >> 8, 1);\n    if (*(in_EAX + 0xc2) != 0) {\n        in_EAX = (**(in_EAX + 0xc0))(&uStack8, param_1);\n    }\n    return CONCAT44(uStack8, in_EAX & 0xffffff00 | uStack8 & 0xff);\n}\n",
        "token_count": 118
    },
    "00435c88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435c88(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xca) != 0) {\n        (**(in_EAX + 200))(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00435d18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435d18(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piStack28;\n    int32_t *piStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    piStack28 = *(in_EAX[0x1d] + 0x14);\n    if (piStack28 == NULL) {\n        piStack28 = NULL;\n    }\n    piStack24 = *(in_EAX[0x1d] + 0x10);\n    if (piStack24 == NULL) {\n        piStack24 = NULL;\n    }\n    iStack20 = *(in_EAX[0x1d] + 0xc);\n    if (iStack20 == 0) {\n        iStack20 = 0;\n    }\n    iStack16 = *(in_EAX[0x1d] + 8);\n    if (iStack16 == 0) {\n        iStack16 = 0;\n    }\n    (**(*in_EAX + 0x38))();\n    if ((piStack28 < 1) || (*param_2 <= piStack28)) {\n        if ((0 < &iStack16) && (*param_2 < &iStack16)) {\n            *param_2 = &iStack16;\n        }\n    }\n    else {\n        *param_2 = piStack28;\n    }\n    if ((piStack24 < 1) || (*param_1 <= piStack24)) {\n        if ((0 < &iStack20) && (*param_1 < &iStack20)) {\n            *param_1 = &iStack20;\n        }\n    }\n    else {\n        *param_1 = piStack24;\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "00435e20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00435e20(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    \n    uVar2 = (**(*in_EAX + 0x54))();\n    if (uVar2 != '\\0') {\n        in_EAX[0x2b] = in_EAX[0x13];\n        in_EAX[0x2a] = in_EAX[0x12];\n        return in_EAX[0x12];\n    }\n    if (in_EAX[0x28] != 0) {\n        if ((*(in_EAX + 0x27) == '\\x02') || (*(in_EAX[0x28] + 0x5b) - 1U < 2)) {\n            uVar2 = in_EAX[0x13];\n            in_EAX[0x2d] = uVar2;\n        }\n        else if ((*(in_EAX + 0x27) == '\\x01') ||\n                (cVar1 = *(in_EAX[0x28] + 0x5b),  uVar2 = in_EAX[0x28] & 0xffffff00U | cVar1 - 5,  cVar1 - 3U < 2)) {\n            uVar2 = in_EAX[0x12];\n            in_EAX[0x2c] = uVar2;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 327
    },
    "00435eb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00435eb8(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint lpKeyState;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    if (((((*(in_EAX + 7) & 0x10) != 0) && (var_14h = fcn.0044c6cc(),  var_14h != NULL)) && (var_14h[0x94] != 0)) &&\n       (cVar2 = (**(*var_14h[0x94] + 0x24))(),  cVar2 != '\\0')) {\n        return;\n    }\n    if ((*param_2 < 0x100) || (0x108 < *param_2)) {\n        uVar1 = *param_2;\n        if ((uVar1 < 0x200) || (0x20a < uVar1)) {\n            if (uVar1 == 0xb00b) {\n                fcn.004347f4(param_2[2]);\n            }\n        }\n        else {\n            if (((*(in_EAX + 0x14) & 0x80) == 0) && (((uVar1 == 0x203 || (uVar1 == 0x206)) || (uVar1 == 0x209)))) {\n                *param_2 = *param_2 - 2;\n            }\n            uVar1 = *param_2;\n            if (uVar1 == 0x200) {\n                fcn.00455f70();\n            }\n            else {\n                if (uVar1 != 0x201) {\n                    if (uVar1 == 0x202) {\n                        *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfffe;\n                        goto code_r0x0043603a;\n                    }\n                    if (uVar1 != 0x203) {\n                        if (((*(*0x470b14 + 0x20) != '\\0') && (*(*0x470b14 + 0x1c) != 0)) &&\n                           (*param_2 == *(*0x470b14 + 0x1c))) {\n                            sub.user32.dll_GetKeyboardState(&lpKeyState);\n                            var_10h = *param_2;\n                            var_ch._0_1_ = fcn.0044c610();\n                            var_ch._2_2_ = *(param_2 + 1);\n                            var_8h = param_2[2];\n                            fcn.0040344c();\n                            return;\n                        }\n                        goto code_r0x0043603a;\n                    }\n                }\n                if (*(in_EAX + 0x5d) == '\\x01') {\n                    fcn.0040344c();\n                    return;\n                }\n                *(in_EAX + 0x15) = *(in_EAX + 0x15) | 1;\n            }\n        }\n    }\n    else {\n        var_14h = fcn.0044c6cc();\n        if ((var_14h != NULL) && (cVar2 = (**(*var_14h + 0xf0))(),  cVar2 != '\\0')) {\n            return;\n        }\n    }\ncode_r0x0043603a:\n    (**(*in_EAX + -0x14))();\n    return;\n}\n",
        "token_count": 793
    },
    "00436174": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00436174(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x122) != 0) {\n        iVar1 = (**(*in_EAX + 0x3c))();\n        if (iVar1 != 0) {\n            iVar1 = (**(*in_EAX + 0x3c))();\n            if (*(iVar1 + 0x40) != in_EAX[0x48]) {\n                (*in_EAX[0x48])();\n                return;\n            }\n        }\n    }\n    if (((*(in_EAX + 7) & 0x10) == 0) && (in_EAX[0x1b] != 0)) {\n        (**(*in_EAX[0x1b] + 0x18))();\n    }\n    else if (*(in_EAX + 0x122) != 0) {\n        (*in_EAX[0x48])();\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "004361e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004361e0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x12a) != 0) {\n        (**(in_EAX + 0x128))();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00436200": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00436200(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xd2) != 0) {\n        (**(in_EAX + 0xd0))(arg_8h, arg_ch, in_ECX);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0043637c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.0043637c(uint *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    char cVar4;\n    \n    cVar4 = '\\0';\n    uVar1 = *param_2;\n    uVar2 = *param_1;\n    cVar3 = fcn.00435c58();\n    if (cVar3 != '\\0') {\n        if (((*(in_EAX + 0x5c) == '\\0') || (cVar3 = fcn.00435bec(),  cVar3 != '\\0')) ||\n           (cVar3 = fcn.00435c58(),  cVar3 != '\\0')) {\n            cVar4 = '\\x01';\n        }\n        else {\n            cVar4 = '\\0';\n        }\n        if (cVar4 != '\\0') {\n            *param_2 = uVar1;\n            *param_1 = uVar2;\n        }\n    }\n    return cVar4;\n}\n",
        "token_count": 238
    },
    "004364b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004364b8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xda) != 0) {\n        (**(in_EAX + 0xd8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00436560": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00436560(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xe2) != 0) {\n        (**(in_EAX + 0xe0))(arg_8h, arg_ch, in_ECX);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "004368c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004368c0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*(*0x46fc24 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        (**(*in_EAX + 0x7c))();\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00436938": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00436938(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x56) != '\\0') {\n        fcn.00434d38();\n        *(in_EAX + 0x56) = 1;\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "00436aac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436aac(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = (**(*in_EAX + 0x54))();\n    if ((cVar1 == '\\0') || (in_EAX[0xc] == 0)) {\n        iVar2 = fcn.0043699c();\n        if (iVar2 != 0) {\n            *(*(param_2 + 8) + 4) = iVar2;\n            uVar3 = fcn.0043b420();\n            *(*(param_2 + 8) + 8) = uVar3;\n        }\n    }\n    else {\n        fcn.00436a20(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "00436b0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00436b53)\n\nvoid __fastcall fcn.00436b0c(char param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x436bfa;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.004033dc();\n    if (cVar1 != '\\0') {\n        if (param_1 != '\\0') {\n            fcn.00434c44();\n        }\n        fcn.00434c74();\n        if ((param_1 == '\\0') || (cVar1 = (**(*in_EAX + 0x50))(),  cVar1 == '\\x01')) {\n            (**(*in_EAX + 100))();\n        }\n        if ((param_1 == '\\0') || (in_EAX[0x20] == 0)) {\n            fcn.00403fdc();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x57) == '\\x01')) {\n            fcn.00434b64();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x122) == 0)) {\n            in_EAX[0x48] = *(param_2 + 0x40);\n            in_EAX[0x49] = *(param_2 + 0x44);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x436c01;\n    uStack32 = 0x436bf9;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 436
    },
    "00436fb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436fb0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar auStack28 [12];\n    \n    if (*(param_2 + 0xc) == 0) {\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            fcn.00406b28();\n            cVar1 = fcn.00415ae0();\n            if (cVar1 == '\\0') {\n                fcn.00434798();\n                (**(*in_EAX + 0x44))(uStack52, uStack48);\n                iVar2 = sub.user32.dll_PtInRect(auStack28);\n                if (iVar2 == 0) {\n                    (**(*in_EAX + -0x10))();\n                    return;\n                }\n            }\n            fcn.0040344c();\n            *(param_2 + 0xc) = 0;\n            piVar3 = fcn.0040344c();\n            if ((piVar3 != NULL) && (*(piVar3 + 0x61) != '\\0')) {\n                fcn.004347c4();\n                piVar3[0x19] = in_EAX;\n                cVar1 = fcn.00415ae0();\n                if (cVar1 != '\\0') {\n                    fcn.00415a68();\n                    fcn.0043476c();\n                }\n                (**(*piVar3 + 0x40))();\n                *(param_2 + 0xc) = 1;\n            }\n            if (*(param_2 + 0xc) == 0) {\n                (**(*in_EAX + -0x10))();\n            }\n        }\n        else {\n            (**(*in_EAX + -0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 436
    },
    "00437270": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437270(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char extraout_DL;\n    \n    piVar1 = fcn.004035c4();\n    fcn.0041cb1c();\n    if (*(piVar1 + 0x6a) != '\\0') {\n        *(piVar1 + 0x6a) = 0;\n        fcn.00432900();\n    }\n    fcn.00405848();\n    fcn.00403250();\n    if (piVar1[0xc] != 0) {\n        fcn.00437f10();\n    }\n    if (piVar1[0x60] != 0) {\n        (**(*piVar1 + 0xac))();\n    }\n    iVar2 = fcn.00438150();\n    while (iVar2 != 0) {\n        piVar3 = fcn.00438114();\n        fcn.00437f7c();\n        (**(*piVar3 + -4))();\n        iVar2 = fcn.00438150();\n    }\n    fcn.00403250();\n    if (piVar1[99] != 0) {\n        fcn.0041d9a4();\n    }\n    fcn.00433e2c();\n    if ('\\0' < extraout_DL) {\n        fcn.004035ac();\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "00437340": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437340(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x19c) == 0) {\n        return;\n    }\n    puStack28 = 0x437367;\n    fcn.00403220();\n    uStack32 = 0x437404;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar3 = *(*(in_EAX + 0x19c) + 8);\n    puStack28 = &stack0xfffffffc;\n    fcn.00417064();\n    iVar2 = iVar3;\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar1 = fcn.00416ec4();\n            if ((-1 < *(iVar1 + 0x1a0)) && (*(iVar1 + 0x1a0) < iVar3)) {\n                fcn.00416fb8();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar2 = fcn.00416ec4();\n            if (iVar2 != 0) {\n                fcn.0043b5e0();\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x43740b;\n    uStack32 = 0x437403;\n    fcn.00403250();\n    return;\n}\n",
        "token_count": 418
    },
    "0043795c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043795c(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    (**(**(arg_8h + -0xc) + 8))();\n    if (((*(arg_8h + -0x10) != 0) &&\n        (((in_AL == '\\0' || (*(*(arg_8h + -0x10) + 0x57) != '\\0')) ||\n         (((*(*(arg_8h + -0x10) + 0x1c) & 0x10) != 0 && ((*(*(arg_8h + -0x10) + 0x51) & 4) == 0)))))) &&\n       (in_AL == *(*(arg_8h + -0x10) + 0x5b))) {\n        fcn.00416d68();\n    }\n    var_8h = fcn.00438150();\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = fcn.00438114();\n            if (((in_AL == *(iVar2 + 0x5b)) &&\n                ((((in_AL == '\\0' || (*(iVar2 + 0x57) != '\\0')) || (*0x437ac8 == (*0x437ac8 & *(iVar2 + 0x50)))) ||\n                 (((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)))))) && (iVar2 != *(arg_8h + -0x10))) {\n                for (iVar2 = 0; iVar2 < *(*(arg_8h + -0xc) + 8); iVar2 = iVar2 + 1) {\n                    arg_8h_00 = arg_8h;\n                    fcn.00416ec4();\n                    cVar1 = fcn.00437490(arg_8h_00);\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00416f40();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    var_8h = *(*(arg_8h + -0xc) + 8);\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = arg_8h;\n            fcn.00416ec4();\n            fcn.0043751c(iVar2);\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 644
    },
    "00437acc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00437acc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00438150();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00438114();\n            if (*(iVar2 + 0x5b) != '\\0') {\n                return 1;\n            }\n            iVar2 = fcn.00438114();\n            if (*0x437b1c != *(iVar2 + 0x61)) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 166
    },
    "00437b20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437b20(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x6a) != '\\0') && (*(in_EAX + 0x1a7) != '\\0')) && (in_EAX[0x5f] != 0)) {\n        (**(*in_EAX[0x5f] + 0x2c))();\n    }\n    uStack32 = 0x437b6a;\n    cVar1 = fcn.00437acc(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x8c))();\n        fcn.00403220();\n        uStack32 = 0x437bff;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        fcn.0043795c(&stack0xfffffffc);\n        fcn.0043795c(&stack0xfffffffc);\n        fcn.0043795c(&stack0xfffffffc);\n        fcn.0043795c(&stack0xfffffffc);\n        fcn.0043795c(&stack0xfffffffc);\n        fcn.0043795c(&stack0xfffffffc);\n        fcn.0043795c(&stack0xfffffffc);\n        fcn.0040344c();\n        *in_FS_OFFSET = uStack36;\n        uStack32 = 0x437bfe;\n        fcn.00403250();\n        return;\n    }\n    if (*(in_EAX + 0x1a6) != '\\0') {\n        fcn.0040344c();\n    }\n    return;\n}\n",
        "token_count": 418
    },
    "00437c24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437c24(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_4h;\n    \n    puStack32 = 0x437c38;\n    cVar1 = fcn.0043b724();\n    if ((cVar1 != '\\0') && ((*(in_EAX + 7) & 8) == 0)) {\n        if (*(in_EAX + 0x58) == 0) {\n            puStack32 = 0x437c64;\n            fcn.00437cb8();\n            uStack36 = 0x437cab;\n            uStack40 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd8;\n            puStack32 = &stack0xfffffffc;\n            (**(*in_EAX + 0x44))();\n            (**(*in_EAX + 0x90))();\n            *in_FS_OFFSET = uStack40;\n            puStack32 = 0x437cb2;\n            *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n            uStack36 = 0x437caa;\n            fcn.00437cc0();\n            return;\n        }\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) | 0x10;\n    }\n    return;\n}\n",
        "token_count": 340
    },
    "00437cc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437cc0(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x160) = *(in_EAX + 0x160) + -1;\n    if ((*(in_EAX + 0x160) == 0) && ((*(in_EAX + 0x54) & 0x10) != 0)) {\n        fcn.00437ce0();\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "00438170": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438170(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00438150();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00438114();\n            (**(iVar2 + 0x38))();\n            if (*(param_2 + 0xc) != 0) {\n                return;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "004383d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004383d8(void)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint *arg_ch;\n    uint uStack216;\n    uint uStack212;\n    uchar *puStack208;\n    uint var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    uint lpWndClass;\n    code *var_b0h;\n    uint var_8ch;\n    uint var_85h;\n    int32_t var_70h;\n    uint var_68h;\n    code *var_64h;\n    uint hInstance;\n    uint *var_44h;\n    uint lpClassName;\n    \n    puStack208 = &stack0xfffffffc;\n    uStack212 = 0x438599;\n    uStack216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack216;\n    (**(*in_EAX + 0x98))();\n    if ((var_70h == 0) && ((var_85h & 0x40) != 0)) {\n        if ((in_EAX[1] != 0) && ((*(in_EAX[1] + 0x1c) & 2) != 0)) {\n            cVar1 = fcn.004033dc();\n            if (cVar1 != '\\0') {\n                var_70h = fcn.0043b420();\n                goto code_r0x00438484;\n            }\n        }\n        var_bch = in_EAX[2];\n        var_b8h._0_1_ = 0xb;\n        arg_ch = &var_bch;\n        uVar5 = 0;\n        fcn.00405d0c();\n        fcn.0040b5a0(uVar5, arg_ch);\n        fcn.004039c4();\n    }\ncode_r0x00438484:\n    in_EAX[0x5d] = var_64h;\n    iVar3 = sub.user32.dll_GetClassInfoA(hInstance, &lpClassName, &lpWndClass);\n    if ((iVar3 == 0) || (var_b0h != fcn.004319f4)) {\n        if (iVar3 != 0) {\n            sub.user32.dll_UnregisterClassA(&lpClassName, hInstance);\n        }\n        var_64h = fcn.004319f4;\n        var_44h = &lpClassName;\n        iVar2 = sub.user32.dll_RegisterClassA(&var_68h);\n        if (iVar2 == 0) {\n            fcn.0040c9a4();\n        }\n    }\n    *0x464a08 = in_EAX;\n    (**(*in_EAX + 0x9c))();\n    if (in_EAX[0x60] == 0) {\n        fcn.0040c9a4();\n    }\n    uVar4 = sub.user32.dll_GetWindowLongA(in_EAX[0x60], 0xfffffff0);\n    if ((uVar4 & 0x40000000) != 0) {\n        iVar3 = sub.user32.dll_GetWindowLongA(in_EAX[0x60], 0xfffffff4);\n        if (iVar3 == 0) {\n            sub.user32.dll_SetWindowLongA(in_EAX[0x60], 0xfffffff4, in_EAX[0x60]);\n        }\n    }\n    fcn.00408814();\n    in_EAX[0x19] = 0;\n    fcn.0043b730();\n    uVar5 = 1;\n    fcn.0041f8f4();\n    fcn.00435dec(uVar5);\n    if (*(in_EAX + 0x17) != '\\0') {\n        fcn.0040344c();\n    }\n    *in_FS_OFFSET = uVar5;\n    fcn.00403f88(0x4385a0);\n    return;\n}\n",
        "token_count": 901
    },
    "00438688": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00438688(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0x1000000;\n    if ((*(*(arg_8h + -4) + 0x20) == 0) || (uVar1 = fcn.00438674(),  uVar1 == '\\0')) {\n        iVar3 = *(*(arg_8h + -8) + 0x198);\n        if ((iVar3 != 0) && (iVar3 = *(iVar3 + 8),  -1 < iVar3 + -1)) {\n            do {\n                uVar2 = fcn.00416ec4();\n                if ((*(uVar2 + 0x5b) == '\\0') && (uVar1 = uVar2 & 0xffffff00,  *0x43875c != *(uVar2 + 0x61)))\n                goto code_r0x00438753;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        uVar1 = *(*(arg_8h + -8) + 0x19c);\n        if ((uVar1 != 0) && (iVar3 = *(uVar1 + 8),  -1 < iVar3 + -1)) {\n            do {\n                uVar2 = fcn.00416ec4();\n                uVar1 = uVar2;\n                if ((*(uVar2 + 0x5b) == '\\0') && (uVar1 = uVar2 & 0xffffff00,  *0x43875c != *(uVar2 + 0x61)))\n                goto code_r0x00438753;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    _auStack8 = 0;\ncode_r0x00438753:\n    return uVar1 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 489
    },
    "00438978": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438978(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0x60] != 0) {\n        if ((in_EAX[0x67] != 0) && (iVar1 = *(in_EAX[0x67] + 8),  -1 < iVar1 + -1)) {\n            do {\n                fcn.00416ec4();\n                fcn.00438978();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        (**(*in_EAX + 0xb0))();\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "004389c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004389c0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x180) != 0) {\n        fcn.00435dec(0);\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "00438a18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438a18(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x57) == '\\0') && (((*(in_EAX + 7) & 0x10) == 0 || ((*(in_EAX + 0x51) & 4) != 0)))) ||\n       ((*(in_EAX + 0x15) & 8) != 0)) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = '\\x01';\n    }\n    if (cVar1 != '\\0') {\n        if (in_EAX[0x60] == 0) {\n            puStack28 = 0x438a6e;\n            (**(*in_EAX + 0x94))();\n        }\n        if ((in_EAX[0x67] != 0) && (iVar2 = *(in_EAX[0x67] + 8),  -1 < iVar2 + -1)) {\n            do {\n                puStack28 = 0x438a96;\n                fcn.00416ec4();\n                puStack28 = 0x438a9b;\n                fcn.00438a18();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    if ((in_EAX[0x60] != 0) && (*(in_EAX + 0x1a6) != cVar1)) {\n        *(in_EAX + 0x1a6) = cVar1;\n        uStack32 = 0x438aee;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        uVar3 = 0;\n        puStack28 = &stack0xfffffffc;\n        fcn.00435dec(0);\n        *in_FS_OFFSET = uVar3;\n    }\n    return;\n}\n",
        "token_count": 476
    },
    "00438b14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438b14(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    \n    while (iVar1 = *(in_EAX + 0x30),  iVar1 != 0) {\n        in_EAX = iVar1;\n        if (*(iVar1 + 0x1a6) == '\\0') {\n            return;\n        }\n    }\n    cVar2 = fcn.004033dc();\n    if ((cVar2 == '\\0') && (*(in_EAX + 400) == 0)) {\n        return;\n    }\n    fcn.00438a18();\n    return;\n}\n",
        "token_count": 145
    },
    "00438b54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438b54(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint arg_8h;\n    \n    if ((*(in_EAX + 0x30) == 0) && (param_2 != *(in_EAX + 400))) {\n        if ((*(in_EAX + 0x180) == 0) || ((*(in_EAX + 400) == 0 || (param_2 == 0)))) {\n            fcn.00438978();\n            *(in_EAX + 400) = param_2;\n        }\n        else {\n            *(in_EAX + 400) = param_2;\n            sub.user32.dll_SetParent(*(in_EAX + 0x180), param_2);\n            if ((4 < **0x46f858) && (**0x46fc18 == 2)) {\n                arg_8h = 0;\n                fcn.00406b54();\n                fcn.00435dec(arg_8h);\n            }\n        }\n        fcn.00438b14();\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "00438c54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438c54(int32_t arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint lprc;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00415a68();\n    *(arg_8h + -0xc) = var_8h;\n    *(arg_8h + -8) = var_4h;\n    (**(*in_EAX + 0x44))(*(arg_8h + -0xc), *(arg_8h + -8));\n    iVar3 = sub.user32.dll_PtInRect(&lprc);\n    if (iVar3 != 0) {\n        if (((*(in_EAX + 7) & 0x10) != 0) && ((*(in_EAX + 0x57) != '\\0' || ((*(in_EAX + 0x51) & 4) == 0)))) {\ncode_r0x00438cf9:\n            bVar1 = true;\n            goto code_r0x00438cfb;\n        }\n        if (*(in_EAX + 0x57) != '\\0') {\n            cVar2 = (**(*in_EAX + 0x50))();\n            if ((cVar2 != '\\0') || (*(arg_8h + -0xd) != '\\0')) {\n                arg_8h_00 = fcn.00406b3c();\n                iVar3 = fcn.00435dec(arg_8h_00);\n                if (iVar3 != 0) goto code_r0x00438cf9;\n            }\n        }\n    }\n    bVar1 = false;\ncode_r0x00438cfb:\n    if (bVar1) {\n        *(arg_8h + -0x14) = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 431
    },
    "00438d0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00438d0c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_14h;\n    uint var_dh;\n    uint var_4h;\n    \n    if (((arg_8h != '\\0') && (*(in_EAX + 0x19c) != 0)) && (iVar2 = *(*(in_EAX + 0x19c) + 8) + -1,  -1 < iVar2)) {\n        do {\n            puVar3 = &stack0xfffffffc;\n            fcn.00416ec4();\n            cVar1 = fcn.00438c54(puVar3);\n            if (cVar1 != '\\0') break;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if ((*(in_EAX + 0x198) != 0) && (iVar2 = *(*(in_EAX + 0x198) + 8) + -1,  -1 < iVar2)) {\n        do {\n            puVar3 = &stack0xfffffffc;\n            fcn.00416ec4();\n            cVar1 = fcn.00438c54(puVar3);\n            if (cVar1 != '\\0') {\n                return 0;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 337
    },
    "00438da0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00438da0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.0043b420();\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar1 == iVar2) {\n        if ((*0x464ac8 == 0) || (iVar1 = *0x464ac8,  in_EAX != *(*0x464ac8 + 0x30))) {\n            iVar1 = 0;\n        }\n    }\n    else {\n        uVar3 = 0;\n        fcn.00406b28();\n        iVar1 = fcn.00438d0c(uVar3);\n    }\n    if (iVar1 != 0) {\n        uVar3 = fcn.00406b3c(*(param_2 + 8) - *(iVar1 + 0x40), *(param_2 + 10) - *(iVar1 + 0x44));\n        uVar3 = fcn.00435dec(uVar3);\n        *(param_2 + 0xc) = uVar3;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 277
    },
    "00438e34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438e34(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    iVar4 = *param_2;\n    if (iVar4 < 0x85) {\n        if (iVar4 == 0x84) {\n            fcn.00435eb8();\n            if (param_2[3] != -1) {\n                return;\n            }\n            uVar6 = 0;\n            fcn.00406b28();\n            fcn.00434798();\n            iVar4 = fcn.00438d0c(uVar6);\n            if (iVar4 == 0) {\n                return;\n            }\n            param_2[3] = 1;\n            return;\n        }\n        if (iVar4 == 7) {\n            piVar3 = fcn.0044c6cc();\n            if ((piVar3 != NULL) && (cVar1 = (**(*piVar3 + 0xe8))(),  cVar1 == '\\0')) {\n                return;\n            }\n            goto code_r0x00438f87;\n        }\n        if (iVar4 != 8) {\n            if (iVar4 == 0x1f) {\n                iVar4 = fcn.0043b420();\n                iVar5 = sub.user32.dll_GetCapture();\n                if (((iVar4 == iVar5) && (*0x464ac8 != 0)) && (in_EAX == *(*0x464ac8 + 0x30))) {\n                    fcn.00435dec(0);\n                }\n            }\n            goto code_r0x00438f87;\n        }\n        uVar2 = *(in_EAX + 0x54) & 0x20;\n    }\n    else {\n        if (8 < iVar4 - 0x100U) {\n            if ((iVar4 - 0x200U < 0xb) && (cVar1 = fcn.00438da0(),  cVar1 != '\\0')) {\n                if (param_2[3] != 0) {\n                    return;\n                }\n                cVar1 = fcn.0043b724();\n                if (cVar1 == '\\0') {\n                    return;\n                }\n                uVar6 = fcn.0043b420(*param_2, param_2[1], param_2[2]);\n                sub.user32.dll_DefWindowProcA(uVar6);\n                return;\n            }\n            goto code_r0x00438f87;\n        }\n        uVar2 = fcn.004353a8();\n    }\n    if (uVar2 != 0) {\n        return;\n    }\ncode_r0x00438f87:\n    fcn.00435eb8();\n    return;\n}\n",
        "token_count": 641
    },
    "00438f98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438f98(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x180) == 0) {\n        fcn.0043604c();\n    }\n    else {\n        if ((*param_2 == 0x7b) && (*(in_EAX + 0x30) != 0)) {\n            iVar1 = fcn.00435dec(param_2[2]);\n            param_2[3] = iVar1;\n            if (iVar1 != 0) {\n                return;\n            }\n        }\n        iVar1 = *param_2;\n        if (iVar1 - 0x132U < 7) {\n            iVar1 = sub.user32.dll_SendMessageA(param_2[2], iVar1 + 0xbc00, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 - 0xbd32U < 7) {\n            uVar2 = fcn.0041f420();\n            sub.gdi32.dll_SetTextColor(param_2[1], uVar2);\n            fcn.004200a4();\n            uVar2 = fcn.0041f420();\n            sub.gdi32.dll_SetBkColor(param_2[1], uVar2);\n            iVar1 = fcn.004200e0();\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 == *0x470b2c) {\n            param_2[3] = in_EAX;\n        }\n        else {\n            iVar1 = sub.user32.dll_CallWindowProcA(*(in_EAX + 0x174), *(in_EAX + 0x180), iVar1, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        if (*param_2 == 0xc) {\n            fcn.004347f4(param_2[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 468
    },
    "004390d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004390d4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff80;\n    int32_t iVar5;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint *puStack100;\n    uint var_50h;\n    uint nSavedDC;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    iVar1 = *(param_2 + 4);\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (iVar1 == 0) {\n        puStack100 = &fcn.004390d4::var_50h;\n        uStack104 = 0x4390f9;\n        uStack104 = fcn.0043b420();\n        puStack108 = 0x4390ff;\n        iVar1 = sub.user32.dll_BeginPaint();\n    }\n    uStack112 = 0x4391f4;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (var_4h[0x66] == 0) {\n        puStack108 = &stack0xfffffffc;\n        (**(*var_4h + 0xb8))();\n        iVar1 = in_stack_ffffff80;\n    }\n    else {\n        iVar5 = iVar1;\n        puStack108 = &stack0xfffffffc;\n        nSavedDC = sub.gdi32.dll_SaveDC(iVar1);\n        var_ch = 2;\n        iVar4 = *(var_4h[0x66] + 8);\n        if (-1 < iVar4 + -1) {\n            do {\n                iVar2 = fcn.00416ec4();\n                if ((((*(iVar2 + 0x57) != '\\0') || (((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)))) &&\n                    ((*(iVar2 + 0x50) & 0x40) != 0)) &&\n                   (iVar5 = iVar1,  var_ch = sub.gdi32.dll_ExcludeClipRect(),  var_ch == 1)) break;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        if (var_ch != 1) {\n            (**(*var_4h + 0xb8))(iVar5);\n        }\n        sub.gdi32.dll_RestoreDC(iVar1, nSavedDC);\n    }\n    fcn.0043922c();\n    *in_FS_OFFSET = iVar1;\n    if (*(var_8h + 4) == 0) {\n        uVar3 = fcn.0043b420(&fcn.004390d4::var_50h, 0x4391fb);\n        sub.user32.dll_EndPaint(uVar3);\n    }\n    return;\n}\n",
        "token_count": 713
    },
    "0043922c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043922c(int32_t param_1, uchar *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puStack72;\n    uchar *puStack68;\n    uchar *puStack48;\n    uint uStack44;\n    int32_t iStack36;\n    uchar auStack32 [16];\n    \n    if (((*(in_EAX + 0x1a8) != '\\0') && (*(in_EAX + 0x1a7) != '\\0')) && (*(in_EAX + 0x17c) != 0)) {\n        (**(**(in_EAX + 0x17c) + 0x20))();\n    }\n    if (*(in_EAX + 0x198) != 0) {\n        iVar4 = 0;\n        if ((param_1 != 0) && (iVar4 = fcn.00416f20(),  iVar4 < 0)) {\n            iVar4 = 0;\n        }\n        puStack48 = *(*(in_EAX + 0x198) + 8);\n        if (iVar4 < puStack48) {\n            do {\n                iVar1 = fcn.00416ec4();\n                if ((*(iVar1 + 0x57) != '\\0') || (((*(iVar1 + 0x1c) & 0x10) != 0 && ((*(iVar1 + 0x51) & 4) == 0)))) {\n                    fcn.00415a90(&stack0xffffffe0, *(iVar1 + 0x44) + *(iVar1 + 0x4c));\n                    puStack68 = 0x4392ea;\n                    iVar2 = sub.gdi32.dll_RectVisible();\n                    puStack48 = param_2;\n                    if (iVar2 != 0) {\n                        if ((*(in_EAX + 0x54) & 0x80) != 0) {\n                            *(iVar1 + 0x54) = *(iVar1 + 0x54) | 0x80;\n                        }\n                        puStack72 = 0x439300;\n                        puStack68 = param_2;\n                        sub.gdi32.dll_SaveDC();\n                        puStack72 = 0x439311;\n                        fcn.00433590();\n                        puStack72 = *(iVar1 + 0x4c);\n                        sub.gdi32.dll_IntersectClipRect(param_2, 0, 0, *(iVar1 + 0x48));\n                        fcn.00435dec(0);\n                        sub.gdi32.dll_RestoreDC();\n                        *(iVar1 + 0x54) = *(iVar1 + 0x54) & 0xff7f;\n                    }\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < puStack48);\n        }\n    }\n    if ((*(in_EAX + 0x19c) != 0) && (iStack36 = *(*(in_EAX + 0x19c) + 8),  -1 < iStack36 + -1)) {\n        do {\n            iVar4 = fcn.00416ec4();\n            if (((*(iVar4 + 0x1a5) != '\\0') && ((*(iVar4 + 0x50) & 0x10) != 0)) &&\n               ((*(iVar4 + 0x57) != '\\0' || (((*(iVar4 + 0x1c) & 0x10) != 0 && ((*(iVar4 + 0x51) & 4) == 0)))))) {\n                fcn.0041f420();\n                uStack44 = sub.gdi32.dll_CreateSolidBrush();\n                puVar5 = &stack0xffffffdc;\n                puStack68 = 0x4393e7;\n                fcn.00415a90(puVar5, *(iVar4 + 0x44) + *(iVar4 + 0x4c));\n                puStack68 = &stack0xffffffd4;\n                puStack72 = param_2;\n                sub.user32.dll_FrameRect();\n                sub.gdi32.dll_DeleteObject(puVar5);\n                uVar3 = fcn.0041f420();\n                uVar3 = sub.gdi32.dll_CreateSolidBrush(uVar3);\n                iVar4 = *(iVar4 + 0x44) + *(iVar4 + 0x4c) + 1;\n                puVar5 = &stack0xffffffc0;\n                puStack72 = uVar3;\n                fcn.00415a90(puVar5, iVar4);\n                sub.user32.dll_FrameRect(param_2, &stack0xffffffb8, puVar5, iVar4, uVar3);\n                sub.gdi32.dll_DeleteObject(puVar5);\n            }\n            iStack36 = iStack36 + -1;\n        } while (iStack36 != 0);\n    }\n    return;\n}\n",
        "token_count": 1107
    },
    "0043945c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043945c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lprc;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint nSavedDC;\n    uint edge;\n    int32_t var_4h;\n    \n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x80;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    fcn.00433590();\n    sub.gdi32.dll_IntersectClipRect();\n    iVar3 = 0;\n    edge = 0;\n    uVar1 = fcn.0043b420(0xffffffec);\n    uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n    if ((uVar2 & 0x200) == 0) {\n        uVar1 = fcn.0043b420(0xfffffff0);\n        uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n        if ((uVar2 & 0x800000) != 0) {\n            edge = 3;\n            iVar3 = 0xa00f;\n        }\n    }\n    else {\n        edge = 10;\n        iVar3 = 0x200f;\n    }\n    if (iVar3 != 0) {\n        sub.user32.dll_SetRect(&lprc, 0, 0, *(in_EAX + 0x48), *(in_EAX + 0x4c));\n        sub.user32.dll_DrawEdge();\n        fcn.00433590();\n        sub.gdi32.dll_IntersectClipRect();\n    }\n    fcn.00435dec(0);\n    fcn.00435dec(0);\n    if ((*(in_EAX + 0x19c) != 0) && (iVar3 = *(*(in_EAX + 0x19c) + 8),  -1 < iVar3 + -1)) {\n        var_4h = 0;\n        var_10h = iVar3;\n        do {\n            iVar3 = fcn.00416ec4();\n            if (*(iVar3 + 0x57) != '\\0') {\n                fcn.0043945c(*(iVar3 + 0x44));\n            }\n            var_4h = var_4h + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    sub.gdi32.dll_RestoreDC();\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xff7f;\n    return;\n}\n",
        "token_count": 623
    },
    "00439874": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439874(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint arg_ch;\n    uint arg_10h;\n    uchar auStack28 [16];\n    \n    fcn.0042cf2c();\n    cVar1 = fcn.0042d00c();\n    if (((cVar1 == '\\0') || (in_EAX[0xc] == 0)) || ((*(in_EAX + 0x52) & 4) == 0)) {\n        if ((*(in_EAX + 0x7e) == '\\0') || (*(param_2 + 4) == *(param_2 + 8))) {\n            uVar2 = fcn.004200e0();\n            (**(*in_EAX + 0x44))(uVar2);\n            sub.user32.dll_FillRect(*(param_2 + 4), auStack28);\n        }\n    }\n    else {\n        arg_10h = 0;\n        arg_ch = 0;\n        uVar2 = 0;\n        fcn.0043b420();\n        fcn.0042d1a4(uVar2, arg_ch, arg_10h);\n    }\n    *(param_2 + 0xc) = 1;\n    return;\n}\n",
        "token_count": 301
    },
    "00439ba4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00439ba4(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x439c83;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*(*0x46fc24 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x188) != 0) {\n            fcn.00453448();\n            iVar2 = fcn.00407e64();\n            puVar1 = puStack24;\n            if (iVar2 != 0) {\n                piVar3 = fcn.00453248();\n                iVar2 = (**(*piVar3 + 0x14))();\n                puVar1 = puStack24;\n                if (iVar2 != 0) {\n                    uVar4 = *(**0x46fbf8 + 0x3c);\n                    if (*(in_EAX + 0x184) != '\\0') {\n                        piVar3 = fcn.00453248();\n                        iVar2 = (**(*piVar3 + 0x54))();\n                        if (-1 < iVar2) {\n                            uStack28 = 0x439c4a;\n                            piVar3 = fcn.00453248();\n                            uStack28 = 0x439c51;\n                            uVar4 = (**(*piVar3 + 0x18))();\n                        }\n                    }\n                    uStack28 = 1;\n                    uStack32 = uVar4;\n                    sub.user32.dll_ActivateKeyboardLayout();\n                    puVar1 = puStack24;\n                }\n            }\n        }\n        puStack24 = puVar1;\n        fcn.0043b420();\n        fcn.00440080();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x439c8a;\n    uStack28 = 0x439c82;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 512
    },
    "00439c90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00439c90(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffe0;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x439d1a;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack24;\n    puVar1 = &stack0xfffffffc;\n    if (*(*0x46fc24 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x188) != 0) {\n            fcn.00453448();\n            iVar2 = fcn.00407e64();\n            puVar1 = puStack16;\n            if (iVar2 != 0) {\n                in_stack_ffffffe0 = *(**0x46fbf8 + 0x3c);\n                sub.user32.dll_ActivateKeyboardLayout(in_stack_ffffffe0, 1);\n                puVar1 = puStack16;\n            }\n        }\n        puStack16 = puVar1;\n        puVar1 = puStack16;\n        if (*(in_EAX + 0x184) == '\\0') {\n            fcn.0043b420();\n            fcn.00440064();\n            puVar1 = puStack16;\n        }\n    }\n    puStack16 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffe0;\n    uStack24 = 0x439d21;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 386
    },
    "00439d3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00439d3c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1c2) != 0) {\n        (**(in_EAX + 0x1c0))();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00439d7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439d7c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = fcn.00415a80();\n    iVar1 = fcn.00435dec(arg_8h_00);\n    if ((-1 < iVar1) && (*(in_EAX + 0x1b2) != 0)) {\n        (**(in_EAX + 0x1b0))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00439dcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439dcc(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1ba) != 0) {\n        (**(in_EAX + 0x1b8))(arg_8h, arg_10h & 0xffffff00 | arg_ch & 0xff, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00439ef4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439ef4(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint uStack8;\n    \n    var_8h = *arg_ch;\n    uStack8 = arg_ch[1];\n    uVar1 = fcn.0043b420();\n    sub.user32.dll_GetWindowRect(uVar1);\n    sub.user32.dll_InflateRect();\n    if (*(in_EAX + 0x1d2) != 0) {\n        (**(in_EAX + 0x1d0))(arg_8h, &var_8h);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00439f50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00439f50(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00439ebc();\n    if ((0 < iVar1) && (iVar3 = iVar1 + -1,  -1 < iVar3)) {\n        do {\n            iVar2 = fcn.00416ec4();\n            if (*(iVar2 + 0x57) == '\\0') {\n                iVar1 = iVar1 + -1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 146
    },
    "00439ffc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439ffc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43a0a4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((param_2 != *(in_EAX + 0x1a8)) && (*(in_EAX + 0x1a8) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) {\n        fcn.00432900();\n        if (param_2 == '\\0') {\n            fcn.00403250();\n            *(in_EAX + 0x178) = 0;\n            fcn.00405848();\n        }\n        else {\n            if (*(in_EAX + 0x178) == 0) {\n                uVar1 = fcn.00403220();\n                *(in_EAX + 0x178) = uVar1;\n            }\n            fcn.0040344c();\n            fcn.00405860();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x43a0ab;\n    uStack28 = 0x43a0a3;\n    fcn.00405848();\n    return;\n}\n",
        "token_count": 349
    },
    "0043a0b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a0b4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        iVar1 = *(param_2 + 4);\n        var_18h = *(iVar1 + 0x44);\n        uStack24 = *(iVar1 + 0x48);\n        uStack20 = *(iVar1 + 0x4c);\n        uStack16 = *(iVar1 + 0x50);\n        uStack44 = 2;\n        puStack48 = &fcn.0043a0b4::var_18h;\n        uStack52 = 0x43a0ee;\n        var_8h = param_2;\n        var_4h = in_EAX;\n        uStack52 = fcn.0043b420();\n        uStack56 = 0;\n        puStack60 = 0x43a0f6;\n        sub.user32.dll_MapWindowPoints();\n        puStack60 = 0x43a0fe;\n        fcn.00437cb8();\n        uStack64 = 0x43a176;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        fcn.0040344c();\n        if ((*(var_4h + 0x1a7) != '\\0') && (*(var_4h + 0x17c) != 0)) {\n            (**(**(var_4h + 0x17c) + 0x18))(*(*(var_8h + 4) + 0x58));\n        }\n        *in_FS_OFFSET = uStack68;\n        puStack60 = 0x43a17d;\n        uStack64 = 0x43a175;\n        fcn.00437cc0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 533
    },
    "0043a1a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a1a0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 0xc) = 0;\n    if ((*(in_EAX + 0x1a7) != '\\0') && (*(in_EAX + 0x17c) != 0)) {\n        (**(**(in_EAX + 0x17c) + 0x28))();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0043a1c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043a1c8(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x43a1dd;\n    iVar2 = (**(*in_EAX + 0x58))();\n    puStack24 = 0x43a1e7;\n    iVar3 = fcn.00403198();\n    if (iVar2 == iVar3) {\n        cVar1 = *(in_EAX + 0x57);\n        uStack28 = 0x43a232;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.0040344c();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x43a243;\n        if (cVar1 != '\\0') {\n            uStack28 = 0x43a231;\n            fcn.00434ea4();\n        }\n        return;\n    }\n    puStack24 = 0x43a243;\n    fcn.00436aac();\n    return;\n}\n",
        "token_count": 296
    },
    "0043a24c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a24c(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1da) != 0) {\n        (**(in_EAX + 0x1d8))(param_1);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "0043a274": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043a274(uint32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.0044c6cc();\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x22d) != '\\0')) {\n        cVar1 = fcn.0043a274();\n        uStack20 = param_1;\n        if (cVar1 != '\\0') goto code_r0x0043a2d1;\n    }\n    uVar2 = fcn.0044c5d4();\n    uStack20 = param_1 & 0xffffff00 | uVar2;\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.0040344c();\n        if (*(param_2 + 4) == 0) goto code_r0x0043a2d1;\n    }\n    uVar4 = 0;\ncode_r0x0043a2d1:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 314
    },
    "0043a35c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043a35c(uint32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.0044c6cc();\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x22d) != '\\0')) {\n        cVar1 = fcn.0043a35c();\n        uStack20 = param_1;\n        if (cVar1 != '\\0') goto code_r0x0043a3b9;\n    }\n    uVar2 = fcn.0044c5d4();\n    uStack20 = param_1 & 0xffffff00 | uVar2;\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.0040344c();\n        if (*(param_2 + 4) == 0) goto code_r0x0043a3b9;\n    }\n    uVar4 = 0;\ncode_r0x0043a3b9:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 316
    },
    "0043a424": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043a424(uint32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.0044c6cc();\n    uStack20 = param_1;\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x22d) != '\\0')) {\n        cVar2 = fcn.0043a424();\n        if (cVar2 != '\\0') goto code_r0x0043a480;\n    }\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        uVar1 = *(param_2 + 4);\n        uStack20 = param_1 & 0xffffff00 | uVar1;\n        fcn.0040344c();\n        *(param_2 + 4) = uVar1;\n        if (*(param_2 + 4) == '\\0') goto code_r0x0043a480;\n    }\n    uVar4 = 0;\ncode_r0x0043a480:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 320
    },
    "0043a6c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a6c4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) {\n        *(param_2 + 0xc) = 1;\n        return;\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 107
    },
    "0043a6e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0043a6e8(uint param_1, uint8_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = fcn.00433f20();\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar3 = fcn.00438150();\n        iVar3 = iVar3 + -1;\n        if (-1 < iVar3) {\n            do {\n                if ((param_2 & uVar2) != 0) break;\n                fcn.00438114();\n                uVar1 = fcn.0040344c();\n                uVar2 = uVar2 & 0xffffff00 | uVar2 | uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != -1);\n        }\n    }\n    return CONCAT14(param_2, uVar2);\n}\n",
        "token_count": 220
    },
    "0043a79c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a79c(uint param_1, int32_t param_2)\n\n{\n    fcn.004368c0();\n    if ((*(*0x46fc24 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        fcn.004389c0();\n    }\n    fcn.004381b0();\n    return;\n}\n",
        "token_count": 90
    },
    "0043a8b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043a8b4(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x57) == '\\0') && (*(in_EAX + 0x30) != 0)) {\n        fcn.00437f10();\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || ((*(in_EAX + 0x51) & 4) != 0)) {\n        fcn.00438b14();\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0043aa38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043aa38(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x50) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        cVar1 = fcn.0043b724();\n        if (cVar1 != '\\0') {\n            iVar2 = sub.user32.dll_IsWindowVisible(*(in_EAX + 0x180));\n            if (iVar2 != 0) {\n                fcn.0043b328();\n            }\n        }\n    }\n    fcn.004381b0();\n    return;\n}\n",
        "token_count": 156
    },
    "0043ab64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.0043ab64(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uStack20;\n    \n    uVar1 = uStack20;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (in_EAX != 0) {\n            do {\n                iVar2 = fcn.0040344c();\n                if ((iVar2 != 0) && (*(iVar2 + 0x38) != 0)) {\n                    uVar3 = fcn.0040344c();\n                    if (uVar3 != '\\0') goto code_r0x0043abed;\n                }\n                in_EAX = *(in_EAX + 0x30);\n            } while (in_EAX != 0);\n        }\n        iVar2 = fcn.0044c6cc();\n        if (iVar2 != 0) {\n            uVar3 = fcn.0040344c();\n            if (uVar3 != '\\0') goto code_r0x0043abed;\n        }\n    }\n    uVar3 = fcn.00431b3c();\n    if (uVar3 == 0) {\n        uStack20 = uVar1 & 0xffffff00;\n    }\ncode_r0x0043abed:\n    return CONCAT44(uStack20, uVar3 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 361
    },
    "0043afd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043afd8(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack32;\n    \n    iVar4 = *(in_EAX + 0x180);\n    if ((iVar4 == 0) || (iVar3 = sub.user32.dll_IsWindowVisible(),  iStack32 = iVar4,  iVar3 == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        sub.user32.dll_ScrollWindow(*(in_EAX + 0x180), iStack32, param_2, 0, 0);\n    }\n    iVar4 = fcn.00438150();\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar3 = fcn.00438114();\n            cVar2 = fcn.004033dc();\n            if ((cVar2 == '\\0') || (*(iVar3 + 0x180) == 0)) {\n                *(iVar3 + 0x40) = *(iVar3 + 0x40) + iStack32;\n                *(iVar3 + 0x44) = *(iVar3 + 0x44) + param_2;\n            }\n            else if (!bVar1) {\n                iStack32 = *(iVar3 + 0x180);\n                sub.user32.dll_SetWindowPos();\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    fcn.00437ce0();\n    return;\n}\n",
        "token_count": 377
    },
    "0043b0c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b0c8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = *(*(in_EAX + 0x30) + 0x198);\n        if (iVar2 != 0) {\n            param_2 = param_2 - *(iVar2 + 8);\n        }\n        iVar2 = fcn.00416f20();\n        if (-1 < iVar2) {\n            iVar1 = *(*(*(in_EAX + 0x30) + 0x19c) + 8);\n            if (param_2 < 0) {\n                param_2 = 0;\n            }\n            if (iVar1 <= param_2) {\n                param_2 = iVar1 + -1;\n            }\n            if (iVar2 != param_2) {\n                fcn.00416db4();\n                fcn.00416f40();\n            }\n        }\n        if (*(in_EAX + 0x180) != 0) {\n            if (param_2 == 0) {\n                uVar3 = 1;\n            }\n            else if (param_2 == *(*(*(in_EAX + 0x30) + 0x19c) + 8) + -1) {\n                uVar3 = 0;\n            }\n            else if (iVar2 < param_2) {\n                fcn.00416ec4();\n                uVar3 = fcn.0043b420();\n            }\n            else {\n                if (iVar2 <= param_2) {\n                    return;\n                }\n                fcn.00416ec4();\n                uVar3 = fcn.0043b420();\n            }\n            sub.user32.dll_SetWindowPos(*(in_EAX + 0x180), uVar3, 0, 0, 0, 0, 3);\n        }\n    }\n    return;\n}\n",
        "token_count": 453
    },
    "0043b3fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043b3fc(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[0x60] == 0) {\n        if (in_EAX[0xc] != 0) {\n            fcn.0043b3fc();\n        }\n        (**(*in_EAX + 0x94))();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "0043b724": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0043b724(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x180) != 0;\n}\n",
        "token_count": 49
    },
    "0043b848": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b848(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    char in_CL;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    var_ch = 0;\n    puStack40 = 0x43b86a;\n    iVar2 = fcn.00403220();\n    uStack44 = 0x43b93e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0040344c();\n    if (0 < *(iVar2 + 8)) {\n        var_10h = fcn.00416f20();\n        iVar4 = var_10h;\n        if (var_10h == -1) {\n            if (in_CL == '\\0') {\n                var_10h = 0;\n                iVar4 = var_10h;\n            }\n            else {\n                var_10h = *(iVar2 + 8) + -1;\n                iVar4 = var_10h;\n            }\n        }\n        do {\n            if (in_CL == '\\0') {\n                if (iVar4 == 0) {\n                    iVar4 = *(iVar2 + 8);\n                }\n                iVar4 = iVar4 + -1;\n            }\n            else {\n                iVar4 = iVar4 + 1;\n                if (iVar4 == *(iVar2 + 8)) {\n                    iVar4 = 0;\n                }\n            }\n            iVar3 = fcn.00416ec4();\n            cVar1 = fcn.0040344c();\n            if (((cVar1 != '\\0') && ((arg_ch == '\\0' || (*(iVar3 + 0x1a4) != '\\0')))) &&\n               ((arg_8h == '\\0' || (*(iVar3 + 0x30) == in_EAX)))) {\n                var_ch = iVar3;\n            }\n        } while ((var_ch == 0) && (iVar4 != var_10h));\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x43b945;\n    uStack44 = 0x43b93d;\n    fcn.00403250();\n    return;\n}\n",
        "token_count": 568
    },
    "0043ba10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ba10(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *in_ECX;\n    uint *in_EDX;\n    \n    iVar1 = in_EAX[0x1d];\n    if (*(iVar1 + 0x14) == 0) {\n        *in_EDX = 0;\n    }\n    else {\n        *in_EDX = *(in_EAX[0x1d] + 0x14);\n    }\n    if (*(iVar1 + 0x10) == 0) {\n        *in_ECX = 0;\n    }\n    else {\n        *in_ECX = *(in_EAX[0x1d] + 0x10);\n    }\n    if (*(iVar1 + 0xc) == 0) {\n        *arg_ch = 0;\n    }\n    else {\n        *arg_ch = *(in_EAX[0x1d] + 0xc);\n    }\n    if (*(iVar1 + 8) == 0) {\n        *arg_8h = 0;\n    }\n    else {\n        *arg_8h = *(in_EAX[0x1d] + 8);\n    }\n    (**(*in_EAX + 0x38))(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 302
    },
    "0043ba94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ba94(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t lprc;\n    int32_t var_59h;\n    int32_t var_55h;\n    int32_t var_51h;\n    char var_4dh;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.0043b724();\n    if ((cVar1 != '\\0') && (iVar3 = fcn.00438150(),  iVar3 != 0)) {\n        (**(*in_EAX + 0x44))();\n        (**(*in_EAX + 0x8c))();\n        iVar3 = sub.user32.dll_IsRectEmpty();\n        if (iVar3 == 0) {\n            var_14h = in_EAX[0x12] - (var_55h - lprc);\n            var_18h = in_EAX[0x13] - (var_51h - var_59h);\n            if (0 < *var_4h) {\n                *var_4h = *var_4h - var_14h;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h - var_18h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch - var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h - var_18h;\n            }\n            arg_8h_00 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff80;\n            var_20h = 0;\n            var_30h = 0;\n            var_24h = 0;\n            var_34h = 0;\n            var_28h = 0;\n            var_38h = 0;\n            var_2ch = 0;\n            var_3ch = 0;\n            var_10h = var_18h;\n            var_ch = var_14h;\n            iVar3 = fcn.00438150();\n            if (-1 < iVar3 + -1) {\n                var_1ch = 0;\n                do {\n                    iVar4 = fcn.00438114();\n                    if ((*(iVar4 + 0x57) != '\\0') || (((*(iVar4 + 0x1c) & 0x10) != 0 && ((*(iVar4 + 0x51) & 4) == 0))))\n                    {\n                        arg_8h_00 = &var_4ch;\n                        fcn.0043ba10(arg_8h_00, &var_44h);\n                        cVar1 = *(iVar4 + 0x5b);\n                        if (cVar1 == '\\0') {\n                            if (*0x43be68 == (*(iVar4 + 0x61) & *0x43be68)) {\n                                var_4dh = '\\x01';\n                                if (0 < var_40h) {\n                                    var_40h = ((var_55h - lprc) - *(iVar4 + 0x48)) - var_40h;\n                                }\n                                if (0 < var_44h) {\n                                    var_44h = ((var_55h - lprc) + var_44h) - *(iVar4 + 0x48);\n                                }\n                            }\n                            else {\n                                var_4dh = '\\0';\n                            }\n                        }\n                        else if (cVar1 - 1U < 2) {\n                            var_4dh = '\\x01';\n                        }\n                        else if (cVar1 == '\\x05') {\n                            var_4dh = '\\x02';\n                        }\n                        else {\n                            var_4dh = '\\x03';\n                        }\n                        if (*(iVar4 + 0x5b) == '\\0') {\n                            if (*0x43be6c == (*(iVar4 + 0x61) & *0x43be6c)) {\n                                cVar1 = '\\x01';\n                                if (0 < var_48h) {\n                                    var_48h = ((var_51h - var_59h) - *(iVar4 + 0x4c)) - var_48h;\n                                }\n                                if (0 < var_4ch) {\n                                    var_4ch = ((var_51h - var_59h) + var_4ch) - *(iVar4 + 0x4c);\n                                }\n                            }\n                            else {\n                                cVar1 = '\\0';\n                            }\n                        }\n                        else {\n                            uVar2 = *(iVar4 + 0x5b) - 3;\n                            if (uVar2 < 2) {\n                                cVar1 = '\\x01';\n                            }\n                            else if (uVar2 == 2) {\n                                cVar1 = '\\x02';\n                            }\n                            else {\n                                cVar1 = '\\x03';\n                            }\n                        }\n                        if (var_4dh - 1U < 2) {\n                            if (((0 < var_40h) && (*var_4h < var_40h)) && (*var_4h = var_40h,  var_20h < *var_4h)) {\n                                var_20h = *var_4h;\n                            }\n                            if (((0 < var_44h) && (var_44h < *arg_ch)) && (*arg_ch = var_44h,  var_24h < *arg_ch)) {\n                                var_24h = *arg_ch;\n                            }\n                        }\n                        else if (var_4dh == '\\x03') {\n                            var_30h = var_30h + *(iVar4 + 0x48);\n                            var_34h = var_34h + *(iVar4 + 0x48);\n                        }\n                        if (cVar1 - 1U < 2) {\n                            if (((0 < var_48h) && (*var_8h < var_48h)) && (*var_8h = var_48h,  var_28h < *var_8h)) {\n                                var_28h = *var_8h;\n                            }\n                            if (((0 < var_4ch) && (var_4ch < *arg_8h)) && (*arg_8h = var_4ch,  var_2ch < *arg_8h)) {\n                                var_2ch = *arg_8h;\n                            }\n                        }\n                        else if (cVar1 - 1U == 2) {\n                            var_38h = var_38h + *(iVar4 + 0x4c);\n                            var_3ch = var_3ch + *(iVar4 + 0x4c);\n                        }\n                    }\n                    var_1ch = var_1ch + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            if ((0 < var_20h) && (*var_4h < var_20h + var_30h)) {\n                *var_4h = var_20h + var_30h;\n            }\n            if ((0 < var_24h) && ((*arg_ch == 0 || (*arg_ch < var_24h + var_34h)))) {\n                *arg_ch = var_24h + var_34h;\n            }\n            if ((0 < var_28h) && (*var_8h < var_28h + var_38h)) {\n                *var_8h = var_28h + var_38h;\n            }\n            if ((0 < var_2ch) && ((*arg_8h == 0 || (*arg_8h < var_2ch + var_3ch)))) {\n                *arg_8h = var_2ch + var_3ch;\n            }\n            *in_FS_OFFSET = arg_8h_00;\n            if (0 < *var_4h) {\n                *var_4h = *var_4h + var_ch;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h + var_10h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch + var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h + var_18h;\n            }\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 2097
    },
    "0043beac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043beac(char param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.00436b0c();\n    cVar1 = fcn.004033dc();\n    if ((cVar1 != '\\0') && ((param_1 == '\\0' || (*(in_EAX + 0x158) == 0)))) {\n        fcn.004345bc();\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "0043bf24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0043bf24(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_38h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack76 = 0x43bf42;\n    piVar1 = fcn.0043b724();\n    if ((piVar1 != '\\0') && (piVar1 = in_EAX,  *(in_EAX + 0x5b) != '\\x05')) {\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            puStack76 = 0x43bf68;\n            piVar1 = fcn.00438150();\n            if (piVar1 < 1) goto code_r0x0043c0e6;\n        }\n        puStack76 = 0x43bf7e;\n        (**(*in_EAX + 0xb4))();\n        puStack76 = 0x43bf89;\n        (**(*in_EAX + 0x44))();\n        puStack76 = 0x43bf97;\n        (**(*in_EAX + 0x8c))();\n        puStack76 = 0x43bf9f;\n        fcn.00437cb8();\n        uStack80 = 0x43c053;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &stack0xfffffffc;\n        iVar2 = fcn.00438150();\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00438114();\n                if ((*(piVar1 + 0x57) != '\\0') || (((*(piVar1 + 7) & 0x10) != 0 && ((*(piVar1 + 0x51) & 4) == 0)))) {\n                    (**(*piVar1 + 0x84))(piVar1[0x13], piVar1[0x12]);\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *in_FS_OFFSET = uStack84;\n        puStack76 = 0x43c05a;\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n        uStack80 = 0x43c052;\n        uVar3 = fcn.00437cc0();\n        return uVar3;\n    }\ncode_r0x0043c0e6:\n    return piVar1 & 0xffffff00 | 1;\n}\n",
        "token_count": 669
    },
    "0043c624": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0043c624(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00433d54();\n    uVar1 = fcn.004201fc();\n    *(in_EAX + 0x160) = uVar1;\n    fcn.00433830();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 200
    },
    "0043c6c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c6c0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(param_2 + 4) != 0) {\n        puStack16 = 0x43c6e2;\n        fcn.00420540();\n        uStack20 = 0x43c75b;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack28 = 0x43c701;\n        puStack16 = &stack0xfffffffc;\n        fcn.004208cc();\n        uStack32 = 0x43c738;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        (**(*in_EAX + 0x8c))();\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x43c73f;\n        uStack32 = 0x43c737;\n        fcn.004208cc();\n        return;\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "0043c9bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043c9bc(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x43ca47;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + -0x10))();\n    if (*(in_EAX + 0x84) == '\\0') {\n        fcn.00434c44();\n        fcn.004206ac();\n        fcn.00434410();\n        fcn.00434c44();\n        fcn.004206c8();\n        fcn.00434434();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x43ca4e;\n    uStack24 = 0x43ca46;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 239
    },
    "0043ca54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ca54(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_18h = *param_2;\n    var_14h = param_2[1];\n    iVar3 = param_2[3];\n    *(in_EAX + 0x84) = 1;\n    uStack56 = 0x43cc2d;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    var_4h = in_EAX;\n    fcn.00434c74();\n    fcn.00435e90();\n    iVar1 = fcn.00452ffc();\n    if (iVar1 < var_4h[0x13] + var_14h) {\n        var_14h = fcn.00452ffc();\n        var_14h = var_14h - var_4h[0x13];\n    }\n    iVar1 = fcn.00453008();\n    if (iVar1 < var_4h[0x12] + var_18h) {\n        var_18h = fcn.00453008();\n        var_18h = var_18h - var_4h[0x12];\n    }\n    iVar1 = fcn.00452ff0();\n    if (var_18h < iVar1) {\n        var_18h = fcn.00452ff0();\n    }\n    iVar1 = fcn.00452fe4();\n    if (iVar3 + 4 < iVar1) {\n        fcn.00452fe4();\n    }\n    uVar2 = fcn.0043b420(0xffffffff, var_18h, var_14h, var_4h[0x12], var_4h[0x13], 0x10);\n    sub.user32.dll_SetWindowPos(uVar2);\n    iVar3 = sub.kernel32.dll_GetTickCount();\n    if (0xfa < iVar3 - var_4h[0x85]) {\n        iVar3 = fcn.00404248();\n        if ((iVar3 < 100) && (*0x464a04 != NULL)) {\n            sub.user32.dll_SystemParametersInfoA(0x1016, 0, &var_8h, 0);\n            if (var_8h != 0) {\n                sub.user32.dll_SystemParametersInfoA(0x1018, 0, &var_8h, 0);\n                if (var_8h == 0) {\n                    fcn.0043fcec();\n                    if (var_14h < var_1ch) {\n                        uVar4 = 0;\n                    }\n                    else {\n                        uVar4 = 1;\n                    }\n                }\n                else {\n                    uVar4 = 2;\n                }\n                uVar2 = fcn.0043b420(100, *(uVar4 * 4 + 0x464b0c) | 0x40000);\n                (**0x464a04)(uVar2);\n            }\n        }\n    }\n    fcn.00438b54();\n    uVar2 = fcn.0043b420(4);\n    sub.user32.dll_ShowWindow();\n    (**(*var_4h + 0x7c))();\n    *in_FS_OFFSET = uVar2;\n    iVar3 = sub.kernel32.dll_GetTickCount(0x43cc34);\n    var_4h[0x85] = iVar3;\n    *(var_4h + 0x84) = 0;\n    return;\n}\n",
        "token_count": 905
    },
    "0043cebc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043cebc(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 != *(in_EAX + 0x68)) && (*(in_EAX + 0x68) = param_2,  *(in_EAX + 0x6a) != '\\0')) {\n        fcn.0043cda8();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0043cf00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043cf00(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint var_4h;\n    \n    uVar2 = 0;\n    cVar1 = fcn.00441b30();\n    if (cVar1 != '\\0') {\n        if (*(in_EAX + 0x6a) == '\\0') {\n            fcn.0043ce74(*(in_EAX + 0x74));\n        }\n        fcn.0043cda8();\n        uVar2 = fcn.0043cf60(arg_8h);\n        if (uVar2 != '\\0') {\n            sub.user32.dll_ShowCursor(0);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 175
    },
    "0043cfc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043cfc4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    cVar1 = fcn.00441b30();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x6c) != 0)) {\n        sub.comctl32.dll_ImageList_DragLeave(*(in_EAX + 0x6c));\n        *(in_EAX + 0x6c) = 0;\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0043d05c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0043d05c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    bool bVar3;\n    \n    cVar1 = fcn.00441b30();\n    if ((cVar1 == '\\0') || (*(in_EAX + 0x6a) == '\\0')) {\n        bVar3 = false;\n    }\n    else {\n        fcn.0043cfc4();\n        iVar2 = sub.comctl32.dll_ImageList_EndDrag();\n        bVar3 = iVar2 != 0;\n        *(in_EAX + 0x6a) = 0;\n        fcn.0043cebc();\n        sub.user32.dll_ShowCursor(0xffffffff);\n    }\n    return bVar3;\n}\n",
        "token_count": 173
    },
    "0043d0a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0043d0a4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.0043714c();\n    uVar1 = fcn.004201fc();\n    *(in_EAX + 0x208) = uVar1;\n    fcn.00433830();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 202
    },
    "0043d21c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043d21c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x14) == 0) || (*(*(in_EAX + 0x14) + 0x10) == '\\0')) &&\n       ((in_EAX != *(*(in_EAX + 0x1c) + 100) || (*(in_EAX + 0x10) == '\\0')))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 114
    },
    "0043d358": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043d358(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint uStack24;\n    uint uStack20;\n    \n    iVar1 = in_EAX;\n    while (iVar3 = iVar1,  iVar3 != *(*(in_EAX + 0x1c) + 100)) {\n        iVar1 = *(iVar3 + 0x14);\n        if ((param_2 == *(iVar1 + 0x10)) && (*(iVar3 + 0x18) != 0)) {\n            uVar2 = fcn.0043d78c();\n            return uVar2;\n        }\n    }\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x8c))();\n    if (param_2 == '\\x01') {\n        return uStack20;\n    }\n    if (param_2 == '\\x02') {\n        return uStack24;\n    }\n    return 0;\n}\n",
        "token_count": 270
    },
    "0043d3c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043d3c4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    if ((in_EAX == *(*(in_EAX + 0x1c) + 100)) ||\n       (((iVar2 = in_EAX,  *(*(in_EAX + 0x1c) + 100) == *(in_EAX + 0x14) && (*(in_EAX + 4) != 0)) &&\n        (iVar1 = fcn.0043d278(),  iVar1 == 1)))) {\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x8c))();\n        if (param_2 == '\\x01') {\n            iVar2 = iStack16 - iStack24;\n        }\n        else {\n            iVar2 = iStack20 - iStack28;\n        }\n    }\n    else {\n        do {\n            if (iVar2 == *(*(in_EAX + 0x1c) + 100)) {\n                if (param_2 == *(*(*(in_EAX + 0x1c) + 100) + 0x10)) {\n                    return *(*(in_EAX + 0x1c) + 0x68);\n                }\n                iVar2 = fcn.0043d78c();\n                return iVar2;\n            }\n            iVar2 = *(iVar2 + 0x14);\n        } while (param_2 != *(iVar2 + 0x10));\n        iVar2 = fcn.0043d78c();\n        iVar1 = fcn.0043d2c8();\n        iVar2 = iVar2 - iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 453
    },
    "0043d474": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043d474(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0043d278();\n    if ((iVar1 != 0) && (*(in_EAX + 0x10) != '\\0')) {\n        iVar2 = fcn.0043d88c();\n        if (*(in_EAX + 0x10) == '\\x01') {\n            iVar1 = fcn.0043d3c4();\n        }\n        else if (*(in_EAX + 0x10) == '\\x02') {\n            iVar1 = fcn.0043d3c4();\n        }\n        else {\n            iVar1 = 0;\n        }\n        iVar3 = fcn.0043d278();\n        iVar1 = iVar1 / iVar3;\n        while (iVar2 != 0) {\n            if (*(iVar2 + 0xc) == 0) {\n                fcn.0043d7b4();\n            }\n            else {\n                fcn.0043d2c8();\n                fcn.0043d7b4();\n            }\n            fcn.0043d614();\n            iVar1 = fcn.0043d864();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 300
    },
    "0043d51c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d51c(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00403f88();\n    if (*(in_EAX + 4) != 0) {\n        if (*(*(in_EAX + 4) + 8) == 0) {\n            fcn.0040b620();\n            fcn.004039c4();\n        }\n        fcn.00403fdc();\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0043d560": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x0043d595)\n\nuint32_t fcn.0043d560(void)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = fcn.0040344c();\n    return uVar1 & 0xffffff00;\n}\n",
        "token_count": 99
    },
    "0043d614": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d614(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *arg_8h;\n    uint var_14h;\n    int32_t var_4h;\n    \n    iVar2 = *(in_EAX + 4);\n    if (iVar2 == 0) {\n        return;\n    }\n    if (*(iVar2 + 0x57) == '\\0') {\n        return;\n    }\n    if (*(*(in_EAX + 0x1c) + 0x6c) != 0) {\n        return;\n    }\n    *(iVar2 + 0x9c) = *(*(in_EAX + 0x14) + 0x10);\n    var_4h = in_EAX;\n    fcn.0043d3c4();\n    iVar2 = fcn.0043d3c4();\n    cVar1 = fcn.0043d5e4(&stack0xfffffffc);\n    if ((cVar1 != '\\0') && (*(*(var_4h + 0x14) + 0x10) != '\\x01')) {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\n    iVar3 = fcn.0043d864();\n    if ((iVar3 == 0) &&\n       (((*(var_4h + 0x14) == *(*(var_4h + 0x1c) + 100) ||\n         (*(*(var_4h + 0x14) + 0x10) != *(*(*(var_4h + 0x1c) + 100) + 0x10))) ||\n        (iVar3 = fcn.0043d78c(),  *(*(var_4h + 0x1c) + 0x68) <= iVar3)))) {\n        if (*(*(var_4h + 0x14) + 0x10) == *(*(*(var_4h + 0x1c) + 100) + 0x10)) goto code_r0x0043d73a;\n        iVar3 = fcn.0043d78c();\n        iVar4 = fcn.0043d78c();\n        if (iVar4 <= iVar3) goto code_r0x0043d73a;\n    }\n    if (*(*(var_4h + 0x14) + 0x10) == '\\x01') {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\ncode_r0x0043d73a:\n    arg_8h = &var_14h;\n    uVar5 = fcn.0043d358();\n    fcn.0043d358(uVar5);\n    fcn.00415ab8(arg_8h, iVar2);\n    (****(var_4h + 0x1c))();\n    fcn.00434614();\n    return;\n}\n",
        "token_count": 687
    },
    "0043da80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043da80(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(arg_8h + -4) == *(in_EAX + 4)) {\n        *(arg_8h + -8) = in_EAX;\n        return;\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 0xc) != 0)) {\n        fcn.0043da80(arg_8h);\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 8) != 0)) {\n        fcn.0043da80(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "0043dad8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043dad8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((param_2 != 0) && (*(in_EAX + 100) != 0)) {\n        fcn.0043da80(&stack0xfffffffc);\n    }\n    return 0;\n}\n",
        "token_count": 93
    },
    "0043dbdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043dbdc(uint arg_8h)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint8_t in_CL;\n    int32_t in_EDX;\n    uint32_t uVar4;\n    int32_t var_30h;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (*(in_EDX + 0x57) != '\\0') {\n        var_1h._0_1_ = in_CL;\n        if (in_EAX[0xe] == 0) {\n            if (*(in_EAX[0x19] + 8) == 0) {\n                (**(*in_EAX[5] + 0x44))();\n                (**(*in_EAX[5] + 0x8c))();\n                var_10h = var_14h - var_1ch;\n                if (*(in_EAX[5] + 0x5c) != '\\0') {\n                    if (var_18h == var_20h) {\n                        fcn.00434be8();\n                    }\n                    if (var_10h == 0) {\n                        var_10h = fcn.00434bd4();\n                    }\n                }\n                fcn.00415ab8(&var_30h, var_10h);\n                var_20h = var_30h;\n                var_1ch = iStack48;\n                var_18h = iStack44;\n                var_14h = iStack40;\n                (***in_EAX)();\n                fcn.00434614();\n                iVar1 = fcn.0043d240();\n                iVar2 = in_EAX[0x19];\n                *(iVar2 + 8) = iVar1;\n                *(iVar1 + 0x14) = iVar2;\n                *(iVar1 + 4) = in_EDX;\n            }\n            else {\n                if ((in_CL == 0) || (in_CL == 5)) {\n                    var_1h._0_1_ = 4;\n                }\n                iVar2 = fcn.0043dad8();\n                if (iVar2 != 0) {\n                    fcn.0043eb04();\n                }\n                var_8h = fcn.0043dad8();\n                var_9h = *(var_1h + 0x464b18);\n                iVar2 = fcn.0043d264();\n                if (iVar2 == 1) {\n                    *(in_EAX[0x19] + 0x10) = var_9h;\n                    if (var_9h == 1) {\n                        fcn.0043d3c4();\n                        fcn.0043d7b4();\n                        uVar3 = fcn.0043d3c4();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                    else if (var_9h == 2) {\n                        fcn.0043d3c4();\n                        fcn.0043d7b4();\n                        uVar3 = fcn.0043d3c4();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                }\n                iVar2 = fcn.0043d240();\n                *(iVar2 + 4) = in_EDX;\n                if (var_8h == 0) {\n                    uVar4 = in_EAX[0x19] & 0xffffff00 | *(in_EAX[0x19] + 0x10);\n                }\n                else {\n                    uVar4 = *(var_8h + 0x14) & 0xffffff00 | *(*(var_8h + 0x14) + 0x10);\n                }\n                if (var_9h == 0) {\n                    var_9h = uVar4;\n                }\n                if (uVar4 == var_9h) {\n                    fcn.0043df94(*(var_1h + 0x464b20));\n                }\n                else {\n                    fcn.0043ddec(*(var_1h + 0x464b20), uVar4 & 0xffffff00 | var_9h);\n                }\n            }\n        }\n        else {\n            *(in_EAX[0xe] + 4) = in_EDX;\n            fcn.0043d614();\n        }\n        (**(*in_EAX[5] + 0x7c))();\n    }\n    return;\n}\n",
        "token_count": 1088
    },
    "0043ddec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ddec(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    iVar2 = fcn.0043d240();\n    *(iVar2 + 0x10) = arg_ch;\n    if (in_ECX == 0) {\n        fcn.0043d7b4();\n        uVar3 = fcn.0043d78c();\n        *(in_EAX + 0x68) = uVar3;\n        *(in_EAX + 0x48) = arg_ch;\n        *(in_EAX + 0x40) = 0;\n        *(in_EAX + 0x44) = 0x3fe00000;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0x18) = in_EDX;\n            *(in_EDX + 0xc) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.0043db40(0x43ee5c);\n            uVar4 = fcn.0043d78c();\n            iVar2 = uVar4 >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((uVar4 & 1) != 0);\n            }\n            *(in_EAX + 0x4c) = iVar2;\n            fcn.0043db40(0x43f1e0);\n            fcn.0043d78c();\n            fcn.0043d7b4();\n        }\n        else {\n            *(iVar2 + 8) = *(in_EAX + 100);\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.0043db40(0x43ee5c);\n        }\n        fcn.0043db40(0x43f314);\n    }\n    else {\n        fcn.0043d78c();\n        fcn.0043d7b4();\n        *(iVar2 + 0x14) = *(in_ECX + 0x14);\n        iVar1 = *(in_ECX + 0x18);\n        *(iVar2 + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = iVar2;\n        }\n        iVar1 = *(in_ECX + 0xc);\n        *(iVar2 + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = iVar2;\n        }\n        if (in_ECX == *(*(iVar2 + 0x14) + 8)) {\n            *(*(iVar2 + 0x14) + 8) = iVar2;\n        }\n        *(in_EDX + 0x14) = iVar2;\n        *(in_ECX + 0x14) = iVar2;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            *(in_ECX + 0x18) = in_EDX;\n            *(in_ECX + 0xc) = 0;\n            *(in_EDX + 0xc) = in_ECX;\n        }\n        else {\n            *(iVar2 + 8) = in_ECX;\n            *(in_ECX + 0x18) = 0;\n            *(in_ECX + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = in_ECX;\n        }\n    }\n    fcn.0043d474();\n    fcn.0043d804();\n    fcn.0043db40(0x43f314);\n    return;\n}\n",
        "token_count": 982
    },
    "0043e00c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e00c(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x01') {\n        iVar1 = fcn.0043d78c();\n        if (*(*(arg_8h + -4) + 4) <= iVar1) {\n            iVar1 = fcn.0043d78c();\n            if (iVar1 - *(*(arg_8h + -8) + 0xc) <= *(*(arg_8h + -4) + 4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x0043e1e9;\n            }\n        }\n    }\n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x02') {\n        iVar1 = fcn.0043d78c();\n        if (**(arg_8h + -4) <= iVar1) {\n            iVar1 = fcn.0043d78c();\n            if (iVar1 - *(*(arg_8h + -8) + 0xc) <= **(arg_8h + -4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x0043e1e9;\n            }\n        }\n    }\n    if (*(in_EAX + 4) != 0) {\n        iVar1 = fcn.0043d358();\n        iVar2 = fcn.0043d358();\n        if (*(*(arg_8h + -8) + 0x1c) == '\\0') {\n            if (((iVar2 <= **(arg_8h + -4)) && (**(arg_8h + -4) <= iVar2 + *(*(arg_8h + -8) + 0x18))) &&\n               (iVar1 <= *(*(arg_8h + -4) + 4))) {\n                iVar2 = fcn.0043d3c4();\n                if (*(*(arg_8h + -4) + 4) <= iVar1 + iVar2) {\n                    *(arg_8h + -0x10) = in_EAX;\n                    if (*(*(arg_8h + -4) + 4) < *(*(in_EAX + 4) + 0x44) + 0xf) {\n                        **(arg_8h + -0xc) = 0x14;\n                    }\n                    else {\n                        **(arg_8h + -0xc) = 2;\n                    }\n                }\n            }\n        }\n        else if (((iVar1 <= *(*(arg_8h + -4) + 4)) && (*(*(arg_8h + -4) + 4) <= iVar1 + *(*(arg_8h + -8) + 0x18))) &&\n                (iVar2 <= **(arg_8h + -4))) {\n            iVar1 = fcn.0043d3c4();\n            if (**(arg_8h + -4) <= iVar2 + iVar1) {\n                *(arg_8h + -0x10) = in_EAX;\n                if (*(*(in_EAX + 4) + 0x40) + *(*(in_EAX + 4) + 0x48) + -0xf < **(arg_8h + -4)) {\n                    **(arg_8h + -0xc) = 0x14;\n                }\n                else {\n                    **(arg_8h + -0xc) = 2;\n                }\n            }\n        }\n    }\ncode_r0x0043e1e9:\n    if (*(arg_8h + -0x10) == 0) {\n        iVar1 = fcn.0043d864();\n        if (iVar1 != 0) {\n            iVar1 = arg_8h;\n            fcn.0043d864();\n            fcn.0043e00c(iVar1);\n        }\n    }\n    if (*(arg_8h + -0x10) == 0) {\n        iVar1 = fcn.0043d88c();\n        if (iVar1 != 0) {\n            fcn.0043d88c();\n            fcn.0043e00c(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 1012
    },
    "0043e238": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0043e238(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint lprc;\n    uint pt;\n    uint var_4h;\n    \n    iVar2 = fcn.00438150();\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        do {\n            piVar3 = fcn.00438114();\n            if ((*(piVar3 + 0x57) != '\\0') && ((cVar1 = fcn.004033dc(),  cVar1 == '\\0' || (*(piVar3 + 0x1a6) != '\\0'))))\n            {\n                fcn.00415a68();\n                (**(*piVar3 + 0x44))(pt, var_4h);\n                iVar4 = sub.user32.dll_PtInRect(&lprc);\n                if (iVar4 != 0) {\n                    return piVar3;\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return NULL;\n}\n",
        "token_count": 263
    },
    "0043e2cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043e2cc(uint *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *arg_8h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    var_10h = 0;\n    *param_1 = 0;\n    iVar1 = fcn.0043e238(&stack0xfffffffc);\n    if ((iVar1 == 0) || (*(in_EAX + 0x14) != *(iVar1 + 0xa0))) {\n        iVar2 = fcn.0043d88c();\n        if ((iVar2 != 0) && (iVar1 == 0)) {\n            fcn.0043d88c();\n            fcn.0043e00c(arg_8h);\n        }\n    }\n    else {\n        var_10h = fcn.0043dad8();\n        if (var_10h != 0) {\n            *param_1 = 1;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 267
    },
    "0043e354": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e354(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00403f88();\n    (**(**(arg_8h + -4) + 0xc))();\n    if (0 < in_ECX) {\n        fcn.004045d4();\n        (**(**(arg_8h + -4) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0043e39c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043e422)\n// WARNING: Removing unreachable block (ram,0x0043e43d)\n// WARNING: Removing unreachable block (ram,0x0043e4d9)\n// WARNING: Removing unreachable block (ram,0x0043e4e7)\n\nvoid __fastcall fcn.0043e39c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x43e594;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    fcn.0043ea6c();\n    fcn.0043da68();\n    uVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    (**(*param_2 + 0xc))();\n    (**(*param_2 + 0xc))();\n    if (-1 < var_20h + -1) {\n        do {\n            fcn.0043e354(&stack0xfffffffc);\n            var_20h = var_20h + -1;\n        } while (var_20h != 0);\n    }\n    (**(*param_2 + 0xc))();\n    var_18h = 0;\n    iVar2 = 0;\n    while ((**(*param_2 + 0xc))(),  var_14h != *0x464b28) {\n        iVar1 = fcn.0043d240();\n        (**(*param_2 + 0xc))();\n        (**(*param_2 + 0xc))();\n        fcn.0043e354(&stack0xfffffffc);\n        if (var_14h == 0) {\n            *(in_EAX + 100) = iVar1;\n        }\n        else if (var_14h == var_18h) {\n            *(iVar2 + 0xc) = iVar1;\n            *(iVar1 + 0x18) = iVar2;\n            *(iVar1 + 0x14) = *(iVar2 + 0x14);\n        }\n        else if (var_18h < var_14h) {\n            *(iVar2 + 8) = iVar1;\n            *(iVar1 + 0x14) = iVar2;\n        }\n        else if (var_14h < var_18h) {\n            var_18h = var_18h - var_14h;\n            if (0 < var_18h) {\n                do {\n                    iVar2 = *(iVar2 + 0x14);\n                    var_18h = var_18h + -1;\n                } while (var_18h != 0);\n            }\n            *(iVar2 + 0xc) = iVar1;\n            *(iVar1 + 0x18) = iVar2;\n            *(iVar1 + 0x14) = *(iVar2 + 0x14);\n        }\n        var_18h = var_14h;\n        iVar2 = iVar1;\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.0043da6c();\n    return;\n}\n",
        "token_count": 798
    },
    "0043e760": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043e760(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack48 = 0x43e779;\n    var_4h = fcn.004201fc();\n    uStack52 = 0x43e8b6;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x43e795;\n    puStack48 = &stack0xfffffffc;\n    fcn.00433830();\n    puStack60 = 0x43e79d;\n    fcn.00420540();\n    uStack64 = 0x43e899;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x43e7b5;\n    puStack60 = &stack0xfffffffc;\n    fcn.004208cc();\n    uStack76 = 0x43e87c;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    iVar1 = fcn.00438150();\n    if (-1 < iVar1 + -1) {\n        var_8h = 0;\n        var_ch = iVar1;\n        do {\n            iVar1 = fcn.00438114();\n            if ((*(iVar1 + 0x57) != '\\0') && (*(iVar1 + 0xa0) == in_EAX[5])) {\n                fcn.004345f4();\n                (***in_EAX)();\n                var_1ch = *(iVar1 + 0x40) * 2 - var_1ch;\n                var_18h = *(iVar1 + 0x44) * 2 - var_18h;\n                var_14h = *(iVar1 + 0x48) * -2 + var_14h * 3 + var_1ch * -2;\n                var_10h = *(iVar1 + 0x4c) * -2 + var_10h * 3 + var_18h * -2;\n                (**(*in_EAX + 0x10))(&fcn.0043e760::var_1ch);\n            }\n            var_8h = var_8h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x43e883;\n    uStack76 = 0x43e87b;\n    fcn.004208cc();\n    return;\n}\n",
        "token_count": 712
    },
    "0043e8c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e8c4(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint *arg_8h_00;\n    int32_t var_1ch;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = fcn.00439f50();\n    if (((in_ECX == 0) || (*(in_ECX + 0x9c) == '\\0')) || (iVar2 < 2)) {\n        uVar3 = fcn.0043469c();\n        arg_8h_00 = &var_1ch;\n        fcn.00434658();\n        fcn.00415a90(arg_8h_00, uVar3);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n        if (0 < iVar2) {\n            if (arg_ch == '\\x01') {\n                iVar2 = arg_8h[3] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[3] & 1U) != 0);\n                }\n                arg_8h[3] = iVar2;\n            }\n            else if (arg_ch == '\\x02') {\n                iVar2 = arg_8h[3] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[3] & 1U) != 0);\n                }\n                arg_8h[1] = iVar2;\n            }\n            else if (arg_ch == '\\x03') {\n                iVar2 = arg_8h[2] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[2] & 1U) != 0);\n                }\n                arg_8h[2] = iVar2;\n            }\n            else if (arg_ch == '\\x04') {\n                iVar2 = arg_8h[2] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[2] & 1U) != 0);\n                }\n                *arg_8h = iVar2;\n            }\n        }\n    }\n    else {\n        var_4h = *(in_ECX + 0x40);\n        var_8h = *(in_ECX + 0x44);\n        uVar4 = *(in_ECX + 0x48);\n        var_ch = *(in_ECX + 0x4c);\n        if (arg_ch - 3U < 2) {\n            uVar1 = uVar4 & 1;\n            uVar4 = uVar4 >> 1;\n            if (uVar4 < 0) {\n                uVar4 = uVar4 + (uVar1 != 0);\n            }\n        }\n        else if (arg_ch - 1U < 2) {\n            var_ch = *(in_ECX + 0x4c) >> 1;\n            if (var_ch < 0) {\n                var_ch = var_ch + ((*(in_ECX + 0x4c) & 1) != 0);\n            }\n        }\n        if (arg_ch == '\\x02') {\n            var_8h = var_8h + var_ch;\n        }\n        else if (arg_ch == '\\x04') {\n            var_4h = var_4h + uVar4;\n        }\n        fcn.00415ab8(&var_1ch, var_ch);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n    }\n    uVar3 = fcn.0043b420(0, arg_8h, 2);\n    sub.user32.dll_MapWindowPoints(uVar3);\n    return;\n}\n",
        "token_count": 978
    },
    "0043eb04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043eb04(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY52;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack40 = 0x43ed71;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar2 = &stack0xfffffffc;\n    if (param_2 == 0) {\n        fcn.00405d0c();\n        uStackY52 = 0x43eb44;\n        fcn.00405d0c(&fcn.0043eb04::var_4h);\n        fcn.00404250();\n        fcn.0040b564();\n        fcn.004039c4();\n        puVar2 = puStack36;\n    }\n    puStack36 = puVar2;\n    if (*(param_2 + 4) == 0) {\n        fcn.00405d0c();\n        uStackY52 = 0x43eb85;\n        fcn.00405d0c(&fcn.0043eb04::var_ch);\n        fcn.00404250();\n        fcn.0040b564();\n        fcn.004039c4();\n    }\n    iVar3 = fcn.0043d264();\n    if (iVar3 == 1) {\n        iVar3 = *(in_EAX + 100);\n        *(iVar3 + 8) = 0;\n        *(iVar3 + 0x10) = 0;\n    }\n    else if (iVar3 == 2) {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            iVar3 = *(param_2 + 0xc);\n        }\n        if (*(iVar3 + 4) == 0) {\n            if (*(param_2 + 0x14) == *(in_EAX + 100)) {\n                fcn.0043d7c8();\n                uVar4 = fcn.0043d78c();\n                *(in_EAX + 0x68) = uVar4;\n                fcn.00403250();\n                *(in_EAX + 100) = iVar3;\n                *(iVar3 + 0xc) = 0;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0x14) = 0;\n                fcn.0043f2ec();\n            }\n            else {\n                iVar1 = *(*(param_2 + 0x14) + 0x18);\n                *(*(iVar3 + 8) + 0x18) = iVar1;\n                if (iVar1 == 0) {\n                    *(*(*(param_2 + 0x14) + 0x14) + 8) = *(iVar3 + 8);\n                }\n                else {\n                    *(iVar1 + 0xc) = *(iVar3 + 8);\n                }\n                iVar3 = *(iVar3 + 8);\n                *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                do {\n                    iVar3 = *(iVar3 + 0xc);\n                    *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                } while (*(iVar3 + 0xc) != 0);\n                *(iVar3 + 0xc) = *(*(param_2 + 0x14) + 0xc);\n                if (*(iVar3 + 0xc) != 0) {\n                    *(*(iVar3 + 0xc) + 0x18) = iVar3;\n                }\n                uStackY52 = 0x43f314;\n                fcn.0043db40();\n                fcn.00403250();\n                fcn.00403250();\n            }\n        }\n        else {\n            iVar1 = *(param_2 + 0x14);\n            if (*(in_EAX + 100) == iVar1) {\n                *(*(in_EAX + 100) + 8) = iVar3;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0xc) = 0;\n                fcn.0043d310();\n                fcn.0043d7b4();\n                fcn.0043d614();\n            }\n            else {\n                *(iVar1 + 0x10) = 0;\n                *(iVar1 + 4) = *(iVar3 + 4);\n                *(iVar1 + 8) = 0;\n                fcn.00403250();\n            }\n            uStackY52 = 0x43f314;\n            fcn.0043db40();\n        }\n    }\n    else {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            *(*(param_2 + 0x14) + 8) = *(param_2 + 0xc);\n            *(*(param_2 + 0xc) + 0x18) = 0;\n            fcn.0043d614();\n        }\n        else {\n            *(iVar3 + 0xc) = *(param_2 + 0xc);\n            if (*(param_2 + 0xc) != 0) {\n                *(*(param_2 + 0xc) + 0x18) = iVar3;\n            }\n            fcn.0043d78c();\n            fcn.0043d7c8();\n            fcn.0043d614();\n        }\n        uStackY52 = 0x43f314;\n        fcn.0043db40();\n    }\n    fcn.00403250();\n    *in_FS_OFFSET = uStackY52;\n    uStack44 = 0x43ed78;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 1395
    },
    "0043ee98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ee98(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x43eeaa;\n    fcn.00404438();\n    uStack24 = 0x43ef03;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.00404248();\n    (**(**(arg_8h + -4) + 0x10))();\n    if (0 < iVar1) {\n        (**(**(arg_8h + -4) + 0x10))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x43ef0a;\n    uStack24 = 0x43ef02;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 242
    },
    "0043efcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043efcc(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x43f105;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x43f001;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x43f00d;\n    piVar1 = fcn.00403220();\n    uStack56 = 0x43f0b4;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    iVar2 = fcn.00439ebc();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00439ed0();\n            if ((*(iVar3 + 0x57) == '\\0') && (*(iVar3 + 8) != 0)) {\n                (**(*piVar1 + 0x38))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = (**(*piVar1 + 0x14))();\n    (**(*param_2 + 0x10))();\n    if (-1 < iVar2 + -1) {\n        do {\n            arg_8h = &stack0xfffffffc;\n            (**(*piVar1 + 0xc))();\n            fcn.0043ee98(arg_8h);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x43f0bb;\n    uStack56 = 0x43f0b3;\n    fcn.00403250();\n    return;\n}\n",
        "token_count": 536
    },
    "0043f2ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043f2ec(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x6c) == 0) {\n        iVar1 = fcn.00439ebc();\n        if (0 < iVar1) {\n            fcn.0043db40(0x43f314);\n        }\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "0043f410": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f410(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if ((in_EAX != *(arg_8h + -4)) && (*(*(in_EAX + 0x14) + 0x10) == *(*(*(arg_8h + -4) + 0x14) + 0x10))) {\n        iVar1 = fcn.0043d78c();\n        iVar2 = fcn.0043d78c();\n        if ((iVar2 < iVar1) && ((*(in_EAX + 4) == 0 || ((*(in_EAX + 4) != 0 && (*(*(in_EAX + 4) + 0x57) != '\\0')))))) {\n            fcn.0043d78c();\n            uVar3 = fcn.00425288();\n            *(arg_8h + -8) = uVar3;\n        }\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0043f410(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0043f410(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "0043f5ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f5ec(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x14) != 0) && (*(in_EAX + 0x14) != *(*(arg_8h + -4) + 100))) {\n        iVar2 = fcn.0043d278();\n        if (iVar2 == 1) {\n            fcn.0043f5ec(arg_8h);\n        }\n    }\n    iVar2 = fcn.0043d278();\n    if ((iVar2 == 1) || (*(in_EAX + 0x24) == 0)) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n        iVar2 = *(*(arg_8h + -4) + 0x18) + *(*(arg_8h + -4) + 0xc) + 0xe;\n        iVar3 = fcn.0043d870();\n        if (iVar3 == 0) {\n            iVar3 = fcn.0043d864();\n            if (iVar3 != 0) {\n                fcn.0043d864();\n                iVar3 = fcn.0043d78c();\n                if (iVar3 - *(in_EAX + 0x24) < iVar2) {\n                    bVar1 = true;\n                }\n                else {\n                    fcn.0043d2c8();\n                    fcn.0043d7b4();\n                    fcn.0043d864();\n                    fcn.0043d804();\n                }\n            }\n        }\n        else {\n            fcn.0043d870();\n            iVar3 = fcn.0043d78c();\n            iVar4 = fcn.0043d2c8();\n            if ((iVar3 - iVar4) - *(in_EAX + 0x24) < iVar2) {\n                bVar1 = true;\n            }\n            else {\n                fcn.0043d78c();\n                fcn.0043d7b4();\n                fcn.0043d78c();\n                fcn.0043d7b4();\n                fcn.0043d870();\n                fcn.0043d804();\n            }\n        }\n    }\n    if (bVar1) {\n        fcn.0043d474();\n    }\n    fcn.0043db40(0x43f314, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 579
    },
    "0043f83c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f83c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff94;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    uStack96 = 0x43fc14;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    iVar2 = *param_2;\n    var_4h = in_EAX;\n    if (iVar2 < 0x203) {\n        if (iVar2 == 0x202) {\n            if (in_EAX[0x18] == 0) {\n                puStack92 = &stack0xfffffffc;\n                fcn.00406b28();\n                iVar2 = fcn.0043e2cc();\n                if ((iVar2 != 0) && (var_10h == 0x14)) {\n                    cVar1 = fcn.004033dc();\n                    if (cVar1 == '\\0') {\n                        fcn.00434b64();\n                    }\n                    else {\n                        fcn.00451dd0();\n                    }\n                }\n            }\n            else {\n                puStack92 = &stack0xfffffffc;\n                fcn.0043f270();\n            }\n        }\n        else if (iVar2 == 0x20) {\n            puStack92 = &stack0xfffffffc;\n            sub.user32.dll_GetCursorPos(&fcn.0043f83c::var_ch);\n            in_stack_ffffff94 = 0x43fa92;\n            fcn.00434798();\n            if (*(param_2 + 2) == 1) {\n                in_stack_ffffff94 = 0x43fab4;\n                iVar2 = fcn.0043b420();\n                if (iVar2 == param_2[1]) {\n                    in_stack_ffffff94 = 0x43fac8;\n                    iVar2 = fcn.00439f50();\n                    if (0 < iVar2) {\n                        in_stack_ffffff94 = 0x43fade;\n                        iVar2 = fcn.0043e2cc();\n                        if ((iVar2 != 0) && (var_10h == 0x12)) {\n                            in_stack_ffffff94 = fcn.004534d0();\n                            sub.user32.dll_SetCursor();\n                            param_2[3] = 1;\n                            goto code_r0x0043fbfe;\n                        }\n                    }\n                }\n            }\n        }\n        else if (iVar2 == 0x200) {\n            puStack92 = &stack0xfffffffc;\n            if (in_EAX[0x18] != 0) {\n                puStack92 = &stack0xfffffffc;\n                fcn.0043f324();\n                fcn.00406b28();\n                var_4h[0x14] = var_44h;\n                var_4h[0x15] = var_40h;\n                in_stack_ffffff94 = 0x43f8fa;\n                fcn.0043f7ac(&stack0xfffffffc);\n                fcn.0043f324();\n            }\n        }\n        else {\n            puStack92 = &stack0xfffffffc;\n            if (iVar2 == 0x201) {\n                puStack92 = &stack0xfffffffc;\n                fcn.00406b28();\n                iVar2 = fcn.0043e2cc();\n                if (iVar2 != 0) {\n                    if (var_10h == 0x12) {\n                        fcn.0043f210();\n                    }\n                    else if (var_10h == 2) {\n                        in_stack_ffffff94 = 0x203;\n                        uVar3 = fcn.0043b420(0x203, 0x203, 0);\n                        iVar4 = sub.user32.dll_PeekMessageA(&fcn.0043f83c::var_3ch, uVar3);\n                        if ((iVar4 == 0) && (cVar1 = fcn.004033dc(),  cVar1 != '\\0')) {\n                            (**(**(iVar2 + 4) + 0xc4))();\n                        }\n                        if ((*(*(iVar2 + 4) + 0x9b) == '\\x01') && (*(*(iVar2 + 4) + 0x5d) == '\\x01')) {\n                            fcn.004352e0();\n                        }\n                        goto code_r0x0043fbfe;\n                    }\n                }\n            }\n        }\n    }\n    else if (iVar2 == 0x203) {\n        fcn.00406b28();\n        iVar2 = fcn.0043e2cc();\n        if (((iVar2 != 0) && (*(iVar2 + 4) != 0)) && (var_10h == 2)) {\n            fcn.004334b4();\n            in_stack_ffffff94 = 0x43f952;\n            fcn.00435938(1);\n        }\n    }\n    else {\n        if (iVar2 == 0xb030) {\n            puStack92 = &stack0xfffffffc;\n            (*in_EAX[0xc])();\n            if (param_2[3] == 0) {\n                iVar2 = (**(*var_4h + 4))();\n                if (var_10h == 0x12) {\n                    fcn.00403f88();\n                }\n                else if ((iVar2 != 0) && ((var_10h == 2 || (var_10h == 0x14)))) {\n                    fcn.004345f4();\n                    (***var_4h)();\n                    var_20h = *(iVar2 + 0x40) * 2 - var_20h;\n                    var_1ch = *(iVar2 + 0x44) * 2 - var_1ch;\n                    var_18h = *(iVar2 + 0x48) * -2 + var_18h * 3 + var_20h * -2;\n                    var_14h = *(iVar2 + 0x4c) * -2 + var_14h * 3 + var_1ch * -2;\n                    fcn.00434c44();\n                    fcn.00403fdc();\n                    iVar2 = param_2[2];\n                    *(iVar2 + 0x18) = var_20h;\n                    *(iVar2 + 0x1c) = var_1ch;\n                    *(iVar2 + 0x20) = var_18h;\n                    *(iVar2 + 0x24) = var_14h;\n                }\n            }\n            goto code_r0x0043fbfe;\n        }\n        puStack92 = &stack0xfffffffc;\n        if ((iVar2 == 0xb042) && (puStack92 = &stack0xfffffffc,  *param_2[2] == 0xb00b)) {\n            puStack92 = &stack0xfffffffc;\n            fcn.0043f724();\n        }\n    }\n    if (*(var_4h + 0x32) != 0) {\n        (*var_4h[0xc])();\n    }\ncode_r0x0043fbfe:\n    *in_FS_OFFSET = in_stack_ffffff94;\n    uStack100 = 0x43fc1b;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 1760
    },
    "0043fd48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043fd48(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack8 [4];\n    \n    uVar1 = fcn.00406c14(in_EAX + 0x10, auStack8);\n    *(in_EAX + 0x18) = uVar1;\n    *(in_EAX + 0x20) = *(in_EAX + 0x1c) != 0;\n    return;\n}\n",
        "token_count": 107
    },
    "0043fd98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043fd98(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        fcn.0043fcfc();\n        if (*(in_EAX + 0xd) != '\\0') {\n            fcn.0043fd18();\n            return;\n        }\n        fcn.0043fd48();\n    }\n    else if ((param_2 == 0x68) && (*(in_EAX + 0x20) != '\\0')) {\n        if (*(in_EAX + 0xd) == '\\0') {\n            uVar1 = sub.user32.dll_SendMessageA(*(in_EAX + 0x18), *(in_EAX + 0x14), 0, 0);\n            *(in_EAX + 0x10) = uVar1;\n        }\n        else {\n            sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0043fdfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043fdfc(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint uMode;\n    \n    if (*(*0x46fc24 + 0xc) != '\\0') {\n        uStack16 = 0x8000;\n        puStack20 = 0x43fe1a;\n        uVar1 = sub.kernel32.dll_SetErrorMode();\n        uStack24 = 0x43ff62;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        if (*0x470b68 == 0) {\n            puStack20 = &stack0xfffffffc;\n            in_stack_ffffffd8 = sub.kernel32.dll_GetModuleHandleA_2(0x43ff70);\n            *0x470b68 = sub.kernel32.dll_GetProcAddress_1(in_stack_ffffffd8, 0x43ff78);\n        }\n        if (*0x464b34 == 0) {\n            *0x464b34 = sub.kernel32.dll_LoadLibraryA(0x43ff88);\n            if (*0x464b34 != 0) {\n                *0x470b6c = sub.kernel32.dll_GetProcAddress_1(*0x464b34, 0x43ff94);\n                *0x470b70 = sub.kernel32.dll_GetProcAddress_1(*0x464b34, 0x43ffa4);\n                *0x470b74 = sub.kernel32.dll_GetProcAddress_1(*0x464b34, 0x43ffb8);\n                *0x470b78 = sub.kernel32.dll_GetProcAddress_1(*0x464b34, 0x43ffd0);\n                *0x470b7c = sub.kernel32.dll_GetProcAddress_1(*0x464b34, 0x43ffe8);\n                *0x470b80 = sub.kernel32.dll_GetProcAddress_1(*0x464b34, 0x43fffc);\n                *0x470b84 = sub.kernel32.dll_GetProcAddress_1(*0x464b34, 0x440014);\n                *0x470b88 = sub.kernel32.dll_GetProcAddress_1(*0x464b34, 0x44002c);\n                *0x470b8c = sub.kernel32.dll_GetProcAddress_1(*0x464b34, 0x440048);\n                *0x470b90 = sub.kernel32.dll_GetProcAddress_1(*0x464b34, 0x440054);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        sub.kernel32.dll_SetErrorMode(uVar1, 0x43ff69);\n        return;\n    }\n    return;\n}\n",
        "token_count": 641
    },
    "00440064": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00440064(void)\n\n{\n    uint uVar1;\n    \n    if (*0x470b68 != NULL) {\n        uVar1 = (**0x470b68)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 56
    },
    "00440080": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440080(uint param_1, uint8_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uchar auStack20 [8];\n    \n    if ((*(*0x46fc24 + 0xc) != '\\0') && (param_2 != 3)) {\n        if (param_2 == 0) {\n            uStack24 = 0x4400af;\n            fcn.00440064();\n        }\n        else {\n            uStack24 = 0x4400bd;\n            fcn.00440064();\n            if (*0x464b34 != 0) {\n                puStack28 = 0x4400d1;\n                puStack32 = &stack0xffffffe8;\n                uVar1 = (**0x470b6c)();\n                if (uVar1 != 0) {\n                    puStack28 = &stack0xffffffec;\n                    uStack40 = 0x4400e8;\n                    uStack36 = uVar1;\n                    (**0x470b74)();\n                    uStack44 = uVar1;\n                    if (param_2 == 1) {\n                        uStack40 = 0;\n                        (**0x470b7c)();\n                    }\n                    else if (param_2 == 2) {\n                        uStack40 = 1;\n                        (**0x470b7c)();\n                    }\n                    else {\n                        uStack40 = 1;\n                        (**0x470b7c)();\n                        (**0x470b74)(uVar1, &stack0xffffffd4, &stack0xffffffd8);\n                        uStack44 = uStack44 & 0xfffffff4 | *(param_2 + 0x464b34);\n                    }\n                    (**0x470b78)(uVar1, uStack44, uStack40);\n                    (**0x470b70)();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 454
    },
    "0044015c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044015c(void)\n\n{\n    uint uVar1;\n    \n    if (*0x464b34 != 0) {\n        uVar1 = (**0x470b8c)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 59
    },
    "00440170": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00440170(void)\n\n{\n    ushort extraout_var;\n    ushort extraout_var_00;\n    \n    fcn.00403250();\n    **0x46fa30 = 0;\n    fcn.00403250();\n    **0x46fbf8 = 0;\n    fcn.00403250();\n    *0x470b14 = 0;\n    fcn.00403250();\n    sub.kernel32.dll_GlobalDeleteAtom(CONCAT22(extraout_var, *0x470b22));\n    fcn.00403f88();\n    sub.kernel32.dll_GlobalDeleteAtom(CONCAT22(extraout_var_00, *0x470b20));\n    fcn.00403f88();\n    if (*0x464b34 != 0) {\n        sub.kernel32.dll_FreeLibrary_1(*0x464b34);\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "00440bcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00440bcc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041c87c();\n    uVar1 = fcn.00403220();\n    *(in_EAX + 0x30) = uVar1;\n    iVar2 = fcn.00403220();\n    *(in_EAX + 0x34) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x440d50;\n    *(in_EAX + 0x58) = 0;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 270
    },
    "00440e48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00440e48(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    \n    fcn.0044c5d4();\n    iVar3 = fcn.00444274();\n    if ((iVar3 != 0) && (iVar6 = *(*(in_EAX + 0x30) + 8),  -1 < iVar6 + -1)) {\n        iVar7 = 0;\n        do {\n            piVar1 = *(*(*(in_EAX + 0x30) + 4) + iVar7 * 4);\n            cVar2 = fcn.004033dc();\n            if (cVar2 != '\\0') {\n                if (iVar3 == *(piVar1 + 0x21)) {\ncode_r0x00440ebf:\n                    uVar5 = (**(*piVar1 + 0x50))();\n                    goto code_r0x00440ece;\n                }\n                if (piVar1[0x24] != 0) {\n                    fcn.00441650();\n                    iVar4 = fcn.004416b0();\n                    if (iVar4 != -1) goto code_r0x00440ebf;\n                }\n            }\n            iVar7 = iVar7 + 1;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n    }\n    uVar5 = 0;\ncode_r0x00440ece:\n    return CONCAT44(in_EAX, uVar5);\n}\n",
        "token_count": 367
    },
    "004411bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004411bc(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x1a) != '\\0') {\n        return;\n    }\n    *(in_EAX + 0x1a) = 1;\n    uStack28 = 0x4412b4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    if (param_2 != *(in_EAX + 0x69)) {\n        iVar4 = *(in_EAX[0x14] + 8);\n        puVar1 = &stack0xfffffffc;\n        if (-1 < iVar4 + -1) {\n            do {\n                puStack24 = puVar1;\n                piVar3 = fcn.00403400();\n                if (piVar3 != NULL) {\n                    (**(*piVar3 + 0x50))();\n                }\n                iVar4 = iVar4 + -1;\n                puVar1 = puStack24;\n            } while (iVar4 != 0);\n        }\n        *(in_EAX + 0x69) = param_2;\n        if (((0 < in_EAX[0x1b]) && (*(in_EAX + 0x69) != '\\0')) && (iVar4 = fcn.00440d14(),  -1 < iVar4 + -1)) {\n            do {\n                piVar3 = fcn.00440d00();\n                if (((piVar3 != in_EAX) && (cVar2 = fcn.004033dc(),  cVar2 != '\\0')) && (piVar3[0x1b] == in_EAX[0x1b]))\n                {\n                    fcn.004411bc();\n                }\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        (**(*in_EAX + 0x30))();\n    }\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0x1a) = 0;\n    return;\n}\n",
        "token_count": 532
    },
    "00441650": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00441650(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x90) == 0) {\n        uVar1 = fcn.00403220();\n        *(in_EAX + 0x90) = uVar1;\n    }\n    return *(in_EAX + 0x90);\n}\n",
        "token_count": 86
    },
    "00441a0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00441a0c(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.004035c4();\n    while (0 < *(*(iVar1 + 0x4c) + 8)) {\n        fcn.00416fac();\n        fcn.004429d8();\n    }\n    fcn.00403250();\n    fcn.00441d68();\n    fcn.00403250();\n    *(iVar1 + 0x4c) = 0;\n    if (*(iVar1 + 0x54) != 0) {\n        fcn.00403250();\n    }\n    fcn.0041c8c8();\n    if ('\\0' < extraout_DL) {\n        fcn.004035ac();\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "00441b30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00441b30(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x3c) != 0;\n}\n",
        "token_count": 50
    },
    "00441b38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00441b38(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x3c) == 0) {\n        fcn.00441da0();\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "00441d68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00441d68(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    cVar1 = fcn.00441b30();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x42) == '\\0')) {\n        uVar2 = fcn.00441d04();\n        sub.comctl32.dll_ImageList_Destroy(uVar2);\n    }\n    *(in_EAX + 0x3c) = 0;\n    fcn.0040344c();\n    return;\n}\n",
        "token_count": 129
    },
    "00441f0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441f0c(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x441f27;\n    fcn.00422f44();\n    uStack36 = 0x44200b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if ((*(in_EAX + 0x41) != '\\0') && (param_1 != -1)) {\n        puStack44 = 0x441f5a;\n        puStack32 = &stack0xfffffffc;\n        piVar1 = fcn.00422f44();\n        uStack48 = 0x441fcd;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        puStack44 = &stack0xfffffffc;\n        (**(*piVar1 + 8))();\n        fcn.004243d0();\n        fcn.00441b38();\n        (**(*piVar1 + 0x68))();\n        uVar2 = fcn.00441cf4();\n        uVar3 = fcn.00441d14(uVar2);\n        uVar2 = *(in_EAX + 0x3c);\n        sub.comctl32.dll_ImageList_Add(uVar2, uVar3);\n        *in_FS_OFFSET = uVar2;\n        fcn.00403250(0x441ff5);\n        return;\n    }\n    puStack44 = NULL;\n    uStack48 = 0x441fe3;\n    puStack32 = &stack0xfffffffc;\n    uStack48 = fcn.00441d14();\n    uStack52 = 0x441fec;\n    uStack52 = fcn.00441d04();\n    sub.comctl32.dll_ImageList_Add();\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x442012;\n    uStack48 = 0x44200a;\n    fcn.00403250();\n    return;\n}\n",
        "token_count": 541
    },
    "0044236c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044236c(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    uint in_EDX;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.00441b30();\n    if (cVar1 != '\\0') {\n        if (arg_8h == '\\0') {\n            if (*(in_EAX + 0x54) == 0) {\n                piVar3 = fcn.00422f44();\n                *(in_EAX + 0x54) = piVar3;\n                fcn.0042427c();\n                (**(*piVar3 + 0x40))();\n                (**(*piVar3 + 0x34))();\n            }\n            fcn.0042350c();\n            fcn.004200ac();\n            fcn.00415a90(&var_28h, *(in_EAX + 0x30));\n            fcn.0042350c(&var_28h);\n            fcn.004204cc();\n            fcn.0042350c(0, 0, 0, 0, 0xffffffff, 0, 0);\n            uVar2 = fcn.0042084c();\n            uVar2 = fcn.00441d04(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n            fcn.00415a90(&var_18h, arg_10h + *(in_EAX + 0x30));\n            fcn.0042350c();\n            var_8h = fcn.0042084c();\n            fcn.004200ac();\n            uVar2 = fcn.0042084c();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt\n                      (uVar2, arg_14h + 1, arg_10h + 1, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n            fcn.004200ac();\n            uVar2 = fcn.0042084c();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt(uVar2, arg_14h, arg_10h, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n        }\n        else {\n            uVar2 = fcn.0044192c(arg_ch);\n            fcn.00442344(uVar2);\n            uVar2 = fcn.0044192c();\n            uVar2 = fcn.0042084c(arg_14h, arg_10h, 0, 0, uVar2);\n            uVar2 = fcn.00441d04(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 782
    },
    "00442b64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00442b64(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        iVar2 = fcn.00442028();\n        return 0 < iVar2;\n    }\n    cVar1 = fcn.004033dc();\n    if ((cVar1 != '\\0') && (cVar1 = fcn.00442a74(),  cVar1 != '\\0')) {\n        return false;\n    }\n    return true;\n}\n",
        "token_count": 134
    },
    "00442c18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00442c18(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puVar3;\n    int32_t iStack112;\n    uint uStack108;\n    uchar *puStack104;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_30h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    puStack84 = 0x442c35;\n    var_4h = in_EAX;\n    fcn.00418d48();\n    puStack84 = 0x442c44;\n    fcn.00418d48();\n    puStack84 = 0x442c50;\n    var_8h = fcn.00422f44();\n    uStack88 = 0x442e9c;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    iVar1 = fcn.00418b1c();\n    (**(*var_8h + 0x54))();\n    puStack104 = 0x442c83;\n    fcn.00418b3c(var_18h + iVar1, var_18h + iVar1 >> 0x1f);\n    puStack104 = 0x442c8f;\n    var_10h = fcn.00422f44();\n    uStack108 = 0x442e7f;\n    iStack112 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff90;\n    puStack104 = &stack0xfffffffc;\n    (**(*var_10h + 0x54))();\n    var_ch = fcn.00422f44();\n    (**(*var_ch + 0x40))();\n    (**(*var_ch + 0x34))();\n    var_14h = fcn.00422f44();\n    fcn.0042427c();\n    (**(*var_14h + 0x40))();\n    (**(*var_14h + 0x34))();\n    fcn.00415a90(&fcn.00442c18::var_30h, *(var_4h + 0x30));\n    fcn.00443244();\n    puVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    iVar1 = (**(*var_8h + 0x20))();\n    iVar1 = iVar1 / *(var_4h + 0x30);\n    if (-1 < iVar1 + -1) {\n        do {\n            var_20h = iVar1;\n            if (var_1ch == 0) break;\n            iVar1 = (**(*var_8h + 0x2c))();\n            iVar1 = iVar1 / *(var_4h + 0x34);\n            if (-1 < iVar1 + -1) {\n                do {\n                    if (var_1ch == 0) break;\n                    fcn.00415ab8(&fcn.00442c18::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.00442c18::var_40h;\n                    uVar2 = fcn.0042350c();\n                    fcn.0042350c(uVar2);\n                    fcn.0042031c(puVar3);\n                    fcn.00415ab8(&fcn.00442c18::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.00442c18::var_40h;\n                    uVar2 = fcn.0042350c();\n                    fcn.0042350c(uVar2);\n                    fcn.0042031c(puVar3);\n                    fcn.00441e40();\n                    var_1ch = var_1ch + -1;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n            var_20h = var_20h + -1;\n            iVar1 = var_20h;\n        } while (var_20h != 0);\n    }\n    *in_FS_OFFSET = puVar3;\n    fcn.00403250();\n    fcn.00403250();\n    fcn.00443248();\n    return;\n}\n",
        "token_count": 1044
    },
    "00443100": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443100(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (*0x470b9c == 0) {\n        *0x470b9c = fcn.0040bdfc();\n        if (0x5ffff < *0x470b9c) {\n            iVar1 = sub.kernel32.dll_GetModuleHandleA_2();\n            if (iVar1 != 0) {\n                *0x470ba0 = sub.kernel32.dll_GetProcAddress_1();\n            }\n        }\n    }\n    puStack40 = 0x44315f;\n    iVar1 = fcn.0041d374(0);\n    uStack44 = 0x4431fa;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (*0x470ba0 == NULL) {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        puStack40 = &stack0xfffffffc;\n        uVar3 = fcn.00441d04(iVar1);\n        iVar1 = sub.comctl32.dll_ImageList_Write();\n        if (iVar1 == 0) {\n            fcn.0040b620();\n            fcn.004039c4();\n        }\n    }\n    else {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        uVar3 = 1;\n        puStack40 = &stack0xfffffffc;\n        uVar2 = fcn.00441d04(1, iVar1);\n        iVar1 = (**0x470ba0)(uVar2);\n        if (iVar1 != 0) {\n            fcn.0040b620();\n            fcn.004039c4();\n        }\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack48 = 0x443201;\n    fcn.00403250();\n    return;\n}\n",
        "token_count": 474
    },
    "00443248": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443248(void)\n\n{\n    int32_t in_EAX;\n    \n    if (0 < *(in_EAX + 0x5c)) {\n        *(in_EAX + 0x5c) = *(in_EAX + 0x5c) + -1;\n    }\n    if (*(in_EAX + 0x58) != '\\0') {\n        *(in_EAX + 0x58) = 0;\n        fcn.0040344c();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00444300": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x0044447b)\n// WARNING: Removing unreachable block (ram,0x00444488)\n// WARNING: Removing unreachable block (ram,0x00444495)\n// WARNING: Removing unreachable block (ram,0x0044449b)\n// WARNING: Removing unreachable block (ram,0x004444a8)\n// WARNING: Removing unreachable block (ram,0x004444ae)\n// WARNING: Removing unreachable block (ram,0x004444bb)\n\nvoid fcn.00444300(void)\n\n{\n    uint8_t in_AL;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack28 = &fcn.00444300::var_2h + 2;\n    uStack32 = 0x4444e9;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uVar1 = in_AL;\n    if (in_AL < 0x2d) {\n        if (uVar1 - 8 < 2) {\n            puStack28 = &fcn.00444300::var_2h + 2;\n            fcn.00404020();\n            goto code_r0x00444475;\n        }\n        if (uVar1 == 0xd) {\n            puStack28 = &fcn.00444300::var_2h + 2;\n            fcn.00404020();\n            goto code_r0x00444475;\n        }\n        if (uVar1 == 0x1b) {\n            puStack28 = &fcn.00444300::var_2h + 2;\n            fcn.00404020();\n            goto code_r0x00444475;\n        }\n        if (uVar1 - 0x20 < 9) {\n            puStack28 = &fcn.00444300::var_2h + 2;\n            fcn.00404020();\n            goto code_r0x00444475;\n        }\n    }\n    else if (in_AL < 0x41) {\n        if (uVar1 - 0x2d < 2) {\n            puStack28 = &fcn.00444300::var_2h + 2;\n            fcn.00404020();\n            goto code_r0x00444475;\n        }\n        if (uVar1 - 0x30 < 10) {\n            puStack28 = &fcn.00444300::var_2h + 2;\n            fcn.00404170();\n            goto code_r0x00444475;\n        }\n    }\n    else {\n        if (uVar1 - 0x41 < 0x1a) {\n            fcn.00404170();\n            goto code_r0x00444475;\n        }\n        if (uVar1 - 0x60 < 10) {\n            puStack28 = &fcn.00444300::var_2h + 2;\n            fcn.00404170();\n            goto code_r0x00444475;\n        }\n        if (uVar1 - 0x70 < 0x18) {\n            puStack28 = &fcn.00444300::var_2h + 2;\n            fcn.00407fd4();\n            fcn.00404294();\n            goto code_r0x00444475;\n        }\n    }\n    puStack28 = &fcn.00444300::var_2h + 2;\n    fcn.004442ac();\ncode_r0x00444475:\n    fcn.00403f88();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4444f0;\n    uStack32 = 0x4444e8;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 878
    },
    "00444560": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00444560(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x444579;\n    fcn.00404438();\n    uStack32 = 0x44463b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    do {\n        do {\n            cVar1 = fcn.00444504();\n        } while (cVar1 != '\\0');\n        cVar1 = fcn.00444504();\n    } while (((cVar1 != '\\0') || (cVar1 = fcn.00444504(),  cVar1 != '\\0')) || (cVar1 = fcn.00444504(),  cVar1 != '\\0'));\n    if (in_EAX != 0) {\n        iVar3 = 8;\n        do {\n            fcn.00444300();\n            iVar2 = fcn.00407e64();\n            if (iVar2 == 0) break;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != 0x256);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x444642;\n    uStack32 = 0x44463a;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 359
    },
    "00444678": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00444678(uint *arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t *piVar2;\n    code *in_ECX;\n    int32_t in_EDX;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar2 = in_EAX;\n    if (in_EDX != 0) {\n        var_9h = 0;\n        while (var_9h == 0) {\n            piVar2 = fcn.00446c18();\n            if (piVar2 <= *in_EAX) break;\n            uVar1 = fcn.00446c28();\n            piVar2 = uVar1 & 0xffffff00;\n            if (*(arg_8h + -1) <= *(uVar1 + 0x3f) && *(uVar1 + 0x3f) != *(arg_8h + -1)) break;\n            piVar2 = (*in_ECX)(*arg_8h);\n            *in_EAX = *in_EAX + 1;\n            var_9h = piVar2;\n        }\n    }\n    return piVar2 & 0xffffff00 | var_9h;\n}\n",
        "token_count": 287
    },
    "004446d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004446d8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char var_16h;\n    uint8_t var_15h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_10h = 0;\n    var_14h = 0;\n    iVar2 = 0;\n    iVar3 = 0;\n    if (param_2 != 0) {\n        iVar2 = fcn.00446c18();\n    }\n    if (param_1 != 0) {\n        iVar3 = fcn.00446c18();\n    }\n    var_16h = '\\0';\n    while ((var_16h == '\\0' && ((var_10h < iVar2 || (var_14h < iVar3))))) {\n        var_1h._0_1_ = 0xff;\n        var_15h = 0xff;\n        if (var_10h < iVar2) {\n            iVar1 = fcn.00446c28();\n            var_1h._0_1_ = *(iVar1 + 0x3f);\n        }\n        if (var_14h < iVar3) {\n            iVar1 = fcn.00446c28();\n            var_15h = *(iVar1 + 0x3f);\n        }\n        if (var_15h < var_1h) {\n            var_1h._0_1_ = var_15h;\n            var_16h = fcn.00444678(&var_1h + 1);\n        }\n        else {\n            var_16h = fcn.00444678(&var_1h + 1);\n        }\n        while ((var_10h < iVar2 && (iVar1 = fcn.00446c28(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_10h = var_10h + 1;\n        }\n        while ((var_14h < iVar3 && (iVar1 = fcn.00446c28(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_14h = var_14h + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 563
    },
    "00444b6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00444b6c(uint param_1, char param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041c87c();\n    *(in_EAX + 0x3e) = 1;\n    *(in_EAX + 0x39) = 1;\n    *(in_EAX + 0x3b) = 2;\n    *(in_EAX + 0x3c) = 2;\n    uVar1 = fcn.00444658();\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x40) = 0xffffffff;\n    iVar2 = fcn.00403220();\n    *(in_EAX + 0x78) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x44757c;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 336
    },
    "00444c9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00444c9c(uint8_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint8_t uVar7;\n    uint in_stack_ffffff84;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint lpmi;\n    uint var_35h;\n    uint32_t var_31h;\n    uint32_t var_2dh;\n    uint32_t var_29h;\n    uint var_25h;\n    uint var_21h;\n    uint var_1dh;\n    uint var_15h;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack84 = &var_1h + 1;\n    var_8h = 0;\n    uStack88 = 0x444ef7;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack92;\n    puVar1 = &var_1h + 1;\n    var_1h._0_1_ = param_1;\n    if (*(in_EAX + 0x3e) == '\\0') goto code_r0x00444ed9;\n    fcn.00404020();\n    iVar4 = fcn.00446c18();\n    if (iVar4 < 1) {\n        if (*(in_EAX + 0x60) != 0) {\n            if ((*(in_EAX + 100) != 0) && (*(*(in_EAX + 100) + 100) == 0)) {\n                cVar3 = fcn.004033dc();\n                if (cVar3 != '\\0') goto code_r0x00444d38;\n            }\n            fcn.00444300(0x444f10, var_8h);\n            fcn.00404308(0);\n        }\n    }\n    else {\n        var_25h = fcn.004451ac();\n    }\ncode_r0x00444d38:\n    uVar2 = sub.kernel32.dll_GetVersion_1();\n    uVar7 = uVar2 == 4;\n    if (uVar2 < 4) {\n        fcn.00404394();\n        uVar6 = *((uVar7 & 0x7f) * 4 + 0x464bd8) |\n                *(*(in_EAX + 0x48) * 4 + 0x464bcc) | *(*(in_EAX + 0x38) * 4 + 0x464bbc) |\n                *(*(in_EAX + 0x39) * 4 + 0x464bc4);\n        iVar4 = fcn.00446c18();\n        if (iVar4 < 1) {\n            uVar5 = fcn.00404448();\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x400, *(in_EAX + 0x50), uVar5);\n            in_stack_ffffff84 = param_2;\n            puVar1 = puStack84;\n        }\n        else {\n            uVar5 = fcn.00404448();\n            uVar5 = fcn.004451ac(uVar5);\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x410, uVar5);\n            in_stack_ffffff84 = param_2;\n            puVar1 = puStack84;\n        }\n        goto code_r0x00444ed9;\n    }\n    lpmi = 0x2c;\n    var_35h = 0x3f;\n    iVar4 = fcn.004471d4();\n    if (iVar4 == 0) {\ncode_r0x00444d78:\n        if (*(in_EAX + 0x4c) != 0) {\n            cVar3 = (**(**(in_EAX + 0x4c) + 0x1c))();\n            uVar2 = cVar3 == '\\0';\n            if (uVar2) goto code_r0x00444d8e;\n        }\n        var_9h = 0;\n        uVar2 = true;\n    }\n    else {\n        uVar2 = *(iVar4 + 0x40) == '\\0';\n        if (uVar2) {\n            iVar4 = fcn.004467f0();\n            uVar2 = iVar4 == 0;\n            if (uVar2) goto code_r0x00444d78;\n        }\ncode_r0x00444d8e:\n        var_9h = 1;\n    }\n    fcn.00404394();\n    var_31h = *((uVar2 & 0x7f) * 4 + 0x464c0c) | *(*(in_EAX + 0x3d) * 4 + 0x464c04) | *(*(in_EAX + 0x48) * 4 + 0x464be0)\n              | *(var_1h * 4 + 0x464c14) | *(var_9h * 4 + 0x464c1c);\n    var_2dh = *(*(in_EAX + 0x38) * 4 + 0x464bec) | *(*(in_EAX + 0x39) * 4 + 0x464bfc) |\n              *(*(in_EAX + 0x3a) * 4 + 0x464bf4);\n    var_29h = *(in_EAX + 0x50);\n    var_25h = 0;\n    var_21h = 0;\n    var_1dh = 0;\n    var_15h = fcn.00404448();\n    iVar4 = fcn.00446c18();\n    if (0 < iVar4) {\n        var_25h = fcn.004451ac();\n    }\n    sub.user32.dll_InsertMenuItemA(param_2, 0xffffffff, 0xffffffff, &lpmi);\n    in_stack_ffffff84 = param_2;\n    puVar1 = puStack84;\ncode_r0x00444ed9:\n    puStack84 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff84;\n    fcn.00403f88(0x444efe);\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 1488
    },
    "0044507c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044507c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    if ((*(in_EAX + 7) & 8) != 0) {\n        return;\n    }\n    if ((*(in_EAX + 7) & 2) != 0) {\n        *(in_EAX + 0x1d) = 1;\n        return;\n    }\n    if (in_EAX[0x1b] != 0) {\n        fcn.0044507c();\n        return;\n    }\n    uVar2 = fcn.004451ac();\n    iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n    bVar5 = iVar3 == 0;\n    for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n        uVar2 = fcn.004451ac(iVar3 + -1, 0x400);\n        uVar4 = sub.user32.dll_GetMenuState();\n        if ((uVar4 & 4) == 0) {\n            uVar2 = fcn.004451ac(iVar3 + -1, 0x400);\n            sub.user32.dll_RemoveMenu();\n            bVar5 = true;\n        }\n    }\n    if (!bVar5) {\n        return;\n    }\n    if ((in_EAX[0x19] == 0) && (cVar1 = fcn.004033dc(uVar2),  cVar1 != '\\0')) {\n        uVar2 = fcn.004451ac();\n        iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n        if (iVar3 == 0) {\n            sub.user32.dll_DestroyMenu(in_EAX[0xd]);\n            in_EAX[0xd] = 0;\n            goto code_r0x0044513c;\n        }\n    }\n    fcn.00444f3c();\ncode_r0x0044513c:\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 470
    },
    "004451ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004451ac(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x34) == 0) {\n        cVar1 = fcn.004033dc();\n        if (cVar1 == '\\0') {\n            uVar2 = sub.user32.dll_CreateMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        else {\n            uVar2 = sub.user32.dll_CreatePopupMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        if (*(in_EAX + 0x34) == 0) {\n            fcn.00444254();\n        }\n        fcn.00444f3c();\n    }\n    return *(in_EAX + 0x34);\n}\n",
        "token_count": 187
    },
    "0044523c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00445288)\n// WARNING: Removing unreachable block (ram,0x00445292)\n\nvoid __cdecl fcn.0044523c(uint32_t arg_8h, uint arg_ch, uint *lprc)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uStackY120;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    uint uStack24;\n    uint uStack20;\n    char *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_ch = NULL;\n    uStack52 = 0x445420;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    iVar2 = fcn.004471d4();\n    if ((iVar2 != 0) && (cVar1 = fcn.00448810(),  cVar1 != '\\0')) {\n        arg_8h = arg_8h | 0x20002;\n    }\n    fcn.00404020();\n    uVar5 = (arg_8h & 0x400) == 0;\n    if ((!uVar5) &&\n       ((uVar5 = var_ch == NULL,  uVar5 || ((uVar5 = *var_ch == '&',  uVar5 && (uVar5 = var_ch[1] == '\\0',  uVar5))))))\n    {\n        fcn.00404250();\n    }\n    fcn.00404394();\n    if (uVar5) {\n        if ((arg_8h & 0x400) == 0) {\n            var_1ch = *lprc;\n            uStack24 = lprc[2];\n            uStack20 = lprc[3];\n            var_18h = lprc[1] + 4;\n            uVar3 = fcn.0042084c(&var_1ch, 6, 2);\n            sub.user32.dll_DrawEdge(uVar3);\n        }\n        goto code_r0x0044540a;\n    }\n    fcn.004201c8();\n    if (*(in_EAX + 0x3a) != '\\0') {\n        fcn.0041fba0();\n        fcn.0041fbac();\n    }\n    if (*(in_EAX + 0x39) == '\\0') {\n        if (arg_ch == '\\0') {\n            sub.user32.dll_OffsetRect(lprc, 1, 1);\n            fcn.0041f8e0();\n            uVar3 = fcn.00404248(lprc, arg_8h);\n            uVar3 = fcn.00404448(uVar3);\n            uVar3 = fcn.0042084c(uVar3);\n            sub.user32.dll_DrawTextA(uVar3);\n            sub.user32.dll_OffsetRect(lprc, 0xffffffff, 0xffffffff);\n        }\n        else {\n            iVar2 = fcn.0041f420();\n            iVar4 = fcn.0041f420();\n            if (iVar2 == iVar4) {\n                fcn.0041f8e0();\n                goto code_r0x004453e5;\n            }\n        }\n        fcn.0041f8e0();\n    }\ncode_r0x004453e5:\n    uVar3 = fcn.00404248(lprc, arg_8h);\n    uVar3 = fcn.00404448(uVar3);\n    uStackY120 = fcn.0042084c(uVar3);\n    sub.user32.dll_DrawTextA();\ncode_r0x0044540a:\n    *in_FS_OFFSET = uStackY120;\n    fcn.00403f88(0x445427);\n    return;\n}\n",
        "token_count": 897
    },
    "0044544c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044544c(uint32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar auStack256 [212];\n    uint uStack44;\n    uint32_t uStack40;\n    uint *puStack36;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *in_ECX;\n    uStack16 = in_ECX[1];\n    uStack12 = in_ECX[2];\n    uStack8 = in_ECX[3];\n    if (*(in_EAX + 0x92) != 0) {\n        puStack36 = &fcn.0044544c::var_10h;\n        uStack40 = &stack0xffffff00 | arg_8h & 0xff;\n        uStack44 = 0x445482;\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "004467f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004467f0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    for (iVar1 = *(in_EAX + 100); (iVar1 != 0 && (*(iVar1 + 0x7c) == 0)); iVar1 = *(iVar1 + 100)) {\n    }\n    if (iVar1 == 0) {\n        iVar1 = fcn.004471d4();\n        if (iVar1 != 0) {\n            uVar2 = *(iVar1 + 0x48);\n        }\n    }\n    else {\n        uVar2 = *(iVar1 + 0x7c);\n    }\n    return uVar2;\n}\n",
        "token_count": 167
    },
    "0044686c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044686c(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t arg_8h_00;\n    uint8_t uVar4;\n    uint32_t *in_FS_OFFSET;\n    bool bVar5;\n    uchar uVar6;\n    uint32_t uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    var_10h = 0;\n    uStack60 = 0x446a4e;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack64;\n    fcn.0040344c();\n    cVar2 = fcn.004033dc();\n    bVar5 = cVar2 == '\\0';\n    if (bVar5) {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = bVar5;\n        fcn.00446820(&stack0xfffffffc);\n    }\n    bVar5 = !bVar5;\n    iVar3 = fcn.004471d4();\n    var_ch = fcn.004467f0();\n    fcn.00404394();\n    if (uVar6) {\n        *arg_8h = 5;\n        *var_4h = -2;\n        bVar1 = false;\n    }\n    else if ((var_ch == 0) || ((0x7fffffff < *(in_EAX + 0x40) && (bVar5)))) {\n        if ((*(in_EAX + 0x4c) == 0) || (cVar2 = (**(**(in_EAX + 0x4c) + 0x1c))(),  cVar2 != '\\0')) {\n            *var_4h = -7;\n            bVar1 = false;\n        }\n        else {\n            *var_4h = 0x10;\n            if (!bVar5) {\n                *arg_8h = 0x10;\n            }\n            bVar1 = true;\n        }\n    }\n    else {\n        *var_4h = *(var_ch + 0x34);\n        if (!bVar5) {\n            *arg_8h = *(var_ch + 0x30);\n        }\n        bVar1 = true;\n    }\n    if ((bVar1) && (!bVar5)) {\n        *var_4h = *var_4h + 0xf;\n    }\n    if (!bVar5) {\n        *arg_8h = *arg_8h + 3;\n    }\n    fcn.00402c5c();\n    if (iVar3 == 0) {\n        cVar2 = fcn.004033dc();\n        uVar4 = *0x60;\n        if (cVar2 == '\\0') {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\n    if (*(in_EAX + 0x60) == 0) {\n        fcn.00404020();\n    }\n    else {\n        fcn.00444300();\n        fcn.00404294();\n    }\n    arg_8h_00 = *(uVar4 * 2 + 0x464c34) | 0x560;\n    fcn.0044523c(arg_8h_00, 0, &var_20h);\n    *var_4h = *var_4h + (var_18h - var_20h) + 7;\n    if (*(in_EAX + 0xa2) != 0) {\n        (**(in_EAX + 0xa0))(arg_8h, var_4h);\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00403f88(0x446a55);\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 934
    },
    "00446aa8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446aa8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 100) != 0) && (iVar1 = fcn.00446c18(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.00446c28();\n            if ((in_EAX != iVar2) && ((*(iVar2 + 0x3d) != '\\0' && (*(iVar2 + 0x3f) == *(in_EAX + 0x3f))))) {\n                fcn.00446af0();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "00446af0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446af0(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 != *(in_EAX + 0x38)) {\n        *(in_EAX + 0x38) = param_2;\n        if ((*(in_EAX + 100) != 0) && ((*(in_EAX + 0x1c) & 2) == 0)) {\n            uVar1 = fcn.004451ac(*(in_EAX + 0x50), *(param_2 * 4 + 0x464bbc));\n            sub.user32.dll_CheckMenuItem(uVar1);\n        }\n        if ((param_2 != 0) && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.00446aa8();\n        }\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "00446b44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446b44(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == *(in_EAX + 0x39)) {\n        return;\n    }\n    *(in_EAX + 0x39) = param_2;\n    if (((**0x46fc18 != 2) || (iVar1 = fcn.00446c18(),  iVar1 == 0)) &&\n       ((in_EAX[0x19] == 0 || (*(in_EAX[0x19] + 0x6c) == 0)))) {\n        if ((in_EAX[0x19] != 0) && ((*(in_EAX + 7) & 2) == 0)) {\n            uVar2 = fcn.004451ac(*(in_EAX + 0x14), *(param_2 * 4 + 0x464bc4));\n            sub.user32.dll_EnableMenuItem(uVar2);\n        }\n        (**(*in_EAX + 0x3c))();\n        return;\n    }\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 275
    },
    "00446bbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446bbc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x3f)) {\n        if (*(in_EAX + 100) != 0) {\n            fcn.00446f7c();\n            fcn.0044514c();\n        }\n        *(in_EAX + 0x3f) = param_2;\n        if ((*(in_EAX + 0x38) != '\\0') && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.00446aa8();\n        }\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00446c28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446c28(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) == 0) {\n        fcn.00444254();\n    }\n    fcn.00416ec4();\n    return;\n}\n",
        "token_count": 62
    },
    "00446da4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446da4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*(param_1 + 100) != 0) {\n        fcn.00444254();\n    }\n    if (in_EAX[0x17] == 0) {\n        iVar1 = fcn.00403220();\n        in_EAX[0x17] = iVar1;\n    }\n    if ((-1 < param_2 + -1) && (param_2 + -1 < *(in_EAX[0x17] + 8))) {\n        iVar1 = fcn.00416ec4();\n        if (*(param_1 + 0x3f) <= *(iVar1 + 0x3f) && *(iVar1 + 0x3f) != *(param_1 + 0x3f)) {\n            fcn.00416ec4();\n            fcn.00446bbc();\n        }\n    }\n    fcn.0044514c();\n    fcn.00416f40();\n    *(param_1 + 100) = in_EAX;\n    *(param_1 + 0x84) = in_EAX;\n    *(param_1 + 0x80) = fcn.0044701c;\n    if (in_EAX[0xd] != 0) {\n        fcn.0044507c();\n    }\n    fcn.00446c18();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 348
    },
    "00446e58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446e58(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((-1 < param_2) && (in_EAX[0x17] != 0)) {\n        iVar1 = fcn.00446c18();\n        if (param_2 < iVar1) goto code_r0x00446e7e;\n    }\n    fcn.00444254();\ncode_r0x00446e7e:\n    iVar1 = fcn.00416ec4();\n    fcn.00416db4();\n    *(iVar1 + 100) = 0;\n    *(iVar1 + 0x80) = 0;\n    *(iVar1 + 0x84) = 0;\n    if (in_EAX[0xd] != 0) {\n        fcn.0044507c();\n    }\n    fcn.00446c18();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 233
    },
    "0044701c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044701c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if ((arg_8h != '\\0') && ((*(in_EAX + 0x34) != 0 || (*(in_EAX + 0x6c) != 0)))) {\n        fcn.0044507c();\n    }\n    if (*(in_EAX + 100) == 0) {\n        cVar1 = fcn.004033dc();\n        if (cVar1 != '\\0') {\n            fcn.00448cf4();\n        }\n    }\n    else {\n        fcn.0044701c(0);\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "00447678": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447678(uint param_1, uint param_2)\n\n{\n    bool bVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint in_stack_ffffffbc;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_10h = 0;\n    var_ch = 0;\n    uStack40 = 0x44779a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    bVar1 = false;\n    var_4h = param_2;\n    iVar2 = fcn.00404248();\n    if (0 < iVar2) {\n        iVar4 = 1;\n        do {\n            uVar3 = *(*in_EAX + -1 + iVar4);\n            if ((*(*0x46fc08 + (uVar3 >> 3)) >> (uVar3 & 7) & 1) != 0) {\n                bVar1 = true;\n                break;\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (bVar1) {\n        iVar2 = fcn.00404248(&var_ch);\n        uVar5 = iVar2 == 2;\n        fcn.004044a8();\n        fcn.00404394();\n        if (uVar5) {\n            fcn.00404248(&var_10h);\n            fcn.004044a8();\n            in_stack_ffffffbc = var_4h;\n            fcn.00404308(0x4477b0, 0x4477d4, var_4h, 0x4477c8, 0x4477bc, var_10h);\n        }\n        else {\n            in_stack_ffffffbc = 0x4477d4;\n            fcn.00404308(0x4477d4, var_4h, 0x4477c8, 0x4477bc, *in_EAX);\n        }\n    }\n    else if (var_8h != 0) {\n        fcn.00404530();\n    }\n    *in_FS_OFFSET = in_stack_ffffffbc;\n    fcn.00403fac(0x4477a1);\n    return;\n}\n",
        "token_count": 588
    },
    "004477d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004477d8(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_FS_OFFSET;\n    uchar uVar8;\n    uint uStack112;\n    uint uStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_20h;\n    uchar var_1ah;\n    char var_19h;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    var_48h = 0;\n    var_44h = 0;\n    var_40h = 0;\n    var_3ch = 0;\n    var_2ch = 0;\n    var_30h = 0;\n    var_34h = 0;\n    var_4h = 0;\n    var_18h = 0;\n    uStack96 = 0x447c77;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    var_1ah = 0;\n    puVar1 = &stack0xfffffffc;\n    var_19h = param_2;\n    if (param_2 != '\\0') {\ncode_r0x00447834:\n        puStack92 = puVar1;\n        puStack104 = 0x447842;\n        fcn.00404020();\n        var_ch = NULL;\n        var_14h = NULL;\n        var_20h = NULL;\n        var_8h = NULL;\n        var_10h = 0;\n        uStack108 = 0x447c38;\n        uStack112 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff90;\n        puStack104 = &stack0xfffffffc;\n        var_ch = fcn.00403220();\n        var_14h = fcn.00403220();\n        var_20h = fcn.00403220();\n        var_8h = fcn.00403220();\n        iVar3 = fcn.00446c18();\n        if (-1 < iVar3 + -1) {\n            do {\n                var_38h = iVar3;\n                iVar3 = fcn.00446c28();\n                uVar8 = *(iVar3 + 0x3e) == '\\0';\n                if (!uVar8) {\n                    fcn.00446c28();\n                    fcn.00404394();\n                    if ((!uVar8) && (iVar3 = fcn.00446c28(),  *(iVar3 + 0x30) != 0)) {\n                        fcn.00446c28();\n                        fcn.004498d4();\n                        fcn.00407cec();\n                        if (var_2ch == 0) {\n                            uVar4 = fcn.00446c28();\n                            fcn.00446c28(uVar4);\n                            (**(*var_20h + 100))();\n                        }\n                        else {\n                            iVar3 = fcn.0040c284();\n                            if ((iVar3 != 0) && (cVar2 = fcn.004475c4(&stack0xfffffffc),  cVar2 == '\\0')) {\n                                iVar3 = fcn.00446c28();\n                                fcn.00446c28(iVar3 + 0x30);\n                                fcn.00449840();\n                                fcn.00403fdc();\n                                uVar4 = fcn.00446c28();\n                                fcn.00446c28(uVar4);\n                                (**(*var_20h + 100))();\n                            }\n                        }\n                    }\n                }\n                var_38h = var_38h + -1;\n                iVar3 = var_38h;\n            } while (var_38h != 0);\n        }\n        fcn.00404020();\n        iVar3 = (**(*var_20h + 0x14))();\n        if (-1 < iVar3 + -1) {\n            do {\n                var_38h = iVar3;\n                fcn.00404020();\n                (**(*var_14h + 8))();\n                (**(*var_ch + 0x44))();\n                iVar3 = (**(*var_14h + 0x14))();\n                iVar3 = iVar3 + -1;\n                if (-1 < iVar3) {\n                    do {\n                        (**(*var_14h + 0xc))();\n                        for (iVar7 = 1; iVar6 = fcn.00404248(),  iVar7 <= iVar6; iVar7 = iVar7 + 1) {\n                            uVar5 = *(var_30h + -1 + iVar7);\n                            if ((*(*0x46fc08 + (uVar5 >> 3)) >> (uVar5 & 7) & 1) == 0) {\n                                fcn.004044a8(&fcn.004477d8::var_44h);\n                                fcn.00407cec();\n                                cVar2 = fcn.004475c4(&stack0xfffffffc);\n                                if (cVar2 != '\\0') {\n                                    if (*(*0x46fc24 + 0xc) == '\\0') {\n                                        fcn.00404530();\n                                    }\n                                    else {\n                                        fcn.00447678();\n                                    }\n                                    (**(*var_14h + 0x18))();\n                                    (**(*var_ch + 0x3c))();\n                                    (**(*var_14h + 0x48))();\n                                    break;\n                                }\n                            }\n                            else {\n                                iVar7 = iVar7 + 1;\n                            }\n                        }\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n                iVar3 = (**(*var_ch + 0x14))();\n                if (var_10h < iVar3) {\n                    fcn.004475f4(&stack0xfffffffc);\n                }\n                iVar3 = (**(*var_14h + 0x14))();\n                if (iVar3 < 1) break;\n                iVar3 = (**(*var_14h + 0x14))();\n                if (-1 < iVar3 + -1) {\n                    do {\n                        (**(*var_14h + 0x18))();\n                        var_28h = (**(*var_20h + 0x5c))();\n                        (**(*var_20h + 0x14))();\n                        (**(*var_20h + 0x70))();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != 0);\n                }\n                var_38h = var_38h + -1;\n                iVar3 = var_38h;\n            } while (var_38h != 0);\n        }\n        if (var_10h == 0) {\n            fcn.004475f4(&stack0xfffffffc);\n        }\n        iVar3 = (**(*var_8h + 0x14))();\n        var_1ah = 0 < iVar3;\n        iVar3 = (**(*var_8h + 0x14))();\n        if (-1 < iVar3 + -1) {\n            do {\n                var_38h = iVar3;\n                (**(*var_8h + 0xc))();\n                if ((((*(*0x46fc24 + 0xc) != '\\0') && (iVar3 = fcn.0040c284(),  iVar3 == 0)) && (var_18h != 0)) &&\n                   (iVar3 = fcn.0040c284(),  iVar3 == 0)) {\n                    fcn.00404248(&fcn.004477d8::var_48h);\n                    fcn.004044a8();\n                    fcn.00447678();\n                    fcn.00404248();\n                    fcn.004044e8();\n                }\n                (**(*var_8h + 0x18))();\n                fcn.00403fdc();\n                var_38h = var_38h + -1;\n                iVar3 = var_38h;\n            } while (var_38h != 0);\n        }\n        *in_FS_OFFSET = uStack112;\n        puStack104 = 0x447c3f;\n        uStack108 = 0x447c1f;\n        fcn.00403250();\n        uStack108 = 0x447c27;\n        fcn.00403250();\n        uStack108 = 0x447c2f;\n        fcn.00403250();\n        uStack108 = 0x447c37;\n        fcn.00403250();\n        return;\n    }\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        puStack104 = 0x44782c;\n        cVar2 = fcn.00447e2c();\n        puVar1 = puStack92;\n        if (cVar2 != '\\0') goto code_r0x00447834;\n    }\n    *in_FS_OFFSET = uStack100;\n    puStack92 = 0x447c7e;\n    uStack96 = 0x447c59;\n    fcn.00403fac();\n    uStack96 = 0x447c66;\n    fcn.00403fac();\n    uStack96 = 0x447c6e;\n    fcn.00403f88();\n    uStack96 = 0x447c76;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 2228
    },
    "00447cd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00447cd4(uint param_1, char param_2)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t uStack24;\n    int32_t iStack20;\n    \n    uStack24 = 0;\n    if ((param_2 != '\\0') || (((*(in_EAX + 0x1c) & 0x10) == 0 && (in_EAX = fcn.00447e58(),  in_EAX != '\\0')))) {\n        iStack20 = 0;\n        iVar5 = 0;\n        iVar4 = 0;\n        iVar2 = fcn.00446c18();\n        iVar3 = iStack20;\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.00446c28();\n                if (*(iVar3 + 0x3e) != '\\0') {\n                    fcn.00446c28();\n                    cVar1 = fcn.00447cb0();\n                    iVar3 = iVar4;\n                    if (cVar1 == '\\0') break;\n                    iVar3 = fcn.00446c28();\n                    *(iVar3 + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar4 = iVar4 + 1;\n                iVar2 = iVar2 + -1;\n                iVar3 = iStack20;\n            } while (iVar2 != 0);\n        }\n        iStack20 = iVar3;\n        iVar4 = fcn.00446c18();\n        if (iStack20 <= iVar4 + -1) {\n            iVar3 = ((iVar4 + -1) - iStack20) + 1;\n            iVar4 = iStack20;\n            do {\n                fcn.00446c28();\n                cVar1 = fcn.00447cb0();\n                if (cVar1 == '\\0') {\n                    iVar2 = fcn.00446c28();\n                    if (*(iVar2 + 0x3e) != '\\0') {\n                        if ((iVar5 != 0) && (*(iVar5 + 0x3e) == '\\0')) {\n                            *(iVar5 + 0x3e) = 1;\n                            uStack24 = 1;\n                        }\n                        iVar5 = 0;\n                        iStack20 = iVar4;\n                    }\n                }\n                else {\n                    if ((iVar5 != 0) && (*(iVar5 + 0x3e) != '\\0')) {\n                        *(iVar5 + 0x3e) = 0;\n                        uStack24 = 1;\n                    }\n                    iVar5 = fcn.00446c28();\n                }\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        in_EAX = fcn.00446c18();\n        iVar4 = iStack20 - (in_EAX - 1);\n        if (iVar4 == 0 || iStack20 < in_EAX - 1) {\n            iVar4 = iVar4 + -1;\n            do {\n                in_EAX = fcn.00446c28();\n                if (*(in_EAX + 0x3e) != '\\0') {\n                    fcn.00446c28();\n                    in_EAX = fcn.00447cb0();\n                    if (in_EAX == '\\0') break;\n                    in_EAX = fcn.00446c28();\n                    *(in_EAX + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 != 0);\n        }\n    }\n    return CONCAT44(iStack20, in_EAX & 0xffffff00 | uStack24);\n}\n",
        "token_count": 857
    },
    "00447e2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.00447e2c(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3b);\n    if ((*(in_EAX + 0x3b) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.00447e2c();\n        uVar1 = *((uVar1 & 0x7f) + 0x464b6c);\n    }\n    return *((uVar1 & 0x7f) + 0x464b70);\n}\n",
        "token_count": 141
    },
    "00447e58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.00447e58(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3c);\n    if ((*(in_EAX + 0x3c) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.00447e58();\n        uVar1 = *((uVar1 & 0x7f) + 0x464b6c);\n    }\n    return *((uVar1 & 0x7f) + 0x464b70);\n}\n",
        "token_count": 139
    },
    "00447e84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.00447e84(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    iVar1 = fcn.00444b6c();\n    in_EAX[0xd] = iVar1;\n    *(iVar1 + 0x84) = in_EAX;\n    *(iVar1 + 0x80) = *(*in_EAX + 0x38);\n    *(iVar1 + 0x70) = in_EAX;\n    iVar1 = fcn.00403220();\n    in_EAX[0x11] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x44879c;\n    *(in_EAX + 0x41) = 1;\n    fcn.0041c87c();\n    iVar1 = in_EAX[0xd];\n    *(iVar1 + 0x3b) = 0;\n    *(iVar1 + 0x3c) = 0;\n    fcn.00448bb0();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 363
    },
    "00447fd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00447fd4(uint32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0;\n    if ((((*(arg_8h - 1) == '\\0') && (*(arg_8h - 8) == *(in_EAX + 0x50))) ||\n        ((*(arg_8h - 1) == '\\x01' && (*(arg_8h - 8) == *(in_EAX + 0x34))))) ||\n       ((*(arg_8h - 1) == '\\x02' && (*(arg_8h - 8) == *(in_EAX + 0x60))))) {\n        *(arg_8h - 0xc) = in_EAX;\n        _auStack8 = 0x1000000;\n        uVar1 = arg_8h;\n    }\n    else {\n        uVar1 = fcn.00446c18();\n        uVar2 = uVar1;\n        if (-1 < uVar1 - 1) {\n            do {\n                uVar1 = arg_8h;\n                fcn.00446c28();\n                uVar1 = fcn.00447fd4(uVar1);\n                if (uVar1 != '\\0') {\n                    _auStack8 = 0x1000000;\n                    break;\n                }\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n    }\n    return uVar1 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 398
    },
    "0044809c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044809c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    char cStack20;\n    \n    uVar3 = 0;\n    cStack20 = param_1;\n    if (((cStack20 == '\\0') && (cVar1 = fcn.004033dc(),  cVar1 != '\\0')) &&\n       (iVar2 = (**(*in_EAX + 0x34))(),  param_2 == iVar2)) {\n        uVar3 = fcn.004495c4();\n    }\n    else {\n        for (iVar2 = fcn.0044806c(); (iVar2 != 0 && (*(iVar2 + 0x54) == 0)); iVar2 = *(iVar2 + 100)) {\n        }\n        if (iVar2 != 0) {\n            uVar3 = *(iVar2 + 0x54);\n        }\n    }\n    return CONCAT44(param_1, uVar3);\n}\n",
        "token_count": 240
    },
    "004481f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004481f0(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x40) == '\\0') && (*(in_EAX + 0x48) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 67
    },
    "00448214": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00448214(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY36;\n    uint uStackY32;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    piVar1 = (*in_EAX)[0x19];\n    piVar2 = piVar1;\n    if (piVar1 != NULL) {\n        uStackY32 = 0x448242;\n        piVar2 = fcn.00448214(arg_8h);\n        var_1h._0_1_ = piVar2;\n    }\n    piVar4 = piVar2 & 0xffffff00;\n    if ((var_1h != 0) && (var_1h != 3)) {\n        if (var_1h == 2) {\n            if ((arg_8h[-1] == 0) || (*(arg_8h[-1] + 0x60) != *(arg_8h + -6))) {\n                iVar3 = fcn.0044806c();\n                arg_8h[-1] = iVar3;\n                if (arg_8h[-1] == 0) {\n                    var_1h._0_1_ = 3;\n                    piVar4 = arg_8h;\n                    goto code_r0x0044835b;\n                }\n            }\n            piVar4 = fcn.00448204();\n            *in_EAX = piVar4;\n            if ((*in_EAX == NULL) || (piVar4 = (*in_EAX)[0x19],  piVar4 != piVar1)) goto code_r0x0044835b;\n            if (in_EDX == 0) {\n                var_1h._0_1_ = 1;\n            }\n        }\n        piVar4 = *in_EAX;\n        if (*(piVar4 + 0x39) == '\\0') {\n            var_1h._0_1_ = 0;\n        }\n        else {\n            uStackY32 = 0x448339;\n            uStackY36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffdc;\n            if ((*(arg_8h[-3] + 0x1c) & 0x10) == 0) {\n                fcn.00447140();\n            }\n            (**(**in_EAX + 0x44))();\n            if ((arg_8h[-1] == 0) || ((*in_EAX != arg_8h[-1] && (*(arg_8h[-1] + 0x60) != *(arg_8h + -6))))) {\n                var_1h._0_1_ = 2;\n            }\n            piVar4 = NULL;\n            *in_FS_OFFSET = uStackY36;\n        }\n    }\ncode_r0x0044835b:\n    return piVar4 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 738
    },
    "00448368": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00448368(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint var_14h;\n    uint var_ch;\n    uint var_6h;\n    \n    if (*(param_2 + 4) == '\\0') {\n        return 0;\n    }\n    uStack32 = 0x10;\n    uStack36 = 0x448391;\n    sub.user32.dll_GetKeyState();\n    uStack36 = 0x11;\n    puStack40 = 0x4483a3;\n    sub.user32.dll_GetKeyState();\n    puStack40 = 0x4483d0;\n    fcn.0042548c();\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack44 = 0x448466;\n    puStack52 = 0x4483f0;\n    puStack40 = &stack0xfffffffc;\n    iVar1 = fcn.0044806c();\n    if (iVar1 == 0) {\n        *in_FS_OFFSET = uStack48;\n        puStack40 = 0x44846d;\n        uStack44 = 0x448465;\n        uVar2 = fcn.00425484();\n        return uVar2;\n    }\n    puStack52 = 0x448406;\n    fcn.0042548c();\n    uStack56 = 0x44843b;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00448214(&stack0xfffffffc);\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x448442;\n    uStack56 = 0x44843a;\n    uVar2 = fcn.00425484();\n    return uVar2;\n}\n",
        "token_count": 483
    },
    "0044848c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044848c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uStack152;\n    uint uStack148;\n    uint32_t uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uchar *puStack100;\n    uint uStack96;\n    uchar auStack88 [80];\n    \n    if ((*(*0x46fc24 + 0xd) != '\\0') && (in_EAX[0xe] != 0)) {\n        puStack140 = 0x4484b3;\n        uVar2 = (**(*in_EAX + 0x34))();\n        uStack136 = 0x2c;\n        uStack132 = 0x10;\n        puStack100 = &stack0xffffffa8;\n        uStack96 = 0x50;\n        uStack144 = 0xffffffff;\n        uStack148 = 0;\n        uStack152 = uVar2;\n        puStack140 = &stack0xffffff78;\n        iVar3 = sub.user32.dll_GetMenuItemInfoA();\n        if (iVar3 != 0) {\n            cVar1 = fcn.00448810();\n            if (cVar1 != '\\x01' - ((uStack144 & 0x6000) == 0)) {\n                uVar4 = fcn.00448810();\n                uStack144 = (uVar4 & 0x7f) * 0x6000 | uStack144 & 0xffff9fff;\n                uStack148 = 0x10;\n                iVar3 = sub.user32.dll_SetMenuItemInfoA(uVar2, 0, 0xffffffff, &stack0xffffff68);\n                if (iVar3 != 0) {\n                    sub.user32.dll_DrawMenuBar(in_EAX[0xe]);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 434
    },
    "004485e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004485e8(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uchar *arg_8h;\n    uint var_204h;\n    uint var_200h;\n    \n    arg_8h = &stack0xfffffffc;\n    if (in_EAX[0xe] != 0) {\n        (**(*in_EAX + 0x34))();\n        fcn.00448548(arg_8h);\n    }\n    if (in_EAX[0xf] != 0) {\n        fcn.00404448();\n        iVar1 = fcn.004086b8();\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    fcn.004041f8();\n    return 1;\n}\n",
        "token_count": 174
    },
    "0044867c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044867c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar var_6h;\n    char var_5h;\n    int32_t var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*(*0x46fc24 + 0xd) != '\\0') {\n        var_5h = *(in_EAX + 0x30);\n        var_6h = *(in_EAX + 0x41);\n        uStack20 = 0x4486ec;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        var_4h = in_EAX;\n        if (var_5h == '\\0') {\n            puStack16 = &stack0xfffffffc;\n            fcn.00448b8c();\n        }\n        else {\n            fcn.00448b8c();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x4486f3;\n        uStack20 = 0x4486e2;\n        fcn.00448b8c();\n        *(var_4h + 0x41) = var_6h;\n        return;\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "004486f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004486f8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x38) = param_2;\n    fcn.004485e8();\n    if ((*(*0x46fc24 + 0xd) != '\\0') && (param_2 != 0)) {\n        if (*(in_EAX + 0x41) == '\\0') {\n            fcn.0044867c();\n        }\n        else {\n            fcn.00448bb0();\n        }\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00448810": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00448810(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x46fc24 + 0xd) != '\\0') && (*(in_EAX + 0x30) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 67
    },
    "00448884": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.00448884(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint16_t in_DX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack32 = &var_2h + 2;\n    uStack36 = 0x448959;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if ((in_DX & 0x10) == 0) {\n        iVar1 = fcn.0044806c();\n        if ((iVar1 != 0) && (iVar2 = fcn.00446c18(),  in_ECX < iVar2)) {\n            iVar1 = fcn.00446c28();\n        }\n    }\n    else {\n        puStack32 = &var_2h + 2;\n        sub.user32.dll_GetSubMenu();\n        iVar1 = fcn.0044806c();\n        uStack48 = in_EAX;\n    }\n    if ((iVar1 != 0) && (*(iVar1 + 0x30) != 0)) {\n        fcn.00404170();\n        fcn.00404170(0);\n        iVar1 = fcn.00407e64();\n        if (iVar1 == 0) {\n            fcn.004498d4();\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    uStack40 = 0x448960;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 410
    },
    "0044896c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044896c(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(param_2 + 0xc) = 0;\n    var_ch = 0xffffffff;\n    var_10h = 0xffffffff;\n    var_14h = 0xffffffff;\n    iVar3 = sub.user32.dll_GetMenuItemCount(*(param_2 + 8));\n    if (-1 < iVar3 + -1) {\n        uVar5 = 0;\n        var_18h = iVar3;\n        do {\n            uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n            cVar2 = fcn.00448828(uVar4 & 0xffffff00 | *(param_2 + 4), &stack0xfffffffc);\n            uVar1 = var_10h;\n            if (cVar2 != '\\0') {\n                if ((uVar4 & 2) == 0) {\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                else if (var_ch < 0) {\n                    var_ch = 0xfffffffe;\n                }\n            }\n            var_10h = uVar1;\n            uVar5 = uVar5 + 1;\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    if (var_ch < -1) {\n        *(param_2 + 0xc) = 0x10000;\n    }\n    else {\n        if ((var_ch < 0) && (-1 < iVar3 + -1)) {\n            uVar5 = 0;\n            var_18h = iVar3;\n            do {\n                uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n                cVar2 = fcn.00448884(uVar4 & 0xffffff00 | *(param_2 + 4), &stack0xfffffffc);\n                uVar1 = var_10h;\n                if (cVar2 != '\\0') {\n                    if ((uVar4 & 2) != 0) {\n                        *(param_2 + 0xc) = 0x10000;\n                        return;\n                    }\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                var_10h = uVar1;\n                uVar5 = uVar5 + 1;\n                var_18h = var_18h + -1;\n            } while (var_18h != 0);\n        }\n        if (*(param_2 + 0xc) == 2) {\n            *(param_2 + 0xc) = var_ch | 0x20000;\n        }\n        else if (*(param_2 + 0xc) == 3) {\n            if (var_14h < 0) {\n                var_14h = var_ch;\n            }\n            *(param_2 + 0xc) = var_14h | 0x30000;\n        }\n    }\n    return;\n}\n",
        "token_count": 953
    },
    "00448ae4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00448ae4(uint uFlags, uint cchMax, uchar *lpString)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    cVar1 = fcn.004481f0();\n    if (cVar1 == '\\0') {\n        uVar4 = sub.user32.dll_GetMenuStringA();\n    }\n    else {\n        var_4h = 0;\n        uVar2 = sub.user32.dll_GetMenuState();\n        if ((uVar2 & 0x10) == 0) {\n            iVar3 = sub.user32.dll_GetMenuItemID();\n            if (iVar3 != -1) {\n                var_4h = fcn.0044806c();\n            }\n        }\n        else {\n            sub.user32.dll_GetSubMenu();\n            var_4h = fcn.0044806c();\n        }\n        if (var_4h == 0) {\n            uVar4 = 0;\n        }\n        else {\n            *lpString = 0;\n            fcn.00408698();\n            uVar4 = fcn.004085dc();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 276
    },
    "00448bb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00448bb0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        iVar1 = fcn.00431ae0();\n        if (iVar1 != 0) {\n            fcn.00448b8c();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00448bd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00448bd8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        fcn.00403400();\n        fcn.00448b8c();\n        *(in_EAX + 0x41) = 1;\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "00448c64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448c64(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    uVar2 = in_EAX;\n    if (*(in_EAX + 0x38) != 0) {\n        uVar1 = fcn.004485e8();\n        uVar2 = uVar1;\n        if (in_ECX == 0) {\n            uVar2 = sub.user32.dll_SendMessageA(*(in_EAX + 0x38), 0xb015, 0, 0);\n        }\n        if (uVar1 != '\\0') {\n            uVar2 = sub.user32.dll_DrawMenuBar(*(in_EAX + 0x38));\n        }\n    }\n    fcn.00448760(uVar2 & 0xffffff00 | arg_8h & 0xff);\n    return;\n}\n",
        "token_count": 219
    },
    "00448d30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448d30(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    \n    uVar1 = *(in_EAX + 0x60);\n    if (uVar1 == 0) {\n        iVar3 = fcn.00446c18();\n        if (-1 < iVar3 + -1) {\n            do {\n                arg_8h_00 = arg_8h;\n                fcn.00446c28();\n                fcn.00448d30(arg_8h_00);\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    else if (*(arg_8h + -4) == 0) {\n        *(arg_8h + -8) = *(arg_8h + -8) + 1;\n    }\n    else {\n        uVar2 = 3;\n        if ((uVar1 & 0x4000) != 0) {\n            uVar2 = 0xb;\n        }\n        if ((uVar1 & 0x8000) != 0) {\n            uVar2 = uVar2 | 0x10;\n        }\n        if ((uVar1 & 0x2000) != 0) {\n            uVar2 = uVar2 | 4;\n        }\n        **(arg_8h + -4) = uVar2;\n        *(*(arg_8h + -4) + 2) = *(in_EAX + 0x60) & 0xff;\n        *(*(arg_8h + -4) + 4) = *(in_EAX + 0x50);\n        *(arg_8h + -4) = *(arg_8h + -4) + 6;\n    }\n    return;\n}\n",
        "token_count": 429
    },
    "00448e08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00448e40)\n\nvoid __fastcall fcn.00448e08(uint *param_1, uint *param_2)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint cAccel;\n    uint var_4h;\n    \n    fcn.004446d8();\n    *param_2 = 0;\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 97
    },
    "00448f80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448f80(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint32_t uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    uStack72 = 0x4494b3;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar9 = *param_2;\n    if (iVar9 < 0x112) {\n        if (iVar9 == 0x111) {\n            iVar9 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar9 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x448ffe;\n                    fcn.00416ec4();\n                    puStack80 = 0x449007;\n                    cVar3 = fcn.0044810c();\n                    if (cVar3 != '\\0') goto code_r0x0044949d;\n                    iVar9 = iVar9 + -1;\n                    puVar2 = puStack68;\n                } while (iVar9 != 0);\n            }\n        }\n        else if (iVar9 == 0x2b) {\n            uVar8 = param_2[2];\n            iVar9 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar9 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x449211;\n                    fcn.00416ec4();\n                    puStack80 = 0x44921e;\n                    iVar10 = fcn.0044806c();\n                    if (iVar10 != 0) {\n                        puStack80 = 0x449237;\n                        fcn.004201fc();\n                        puStack84 = 0x4492e6;\n                        uStack88 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa8;\n                        uStack92 = *(uVar8 + 0x18);\n                        puStack96 = 0x449254;\n                        puStack80 = &stack0xfffffffc;\n                        uVar6 = sub.gdi32.dll_SaveDC();\n                        uStack100 = 0x4492c9;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack96 = &stack0xfffffffc;\n                        fcn.004208cc();\n                        fcn.0042076c();\n                        uVar8 = uVar8 & 0xffff0000 | *(uVar8 + 0x10);\n                        puStack112 = 0x4492a1;\n                        fcn.00449758(uVar8);\n                        *in_FS_OFFSET = uVar8;\n                        uStack100 = 0x4492d0;\n                        uStack104 = 0x4492b8;\n                        fcn.004208cc();\n                        puStack112 = 0x4492c8;\n                        uStack104 = uVar6;\n                        sub.gdi32.dll_RestoreDC();\n                        return;\n                    }\n                    iVar9 = iVar9 + -1;\n                    puVar2 = puStack68;\n                } while (iVar9 != 0);\n            }\n        }\n        else if (iVar9 == 0x2c) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x44931c;\n                    fcn.00416ec4();\n                    puStack80 = 0x449329;\n                    piVar4 = fcn.0044806c();\n                    if (piVar4 != NULL) {\n                        puStack80 = *(in_EAX + 0x10);\n                        puStack84 = 0x449342;\n                        uVar6 = sub.user32.dll_GetWindowDC();\n                        uStack88 = 0x449429;\n                        uStack92 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa4;\n                        puStack96 = 0x44935f;\n                        puStack84 = &stack0xfffffffc;\n                        fcn.004201fc();\n                        uStack100 = 0x449404;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack112 = 0x449379;\n                        puStack96 = &stack0xfffffffc;\n                        uVar7 = sub.gdi32.dll_SaveDC();\n                        uStack116 = 0x4493e7;\n                        uStack120 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff88;\n                        puStack112 = &stack0xfffffffc;\n                        fcn.004208cc();\n                        fcn.0042076c();\n                        uVar8 = iVar9 + 0x10;\n                        (**(*piVar4 + 0x38))();\n                        *in_FS_OFFSET = uVar8;\n                        uStack116 = 0x4493ee;\n                        uStack120 = 0x4493d9;\n                        fcn.004208cc();\n                        uStack120 = uVar7;\n                        sub.gdi32.dll_RestoreDC(uVar6);\n                        return;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n        else if (iVar9 == 0x53) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x44910f;\n                    piVar4 = fcn.00416ec4();\n                    puStack80 = 0x449114;\n                    iVar5 = (**(*piVar4 + 0x34))();\n                    if (iVar5 == *(iVar9 + 0xc)) {\n                        puStack80 = 0x449126;\n                        iVar5 = fcn.00416ec4();\n                        unique0x00007a00 = *(iVar5 + 0x34);\n                    }\n                    else {\n                        puStack80 = 0x449138;\n                        fcn.00416ec4();\n                        puStack80 = 0x449145;\n                        *NULL = fcn.0044806c();\n                    }\n                    if (stack0xfffffff0 != 0) {\n                        puStack80 = 0x44915c;\n                        fcn.00416ec4();\n                        puStack80 = 0x449169;\n                        iVar9 = fcn.0044809c();\n                        if (iVar9 == 0) {\n                            puStack80 = 0x449177;\n                            fcn.00416ec4();\n                            puStack80 = 0x449184;\n                            fcn.0044809c();\n                        }\n                        if (*(**0x46fbf8 + 0x6c) != 0) {\n                            if ((*(*(**0x46fbf8 + 0x6c) + 0x228) & 8) == 0) {\n                                puStack80 = 0x4491dd;\n                                fcn.00455a08();\n                            }\n                            else {\n                                puStack80 = 0x4491ca;\n                                fcn.00455a70();\n                            }\n                        }\n                        goto code_r0x0044949d;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n    }\n    else if (iVar9 == 0x117) {\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x449034;\n                fcn.00416ec4();\n                puStack80 = 0x44903c;\n                cVar3 = fcn.00448128();\n                if (cVar3 != '\\0') goto code_r0x0044949d;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    else if (iVar9 == 0x11f) {\n        uVar1 = *(param_2 + 6);\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                if (((uVar1 & 0x10) != 0) && (param_2[2] != 0)) {\n                    puStack80 = *(param_2 + 1);\n                    uStack88 = 0x449081;\n                    uStack76 = param_2[2];\n                    sub.user32.dll_GetSubMenu();\n                }\n                puStack80 = 0x4490a0;\n                fcn.00416ec4();\n                puStack80 = 0x4490ab;\n                iVar10 = fcn.0044806c();\n                if (iVar10 != 0) {\n                    puStack80 = 0x4490c2;\n                    fcn.00431d64();\n                    puStack80 = 0x4490d1;\n                    fcn.00455d64();\n                    goto code_r0x0044949d;\n                }\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n        puStack80 = 0x4490e8;\n        fcn.00455d64();\n    }\n    else {\n        puStack68 = &stack0xfffffffc;\n        if ((iVar9 == 0x120) &&\n           (iVar9 = *(in_EAX + 8),  puStack68 = &stack0xfffffffc,  puVar2 = &stack0xfffffffc,  -1 < iVar9 + -1)) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x449452;\n                piVar4 = fcn.00416ec4();\n                puStack80 = 0x44945d;\n                iVar10 = (**(*piVar4 + 0x34))();\n                if (iVar10 == param_2[2]) {\ncode_r0x00449473:\n                    puStack80 = 0x44947d;\n                    fcn.0044896c();\n                    goto code_r0x0044949d;\n                }\n                puStack80 = 0x44946f;\n                iVar10 = fcn.0044806c();\n                if (iVar10 != 0) goto code_r0x00449473;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    puStack80 = param_2[2];\n    puStack84 = param_2[1];\n    uStack88 = *param_2;\n    uStack76 = *(in_EAX + 0x10);\n    puStack96 = 0x44949a;\n    iVar9 = sub.user32.dll_DefWindowProcA();\n    param_2[3] = iVar9;\ncode_r0x0044949d:\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x4494ba;\n    uStack72 = 0x4494b2;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 2894
    },
    "004494c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004494c4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 8) == 0) {\n        uVar1 = fcn.0041d9c8(fcn.00448f34, in_EAX);\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.00416d68();\n    return;\n}\n",
        "token_count": 99
    },
    "004495d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004495d4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x46fc24 + 0xd) != '\\0') && (*(in_EAX + 0x41) != '\\0')) {\n        iVar1 = fcn.0044421c();\n        if (iVar1 == 0) {\n            fcn.00448b8c();\n            *(in_EAX + 0x41) = 1;\n        }\n        else {\n            fcn.00448b8c();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0044961c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0044961c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(*0x46fc24 + 0xd) != '\\0') {\n        if (*(in_EAX + 0x41) == '\\0') {\n            uVar2 = *(in_EAX + 0x30) == '\\x01';\n        }\n        else {\n            iVar1 = fcn.0044421c();\n            if (iVar1 == 0) {\n                uVar2 = fcn.004545b4();\n            }\n            else {\n                uVar2 = fcn.0040344c();\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 173
    },
    "00449840": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449840(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    fcn.00403fdc();\n    iVar3 = 1;\n    do {\n        iVar2 = fcn.00404248();\n        if (iVar2 < iVar3) {\n            return;\n        }\n        uVar1 = *(*param_2 + -1 + iVar3);\n        if ((*(*0x46fc08 + (uVar1 >> 3)) >> (uVar1 & 7) & 1) == 0) {\n            if (uVar1 == 0x26) {\n                if ((*(*0x46fc24 + 0xc) != '\\0') && (1 < iVar3)) {\n                    iVar2 = fcn.00404248();\n                    if ((1 < iVar2 - iVar3) && ((*(*param_2 + -2 + iVar3) == '(' && (*(*param_2 + 1 + iVar3) == ')'))))\n                    {\n                        fcn.004044e8();\n                        goto code_r0x004498c5;\n                    }\n                }\n                fcn.004044e8();\n            }\n        }\n        else {\n            iVar3 = iVar3 + 1;\n        }\ncode_r0x004498c5:\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 316
    },
    "0044c3f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044c3f4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if ((arg_8h != *0x464c5c) && (arg_8h != *(*0x470bb4 + 0x30))) {\n        iVar1 = sub.user32.dll_IsWindowVisible(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = sub.user32.dll_IsWindowEnabled(arg_8h);\n            if (iVar1 != 0) {\n                uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n                if ((uVar2 & 8) == 0) {\n                    if (*0x464c60 == 0) {\n                        *0x464c60 = arg_8h;\n                    }\n                }\n                else if (*0x464c64 == 0) {\n                    *0x464c64 = arg_8h;\n                }\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 236
    },
    "0044c458": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0044c458(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    *0x464c60 = 0;\n    *0x464c64 = 0;\n    *0x464c5c = in_EAX;\n    uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0044c3f4, 0);\n    sub.user32.dll_EnumThreadWindows(uVar1);\n    if (*0x464c60 != 0) {\n        return *0x464c60;\n    }\n    return *0x464c64;\n}\n",
        "token_count": 136
    },
    "0044c854": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044c854(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x18) == '\\0') {\n        cVar1 = fcn.0044ca0c();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.004352ac();\n            if (cVar1 == '\\0') {\n                fcn.0044cf5c();\n            }\n            else {\n                fcn.0044cf5c();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0044c88c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044c88c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        cVar1 = *(in_EAX + 0x5b);\n        if ((cVar1 == '\\0') || (cVar1 == '\\x03')) {\n            if ((*(in_EAX + 0x5b) == '\\x03') || (*0x44c8f4 == (*0x44c8f0 & *(in_EAX + 0x61)))) {\n                uVar2 = fcn.00425290();\n                *(arg_8h + -4) = uVar2;\n            }\n        }\n        else if (cVar1 == '\\x04') {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x48);\n        }\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "0044c8f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044c8f8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        if (*(in_EAX + 0x5b) < 2) {\n            if ((*(in_EAX + 0x5b) == '\\x01') || (*0x44c95c == (*0x44c958 & *(in_EAX + 0x61)))) {\n                uVar1 = fcn.00425290();\n                *(arg_8h + -4) = uVar1;\n            }\n        }\n        else if (*(in_EAX + 0x5b) == 2) {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x4c);\n        }\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "0044c960": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044c960(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 4) + 0x84) != '\\0') {\n        cVar1 = (**(**(in_EAX + 4) + 200))();\n        if (cVar1 == '\\0') {\n            fcn.0044d094();\n        }\n        else {\n            iVar2 = fcn.00438150();\n            if (-1 < iVar2 + -1) {\n                do {\n                    if (*(in_EAX + 0x18) == '\\0') {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.00438114();\n                        fcn.0044c88c(puVar3);\n                    }\n                    else {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.00438114();\n                        fcn.0044c8f8(puVar3);\n                    }\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            fcn.0044d094();\n        }\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "0044ca0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044ca0c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (*(in_EAX + 0x18) == '\\x01') {\n        uVar3 = 0x200000;\n    }\n    if (*(in_EAX + 0x1c) != '\\0') {\n        uVar1 = fcn.0043b420(0xfffffff0);\n        uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n        if ((uVar2 & uVar3) != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 170
    },
    "0044ca78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044ca78(int32_t arg_8h)\n\n{\n    char cVar1;\n    ushort in_DX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (*(arg_8h + -5) == '\\0') {\n        if ((*(arg_8h + -6) != '\\0') && (cVar1 = fcn.0044ca44(arg_8h),  cVar1 == '\\0')) {\n            iVar2 = (***0x46f870)(in_DX);\n            return -(iVar2 - *(arg_8h + -0xc));\n        }\n        if ((*(arg_8h + -6) == '\\0') && (cVar1 = fcn.0044ca44(arg_8h),  cVar1 != '\\0')) {\n            iVar2 = (***0x46f870)(in_DX);\n            iVar2 = iVar2 - *(arg_8h + -0xc);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 225
    },
    "0044cbec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044cbec(uint param_1, uint32_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1f) == '\\0') || (3 < *(param_2 + 4))) {\n        uVar3 = *(param_2 + 4);\n    // switch table (8 cases) at 0x44cdbd\n        switch(*(param_2 + 4)) {\n        case 0:\n            uVar3 = fcn.0044cf5c();\n            break;\n        case 1:\n            uVar3 = fcn.0044cf5c();\n            break;\n        case 2:\n            fcn.0044caf4();\n            uVar3 = fcn.0044cf5c();\n            break;\n        case 3:\n            fcn.0044caf4();\n            uVar3 = fcn.0044cf5c();\n            break;\n        case 4:\n            if (*(in_EAX + 0x14) < 0x8000) {\n                uVar3 = fcn.0044cf5c();\n            }\n            else {\n                fcn.0044cb8c(&stack0xfffffffc);\n                uVar3 = fcn.0044cf5c();\n            }\n            break;\n        case 5:\n            uVar3 = in_EAX;\n            if (*(in_EAX + 0x1d) != '\\0') {\n                if (*(in_EAX + 0x14) < 0x8000) {\n                    uVar3 = fcn.0044cf5c();\n                }\n                else {\n                    fcn.0044cb8c(&stack0xfffffffc);\n                    uVar3 = fcn.0044cf5c();\n                }\n            }\n            break;\n        case 6:\n            uVar3 = fcn.0044cf5c();\n            break;\n        case 7:\n            uVar3 = fcn.0044cf5c();\n        }\n    }\n    else {\n        if (*(param_2 + 4) < 2) {\n            iVar5 = *(in_EAX + 0x40);\n            uVar3 = *(in_EAX + 8) / iVar5;\n            var_10h = *(in_EAX + 8) % iVar5;\n        }\n        else if (*(param_2 + 4) - 2 < 2) {\n            iVar5 = *(in_EAX + 0x3c);\n            var_10h = *(in_EAX + 10) % iVar5;\n            uVar3 = *(in_EAX + 10) / iVar5;\n        }\n        else {\n            iVar5 = 0;\n            uVar3 = 0;\n            var_10h = 0;\n        }\n        iVar2 = 0;\n        for (; 0 < iVar5; iVar5 = iVar5 + -1) {\n            iVar4 = fcn.00406ad0();\n            if (iVar4 - iVar2 < *(in_EAX + 0x20)) {\n                sub.kernel32.dll_Sleep_1(*(in_EAX + 0x20) - (iVar4 - iVar2));\n            }\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                fcn.0044cf5c();\n            }\n            else if (iVar1 == 1) {\n                fcn.0044cf5c();\n            }\n            else if (iVar1 == 2) {\n                fcn.0044cf5c();\n            }\n            else if (iVar1 == 3) {\n                fcn.0044cf5c();\n            }\n            uVar3 = (**(**(in_EAX + 4) + 0x88))();\n            iVar2 = iVar4;\n        }\n        if (0 < var_10h) {\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                uVar3 = fcn.0044cf5c();\n            }\n            else if (iVar1 == 1) {\n                uVar3 = fcn.0044cf5c();\n            }\n            else if (iVar1 == 2) {\n                uVar3 = fcn.0044cf5c();\n            }\n            else {\n                uVar3 = param_2 & 0xffff0000 | iVar1 - 3U;\n                if (iVar1 - 3U == 0) {\n                    uVar3 = fcn.0044cf5c();\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1067
    },
    "0044cf5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044cf5c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    if ((*(*(in_EAX + 4) + 0x1c) & 2) == 0) {\n        iVar1 = *(in_EAX + 0x14);\n        if ((param_2 <= iVar1) && (iVar1 = param_2,  param_2 < 0)) {\n            iVar1 = 0;\n        }\n        bVar3 = *(in_EAX + 0x18) != '\\0';\n        if (iVar1 != *(in_EAX + 0xc)) {\n            *(in_EAX + 0xc) = iVar1;\n            if (*(in_EAX + 0x18) == '\\0') {\n                fcn.0043afd8();\n            }\n            else {\n                fcn.0043afd8();\n            }\n            if ((((*(*(in_EAX + 4) + 0x1c) & 0x10) != 0) && (iVar1 = fcn.0044c6cc(),  iVar1 != 0)) &&\n               (*(iVar1 + 0x250) != 0)) {\n                (**(**(iVar1 + 0x250) + 0xc))();\n            }\n        }\n        uVar2 = fcn.0043b420(bVar3);\n        iVar1 = (***0x46f900)(uVar2);\n        if (iVar1 != *(in_EAX + 0xc)) {\n            uVar2 = fcn.0043b420(bVar3, *(in_EAX + 0xc), 0xffffffff);\n            (***0x46fbe4)(uVar2);\n        }\n    }\n    else {\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 428
    },
    "0044d0d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d0d8(int32_t arg_8h)\n\n{\n    char in_AL;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t arg_14h;\n    \n    piVar3 = arg_8h + -4;\n    arg_14h = -(in_AL != '\\0');\n    uVar4 = *(*(*piVar3 + 0x34) * 4 + 0x464ca4);\n    uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x464c7c);\n    uVar1 = fcn.0043b420();\n    fcn.00426eb8(uVar1, uVar2, uVar4, arg_14h);\n    if (0 < *(*piVar3 + 0x24)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x24);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x464c80);\n        uVar1 = fcn.0043b420();\n        fcn.00426eb8(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x38)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x38);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x464c84);\n        uVar1 = fcn.0043b420();\n        fcn.00426eb8(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x30)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x30);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x464c88);\n        uVar1 = fcn.0043b420();\n        fcn.00426eb8(uVar1, uVar2, uVar4, uVar5);\n    }\n    uVar5 = 0;\n    uVar2 = fcn.0041f420();\n    uVar4 = *(*(*piVar3 + 0x18) * 0x14 + 0x464c8c);\n    uVar1 = fcn.0043b420();\n    fcn.00426eb8(uVar1, uVar4, uVar2, uVar5);\n    return;\n}\n",
        "token_count": 604
    },
    "0044d1e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044d1e0(uint param_1, uchar param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_16h;\n    int32_t var_12h;\n    uint var_eh;\n    uint var_ah;\n    int32_t var_6h;\n    \n    *(in_EAX + 0x14) = 0;\n    cVar1 = *(in_EAX + 0x18);\n    var_6h._1_1_ = param_2;\n    unique0x100000a4 = in_EAX;\n    if (*(in_EAX + 0x1c) != '\\0') {\n        iVar2 = fcn.0044caf4();\n        iVar2 = *(stack0xfffffff8 + 0x10) - iVar2;\n        *(stack0xfffffff8 + 0x14) = iVar2;\n        if (iVar2 < 0) {\n            *(stack0xfffffff8 + 0x14) = 0;\n        }\n    }\n    var_22h = 0x1c;\n    var_1eh = 0x17;\n    var_1ah = 0;\n    if (*(stack0xfffffff8 + 0x14) < 1) {\n        var_16h = 0;\n    }\n    else {\n        var_16h = *(stack0xfffffff8 + 0x10);\n    }\n    var_12h = fcn.0044caf4();\n    var_12h = var_12h + 1;\n    var_eh = *(stack0xfffffff8 + 0xc);\n    var_ah = var_eh;\n    fcn.0044d0d8(&stack0xfffffffc);\n    *(stack0xfffffff8 + 0x44) = 0;\n    uVar3 = fcn.0043b420(cVar1 == '\\x01', &var_22h, 0xffffffff);\n    (***0x46fa18)(uVar3);\n    fcn.0044cf5c();\n    iVar2 = fcn.0044caf4();\n    uVar4 = (iVar2 * 9) / 10;\n    *(stack0xfffffff8 + 10) = uVar4;\n    if (*(stack0xfffffff8 + 0x1f) != '\\0') {\n        *(stack0xfffffff8 + 8) = (uVar4 & 0xffff) / 10;\n    }\n    return;\n}\n",
        "token_count": 603
    },
    "0044d3bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d3bc(void)\n\n{\n    char cVar1;\n    uint arg_8h;\n    \n    fcn.004383d8();\n    if (*(*0x46fc24 + 0xd) == '\\0') {\n        cVar1 = fcn.0040bddc();\n        if (cVar1 == '\\0') {\n            arg_8h = fcn.0043b420();\n            fcn.00426eec(arg_8h);\n        }\n    }\n    fcn.0044d5d4();\n    return;\n}\n",
        "token_count": 124
    },
    "0044d43c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d43c(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00403220();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar4 = fcn.00434658();\n    iVar5 = *(in_EAX + 0x208);\n    cVar2 = fcn.0044ca0c();\n    if ((cVar2 == '\\0') || (*(iVar5 + 0x10) <= iVar4)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        fcn.0044cf5c();\n    }\n    iVar5 = fcn.00438150();\n    if (-1 < iVar5 + -1) {\n        do {\n            fcn.00438114();\n            fcn.00438114();\n            fcn.00416d68();\n            fcn.004343c4();\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    iVar5 = *(iVar3 + 8);\n    if (-1 < iVar5 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00416ec4();\n            fcn.00435dec(arg_8h);\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    if (bVar1) {\n        fcn.0044c854();\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00403250();\n    return;\n}\n",
        "token_count": 432
    },
    "0044d554": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d554(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x214) < 1) {\n        fcn.0044c960();\n        fcn.0044c960();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "0044d5d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d5d4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x218) == '\\0') {\n        puStack12 = 0x44d5f3;\n        var_4h = in_EAX;\n        cVar1 = fcn.0043b724();\n        if (cVar1 != '\\0') {\n            uStack16 = 0x44d6bf;\n            uStack20 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffec;\n            *(var_4h + 0x218) = 1;\n            puStack12 = &stack0xfffffffc;\n            cVar1 = fcn.0044cb74();\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.0044cb74();\n                if (cVar1 == '\\0') {\n                    fcn.0044d1e0();\n                    fcn.0044d1e0();\n                }\n                else {\n                    fcn.0044d1e0();\n                    fcn.0044d1e0();\n                }\n            }\n            else {\n                fcn.0044d1e0();\n                fcn.0044d1e0();\n            }\n            *in_FS_OFFSET = uStack20;\n            *(var_4h + 0x218) = 0;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "0044dde4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0044dde4(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.0044d2f8();\n    *(in_EAX + 0x50) = *0x44df58;\n    fcn.004343c4();\n    fcn.004343e8();\n    fcn.00434410();\n    fcn.00434434();\n    piVar2 = fcn.00424824();\n    *(in_EAX + 0x240) = piVar2;\n    (***0x46f870)(0x31);\n    (**(*piVar2 + 0x40))();\n    (***0x46f870)();\n    (**(**(in_EAX + 0x240) + 0x34))();\n    iVar1 = *(in_EAX + 0x240);\n    *(iVar1 + 0x14) = in_EAX;\n    *(iVar1 + 0x10) = fcn.0044e700;\n    uVar3 = fcn.004201fc();\n    *(in_EAX + 0x238) = uVar3;\n    fcn.00433830();\n    *(in_EAX + 0x228) = *0x44df5c;\n    *(in_EAX + 0x229) = 2;\n    *(in_EAX + 0x22b) = 0;\n    *(in_EAX + 0x231) = 3;\n    *(in_EAX + 0x244) = 0;\n    *(in_EAX + 0x25c) = *(*0x470bb8 + 0x40);\n    *(in_EAX + 0x235) = 1;\n    uVar3 = fcn.00403198();\n    *(in_EAX + 0xb8) = uVar3;\n    *(in_EAX + 0x2e1) = 0xff;\n    *(in_EAX + 0x2ec) = 0;\n    fcn.0044ea64();\n    fcn.00434e08();\n    fcn.00434d70();\n    fcn.0043b560();\n    fcn.004530c8();\n    *(in_EAX + 0x2e4) = 10;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = 0x32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 642
    },
    "0044dfc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0044dfc8(void)\n\n{\n    char cVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    int32_t *var_5h;\n    \n    puStack16 = 0x44dfd3;\n    *NULL = fcn.004035c4();\n    var_5h._0_1_ = extraout_DL;\n    if ((*(*NULL + 7) & 8) == 0) {\n        puStack16 = 0x44dfee;\n        (**(***0x46fbec + 0x14))();\n    }\n    uStack20 = 0x44e092;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(stack0xfffffff8 + 0x8d) != '\\0') {\n        puStack16 = &stack0xfffffffc;\n        (**(*stack0xfffffff8 + 0xd8))();\n    }\n    fcn.004508ec();\n    cVar1 = fcn.0043b724();\n    if (cVar1 != '\\0') {\n        (**(*stack0xfffffff8 + 0xac))();\n    }\n    fcn.00453100();\n    fcn.00403250();\n    fcn.00403250();\n    fcn.0040cf00();\n    fcn.0044d370();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x44e099;\n    uStack20 = 0x44e091;\n    (**(***0x46fbec + 0x18))();\n    return;\n}\n",
        "token_count": 397
    },
    "0044e0ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e0ac(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x2d2) != 0) {\n        uStack28 = 0x44e0ed;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        (**(in_EAX + 0x2d0))();\n        *in_FS_OFFSET = uStack32;\n    }\n    if ((*(in_EAX + 0x2f4) & 2) != 0) {\n        puStack24 = 0x44e122;\n        fcn.0044ea64();\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "0044e128": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e128(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x2da) != 0) {\n        uStack28 = 0x44e169;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        (**(in_EAX + 0x2d8))();\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0044e2d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e2d0(void)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x44e2e3;\n    fcn.00437cb8();\n    uStack24 = 0x44e526;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(in_EAX + 0x268) = 0;\n    *(in_EAX + 0x26c) = 0;\n    *(in_EAX + 0x270) = 0;\n    bVar1 = false;\n    *(in_EAX + 0x234) = *0x470665 ^ 1;\n    puStack20 = &stack0xfffffffc;\n    fcn.00437414();\n    if ((*(in_EAX + 0x25c) != 0) && (0 < *(in_EAX + 0x270))) {\n        if (((*(in_EAX + 0x98) & 0x10) != 0) && (*(in_EAX + 0x25c) != *(*0x470bb8 + 0x40))) {\n            uVar2 = fcn.0041fac0(*(*0x470bb8 + 0x40), *(in_EAX + 0x25c));\n            sub.kernel32.dll_MulDiv(uVar2);\n            fcn.0041fac8();\n        }\n        *(in_EAX + 0x25c) = *(*0x470bb8 + 0x40);\n        iVar3 = fcn.0044e658();\n        if (iVar3 != *(in_EAX + 0x270)) {\n            bVar1 = true;\n            fcn.0044d838();\n            fcn.0043aee4();\n            if ((*(in_EAX + 0x98) & 4) != 0) {\n                uVar2 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x268), iVar3, *(in_EAX + 0x270));\n                *(in_EAX + 0x268) = uVar2;\n            }\n            if ((*(in_EAX + 0x98) & 8) != 0) {\n                uVar2 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x26c) = uVar2;\n            }\n            if ((*(in_EAX + 0x98) & 0x20) != 0) {\n                uVar2 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x1fa), iVar3, *(in_EAX + 0x270));\n                *(in_EAX + 0x1fa) = uVar2;\n                uVar2 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x1fe) = uVar2;\n            }\n        }\n    }\n    if (0 < *(in_EAX + 0x268)) {\n        fcn.00434670();\n    }\n    if (0 < *(in_EAX + 0x26c)) {\n        fcn.004346b4();\n    }\n    *(in_EAX + 0x98) = *0x44e534;\n    if (!bVar1) {\n        fcn.0044d838();\n        fcn.0043aee4();\n    }\n    uVar2 = 0;\n    fcn.00435dec(0);\n    *in_FS_OFFSET = uVar2;\n    fcn.00437cc0(0x44e52d);\n    return;\n}\n",
        "token_count": 839
    },
    "0044e700": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e700(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (**0x46f90c == '\\0') {\n        uVar2 = fcn.0043b420();\n        iVar3 = sub.user32.dll_IsIconic(uVar2);\n        if (iVar3 != 0) {\n            (**(*in_EAX + 0x7c))();\n        }\n    }\n    else {\n        cVar1 = fcn.0043b724();\n        if ((cVar1 != '\\0') && (*(in_EAX + 0x229) != '\\x03')) {\n            uVar2 = fcn.00450a60();\n            uVar2 = fcn.0043b420(0x80, 1, uVar2);\n            sub.user32.dll_SendMessageA(uVar2);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "0044e76c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044e76c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x210) == '\\0') && (*(*(in_EAX + 0x208) + 0x10) == 0)) && (*(*(in_EAX + 0x20c) + 0x10) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 98
    },
    "0044eaa8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044eaa8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x44eb01;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    if ((*(in_EAX + 0x22f) == '\\x01') && (*(in_EAX + 0x57) != '\\0')) {\n        fcn.00405d0c();\n        fcn.0040b564();\n        fcn.004039c4();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x44eb08;\n    uStack16 = 0x44eb00;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 221
    },
    "0044eb48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044eb48(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0041ccec(arg_8h);\n    if (*(in_EAX + 0x250) != 0) {\n        (**(**(in_EAX + 0x250) + 0x2c))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0044eb88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044eb88(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack80;\n    uint uStack76;\n    uchar *puStack72;\n    int32_t *piStack64;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = *param_2;\n    if (iVar5 < 0x47) {\n        if (iVar5 == 0x46) {\n            if (*0x44efbc == (*(in_EAX + 0x1c) & *0x44efb8)) {\n                if ((*(in_EAX + 0x230) - 1U < 2) && (*(in_EAX + 0x22b) != '\\x02')) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 2;\n                }\n                if (((*(in_EAX + 0x230) == '\\x01') || (*(in_EAX + 0x230) == '\\x03')) &&\n                   ((*(in_EAX + 0x229) == '\\x02' || (*(in_EAX + 0x229) == '\\x05')))) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 1;\n                }\n            }\n            goto code_r0x0044efa4;\n        }\n        if (iVar5 - 6U < 3) {\n            if (*0x464c54 == '\\0') {\n                return;\n            }\n            if ((*param_2 == 7) && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n                iVar5 = 0;\n                if (*(in_EAX + 0x22f) == '\\x02') {\n                    iVar1 = fcn.0044f4b4();\n                    if (iVar1 != 0) {\n                        fcn.0044f4b4();\n                        iVar5 = fcn.0043b420();\n                    }\n                }\n                else if ((*(in_EAX + 0x220) != 0) && (*(in_EAX + 0x220) != in_EAX)) {\n                    iVar5 = fcn.0043b420();\n                }\n                if (iVar5 != 0) {\n                    sub.user32.dll_SetFocus();\n                    return;\n                }\n            }\n            goto code_r0x0044efa4;\n        }\n        if (iVar5 == 0x2b) {\n            piVar2 = param_2[2];\n            if (((*piVar2 == 1) && (*(in_EAX + 0x248) != 0)) && (iVar5 = fcn.0044806c(),  iVar5 != 0)) {\n                fcn.004201fc();\n                *in_FS_OFFSET = &stack0xffffffd0;\n                iVar5 = sub.gdi32.dll_SaveDC();\n                piStack64 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffc0;\n                fcn.004208cc();\n                fcn.0042076c();\n                piVar2 = piVar2 & 0xffff0000 | *(piVar2 + 4);\n                puStack72 = 0x44edbc;\n                fcn.00449758(piVar2);\n                *in_FS_OFFSET = piVar2;\n                piStack64 = 0x44edd3;\n                fcn.004208cc();\n                puStack72 = 0x44ede3;\n                piStack64 = iVar5;\n                sub.gdi32.dll_RestoreDC();\n                return;\n            }\n            goto code_r0x0044efa4;\n        }\n        if (iVar5 == 0x2c) {\n            piVar2 = param_2[2];\n            if (((*piVar2 == 1) && (*(in_EAX + 0x248) != 0)) && (piVar3 = fcn.0044806c(),  piVar3 != NULL)) {\n                fcn.0043b420();\n                uVar4 = sub.user32.dll_GetWindowDC();\n                *in_FS_OFFSET = &stack0xffffffcc;\n                fcn.004201fc();\n                piStack64 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffc0;\n                puStack72 = 0x44ee86;\n                iVar5 = sub.gdi32.dll_SaveDC();\n                uStack76 = 0x44eeeb;\n                piStack80 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb0;\n                puStack72 = &stack0xfffffffc;\n                fcn.004208cc();\n                fcn.0042076c();\n                piVar2 = piVar2 + 4;\n                (**(*piVar3 + 0x38))();\n                *in_FS_OFFSET = piVar2;\n                uStack76 = 0x44eef2;\n                piStack80 = 0x44eedd;\n                fcn.004208cc();\n                piStack80 = iVar5;\n                sub.gdi32.dll_RestoreDC(uVar4);\n                return;\n            }\n            goto code_r0x0044efa4;\n        }\n    }\n    else {\n        if (iVar5 == 0xb01a) {\n            if (*(in_EAX + 0xa0) != 0) {\n                fcn.0040344c();\n            }\n            goto code_r0x0044efa4;\n        }\n        if (iVar5 == 0xb01b) {\n            if (*(in_EAX + 0xa0) != 0) {\n                fcn.0040344c();\n            }\n            goto code_r0x0044efa4;\n        }\n    }\n    if (iVar5 == *0x470bc0) {\n        fcn.00435dec(0);\n        fcn.00435dec(0);\n        fcn.00435dec(0);\n        fcn.00435dec(0);\n        fcn.00435dec(0);\n        piStack64 = 0x44efa4;\n        fcn.00435dec(0);\n    }\ncode_r0x0044efa4:\n    piStack64 = 0x44efae;\n    fcn.00438e34();\n    return;\n}\n",
        "token_count": 1468
    },
    "0044f04c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f04c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff6c;\n    int32_t iStack140;\n    uint *puStack136;\n    uchar *puStack132;\n    uint *puStack128;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_58h;\n    uint var_4ch;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = *param_2;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (iVar2 != 0xf) {\n        if (iVar2 == 0x14) {\n            fcn.004200e0();\n            puStack128 = 0x44f0ba;\n            (**(*var_4h + 0x44))();\n            puStack128 = &fcn.0044f04c::var_6ch;\n            puStack132 = var_8h[1];\n            puStack136 = 0x44f0ca;\n            sub.user32.dll_FillRect();\n            if ((*(var_4h + 0x22f) == '\\x02') && (var_4h[0x95] != 0)) {\n                puStack136 = &fcn.0044f04c::var_5ch;\n                iStack140 = var_4h[0x95];\n                sub.user32.dll_GetClientRect();\n                uVar1 = fcn.004200e0();\n                sub.user32.dll_FillRect(var_8h[1], &fcn.0044f04c::var_5ch, uVar1);\n            }\n            var_8h[3] = 1;\n        }\n        else if (iVar2 == 0x3f) {\n            puStack128 = 0x44f129;\n            fcn.0044efc0(&stack0xfffffffc);\n            if (*(var_4h + 0x22f) == '\\x02') {\n                iVar2 = fcn.0044f4e8();\n                if (iVar2 != 0) {\n                    puStack128 = 0x44f14c;\n                    fcn.0044f00c(&stack0xfffffffc);\n                }\n                fcn.0044c234();\n            }\n        }\n        else if (iVar2 == 0x84) {\n            puStack128 = 0x44f083;\n            fcn.0044efc0(&stack0xfffffffc);\n            if (var_8h[3] == 1) {\n                var_8h[3] = -1;\n            }\n        }\n        else {\n            puStack128 = 0x44f227;\n            fcn.0044efc0(&stack0xfffffffc);\n        }\n        return;\n    }\n    var_ch = param_2[1];\n    if (var_ch == 0) {\n        puStack128 = in_EAX[0x95];\n        puStack132 = 0x44f18c;\n        iVar2 = sub.user32.dll_BeginPaint();\n        var_8h[1] = iVar2;\n    }\n    puStack136 = 0x44f21a;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &stack0xfffffffc;\n    if (var_ch == 0) {\n        in_stack_ffffff6c = var_4h[0x95];\n        puStack132 = &stack0xfffffffc;\n        sub.user32.dll_GetWindowRect(in_stack_ffffff6c, &fcn.0044f04c::var_5ch);\n        fcn.00434798();\n        fcn.00433590();\n    }\n    fcn.004390d4();\n    *in_FS_OFFSET = in_stack_ffffff6c;\n    iStack140 = 0x44f228;\n    if (var_ch == 0) {\n        sub.user32.dll_EndPaint(var_4h[0x95], &fcn.0044f04c::var_4ch);\n    }\n    return;\n}\n",
        "token_count": 965
    },
    "0044f330": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f330(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    if (*(in_EAX + 0x91) == '\\0') {\n        *(in_EAX + 0x91) = 1;\n        uStack16 = 0x44f3ad;\n        uStack20 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack20;\n        var_4h = in_EAX;\n        if (*(in_EAX + 0x18) != '\\0') {\n            if (in_EAX[0xc] == 0) {\n                puStack12 = &stack0xfffffffc;\n                (**(*in_EAX + 0x70))();\n            }\n            else {\n                (**(*in_EAX + 0x70))();\n            }\n            (**(*var_4h + 0x6c))();\n        }\n        *in_FS_OFFSET = uStack20;\n        *(var_4h + 0x91) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "0044f4b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044f4b4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) {\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x254), 0x229, 0, 0);\n        uVar1 = fcn.00431ae0();\n    }\n    return uVar1;\n}\n",
        "token_count": 123
    },
    "0044f4e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0044f4e8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) && (iVar1 = fcn.00453058(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.00453044();\n            if (*(iVar2 + 0x22f) == '\\x01') {\n                iVar3 = iVar3 + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return iVar3;\n}\n",
        "token_count": 182
    },
    "0044f534": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044f534(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) && (iVar1 = fcn.00453058(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.00453044();\n            if ((*(iVar2 + 0x22f) == '\\x01') && (param_2 = param_2 + -1,  param_2 < 0)) {\n                return iVar2;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "0044f6e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f6e0(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x22f)) {\n        if ((param_2 == '\\x01') && (*(in_EAX + 0x230) == '\\0')) {\n            fcn.0044fa44();\n        }\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            fcn.00438978();\n        }\n        cVar1 = *(in_EAX + 0x22f);\n        *(in_EAX + 0x22f) = param_2;\n        if (((param_2 == '\\x02') || (cVar1 == '\\x02')) && (*(in_EAX + 0x1a5) == '\\0')) {\n            fcn.0044fac0();\n            fcn.00434de4();\n        }\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            fcn.00438b14();\n        }\n        if (param_2 == '\\x01') {\n            fcn.0044ea64();\n        }\n    }\n    return;\n}\n",
        "token_count": 288
    },
    "0044f760": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f760(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) {\n        iVar3 = 0;\n        if (*(in_EAX + 0x248) != NULL) {\n            iVar3 = (**(**(in_EAX + 0x248) + 0x34))();\n        }\n        uVar4 = 0;\n        if (*(in_EAX + 600) != 0) {\n            uVar4 = fcn.004451ac();\n        }\n        uVar1 = fcn.0043b420();\n        iVar2 = sub.user32.dll_GetMenu(uVar1);\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x254), 0x230, iVar3, uVar4);\n        if (iVar3 != iVar2) {\n            uVar4 = fcn.0043b420();\n            sub.user32.dll_DrawMenuBar(uVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "0044f828": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044f828(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint *arg_ch;\n    uint arg_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if ((param_2 != 0) && (iVar2 = fcn.00453058(),  -1 < iVar2 + -1)) {\n        do {\n            var_4h = iVar2;\n            iVar2 = fcn.00453044();\n            if ((param_2 == *(iVar2 + 0x248)) && (iVar2 = fcn.00453044(),  in_EAX != iVar2)) {\n                var_ch = *(param_2 + 8);\n                var_8h._0_1_ = 0xb;\n                arg_ch = &var_ch;\n                arg_8h = 0;\n                fcn.00405d0c();\n                fcn.0040b5a0(arg_8h, arg_ch);\n                fcn.004039c4();\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != 0);\n    }\n    if (*(in_EAX + 0x248) != 0) {\n        fcn.004486f8();\n    }\n    if (((*(in_EAX + 0x1c) & 8) != 0) || ((param_2 != 0 && ((*(param_2 + 0x1c) & 8) != 0)))) {\n        param_2 = 0;\n    }\n    *(in_EAX + 0x248) = param_2;\n    if ((param_2 == 0) || ((fcn.0041c94c(),  (*(in_EAX + 0x1c) & 0x10) == 0 && (*(in_EAX + 0x229) == '\\x03')))) {\n        cVar1 = fcn.0043b724();\n        if (cVar1 != '\\0') {\n            uVar4 = fcn.0043b420(0);\n            sub.user32.dll_SetMenu(uVar4);\n        }\n    }\n    else if (((*(*(in_EAX + 0x248) + 0x5c) == '\\0') && (*(in_EAX + 0x22f) != '\\x01')) ||\n            ((*(in_EAX + 0x1c) & 0x10) != 0)) {\n        cVar1 = fcn.0043b724();\n        if (cVar1 != '\\0') {\n            iVar2 = (**(**(in_EAX + 0x248) + 0x34))();\n            arg_8h = fcn.0043b420();\n            iVar3 = sub.user32.dll_GetMenu();\n            if (iVar2 != iVar3) {\n                (**(**(in_EAX + 0x248) + 0x34))();\n                arg_8h = fcn.0043b420();\n                sub.user32.dll_SetMenu();\n            }\n            fcn.0043b420();\n            fcn.004486f8();\n        }\n    }\n    else if ((*(in_EAX + 0x22f) != '\\x01') && (cVar1 = fcn.0043b724(),  cVar1 != '\\0')) {\n        uVar4 = fcn.0043b420(0);\n        sub.user32.dll_SetMenu(uVar4);\n    }\n    if (*(in_EAX + 0x22e) != '\\0') {\n        fcn.004508ec();\n    }\n    fcn.0044f760();\n    *in_FS_OFFSET = arg_8h;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 921
    },
    "0044fa60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0044fa60(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x25c) != 0;\n}\n",
        "token_count": 50
    },
    "0044fb5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044fb5c(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (((param_2 != *(in_EAX + 0x22b)) && (*(in_EAX + 0x22b) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) &&\n       (*(in_EAX + 0x1a6) != '\\0')) {\n        uVar1 = fcn.0043b420(*(param_2 * 4 + 0x464cb8));\n        sub.user32.dll_ShowWindow(uVar1);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "0044fb9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044fb9c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iStack20;\n    \n    if ((*(in_EAX + 0x231) != '\\0') && (*(*0x470bb4 + 0x44) != 0)) {\n        iVar10 = 0;\n        if (*(in_EAX + 0x231) == '\\x02') {\n            iVar10 = fcn.0044f5b4();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if ((*(in_EAX + 0x231) == '\\x03') && (*(*0x470bb8 + 0x68) != 0)) {\n            iVar10 = fcn.0044f5b4();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if (*(in_EAX + 0x231) == '\\x01') {\n            iVar10 = fcn.00453014();\n            iVar10 = *(iVar10 + 4);\n        }\n        iVar1 = fcn.0044f5b4();\n        iVar1 = *(iVar1 + 4);\n        iStack20 = fcn.00453028();\n        if (-1 < iStack20 + -1) {\n            do {\n                iVar2 = fcn.00453014();\n                if (((*(iVar2 + 4) == iVar10) && (iVar10 != iVar1)) && (iVar2 = fcn.00453028(),  -1 < iVar2 + -1)) {\n                    iVar11 = 0;\n                    do {\n                        iVar3 = fcn.00453014(iVar10, iVar1, iVar11);\n                        if (*(iVar3 + 4) == iVar1) {\n                            if (*(in_EAX + 0x8c) == '\\x04') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.00453014(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.00452d18();\n                                fcn.00453014(iVar4);\n                                iVar5 = fcn.00452cfc();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.00453014(iVar4 + iVar3);\n                                fcn.00452ce4();\n                                fcn.00453014();\n                                fcn.00452d30();\n                                (**(*in_EAX + 0x84))();\n                            }\n                            else if (*(in_EAX + 0x8c) == '\\x06') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.00453014(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.00452d18();\n                                fcn.00453014(iVar4);\n                                iVar5 = fcn.00452cfc();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.00453014(iVar4 + iVar3);\n                                fcn.00452ce4();\n                                fcn.00453014();\n                                fcn.00452d30();\n                                (**(*in_EAX + 0x84))();\n                            }\n                            else {\n                                fcn.00453014(iVar10, iVar1, iVar11);\n                                iVar4 = fcn.00452ce4();\n                                iVar3 = in_EAX[0x10];\n                                fcn.00453014();\n                                iVar5 = fcn.00452ce4();\n                                fcn.00453014();\n                                iVar7 = fcn.00452ce4();\n                                fcn.00453014();\n                                iVar8 = fcn.00452d30();\n                                if (iVar7 + iVar8 < in_EAX[0x12] + ((iVar4 + iVar3) - iVar5)) {\n                                    fcn.00453014();\n                                    fcn.00452ce4();\n                                    fcn.00453014();\n                                    fcn.00452d30();\n                                }\n                                fcn.00453014();\n                                iVar3 = fcn.00452d18();\n                                iVar3 = iVar3 + in_EAX[0x11];\n                                fcn.00453014();\n                                iVar4 = fcn.00452d18();\n                                fcn.00453014();\n                                iVar5 = fcn.00452d18();\n                                fcn.00453014();\n                                iVar7 = fcn.00452cfc();\n                                if (iVar5 + iVar7 < (iVar3 - iVar4) + in_EAX[0x13]) {\n                                    fcn.00453014();\n                                    uVar9 = fcn.00452d18();\n                                    fcn.00453014(uVar9);\n                                    fcn.00452cfc();\n                                }\n                                (**(*in_EAX + 0x84))(in_EAX[0x13], in_EAX[0x12]);\n                            }\n                        }\n                        iVar11 = iVar11 + 1;\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n                iStack20 = iStack20 + -1;\n            } while (iStack20 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 1273
    },
    "00450250": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450250(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *extraout_EDX;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff20;\n    uint uStack208;\n    uint uStack204;\n    uchar *puStack200;\n    uint var_b4h;\n    uint var_b0h;\n    uint32_t var_a8h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack200 = &stack0xfffffffc;\n    uStack204 = 0x450379;\n    uStack208 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack208;\n    if ((*(in_EAX + 0x22f) == '\\x01') && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n        if ((*(*0x470bb4 + 0x44) == 0) || (puStack200 = &stack0xfffffffc,  *(*(*0x470bb4 + 0x44) + 0x254) == 0)) {\n            puStack200 = &stack0xfffffffc;\n            fcn.00405d0c();\n            fcn.0040b564();\n            fcn.004039c4();\n            param_2 = extraout_EDX;\n        }\n        var_24h = param_2 + 0x13;\n        var_20h = *param_2;\n        var_1ch = *0x470668;\n        var_18h = param_2[3];\n        var_14h = param_2[4];\n        var_10h = param_2[5];\n        var_ch = param_2[6];\n        var_8h = param_2[1];\n        var_4h = param_2[8];\n        in_stack_ffffff20 = *(*(*0x470bb4 + 0x44) + 0x254);\n        uVar1 = sub.user32.dll_SendMessageA(in_stack_ffffff20, 0x220, 0, &var_24h);\n        *(in_EAX + 0x180) = uVar1;\n        *(in_EAX + 0x2f4) = *(in_EAX + 0x2f4) | 0x10;\n    }\n    else {\n        puVar3 = &var_b0h;\n        for (iVar2 = 0x23; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_a8h = var_a8h & 0xfff7ffff;\n        fcn.004385a8();\n        *(in_EAX + 0x2f4) = *(in_EAX + 0x2f4) & 0xef;\n    }\n    fcn.0045276c();\n    *in_FS_OFFSET = in_stack_ffffff20;\n    fcn.00403f88(0x450380);\n    return;\n}\n",
        "token_count": 763
    },
    "00450554": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00450554(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar4;\n    uint var_4h;\n    \n    *0x464c58 = *0x464c58 + 1;\n    if (*(in_EAX + 0x250) == 0) {\n        if (in_EAX == param_2) {\n            *(in_EAX + 0x220) = 0;\n        }\n        else {\n            *(in_EAX + 0x220) = param_2;\n        }\n    }\n    *(*0x470bb8 + 100) = param_2;\n    *(*0x470bb8 + 0x68) = in_EAX;\n    fcn.00417008();\n    fcn.00416f40();\n    cVar2 = fcn.004033dc();\n    if (cVar2 == '\\0') {\n        *(*0x470bb8 + 0x6c) = 0;\n    }\n    else {\n        *(*0x470bb8 + 0x6c) = in_EAX;\n        fcn.00417008();\n        fcn.00416f40();\n    }\n    if ((*(param_2 + 0x54) & 0x20) != 0) {\n        return 0;\n    }\n    *(param_2 + 0x54) = *(param_2 + 0x54) | *0x4507e0;\n    iVar4 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (in_EAX != *(*0x470bb8 + 0x78)) {\n        if (*(*0x470bb8 + 0x78) != 0) {\n            fcn.0043b420();\n            *(*0x470bb8 + 0x78) = 0;\n            cVar2 = fcn.0044c494();\n            if (cVar2 == '\\0') {\n                fcn.00403a70();\n                return 0;\n            }\n        }\n        *(*0x470bb8 + 0x78) = in_EAX;\n        fcn.0043b420();\n        cVar2 = fcn.0044c494();\n        if (cVar2 == '\\0') {\n            fcn.00403a70();\n            return 0;\n        }\n    }\n    if (*(in_EAX + 0x224) == 0) {\n        *(in_EAX + 0x224) = in_EAX;\n    }\n    if (*(in_EAX + 0x224) != param_2) {\n        while ((*(in_EAX + 0x224) != 0 && (cVar2 = fcn.00437efc(),  cVar2 == '\\0'))) {\n            fcn.0043b420();\n            *(in_EAX + 0x224) = *(*(in_EAX + 0x224) + 0x30);\n            cVar2 = fcn.0044c494();\n            if (cVar2 == '\\0') {\n                fcn.00403a70();\n                return 0;\n            }\n        }\n        while (iVar4 = param_2,  *(in_EAX + 0x224) != param_2) {\n            do {\n                iVar3 = iVar4;\n                iVar4 = *(iVar3 + 0x30);\n            } while (iVar4 != *(in_EAX + 0x224));\n            *(in_EAX + 0x224) = iVar3;\n            fcn.0043b420();\n            cVar2 = fcn.0044c494();\n            if (cVar2 == '\\0') {\n                fcn.00403a70();\n                return 0;\n            }\n        }\n        for (piVar1 = *(param_2 + 0x30); piVar1 != NULL; piVar1 = piVar1[0xc]) {\n            cVar2 = fcn.004033dc();\n            if (cVar2 != '\\0') {\n                (**(*piVar1 + 0xcc))();\n            }\n        }\n        fcn.00435dec(param_2);\n        if ((*(in_EAX + 0x27c) != 0) && (*(in_EAX + 0x27c) != param_2)) {\n            iVar4 = 0;\n            fcn.00435dec(0);\n        }\n    }\n    *in_FS_OFFSET = iVar4;\n    *(param_2 + 0x54) = ~*0x4507e0 & *(param_2 + 0x54);\n    return param_2;\n}\n",
        "token_count": 1056
    },
    "004507e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004507e8(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    uVar1 = fcn.0043b420();\n    sub.user32.dll_SetFocus(uVar1);\n    iVar2 = fcn.0043b420();\n    iVar3 = sub.user32.dll_GetFocus();\n    if (iVar2 == iVar3) {\n        fcn.00435dec(0);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00450838": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450838(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x22e) = param_2;\n    if (*(in_EAX + 0x27c) != 0) {\n        fcn.00435dec(0);\n    }\n    if (param_2 != '\\0') {\n        if ((*(in_EAX + 0x220) == 0) && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n            fcn.0043b848(0, 1);\n            fcn.00450430();\n        }\n        fcn.004508ec();\n        fcn.004507e8();\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0045089c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045089c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x22e) != '\\0') && (*(in_EAX + 0x220) != 0)) {\n        fcn.00435dec(param_2);\n    }\n    if (*(in_EAX + 0x22f) == '\\x02') {\n        iVar1 = fcn.0044f4b4();\n        if (iVar1 != 0) {\n            fcn.0044f4b4();\n            fcn.0045089c();\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "004508ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004508ec(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((((*(in_EAX + 0x2f4) & 8) == 0) && (*(*0x470bb4 + 0x44) != 0)) && (*(*(*0x470bb4 + 0x44) + 0x248) != 0)) &&\n       ((in_EAX != *(*0x470bb4 + 0x44) && ((*(in_EAX + 0x22f) == '\\x01' || (*(*(*0x470bb4 + 0x44) + 0x22f) != '\\x02'))))\n       )) {\n        if (param_2 == '\\0') {\n            fcn.00448cd8();\n        }\n        else {\n            fcn.00448cbc();\n        }\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "00450a7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450a7c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x450a95;\n    fcn.00420540();\n    uStack24 = 0x450b2a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x450ab3;\n    puStack20 = &stack0xfffffffc;\n    fcn.004208cc();\n    uStack36 = 0x450b07;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*(in_EAX + 0x250) == 0) {\n        puStack32 = &stack0xfffffffc;\n        fcn.0040344c();\n    }\n    else {\n        puStack32 = &stack0xfffffffc;\n        (**(**(in_EAX + 0x250) + 0x28))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x450b0e;\n    uStack36 = 0x450b06;\n    fcn.004208cc();\n    return;\n}\n",
        "token_count": 318
    },
    "00450e34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450e34(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (((*(param_2 + 4) == 2) && (*(in_EAX + 0x9b) == '\\x01')) && ((*(in_EAX + 7) & 0x10) == 0)) {\n        uVar1 = fcn.0043b420();\n        iVar2 = sub.user32.dll_IsIconic(uVar1);\n        if (iVar2 == 0) {\n            uVar1 = fcn.0043b420(0, 0, 0, 0, 0, 7);\n            sub.user32.dll_SetWindowPos(uVar1);\n            uVar1 = fcn.0043b420(0xa2, *(param_2 + 4), *(param_2 + 8));\n            sub.user32.dll_PostMessageA(uVar1);\n            if (*(in_EAX + 0x22e) == '\\0') {\n                return;\n            }\n            (**(*in_EAX + 0x54))();\n            fcn.004352e0();\n            return;\n        }\n    }\n    fcn.00436308();\n    return;\n}\n",
        "token_count": 289
    },
    "00450fa8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450fa8(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x451043;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x248) != 0) {\n        iVar2 = 0;\n        if ((*(param_2 + 6) != -1) || (puVar1 = &stack0xfffffffc,  *(param_2 + 4) != 0)) {\n            puVar1 = &stack0xfffffffc;\n            if ((*(param_2 + 6) & 0x10) != 0) {\n                in_stack_ffffffd8 = *(param_2 + 8);\n                sub.user32.dll_GetSubMenu(in_stack_ffffffd8, *(param_2 + 4));\n                puVar1 = puStack24;\n            }\n            puStack24 = puVar1;\n            iVar2 = fcn.0044806c();\n            puVar1 = puStack24;\n        }\n        puStack24 = puVar1;\n        if (iVar2 == 0) {\n            fcn.00455d64();\n            puVar1 = puStack24;\n        }\n        else {\n            fcn.00431d64();\n            fcn.00455d64();\n            puVar1 = puStack24;\n        }\n    }\n    puStack24 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x45104a;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 442
    },
    "00451338": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00451338(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x150) == '\\x01') && (*(in_EAX + 0x158) != 0)) {\n        uVar1 = 1;\n    }\n    else if ((*(in_EAX + 0x150) == '\\0') && (*(in_EAX + 0x154) != 0)) {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 129
    },
    "004513a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004513a4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_10h = 0;\n    uStack56 = 0x4514f5;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_4h = param_2;\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (*(*(param_2 + 8) + 4) == 1) {\n            puStack52 = &stack0xfffffffc;\n            for (iVar2 = fcn.00431ae0(); iVar2 != 0; iVar2 = *(iVar2 + 0x30)) {\n                cVar1 = fcn.00451338();\n                if (cVar1 != '\\0') break;\n            }\n            if (iVar2 == 0) goto code_r0x004514df;\n            fcn.00451370(&fcn.004513a4::var_10h);\n            fcn.00415a68();\n            fcn.0043476c();\n            fcn.00406b3c();\n        }\n        else {\n            var_9h._0_1_ = '\\x01';\n            *NULL = fcn.004512f8(&stack0xfffffffc);\n            if (*NULL == 0) {\n                *NULL = fcn.004512f8(&stack0xfffffffc);\n            }\n            fcn.00415a68();\n            fcn.0043476c();\n            fcn.00406b3c();\n        }\n        if (((*(in_EAX + 0x228) & 8) == 0) || (var_9h != '\\x01')) {\n            if (var_9h == '\\x01') {\n                fcn.00455a08();\n            }\n            else if (var_9h == '\\0') {\n                fcn.004559a0();\n            }\n        }\n        else {\n            fcn.00455a70();\n            fcn.00455a70();\n        }\n    }\ncode_r0x004514df:\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x4514fc;\n    uStack56 = 0x4514f4;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 634
    },
    "004515a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004515a4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    if ((*(in_EAX + 0x2e2) != '\\0') && ((*(*(param_2 + 8) + 8) != 0 || (*(*(param_2 + 8) + 0xc) != 0)))) {\n        fcn.0044f5b4();\n        fcn.00452d7c();\n        fcn.0044f5b4();\n        fcn.00452d7c();\n        fcn.00451578(arg_8h);\n        fcn.0044f5b4();\n        fcn.00452d7c();\n        fcn.00451578(arg_8h_00);\n        fcn.00451578(&stack0xfffffffc);\n        fcn.00451578(&stack0xfffffffc);\n    }\n    fcn.004399bc();\n    return;\n}\n",
        "token_count": 309
    },
    "00451740": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00451740(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    int32_t iStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack52 = &stack0xfffffffc;\n    uStack32 = 0x451caa;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar1 = &stack0xfffffffc;\n    if (((*(in_EAX + 7) & 0x10) == 0) && (puVar1 = &stack0xfffffffc,  (*(in_EAX + 0xbd) & 4) != 0)) {\n        puStack40 = 0x451781;\n        fcn.00405d0c();\n        puStack40 = 0x451790;\n        fcn.0040b564();\n        puStack40 = 0x451795;\n        fcn.004039c4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    puStack40 = 0x45179f;\n    fcn.00455e54();\n    *(in_EAX + 0xbd) = *(in_EAX + 0xbd) | 4;\n    uStack44 = 0x451c8d;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        if (*(in_EAX + 0x1a6) == '\\0') {\n            iStack56 = 0x451b94;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack40 = &stack0xfffffffc;\n            fcn.0040344c();\n            *in_FS_OFFSET = uStack60;\n            if (*(*0x470bb8 + 0x6c) == in_EAX) {\n                puStack52 = 0x451bc2;\n                fcn.004508ec();\n            }\n            if (*(in_EAX + 0x22f) == '\\x01') {\n                puStack52 = 0x451bd6;\n                fcn.00438978();\n            }\n            else if ((*(in_EAX + 0xbd) & 8) == 0) {\n                iVar6 = 0;\n                puStack52 = 0x451c10;\n                iVar4 = fcn.0043b420();\n                puStack52 = 0x451c17;\n                iVar5 = sub.user32.dll_GetActiveWindow();\n                if (iVar4 == iVar5) {\n                    puStack52 = 0x451c23;\n                    puStack52 = fcn.0043b420();\n                    iStack56 = 0x451c29;\n                    iVar4 = sub.user32.dll_IsIconic();\n                    if (iVar4 == 0) {\n                        iStack56 = 0x451c35;\n                        fcn.0043b420();\n                        iStack56 = 0x451c3a;\n                        iVar6 = fcn.0044c458();\n                    }\n                }\n                if (iVar6 == 0) {\n                    iStack56 = 0;\n                    uStack60 = 0x451c6f;\n                    uStack60 = fcn.0043b420();\n                    sub.user32.dll_ShowWindow();\n                }\n                else {\n                    iStack56 = 0x97;\n                    uStack60 = 0;\n                    uVar3 = fcn.0043b420(0, 0, 0, 0);\n                    sub.user32.dll_SetWindowPos(uVar3);\n                    sub.user32.dll_SetActiveWindow(iVar6);\n                }\n            }\n            else {\n                puStack52 = 0x97;\n                iStack56 = 0;\n                uStack60 = 0;\n                uVar3 = fcn.0043b420(0, 0, 0);\n                sub.user32.dll_SetWindowPos(uVar3);\n            }\n        }\n        else {\n            iStack56 = 0x4517f8;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack52 = &stack0xfffffffc;\n            puStack40 = &stack0xfffffffc;\n            fcn.0040344c();\n            *in_FS_OFFSET = uStack60;\n            if ((*(in_EAX + 0x8c) == '\\x04') || ((*(in_EAX + 0x8c) == '\\x06' && (*(in_EAX + 0x22f) == '\\x01')))) {\n                if (*(in_EAX + 0x22f) == '\\x01') {\n                    puStack52 = 0x451854;\n                    fcn.00434658();\n                    puStack52 = 0x451870;\n                    fcn.0043469c();\n                }\n                else {\n                    puStack52 = 0x451889;\n                    fcn.00452fd8();\n                    puStack52 = 0x4518a2;\n                    fcn.00452fcc();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x4518d8;\n                (**(*in_EAX + 0x84))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    iStack56 = 0x4518ed;\n                    fcn.0044fb9c();\n                }\n            }\n            else if (*(in_EAX + 0x8c) - 6U < 2) {\n                iVar4 = *(*0x470bb4 + 0x44);\n                if (*(in_EAX + 0x8c) == '\\a') {\n                    puStack52 = 0x45192e;\n                    cVar2 = fcn.004033dc();\n                    if (cVar2 != '\\0') {\n                        iVar4 = in_EAX[1];\n                    }\n                }\n                if (iVar4 == 0) {\n                    puStack52 = 0x45196e;\n                    fcn.00452fd8();\n                    puStack52 = 0x451987;\n                    fcn.00452fcc();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x4519bd;\n                (**(*in_EAX + 0x84))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    iStack56 = 0x4519d2;\n                    fcn.0044fb9c();\n                }\n            }\n            else if (*(in_EAX + 0x8c) == '\\x05') {\n                if (*(in_EAX + 0x22f) == '\\x01') {\n                    puStack52 = 0x4519f8;\n                    fcn.00434658();\n                    puStack52 = 0x451a14;\n                    fcn.0043469c();\n                }\n                else {\n                    puStack52 = 0x451a2d;\n                    fcn.00453008();\n                    puStack52 = 0x451a46;\n                    fcn.00452ffc();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x451a7c;\n                (**(*in_EAX + 0x84))();\n            }\n            *(in_EAX + 0x8c) = 0;\n            if (*(in_EAX + 0x22f) == '\\x01') {\n                if (*(in_EAX + 0x22b) == '\\x02') {\n                    iStack56 = 0;\n                    uStack60 = 0x451aac;\n                    uStack60 = fcn.0043b420();\n                    sub.user32.dll_SendMessageA(*(*(*0x470bb4 + 0x44) + 0x254), 0x223);\n                    uVar3 = fcn.0043b420(3);\n                    sub.user32.dll_ShowWindow(uVar3);\n                }\n                else {\n                    iStack56 = *(*(in_EAX + 0x22b) * 4 + 0x464cd0);\n                    uStack60 = 0x451af2;\n                    uStack60 = fcn.0043b420();\n                    sub.user32.dll_ShowWindow();\n                    uVar3 = fcn.0043b420(5, 0, in_EAX[0x12] | in_EAX[0x13] << 0x10);\n                    sub.user32.dll_CallWindowProcA(0x40663c, uVar3);\n                    fcn.00434ea4();\n                }\n                uStack60 = *(*(*0x470bb4 + 0x44) + 0x254);\n                sub.user32.dll_SendMessageA();\n            }\n            else {\n                iStack56 = *(*(in_EAX + 0x22b) * 4 + 0x464cd0);\n                uStack60 = 0x451b65;\n                uStack60 = fcn.0043b420();\n                sub.user32.dll_ShowWindow();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack60;\n    *(in_EAX + 0xbd) = *(in_EAX + 0xbd) & 0xfb;\n    return;\n}\n",
        "token_count": 2201
    },
    "00451d38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451d38(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x59) != '\\0') {\n        if (*(param_2 + 4) == 0) {\n            puStack16 = 0x451d64;\n            fcn.0041f70c();\n            uStack20 = 0x451d96;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            (**(**(in_EAX + 0x68) + 8))();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x451d9d;\n            uStack20 = 0x451d95;\n            fcn.00403250();\n            return;\n        }\n        puStack16 = 0x451d56;\n        (**(**(in_EAX + 0x68) + 8))();\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "00451dd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00451dd0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    char cStack12;\n    \n    if ((*(in_EAX + 0xbd) & 8) == 0) {\n        cVar1 = (**(*in_EAX + 0xe4))();\n        if (cVar1 != '\\0') {\n            if (*(in_EAX + 0x22f) == '\\x01') {\n                if ((*(in_EAX + 0x8a) & 2) == 0) {\n                    cStack12 = '\\0';\n                }\n                else {\n                    cStack12 = '\\x03';\n                }\n            }\n            else {\n                cStack12 = '\\x01';\n            }\n            fcn.0040344c();\n            if (cStack12 != '\\0') {\n                if (in_EAX == *(*0x470bb4 + 0x44)) {\n                    fcn.00455554();\n                }\n                else if (cStack12 == '\\x01') {\n                    fcn.00451f70();\n                }\n                else if (cStack12 == '\\x03') {\n                    fcn.0044fb5c();\n                }\n                else {\n                    fcn.0045200c();\n                }\n            }\n        }\n    }\n    else {\n        in_EAX[0x93] = 2;\n    }\n    return;\n}\n",
        "token_count": 306
    },
    "00451f90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00451f90(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x451ffe;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (*(in_EAX + 0x22e) != '\\0') goto code_r0x00451fe8;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x57) == '\\0') {\ncode_r0x00451fc0:\n        puStack16 = puVar1;\n        fcn.00405d0c();\n        fcn.0040b564();\n        fcn.004039c4();\n    }\n    else {\n        cVar2 = (**(*in_EAX + 0x50))();\n        puVar1 = puStack16;\n        if (cVar2 == '\\0') goto code_r0x00451fc0;\n    }\n    fcn.004507e8();\ncode_r0x00451fe8:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x452005;\n    uStack20 = 0x451ffd;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 330
    },
    "00452028": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00452028(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x4522f0;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x45204b;\n    fcn.004334b4();\n    if (*(in_EAX + 0x57) == '\\0') {\n        puStack60 = 0x45205c;\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (((cVar1 != '\\0') && ((*(in_EAX + 0xbd) & 8) == 0)) && (*(in_EAX + 0x22f) != '\\x01')) goto code_r0x00452099;\n    }\n    puStack60 = 0x452085;\n    fcn.00405d0c();\n    puStack60 = 0x452094;\n    fcn.0040b564();\n    puStack60 = 0x452099;\n    fcn.004039c4();\ncode_r0x00452099:\n    puStack60 = 0x45209e;\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        puStack60 = NULL;\n        uStack64 = 0;\n        uStack68 = 0x1f;\n        puStack72 = 0x4520ad;\n        puStack72 = sub.user32.dll_GetCapture();\n        uStack76 = 0x4520b3;\n        sub.user32.dll_SendMessageA();\n    }\n    puStack60 = 0x4520b8;\n    sub.user32.dll_ReleaseCapture();\n    puStack60 = 0x4520c2;\n    fcn.004544c8();\n    uStack64 = 0x4522d3;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    *(in_EAX + 0xbd) = *(in_EAX + 0xbd) | 8;\n    puStack72 = 0x4520df;\n    puStack60 = &stack0xfffffffc;\n    sub.user32.dll_GetActiveWindow();\n    puStack72 = 0x452101;\n    fcn.00416f40();\n    *(*0x470bb8 + 0x78) = in_EAX;\n    puStack72 = 0x452125;\n    fcn.004534f8();\n    puStack72 = 0x452137;\n    fcn.0044c308();\n    uStack76 = 0x4522b1;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack84 = 0x452150;\n    puStack72 = &stack0xfffffffc;\n    fcn.00451f78();\n    uStack88 = 0x452210;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar3 = fcn.0043b420(0xb000, 0, 0);\n    sub.user32.dll_SendMessageA(uVar3);\n    in_EAX[0x93] = 0;\n    do {\n        fcn.004552d4();\n        if (*(*0x470bb4 + 0x9c) == '\\0') {\n            if (in_EAX[0x93] != 0) {\n                fcn.00451ed8();\n            }\n        }\n        else {\n            in_EAX[0x93] = 2;\n        }\n    } while (in_EAX[0x93] == 0);\n    uVar3 = fcn.0043b420(0xb001, 0, 0);\n    sub.user32.dll_SendMessageA();\n    fcn.0043b420();\n    sub.user32.dll_GetActiveWindow();\n    *in_FS_OFFSET = uVar3;\n    fcn.00451f70(0x452217);\n    return;\n}\n",
        "token_count": 1063
    },
    "00452300": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452300(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1a6) != '\\0') && (iVar2 = fcn.00438150(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.00438114();\n            if (((*(piVar3 + 0x51) & 0x80) != 0) && (*(piVar3 + 0x57) != '\\0')) {\n                (**(*piVar3 + 0x78))();\n            }\n            cVar1 = fcn.004033dc();\n            if (cVar1 != '\\0') {\n                fcn.00452300(arg_8h);\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "00452370": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00452370(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (((*(in_EAX + 7) & 0x10) == 0) && (*(in_EAX + 0x1a6) != '\\0')) {\n        (**(*in_EAX + 0x78))();\n        if ((in_EAX[0x92] != 0) && (iVar1 = fcn.00446c18(),  -1 < iVar1 + -1)) {\n            do {\n                piVar2 = fcn.00446c28();\n                if (*(piVar2 + 0x3e) != '\\0') {\n                    (**(*piVar2 + 0x40))();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00452300(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "00452448": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00452448(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1a6) != '\\0') && (iVar2 = fcn.00438150(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.00438114();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.00452418(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004033dc(),  cVar1 != '\\0' && (cVar1 = fcn.00452448(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 234
    },
    "004524c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004524c4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1a6) != '\\0')) {\n        cVar1 = fcn.00452418(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.00452418(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.00452448(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00452548": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00452548(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1a6) != '\\0') && (iVar2 = fcn.00438150(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.00438114();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.00452518(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004033dc(),  cVar1 != '\\0' && (cVar1 = fcn.00452548(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 234
    },
    "004525c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004525c4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1a6) != '\\0')) {\n        cVar1 = fcn.00452518(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.00452518(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.00452548(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "0045266c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045266c(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    unkbyte3 Var3;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x2c2) != 0) {\n        (**(in_EAX + 0x2c0))();\n    }\n    if ((((*(in_EAX + 0x248) == 0) || (*(*(in_EAX + 0x248) + 0x38) == 0)) || (uVar2 = fcn.0040344c(),  uVar2 == '\\0'))\n       && (uVar2 = fcn.00452618(&stack0xfffffffc),  uVar2 == '\\0')) {\n        uVar1 = 0;\n        Var3 = 0;\n    }\n    else {\n        Var3 = uVar2 >> 8;\n        uVar1 = 1;\n    }\n    return CONCAT31(Var3, uVar1);\n}\n",
        "token_count": 233
    },
    "004526e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004526e8(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(arg_8h + 0x250) != 0) && (iVar1 = (****(arg_8h + 0x250))(*(arg_8h + 0x250), arg_ch, arg_10h),  iVar1 == 0)) {\n        return 0;\n    }\n    uVar2 = fcn.0041d00c(arg_8h, arg_ch, arg_10h);\n    return uVar2;\n}\n",
        "token_count": 147
    },
    "0045276c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045276c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x464c50 != NULL)) {\n        cVar1 = fcn.0043b724();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.0043b420(0xffffffec);\n            uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n            if ((*(in_EAX + 0x2e0) == '\\0') && (*(in_EAX + 0x2e8) == '\\0')) {\n                uVar2 = fcn.0043b420(0xffffffec, uVar3 & 0xfff7ffff);\n                sub.user32.dll_SetWindowLongA(uVar2);\n                uVar2 = fcn.0043b420(0, 0, 0x485);\n                sub.user32.dll_RedrawWindow(uVar2);\n            }\n            else {\n                if ((uVar3 & 0x80000) == 0) {\n                    uVar2 = fcn.0043b420(0xffffffec, uVar3 | 0x80000);\n                    sub.user32.dll_SetWindowLongA(uVar2);\n                }\n                uVar3 = *(*(in_EAX + 0x2e0) * 4 + 0x464cdc) | *(*(in_EAX + 0x2e8) * 4 + 0x464ce4);\n                uVar2 = fcn.0043b420(*(in_EAX + 0x2ec), uVar3 & 0xffffff00 | *(in_EAX + 0x2e1), uVar3);\n                (**0x464c50)(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 434
    },
    "00452894": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452894(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x464c50 != 0)) &&\n       ((*(in_EAX + 0x2e0) != '\\0' || (*(in_EAX + 0x2e8) != '\\0')))) {\n        *(param_2 + 8) = *(param_2 + 8) | 0x80000;\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "004528c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.004528c0(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    (**(*in_EAX + 0xe0))();\n    fcn.0044d578();\n    fcn.0044f3e4();\n    fcn.00439ffc();\n    fcn.0044f6e0();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 196
    },
    "00452dac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00452dac(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint uVar4;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041c87c();\n    puVar2 = *0x46f7c0;\n    (*0x46f7c0)[1] = in_EAX;\n    *puVar2 = 0x453150;\n    puVar2 = *0x46f7cc;\n    (*0x46f7cc)[1] = in_EAX;\n    *puVar2 = 0x45315c;\n    fcn.00453168();\n    uVar3 = sub.user32.dll_GetKeyboardLayout(0);\n    *(in_EAX + 0x3c) = uVar3;\n    uVar3 = fcn.00403220();\n    *(in_EAX + 0x4c) = uVar3;\n    uVar3 = fcn.00403220();\n    *(in_EAX + 0x50) = uVar3;\n    uVar3 = fcn.00403220();\n    *(in_EAX + 0x54) = uVar3;\n    uVar3 = fcn.00403220();\n    *(in_EAX + 0x58) = uVar3;\n    uVar3 = fcn.00403220();\n    *(in_EAX + 0x7c) = uVar3;\n    uVar3 = sub.user32.dll_GetDC(0);\n    uVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0x5a);\n    *(in_EAX + 0x40) = uVar4;\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    uVar4 = 0;\n    (***0x46f98c)(0, 0, fcn.0044f584, *(in_EAX + 0x58));\n    uVar3 = fcn.0041f70c();\n    *(in_EAX + 0x84) = uVar3;\n    uVar3 = fcn.0041f70c();\n    *(in_EAX + 0x88) = uVar3;\n    uVar3 = fcn.0041f70c();\n    *(in_EAX + 0x80) = uVar3;\n    fcn.00453588();\n    iVar1 = *(in_EAX + 0x84);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x453464;\n    iVar1 = *(in_EAX + 0x88);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x453464;\n    iVar1 = *(in_EAX + 0x80);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x453464;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uVar4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 780
    },
    "0045307c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045307c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x68) != *(in_EAX + 0x74)) && (*(in_EAX + 0x74) = *(in_EAX + 0x68),  *(in_EAX + 0x9a) != 0)) {\n        (**(in_EAX + 0x98))();\n    }\n    if ((*(in_EAX + 100) != *(in_EAX + 0x70)) && (*(in_EAX + 0x70) = *(in_EAX + 100),  *(in_EAX + 0x92) != 0)) {\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00453100": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453100(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00417008();\n    fcn.00417008();\n    fcn.00455e54();\n    if ((*(*(in_EAX + 0x50) + 8) == 0) && (*(*0x470bb4 + 0x84) != 0)) {\n        fcn.0043c9b4();\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "00453248": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453248(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack672;\n    uint uStack668;\n    uchar *puStack664;\n    uint uStack656;\n    uint uStack636;\n    uint uStack628;\n    uint uStack624;\n    uchar *puStack620;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_214h;\n    uint lpList;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint hKey;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack620 = &stack0xfffffffc;\n    uStack624 = 0x4533f3;\n    uStack628 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd8c;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x34) == 0) {\n        var_4h = in_EAX;\n        uVar3 = fcn.00403220();\n        *(var_4h + 0x34) = uVar3;\n        fcn.00403f88();\n        uStack636 = 0x40;\n        iVar4 = sub.user32.dll_GetKeyboardLayoutList();\n        if (-1 < iVar4 + -1) {\n            var_14h = &fcn.00453248::lpList;\n            var_10h = iVar4;\n            do {\n                cVar2 = fcn.0044015c();\n                if (cVar2 != '\\0') {\n                    uStack656 = 0x453300;\n                    uStack656 = fcn.00408c24(0);\n                    uStack636 = 0x80000002;\n                    puStack664 = 0x45330b;\n                    iVar4 = sub.advapi32.dll_RegOpenKeyExA_1();\n                    if (iVar4 == 0) {\n                        uStack668 = 0x4533af;\n                        uStack672 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xfffffd60;\n                        var_8h = 0x100;\n                        uVar3 = hKey;\n                        puStack664 = &stack0xfffffffc;\n                        iVar4 = sub.advapi32.dll_RegQueryValueExA_1\n                                          (hKey, 0x45343c, 0, 0, &fcn.00453248::var_214h, &fcn.00453248::var_8h);\n                        if (iVar4 == 0) {\n                            fcn.004041f8();\n                            (**(**(var_4h + 0x34) + 0x3c))();\n                            if (*var_14h == *(var_4h + 0x3c)) {\n                                fcn.004041f8();\n                            }\n                        }\n                        *in_FS_OFFSET = uVar3;\n                        sub.advapi32.dll_RegCloseKey_1(hKey, 0x4533b6);\n                        return;\n                    }\n                }\n                var_14h = var_14h + 1;\n                var_10h = var_10h + -1;\n            } while (var_10h != 0);\n        }\n        *(*(var_4h + 0x34) + 0x1d) = 0;\n        fcn.00418a6c();\n        puVar1 = puStack620;\n    }\n    puStack620 = puVar1;\n    *in_FS_OFFSET = uStack636;\n    uStack628 = 0x4533fa;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 840
    },
    "00453588": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00453588(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack464;\n    int32_t iStack424;\n    uint uStack420;\n    uchar *puStack416;\n    uint var_191h;\n    uint var_f1h;\n    uint var_b5h;\n    uint pvParam;\n    uint var_1h;\n    \n    puStack416 = &var_1h + 1;\n    var_1h._0_1_ = 0;\n    if (*0x470bb4 != 0) {\n        var_1h._0_1_ = *(*0x470bb4 + 0x88);\n    }\n    uStack420 = 0x4536cd;\n    iStack424 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack424;\n    puVar1 = &var_1h + 1;\n    if (*0x470bb4 != 0) {\n        fcn.00455a78();\n        puVar1 = puStack416;\n    }\n    puStack416 = puVar1;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x1f, 0x3c, &pvParam, 0);\n    if (iVar2 == 0) {\n        sub.gdi32.dll_GetStockObject(0xd);\n        fcn.0041fa9c();\n    }\n    else {\n        sub.gdi32.dll_CreateFontIndirectA(&pvParam);\n        fcn.0041fa9c();\n    }\n    var_191h = 0x154;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_191h, 0);\n    if (iVar2 == 0) {\n        fcn.0041fb80();\n        puStack464 = 0xd;\n        sub.gdi32.dll_GetStockObject();\n        fcn.0041fa9c();\n    }\n    else {\n        puStack464 = &var_b5h;\n        sub.gdi32.dll_CreateFontIndirectA();\n        fcn.0041fa9c();\n        sub.gdi32.dll_CreateFontIndirectA(&var_f1h);\n        fcn.0041fa9c();\n    }\n    fcn.0041f8e0();\n    fcn.0041f8e0();\n    *in_FS_OFFSET = puStack464;\n    if (*0x470bb4 != 0) {\n        fcn.00455a78(0x4536d4);\n    }\n    return;\n}\n",
        "token_count": 595
    },
    "004536e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004536e4(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x8c) = *(in_EAX + 0x8c) + -1;\n    if ((*(in_EAX + 0x8c) == 0) && ((*(in_EAX + 0x8e) & 0x10) != 0)) {\n        fcn.00453704();\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "0045376c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0045376c(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    char in_DL;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar3 = *(*(arg_8h + -4) + 8) - **(arg_8h + -4);\n    if ((iVar3 < 0) || (in_DL - 3U < 2)) {\n        iVar3 = in_EAX[0x12];\n    }\n    var_10h = *(*(arg_8h + -4) + 0xc) - *(*(arg_8h + -4) + 4);\n    if ((var_10h < 0) || (in_DL - 1U < 2)) {\n        var_10h = in_EAX[0x13];\n    }\n    if ((in_DL == '\\x01') && (*(in_EAX + 0x22b) == '\\x02')) {\n        var_8h = in_EAX[0x10];\n        var_ch = in_EAX[0x11];\n        iVar3 = (***0x46f870)(0x3d);\n    }\n    else {\n        var_8h = **(arg_8h + -4);\n        var_ch = *(*(arg_8h + -4) + 4);\n    }\n    if (in_DL == '\\x01') {\n        piVar1 = *(arg_8h + -4) + 4;\n        *piVar1 = *piVar1 + var_10h;\n    }\n    else if (in_DL == '\\x02') {\n        piVar1 = *(arg_8h + -4) + 0xc;\n        *piVar1 = *piVar1 - var_10h;\n        var_ch = *(*(arg_8h + -4) + 0xc);\n    }\n    else if (in_DL == '\\x03') {\n        **(arg_8h + -4) = **(arg_8h + -4) + iVar3;\n    }\n    else if (in_DL == '\\x04') {\n        piVar1 = *(arg_8h + -4) + 8;\n        *piVar1 = *piVar1 - iVar3;\n        var_8h = *(*(arg_8h + -4) + 8);\n    }\n    (**(*in_EAX + 0x84))(var_10h, iVar3);\n    if (*(in_EAX + 0x22b) == '\\x02') {\n        iVar3 = iVar3 - var_8h;\n        var_10h = var_10h - var_ch;\n    }\n    iVar2 = in_EAX[0x12];\n    if ((iVar3 != iVar2) || (in_EAX[0x13] != var_10h)) {\n    // switch table (6 cases) at 0x4538a8\n        switch(in_DL) {\n        case '\\x01':\n            piVar1 = *(arg_8h + -4) + 4;\n            *piVar1 = *piVar1 - (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x02':\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x03':\n            **(arg_8h + -4) = **(arg_8h + -4) - (iVar3 - iVar2);\n            break;\n        case '\\x04':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            break;\n        case '\\x05':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n        }\n    }\n    return;\n}\n",
        "token_count": 991
    },
    "0045391c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0045391c(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    (**(**(arg_8h + -8) + 8))();\n    if ((((*(arg_8h + -0xc) != 0) && (*(*(arg_8h + -0xc) + 0x30) == 0)) && ((*(*(arg_8h + -0xc) + 0x1c) & 0x10) == 0))\n       && (((*(*(arg_8h + -0xc) + 0x57) != '\\0' && (*(*(arg_8h + -0xc) + 0x5b) == in_AL)) &&\n           (*(*(arg_8h + -0xc) + 0x22b) != '\\x01')))) {\n        fcn.00416d68();\n    }\n    iVar2 = fcn.00453074();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00453060();\n            if (((*(iVar3 + 0x30) == 0) && (*(iVar3 + 0x5b) == in_AL)) &&\n               (((*(iVar3 + 0x1c) & 0x10) == 0 &&\n                (((*(iVar3 + 0x57) != '\\0' && (*(iVar3 + 0x22b) != '\\x01')) && (iVar3 != *(arg_8h + -0xc))))))) {\n                for (iVar3 = 0; iVar3 < *(*(arg_8h + -8) + 8); iVar3 = iVar3 + 1) {\n                    fcn.00416ec4();\n                    cVar1 = fcn.0045370c();\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00416f40();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = *(*(arg_8h + -8) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = arg_8h;\n            fcn.00416ec4();\n            fcn.0045376c(iVar3);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 579
    },
    "00453a68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453a68(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00453074();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00453060();\n            if ((((*(iVar2 + 0x30) == 0) && ((*(iVar2 + 0x1c) & 0x10) == 0)) && (*(iVar2 + 0x5b) != '\\0')) &&\n               ((*(iVar2 + 0x57) != '\\0' && (*(iVar2 + 0x22b) != '\\x01')))) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 199
    },
    "00453b48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453b48(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x8c) != 0) {\n        *(in_EAX + 0x8e) = *(in_EAX + 0x8e) | 0x10;\n        return;\n    }\n    puStack32 = 0x453b76;\n    var_4h = in_EAX;\n    fcn.004536dc();\n    uStack36 = 0x453bc1;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = 0x30;\n    puStack32 = &stack0xfffffffc;\n    sub.user32.dll_SystemParametersInfoA(0x30, 0, &fcn.00453b48::var_14h, 0);\n    fcn.00453ac0();\n    *in_FS_OFFSET = uVar1;\n    *(var_4h + 0x8e) = *(var_4h + 0x8e) & 0xffef;\n    fcn.004536e4(0x453bc8);\n    return;\n}\n",
        "token_count": 311
    },
    "00453bdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453bdc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            if (*(in_EAX + 0x80) != 0) {\n                fcn.00403fdc();\n                return;\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 106
    },
    "00453c14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453c14(void)\n\n{\n    int32_t in_EAX;\n    \n    for (; (in_EAX != 0 && (*(in_EAX + 0x99) == '\\0')); in_EAX = *(in_EAX + 0x30)) {\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "00453c34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453c34(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x470bb4 != 0) {\n        uStack24 = 0x453c65;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        fcn.00456080();\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00453c88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453c88(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    *0x470bc4 = sub.kernel32.dll_GetCurrentThreadId_1();\n    while( true ) {\n        iVar1 = sub.kernel32.dll_WaitForSingleObject();\n        if (iVar1 != 0x102) break;\n        if (*0x470bb4 != 0) {\n            if (*(*0x470bb4 + 0x60) != 0) {\n                sub.user32.dll_GetCursorPos();\n                iVar1 = fcn.004334cc();\n                if (iVar1 == 0) {\n                    fcn.004560fc();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "00453ce4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453ce4(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_CallNextHookEx(*0x470bcc, arg_8h, arg_ch, arg_10h);\n    if ((-1 < arg_8h) && (*0x470bb4 != 0)) {\n        fcn.0045519c();\n    }\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "00453d28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453d28(void)\n\n{\n    uint uStack20;\n    code *pcStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    if (*(*0x470bb4 + 0xa5) == '\\0') {\n        if (*0x470bcc == 0) {\n            uStack8 = 0x453d45;\n            uStack8 = sub.kernel32.dll_GetCurrentThreadId_1();\n            uStack12 = 0;\n            pcStack16 = fcn.00453ce4;\n            uStack20 = 3;\n            *0x470bcc = sub.user32.dll_SetWindowsHookExA();\n        }\n        if (*0x470bc8 == 0) {\n            *0x470bc8 = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n        }\n        if (*0x470bd0 == 0) {\n            *0x470bd0 = sub.kernel32.dll_CreateThread(0, 1000, fcn.00453c88, 0, 0, &stack0xffffffec);\n        }\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "00453d9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00453d9c(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x470bcc != 0) {\n        sub.user32.dll_UnhookWindowsHookEx(*0x470bcc);\n    }\n    *0x470bcc = 0;\n    if (*0x470bd0 != 0) {\n        sub.kernel32.dll_SetEvent(*0x470bc8);\n        iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n        if (iVar1 != *0x470bc4) {\n            sub.kernel32.dll_WaitForSingleObject(*0x470bd0, 0xffffffff);\n        }\n        sub.kernel32.dll_CloseHandle(*0x470bd0);\n        *0x470bd0 = 0;\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "00453df8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00453df8(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint auStack8 [2];\n    \n    auStack8[0] = 8;\n    uVar2 = 8;\n    uVar1 = sub.user32.dll_SystemParametersInfoA(0x48, 8, auStack8, 0);\n    if (uVar1 != 0) {\n        return CONCAT44(uVar2, uVar1 & 0xffffff00 | uVar2 != 0);\n    }\n    return uVar2 << 0x20;\n}\n",
        "token_count": 135
    },
    "00453e90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\ncode * __fastcall fcn.00453e90(uint param_1, char param_2)\n\n{\n    code **ppcVar1;\n    code *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    uint lpFilename;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    var_1h._0_1_ = param_2;\n    fcn.0041c87c();\n    ppcVar1 = *0x46f970;\n    if (*(*0x46f970 + 2) == 0) {\n        (*0x46f970)[1] = in_EAX;\n        *ppcVar1 = fcn.00455568;\n    }\n    ppcVar1 = *0x46fa5c;\n    if (*(*0x46fa5c + 2) == 0) {\n        (*0x46fa5c)[1] = in_EAX;\n        *ppcVar1 = fcn.00455760;\n    }\n    in_EAX[0x34] = 0x0;\n    uVar2 = fcn.00403220();\n    *(in_EAX + 0x90) = uVar2;\n    uVar2 = fcn.00403220();\n    *(in_EAX + 0xa8) = uVar2;\n    *(in_EAX + 0x60) = 0;\n    *(in_EAX + 0x84) = 0;\n    *(in_EAX + 0x5c) = 0xff000018;\n    *(in_EAX + 0x78) = 500;\n    in_EAX[0x7c] = 0x1;\n    *(in_EAX + 0x80) = 0;\n    *(in_EAX + 0x74) = 0x9c4;\n    in_EAX[0x88] = 0x0;\n    in_EAX[0x9d] = 0x1;\n    in_EAX[0xb4] = 0x1;\n    uVar2 = fcn.00424824();\n    *(in_EAX + 0x98) = uVar2;\n    sub.user32.dll_LoadIconA(**0x46f850, 0x454070);\n    fcn.00424bf4();\n    iVar3 = *(in_EAX + 0x98);\n    *(iVar3 + 0x14) = in_EAX;\n    *(iVar3 + 0x10) = 0x455d00;\n    sub.kernel32.dll_GetModuleFileNameA_1(**0x46f850, &lpFilename, 0x100);\n    sub.user32.dll_OemToCharA(&lpFilename, &lpFilename);\n    iVar3 = fcn.0040c35c();\n    if (iVar3 != 0) {\n        fcn.00408618();\n    }\n    puVar4 = fcn.0040c384();\n    if (puVar4 != NULL) {\n        *puVar4 = 0;\n    }\n    sub.user32.dll_CharLowerA();\n    fcn.004041f8();\n    if (**0x46f6bc == '\\0') {\n        fcn.00454198();\n    }\n    in_EAX[0x59] = 0x1;\n    in_EAX[0x5a] = 0x1;\n    in_EAX[0x5b] = 0x1;\n    in_EAX[0x9e] = 0x1;\n    *(in_EAX + 0xa0) = 0;\n    fcn.00455edc();\n    fcn.004568a0();\n    if (var_1h != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = &lpFilename + 1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 928
    },
    "00454198": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454198(void)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_00000030;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_2ch;\n    uint lpWndClass;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x454339;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if ((*(in_EAX + 0xa4) == '\\0') && (**0x46fab4 == '\\0')) {\n        uVar2 = fcn.0041d90c(fcn.00454718, in_EAX);\n        *(in_EAX + 0x40) = uVar2;\n        *0x464d44 = sub.user32.dll_DefWindowProcA;\n        iVar3 = sub.user32.dll_GetClassInfoA(*0x470668, *0x464d64, &fcn.00454198::lpWndClass);\n        if (iVar3 == 0) {\n            *0x464d50 = *0x470668;\n            iVar1 = sub.user32.dll_RegisterClassA(0x464d40);\n            if (iVar1 == 0) {\n                fcn.00405d0c();\n                fcn.0040b564();\n                fcn.004039c4();\n            }\n        }\n        uVar4 = (***0x46f870)(0);\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        uVar4 = (***0x46f870)(1, iVar3);\n        uVar2 = *0x470668;\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        fcn.00404448();\n        uVar2 = fcn.00406bbc(0, uVar2, 0, 0, 0, 0, iVar3, in_stack_00000030);\n        *(in_EAX + 0x30) = uVar2;\n        fcn.00403f88();\n        *(in_EAX + 0xa4) = 1;\n        uStack20 = *(in_EAX + 0x30);\n        sub.user32.dll_SetWindowLongA();\n        if (**0x46f90c != '\\0') {\n            fcn.00454e1c();\n            uStack8 = *(in_EAX + 0x30);\n            uStack12 = 0x4542d2;\n            sub.user32.dll_SendMessageA();\n            uStack12 = 0x4542d9;\n            uStack12 = fcn.00454e1c();\n            uStack16 = 0xfffffff2;\n            uStack20 = *(in_EAX + 0x30);\n            uStack24 = 0x4542e5;\n            sub.user32.dll_SetClassLongA();\n        }\n        uStack24 = 0;\n        uStack28 = *(in_EAX + 0x30);\n        uStack32 = 0x4542f0;\n        uVar2 = sub.user32.dll_GetSystemMenu();\n        uStack32 = 0;\n        uStack36 = 0xf030;\n        lpWndClass = 0x4542ff;\n        uStack40 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        lpWndClass = 0;\n        puStack56 = 0x45430c;\n        uStack64 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        if (**0x46f90c != '\\0') {\n            puStack56 = NULL;\n            uStack60 = 0xf010;\n            uStack64 = uVar2;\n            sub.user32.dll_DeleteMenu();\n        }\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x454340;\n    uStack60 = 0x454338;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 1011
    },
    "004543a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004543a8(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0xffffffff;\n    iVar1 = func_0x00406844(arg_8h, 4);\n    if (iVar1 == *(*0x470bb4 + 0x30)) {\n        uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n        if (((uVar2 & 8) == 0) ||\n           (((*(*0x470bb4 + 0x44) != 0 && (*(arg_ch + 1) == '\\0')) && (iVar1 = fcn.0043b420(),  arg_8h == iVar1)))) {\n            *arg_ch = arg_8h;\n            uVar3 = 0;\n        }\n        else {\n            fcn.00416d68();\n        }\n        return uVar3;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 236
    },
    "00454418": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454418(uint param_1, uchar param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint uStack16;\n    uchar uStack12;\n    \n    if (*(*0x470bb4 + 0x30) != 0) {\n        if (*(in_EAX + 0x94) == 0) {\n            uStack16 = *(in_EAX + 0x30);\n            pcVar4 = fcn.004543a8;\n            uStack12 = param_2;\n            sub.user32.dll_EnumWindows(fcn.004543a8, &uStack16);\n            if (*(*(in_EAX + 0x90) + 8) != 0) {\n                uVar1 = func_0x00406844(pcVar4, 3);\n                uVar2 = sub.user32.dll_GetWindowLongA(uVar1, 0xffffffec, uVar1);\n                if ((uVar2 & 8) != 0) {\n                    uVar1 = 0xfffffffe;\n                }\n                iVar3 = *(*(in_EAX + 0x90) + 8) + -1;\n                if (-1 < iVar3) {\n                    do {\n                        uVar1 = fcn.00416ec4(uVar1, 0, 0, 0, 0, 0x213);\n                        sub.user32.dll_SetWindowPos();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n            }\n        }\n        *(in_EAX + 0x94) = *(in_EAX + 0x94) + 1;\n    }\n    return;\n}\n",
        "token_count": 394
    },
    "004544c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004544c8(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xb8) = *(in_EAX + 0xb8) + 1;\n    if ((*(in_EAX + 0xb8) == 1) && (*(in_EAX + 0xe2) != 0)) {\n        (**(in_EAX + 0xe0))();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "004544f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004544f4(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xb8) = *(in_EAX + 0xb8) + -1;\n    if ((*(in_EAX + 0xb8) == 0) && (*(in_EAX + 0xea) != 0)) {\n        (**(in_EAX + 0xe8))();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00454530": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454530(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (((*(*0x470bb4 + 0x30) != 0) && (0 < *(in_EAX + 0x94))) &&\n       (*(in_EAX + 0x94) = *(in_EAX + 0x94) + -1,  *(in_EAX + 0x94) == 0)) {\n        iVar1 = *(*(in_EAX + 0x90) + 8) + -1;\n        if (-1 < iVar1) {\n            do {\n                fcn.00416ec4(0xffffffff, 0, 0, 0, 0, 0x213);\n                sub.user32.dll_SetWindowPos();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        (**(**(in_EAX + 0x90) + 8))();\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "0045459c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045459c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x46fc24 + 0xd) != '\\0') && (*(in_EAX + 0x34) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 68
    },
    "004545b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004545b4(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x46fc24 + 0xd) != '\\0') && (*(in_EAX + 0x34) == '\\x01')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 69
    },
    "004545cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004545cc(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*param_2 == *0x470bc0) || (*param_2 == 0x1a)) {\n        if (*(in_EAX + 0x59) != '\\0') {\n            sub.kernel32.dll_SetThreadLocale(0x400);\n            fcn.0040c624();\n        }\n        if (*(in_EAX + 0x5a) != '\\0') {\n            fcn.00453588();\n        }\n        if (*param_2 == *0x470bc0) {\n            fcn.00453bd0();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 163
    },
    "00454624": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454624(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x454681;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x13a) != 0) {\n        fcn.00404180();\n        (**(in_EAX + 0x138))(param_2 + 0xc, 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x454688;\n    uStack24 = 0x454680;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 206
    },
    "00454718": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454718(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    code **ppcVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x454dd2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    param_2[3] = 0;\n    iVar8 = *(*(in_EAX + 0xa8) + 8);\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar8 + -1) {\n        do {\n            puStack28 = puVar1;\n            ppcVar3 = fcn.00416ec4();\n            cVar2 = (**ppcVar3)();\n            if (cVar2 != '\\0') {\n                *in_FS_OFFSET = uStack36;\n                return;\n            }\n            iVar8 = iVar8 + -1;\n            puVar1 = puStack28;\n        } while (iVar8 != 0);\n    }\n    fcn.004545cc();\n    iVar8 = *param_2;\n    if (0x53 < iVar8) {\n        if (iVar8 < 0xb018) {\n            if (iVar8 == 0xb017) {\n                if ((*(in_EAX + 0x44) != 0) && (iVar8 = fcn.0043b420(),  iVar8 != 0)) {\n                    uVar6 = fcn.0043b420();\n                    iVar8 = sub.user32.dll_IsWindowEnabled(uVar6);\n                    if (iVar8 != 0) {\n                        uVar6 = fcn.0043b420();\n                        iVar8 = sub.user32.dll_IsWindowVisible(uVar6);\n                        if (iVar8 != 0) {\n                            *0x464c54 = 0;\n                            uVar6 = sub.user32.dll_GetFocus();\n                            uVar7 = fcn.0043b420();\n                            sub.user32.dll_SetFocus(uVar7);\n                            fcn.00435dec(param_2[2]);\n                            sub.user32.dll_SetFocus(uVar6);\n                            *0x464c54 = 1;\n                            param_2[3] = 1;\n                        }\n                    }\n                }\n                goto code_r0x00454dc8;\n            }\n            if (iVar8 < 0xb001) {\n                if (iVar8 == 0xb000) {\n                    if (*(in_EAX + 0x112) != 0) {\n                        (**(in_EAX + 0x110))();\n                    }\n                    goto code_r0x00454dc8;\n                }\n                if (iVar8 == 0x112) {\n                    if ((param_2[1] & 0xfff0U) == 0xf020) {\n                        fcn.00454e38();\n                    }\n                    else if ((param_2[1] & 0xfff0U) == 0xf120) {\n                        fcn.00454ee8();\n                    }\n                    else {\n                        fcn.00454690(&stack0xfffffffc);\n                    }\n                    goto code_r0x00454dc8;\n                }\n                if (iVar8 - 0x132U < 7) {\n                    iVar8 = sub.user32.dll_SendMessageA(param_2[2], iVar8 + 0xbc00, param_2[1], param_2[2]);\n                    param_2[3] = iVar8;\n                    goto code_r0x00454dc8;\n                }\n                if (iVar8 - 0x132U == 0x1e8) {\n                    fcn.0042cf2c();\n                    cVar2 = fcn.0042d00c();\n                    if (cVar2 != '\\0') {\n                        fcn.0042cf2c();\n                        fcn.0042d068();\n                    }\n                    goto code_r0x00454dc8;\n                }\n            }\n            else {\n                if (iVar8 == 0xb001) {\n                    if (*(in_EAX + 0x10a) != 0) {\n                        (**(in_EAX + 0x108))();\n                    }\n                    goto code_r0x00454dc8;\n                }\n                if (iVar8 == 0xb016) {\n                    cVar2 = fcn.004551d0();\n                    if (cVar2 != '\\0') {\n                        param_2[3] = 1;\n                    }\n                    goto code_r0x00454dc8;\n                }\n            }\n        }\n        else if (iVar8 < 0xb021) {\n            if (iVar8 == 0xb020) {\n                if (param_2[1] == 0) {\n                    fcn.004552f8(*param_2[2], param_2[2][1]);\n                }\n                else {\n                    fcn.00455354(*param_2[2], param_2[2][1]);\n                }\n                goto code_r0x00454dc8;\n            }\n            if (iVar8 == 0xb01a) {\n                iVar8 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n                if (((iVar8 == 0) && (iVar8 = sub.user32.dll_GetFocus(),  iVar8 == *(in_EAX + 0x30))) &&\n                   (iVar8 = fcn.0044c458(),  iVar8 != 0)) {\n                    sub.user32.dll_SetFocus(iVar8);\n                }\n                goto code_r0x00454dc8;\n            }\n            if (iVar8 == 0xb01f) goto code_r0x00454ce7;\n        }\n        else {\n            if (iVar8 == 0xb031) {\n                if (param_2[1] == 1) {\n                    param_2[3] = *(in_EAX + 0xb0);\n                }\n                else {\n                    *(in_EAX + 0xb0) = param_2[2];\n                }\n                goto code_r0x00454dc8;\n            }\n            if (iVar8 - 0xb03fU < 2) {\n                uVar5 = fcn.00456764();\n                param_2[3] = uVar5 & 0x7f;\n                goto code_r0x00454dc8;\n            }\n        }\n        goto code_r0x00454dc1;\n    }\n    if (iVar8 == 0x53) {\ncode_r0x00454ce7:\n        fcn.00455838();\n        goto code_r0x00454dc8;\n    }\n    if (iVar8 < 0x17) {\n    // switch table (21 cases) at 0x4547bc\n        switch(iVar8) {\n        case 0:\n            fcn.0041c6dc();\n            break;\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 8:\n        case 9:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0xe:\n        case 0x11:\n        case 0x12:\n        case 0x13:\n            goto code_r0x00454dc1;\n        case 7:\n            sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01a, 0, 0);\n            fcn.00454690(&stack0xfffffffc);\n            break;\n        case 10:\n            if (param_2[1] == 0) {\n                fcn.00454690(&stack0xfffffffc);\n                if (*(in_EAX + 0xac) == 0) {\n                    uVar6 = fcn.0044c308();\n                    *(in_EAX + 0xac) = uVar6;\n                }\n                fcn.00454528();\n            }\n            else {\n                fcn.00454530();\n                if (*(in_EAX + 0xac) != 0) {\n                    fcn.0044c3bc();\n                    *(in_EAX + 0xac) = 0;\n                }\n                fcn.00454690(&stack0xfffffffc);\n            }\n            break;\n        case 0xf:\n            iVar8 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n            if (iVar8 == 0) {\n                fcn.00454690(&stack0xfffffffc);\n            }\n            else {\n                fcn.004546cc(&stack0xfffffffc);\n            }\n            break;\n        case 0x10:\n            if (*(in_EAX + 0x44) != 0) {\n                fcn.00451dd0();\n            }\n            break;\n        case 0x14:\n            *param_2 = 0x27;\n            fcn.00454690(&stack0xfffffffc);\n            break;\n        default:\n            if (param_2[1] != 0) {\n                *(in_EAX + 0x9c) = 1;\n            }\n        }\n    }\n    else {\n        if (iVar8 < 0x1e) {\n            if (iVar8 == 0x1d) {\n                fcn.00453bd0();\n                fcn.00454690(&stack0xfffffffc);\n                goto code_r0x00454dc8;\n            }\n            if (iVar8 == 0x1a) {\n                fcn.0043fd98();\n                fcn.00454624();\n                fcn.00454690(&stack0xfffffffc);\n                goto code_r0x00454dc8;\n            }\n            if (iVar8 == 0x1c) {\n                fcn.00454690(&stack0xfffffffc);\n                *(in_EAX + 0x9d) = '\\x01' - (param_2[1] == 0);\n                if (param_2[1] == 0) {\n                    fcn.00454520();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb001, 0, 0);\n                }\n                else {\n                    fcn.00454530();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb000, 0, 0);\n                }\n                goto code_r0x00454dc8;\n            }\n        }\n        else {\n            if (iVar8 == 0x37) {\n                iVar8 = fcn.00454e1c();\n                param_2[3] = iVar8;\n                goto code_r0x00454dc8;\n            }\n            if (iVar8 == 0x4a) {\n                if ((*param_2[2] == -0x21acbbac) && (*(in_EAX + 0x9e) != '\\0')) {\n                    if (*(in_EAX + 0xa0) == 0) {\n                        iVar8 = fcn.0040cfcc();\n                        *(in_EAX + 0xa0) = iVar8;\n                        if (iVar8 == 0) {\n                            iVar8 = sub.kernel32.dll_GetLastError();\n                            param_2[3] = iVar8;\n                            *(in_EAX + 0xa0) = 0;\n                        }\n                        else {\n                            param_2[3] = 0;\n                            pcVar4 = sub.kernel32.dll_GetProcAddress_1(*(in_EAX + 0xa0), 0x454e08);\n                            if (pcVar4 != NULL) {\n                                (*pcVar4)(*(param_2[2] + 4), *(param_2[2] + 8));\n                            }\n                        }\n                    }\n                    else {\n                        param_2[3] = 0;\n                    }\n                }\n                goto code_r0x00454dc8;\n            }\n        }\ncode_r0x00454dc1:\n        fcn.00454690(&stack0xfffffffc);\n    }\ncode_r0x00454dc8:\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 2709
    },
    "00454e38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454e38(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n    if (iVar1 != 0) {\n        return;\n    }\n    fcn.00454520();\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    if ((*(in_EAX + 0x44) != 0) && ((*(in_EAX + 0x5b) != '\\0' || (*(*(in_EAX + 0x44) + 0x57) != '\\0')))) {\n        uVar2 = fcn.0043b420();\n        iVar1 = sub.user32.dll_IsWindowEnabled(uVar2);\n        if (iVar1 != 0) {\n            iVar1 = *(in_EAX + 0x44);\n            uVar2 = fcn.0043b420(*(iVar1 + 0x40), *(iVar1 + 0x44), *(iVar1 + 0x48), 0, 0x40);\n            sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), uVar2);\n            sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf020, 0);\n            goto code_r0x00454ecd;\n        }\n    }\n    fcn.00453e50();\ncode_r0x00454ecd:\n    if (*(in_EAX + 0x11a) != 0) {\n        (**(in_EAX + 0x118))();\n    }\n    return;\n}\n",
        "token_count": 375
    },
    "00454ee8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454ee8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    iVar1 = sub.user32.dll_IsIconic(*(in_EAX + 0x30));\n    if (iVar1 == 0) {\n        return;\n    }\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    if ((*(in_EAX + 0x44) != 0) && ((*(in_EAX + 0x5b) != '\\0' || (*(*(in_EAX + 0x44) + 0x57) != '\\0')))) {\n        uVar2 = fcn.0043b420();\n        iVar1 = sub.user32.dll_IsWindowEnabled(uVar2);\n        if (iVar1 != 0) {\n            sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf120, 0);\n            goto code_r0x00454f51;\n        }\n    }\n    fcn.00453e50();\ncode_r0x00454f51:\n    uVar3 = (***0x46f870)(1, 0, 0, 0x40);\n    iVar1 = uVar3 >> 1;\n    if (iVar1 < 0) {\n        iVar1 = iVar1 + ((uVar3 & 1) != 0);\n    }\n    uVar3 = (***0x46f870)(0, iVar1);\n    iVar1 = uVar3 >> 1;\n    if (iVar1 < 0) {\n        iVar1 = iVar1 + ((uVar3 & 1) != 0);\n    }\n    sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), 0, iVar1);\n    iVar1 = *(in_EAX + 0x44);\n    if (((iVar1 != 0) && (*(iVar1 + 0x22b) == '\\x01')) && (*(iVar1 + 0x57) == '\\0')) {\n        fcn.0044fb5c();\n        fcn.00451f78();\n    }\n    fcn.00454530();\n    if (*(*0x470bb8 + 100) != 0) {\n        uVar2 = fcn.0043b420();\n        sub.user32.dll_SetFocus(uVar2);\n    }\n    if (*(in_EAX + 0x122) != 0) {\n        (**(in_EAX + 0x120))();\n    }\n    return;\n}\n",
        "token_count": 572
    },
    "00455024": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455024(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack264 [256];\n    \n    if (*(in_EAX + 0xa4) == '\\0') {\n        fcn.00403fdc();\n    }\n    else {\n        sub.user32.dll_GetWindowTextA(*(in_EAX + 0x30), auStack264, 0x100);\n        fcn.00404078();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "00455094": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00455094(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    iVar1 = *(in_EAX + 0x44);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x22f) == '\\x02')) && (*(*0x470bb8 + 0x6c) != 0)) &&\n       (*(*(*0x470bb8 + 0x6c) + 0x22f) == '\\x01')) {\n        iVar1 = sub.user32.dll_TranslateMDISysAccel(*(iVar1 + 0x254), param_2);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 186
    },
    "004551d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.004551d0(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    unkbyte3 Var4;\n    \n    if (*(in_EAX + 0x12a) != 0) {\n        (**(in_EAX + 0x128))();\n    }\n    if (*(in_EAX + 0x44) != 0) {\n        uVar2 = fcn.0043b420();\n        iVar3 = sub.user32.dll_IsWindowEnabled(uVar2);\n        if ((iVar3 != 0) && (uVar2 = fcn.0040344c(),  uVar2 != '\\0')) {\n            Var4 = uVar2 >> 8;\n            uVar1 = 1;\n            goto code_r0x0045522d;\n        }\n    }\n    uVar1 = 0;\n    Var4 = 0;\ncode_r0x0045522d:\n    return CONCAT14(uVar1, CONCAT31(Var4, uVar1));\n}\n",
        "token_count": 236
    },
    "0045523c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045523c(uint param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = 0;\n    uVar4 = param_2;\n    iVar2 = sub.user32.dll_PeekMessageA(param_2, 0, 0, 0, 1, param_1);\n    if (iVar2 != 0) {\n        uVar3 = 1;\n        if (*(param_2 + 4) == 0x12) {\n            *(in_EAX + 0x9c) = 1;\n        }\n        else {\n            uVar4 = uVar4 & 0xffffff00;\n            if (*(in_EAX + 0xda) != 0) {\n                (**(in_EAX + 0xd8))();\n            }\n            cVar1 = fcn.0045519c();\n            if ((cVar1 == '\\0') && (uVar4 == '\\0')) {\n                cVar1 = fcn.00455094();\n                if (cVar1 == '\\0') {\n                    cVar1 = fcn.004550e4();\n                    if (cVar1 == '\\0') {\n                        cVar1 = fcn.00455070();\n                        if (cVar1 == '\\0') {\n                            sub.user32.dll_TranslateMessage(param_2);\n                            sub.user32.dll_DispatchMessageA();\n                            uVar4 = param_2;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return CONCAT44(uVar4, uVar3);\n}\n",
        "token_count": 370
    },
    "004552f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004552f8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (*(in_EAX + 0xa4) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 0, &arg_8h);\n        }\n    }\n    else {\n        fcn.00416ea4();\n        puVar1 = fcn.004026cc();\n        *puVar1 = arg_8h;\n        puVar1[1] = arg_ch;\n        fcn.00416d68();\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "00455354": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455354(int32_t lParam, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0xa4) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 1, &lParam);\n        }\n    }\n    else {\n        iVar2 = *(*(in_EAX + 0xa8) + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00416ec4();\n                if ((*piVar1 == lParam) && (arg_ch == piVar1[1])) {\n                    fcn.004026ec();\n                    fcn.00416db4();\n                    return;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "004553d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004553d0(void)\n\n{\n    if (**0x46f950 != NULL) {\n        (***0x46f950)();\n    }\n    return;\n}\n",
        "token_count": 39
    },
    "004553e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004553e8(int32_t **param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4553fb;\n    piVar2 = (**(param_2 + -0xc))();\n    *param_1 = piVar2;\n    uStack28 = 0x455426;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    (**(*piVar2 + 0x2c))();\n    *in_FS_OFFSET = uStack32;\n    if (*(in_EAX + 0x44) == 0) {\n        puStack24 = 0x45544f;\n        cVar1 = fcn.004033dc();\n        if (cVar1 != '\\0') {\n            puStack24 = 0x45545c;\n            fcn.0043b3fc();\n            *(in_EAX + 0x44) = piVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "00455468": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455468(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    *(in_EAX + 0xa5) = 1;\n    uStack28 = 0x455546;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x455494;\n    fcn.00407cb4();\n    if (*(in_EAX + 0x44) != 0) {\n        if (**0x46f9d8 == 3) {\n            puStack36 = 0x4554c4;\n            fcn.0044fb5c();\n        }\n        else if (**0x46f9d8 == 7) {\n            *(*(in_EAX + 0x44) + 0x22b) = 1;\n        }\n        if (*(in_EAX + 0x5b) != '\\0') {\n            if (*(*(in_EAX + 0x44) + 0x22b) == '\\x01') {\n                puStack36 = 0x4554e4;\n                fcn.00454e38();\n            }\n            else {\n                puStack36 = 0x4554ed;\n                fcn.0044ea64();\n            }\n        }\n        do {\n            uStack40 = 0x45550d;\n            uStack44 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd4;\n            puStack36 = &stack0xfffffffc;\n            fcn.004552d4();\n            *in_FS_OFFSET = uStack44;\n        } while (*(in_EAX + 0x9c) == '\\0');\n    }\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0xa5) = 0;\n    return;\n}\n",
        "token_count": 463
    },
    "00455568": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455568(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        uVar3 = sub.user32.dll_GetCapture(0x1f, 0, 0);\n        sub.user32.dll_SendMessageA(uVar3);\n    }\n    fcn.0040275c();\n    cVar1 = fcn.004033dc();\n    if (cVar1 == '\\0') {\n        uVar3 = fcn.0040277c();\n        fcn.0040275c(uVar3);\n        fcn.0040b490();\n    }\n    else {\n        fcn.0040275c();\n        cVar1 = fcn.004033dc();\n        if (cVar1 == '\\0') {\n            if (*(in_EAX + 0xd2) == 0) {\n                fcn.0040275c();\n                fcn.00455760();\n                return;\n            }\n            fcn.0040275c();\n            (**(in_EAX + 0xd0))();\n        }\n    }\n    return;\n}\n",
        "token_count": 269
    },
    "00455760": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00455799)\n// WARNING: Removing unreachable block (ram,0x004557c0)\n\nvoid fcn.00455760(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x45581b;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee0;\n    fcn.00404020();\n    arg_8h = 0x10;\n    fcn.00455024();\n    uVar1 = fcn.00404448();\n    fcn.00404448(uVar1);\n    fcn.004555f8(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    uStack284 = 0x455822;\n    uStack288 = 0x455812;\n    fcn.00403f88();\n    uStack288 = 0x45581a;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 279
    },
    "00455838": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00455838(uint param_1, uint16_t param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    uint32_t uVar4;\n    uint uVar5;\n    char acStack20 [4];\n    \n    uVar5 = 0;\n    acStack20[0] = '\\x01';\n    iVar1 = *(*0x470bb8 + 0x68);\n    if ((iVar1 == 0) || (*(iVar1 + 0x2aa) == 0)) {\n        if (*(in_EAX + 0xf2) != 0) {\n            uVar5 = (**(in_EAX + 0xf0))(acStack20);\n        }\n    }\n    else {\n        uVar5 = (**(iVar1 + 0x2a8))(acStack20);\n    }\n    if (iVar1 != 0) {\n        if ((*(iVar1 + 0x1c) & 0x10) != 0) {\n            acStack20[0] = '\\0';\n        }\n        iVar3 = fcn.0043b5bc();\n        if (((iVar3 == -1) && (*(iVar1 + 0x57) == '\\0')) && (*(iVar1 + 0x220) == 0)) {\n            acStack20[0] = '\\0';\n        }\n    }\n    if ((acStack20[0] != '\\0') && (uVar5 == '\\0')) {\n        if ((iVar1 != 0) && ((cVar2 = fcn.0043b724(),  cVar2 != '\\0' && (*(iVar1 + 0x23c) != 0)))) {\n            fcn.0043b420();\n            uVar4 = fcn.00455edc();\n            if (uVar4 == '\\0') {\n                return uVar5;\n            }\n            uVar5 = (**(**(in_EAX + 0x4c) + 0x20))(param_1, uVar4 & 0xffff0000 | param_2);\n            return uVar5;\n        }\n        if (*(in_EAX + 0x50) == 0) {\n            if (*(in_EAX + 0xa4) == '\\0') {\n                sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01f, param_2, param_1);\n            }\n        }\n        else {\n            if (*(in_EAX + 0x44) != 0) {\n                fcn.0043b420();\n            }\n            uVar4 = fcn.00455edc();\n            if (uVar4 != '\\0') {\n                uVar5 = (**(**(in_EAX + 0x4c) + 0x20))(param_1, uVar4 & 0xffff0000 | param_2);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 656
    },
    "00455b2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00455b2c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar auStack20 [8];\n    \n    sub.user32.dll_GetCursorPos();\n    iVar1 = fcn.00433500();\n    iVar2 = fcn.00431dfc();\n    if (iVar1 != *(in_EAX + 0x48)) {\n        if (((*(in_EAX + 0x48) != 0) && (iVar2 == 0)) || ((iVar2 != 0 && (iVar2 == *(in_EAX + 0x48))))) {\n            fcn.00435dec(0);\n        }\n        *(in_EAX + 0x48) = iVar1;\n        if (((*(in_EAX + 0x48) != 0) && (iVar2 == 0)) || ((iVar2 != 0 && (iVar2 == *(in_EAX + 0x48))))) {\n            fcn.00435dec(0);\n        }\n    }\n    return CONCAT44(auStack20, iVar1);\n}\n",
        "token_count": 245
    },
    "00455ba4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455ba4(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x455cb4;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x455bce;\n    fcn.00455b2c();\n    if ((*(in_EAX + 0x88) != '\\0') && (*(in_EAX + 0x48) == 0)) {\n        puStack48 = 0x455bed;\n        fcn.004560fc();\n    }\n    puStack48 = 0x455bf7;\n    fcn.00453bdc();\n    puStack48 = 0x455c02;\n    fcn.00431d64();\n    puStack48 = 0x455c0f;\n    fcn.00455d64();\n    bVar1 = true;\n    uStack52 = 0x455c5b;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    if (*(in_EAX + 0x102) != 0) {\n        puStack48 = &stack0xfffffffc;\n        (**(in_EAX + 0x100))();\n    }\n    fcn.00455ac8();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x455c75;\n    iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar3 == **0x46fc20) {\n        puStack48 = 0x455c86;\n        cVar2 = fcn.0041c6dc();\n        if (cVar2 != '\\0') {\n            bVar1 = false;\n        }\n    }\n    if (bVar1) {\n        puStack48 = 0x455c99;\n        sub.user32.dll_WaitMessage();\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x455cbb;\n    uStack40 = 0x455cb3;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 571
    },
    "00455d64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455d64(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar in_ZF;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x455d78;\n    fcn.00404394();\n    if (!in_ZF) {\n        puStack20 = 0x455d84;\n        fcn.00403fdc();\n        if (*(in_EAX + 0xfa) == 0) {\n            puStack20 = 0x455dac;\n            fcn.0042e8e4();\n            puStack20 = 0x455db9;\n            fcn.004413fc();\n            uStack24 = 0x455de9;\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            puStack20 = &stack0xfffffffc;\n            fcn.0040344c();\n            *in_FS_OFFSET = uStack28;\n            puStack20 = 0x455df0;\n            uStack24 = 0x455de8;\n            fcn.00403250();\n            return;\n        }\n        puStack20 = 0x455d9c;\n        (**(in_EAX + 0xf8))();\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "00455e54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455e54(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = fcn.00453058();\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.00453044();\n                if (*(iVar3 + 0x57) != '\\0') {\n                    if ((*(iVar3 + 400) == 0) || (cVar1 = fcn.0043b724(),  cVar1 != '\\0')) {\ncode_r0x00455ebb:\n                        fcn.00455df8(&stack0xfffffffc);\n                        return;\n                    }\n                    fcn.0043b420(*(iVar3 + 400));\n                    iVar3 = sub.user32.dll_IsChild();\n                    if (iVar3 == 0) goto code_r0x00455ebb;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00455df8(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "00455edc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.00455edc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x4c) == 0) {\n        fcn.00405848();\n        fcn.0042628c();\n    }\n    return *(in_EAX + 0x4c) != 0;\n}\n",
        "token_count": 76
    },
    "00455f04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455f04(uchar param_1, uint param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    fcn.00455f48();\n    uVar1 = sub.user32.dll_SetTimer(0, 0, param_2, fcn.00453c34);\n    *(in_EAX + 0x8a) = uVar1;\n    *(in_EAX + 0x89) = param_1;\n    if (*(in_EAX + 0x8a) == 0) {\n        fcn.004560fc();\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "00455f70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455f70(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uint32_t uStack32;\n    uint uStack28;\n    \n    uStack52 = 0x455f89;\n    fcn.00406b28();\n    uStack52 = 0x455f98;\n    fcn.0043476c();\n    uStack52 = 0x455fa3;\n    fcn.00433500();\n    uStack52 = 0x455fa8;\n    iVar1 = fcn.00453c14();\n    if ((iVar1 == 0) || (*(iVar1 + 0x99) == '\\0')) {\n        uStack52 = 0x455fbe;\n        fcn.004560fc();\n    }\n    else {\n        if (iVar1 == *(in_EAX + 0x60)) {\n            uStack52 = 0x455fd4;\n            fcn.00406b28();\n            uStack52 = 0x455fe3;\n            fcn.0043476c();\n            uStack52 = uStack28;\n            uStack56 = uStack32;\n            uStack60 = in_EAX + 100;\n            iVar2 = sub.user32.dll_PtInRect();\n            if (iVar2 != 0) {\n                return;\n            }\n        }\n        puVar3 = &stack0xffffffc4;\n        uStack56 = uStack56 & 0xffffff00 | *(in_EAX + 0x58);\n        if (*(in_EAX + 0x58) == 0) {\n            uStack60 = *(in_EAX + 0x78);\n        }\n        else {\n            uStack60 = *(in_EAX + 0x80);\n        }\n        fcn.00435dec(&stack0xffffffc4);\n        if ((uStack60 == '\\0') || (puVar3 != NULL)) {\n            fcn.004560fc();\n            *(in_EAX + 0x58) = uStack60;\n            *(in_EAX + 0x60) = iVar1;\n            fcn.00455f04();\n        }\n        else {\n            *(in_EAX + 0x58) = uStack60;\n            *(in_EAX + 0x60) = iVar1;\n            sub.user32.dll_GetCursorPos(&stack0xffffffc5);\n            fcn.00456394();\n        }\n    }\n    return;\n}\n",
        "token_count": 567
    },
    "004560fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004560fc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        fcn.004560b8();\n        *(in_EAX + 0x60) = 0;\n        *(in_EAX + 0x58) = 0;\n        fcn.00453d9c();\n        fcn.00455f48();\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "00456134": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00456134(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint *puStack64;\n    uint uStack60;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uStack60 = 0xe;\n    puStack64 = 0x456148;\n    var_4h = (***0x46f870)();\n    puStack64 = &fcn.00456134::var_28h;\n    uStack68 = 0x456154;\n    uStack68 = sub.user32.dll_GetCursor();\n    puStack72 = 0x45615a;\n    iVar2 = sub.user32.dll_GetIconInfo();\n    if (iVar2 != 0) {\n        uStack76 = 0x456276;\n        iStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack84 = 0x45617e;\n        puStack72 = &stack0xfffffffc;\n        fcn.00421ac8();\n        puStack84 = 0x456189;\n        iVar2 = fcn.00407c68();\n        uStack88 = 0x456247;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        var_8h = iVar2 + var_8h;\n        puStack84 = &stack0xfffffffc;\n        var_10h = iVar2;\n        cVar1 = fcn.00421b80(var_8h);\n        if ((cVar1 != '\\0') && (*(var_10h + 0xe) == 1)) {\n            uVar3 = *(iVar2 + 4) * *(iVar2 + 0xe) + 0x1f & 0xffffffe0;\n            if (uVar3 < 0) {\n                uVar3 = uVar3 + 7;\n            }\n            var_14h = uVar3 >> 3;\n            var_4h = fcn.00456124();\n            if ((var_4h == 0) && (SBORROW4(*(iVar2 + 8), *(iVar2 + 4) * 2) == *(iVar2 + 8) + *(iVar2 + 4) * -2 < 0)) {\n                var_4h = fcn.00456124();\n            }\n            var_4h = var_4h / var_14h - var_20h;\n        }\n        *in_FS_OFFSET = var_8h;\n        uStack88 = 0x45624e;\n        iStack92 = 0x456246;\n        iVar2 = fcn.004026ec();\n        return iVar2;\n    }\n    return var_4h;\n}\n",
        "token_count": 719
    },
    "004562e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004562e8(uint arg_8h)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x456382;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    var_4h = 0;\n    if (in_EAX != NULL) {\n        while (*in_EAX != '\\0') {\n            while (((cVar1 = *in_EAX,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r'))) {\n                in_EAX = fcn.0040c190();\n            }\n            fcn.00404078();\n            iVar2 = fcn.004206ac();\n            if (var_4h < iVar2) {\n                var_4h = iVar2;\n            }\n            if (*in_EAX == '\\r') {\n                in_EAX = in_EAX + 1;\n            }\n            if (*in_EAX == '\\n') {\n                in_EAX = in_EAX + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x456389;\n    uStack28 = 0x456381;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 351
    },
    "00456394": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456394(uint param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    int32_t var_70h;\n    int32_t var_68h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint lprc;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    char var_1dh;\n    uint lpPoint;\n    uint var_18h;\n    uint dx;\n    uint dy;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = *param_2;\n    var_8h = param_2[1];\n    var_4h = in_EAX;\n    fcn.004048f4();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff54;\n    *(var_4h + 0x58) = 0;\n    if ((*(var_4h + 0x88) != '\\0') && (*(var_4h + 0x60) != 0)) {\n        cVar2 = fcn.0044c4d4();\n        if (cVar2 != '\\0') {\n            fcn.00433500();\n            iVar4 = fcn.00453c14();\n            if (iVar4 == *(var_4h + 0x60)) {\n                var_60h = *(var_4h + 0x60);\n                var_58h = var_ch;\n                var_54h = var_8h;\n                iVar4 = fcn.00456134();\n                var_54h = var_54h + iVar4;\n                var_50h = fcn.00452fd8();\n                var_4ch = *(var_4h + 0x5c);\n                fcn.004345f4();\n                (**(**(var_4h + 0x60) + 0x40))();\n                lpPoint = 0;\n                var_18h = 0;\n                piVar1 = *(*(var_4h + 0x60) + 0x30);\n                if (piVar1 == NULL) {\n                    iVar4 = *(var_4h + 0x60);\n                    cVar2 = fcn.004033dc();\n                    if ((cVar2 != '\\0') && (*(iVar4 + 400) != 0)) {\n                        sub.user32.dll_ClientToScreen();\n                    }\n                }\n                else {\n                    (**(*piVar1 + 0x40))();\n                }\n                sub.user32.dll_OffsetRect();\n                fcn.00434798();\n                fcn.00453bdc();\n                fcn.00431d20();\n                fcn.00404020();\n                var_30h = 0;\n                var_2ch = *(var_4h + 0x74);\n                var_5ch = *0x464c4c;\n                var_24h = 0;\n                arg_8h = &var_60h;\n                iVar4 = fcn.00435dec(arg_8h);\n                var_1dh = iVar4 == 0;\n                if ((var_1dh) && (*(var_4h + 0x132) != 0)) {\n                    (**(var_4h + 0x130))(&var_60h);\n                }\n                if ((var_1dh == '\\0') || (*(var_4h + 0x60) == 0)) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = 1;\n                }\n                *(var_4h + 0x58) = uVar3;\n                if ((*(var_4h + 0x58) != '\\0') && (var_28h != 0)) {\n                    fcn.00456288(&stack0xfffffffc);\n                    (**(**(var_4h + 0x84) + 0x70))();\n                    (**(**(var_4h + 0x84) + 0xd8))(&var_70h, var_24h);\n                    sub.user32.dll_OffsetRect(&var_70h, var_58h, var_54h);\n                    cVar2 = fcn.0040344c();\n                    if (cVar2 != '\\0') {\n                        iVar4 = fcn.004562e8(&stack0xfffffffc);\n                        var_70h = var_70h - (iVar4 + 5);\n                        var_68h = var_68h - (iVar4 + 5);\n                    }\n                    fcn.0043476c();\n                    *(var_4h + 100) = var_88h;\n                    *(var_4h + 0x68) = var_84h;\n                    fcn.0043476c();\n                    *(var_4h + 0x6c) = var_88h;\n                    *(var_4h + 0x70) = var_84h;\n                    fcn.00434de4();\n                    (**(**(var_4h + 0x84) + 0xd4))(var_24h);\n                    fcn.00453d28();\n                    if (var_30h < 1) {\n                        fcn.00455f04();\n                    }\n                    else {\n                        fcn.00455f04();\n                    }\n                    goto code_r0x004566ee;\n                }\n            }\n        }\n    }\n    if (var_30h < 1) {\n        fcn.004560fc();\n    }\n    else {\n        fcn.00455f04();\n    }\ncode_r0x004566ee:\n    *in_FS_OFFSET = arg_8h;\n    fcn.00403fac();\n    fcn.004049b8();\n    return;\n}\n",
        "token_count": 1417
    },
    "00456728": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00456728(void)\n\n{\n    if ((*(*0x470bb8 + 0x68) == 0) || (*(*(*0x470bb8 + 0x68) + 0x23c) == 0)) {\n        fcn.00403fdc();\n    }\n    else {\n        fcn.00403fdc();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00456764": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.00456764(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uStack24;\n    \n    iVar1 = *(*0x470bb8 + 0x6c);\n    if (iVar1 == 0) {\ncode_r0x0045678f:\n        if ((iVar1 != *(in_EAX + 0x44)) && (*(in_EAX + 0x44) != 0)) {\n            iVar3 = fcn.00435dec(param_1);\n            iVar3 = iVar3 + -1;\n            if (iVar3 == 0) goto code_r0x004567af;\n        }\n        uVar4 = 0;\n    }\n    else {\n        iVar3 = fcn.00435dec(param_1);\n        iVar3 = iVar3 + -1;\n        if (iVar3 != 0) goto code_r0x0045678f;\ncode_r0x004567af:\n        uVar4 = CONCAT31(iVar3 >> 8, 1);\n    }\n    uVar2 = uVar4 & 0xff;\n    uStack24 = param_2 & 0xffffff00 | uVar2;\n    uStack24._0_1_ = uVar2;\n    if (uStack24 == '\\0') {\n        uVar4 = fcn.004033dc();\n        if (((uVar4 != '\\0') && (*(param_1 + 0x6a) != '\\0')) && (*(param_1 + 0x60) != '\\0')) {\n            uVar4 = fcn.004412c4();\n        }\n    }\n    return CONCAT44(uStack24, uVar4 & 0xffffff00 | uVar2);\n}\n",
        "token_count": 426
    },
    "004567f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.004567f4(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc2) != 0) {\n        in_EAX = (**(in_EAX + 0xc0))();\n    }\n    return CONCAT44(param_1, in_EAX) & 0xffffff00ffffff00;\n}\n",
        "token_count": 85
    },
    "0045681c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0045681c(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xca) != 0) {\n        in_EAX = (**(in_EAX + 200))();\n    }\n    return CONCAT44(param_1, in_EAX) & 0xffffff00ffffff00;\n}\n",
        "token_count": 82
    },
    "004568d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004568d0(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x456923;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    *0x470bbc = *0x470bbc + 1;\n    if (*0x470bbc == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x470bb4 != 0) {\n            iStack20 = 0x4568f7;\n            fcn.0044c280();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x470bc8 != 0) {\n            iStack20 = *0x470bc8;\n            sub.kernel32.dll_CloseHandle();\n        }\n        fcn.004169f8();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 257
    },
    "00457354": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457354(char param_1)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (param_1 == '\\0') {\n        fcn.00457434();\n        if (((in_EAX[0x85] != 0) && (*(in_EAX[0x85] + 0x1a4) != '\\0')) && (cVar1 = fcn.0040344c(),  cVar1 != '\\0')) {\n            iVar2 = fcn.0043b420();\n            iVar3 = sub.user32.dll_GetFocus();\n            if (iVar2 != iVar3) {\n                (**(*in_EAX[0x85] + 0xc4))();\n                return;\n            }\n        }\n        if (*(in_EAX + 0x69) != '\\0') {\n            iVar2 = fcn.0043b420();\n            iVar3 = sub.user32.dll_GetFocus();\n            if ((iVar2 != iVar3) && (cVar1 = fcn.0040344c(),  cVar1 != '\\0')) {\n                (**(*in_EAX + 0xc4))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "00457434": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457434(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x69) != '\\0') {\n        cVar1 = fcn.0040344c();\n        if ((cVar1 != '\\0') && (param_2 != in_EAX[0x84])) {\n            *(in_EAX[0x84] + 0x18c) = ~*0x4574b0 & *(in_EAX[0x84] + 0x18c);\n            in_EAX[0x84] = param_2;\n            iVar2 = fcn.0043b420();\n            iVar3 = sub.user32.dll_GetFocus();\n            if (iVar2 == iVar3) {\n                *(in_EAX[0x84] + 0x18c) = *(in_EAX[0x84] + 0x18c) | *0x4574b0;\n                (**(*in_EAX + 0x7c))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 265
    },
    "00457640": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00457640(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint var_1h;\n    \n    fcn.0042c0f4(arg_8h, arg_ch);\n    if ((*(in_EAX + 0x18c) & 2) != 0) {\n        if (*(in_EAX + 0x188) == 0) {\n            uVar1 = fcn.00429188();\n            *(in_EAX + 0x188) = uVar1;\n        }\n        fcn.00429330(fcn.004576ec, in_EAX);\n        fcn.00429320();\n        fcn.00429310();\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00457a58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00457a58(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack56 = 0x457a75;\n        in_EAX = fcn.0040355c();\n        in_DL = extraout_DL;\n    }\n    uStack60 = 0x457aff;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &fcn.00457a58::var_1h + 1;\n    var_1h._0_1_ = in_DL;\n    fcn.00404020();\n    fcn.0040ad50();\n    arg_8h_00 = 0;\n    fcn.00405d0c();\n    fcn.00408cb8(arg_8h_00);\n    fcn.0040b6f0(arg_8h);\n    *(in_EAX + 0xc) = arg_ch;\n    *in_FS_OFFSET = arg_8h;\n    uStack64 = 0x457b06;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 367
    },
    "00457df8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457df8(int32_t arg_8h, int16_t **arg_ch)\n\n{\n    int16_t **ppiVar1;\n    uchar *puVar2;\n    uint8_t uVar3;\n    char cVar4;\n    int32_t *in_EAX;\n    int16_t *piVar5;\n    int32_t iVar6;\n    char *in_EDX;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t **in_FS_OFFSET;\n    uint uVar9;\n    int32_t *piStack1656;\n    uint uStack1652;\n    uchar *puStack1648;\n    int32_t *piStack1644;\n    uint uStack1640;\n    uchar *puStack1636;\n    uint32_t var_650h;\n    uint bstrString;\n    int32_t aiStack592 [127];\n    uint var_50h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    int16_t **var_20h;\n    int16_t **var_1ch;\n    int16_t **var_18h;\n    int16_t **var_14h;\n    int32_t var_10h;\n    int16_t *var_ch;\n    uint *var_8h;\n    int32_t *var_4h;\n    \n    puStack1648 = &stack0xfffffffc;\n    puStack1636 = 0x457e1a;\n    var_4h = in_EAX;\n    fcn.004048f4();\n    uStack1640 = 0x45812b;\n    piStack1644 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff994;\n    var_10h = 0;\n    uStack1652 = 0x458108;\n    piStack1656 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff988;\n    var_28h = in_EDX[1];\n    puVar2 = &stack0xfffffffc;\n    puStack1636 = &stack0xfffffffc;\n    if (0x40 < var_28h) {\n        puStack1636 = &stack0xfffffffc;\n        fcn.0040b620();\n        fcn.004039c4();\n        puVar2 = puStack1648;\n    }\n    puStack1648 = puVar2;\n    if (var_28h != 0) {\n        var_14h = arg_ch;\n        var_18h = &fcn.00457df8::var_650h + var_28h * 4;\n        uVar7 = 0;\n        do {\n            ppiVar1 = var_14h;\n            var_18h = var_18h + -4;\n            var_ch = in_EDX[uVar7 + 3] & 0x7f;\n            uVar3 = in_EDX[uVar7 + 3] & 0x80;\n            if (var_ch == 0xa) {\n                *var_18h = 0xa;\n                var_18h[2] = 0x80020004;\n            }\n            else {\n                if (var_ch == 0x48) {\n                    var_1ch = &fcn.00457df8::bstrString + var_10h * 2;\n                    if (uVar3 == 0) {\n                        piVar5 = fcn.00404d54();\n                        *var_1ch = piVar5;\n                        var_1ch[1] = NULL;\n                        *var_18h = 0x8;\n                        var_18h[2] = *var_1ch;\n                    }\n                    else {\n                        piVar5 = fcn.00404d54();\n                        *var_1ch = piVar5;\n                        var_1ch[1] = *var_14h;\n                        *var_18h = 0x4008;\n                        var_18h[2] = var_1ch;\n                    }\n                    var_10h = var_10h + 1;\n                }\n                else if (uVar3 == 0) {\n                    if (var_ch == 0xc) {\n                        if (*var_14h == 0x100) {\n                            var_20h = &fcn.00457df8::bstrString + var_10h * 2;\n                            piVar5 = fcn.00404d54();\n                            *var_20h = piVar5;\n                            var_20h[1] = NULL;\n                            *var_18h = 0x8;\n                            var_18h[2] = *var_20h;\n                            var_10h = var_10h + 1;\n                        }\n                        else {\n                            *var_18h = *var_14h;\n                            var_18h[1] = ppiVar1[1];\n                            var_18h[2] = ppiVar1[2];\n                            var_18h[3] = ppiVar1[3];\n                            var_14h = var_14h + 3;\n                        }\n                    }\n                    else {\n                        *var_18h = var_ch;\n                        var_18h[2] = *var_14h;\n                        if ((4 < var_ch) && (var_ch < 8)) {\n                            var_14h = var_14h + 1;\n                            var_18h[3] = *var_14h;\n                        }\n                    }\n                }\n                else {\n                    if ((var_ch == 0xc) && (**var_14h == 0x100)) {\n                        fcn.0040f120();\n                    }\n                    *var_18h = var_ch | 0x4000;\n                    var_18h[2] = *var_14h;\n                }\n                var_14h = var_14h + 1;\n            }\n            uVar7 = uVar7 + 1;\n        } while (var_28h != uVar7);\n    }\n    var_30h = &fcn.00457df8::var_650h;\n    var_2ch = var_8h + 1;\n    var_24h = in_EDX[2];\n    uVar9 = *var_8h;\n    cVar4 = *in_EDX;\n    if (cVar4 == '\\x04') {\n        if ((var_650h & 0xfff) == 9) {\n            cVar4 = '\\b';\n        }\n        *var_8h = 0xfffffffd;\n        var_2ch = var_8h;\n        var_24h = var_24h + 1;\n    }\n    else if (((cVar4 == '\\x01') && (var_28h == 0)) && (arg_8h != 0)) {\n        cVar4 = '\\x03';\n    }\n    iVar6 = (**(*var_4h + 0x18))\n                      (var_4h, uVar9, *0x46f720, 0, cVar4, &fcn.00457df8::var_30h, arg_8h, &fcn.00457df8::var_50h, 0);\n    iVar8 = var_10h;\n    if (iVar6 != 0) {\n        fcn.004583d8();\n        iVar8 = var_10h;\n    }\n    while (iVar8 != 0) {\n        iVar8 = iVar8 + -1;\n        if (*(&stack0xfffffdb0 + iVar8 * 8) != 0) {\n            fcn.00404d30();\n        }\n    }\n    *in_FS_OFFSET = var_4h;\n    iVar8 = var_10h;\n    while (iVar8 != 0) {\n        iVar8 = iVar8 + -1;\n        sub.oleaut32.dll_SysFreeString_1(uVar9, (&fcn.00457df8::bstrString)[iVar8 * 2]);\n    }\n    return;\n}\n",
        "token_count": 1760
    },
    "00458304": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458304(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uchar auStack76 [4];\n    int32_t iStack72;\n    int32_t iStack64;\n    uint arg_8h_00;\n    uint arg_ch;\n    uint arg_10h;\n    uint arg_14h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x4583c9;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if (in_EAX == -0x7ffdfff7) {\n        arg_14h = *(in_EDX + 0x1c);\n        puStack32 = &stack0xfffffffc;\n        fcn.00404210();\n        arg_10h = 0;\n        fcn.00404210();\n        arg_ch = 0;\n        arg_8h_00 = *(in_EDX + 0x10);\n        fcn.00404210();\n        iStack64 = fcn.00457b28(arg_8h_00, arg_ch, arg_10h, arg_14h);\n        if (arg_8h != '\\0') {\n            fcn.00404af0();\n        }\n    }\n    else {\n        arg_10h = 0;\n        iStack64 = fcn.00457a58(0, in_EAX);\n    }\n    if (in_ECX != 0) {\n        iStack72 = iStack64;\n        if (iStack64 == 0) {\n            iStack72 = fcn.00403f7c();\n        }\n    // WARNING: Could not recover jumptable at 0x004039e5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x470014)(0xeedfade, 1, 7, auStack76);\n        return;\n    }\n    fcn.004039c4();\n    *in_FS_OFFSET = arg_10h;\n    uStack40 = 0x4583d0;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 536
    },
    "0045862c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045862c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4586a2;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x470be0 = *0x470be0 + 1;\n    if (*0x470be0 == 0) {\n        *0x470be4 = 1;\n        fcn.00403250();\n        **0x46fac0 = 0;\n        **0x46f740 = 0;\n        **0x46fa68 = 0;\n        if (*0x470bf0 != '\\0') {\n            sub.ole32.dll_CoUninitialize();\n        }\n        fcn.00404a04();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 218
    },
    "00459d40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00459d8e)\n// WARNING: Removing unreachable block (ram,0x00459da1)\n// WARNING: Removing unreachable block (ram,0x00459da6)\n// WARNING: Removing unreachable block (ram,0x00459db6)\n\nvoid __cdecl fcn.00459d40(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint *puVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x459d52;\n    fcn.004058bc();\n    uStack24 = 0x459e1f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (arg_ch == NULL) {\n        puStack20 = &stack0xfffffffc;\n        uVar1 = fcn.00405848();\n        puVar3 = *(arg_8h + 0x21c);\n        (***puVar3)(puVar3, 0x459e30, uVar1);\n    }\n    else {\n        iVar2 = arg_8h;\n        if (arg_8h != 0) {\n            iVar2 = arg_8h + 0x294;\n        }\n        puVar3 = 0x459dcd;\n        puStack20 = &stack0xfffffffc;\n        (**(*arg_ch + 0xc))(arg_ch, iVar2);\n        *(arg_8h + 0x284) = 1;\n        fcn.00405860();\n        (**(*arg_ch + 0x28))(arg_ch, 0xffffffff);\n        fcn.0045b468();\n        (**(*arg_ch + 0x24))(arg_ch, 0xffffffff);\n    }\n    *in_FS_OFFSET = puVar3;\n    fcn.00405848(0x459e26);\n    fcn.00405848();\n    return;\n}\n",
        "token_count": 461
    },
    "00459a5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459a5c(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    uVar2 = 1;\n    if ((((*(arg_8h + 0x1c) & 0x10) == 0) && (*(arg_8h + 0x57) != '\\0')) && (*(arg_8h + 0x250) != '\\0')) {\n        cVar1 = fcn.0045a35c();\n        if (cVar1 == '\\0') {\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 144
    },
    "00459b10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nuint __cdecl\nfcn.00459b10(int32_t *arg_8h, uint *arg_ch, uint *arg_10h, int32_t *arg_14h, int32_t *arg_18h, int32_t arg_1ch)\n\n{\n    uint var_20h;\n    int32_t var_18h;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_ch != NULL) {\n        *arg_ch = 0;\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = 0;\n    }\n    fcn.00405860();\n    fcn.00405848();\n    if (*(arg_8h + 0xa1) == '\\0') {\n        (**(*arg_8h + 0x40))();\n        iStack20 = 0x459b9d;\n        fcn.00434798();\n        iStack20 = 0x459ba4;\n        iStack20 = fcn.0043469c();\n        iStack20 = iStack20 + var_4h;\n        iStack24 = 0x459baf;\n        iStack24 = fcn.00434658();\n        iStack24 = iStack24 + var_8h;\n        var_18h = var_4h;\n        sub.user32.dll_SetRect(arg_14h, var_8h);\n        sub.user32.dll_SetRect(arg_18h, 0xffffc000, 0xffffc000, 0x3fff, 0x3fff);\n    }\n    else {\n        fcn.00415a90(&fcn.00459b10::var_18h, arg_8h[0x13]);\n        *arg_14h = var_18h;\n        arg_14h[1] = iStack24;\n        arg_14h[2] = iStack20;\n        arg_14h[3] = iStack16;\n        *arg_18h = *arg_14h;\n        arg_18h[1] = arg_14h[1];\n        arg_18h[2] = arg_14h[2];\n        arg_18h[3] = arg_14h[3];\n    }\n    fcn.00459fc0();\n    *(arg_1ch + 4) = 0;\n    (**(*arg_8h[0x8e] + 0xc))(arg_8h[0x8e], arg_1ch + 8);\n    *(arg_1ch + 0xc) = arg_8h[0x91];\n    *(arg_1ch + 0x10) = arg_8h[0x92];\n    return 0;\n}\n",
        "token_count": 643
    },
    "00459a1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459a1c(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x284) == '\\0') {\n        uVar1 = fcn.0043b420();\n        *arg_ch = uVar1;\n    }\n    else {\n        uVar1 = fcn.0043b420();\n        *arg_ch = uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 108
    },
    "0045ad0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ad0c(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x45ad9c;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(arg_8h + 0x21c) != 0) {\n        fcn.0040588c();\n        sub.ole32.dll_OleSave(0, *(arg_8h + 0x218), 0xffffffff);\n        fcn.00457bdc();\n        (**(_pe_dos_header + 0x20))(0, 0);\n        fcn.00405848();\n        (**(**(arg_8h + 0x218) + 0x24))(*(arg_8h + 0x218), 0);\n        fcn.00457bdc();\n        *(arg_8h + 0x25b) = 0;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45ada3;\n    uStack24 = 0x45ad9b;\n    fcn.00405848();\n    return;\n}\n",
        "token_count": 301
    },
    "0045b900": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b900(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_18h;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    (**(**(arg_8h + 0xc) + 0x44))();\n    *arg_ch = var_18h;\n    arg_ch[1] = iStack24;\n    arg_ch[2] = iStack20;\n    arg_ch[3] = iStack16;\n    iVar2 = fcn.00438150();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00438114();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.0045bdf8(),  cVar1 == '\\0')) &&\n               (cVar1 = fcn.0045be0c(),  cVar1 == '\\0')) {\n                cVar1 = *(iVar3 + 0x5b);\n                if (cVar1 == '\\x01') {\n                    arg_ch[1] = arg_ch[1] + *(iVar3 + 0x4c);\n                }\n                else if (cVar1 == '\\x02') {\n                    arg_ch[3] = arg_ch[3] - *(iVar3 + 0x4c);\n                }\n                else if (cVar1 == '\\x03') {\n                    *arg_ch = *arg_ch + *(iVar3 + 0x48);\n                }\n                else if (cVar1 == '\\x04') {\n                    arg_ch[2] = arg_ch[2] - *(iVar3 + 0x48);\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 449
    },
    "0045b9c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b9c0(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar2 = *(arg_8h + 0xc);\n    cVar1 = fcn.004033dc();\n    if ((cVar1 == '\\0') || (*(iVar2 + 0x22f) != '\\x02')) {\n        iVar2 = fcn.00438150();\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.00438114();\n                if ((*(iVar3 + 0x57) != '\\0') && (*(iVar3 + 0x5b) == '\\x05')) {\n                    return 0;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        var_4h = 0x800401a1;\n    }\n    return var_4h;\n}\n",
        "token_count": 235
    },
    "0045bb54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045bb54(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t *var_4h;\n    \n    fcn.00405860();\n    if (*(arg_8h + 0x14) != 0) {\n        piVar4 = *(arg_8h + 0x14);\n        iVar1 = (**(*piVar4 + 0xc))(piVar4, &var_4h);\n        piVar2 = var_4h;\n        if (iVar1 == 0) {\n            do {\n                var_4h = piVar2;\n                piVar4 = var_4h;\n                piVar2 = sub.user32.dll_GetParent();\n                if (piVar2 == NULL) goto code_r0x0045bbb8;\n                iVar1 = fcn.00431ae0();\n            } while (iVar1 == 0);\n            piVar4 = var_4h;\n            sub.user32.dll_SetWindowPos();\n        }\ncode_r0x0045bbb8:\n        uVar3 = fcn.00434658(piVar4);\n        *(arg_8h + 0x18) = uVar3;\n        uVar3 = fcn.0043469c();\n        *(arg_8h + 0x1c) = uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 329
    },
    "004597a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004597a8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x264) == 0) {\n        fcn.0045bce0();\n    }\n    fcn.0040588c();\n    return;\n}\n",
        "token_count": 63
    },
    "00459f48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459f48(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    if ((((*(in_EAX + 7) & 2) == 0) && (*(in_EAX + 599) == '\\x04')) && (in_EAX[0x87] != 0)) {\n        fcn.00459648();\n        iVar1 = fcn.0045a32c();\n        (**(*in_EAX + 0x84))(iVar1 * 2 + iStack8, iStack12 + iVar1 * 2);\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00459f9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459f9c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x21c) == 0) {\n        fcn.0040b620();\n        fcn.004039c4();\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00459fc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459fc0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    if (*(in_EAX + 0x244) == 0) {\n        iVar1 = (**(**(in_EAX + 0x238) + 0x48))();\n        if (*(iVar1 + 0x248) != 0) {\n            uStack16 = 0;\n            uStack12 = 2;\n            uStack8 = 4;\n            fcn.00448e08(2, &uStack16);\n        }\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "0045a08c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a08c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044c6cc();\n    if ((iVar1 != 0) && (*(iVar1 + 0x250) != 0)) {\n        (**(**(iVar1 + 0x250) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0045a0d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045a125)\n\nvoid fcn.0045a0d4(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x45a1fc;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puVar1 = &stack0xfffffffc;\n    if (in_EAX[0x87] != 0) {\n        fcn.0045b390();\n        if (in_EAX[0x8c] != 0) {\n            uVar2 = fcn.00405848();\n            (***in_EAX[0x87])(in_EAX[0x87], 0x45a208, uVar2);\n            in_EAX[0x8c] = 0;\n        }\n        (**(*in_EAX[0x87] + 0x18))(in_EAX[0x87], 1);\n        (**(*in_EAX + 0x7c))();\n        fcn.0040344c();\n        puVar1 = puStack20;\n    }\n    puStack20 = puVar1;\n    fcn.00405848();\n    fcn.00405848();\n    fcn.00405848();\n    fcn.00405848();\n    fcn.0045a218();\n    fcn.0045a0ac();\n    if (in_EAX[0x8d] != 0) {\n        if (in_EAX[0x8e] != in_EAX[0x8d]) {\n            (**(*in_EAX[0x8e] + 0x40))();\n        }\n        (**(*in_EAX[0x8d] + 0x40))();\n        fcn.00405848();\n        fcn.00405848();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45a203;\n    uStack24 = 0x45a1fb;\n    fcn.00405848();\n    return;\n}\n",
        "token_count": 511
    },
    "0045a264": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a264(uint param_1, int32_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    uchar auStack28 [16];\n    \n    fcn.00459f9c();\n    if (param_2 < 1) {\n        if (param_2 == -0x10000) {\n            param_2 = 0;\n        }\n    }\n    else {\n        if (in_EAX[0x8b] == 0) {\n            fcn.0045b528();\n        }\n        iVar2 = (**(*in_EAX[0x8b] + 0x14))();\n        if (iVar2 <= param_2) {\n            fcn.0040b620();\n            fcn.004039c4();\n        }\n        iVar1 = (**(*in_EAX[0x8b] + 0x18))();\n        param_2 = iVar1;\n    }\n    if (*(in_EAX + 0xa1) == '\\0') {\n        fcn.004345f4();\n        uVar3 = fcn.0043b420();\n    }\n    else {\n        (**(*in_EAX + 0x44))();\n        uVar3 = fcn.0043b420();\n    }\n    piVar4 = in_EAX;\n    if (in_EAX != NULL) {\n        piVar4 = in_EAX + 0xa6;\n    }\n    (**(*in_EAX[0x87] + 0x2c))(in_EAX[0x87], param_2, 0, piVar4, 0, uVar3, auStack28);\n    fcn.00457bdc();\n    return;\n}\n",
        "token_count": 402
    },
    "0045a32c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045a32c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x254) == '\\0') {\n        return 0;\n    }\n    if ((**0x46f90c == '\\0') || (*(in_EAX + 0x1a5) == '\\0')) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 2;\n    }\n    return uVar1;\n}\n",
        "token_count": 114
    },
    "0045a368": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045a368(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_34h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack72 = 0x45a431;\n    puStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    fcn.00459f9c();\n    iVar3 = 0;\n    if (*(in_EAX + 0x220) == 4) {\n        uVar2 = fcn.00405848();\n        (****(in_EAX + 0x21c))(*(in_EAX + 0x21c), 0x45a440, uVar2);\n        if (var_4h != NULL) {\n            var_18h._0_2_ = 3;\n            var_14h = 0;\n            var_10h = 4;\n            var_ch = 0xffffffff;\n            var_8h = 0x20;\n            (**(*var_4h + 0xc))(var_4h, &fcn.0045a368::var_18h, &fcn.0045a368::var_24h);\n            cVar1 = fcn.0041444c();\n            if (cVar1 != '\\0') {\n                iVar3 = var_20h;\n            }\n        }\n    }\n    if (iVar3 == 0) {\n        (**(**(in_EAX + 0x21c) + 0x3c))(*(in_EAX + 0x21c), &fcn.0045a368::var_34h);\n        puStack68 = 0x45a40c;\n        fcn.00457bdc();\n        puStack68 = 0xffffffff;\n        uStack72 = 0;\n        puStack76 = &fcn.0045a368::var_34h;\n        sub.ole32.dll_OleGetIconOfClass();\n    }\n    *in_FS_OFFSET = puStack76;\n    puStack68 = 0x45a438;\n    uStack72 = 0x45a430;\n    fcn.00405848();\n    return;\n}\n",
        "token_count": 597
    },
    "0045a47c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045a47c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x22c) == 0) {\n        fcn.0045b528();\n    }\n    return *(in_EAX + 0x22c);\n}\n",
        "token_count": 65
    },
    "0045a498": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a498(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x45a5a2;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &stack0xfffffffc;\n    if ((*(in_EAX + 0x253) != '\\0') && (puVar1 = &stack0xfffffffc,  *(in_EAX + 0x21c) != 0)) {\n        piVar2 = fcn.0045a47c();\n        iVar3 = (**(*piVar2 + 0x14))();\n        puVar1 = puStack32;\n        if (0 < iVar3) {\n            if (*(in_EAX + 0x24c) == 0) {\n                uVar4 = fcn.00449508();\n                *(in_EAX + 0x24c) = uVar4;\n                piVar2 = fcn.0045a47c();\n                var_8h = (**(*piVar2 + 0x14))();\n                if (-1 < var_8h + -1) {\n                    var_4h = 0;\n                    do {\n                        iVar3 = fcn.00444b6c();\n                        piVar2 = fcn.0045a47c();\n                        (**(*piVar2 + 0xc))();\n                        fcn.00446a80();\n                        *(iVar3 + 0xc) = var_4h;\n                        *(iVar3 + 0x8c) = in_EAX;\n                        *(iVar3 + 0x88) = 0x45ac6c;\n                        fcn.00446f94();\n                        var_4h = var_4h + 1;\n                        var_8h = var_8h + -1;\n                    } while (var_8h != 0);\n                }\n            }\n            goto code_r0x0045a58c;\n        }\n    }\n    puStack32 = puVar1;\n    fcn.00436378();\ncode_r0x0045a58c:\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x45a5a9;\n    uStack36 = 0x45a5a1;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 602
    },
    "0045a5dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0045a5dc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint *puVar4;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 6;\n    do {\n        var_4h = NULL;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x45a7a2;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_1ch;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    iVar3 = fcn.0044c6cc();\n    if (iVar3 == 0) {\n        iVar3 = fcn.0045a5b4();\n    }\n    if (iVar3 == 0) {\n        fcn.0044c6f4();\n    }\n    fcn.004597a8();\n    fcn.00405860();\n    fcn.00405860();\n    (**(**(in_EAX + 0x234) + 0x3c))();\n    (**(**(in_EAX + 0x234) + 0x48))();\n    cVar1 = fcn.004597ec();\n    if (cVar1 != '\\0') {\n        fcn.004597a8();\n        fcn.00405860();\n        (**(**(in_EAX + 0x238) + 0x3c))();\n    }\n    fcn.0045b390();\n    fcn.00434c44();\n    fcn.004047b4();\n    uVar2 = fcn.004047c4();\n    fcn.00455024(uVar2);\n    fcn.004047b4();\n    uVar2 = fcn.004047c4();\n    (**(**(in_EAX + 0x21c) + 0x14))(*(in_EAX + 0x21c), uVar2);\n    sub.ole32.dll_OleSetContainedObject(*(in_EAX + 0x21c), 0xffffffff);\n    uVar2 = fcn.00405848();\n    puVar4 = *(in_EAX + 0x21c);\n    (***puVar4)(puVar4, 0x45a7b0, uVar2);\n    if (var_4h != NULL) {\n        var_18h = var_18h & 0xffff0000;\n        var_14h = NULL;\n        var_10h = 0xffffffff;\n        var_ch = 0xffffffff;\n        var_8h = 0xffffffff;\n        iVar3 = in_EAX + 0x230;\n        if (in_EAX != 0) {\n            in_EAX = in_EAX + 0x290;\n        }\n        (**(*var_4h + 0x24))(var_4h, &var_18h, 1, in_EAX, iVar3);\n    }\n    *in_FS_OFFSET = puVar4;\n    fcn.00403f88(0x45a7a9);\n    fcn.00404668();\n    fcn.00403f88();\n    fcn.00404668();\n    fcn.00404a04();\n    fcn.00405848();\n    return;\n}\n",
        "token_count": 965
    },
    "0045a80c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a80c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    int32_t iStack68;\n    uchar *puStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack40 = 0x45a822;\n    fcn.0045a0d4();\n    uStack40 = 0x45a831;\n    fcn.00418d48();\n    if ((var_14h != 0x434f4442) && (*(in_EAX + 0x256) == '\\0')) {\n        uStack40 = 0x45a858;\n        fcn.0040b620();\n        uStack40 = 0x45a85d;\n        fcn.004039c4();\n    }\n    uStack44 = 2;\n    puStack48 = 0x45a868;\n    iVar1 = sub.kernel32.dll_GlobalAlloc();\n    if (iVar1 == 0) {\n        puStack48 = 0x45a876;\n        fcn.0040b558();\n    }\n    uStack52 = 0x45a96c;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack64 = 0x45a88d;\n    iStack60 = iVar1;\n    puStack48 = &stack0xfffffffc;\n    sub.kernel32.dll_GlobalLock();\n    iStack68 = 0x45a8be;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    (**(*param_2 + 0xc))();\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x45a8c5;\n    uStack72 = 0x45a8bd;\n    iStack68 = iVar1;\n    sub.kernel32.dll_GlobalUnlock();\n    return;\n}\n",
        "token_count": 514
    },
    "0045aa00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045aa00(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    if (*(in_EAX + 0x272) != 0) {\n        uStack28 = *param_2;\n        uStack24 = param_2[1];\n        uStack20 = param_2[2];\n        uStack16 = param_2[3];\n        uVar1 = fcn.0045a32c();\n        sub.user32.dll_InflateRect(&uStack28, uVar1, uVar1);\n        (**(in_EAX + 0x270))();\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0045ac8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045ac8c(int32_t arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    char cVar1;\n    uint var_4h;\n    \n    *arg_10h = 0;\n    var_4h = 0x80004002;\n    cVar1 = sub.ole32.dll_IsEqualGUID(arg_ch, 0x45ace4);\n    if ((cVar1 == '\\0') || ((*(arg_8h + 0x251) != '\\0' && ((*(arg_8h + 0x1c) & 0x10) == 0)))) {\n        cVar1 = fcn.00403304();\n        if (cVar1 != '\\0') {\n            var_4h = 0;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 188
    },
    "0045adbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045adbc(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint *puStack72;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = NULL;\n    uStack60 = 0x45af45;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    fcn.00459f9c();\n    if (*(in_EAX + 0x25b) != '\\0') {\n        puStack72 = 0x45adf4;\n        fcn.0045ad0c(in_EAX);\n    }\n    if (*(in_EAX + 0x255) == '\\0') {\n        puStack72 = &fcn.0045adbc::var_ch;\n        uStack76 = *(in_EAX + 0x214);\n        uStack80 = 0x45ae81;\n        sub.ole32.dll_GetHGlobalFromILockBytes();\n        uStack80 = 0x45ae86;\n        fcn.00457bdc();\n    }\n    else {\n        puStack72 = 0x45ae05;\n        puStack72 = fcn.00405848();\n        uStack76 = 0xffffffff;\n        uStack80 = 0;\n        uStack84 = 0x45ae0f;\n        sub.ole32.dll_CreateILockBytesOnHGlobal();\n        uStack84 = 0x45ae14;\n        fcn.00457bdc();\n        uStack84 = 0x45ae1c;\n        uStack84 = fcn.00405848();\n        puStack88 = NULL;\n        uStack92 = 0x1012;\n        uStack96 = var_4h;\n        sub.ole32.dll_StgCreateDocfileOnILockBytes();\n        fcn.00457bdc();\n        (**(**(in_EAX + 0x218) + 0x1c))(*(in_EAX + 0x218), 0, 0, 0, var_8h);\n        fcn.00457bdc();\n        (**(*var_8h + 0x24))(var_8h, 0);\n        puStack72 = 0x45ae5d;\n        fcn.00457bdc();\n        puStack72 = &fcn.0045adbc::var_ch;\n        uStack76 = var_4h;\n        uStack80 = 0x45ae6a;\n        sub.ole32.dll_GetHGlobalFromILockBytes();\n        uStack80 = 0x45ae6f;\n        fcn.00457bdc();\n    }\n    if (*(in_EAX + 0x256) != '\\0') {\n        uStack80 = 0x45ae99;\n        fcn.004345f4();\n    }\n    uStack80 = var_ch;\n    uStack84 = 0x45aed4;\n    sub.kernel32.dll_GlobalSize();\n    uStack84 = 0x45aee6;\n    fcn.00418d80();\n    uStack84 = var_ch;\n    puStack88 = 0x45aeef;\n    sub.kernel32.dll_GlobalLock();\n    uStack92 = 0x45af20;\n    uStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    puStack88 = &stack0xfffffffc;\n    fcn.00418d80();\n    *in_FS_OFFSET = uStack96;\n    puStack88 = 0x45af27;\n    uStack92 = var_ch;\n    uStack96 = 0x45af1f;\n    sub.kernel32.dll_GlobalUnlock();\n    return;\n}\n",
        "token_count": 948
    },
    "0045af78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045af78(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar5;\n    int32_t *piStack148;\n    int32_t *piStack144;\n    uint *puStack140;\n    int32_t *piStack136;\n    uint uStack132;\n    uchar *puStack128;\n    uint var_6ch;\n    int32_t var_64h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    int32_t var_5h;\n    \n    var_10h = NULL;\n    var_14h = NULL;\n    puStack128 = 0x45afa0;\n    var_5h._0_1_ = param_2;\n    unique0x100001b9 = in_EAX;\n    fcn.004048f4();\n    uStack132 = 0x45b1b1;\n    piStack136 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff78;\n    iVar1 = *(stack0xfffffff8 + 0x220);\n    if (var_5h == '\\0') {\n        *(stack0xfffffff8 + 0x220) = 1;\n        uVar4 = 2;\n    }\n    else {\n        *(stack0xfffffff8 + 0x220) = 4;\n        uVar4 = 1;\n    }\n    iVar3 = *(stack0xfffffff8 + 0x220);\n    if ((iVar1 != iVar3) || (iVar3 == 4)) {\n        puStack140 = 0x45b00f;\n        puStack128 = &stack0xfffffffc;\n        fcn.0040588c();\n        if (iVar1 != iVar3) {\n            puStack140 = 0x45b01f;\n            puStack140 = fcn.00405848();\n            piStack144 = var_10h;\n            piStack148 = 0x45b029;\n            (**(*var_10h + 0x14))();\n            piStack148 = 0x45b02e;\n            fcn.00457bdc();\n            if (var_14h != NULL) {\n                while( true ) {\n                    piStack148 = NULL;\n                    uVar2 = fcn.004049b8();\n                    iVar3 = (**(*var_14h + 0xc))(var_14h, 1, uVar2);\n                    if (iVar3 != 0) break;\n                    if (iVar1 == var_64h) {\n                        (**(*var_10h + 0x10))(var_10h);\n                    }\n                }\n            }\n            piStack148 = 0x45b077;\n            fcn.00402c5c();\n            var_28h = *(stack0xfffffff8 + 0x220);\n            var_24h = 0xffffffff;\n            piStack148 = &fcn.0045af78::var_18h;\n            (**(*var_10h + 0xc))(var_10h, &fcn.0045af78::var_30h, uVar4);\n            puStack140 = 0x45b0a1;\n            fcn.00457bdc();\n            puStack140 = 0x45b0ab;\n            fcn.0045b390();\n        }\n        if (*(stack0xfffffff8 + 0x220) == 4) {\n            var_1ch = 0;\n            if (var_ch == 0) {\n                puStack140 = &fcn.0045af78::var_4ch;\n                piStack144 = *(stack0xfffffff8 + 0x21c);\n                piStack148 = 0x45b0d9;\n                (**(*piStack144 + 0x3c))();\n                puStack128 = 0x45b0de;\n                fcn.00457bdc();\n                puStack128 = 0xffffffff;\n                uStack132 = 0;\n                piStack136 = &fcn.0045af78::var_4ch;\n                puStack140 = 0x45b0eb;\n                var_1ch = sub.ole32.dll_OleGetIconOfClass();\n                var_ch = var_1ch;\n            }\n            piStack144 = 0x45b162;\n            piStack148 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff6c;\n            var_30h._0_2_ = 3;\n            var_2ch = 0;\n            var_28h = 4;\n            var_24h = 0xffffffff;\n            var_20h = 0x20;\n            var_3ch = 0x20;\n            var_38h = var_ch;\n            var_34h = 0;\n            piVar5 = var_10h;\n            puStack140 = &stack0xfffffffc;\n            (**(*var_10h + 0x1c))(var_10h, &fcn.0045af78::var_30h, &fcn.0045af78::var_3ch, 0);\n            fcn.00457bdc();\n            *in_FS_OFFSET = piVar5;\n            fcn.00459680(0x45b169);\n            return;\n        }\n        if (*(stack0xfffffff8 + 0x220) == 1) {\n            puStack140 = 0x45b17d;\n            fcn.0045b43c();\n        }\n        puStack140 = 0x45b185;\n        fcn.0045b5fc();\n    }\n    *in_FS_OFFSET = piStack136;\n    puStack128 = 0x45b1b8;\n    uStack132 = 0x45b1a0;\n    fcn.004049b8();\n    uStack132 = 0x45b1a8;\n    fcn.00405848();\n    uStack132 = 0x45b1b0;\n    fcn.00405848();\n    return;\n}\n",
        "token_count": 1465
    },
    "0045b288": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b288(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x45b370;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    *(in_EAX + 0x259) = param_2;\n    uVar2 = 0x45b2b3;\n    iVar1 = fcn.0044c6cc();\n    if (iVar1 != 0) {\n        if (param_2 == '\\0') {\n            if (*(iVar1 + 0x27c) == in_EAX) {\n                *(iVar1 + 0x27c) = 0;\n            }\n            if (*(iVar1 + 0x220) == in_EAX) {\n                uVar2 = fcn.0043b420();\n                sub.user32.dll_SetFocus();\n            }\n            fcn.0045a0ac();\n            if (*(in_EAX + 0x26a) != 0) {\n                (*in_EAX[0x9a])();\n            }\n        }\n        else {\n            if ((*(iVar1 + 0x27c) != NULL) && (*(iVar1 + 0x27c) != in_EAX)) {\n                uVar2 = 0;\n                fcn.00435dec(0);\n            }\n            *(iVar1 + 0x27c) = in_EAX;\n            (**(*in_EAX + 0xc4))();\n            if (*(in_EAX + 0x262) != 0) {\n                (*in_EAX[0x98])();\n            }\n        }\n    }\n    *in_FS_OFFSET = uVar2;\n    return;\n}\n",
        "token_count": 440
    },
    "0045b43c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045b43c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x21c) != 0) {\n        (**(**(in_EAX + 0x21c) + 0x34))(*(in_EAX + 0x21c));\n        fcn.00457bdc();\n        fcn.0040344c();\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "0045b468": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045b468(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uchar *arg_8h;\n    int32_t iStack48;\n    uchar auStack44 [8];\n    uchar auStack36 [32];\n    \n    if ((*(in_EAX + 0xa1) == '\\0') || (in_EAX[0xa0] == 0)) {\n        (**(*in_EAX + 0x40))();\n        fcn.00434798();\n        iVar1 = fcn.0043469c();\n        iVar1 = iVar1 + iStack48;\n        arg_8h = auStack44;\n        fcn.00434658();\n        fcn.00415a90(arg_8h, iVar1);\n        if (in_EAX[0x8f] != 0) {\n            fcn.00415a90(auStack36, 0x3fff);\n            (**(*in_EAX[0x8f] + 0x1c))(in_EAX[0x8f], &stack0xffffffc4, auStack44);\n        }\n    }\n    else {\n        (**(*in_EAX + 0x44))();\n        (**(*in_EAX[0xa0] + 0x18))();\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "0045b528": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045b528(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar3;\n    int32_t *piStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    ushort uStack20;\n    uint8_t uStack16;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack52 = 0x45b5ed;\n    piStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack56;\n    fcn.00459f9c();\n    fcn.0045a218();\n    uVar1 = fcn.00403220();\n    *(in_EAX + 0x22c) = uVar1;\n    uVar1 = fcn.00405848();\n    piVar3 = *(in_EAX + 0x21c);\n    iVar2 = (**(*piVar3 + 0x30))(piVar3, uVar1);\n    if (iVar2 == 0) {\n        while (((iVar2 = (**(*var_4h + 0xc))(var_4h, 1, &var_18h, 0),  iVar2 == 0 && (-1 < var_18h)) &&\n               ((uStack16 & 2) != 0))) {\n            var_8h._0_2_ = var_18h;\n            var_8h._2_2_ = uStack20;\n            fcn.004041b0();\n            (**(**(in_EAX + 0x22c) + 0x3c))();\n        }\n    }\n    *in_FS_OFFSET = piVar3;\n    piStack56 = 0x45b5f4;\n    fcn.00403f88();\n    fcn.00405848();\n    return;\n}\n",
        "token_count": 468
    },
    "0045be0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045be0c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if ((*(param_2 + 0x57) != '\\0') && (*(param_2 + 0x5b) - 1U < 4)) {\n        iVar1 = fcn.00435dec(0);\n        if (iVar1 != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 109
    },
    "0045cfbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045cfbc(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack4132;\n    uint uStack4128;\n    uchar *puStack4124;\n    uint var_1008h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4124 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack4128 = 0x45d08d;\n    uStack4132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack4132;\n    iVar1 = fcn.0045e738();\n    sub.user32.dll_DdeQueryStringA(*(in_EAX + 0x44), var_4h, &var_1008h, 0x1000, 0x3ec);\n    fcn.00404078();\n    fcn.00403fdc();\n    uVar2 = fcn.0045d1c8();\n    *(iVar1 + 0x3c) = uVar2;\n    if (*(iVar1 + 0x3c) == 0) {\n        uVar2 = fcn.0045d218();\n        *(iVar1 + 0x38) = uVar2;\n    }\n    *(iVar1 + 0x40) = param_2;\n    sub.user32.dll_DdeSetUserHandle(param_2, 0xffffffff, iVar1);\n    fcn.00416d68();\n    if (*(iVar1 + 0x3c) != 0) {\n        fcn.0040344c();\n    }\n    *in_FS_OFFSET = param_2;\n    fcn.00403f88(0x45d094);\n    return;\n}\n",
        "token_count": 404
    },
    "0045d818": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045d818(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    uint *in_stack_fffffed0;\n    int32_t iStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_108h;\n    uint lpCmdLine;\n    uint var_1h;\n    \n    puStack284 = &var_1h + 1;\n    uStack288 = 0x45d9ee;\n    iStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack292;\n    var_1h._0_1_ = 0;\n    puVar1 = &var_1h + 1;\n    if (*(in_EAX + 0x38) != 0) goto code_r0x0045d9d5;\n    iVar3 = fcn.00404248();\n    if (iVar3 == 0) {\n        iVar3 = fcn.00404248();\n        if (iVar3 == 0) {\n            fcn.0045da8c();\n            puVar1 = puStack284;\n            goto code_r0x0045d9d5;\n        }\n    }\n    if (*(in_EAX + 0xa0) == 0) {\n        fcn.00408674();\n        in_stack_fffffed0 = *(*0x470c3c + 0x44);\n        uVar4 = sub.user32.dll_DdeCreateStringHandleA(in_stack_fffffed0, &lpCmdLine, 0x3ec);\n        *(in_EAX + 0xa0) = uVar4;\n    }\n    if (*(in_EAX + 0xa4) == 0) {\n        fcn.00408674();\n        uVar4 = sub.user32.dll_DdeCreateStringHandleA(*(*0x470c3c + 0x44), &lpCmdLine, 0x3ec);\n        *(in_EAX + 0xa4) = uVar4;\n    }\n    cVar2 = fcn.0045dacc();\n    if (cVar2 == '\\0') {\n        iVar3 = fcn.00404248();\n        if (iVar3 == 0) {\n            iVar3 = fcn.00404248();\n            if (iVar3 == 0) goto code_r0x0045d98a;\n        }\n        iVar3 = fcn.00404248();\n        if (iVar3 == 0) {\n            fcn.00404308(*(in_EAX + 0x34), 0x45da08, *(in_EAX + 0x30));\n            fcn.00408674();\n        }\n        else {\n            fcn.00408674();\n        }\n        in_stack_fffffed0 = &lpCmdLine;\n        uVar5 = sub.kernel32.dll_WinExec();\n        if (0x1f < uVar5) {\n            cVar2 = fcn.0045dacc();\n        }\n    }\ncode_r0x0045d98a:\n    if (cVar2 == '\\0') {\n        fcn.0045da8c();\n        puVar1 = puStack284;\n    }\n    else {\n        if (*(in_EAX + 0x58) == 0) {\n            *(in_EAX + 0xa8) = 1;\n        }\n        else {\n            *(in_EAX + 0xa8) = *(in_EAX + 0x58);\n        }\n        cVar2 = fcn.0045db44();\n        puVar1 = puStack284;\n        if (cVar2 != '\\0') {\n            fcn.0040344c();\n            fcn.0045dbf0();\n            var_1h._0_1_ = 1;\n            puVar1 = puStack284;\n        }\n    }\ncode_r0x0045d9d5:\n    puStack284 = puVar1;\n    *in_FS_OFFSET = in_stack_fffffed0;\n    fcn.00403f88(0x45d9f5);\n    return;\n}\n",
        "token_count": 954
    },
    "0045da8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045da8c(void)\n\n{\n    int32_t in_EAX;\n    int16_t iVar1;\n    \n    if (*(*(in_EAX + 0x9c) + 8) != 0) {\n        iVar1 = *(*(in_EAX + 0x9c) + 8);\n        do {\n            fcn.00416ec4();\n            fcn.0045de88();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "0045db44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0045db44(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0;\n    if (*(in_EAX + 0x38) != 0) {\n        uVar3 = 0;\n        do {\n            if (*(*(in_EAX + 0x9c) + 8) <= (uVar3 & 0xffff)) break;\n            fcn.00416ec4();\n            cVar1 = fcn.0045e20c();\n            if (cVar1 == '\\0') {\n                fcn.0045de88();\n            }\n            else {\n                uVar3 = uVar3 + 1;\n            }\n            uVar2 = uVar3 & 0xffff;\n        } while (uVar2 < *(*(in_EAX + 0x9c) + 8));\n        uVar2 = CONCAT31(uVar2 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 236
    },
    "0045dbac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045dbac(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    if (*(in_EAX + 0x38) != 0) {\n        fcn.0040344c();\n    }\n    *(in_EAX + 0x38) = 0;\n    for (uVar1 = 0; (uVar1 & 0xffff) < *(*(in_EAX + 0x9c) + 8); uVar1 = uVar1 + 1) {\n        fcn.00416ec4();\n        fcn.0045e304();\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0045df20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045df20(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 0x10) != 0) {\n        cVar1 = fcn.00403464();\n        if ((cVar1 != '\\0') && (*(*(in_EAX + 4) + 0x250) != 0)) {\n            (**(**(*(in_EAX + 4) + 0x250) + 0xc))();\n        }\n    }\n    if (*(in_EAX + 0x42) != 0) {\n        (**(in_EAX + 0x40))();\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "0045e00c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045e00c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x45e0a9;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00404020();\n    if (*(in_EAX + 8) != 0) {\n        fcn.0045e2c4();\n    }\n    fcn.00403fdc();\n    (**(**(*(in_EAX + 0x10) + 0x30) + 0x44))();\n    iVar2 = fcn.00404248();\n    if (((iVar2 != 0) && (*(*(in_EAX + 0xc) + 0x38) != 0)) && (cVar1 = fcn.0045e20c(),  cVar1 == '\\0')) {\n        fcn.00403f88();\n    }\n    fcn.0045e194();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x45e0b0;\n    uStack28 = 0x45e0a8;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 322
    },
    "0045e0b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045e104)\n// WARNING: Removing unreachable block (ram,0x0045e127)\n// WARNING: Removing unreachable block (ram,0x0045e135)\n// WARNING: Removing unreachable block (ram,0x0045e13a)\n// WARNING: Removing unreachable block (ram,0x0045e145)\n// WARNING: Removing unreachable block (ram,0x0045e149)\n// WARNING: Removing unreachable block (ram,0x0045e156)\n// WARNING: Removing unreachable block (ram,0x0045e15a)\n\nvoid __fastcall fcn.0045e0b8(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x45e185;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_2 == 0) {\n        puStack28 = &stack0xfffffffc;\n        fcn.0045e194();\n    }\n    else {\n        fcn.0045e1fc();\n        fcn.00404180();\n        fcn.0045e324();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x45e18c;\n    uStack32 = 0x45e184;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 355
    },
    "0045e194": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0045e194(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iStackY52;\n    uchar auStack16 [4];\n    \n    uVar2 = 0;\n    iVar1 = *(in_EAX + 0xc);\n    if ((*(iVar1 + 0x38) == 0) || (*(in_EAX + 8) == 0)) {\n        fcn.0045e324();\n    }\n    else if (*(iVar1 + 0xc6) != '\\x01') {\n        iStackY52 = 0x45e1d5;\n        iVar1 = sub.user32.dll_DdeClientTransaction\n                          (0, 0xffffffff, *(iVar1 + 0x38), *(in_EAX + 8), *(iVar1 + 0xa8), 0x20b0, 1000, \n                           &stack0xfffffff0);\n        if (iVar1 != 0) {\n            fcn.0045e0b8();\n            sub.user32.dll_DdeFreeDataHandle();\n            uVar2 = 1;\n            iStackY52 = iVar1;\n        }\n    }\n    return CONCAT44(iStackY52, uVar2);\n}\n",
        "token_count": 280
    },
    "0045e20c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0045e20c(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint uStack20;\n    uint uStack16;\n    uchar uStack12;\n    \n    uStack12 = 0;\n    uVar1 = *(in_EAX + 0xc);\n    if (*(uVar1 + 0x38) != 0) {\n        uStack16 = 0x45e22b;\n        uVar1 = fcn.00404248();\n        if (uVar1 != 0) {\n            if (*(in_EAX + 8) == 0) {\n                uStack16 = 0x3ec;\n                uStack20 = 0x45e246;\n                uStack20 = fcn.00404448();\n                uVar2 = sub.user32.dll_DdeCreateStringHandleA(*(*0x470c3c + 0x44));\n                *(in_EAX + 8) = uVar2;\n            }\n            in_stack_ffffffcc = 0xffffffff;\n            in_stack_ffffffc8 = 0;\n            uVar1 = sub.user32.dll_DdeClientTransaction\n                              (0, 0xffffffff, *(*(in_EAX + 0xc) + 0x38), *(in_EAX + 8), *(*(in_EAX + 0xc) + 0xa8), \n                               0x1034, 1000, &stack0xffffffec);\n            if (uVar1 == 0) {\n                sub.user32.dll_DdeGetLastError(*(*0x470c3c + 0x44));\n                sub.user32.dll_DdeFreeStringHandle(*(*0x470c3c + 0x44), *(in_EAX + 8));\n                *(in_EAX + 8) = 0;\n                uVar1 = (**(**(*(in_EAX + 0x10) + 0x30) + 0x44))();\n            }\n            else {\n                in_stack_ffffffc8 = 1;\n            }\n        }\n    }\n    return CONCAT44(in_stack_ffffffcc, uVar1 & 0xffffff00 | in_stack_ffffffc8 & 0xff);\n}\n",
        "token_count": 507
    },
    "0045e498": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045e498(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x45e51f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x3a) != 0) {\n        (**(in_EAX + 0x38))();\n        puVar1 = puStack20;\n    }\n    puStack20 = puVar1;\n    if (*(in_EAX + 0x34) == 0) {\n        if (*(in_EAX + 4) != 0) {\n            cVar2 = fcn.004033dc();\n            if (cVar2 != '\\0') {\n                fcn.00434c44();\n                fcn.0045d2fc();\n            }\n        }\n    }\n    else {\n        fcn.0045d2fc();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45e526;\n    uStack24 = 0x45e51e;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 319
    },
    "0045e52c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e52c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x45e5af;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    var_4h = 0;\n    uVar2 = param_2;\n    iVar1 = sub.user32.dll_DdeAccessData(param_2, &var_8h);\n    if (iVar1 != 0) {\n        fcn.00404180();\n        (**(**(in_EAX + 0x30) + 0x2c))();\n        sub.user32.dll_DdeUnaccessData();\n        fcn.0045e498();\n        if (*(in_EAX + 0x42) != 0) {\n            (**(in_EAX + 0x40))();\n        }\n        var_4h = 0x8000;\n        uVar2 = param_2;\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack40 = 0x45e5b6;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 326
    },
    "0045e674": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e674(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x45e6ff;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    iVar1 = sub.user32.dll_DdeAccessData(param_2, &var_4h);\n    if ((iVar1 != 0) && (*(in_EAX + 0x42) != 0)) {\n        piVar2 = fcn.00403220();\n        fcn.00404180();\n        (**(*piVar2 + 0x2c))();\n        (**(in_EAX + 0x40))();\n        (**(*piVar2 + -4))();\n    }\n    *in_FS_OFFSET = param_2;\n    uStack40 = 0x45e706;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 279
    },
    "0045e800": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045e800(uint arg_8h, uint arg_ch)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffefb4;\n    uint uStack4136;\n    uint uStack4132;\n    uchar *puStack4128;\n    uint var_100ch;\n    uint var_1008h;\n    uint var_1001h;\n    uint var_1h;\n    \n    puStack4128 = &var_1h + 1;\n    uStack4132 = 0x45e920;\n    uStack4136 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack4136;\n    var_1h._0_1_ = 0;\n    puVar1 = &var_1h + 1;\n    if (arg_8h == 1) {\n        sub.user32.dll_DdeQueryStringA(*(*0x470c3c + 0x44), arg_ch, &var_1001h, 0x1000, 0x3ec);\n        fcn.004041f8();\n        iVar2 = fcn.0045eb4c(0);\n        puVar1 = puStack4128;\n        if (iVar2 != 0) {\n            iVar3 = fcn.0045ecc4();\n            *(iVar3 + 0x3c) = iVar2;\n            fcn.004041f8();\n            fcn.0045ee20();\n            fcn.00416d68();\n            fcn.0041c94c();\n            if (*(in_EAX + 0x34) == 0) {\n                uVar4 = fcn.00404448(0x3ec);\n                in_stack_ffffefb4 = *(*0x470c3c + 0x44);\n                uVar4 = sub.user32.dll_DdeCreateStringHandleA(in_stack_ffffefb4, uVar4);\n                *(in_EAX + 0x34) = uVar4;\n            }\n            var_1h._0_1_ = 1;\n            puVar1 = puStack4128;\n        }\n    }\n    puStack4128 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffefb4;\n    fcn.00403fac(0x45e927);\n    return;\n}\n",
        "token_count": 568
    },
    "0045eb4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045eb4c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    bool bVar4;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((((in_EDX == 0) && (in_ECX != 0)) && (*(in_ECX + 4) != 0)) && (cVar1 = fcn.004033dc(),  cVar1 != '\\0')) {\n        in_EDX = *(in_ECX + 4);\n    }\n    if ((in_EDX != 0) && (iVar2 = fcn.0041cea0(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.0041ce74();\n            cVar1 = fcn.004033dc();\n            bVar4 = cVar1 == '\\0';\n            if ((!bVar4) && ((fcn.00404394(),  bVar4 && (*(iVar3 + 0x34) == in_ECX)))) {\n                return iVar3;\n            }\n            cVar1 = fcn.004033dc();\n            if ((cVar1 != '\\0') && (iVar3 = fcn.0045eb4c(arg_8h),  iVar3 != 0)) {\n                return iVar3;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 357
    },
    "00460170": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00460170(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar3;\n    uint *arg_8h;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x460213;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack40;\n    puVar1 = &stack0xfffffffc;\n    if (*0x464db4 == 0) {\n        arg_8h = &var_4h;\n        fcn.00405d0c(arg_8h, 0x276d);\n        fcn.00408ca4(arg_8h);\n        fcn.0045f2ec(arg_8h);\n        fcn.004039c4();\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    iVar3 = *0x464db4;\n    uVar2 = sub.kernel32.dll_GetProcAddress_1(*0x464db4, *(in_EAX * 0xc + 0x464dc0));\n    **(in_EAX * 0xc + 0x464dbc) = uVar2;\n    *in_FS_OFFSET = iVar3;\n    fcn.00403fac(0x46021a);\n    return;\n}\n",
        "token_count": 364
    },
    "00460248": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460248(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack32 = 0x460315;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*0x464db4 == 0) {\n        *0x464db4 = sub.kernel32.dll_LoadLibraryA(0x460328);\n        if (*0x464db4 == 0) {\n            uVar1 = sub.kernel32.dll_GetLastError();\n            arg_8h_00 = &fcn.00460248::var_4h;\n            fcn.00405d0c(arg_8h_00, uVar1);\n            fcn.00408ca4(arg_8h_00);\n            fcn.0045f2ec(arg_8h_00);\n            fcn.004039c4();\n        }\n        *0x470e10 = sub.kernel32.dll_GetProcAddress_1(*0x464db4, 0x460348);\n        (**0x470e10)(arg_ch & 0xffff0000 | arg_8h & 0xffff, arg_ch);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x46031c;\n    uStack32 = 0x460314;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 393
    },
    "00460d48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00460d48(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffe3c;\n    uint uStack444;\n    uint uStack440;\n    uchar *puStack436;\n    uint var_194h;\n    uint var_18eh;\n    \n    if (param_2 != '\\0') {\n        puStack436 = 0x460d67;\n        fcn.0040355c();\n    }\n    uStack440 = 0x460de6;\n    uStack444 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe44;\n    puStack436 = &stack0xfffffffc;\n    fcn.0046070c();\n    if (*0x465300 == '\\0') {\n        in_stack_fffffe3c = 0x202;\n        iVar1 = fcn.00460248(0x202, &fcn.00460d48::var_18eh);\n        if (iVar1 == -1) {\n            fcn.00405d0c();\n            fcn.0040b564();\n            fcn.004039c4();\n        }\n        *0x465300 = '\\x01';\n    }\n    *in_FS_OFFSET = in_stack_fffffe3c;\n    uStack444 = 0x460ded;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 314
    },
    "00461710": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00461710(void)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x4617aa;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    (**(*in_EAX[3] + 0x44))();\n    (**(*in_EAX + 0x24))();\n    uVar1 = fcn.00404448();\n    iVar2 = (***0x46f8fc)();\n    if (iVar2 == 0) {\n        fcn.00460658();\n    }\n    else {\n        iVar2 = *(iVar2 + 0xc);\n        for (iVar3 = 0; *(iVar2 + iVar3 * 4) != 0; iVar3 = iVar3 + 1) {\n            (**(*in_EAX + 0x7c))();\n            (**(*in_EAX[3] + 0x38))();\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    uStack36 = 0x4617b1;\n    uStack40 = 0x4617a9;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 336
    },
    "00461c98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00461c98(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x461cd1;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x470e20 = *0x470e20 + 1;\n    if ((*0x470e20 == 0) && (*0x465300 != '\\0')) {\n        (***0x46f94c)();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 150
    },
    "00461fd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00461fd0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char in_CL;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.00461fd0::var_1h + 1;\n    bVar2 = true;\n    uStack36 = 0x462099;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.00404394();\n    if (bVar2) {\n        iVar1 = fcn.0040458c();\n    }\n    else {\n        fcn.00407cec();\n        fcn.00407cec(0);\n        iVar1 = (**0x465350)();\n    }\n    if (iVar1 == 0) {\n        fcn.00403fdc();\n        if (in_CL != '\\0') {\n            fcn.00403f88();\n        }\n    }\n    else {\n        fcn.004044a8(arg_8h);\n        if (in_CL != '\\0') {\n            fcn.00404248();\n            fcn.004044a8();\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4620a0;\n    uStack36 = 0x462098;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 357
    },
    "004620b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004620b8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char in_CL;\n    bool bVar2;\n    uint var_1h;\n    \n    bVar2 = arg_ch == '\\0';\n    if (bVar2) {\n        fcn.00461fd0(arg_8h);\n    }\n    else {\n        fcn.00404394();\n        if (bVar2) {\n            iVar1 = fcn.0040458c();\n        }\n        else {\n            iVar1 = (**0x465350)();\n        }\n        if (iVar1 == 0) {\n            fcn.00403fdc();\n            if (in_CL != '\\0') {\n                fcn.00403f88();\n            }\n        }\n        else {\n            fcn.004044a8(arg_8h);\n            if (in_CL != '\\0') {\n                fcn.00404248();\n                fcn.004044a8();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00462ce4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00462ce4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x462dc1;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    (**(**(in_EAX + 0x30) + 0x44))();\n    fcn.00404020();\n    while( true ) {\n        iVar1 = fcn.00404248();\n        if ((iVar1 < 1) || (pe_dos_header != 0x31)) break;\n        fcn.004044e8();\n    }\n    iVar1 = (***0x46f738)();\n    if (iVar1 < 1) {\n        fcn.00404248();\n        fcn.00462dfc();\n    }\n    else {\n        fcn.00462dfc();\n        fcn.00405d0c();\n        fcn.0040b564();\n        fcn.004039c4();\n    }\n    if (*(in_EAX + 0x4a) != 0) {\n        (**(in_EAX + 0x48))();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x462dc8;\n    uStack32 = 0x462dc0;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 354
    },
    "00462e9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00462e9c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar in_DL;\n    int32_t iVar3;\n    uint32_t *in_FS_OFFSET;\n    bool bVar4;\n    uint32_t uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_2h;\n    \n    puStack64 = &var_2h + 2;\n    var_10h = 0;\n    uStack68 = 0x462fe7;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack72;\n    var_2h._1_1_ = in_DL;\n    var_8h = fcn.004627c0(*(in_EAX + 0x3d));\n    *(in_EAX + 0x3f) = var_2h._1_1_;\n    *(in_EAX + 0x3e) = var_2h;\n    *(in_EAX + 0x3c) = arg_ch;\n    *(in_EAX + 0x3d) = arg_8h;\n    var_ch = CONCAT31(CONCAT21(*(in_EAX + 0x3e), *(in_EAX + 0x3c)), arg_8h);\n    *(in_EAX + 0x30) = var_ch;\n    fcn.004045d4();\n    iVar3 = 1;\n    do {\n        bVar4 = *(in_EAX + 0x30) << (iVar3 - 1U & 0x1f) < 0;\n        *(in_EAX + 0xf + iVar3) = bVar4;\n        if (bVar4) {\n            iVar1 = fcn.004044a0();\n            *(iVar1 + -1 + iVar3) = 0x31;\n        }\n        else {\n            iVar1 = fcn.004044a0();\n            *(iVar1 + -1 + iVar3) = 0x30;\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x21);\n    fcn.00408ca4(&var_10h);\n    uVar2 = fcn.00403fdc();\n    uVar2 = uVar2 & 0xffffff00 | *(in_EAX + 0x3d);\n    var_ch = fcn.004627c0(uVar2);\n    if ((var_ch != var_8h) && (*(in_EAX + 10) != 0)) {\n        (**(in_EAX + 8))();\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00403f88(0x462fee);\n    return;\n}\n",
        "token_count": 724
    },
    "0046300c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046300c(uint param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x4630c8;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*(in_EAX + 1) == '\\0') {\n        iVar2 = fcn.00404248();\n        if (iVar2 == 0x20) {\n            cVar1 = fcn.00407e9c();\n            if (cVar1 == '\\0') {\n                var_8h = 0;\n                iVar2 = 1;\n                do {\n                    uVar3 = param_2;\n                    if (*((param_2 - 1) + iVar2) != '0') {\n                        uVar3 = 1 << (0x20U - iVar2 & 0x1f);\n                        var_8h = var_8h + uVar3;\n                    }\n                    (**(*in_EAX + 0xc))(uVar3 & 0xffffff00 | var_8h & 0xff, uVar3 & 0xffffff00 | var_8h >> 8 & 0xff);\n                    iVar2 = iVar2 + 1;\n                } while (iVar2 != 0x21);\n            }\n        }\n        else {\n            fcn.00405d0c();\n            fcn.0040b564();\n            fcn.004039c4();\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4630cf;\n    uStack36 = 0x4630c7;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 458
    },
    "004630d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004630d8(uint param_1, uint32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(in_EAX + 1) == '\\0') {\n        (**(*in_EAX + 0xc))(in_EAX & 0xffffff00 | param_2 & 0xff, in_EAX & 0xffffff00 | param_2 >> 8 & 0xff);\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "00463494": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00463494(void)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    uint32_t extraout_ECX;\n    uint32_t var_4h;\n    \n    var_4h = 1;\n    do {\n        var_4h = var_4h + 1;\n    } while (var_4h != 0xbb5d6e9);\n    uVar1 = fcn.004026cc();\n    if (uVar1 != 0) {\n        var_4h = 1;\n        do {\n            puVar2 = var_4h + uVar1;\n            if (SCARRY4(var_4h >> 0x1f, 0) != SCARRY4(var_4h >> 0x1f, CARRY4(var_4h, uVar1))) {\n                puVar2 = fcn.00403190();\n                uVar1 = extraout_ECX;\n            }\n            *puVar2 = 0x69;\n            var_4h = var_4h + 1;\n        } while (var_4h != 0x1e23a468);\n        fcn.004026ec();\n        var_4h = 1;\n        do {\n            sub.kernel32.dll_OutputDebugStringA();\n            var_4h = var_4h + 1;\n        } while (var_4h != 0xaaf4);\n        fcn.0046346c();\n    }\n    return;\n}\n",
        "token_count": 327
    },
    "004035d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004035d4(void)\n\n{\n    if (1 < *0x464028) {\n        (**0x470014)(0xeedfadf, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 52
    },
    "0040362c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040362c(void)\n\n{\n    uint in_EAX;\n    int32_t unaff_EBX;\n    uint uVar1;\n    uint auStack8 [2];\n    \n    if (1 < *0x464028) {\n        auStack8[0] = *(unaff_EBX + 4);\n        uVar1 = 0;\n        (**0x470014)(0xeedfae0, 0, 1, auStack8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 118
    },
    "00403640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00403640(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    if (1 < *0x464028) {\n        uVar1 = 0;\n        (**0x470014)(0xeedfae0, 0, 1, &stack0xfffffff8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 86
    },
    "00403674": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403674(uint param_1, uint param_2)\n\n{\n    uint uStack16;\n    uint uStack8;\n    \n    if (1 < *0x464028) {\n        uStack16 = 0x403685;\n        uStack8 = param_2;\n        fcn.00403654();\n        (**0x470014)(0xeedfae1, 0, 1, &stack0xfffffff0);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0040369c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040369c(uint param_1, uint param_2)\n\n{\n    uint uStack4;\n    \n    if (1 < *0x464028) {\n        uStack4 = param_2;\n        (**0x470014)(0xeedfae2, 0, 1, &uStack4);\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "004036b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004036b8(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = param_2;\n    uStack4 = in_EAX;\n    if (1 < *0x464028) {\n        (**0x470014)(0xeedfae3, 0, 2, &uStack8);\n    }\n    return CONCAT44(uStack8, uStack4);\n}\n",
        "token_count": 111
    },
    "004045d4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004045d4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_2) {\n        iVar1 = *in_EAX;\n        if ((iVar1 != 0) && (*(iVar1 + -8) == 1)) {\n            fcn.0040270c();\n            *in_EAX = iVar1;\n            *(iVar1 + -4) = param_2;\n            *(param_2 + iVar1) = 0;\n            return;\n        }\n        iVar1 = fcn.0040404c();\n        if (*in_EAX != 0) {\n            fcn.004028c8();\n        }\n    }\n    fcn.00403f88();\n    *in_EAX = iVar1;\n    return;\n}\n",
        "token_count": 196
    },
    "00404864": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404864(uint arg_8h)\n\n{\n    fcn.004047d4();\n    fcn.00404754();\n    return;\n}\n",
        "token_count": 38
    },
    "00405004": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405004(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **in_EAX;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = *in_EAX;\n    iVar5 = *arg_8h;\n    if (iVar5 < 1) {\n        if (iVar5 < 0) {\n            fcn.00402828();\n        }\n        fcn.00404ffc();\n    }\n    else {\n        var_10h = 0;\n        if (piVar3 != NULL) {\n            var_10h = piVar3[-1];\n            piVar3 = piVar3 + -2;\n        }\n        iVar4 = in_EDX + *(in_EDX + 1);\n        iVar1 = *(iVar4 + 2);\n        piVar2 = *(iVar4 + 6);\n        if (piVar2 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = *piVar2;\n        }\n        if ((iVar5 * iVar1) / iVar5 != iVar1) {\n            fcn.00402828();\n        }\n        if ((piVar3 == NULL) || (*piVar3 == 1)) {\n            if ((iVar5 < var_10h) && (iVar4 != 0)) {\n                fcn.00404ff4();\n            }\n            fcn.0040270c();\n        }\n        else {\n            *piVar3 = *piVar3 + -1;\n            piVar3 = fcn.004026cc();\n            var_14h = var_10h;\n            if (iVar5 < var_10h) {\n                var_14h = iVar5;\n            }\n            if (iVar4 == 0) {\n                fcn.004028c8();\n            }\n            else {\n                fcn.00402c5c();\n                fcn.00404fe4(var_14h);\n            }\n        }\n        *piVar3 = 1;\n        piVar3[1] = iVar5;\n        fcn.00402c5c();\n        if ((1 < in_ECX) && (-1 < iVar5 + -1)) {\n            do {\n                fcn.00405004(arg_8h + 1);\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        *in_EAX = piVar3 + 2;\n    }\n    return;\n}\n",
        "token_count": 634
    },
    "00408824": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408824(uint32_t param_1)\n\n{\n    char cVar1;\n    uchar auStack53 [33];\n    uchar *puStack20;\n    uchar uStack16;\n    \n    puStack20 = auStack53 + 1;\n    if (0x1f < param_1) {\n        param_1 = 0x1f;\n    }\n    cVar1 = fcn.0040bf84();\n    if (cVar1 == '\\x01') {\n        param_1 = param_1 - 1;\n    }\n    fcn.00408608();\n    auStack53[param_1 + 1] = 0;\n    uStack16 = 6;\n    fcn.00407c44();\n    return;\n}\n",
        "token_count": 167
    },
    "0040960c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nuint32_t __cdecl fcn.0040960c(double *arg_8h)\n\n{\n    uint16_t *puVar1;\n    uint16_t in_AX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    double *pdVar4;\n    uint16_t in_CX;\n    int32_t iVar5;\n    uint16_t in_DX;\n    int32_t iVar6;\n    uint var_8h;\n    uint8_t var_3h;\n    uint var_2h;\n    \n    var_3h = 0;\n    uVar2 = fcn.004095d0();\n    pdVar4 = (uVar2 & 0x7f) * 3;\n    iVar6 = (uVar2 & 0x7f) * 0x18;\n    if ((((in_AX != 0) && (in_AX < 10000)) && (in_DX != 0)) &&\n       (((in_DX < 0xd && (in_CX != 0)) &&\n        (puVar1 = iVar6 + 0x4640da + in_DX * 2,  pdVar4 = in_DX,  in_CX < *puVar1 || in_CX == *puVar1)))) {\n        iVar3 = in_DX - 1;\n        if (0 < iVar3) {\n            iVar5 = 1;\n            do {\n                in_CX = in_CX + *(iVar6 + 0x4640da + iVar5 * 2);\n                iVar5 = iVar5 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = in_AX - 1;\n        iVar6 = iVar3;\n        if (iVar3 < 0) {\n            iVar6 = in_AX + 2;\n        }\n        *arg_8h = ((iVar3 * 0x16d + (iVar6 >> 2)) - iVar3 / 100) + iVar3 / 400 + in_CX + -0xa955a;\n        var_3h = 1;\n        pdVar4 = arg_8h;\n    }\n    return pdVar4 & 0xffffff00 | var_3h;\n}\n",
        "token_count": 498
    },
    "004099d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004099d0(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY332;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_118h;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack296 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack300 = 0x409b1e;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    fcn.00403f88();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    fcn.00404020();\n    uVar1 = fcn.00404448(&fcn.004099d0::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.004099d0::var_14h, uVar1);\n    uStackY332 = 0x409a53;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        uStackY332 = 0x409a6d;\n        fcn.004041f8();\n        if (in_EAX == 1) {\n            if (*0x470748 == 4) {\n                if (*0x47074c == 1) {\n                    fcn.00404248();\n                    uStackY332 = 0x409ab9;\n                    iVar2 = fcn.0040bf9c();\n                    if (iVar2 == 4) {\n                        fcn.0040c0ac();\n                        fcn.00404180();\n                        fcn.0040c110();\n                        uStackY332 = 0x409afd;\n                        fcn.00404078();\n                    }\n                }\n            }\n            else if (*0x470748 == 0x11) {\n                fcn.0040c110();\n                fcn.004044a8();\n                uStackY332 = in_EDX;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStackY332;\n    fcn.00403f88(0x409b25);\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 607
    },
    "0040bd6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040bd6c(void)\n\n{\n    int32_t iVar1;\n    uint uStack148;\n    uint uStack144;\n    uint32_t uStack140;\n    int32_t iStack136;\n    \n    uStack148 = 0x94;\n    iVar1 = sub.kernel32.dll_GetVersionExA(&uStack148);\n    if (iVar1 != 0) {\n        *0x4640c4 = iStack136;\n        *0x4640c8 = uStack148;\n        *0x4640cc = uStack144;\n        if (iStack136 == 1) {\n            *0x4640d0 = uStack140 & 0xffff;\n        }\n        else {\n            *0x4640d0 = uStack140;\n        }\n        fcn.004041f8();\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0040d7b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d7b0(uint arg_8h, int32_t arg_ch, uint noname_2, int16_t *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack20 = &fcn.0040d7b0::var_1h + 1;\n    uStack24 = 0x40d81d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (arg_ch == 0x400) {\n        fcn.00404210();\n        fcn.00408270();\n        *arg_14h = -(var_1h != '\\0');\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40d824;\n    uStack24 = 0x40d81c;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 261
    },
    "0040d910": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d910(uint arg_8h, int32_t arg_ch, uint noname_2, uint *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    uStack20 = 0x40d974;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.0040830c();\n        fcn.004047b4();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40d97b;\n    uStack20 = 0x40d973;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 220
    },
    "004103ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004103ec(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    int16_t var_ah;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack28 = &var_1h + 1;\n    var_8h = 0;\n    uStack32 = 0x4104a3;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    fcn.00412544();\n    uVar3 = var_8h;\n    iVar2 = (***0x46f96c)(var_8h, 0x400, 0, &var_ah);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.00404210();\n        cVar1 = fcn.00408270();\n        if (cVar1 == '\\0') {\n            fcn.0040e788();\n        }\n    }\n    else if (iVar2 == 0) {\n        var_1h._0_1_ = '\\x01' - (var_ah == 0);\n    }\n    else {\n        fcn.0040e788();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00403f88(0x4104aa);\n    fcn.00404668();\n    return;\n}\n",
        "token_count": 365
    },
    "004104b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004104b4(void)\n\n{\n    uchar *puStack24;\n    uchar auStack20 [16];\n    \n    puStack24 = auStack20;\n    sub.oleaut32.dll_VariantInit();\n    (***0x46faf0)(&puStack24);\n    fcn.0040e788();\n    return 1;\n}\n",
        "token_count": 77
    },
    "00410558": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00410558(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint uStack28;\n    \n    uVar1 = fcn.00413564();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(uStack28 + 0x1c))(0xb);\n        *param_2 = '\\x01' - (uStack28 == 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 138
    },
    "00412e64": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412e64(uint param_1, char param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.0040eab0();\n    }\n    *in_EAX = 0xb;\n    in_EAX[4] = -(param_2 != '\\0');\n    return;\n}\n",
        "token_count": 92
    },
    "004171a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004171a8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x4171ba;\n    fcn.00417230();\n    uStack20 = 0x417224;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0x20) != '\\x01') {\n        puStack16 = &stack0xfffffffc;\n        iVar1 = fcn.00416f20();\n        if (iVar1 != -1) {\n            if (*(in_EAX + 0x20) == '\\x02') {\n                fcn.00416e50();\n            }\n            goto code_r0x0041720e;\n        }\n    }\n    fcn.00416d68();\ncode_r0x0041720e:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41722b;\n    uStack20 = 0x417223;\n    fcn.00417294();\n    return;\n}\n",
        "token_count": 284
    },
    "0041cb98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cb98(char param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if ((param_1 == '\\x01') && (param_2 != 0)) {\n        fcn.0041cb7c();\n    }\n    if (*(in_EAX + 0x10) != 0) {\n        iVar3 = *(*(in_EAX + 0x10) + 8) + -1;\n        while (-1 < iVar3) {\n            piVar2 = fcn.00416ec4();\n            (**(*piVar2 + 0x10))();\n            iVar3 = iVar3 + -1;\n            iVar1 = *(*(in_EAX + 0x10) + 8);\n            if (iVar1 <= iVar3) {\n                iVar3 = iVar1 + -1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "0041f658": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f658(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iStack104;\n    char cStack100;\n    char cStack99;\n    char cStack98;\n    uchar uStack97;\n    uint8_t uStack93;\n    \n    piVar2 = 0x464428;\n    piVar3 = param_2;\n    for (iVar1 = 0xb; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *piVar3 = *piVar2;\n        piVar2 = piVar2 + 1;\n        piVar3 = piVar3 + 1;\n    }\n    if (in_EAX != 0) {\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            param_2[1] = in_EAX;\n            if (699 < iStack104) {\n                *(param_2 + 9) = *(param_2 + 9) | 1;\n            }\n            if (cStack100 == '\\x01') {\n                *(param_2 + 9) = *(param_2 + 9) | 2;\n            }\n            if (cStack99 == '\\x01') {\n                *(param_2 + 9) = *(param_2 + 9) | 4;\n            }\n            if (cStack98 == '\\x01') {\n                *(param_2 + 9) = *(param_2 + 9) | 8;\n            }\n            *(param_2 + 10) = uStack97;\n            fcn.00402d5c();\n            fcn.00402b4c();\n            if ((uStack93 & 0xf) == 1) {\n                *(param_2 + 2) = 2;\n            }\n            else if ((uStack93 & 0xf) == 2) {\n                *(param_2 + 2) = 1;\n            }\n            else {\n                *(param_2 + 2) = 0;\n            }\n            *param_2 = in_EAX;\n        }\n    }\n    return;\n}\n",
        "token_count": 503
    },
    "004200ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004200ac(void)\n\n{\n    fcn.00420014();\n    fcn.00420030();\n    return;\n}\n",
        "token_count": 31
    },
    "004201c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004201c8(void)\n\n{\n    fcn.00420014();\n    fcn.00420030();\n    return;\n}\n",
        "token_count": 32
    },
    "004235c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004235c8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 0x28) == 1) && (*(iVar1 + 0x2a) == 1)) {\n        return CONCAT31(iVar1 + 0x18 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 101
    },
    "0042402c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042402c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    int32_t iStack116;\n    uint uStack112;\n    uint *puStack108;\n    uint lpvObject;\n    int32_t var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 8)) {\n        puStack108 = 0x42404c;\n        fcn.004236bc();\n        puStack108 = 0x42405b;\n        fcn.00402c5c();\n        if (param_2 != 0) {\n            puStack108 = &fcn.0042402c::lpvObject;\n            uStack112 = 0x54;\n            puStack120 = 0x42406b;\n            iStack116 = param_2;\n            sub.gdi32.dll_GetObjectA();\n        }\n        if (*(iVar1 + 4) == 1) {\n            var_4h = *(iVar1 + 0x10);\n            *(iVar1 + 0x10) = 0;\n        }\n        else if (*(iVar1 + 0x10) == *0x470890) {\n            var_4h = *0x470890;\n        }\n        else {\n            puStack120 = 0x424098;\n            var_4h = fcn.00422cd4();\n        }\n        uStack124 = 0x4240c7;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        uVar2 = 0;\n        puStack120 = &stack0xfffffffc;\n        fcn.0042392c(0, 0, &fcn.0042402c::lpvObject);\n        *in_FS_OFFSET = uVar2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 465
    },
    "0042427c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042427c(uint param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint auStack96 [4];\n    uint16_t uStack80;\n    uint16_t uStack78;\n    uint uStack72;\n    uint16_t uStack60;\n    uint16_t uStack58;\n    \n    iVar1 = in_EAX[10];\n    if ((*(iVar1 + 0x3c) == 1) && (*(iVar1 + 0x3e) == 1)) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    if (param_2 != uVar2) {\n        fcn.004236cc();\n        puVar4 = iVar1 + 0x18;\n        puVar5 = auStack96;\n        for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack72 = 0;\n        uStack80 = param_2;\n        uStack78 = uStack80;\n        uStack60 = uStack80;\n        uStack58 = uStack80;\n        fcn.004230d8(auStack96);\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "004242fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004242fc(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uchar auStackY256 [116];\n    uint uStackY140;\n    uint uVar5;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack116;\n    uint var_58h;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 0x10)) {\n        if ((param_2 == 0) && (*(iVar1 + 4) == 1)) {\n            fcn.0041eb50();\n            *(iVar1 + 0x10) = 0;\n        }\n        else {\n            fcn.004236bc();\n            fcn.004236cc();\n            puVar3 = iVar1 + 0x18;\n            puVar4 = &fcn.004242fc::var_58h;\n            for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            puStack116 = 0x424362;\n            var_4h = fcn.00422670(0, &fcn.004242fc::var_58h);\n            uStack120 = 0x424393;\n            uStack124 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff84;\n            uVar5 = 0;\n            uStackY140 = 0x424389;\n            puStack116 = &stack0xfffffffc;\n            fcn.0042392c(0, &stack0xffffff00 | *(iVar1 + 0x70), &fcn.004242fc::var_58h);\n            *in_FS_OFFSET = uVar5;\n        }\n        fcn.00422568();\n        *(in_EAX + 0x22) = 1;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 505
    },
    "004243d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004243d0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (param_2 != in_EAX[0xd]) {\n        if (param_2 == 0x20000000) {\n            *(in_EAX + 0xe) = 0;\n        }\n        else {\n            *(in_EAX + 0xe) = 1;\n        }\n        in_EAX[0xd] = param_2;\n        iVar1 = in_EAX[10];\n        if (1 < *(iVar1 + 4)) {\n            fcn.004236cc();\n            fcn.004230d8(iVar1 + 0x18);\n        }\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "0042b5d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b5d8(uint32_t arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    uint lprc;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    lprc = *arg_10h;\n    uStack16 = arg_10h[1];\n    uStack12 = arg_10h[2];\n    uStack8 = arg_10h[3];\n    fcn.004201c8();\n    if (arg_ch == '\\x01') {\n        sub.user32.dll_OffsetRect(&lprc, 1, 1);\n        fcn.0041f8e0();\n        uVar1 = fcn.00404248(&lprc, arg_8h | 5);\n        uVar1 = fcn.00404448(uVar1);\n        uVar1 = fcn.0042084c(uVar1);\n        sub.user32.dll_DrawTextA(uVar1);\n        sub.user32.dll_OffsetRect(&lprc, 0xffffffff, 0xffffffff);\n        fcn.0041f8e0();\n        uVar1 = fcn.00404248(&lprc, arg_8h | 5);\n        uVar1 = fcn.00404448(uVar1);\n        uVar1 = fcn.0042084c(uVar1);\n        sub.user32.dll_DrawTextA(uVar1);\n    }\n    else {\n        uVar1 = fcn.00404248(&lprc, arg_8h | 5);\n        uVar1 = fcn.00404448(uVar1);\n        uVar1 = fcn.0042084c(uVar1);\n        sub.user32.dll_DrawTextA(uVar1);\n    }\n    return;\n}\n",
        "token_count": 403
    },
    "0042f1d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f1d0(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x42f2bb;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h_00 = 0x42f202;\n    cVar1 = fcn.0042f448();\n    if (cVar1 != '\\0') {\n        if ((((arg_ch == 0x102) || (arg_ch == 0x105)) || (arg_ch == 0x201)) ||\n           (((arg_ch == 10 || (arg_ch == 8)) || ((arg_ch == 1 || (arg_ch == 0x101)))))) {\n            arg_8h_00 = 0;\n            fcn.00407fd4();\n            cVar1 = fcn.0042f3a0(arg_8h_00);\n        }\n        else {\n            cVar1 = '\\x01';\n        }\n        if (cVar1 != '\\0') {\n            *(in_EAX + 0x10) = 1;\n            fcn.00407fd4();\n            fcn.00403fdc();\n            fcn.0042eb04(arg_ch, arg_8h);\n            uVar2 = fcn.00404448();\n            sub.user32.dll_WinHelpA(in_EDX, uVar2);\n        }\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    uStack44 = 0x42f2c2;\n    uStack48 = 0x42f2ba;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 472
    },
    "00432760": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00432760(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    cVar1 = fcn.004033dc();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.0043b420();\n        uVar2 = fcn.0043b420(uVar2);\n        iVar3 = sub.user32.dll_IsChild(uVar2);\n        return iVar3 != 0;\n    }\n    return false;\n}\n",
        "token_count": 118
    },
    "00432a94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.00432a94(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(*0x470b34 + 4) != 0) {\n        iVar1 = fcn.00432960(*0x470b34 + 0xc, *(*0x470b34 + 4));\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 102
    },
    "00434124": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434124(char param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    fcn.0041cb98();\n    if (param_1 == '\\x01') {\n        if (param_2 == in_EAX[0x1f]) {\n            fcn.00434bfc();\n        }\n        else {\n            iVar1 = (**(*in_EAX + 0x3c))();\n            if (param_2 == iVar1) {\n                fcn.00433fc8();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00438244": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438244(uint param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.0043527c();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x2000;\n    }\n    cVar1 = fcn.004352ac();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x4000;\n    }\n    cVar1 = fcn.0040344c();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0040344c();\n        if (cVar1 == '\\0') {\n            *param_2 = *param_2 | 0x1000;\n        }\n        else {\n            cVar1 = fcn.0040344c();\n            if (cVar1 == '\\x01') {\n                *param_2 = *param_2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "0043cf60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043cf60(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    bool bVar3;\n    uint x;\n    uint y;\n    uint var_4h;\n    \n    bVar3 = false;\n    cVar1 = fcn.00441b30();\n    if ((cVar1 != '\\0') && (in_EDX != *(in_EAX + 0x6c))) {\n        fcn.0043cfc4();\n        *(in_EAX + 0x6c) = in_EDX;\n        fcn.0043cd50(&x);\n        iVar2 = sub.comctl32.dll_ImageList_DragEnter(*(in_EAX + 0x6c), x, y);\n        bVar3 = iVar2 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 204
    },
    "0043cfe8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0043cfe8(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uStack28;\n    uint *puVar4;\n    uint auStack20 [2];\n    \n    puVar4 = auStack20;\n    cVar1 = fcn.00441b30();\n    if (cVar1 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        fcn.0043cd50(auStack20);\n        uStack28 = auStack20[0];\n        iVar2 = sub.comctl32.dll_ImageList_DragMove(puVar4);\n        uVar3 = iVar2 != 0;\n    }\n    return CONCAT44(uStack28, uVar3);\n}\n",
        "token_count": 171
    },
    "0043d2c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d2c8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.0043d358();\n        }\n        else {\n            fcn.0040b564();\n            fcn.004039c4();\n        }\n        return;\n    }\n    fcn.0043d358();\n    return;\n}\n",
        "token_count": 152
    },
    "0043d310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d310(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.0043d3c4();\n        }\n        else {\n            fcn.0040b564();\n            fcn.004039c4();\n        }\n        return;\n    }\n    fcn.0043d3c4();\n    return;\n}\n",
        "token_count": 154
    },
    "0043d898": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d898(int32_t param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x43d8ad;\n        in_EAX = fcn.0040355c();\n        param_1 = extraout_ECX;\n    }\n    puStack48 = 0x43d8c0;\n    fcn.00403220();\n    in_EAX[3] = 4;\n    in_EAX[5] = param_1;\n    in_EAX[0x1c] = 0x40000;\n    in_EAX[6] = 0xc;\n    if ((*(param_1 + 0x5b) == '\\x01') || (*(param_1 + 0x5b) == '\\x02')) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    *(in_EAX + 7) = uVar1;\n    puStack48 = 0x43d910;\n    iVar2 = fcn.0043d240();\n    in_EAX[0x19] = iVar2;\n    puStack48 = 0x43d922;\n    iVar2 = fcn.0041ff04();\n    in_EAX[4] = iVar2;\n    puStack48 = 0x43d936;\n    fcn.00425080();\n    puStack48 = 0x43d93f;\n    fcn.00420080();\n    puStack48 = 0x43d947;\n    fcn.0043da68();\n    uStack52 = 0x43d9a4;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    iVar2 = fcn.00438150();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00438114(0);\n            (**(*in_EAX + 8))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0043d474();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x43d9ab;\n    uStack52 = 0x43d9a3;\n    fcn.0043da6c();\n    return;\n}\n",
        "token_count": 602
    },
    "0043f270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043f270(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0043fd70();\n    fcn.0043f324();\n    sub.user32.dll_ReleaseDC(*(in_EAX + 0x5c), *(in_EAX + 0x58));\n    if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n        fcn.0043d7b4();\n    }\n    else {\n        fcn.0043d7b4();\n    }\n    fcn.0043f19c();\n    fcn.0043db40(0x43f314);\n    *(in_EAX + 0x60) = 0;\n    return;\n}\n",
        "token_count": 172
    },
    "0043f324": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043f324(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n            iVar1 = fcn.0043d358();\n            iVar2 = *(in_EAX + 0xc) >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar2 = *(in_EAX + 0x54) - iVar2;\n            iVar3 = fcn.0043d3c4(iVar1, iVar2);\n            iVar3 = iVar3 + iVar1;\n            iVar4 = iVar2 + *(in_EAX + 0xc);\n        }\n        else {\n            iVar1 = *(in_EAX + 0xc) >> 1;\n            if (iVar1 < 0) {\n                iVar1 = iVar1 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar1 = *(in_EAX + 0x50) - iVar1;\n            iVar2 = fcn.0043d358(iVar1);\n            iVar3 = iVar1 + *(in_EAX + 0xc);\n            iVar4 = fcn.0043d3c4(iVar1, iVar2, iVar3);\n            iVar4 = iVar4 + iVar2;\n        }\n        iVar4 = fcn.004200e0(iVar1, iVar2, iVar3, iVar4);\n        iVar3 = *(in_EAX + 0x58);\n        uVar5 = sub.gdi32.dll_SelectObject(iVar3, iVar4);\n        sub.gdi32.dll_PatBlt(*(in_EAX + 0x58), iVar3, iVar4, iVar1 - iVar3, iVar2 - iVar4, 0x5a0049);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 0x58), uVar5);\n    }\n    return;\n}\n",
        "token_count": 508
    },
    "0043f7ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f7ac(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    piVar3 = arg_8h + -4;\n    iVar1 = *(*piVar3 + 0x18);\n    if (*(*(*(*piVar3 + 0x60) + 0x14) + 0x10) == '\\x01') {\n        iVar2 = fcn.0043d358();\n        if (*(*piVar3 + 0x54) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x54) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.0043f4a0();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x54)) {\n            *(*piVar3 + 0x54) = iVar2 - iVar1;\n        }\n    }\n    else {\n        iVar2 = fcn.0043d358();\n        if (*(*piVar3 + 0x50) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x50) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.0043f4a0();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x50)) {\n            *(*piVar3 + 0x50) = iVar2 - iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 330
    },
    "0043fc24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043fc24(uint param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403220();\n    *(in_EAX + 4) = 1;\n    *(in_EAX + 8) = 5;\n    if (((**0x46fc18 == 2) && (3 < **0x46f858)) ||\n       ((**0x46fc18 == 1 && ((4 < **0x46f858 || ((**0x46f858 == 4 && (9 < **0x46fa98)))))))) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    *(in_EAX + 0xd) = uVar1;\n    fcn.0043fd98();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 283
    },
    "0043fcfc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043fcfc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = (***0x46f870)(0x13);\n    *(in_EAX + 0xc) = '\\x01' - (iVar1 == 0);\n    return;\n}\n",
        "token_count": 71
    },
    "0043fd18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043fd18(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char cVar2;\n    \n    iVar1 = (***0x46f870)(0x4b);\n    cVar2 = '\\x01' - (iVar1 == 0);\n    *(in_EAX + 0x20) = cVar2;\n    if (cVar2 != '\\0') {\n        sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "004412c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004412c4(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 0x6a)) {\n        if (in_EAX[0x17] != 0) {\n            cVar1 = *(in_EAX[0x17] + 0x58);\n            if (cVar1 == '\\x01') {\n                *(in_EAX + 0x6a) = param_2;\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                param_2 = '\\x01';\n            }\n        }\n        iVar3 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                piVar2 = fcn.00403400();\n                if (piVar2 != NULL) {\n                    (**(*piVar2 + 0x54))();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *(in_EAX + 0x6a) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "00441a78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00441a78(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x441b25;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.00403220();\n    *(in_EAX + 0x4c) = uVar1;\n    if (((*(in_EAX + 0x30) < 1) || (0x8000 < *(in_EAX + 0x30))) || (*(in_EAX + 0x34) < 1)) {\n        fcn.00405d0c();\n        fcn.0040b564();\n        fcn.004039c4();\n    }\n    *(in_EAX + 0x38) = 4;\n    *(in_EAX + 0x41) = 1;\n    fcn.00442960();\n    *(in_EAX + 0x43) = 0;\n    *(in_EAX + 0x44) = 0x1fffffff;\n    *(in_EAX + 0x48) = 0x1fffffff;\n    uVar1 = fcn.00422f44();\n    *(in_EAX + 0x50) = uVar1;\n    fcn.00441b44();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x441b2c;\n    uStack20 = 0x441b24;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 390
    },
    "00441d14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441d14(int32_t *param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.004428e8();\n    if (param_2 == NULL) {\n        (**(**(in_EAX + 0x50) + 100))();\n    }\n    else {\n        cVar1 = fcn.00423578();\n        if (cVar1 == '\\x01') {\n            (**(*param_2 + 100))();\n        }\n        else {\n            (**(*param_1 + 8))();\n            (**(*param_1 + 0x6c))();\n            (**(*param_1 + 100))();\n        }\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "0044ca44": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044ca44(uint arg_8h)\n\n{\n    int16_t in_AX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (in_AX == 1) {\n        uVar3 = 0x200000;\n    }\n    uVar1 = fcn.0043b420(0xfffffff0);\n    uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n    return uVar2 & 0xffffff00 | (uVar2 & uVar3) != 0;\n}\n",
        "token_count": 144
    },
    "0044caf4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0044caf4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_6h;\n    \n    uVar1 = fcn.0043b420(0xfffffff0);\n    sub.user32.dll_GetWindowLongA(uVar1);\n    if (*(in_EAX + 0x18) == '\\x01') {\n        iVar2 = fcn.0044ca78(&stack0xfffffffc);\n        iVar3 = fcn.0043469c();\n        iVar2 = iVar2 + iVar3;\n    }\n    else {\n        iVar2 = fcn.0044ca78(&stack0xfffffffc);\n        iVar3 = fcn.00434658();\n        iVar2 = iVar2 + iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 194
    },
    "0044cb8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044cb8c(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_4h;\n    \n    var_1ch = 0x1c;\n    var_18h = 0x10;\n    iVar1 = *(*(arg_8h + -8) + 6);\n    uVar2 = fcn.0043b420(*(*(arg_8h + -4) + 0x18) == '\\x01', &var_1ch);\n    iVar3 = (***0x46f714)(uVar2);\n    iVar4 = iVar1;\n    if (iVar3 != 0) {\n        iVar4 = var_4h;\n    }\n    return iVar4;\n}\n",
        "token_count": 204
    },
    "00451370": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451370(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar *in_EDX;\n    \n    if (*(in_EAX + 0x150) == '\\x01') {\n        *in_EDX = 1;\n        *in_ECX = *(in_EAX + 0x158);\n    }\n    else {\n        *in_EDX = 0;\n        fcn.00403fdc();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00453e28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453e28(void)\n\n{\n    char in_AL;\n    uint uStack8;\n    int32_t iStack4;\n    \n    uStack8 = 8;\n    iStack4 = -(in_AL != '\\0');\n    sub.user32.dll_SystemParametersInfoA(0x49, 8, &uStack8, 0);\n    return;\n}\n",
        "token_count": 81
    },
    "00455070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00455070(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(in_EAX + 0xb0) != 0) {\n        iVar1 = sub.user32.dll_IsDialogMessageA(*(in_EAX + 0xb0), param_2);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 113
    },
    "00455df8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455df8(int32_t arg_8h)\n\n{\n    uint8_t in_AL;\n    int32_t iVar1;\n    \n    iVar1 = sub.user32.dll_IsWindowVisible(*(*(arg_8h + -4) + 0x30));\n    if ((1U - (iVar1 == 0) == *0x464d68) && (in_AL != *0x464d68)) {\n        sub.user32.dll_SetWindowPos(*(*(arg_8h + -4) + 0x30), 0, 0, 0, 0, 0, *(in_AL * 2 + 0x464d6c));\n        *0x464d68 = in_AL;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "004599e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004599e8(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    \n    cVar1 = '\\x01' - (arg_ch == 0);\n    if (cVar1 != *(arg_8h + 0x96)) {\n        *(arg_8h + 0x96) = cVar1;\n        (**(*arg_8h + 0x7c))();\n    }\n    return 0;\n}\n",
        "token_count": 110
    },
    "004597ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004597ec(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    cVar1 = fcn.004033dc();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x22f) == '\\x01')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 79
    },
    "0045cf58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045cf58(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint uStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uVar2 = 0;\n    if (param_1 != 0) {\n        cVar1 = fcn.0045cea4();\n        if (cVar1 == '\\x01') {\n            uStack32 = *(in_EAX + 0x34);\n            uStack24 = 0;\n            uStack20 = 0;\n            iStack28 = param_1;\n            uVar2 = sub.user32.dll_DdeCreateDataHandle(*(*0x470c3c + 0x44), &uStack32, 0x10, 0, 0, 1, 0);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 211
    },
    "0045d458": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d458(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x45d4cc;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0041cccc();\n    fcn.00404020();\n    fcn.00404020();\n    uStack32 = 0x45d495;\n    iVar1 = fcn.00404248();\n    if ((iVar1 != 0) && (*(in_EAX + 0xc5) != '\\x01')) {\n        uStack32 = 0;\n        fcn.0045d7c8();\n    }\n    *in_FS_OFFSET = uStack32;\n    uStack24 = 0x45d4d3;\n    uStack28 = 0x45d4cb;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 264
    },
    "0045e964": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045e964(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffefcc;\n    uint uStack4124;\n    uint uStack4120;\n    uchar *puStack4116;\n    uint var_1004h;\n    uint var_1000h;\n    \n    puStack4116 = &stack0xfffffffc;\n    uStack4120 = 0x45ea07;\n    uStack4124 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack4124;\n    puVar1 = &stack0xfffffffc;\n    if (arg_8h == 1) {\n        sub.user32.dll_DdeQueryStringA(*(*0x470c3c + 0x44), arg_10h, &var_1000h, 0x1000, 0x3ec);\n        fcn.004041f8();\n        in_stack_ffffefcc = 0;\n        iVar2 = fcn.0045eb4c(0);\n        puVar1 = puStack4116;\n        if (iVar2 != 0) {\n            fcn.0045e52c();\n            puVar1 = puStack4116;\n        }\n    }\n    puStack4116 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffefcc;\n    fcn.00403f88(0x45ea0e);\n    return;\n}\n",
        "token_count": 339
    },
    "0045ea38": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ea38(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffefc4;\n    uint uStack4132;\n    uint uStack4128;\n    uchar *puStack4124;\n    uint var_100ch;\n    uint var_1008h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4124 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack4128 = 0x45eb39;\n    uStack4132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack4132;\n    var_4h = 0;\n    iVar1 = fcn.0045ec70();\n    if (iVar1 == 0) {\n        sub.user32.dll_DdeQueryStringA(*(*0x470c3c + 0x44), arg_ch, &var_1008h, 0x1000, 0x3ec);\n        fcn.004041f8();\n        in_stack_ffffefc4 = 0;\n        iVar1 = fcn.0045eb4c(0);\n        if ((iVar1 != 0) && (arg_8h == 1)) {\n            (**(**(iVar1 + 0x30) + 0x1c))();\n            uStack4132 = 0;\n            iVar1 = fcn.00404248(0, arg_ch, 1);\n            uVar2 = fcn.00404448(iVar1 + 1);\n            in_stack_ffffefc4 = *(*0x470c3c + 0x44);\n            var_4h = sub.user32.dll_DdeCreateDataHandle(in_stack_ffffefc4, uVar2);\n        }\n    }\n    else {\n        var_4h = fcn.0045ed3c();\n    }\n    *in_FS_OFFSET = in_stack_ffffefc4;\n    fcn.00403f88(0x45eb40);\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 474
    },
    "0045ed3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ed3c(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack4128;\n    uint uStack4124;\n    uchar *puStack4120;\n    uint var_1004h;\n    uint var_4h;\n    \n    puStack4120 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack4124 = 0x45edf1;\n    uStack4128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack4128;\n    uVar3 = *(*0x470c3c + 0x44);\n    sub.user32.dll_DdeQueryStringA(uVar3, *(in_EAX + 0x38), &var_1004h, 0x1000, 0x3ec);\n    fcn.00404078();\n    if (param_2 == 1) {\n        (**(**(*(in_EAX + 0x3c) + 0x30) + 0x1c))();\n        uStack4124 = 0;\n        uStack4128 = 1;\n        iVar1 = fcn.00404248(0, *(in_EAX + 0x38));\n        uVar2 = fcn.00404448(iVar1 + 1);\n        uVar3 = *(*0x470c3c + 0x44);\n        sub.user32.dll_DdeCreateDataHandle(uVar3, uVar2);\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00403f88(0x45edf8);\n    return;\n}\n",
        "token_count": 389
    },
    "00408358": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00408358(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0xffffffff;\n    if (((param_2 & 3) < 3) && ((param_2 & 0xf0) < 0x41)) {\n        uVar1 = fcn.00404448(*((param_2 & 3) * 4 + 0x464140), *(((param_2 & 0xf0) >> 4) * 4 + 0x46414c), 0, 3, 0x80, 0);\n        uVar1 = sub.kernel32.dll_CreateFileA(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 166
    },
    "00408474": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.00408474(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00404248();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    while (cVar1 = fcn.0040bf60(),  cVar1 == '\\x02') {\n        iVar2 = iVar2 + -1;\n    }\n    return in_EAX + -1 + iVar2;\n}\n",
        "token_count": 113
    },
    "004084a4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004084a4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.00404248();\n    fcn.00404448();\n    do {\n        if (iVar2 < 1) {\n            return iVar2;\n        }\n        if ((*(param_2 + -1 + iVar2) != '\\0') && (iVar3 = fcn.00408760(),  iVar3 != 0)) {\n            cVar1 = fcn.0040bf60();\n            if (cVar1 != '\\x02') {\n                return iVar2;\n            }\n            iVar2 = iVar2 + -1;\n        }\n        iVar2 = iVar2 + -1;\n    } while( true );\n}\n",
        "token_count": 185
    },
    "00408f5d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408f5d(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    char *unaff_EDI;\n    char *pcVar5;\n    char *pcVar6;\n    uint var_2ch;\n    uint var_5h;\n    \n    uVar3 = *(unaff_EBP + 8);\n    if (0x11 < uVar3) {\n        uVar3 = 0x12;\n    }\n    iVar2 = *(unaff_EBP + -0x2c);\n    if (iVar2 < 1) {\n        pcVar5 = unaff_EDI + 1;\n        *unaff_EDI = '0';\n    }\n    else {\n        iVar4 = 0;\n        if (*(unaff_EBP + 0x10) != '\\x02') {\n            iVar4 = (*(unaff_EBP + -0x2c) - 1U) % 3 + 1;\n        }\n        while( true ) {\n            pcVar6 = unaff_EDI;\n            cVar1 = fcn.00408eb2();\n            pcVar5 = pcVar6 + 1;\n            *pcVar6 = cVar1;\n            iVar2 = extraout_ECX + -1;\n            uVar3 = extraout_EDX;\n            if (iVar2 == 0) break;\n            iVar4 = iVar4 + -1;\n            unaff_EDI = pcVar5;\n            if ((iVar4 == 0) && (*(unaff_EBP + -6) != '\\0')) {\n                *pcVar5 = *(unaff_EBP + -6);\n                iVar4 = 3;\n                unaff_EDI = pcVar6 + 2;\n            }\n        }\n    }\n    if (uVar3 != 0) {\n        pcVar6 = pcVar5;\n        if (*(unaff_EBP + -5) != '\\0') {\n            pcVar6 = pcVar5 + 1;\n            *pcVar5 = *(unaff_EBP + -5);\n        }\n        for (; iVar2 != 0; iVar2 = iVar2 + 1) {\n            *pcVar6 = '0';\n            uVar3 = uVar3 - 1;\n            if (uVar3 == 0) {\n                return;\n            }\n            pcVar6 = pcVar6 + 1;\n        }\n        do {\n            cVar1 = fcn.00408eb2();\n            *pcVar6 = cVar1;\n            pcVar6 = pcVar6 + 1;\n        } while (extraout_EDX_00 != 1);\n    }\n    return;\n}\n",
        "token_count": 644
    },
    "00409b38": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409b38(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char **in_EDX;\n    uint *in_FS_OFFSET;\n    char **ppcStackY328;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack296 = 0x409c16;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    fcn.00403f88();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    if (in_EAX < 3) {\n        fcn.00404020();\n    }\n    else {\n        fcn.00404020();\n    }\n    uVar1 = fcn.00404448(&fcn.00409b38::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.00409b38::var_14h, uVar1);\n    ppcStackY328 = 0x409bc9;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        ppcStackY328 = 0x409bdf;\n        fcn.004041f8();\n        if ((in_EAX == 1) && (**in_EDX == '0')) {\n            fcn.00404248();\n            fcn.004044a8();\n            ppcStackY328 = in_EDX;\n        }\n    }\n    *in_FS_OFFSET = ppcStackY328;\n    fcn.00403f88(0x409c1d);\n    return;\n}\n",
        "token_count": 492
    },
    "0040c4b0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040c4b0(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uchar uVar6;\n    uint lpCharType;\n    uint lpSrcStr;\n    \n    *0x470744 = 0x409;\n    *0x470748 = 9;\n    *0x47074c = 1;\n    uVar2 = sub.kernel32.dll_GetThreadLocale_1();\n    if (uVar2 != 0) {\n        *0x470744 = uVar2;\n    }\n    if (uVar2 != 0) {\n        *0x470748 = uVar2 & 0x3ff;\n        *0x47074c = (uVar2 & 0xffff) >> 10;\n    }\n    puVar4 = 0x40c604;\n    puVar5 = 0x46410c;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    if (*0x4640c4 == 2) {\n        cVar1 = fcn.0040c498();\n        uVar6 = cVar1 == '\\0';\n        if (uVar6) {\n            fcn.0040c438(&stack0xfffffffc);\n            fcn.00402d80();\n            *0x470750 = !uVar6;\n            if (*0x470750) {\n                *0x470751 = 0;\n            }\n            else {\n                iVar3 = 0x80;\n                puVar4 = &lpSrcStr;\n                do {\n                    *puVar4 = iVar3;\n                    iVar3 = iVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                } while (iVar3 != 0x100);\n                sub.kernel32.dll_GetStringTypeExA(*0x470744, 2, &lpSrcStr, 0x80, &lpCharType);\n                iVar3 = 0x80;\n                puVar4 = &lpCharType;\n                do {\n                    *0x470751 = *puVar4 == 2;\n                    if (*0x470751) {\n                        return;\n                    }\n                    puVar4 = puVar4 + 2;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n        }\n        else {\n            *0x470751 = 0;\n            *0x470750 = 0;\n        }\n    }\n    else {\n        iVar3 = sub.user32.dll_GetSystemMetrics(0x4a);\n        *0x470751 = iVar3 != 0;\n        iVar3 = sub.user32.dll_GetSystemMetrics(0x2a);\n        *0x470750 = iVar3 != 0;\n        if (*0x470750) {\n            fcn.0040c438(&stack0xfffffffc);\n        }\n    }\n    return;\n}\n",
        "token_count": 690
    },
    "00413b1c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413b1c(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    uint8_t uVar4;\n    \n    pcVar1 = **param_2;\n    uVar4 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar4 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar2 & 0xffffff);\n        *puVar3 = param_1;\n        if ((1 < uVar4) && (*puVar3 = param_1,  3 < uVar4)) {\n            *puVar3 = param_1;\n        }\n    }\n    else if (*(param_2 + 0xb) < 0xfe) {\n        (*pcVar2)();\n    }\n    else {\n        (**(pcVar2 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "0041d4c4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d4c4(int32_t arg_8h, uint arg_ch, uint noname_2, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41d52e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    if ((arg_14h < 0) || (2 < arg_14h)) {\n        uVar2 = 0x80030001;\n        *in_FS_OFFSET = uStack36;\n    }\n    else {\n        iVar1 = (**(**(arg_8h + 0xc) + 0x14))();\n        if (arg_18h != NULL) {\n            *arg_18h = iVar1;\n            arg_18h[1] = iVar1 >> 0x1f;\n        }\n        uVar2 = 0;\n        *in_FS_OFFSET = uStack36;\n    }\n    return uVar2;\n}\n",
        "token_count": 287
    },
    "00432960": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00432960(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint lParam;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if (in_EAX != 0) {\n        uVar1 = sub.user32.dll_SendMessageA();\n    }\n    return uVar1;\n}\n",
        "token_count": 114
    },
    "00448128": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.00448128(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar7 = 0;\n    piVar4 = fcn.0044806c();\n    if (piVar4 == NULL) {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            cVar3 = fcn.004033dc();\n            if (cVar3 != '\\0') {\n                fcn.00447140();\n            }\n        }\n    }\n    else {\n        if ((*(piVar4 + 7) & 0x10) == 0) {\n            fcn.00447140();\n        }\n        (**(*piVar4 + 0x44))();\n        uVar5 = fcn.004477d8();\n        uVar2 = fcn.00447cd4();\n        if ((uVar5 | uVar2) != 0) {\n            fcn.0044507c();\n        }\n        uVar1 = *(**0x46fa30 + 0x44);\n        uVar5 = uVar5 & 0xffffff00;\n        if (((uVar1 != 0) && (uVar5 = uVar1,  *(uVar1 + 0x22f) == '\\x02')) && (piVar4 == *(uVar1 + 600))) {\n            iVar6 = sub.user32.dll_SendMessageA(*(uVar1 + 0x254), 0x234, 0, 0);\n            if (iVar6 != 0) {\n                uVar7 = fcn.0043b420();\n                sub.user32.dll_DrawMenuBar(uVar7);\n            }\n        }\n        uVar7 = CONCAT31(uVar5 >> 8, 1);\n    }\n    return uVar7;\n}\n",
        "token_count": 446
    },
    "0044f00c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f00c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0044f4e8();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0044f534();\n            if (*(iVar2 + 0x22b) == '\\x02') {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 128
    },
    "0044fac0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0044fac0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0xff000005;\n    if (*(in_EAX + 0x22f) == '\\x02') {\n        uVar1 = 0xff00000c;\n    }\n    return uVar1;\n}\n",
        "token_count": 78
    },
    "004576ec": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004576ec(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x457709;\n    fcn.00429320();\n    if (*(in_EAX + 0x182) == '\\x02') {\n        puStack24 = 0x45771d;\n        cVar1 = fcn.00434e6c();\n        if (cVar1 != '\\0') {\n            uStack28 = 0x457745;\n            uStack32 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe0;\n            puStack24 = &stack0xfffffffc;\n            fcn.0040344c();\n            *in_FS_OFFSET = uStack32;\n        }\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "00421120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421120(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint lpSystemInfo;\n    int16_t iStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = param_2;\n    var_4h = in_EAX;\n    sub.kernel32.dll_GetSystemInfo(&lpSystemInfo);\n    var_8h = var_8h + -1;\n    if (-1 < var_8h) {\n        if (iStack16 == 3) {\n            do {\n                uVar1 = *(var_4h + var_8h * 4);\n                *(var_4h + var_8h * 4) = uVar1 >> 0x10 & 0xff | CONCAT11(uVar1, uVar1 >> 8) << 8;\n                var_8h = var_8h + -1;\n            } while (-1 < var_8h);\n        }\n        else {\n            do {\n                uVar1 = *(var_4h + var_8h * 4);\n                *(var_4h + var_8h * 4) = ((uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18) >> 8;\n                var_8h = var_8h + -1;\n            } while (-1 < var_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "00437dbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00437dbc(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_5h;\n    \n    puStack32 = 0x437dd3;\n    iVar1 = fcn.00438150();\n    if (iVar1 == 0) {\n        return;\n    }\n    puStack32 = 0x437de7;\n    iVar1 = fcn.00403220();\n    puStack32 = 0x437df2;\n    fcn.00437cb8();\n    uStack36 = 0x437ea3;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar2 = fcn.00438150();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00438114();\n            if (*(iVar3 + 0x5b) - 3U < 2) {\n                fcn.00438114();\n                fcn.00416d68();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0040344c();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x437eaa;\n    while (0 < *(iVar1 + 8)) {\n        uStack36 = 0x437e63;\n        iVar2 = fcn.00416ec4();\n        if (*(iVar2 + 0x5b) == '\\x03') {\n            uStack36 = 0x437e70;\n            fcn.00434168();\n        }\n        else {\n            uStack36 = 0x437e79;\n            fcn.00434168();\n        }\n        uStack36 = 0x437e88;\n        fcn.00416db4();\n    }\n    uStack36 = 0x437e9a;\n    fcn.00403250();\n    uStack36 = 0x437ea2;\n    fcn.00437cc0();\n    return;\n}\n",
        "token_count": 500
    },
    "00403654": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403654(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "00403a70": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.00403a70(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = param_1;\n    (*(param_2 + 5))();\n    return;\n}\n",
        "token_count": 54
    },
    "0041972c": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041972c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4197a3;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00405848();\n    if (param_2 != 0) {\n        iVar2 = fcn.0041397c();\n        fcn.00405848(iVar2 + 5);\n        cVar1 = fcn.0040cf34();\n        if (cVar1 == '\\0') {\n            fcn.00405848();\n        }\n    }\n    fcn.0041406c();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4197aa;\n    uStack24 = 0x4197a2;\n    fcn.00405848();\n    return;\n}\n",
        "token_count": 255
    },
    "0041d904": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041d904(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return param_2 - (in_EAX + 5);\n}\n",
        "token_count": 50
    },
    "0043e684": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e684(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 0x14) + 0x5b) - 1U < 2) {\n        fcn.0043e5a4(&stack0xfffffffc);\n        fcn.0043e5fc(*(arg_8h + 0xc) + -2, &stack0xfffffffc);\n        fcn.0043e5fc(*(arg_8h + 0xc) + -2, &stack0xfffffffc);\n    }\n    else {\n        fcn.0043e5a4(&stack0xfffffffc);\n        fcn.0043e5fc(*(arg_8h + 4) + 5, &stack0xfffffffc);\n        fcn.0043e5fc(*(arg_8h + 4) + 8, &stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "00401c44": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401c44(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *in_EAX;\n    \n    puVar1 = (param_2 - 4) + in_EAX;\n    if (0xf < param_2) {\n        *puVar1 = 0x80000007;\n        fcn.00401e18();\n        return;\n    }\n    if (3 < param_2) {\n        *in_EAX = param_2 | 0x80000002;\n        *puVar1 = param_2 | 0x80000002;\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00401c74": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00401c74(void)\n\n{\n    int32_t in_EAX;\n    \n    *0x4705b4 = *0x4705b4 + 1;\n    *0x4705b8 = *0x4705b8 + ((*(in_EAX + -4) & 0x7ffffffc) - 4);\n    fcn.00402288();\n    return;\n}\n",
        "token_count": 91
    },
    "00401d68": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t fcn.00401d68(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uStack28;\n    int32_t iStack27;\n    int32_t iStack23;\n    \n    uStack28 = 0;\n    uVar1 = fcn.00401c14();\n    uVar2 = uVar1;\n    if (uVar1 != 0) {\n        if (in_EAX - *(uVar1 + 8) < 0xc) {\n            uVar2 = fcn.00401980();\n        }\n        else {\n            uVar2 = fcn.00401980();\n        }\n        if (iStack27 != 0) {\n            fcn.00401c44();\n            if (iStack27 + iStack23 < *(uVar1 + 8) + *(uVar1 + 0xc)) {\n                fcn.00401c98();\n            }\n            uVar2 = fcn.00401490();\n            uStack28 = 1;\n        }\n    }\n    return uVar2 & 0xffffff00 | uStack28;\n}\n",
        "token_count": 257
    },
    "00401eec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00401eec(void)\n\n{\n    uint32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    int32_t iStack16;\n    \n    uStack28 = *in_EAX;\n    uStack24 = in_EAX[1];\n    fcn.00401ea0();\n    fcn.00401420();\n    if (uStack20 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (uStack20 < uStack28) {\n            iVar2 = fcn.00401cc0();\n            uStack28 = uStack28 - iVar2;\n            uStack24 = uStack24 + iVar2;\n        }\n        if (uStack28 + uStack24 < uStack20 + iStack16) {\n            iVar2 = fcn.00401d30();\n            uStack24 = uStack24 + iVar2;\n        }\n        if (uStack20 + iStack16 == uStack28 + uStack24) {\n            fcn.00401c44();\n            uStack24 = uStack24 - 4;\n        }\n        *0x470620 = uStack28;\n        *0x47061c = uStack24;\n        uVar1 = CONCAT31(uStack24 >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 316
    },
    "00402004": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t * fcn.00402004(void)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    uint32_t in_EAX;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    \n    while ((puVar1 = *0x470618,  puVar3 = *0x470610,  (*0x470610)[2] < in_EAX &&\n           (uVar4 = (*0x470618)[2],  puVar3 = *0x470618,  uVar4 < in_EAX))) {\n        (*0x470618)[2] = in_EAX;\n        puVar3 = puVar1;\n        do {\n            puVar3 = puVar3[1];\n        } while (puVar3[2] < in_EAX);\n        (*0x470618)[2] = uVar4;\n        puVar1 = puVar3;\n        if ((puVar3 != *0x470618) ||\n           ((in_EAX < 0x1001 && (puVar3 = fcn.00401fd8(),  puVar1 = *0x470618,  puVar3 != NULL)))) break;\n        cVar2 = fcn.00401f78();\n        puVar3 = *0x470620;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        if (in_EAX <= *0x47061c) {\n            *0x47061c = *0x47061c - in_EAX;\n            if (*0x47061c < 0xc) {\n                in_EAX = in_EAX + *0x47061c;\n                *0x47061c = 0;\n            }\n            *0x470620 = *0x470620 + in_EAX;\n            *puVar3 = in_EAX | 2;\n            *0x4705b4 = *0x4705b4 + 1;\n            *0x4705b8 = *0x4705b8 + (in_EAX - 4);\n            return puVar3 + 1;\n        }\n    }\n    *0x470618 = puVar1;\n    fcn.00401bb0();\n    uVar4 = puVar3[2];\n    if (uVar4 - in_EAX < 0xc) {\n        if (puVar3 == *0x470618) {\n            *0x470618 = puVar3[1];\n        }\n        *(puVar3 + uVar4) = *(puVar3 + uVar4) & 0xfffffffe;\n    }\n    else {\n        fcn.00401e18();\n        uVar4 = in_EAX;\n    }\n    *puVar3 = uVar4 | 2;\n    *0x4705b4 = *0x4705b4 + 1;\n    *0x4705b8 = *0x4705b8 + (uVar4 - 4);\n    return puVar3 + 1;\n}\n",
        "token_count": 663
    },
    "0040242c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040242c(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    uint uVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uStack24;\n    int32_t iStack20;\n    \n    uVar7 = param_2 + 7U & 0xfffffffc;\n    if (uVar7 < 0xc) {\n        uVar7 = 0xc;\n    }\n    puVar6 = in_EAX + -4;\n    uVar9 = *puVar6 & 0x7ffffffc;\n    puVar3 = puVar6 + uVar9;\n    if (uVar9 == uVar7) {\n        uVar4 = CONCAT31(puVar3 >> 8, 1);\n    }\n    else {\n        uVar8 = uVar7;\n        if (uVar7 < uVar9) {\n            uStack24 = uVar9 - uVar7;\n            if (puVar3 == *0x470620) {\n                *0x470620 = *0x470620 + -uStack24;\n                *0x47061c = *0x47061c + uStack24;\n                if (*0x47061c < 0xc) {\n                    *0x470620 = *0x470620 + uStack24;\n                    *0x47061c = *0x47061c - uStack24;\n                    uVar8 = uVar9;\n                }\n            }\n            else {\n                if ((*puVar3 & 2) == 0) {\n                    uStack24 = uStack24 + *(puVar3 + 8);\n                    fcn.00401bb0();\n                }\n                uVar8 = uVar9;\n                if (0xb < uStack24) {\n                    *(puVar6 + uVar7) = uStack24 | 2;\n                    fcn.00401c74();\n                    uVar8 = uVar7;\n                }\n            }\ncode_r0x004025e6:\n            *0x4705b8 = *0x4705b8 + (uVar8 - uVar9);\n            uVar7 = *puVar6;\n            *puVar6 = uVar8 | uVar7 & 0x80000003;\n            uVar4 = CONCAT31((uVar7 & 0x80000003) >> 8, 1);\n        }\n        else {\n            do {\n                iStack20 = uVar7 - uVar9;\n                if (puVar6 + uVar9 == *0x470620) {\n                    if (iStack20 <= *0x47061c) {\n                        *0x47061c = *0x47061c - iStack20;\n                        *0x470620 = *0x470620 + iStack20;\n                        if (*0x47061c < 0xc) {\n                            *0x470620 = *0x470620 + *0x47061c;\n                            uVar7 = uVar7 + *0x47061c;\n                            *0x47061c = 0;\n                        }\n                        *0x4705b8 = *0x4705b8 + (uVar7 - uVar9);\n                        uVar9 = *puVar6;\n                        *puVar6 = uVar7 | uVar9 & 0x80000003;\n                        uVar4 = CONCAT31((uVar9 & 0x80000003) >> 8, 1);\n                        goto code_r0x004025ff;\n                    }\n                    fcn.00401ea0();\n                }\n                puVar5 = puVar6 + uVar9;\n                if ((*puVar5 & 2) == 0) {\n                    uVar1 = puVar5[2];\n                    if (iStack20 <= uVar1) {\n                        fcn.00401bb0();\n                        if (uVar1 - iStack20 < 0xc) {\n                            uVar8 = uVar7 + (uVar1 - iStack20);\n                            puVar5 = puVar6 + uVar8;\n                            *puVar5 = *puVar5 & 0xfffffffe;\n                        }\n                        else {\n                            fcn.00401e18();\n                        }\n                        goto code_r0x004025e6;\n                    }\n                    puVar5 = puVar5 + uVar1;\n                    iStack20 = iStack20 - uVar1;\n                }\n            } while (((*puVar5 & 0x80000000) != 0) && (cVar2 = fcn.00401fa4(),  cVar2 != '\\0'));\n            uVar4 = 0;\n        }\n    }\ncode_r0x004025ff:\n    return CONCAT44(iStack20, uVar4);\n}\n",
        "token_count": 1098
    },
    "00407f24": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00407f24(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    uVar3 = 0;\n    iVar2 = fcn.00404248();\n    if ((iVar2 != 0) && (((cVar1 = *in_EAX,  cVar1 + 0xbfU < 0x1a || (cVar1 == '_')) || (cVar1 + 0x9fU < 0x1a)))) {\n        iVar2 = fcn.00404248();\n        if (1 < iVar2) {\n            iVar2 = iVar2 + -1;\n            iVar4 = 2;\n            do {\n                cVar1 = in_EAX[iVar4 + -1];\n                if (((9 < cVar1 - 0x30U) && (0x19 < cVar1 + 0xbfU)) && ((cVar1 != '_' && (0x19 < cVar1 + 0x9fU)))) {\n                    return 0;\n                }\n                iVar4 = iVar4 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 293
    },
    "00408028": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408028(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cStack8;\n    \n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cStack8 = ROUND(fVar6);\n        uVar2 = cStack8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cStack8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 421
    },
    "004087dc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004087dc(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -4) + -4;\n}\n",
        "token_count": 37
    },
    "00408814": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00408814(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.004026ec();\n    }\n    return;\n}\n",
        "token_count": 45
    },
    "0040b0d4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040b0d4(void)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack44 = 0x40b29e;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar5 = 1;\n    fcn.00403f88();\n    arg_8h = &fcn.0040b0d4::var_8h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040ad9c(arg_8h);\n    iVar3 = fcn.0040814c();\n    if (iVar3 - 3U < 3) {\n        while (iVar3 = fcn.00404248(),  iVar5 <= iVar3) {\n            uVar4 = *(in_EAX + -1 + iVar5);\n            if ((*((uVar4 >> 3) + 0x46410c) >> (uVar4 & 7) & 1) == 0) {\n                iVar3 = fcn.0040871c();\n                if (iVar3 == 0) {\n                    fcn.00404250();\n                    iVar5 = iVar5 + 1;\n                }\n                else {\n                    iVar3 = fcn.0040871c();\n                    if (iVar3 == 0) {\n                        fcn.00404250();\n                        iVar5 = iVar5 + 3;\n                    }\n                    else {\n                        iVar3 = fcn.0040871c();\n                        if (iVar3 == 0) {\n                            fcn.00404250();\n                            iVar5 = iVar5 + 1;\n                        }\n                        else {\n                            cVar1 = *(in_EAX + -1 + iVar5);\n                            if ((cVar1 == 'Y') || (cVar1 == 'y')) {\n                                fcn.00404250();\n                            }\n                            else {\n                                fcn.00404170();\n                                fcn.00404250();\n                            }\n                        }\n                    }\n                }\n                iVar5 = iVar5 + 1;\n            }\n            else {\n                var_4h = fcn.0040c198();\n                arg_8h = &fcn.0040b0d4::var_10h;\n                fcn.004044a8();\n                fcn.00404250();\n                iVar5 = iVar5 + var_4h;\n            }\n        }\n    }\n    else {\n        if ((*0x470748 == 4) || (*0x470748 - 0x11U < 2)) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        if (bVar2) {\n            for (; iVar3 = fcn.00404248(),  iVar5 <= iVar3; iVar5 = iVar5 + 1) {\n                cVar1 = *(in_EAX + -1 + iVar5);\n                if ((cVar1 != 'G') && (cVar1 != 'g')) {\n                    fcn.00404170();\n                    fcn.00404250();\n                }\n            }\n        }\n        else {\n            fcn.00403fdc();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack44 = 0x40b2a5;\n    iStack48 = 0x40b29d;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 879
    },
    "00420da8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00420da8(void)\n\n{\n    int16_t in_AX;\n    \n    if (((in_AX != 1) && (in_AX != 4)) && (in_AX != 8)) {\n        return 0;\n    }\n    return 1 << (in_AX & 0x1f);\n}\n",
        "token_count": 71
    },
    "0043c548": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c548(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0044c6cc();\n    if (iVar1 == 0) {\n        return;\n    }\n    if (param_2 != 9) {\n        if (param_2 == 0x12) {\n            uVar2 = 0;\n            fcn.00406ac4();\n            fcn.00435dec(uVar2);\n            return;\n        }\n        if (3 < param_2 - 0x25U) {\n            return;\n        }\n    }\n    uVar2 = 0;\n    fcn.00406ac4();\n    fcn.00435dec(uVar2);\n    return;\n}\n",
        "token_count": 178
    },
    "0045be19": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.0045be19(void)\n\n{\n    uint8_t in_AL;\n    int32_t iVar1;\n    \n    if (in_AL < 4) {\n        iVar1 = fcn.00435dec(0);\n        if (iVar1 != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 75
    },
    "0040992c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040992c(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char **ppcVar2;\n    \n    ppcVar2 = arg_8h + -4;\n    pcVar1 = *ppcVar2;\n    while (**ppcVar2 == *(arg_8h + -5)) {\n        *ppcVar2 = *ppcVar2 + 1;\n    }\n    *(arg_8h + -0xc) = *ppcVar2 + (1 - pcVar1);\n    return;\n}\n",
        "token_count": 126
    },
    "0041a310": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a310(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.0041cea0();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0041ce74();\n            if ((*(iVar2 + 0x24) & 4) != 0) {\n                iVar2 = fcn.00404fd4();\n                fcn.00405190(iVar2 + 1);\n                uVar3 = fcn.0041ce74();\n                iVar2 = fcn.00404fd4();\n                *(*(arg_8h + -4) + -4 + iVar2 * 4) = uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "0041bba8": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bba8(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.00419da8();\n        if (cVar1 != '\\0') break;\n        fcn.0041bc5c();\n    }\n    fcn.0041ad14();\n    return;\n}\n",
        "token_count": 82
    },
    "0041bc00": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bc00(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.00419da8();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.0041a0ec();\n        if (cVar1 - 2U < 3) {\n            fcn.0041bc5c();\n        }\n        fcn.0041c054();\n        while( true ) {\n            cVar1 = fcn.00419da8();\n            if (cVar1 != '\\0') break;\n            fcn.0041bdf8();\n        }\n        fcn.0041ad14();\n    }\n    fcn.0041ad14();\n    return;\n}\n",
        "token_count": 173
    },
    "00436a20": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436a20(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00415a68();\n    fcn.0043476c();\n    iVar1 = *(*(arg_8h + -8) + 8);\n    fcn.00415ab8(&var_20h, \n                 ((*(iVar1 + 0x50) - *(iVar1 + 0x48)) + *(*(*(arg_8h + -4) + 0x30) + 0x4c)) - *(*(arg_8h + -4) + 0x4c));\n    fcn.00434614();\n    return;\n}\n",
        "token_count": 182
    },
    "004475c4": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004475c4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t unaff_EBX;\n    \n    iVar1 = fcn.0040c284();\n    if (iVar1 != 0) {\n        fcn.004044e8();\n    }\n    return unaff_EBX & 0xffffff00 | iVar1 != 0;\n}\n",
        "token_count": 89
    },
    "0044d3ac": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d3ac(uint param_1, int32_t param_2)\n\n{\n    fcn.004382ac();\n    *(param_2 + 0x24) = *(param_2 + 0x24) & 0xfffffffc;\n    return;\n}\n",
        "token_count": 65
    },
    "00458170": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __fastcall fcn.00458170(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    uchar *puVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    uint var_8h_2;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    int32_t *var_1ch_2;\n    uchar *var_18h;\n    int32_t var_14h;\n    uchar *var_10h;\n    int32_t var_ch_2;\n    uint var_8h_3;\n    \n    iVar8 = 0;\n    iVar5 = (param_1 + 1) * -4;\n    var_10h = &stack0xffffffd4 + iVar5;\n    puVar2 = &stack0xffffffd4 + iVar5;\n    var_1ch_2 = in_EAX;\n    var_ch_2 = param_1;\n    do {\n        puVar6 = puVar2;\n        *(puVar6 + -4) = 0x45819f;\n        iVar3 = fcn.004085dc();\n        *(puVar6 + -4) = 0;\n        *(puVar6 + -8) = 0;\n        *(puVar6 + -0xc) = iVar3;\n        *(puVar6 + -0x10) = param_2;\n        *(puVar6 + -0x14) = 0;\n        *(puVar6 + -0x18) = 0;\n        *(puVar6 + -0x1c) = 0x4581b0;\n        var_14h = sub.kernel32.dll_MultiByteToWideChar_1();\n        var_14h = var_14h + 1;\n        iVar5 = -(var_14h * 2 + 3U & 0xfffffffc);\n        var_18h = puVar6 + iVar5 + -0x18;\n        if (iVar8 == 0) {\n            *var_10h = puVar6 + iVar5 + -0x18;\n        }\n        else {\n            *(var_10h + (var_ch_2 - iVar8) * 4) = puVar6 + iVar5 + -0x18;\n            var_18h = puVar6 + iVar5 + -0x18;\n        }\n        *(puVar6 + iVar5 + -0x1c) = var_14h;\n        *(puVar6 + iVar5 + -0x20) = var_18h;\n        *(puVar6 + iVar5 + -0x24) = iVar3;\n        *(puVar6 + iVar5 + -0x28) = param_2;\n        *(puVar6 + iVar5 + -0x2c) = 0;\n        *(puVar6 + iVar5 + -0x30) = 0;\n        *(puVar6 + iVar5 + -0x34) = 0x4581f5;\n        sub.kernel32.dll_MultiByteToWideChar_1();\n        *(var_18h + var_14h * 2 + -2) = 0;\n        param_2 = param_2 + iVar3 + 1;\n        iVar8 = iVar8 + 1;\n        puVar2 = puVar6 + iVar5 + -0x30;\n    } while (iVar8 != var_ch_2);\n    *(puVar6 + iVar5 + -0x34) = var_8h_2;\n    *(puVar6 + iVar5 + -0x38) = 0x458214;\n    uVar4 = sub.kernel32.dll_GetThreadLocale_1();\n    *(puVar6 + iVar5 + -0x38) = uVar4;\n    *(puVar6 + iVar5 + -0x3c) = var_ch_2;\n    *(puVar6 + iVar5 + -0x40) = var_10h;\n    *(puVar6 + iVar5 + -0x44) = *0x46f720;\n    *(puVar6 + iVar5 + -0x48) = var_1ch_2;\n    pcVar1 = *(*var_1ch_2 + 0x14);\n    puVar7 = puVar6 + iVar5 + -0x4c;\n    *(puVar6 + iVar5 + -0x4c) = 0x45822c;\n    iVar5 = (*pcVar1)();\n    if (iVar5 == -0x7ffdfffa) {\n        *(puVar7 + -4) = &stack0xfffffffc;\n        *(puVar7 + -8) = 0x458239;\n        fcn.0045813c(*(puVar7 + -4));\n    }\n    else {\n        *(puVar7 + -4) = 0x458241;\n        fcn.00457bdc();\n    }\n    return;\n}\n",
        "token_count": 1137
    },
    "0040d594": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d594(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40d5ee;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404210();\n        fcn.00408164();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40d5f5;\n    uStack20 = 0x40d5ed;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 197
    },
    "0040d600": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d600(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40d65a;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404210();\n        fcn.00409478();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40d661;\n    uStack20 = 0x40d659;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 194
    },
    "0040d66c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d66c(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40d6c6;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404210();\n        fcn.0040944c();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40d6cd;\n    uStack20 = 0x40d6c5;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 200
    },
    "0040d6d8": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d6d8(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40d732;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404210();\n        fcn.0040acc4();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40d739;\n    uStack20 = 0x40d731;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 196
    },
    "0040d744": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d744(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40d79e;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.00404210();\n        fcn.004094a4();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40d7a5;\n    uStack20 = 0x40d79d;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 198
    },
    "0040f34c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0040f34c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack28 = 0x40f3ef;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    fcn.00412544();\n    uVar3 = 0;\n    iVar2 = (***0x46fbd0)(0, 0x400, 0, &var_4h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.00404210();\n        cVar1 = fcn.00408164();\n        if (cVar1 == '\\0') {\n            var_4h = fcn.004105a4();\n            var_4h = var_4h & 0x7f;\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.0040e788();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00403f88(0x40f3f6);\n    fcn.00404668();\n    return;\n}\n",
        "token_count": 321
    },
    "0040fd44": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint64_t fcn.0040fd44(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint uStack44;\n    uint uStack40;\n    int32_t iStack36;\n    uchar *puStack32;\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    puStack32 = &stack0xffffffec;\n    iStack36 = 0x40fd54;\n    sub.oleaut32.dll_VariantInit();\n    iStack36 = 3;\n    uStack40 = 0;\n    uStack44 = 0x400;\n    iVar1 = (***0x46faf0)(&stack0xffffffe8);\n    if (iVar1 == 0) {\n        uVar3 = iStack36;\n    }\n    else {\n        iVar1 = (***0x46faf0)(&stack0xffffffd4);\n        if (iVar1 == 0) {\n            uVar3 = fcn.00402a78();\n        }\n        else if (iVar1 == -0x7ffdfffb) {\n            uVar2 = fcn.004105a4();\n            uVar3 = uVar2 & 0x7f;\n        }\n        else {\n            fcn.0040e788();\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 305
    },
    "0040fdf0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040fdf0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack44 = 0x40fede;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.00412544();\n    fcn.00404210();\n    cVar1 = fcn.00408184();\n    if (cVar1 == '\\0') {\n        iVar2 = (***0x46fbd0)(var_ch, 0x400, 0, &fcn.0040fdf0::var_10h);\n        if (iVar2 == 0) {\n            _var_8h = var_10h;\n        }\n        else {\n            iVar2 = (***0x46f9c8)(var_ch, 0x400, 0, &fcn.0040fdf0::var_18h);\n            if (iVar2 == 0) {\n                _var_8h = fcn.00402a78();\n            }\n            else if (iVar2 == -0x7ffdfffb) {\n                uVar3 = fcn.004105a4();\n                _var_8h = uVar3 & 0x7f;\n            }\n            else {\n                fcn.0040e788();\n                _var_8h = 0;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x40fee5;\n    uStack44 = 0x40fed5;\n    fcn.00403f88();\n    uStack44 = 0x40fedd;\n    fcn.00404668();\n    return;\n}\n",
        "token_count": 476
    },
    "00413dac": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413dac(float arg_8h, float arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    uint8_t *puVar2;\n    int32_t in_EDX;\n    double *pdVar3;\n    code *var_8h;\n    uint var_4h;\n    \n    var_8h = *(in_EDX + 8);\n    puVar2 = fcn.0041397c();\n    uVar1 = *puVar2;\n    if ((var_8h & 0xff000000) == 0xff000000) {\n        pdVar3 = (var_8h & 0xffffff) + in_EAX;\n    // switch table (5 cases) at 0x413df4\n        switch(uVar1 & 0x7f) {\n        case 0:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 1:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 2:\n            *pdVar3 = arg_8h;\n            *(pdVar3 + 4) = arg_ch;\n            *(pdVar3 + 1) = arg_10h;\n            break;\n        case 3:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n            break;\n        case 4:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x413fa0);\n        }\n    }\n    else {\n        if ((var_8h & 0xff000000) == 0xfe000000) {\n            var_8h = *(*in_EAX + var_8h);\n        }\n        if (*(in_EDX + 0x10) == -0x80000000) {\n    // switch table (5 cases) at 0x413e90\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x413fa0));\n            }\n        }\n        else {\n    // switch table (5 cases) at 0x413f23\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x413fa0));\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 813
    },
    "004173dc": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004173dc(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t iStack16;\n    \n    iVar1 = *(in_EAX + 4) + 0x1f;\n    if (iVar1 < 0) {\n        iVar1 = *(in_EAX + 4) + 0x3e;\n    }\n    iStack16 = param_1;\n    if (-1 < (iVar1 >> 5) + -1) {\n        iVar3 = 0;\n        iStack16 = iVar1 >> 5;\n        do {\n            if (*0x417450 != *(*(in_EAX + 8) + iVar3 * 4)) {\n                uVar2 = 0;\n                do {\n                    bVar4 = uVar2 < 0x1f;\n                    if (uVar2 < 0x20) {\n                        bVar4 = (*(*(in_EAX + 8) + iVar3 * 4) >> (uVar2 & 0x1f) & 1) != 0;\n                    }\n                    if (!bVar4) {\n                        iVar1 = iVar3 * 0x20 + (uVar2 & 0x7f);\n                        if (*(in_EAX + 4) <= iVar1) {\n                            iVar1 = *(in_EAX + 4);\n                        }\n                        goto code_r0x00417448;\n                    }\n                    uVar2 = uVar2 + 1;\n                } while (uVar2 != ' ');\n            }\n            iVar3 = iVar3 + 1;\n            iStack16 = iStack16 + -1;\n        } while (iStack16 != 0);\n    }\n    iVar1 = *(in_EAX + 4);\ncode_r0x00417448:\n    return CONCAT44(iStack16, iVar1);\n}\n",
        "token_count": 430
    },
    "00418f68": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00418f68(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00408434(arg_8h, arg_ch);\n    return uVar1;\n}\n",
        "token_count": 69
    },
    "0041ab5c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ab5c(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0041bb4c(param_1);\n    // switch table (6 cases) at 0x41ab91\n    switch(uVar1 & 0x7f) {\n    case 0:\n        fcn.00403fdc();\n        break;\n    default:\n        fcn.00419be8();\n        break;\n    case 7:\n        fcn.0041a110();\n        fcn.00404078();\n        fcn.004044a0();\n        fcn.0041a110();\n        break;\n    case 8:\n        fcn.00403fdc();\n        break;\n    case 9:\n        fcn.00403fdc();\n        break;\n    case 0xd:\n        fcn.00403fdc();\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "0041bc5c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0041bc5c(void)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack20 = 0x41bdeb;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.0041bb4c();\n    // switch table (21 cases) at 0x41bc93\n    switch(uVar1 & 0x7f) {\n    case 1:\n        fcn.0041bba8(&stack0xfffffffc);\n        break;\n    case 2:\n        fcn.0041c054();\n        break;\n    case 3:\n        fcn.0041c054();\n        break;\n    case 4:\n        fcn.0041c054();\n        break;\n    case 5:\n        fcn.0041c054();\n        break;\n    case 6:\n    case 7:\n        fcn.0041b970();\n        break;\n    case 10:\n        fcn.0041bbd0(&stack0xfffffffc);\n        break;\n    case 0xb:\n        fcn.0041bb60();\n        break;\n    case 0xc:\n        fcn.0041bbd0(&stack0xfffffffc);\n        break;\n    case 0xe:\n        fcn.0041bc00(&stack0xfffffffc);\n        break;\n    case 0xf:\n        fcn.0041c054();\n        break;\n    case 0x10:\n        fcn.0041c054();\n        break;\n    case 0x11:\n        fcn.0041c054();\n        break;\n    case 0x12:\n        fcn.0041bbd0(&stack0xfffffffc);\n        break;\n    case 0x13:\n        fcn.0041c054();\n        break;\n    case 0x14:\n        fcn.0041bbd0(&stack0xfffffffc);\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41bdf2;\n    uStack20 = 0x41bdea;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 533
    },
    "0041c264": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0041c264(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint in_stack_ffffffc8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41c45e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.0040eb2c();\n    uVar2 = fcn.0041a0ec();\n    // switch table (21 cases) at 0x41c2a6\n    switch(uVar2 & 0x7f) {\n    case 0:\n    case 0xd:\n        cVar1 = fcn.0041bb4c();\n        if (cVar1 != '\\r') {\n            fcn.00413704();\n        }\n        break;\n    default:\n        fcn.0040b620();\n        fcn.004039c4();\n        break;\n    case 2:\n        fcn.0041ac5c();\n        fcn.00412c94();\n        break;\n    case 3:\n        fcn.0041ac5c();\n        fcn.00412c94();\n        break;\n    case 4:\n        fcn.0041ac5c();\n        fcn.00412c94();\n        break;\n    case 5:\n        fcn.0041aa40();\n        fcn.00412e8c();\n        break;\n    case 6:\n    case 0xc:\n        fcn.0041b9ac();\n        fcn.00412ec8();\n        break;\n    case 8:\n    case 9:\n        fcn.0041bb4c();\n        fcn.00412e64();\n        break;\n    case 10:\n        in_stack_ffffffc8 = 0x41c401;\n        fcn.0041c09c(&stack0xfffffffc);\n        fcn.0040ee54();\n        break;\n    case 0xf:\n        fcn.0041aa84();\n        fcn.00412e8c();\n        break;\n    case 0x10:\n        fcn.0041aac8();\n        fcn.00412eb4();\n        break;\n    case 0x11:\n        fcn.0041ab18();\n        fcn.00412ea0();\n        break;\n    case 0x12:\n    case 0x14:\n        fcn.0041ba68();\n        fcn.00412ef4();\n        break;\n    case 0x13:\n        uVar3 = fcn.0041acc8();\n        in_stack_ffffffc8 = uVar3;\n        fcn.00412d90(in_stack_ffffffc8, uVar3 >> 0x20);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    uStack48 = 0x41c465;\n    fcn.0040eb40();\n    fcn.00404668();\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 721
    },
    "0042ad88": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0042ad88(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    do {\n        if (*(in_EAX + 0xc + (uVar1 & 0x7f) * 4) != -1) {\n            fcn.0042ab64();\n        }\n        *(in_EAX + 0xc + (uVar1 & 0x7f) * 4) = 0xffffffff;\n        uVar1 = uVar1 + 1;\n    } while (uVar1 != '\\x04');\n    fcn.0042ac68();\n    *(in_EAX + 8) = 0;\n    return;\n}\n",
        "token_count": 162
    },
    "0042d038": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0042d038(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    do {\n        iVar1 = *(in_EAX + 8 + (uVar2 & 0x7f) * 4);\n        if (iVar1 != 0) {\n            (***0x46f95c)(iVar1);\n            *(in_EAX + 8 + (uVar2 & 0x7f) * 4) = 0;\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 != '\\x18');\n    return;\n}\n",
        "token_count": 155
    },
    "0042d20c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d20c(uchar *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    *param_1 = 0;\n    uVar1 = param_2 & 0xff;\n    if (uVar1 < 0xf) {\n        if (uVar1 - 2 < 5) {\n            *(param_1 + 4) = 1;\n            iVar2 = 2;\n            goto code_r0x0042d285;\n        }\n        if (uVar1 - 7 < 8) {\n            *(param_1 + 4) = 2;\n            iVar2 = 7;\n            goto code_r0x0042d285;\n        }\n    }\n    else {\n        if (uVar1 - 0xf < 0xc) {\n            *(param_1 + 4) = 3;\n            iVar2 = 0xf;\n            goto code_r0x0042d285;\n        }\n        if (uVar1 - 0x1b < 2) {\n            *(param_1 + 4) = 4;\n            iVar2 = 0x1b;\n            goto code_r0x0042d285;\n        }\n        if (uVar1 - 0x1b == 2) {\n            *(param_1 + 4) = 5;\n            iVar2 = 0x1d;\n            goto code_r0x0042d285;\n        }\n    }\n    *(param_1 + 4) = 0;\n    iVar2 = 0;\ncode_r0x0042d285:\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar2) + 1;\n    return;\n}\n",
        "token_count": 396
    },
    "0042d290": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d290(uchar *param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    *param_1 = 3;\n    uVar1 = param_2 - 2;\n    if (uVar1 < 7) {\n        *(param_1 + 4) = 1;\n        iVar2 = 2;\n    }\n    else if (uVar1 == 7) {\n        *(param_1 + 4) = 2;\n        iVar2 = 9;\n    }\n    else {\n        *(param_1 + 4) = 0;\n        iVar2 = 0;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar2) + 1;\n    return;\n}\n",
        "token_count": 188
    },
    "0042d2cc": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d2cc(uchar *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    *param_1 = 0x12;\n    uVar1 = param_2 & 0xff;\n    if (uVar1 < 0x14) {\n        if (uVar1 - 2 < 6) {\n            *(param_1 + 4) = 1;\n            iVar2 = 2;\n            goto code_r0x0042d35b;\n        }\n        if (uVar1 - 8 < 6) {\n            *(param_1 + 4) = 2;\n            iVar2 = 8;\n            goto code_r0x0042d35b;\n        }\n        if (uVar1 - 0xe < 6) {\n            *(param_1 + 4) = 3;\n            iVar2 = 0xe;\n            goto code_r0x0042d35b;\n        }\n    }\n    else {\n        if (uVar1 - 0x14 < 6) {\n            *(param_1 + 4) = 4;\n            iVar2 = 0x14;\n            goto code_r0x0042d35b;\n        }\n        if (uVar1 - 0x1a < 6) {\n            *(param_1 + 4) = 5;\n            iVar2 = 0x1a;\n            goto code_r0x0042d35b;\n        }\n        if (uVar1 - 0x20 < 6) {\n            *(param_1 + 4) = 6;\n            iVar2 = 0x20;\n            goto code_r0x0042d35b;\n        }\n    }\n    *(param_1 + 4) = 0;\n    iVar2 = 0;\ncode_r0x0042d35b:\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar2) + 1;\n    return;\n}\n",
        "token_count": 454
    },
    "0042d368": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d368(uchar *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x17;\n    // switch table (38 cases) at 0x42d3ee\n    switch(param_2 & 0xff) {\n    default:\n        *(param_1 + 4) = 0;\n        iVar1 = 0;\n        break;\n    case 2:\n    case 3:\n    case 4:\n        *(param_1 + 4) = 1;\n        iVar1 = 2;\n        break;\n    case 5:\n    case 6:\n    case 7:\n        *(param_1 + 4) = 2;\n        iVar1 = 5;\n        break;\n    case 8:\n    case 9:\n    case 10:\n        *(param_1 + 4) = 3;\n        iVar1 = 8;\n        break;\n    case 0xb:\n    case 0xc:\n    case 0xd:\n        *(param_1 + 4) = 4;\n        iVar1 = 0xb;\n        break;\n    case 0xe:\n    case 0xf:\n    case 0x10:\n        *(param_1 + 4) = 5;\n        iVar1 = 0xe;\n        break;\n    case 0x11:\n    case 0x12:\n    case 0x13:\n        *(param_1 + 4) = 6;\n        iVar1 = 0x11;\n        break;\n    case 0x14:\n    case 0x15:\n        *(param_1 + 4) = 7;\n        iVar1 = 0x14;\n        break;\n    case 0x16:\n    case 0x17:\n        *(param_1 + 4) = 8;\n        iVar1 = 0x16;\n        break;\n    case 0x18:\n    case 0x19:\n        *(param_1 + 4) = 9;\n        iVar1 = 0x18;\n        break;\n    case 0x1a:\n    case 0x1b:\n        *(param_1 + 4) = 10;\n        iVar1 = 0x1a;\n        break;\n    case 0x1c:\n    case 0x1d:\n        *(param_1 + 4) = 0xb;\n        iVar1 = 0x1c;\n        break;\n    case 0x1e:\n    case 0x1f:\n        *(param_1 + 4) = 0xc;\n        iVar1 = 0x1e;\n        break;\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n        *(param_1 + 4) = 0xd;\n        iVar1 = 0x20;\n        break;\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n        *(param_1 + 4) = 0xe;\n        iVar1 = 0x24;\n        break;\n    case 0x28:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n        *(param_1 + 4) = 0xf;\n        iVar1 = 0x28;\n        break;\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n        *(param_1 + 4) = 0x10;\n        iVar1 = 0x2c;\n        break;\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n        *(param_1 + 4) = 0x11;\n        iVar1 = 0x30;\n        break;\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n        *(param_1 + 4) = 0x12;\n        iVar1 = 0x34;\n        break;\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n        *(param_1 + 4) = 0x13;\n        iVar1 = 0x38;\n        break;\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n        *(param_1 + 4) = 0x14;\n        iVar1 = 0x3c;\n        break;\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x43:\n        *(param_1 + 4) = 0x15;\n        iVar1 = 0x40;\n        break;\n    case 0x44:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n        *(param_1 + 4) = 0x16;\n        iVar1 = 0x44;\n        break;\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n        *(param_1 + 4) = 0x17;\n        iVar1 = 0x48;\n        break;\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n        *(param_1 + 4) = 0x18;\n        iVar1 = 0x4c;\n        break;\n    case 0x50:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n        *(param_1 + 4) = 0x19;\n        iVar1 = 0x50;\n        break;\n    case 0x54:\n    case 0x55:\n    case 0x56:\n    case 0x57:\n        *(param_1 + 4) = 0x1a;\n        iVar1 = 0x54;\n        break;\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n        *(param_1 + 4) = 0x1b;\n        iVar1 = 0x58;\n        break;\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n    case 0x5f:\n        *(param_1 + 4) = 0x1c;\n        iVar1 = 0x5c;\n        break;\n    case 0x60:\n        *(param_1 + 4) = 0x1d;\n        iVar1 = 0x60;\n        break;\n    case 0x61:\n        *(param_1 + 4) = 0x1e;\n        iVar1 = 0x61;\n        break;\n    case 0x62:\n        *(param_1 + 4) = 0x1f;\n        iVar1 = 0x62;\n        break;\n    case 99:\n        *(param_1 + 4) = 0x20;\n        iVar1 = 99;\n        break;\n    case 100:\n        *(param_1 + 4) = 0x21;\n        iVar1 = 100;\n        break;\n    case 0x65:\n        *(param_1 + 4) = 0x22;\n        iVar1 = 0x65;\n        break;\n    case 0x66:\n        *(param_1 + 4) = 0x23;\n        iVar1 = 0x66;\n        break;\n    case 0x67:\n        *(param_1 + 4) = 0x24;\n        iVar1 = 0x67;\n        break;\n    case 0x68:\n        *(param_1 + 4) = 0x25;\n        iVar1 = 0x68;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar1) + 1;\n    return;\n}\n",
        "token_count": 1830
    },
    "004583f4": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004583f4(int32_t *noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t arg_ch_00;\n    uint32_t uVar2;\n    uint extraout_ECX;\n    uint8_t *puVar3;\n    int32_t unaff_ESI;\n    uint *in_FS_OFFSET;\n    int32_t var_ch;\n    uint8_t *var_4h;\n    int32_t var_4h_2;\n    int32_t var_8h_2;\n    uint var_10h_5;\n    uint var_10h_3;\n    uint var_18h;\n    uint var_1ch_2;\n    uint var_1ch;\n    uint var_10h;\n    uint var_8h;\n    uchar auStack180 [4];\n    int32_t iStack176;\n    uchar *puStack172;\n    int32_t iStack168;\n    uchar *puStack164;\n    uint arg_ch_01;\n    uint arg_10h;\n    uint uStack144;\n    uint uStack140;\n    uchar *puStack136;\n    int32_t iStack132;\n    uint8_t *puStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint *puStack108;\n    uint uStack104;\n    int32_t *piStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint32_t uStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uchar auStack52 [12];\n    uint var_30h_2;\n    uint var_30h;\n    uint uStack24;\n    uchar *puStack20;\n    uchar *puStack16;\n    uint32_t uStack12;\n    uint32_t var_10h_4;\n    uint var_10h_2;\n    \n    puStack108 = &fcn.004583f4::var_10h_2;\n    uStack12 = var_4h[1];\n    if (uStack12 != 0) {\n        puVar3 = var_4h + 3;\n        uVar2 = uStack12;\n        do {\n            uVar1 = *puVar3;\n            if ((uVar1 & 0x80) == 0) {\n                if (uVar1 == 0xc) {\n                    var_8h_2 = var_8h_2 + 0x10;\n                }\n                else {\n                    if ((uVar1 < 5) || (7 < uVar1)) goto code_r0x0045844b;\n                    var_8h_2 = var_8h_2 + 8;\n                }\n            }\n            else {\ncode_r0x0045844b:\n                var_8h_2 = var_8h_2 + 4;\n            }\n            puVar3 = puVar3 + 1;\n            uVar2 = uVar2 - 1;\n            unaff_ESI = var_8h_2;\n        } while (uVar2 != 0);\n    }\n    puStack128 = var_4h;\n    puStack20 = &stack0xffffffc0;\n    var_10h_4 = var_4h[2];\n    iStack132 = unaff_ESI;\n    for (uVar2 = var_10h_4; uVar2 != 0; uVar2 = uVar2 - 1) {\n        iStack132 = var_4h_2;\n    }\n    uStack76 = *var_4h;\n    if ((uStack76 == 4) && ((var_10h_4 = var_10h_4 + 1,  var_4h[3] == 9 || (var_4h[3] == 0xd)))) {\n        uStack76 = 8;\n    }\n    puStack16 = &stack0xffffffc0;\n    uStack68 = 0;\n    puStack72 = &stack0xffffffcc;\n    puStack80 = NULL;\n    uStack84 = 0x45849f;\n    fcn.004583e4();\n    uStack84 = uStack76;\n    uStack76 = var_10h_5;\n    uStack88 = puStack80;\n    uStack92 = 0x4643b4;\n    uStack96 = noname_2;\n    piStack100 = noname_0;\n    uStack104 = 0x4584bb;\n    puStack80 = &stack0xffffffec;\n    arg_ch_00 = (**(*noname_0 + 0x18))();\n    if (arg_ch_00 == 0) {\n        return;\n    }\n    puStack172 = &stack0xffffffcc;\n    uStack104 = CONCAT31(extraout_ECX >> 8, 1);\n    puStack136 = &stack0xffffff94;\n    uStack116 = 0;\n    uStack120 = 0;\n    uStack124 = 0;\n    uStack140 = 0x4583c9;\n    uStack144 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff70;\n    if (arg_ch_00 == -0x7ffdfff7) {\n        puStack136 = &stack0xffffff94;\n        puStack108 = &fcn.004583f4::var_10h_2;\n        fcn.00404210();\n        arg_10h = uStack116;\n        fcn.00404210();\n        puStack164 = 0x45835c;\n        arg_ch_01 = uStack120;\n        fcn.00404210();\n        puStack164 = 0x45836b;\n        iStack168 = fcn.00457b28(var_30h, arg_ch_01, arg_10h, uStack24);\n        if (piStack100 != '\\0') {\n            puStack164 = 0x458380;\n            fcn.00404af0();\n        }\n    }\n    else {\n        arg_10h = 0;\n        iStack168 = fcn.00457a58(0, arg_ch_00);\n    }\n    if (var_ch != 0) {\n        iStack176 = iStack168;\n        if (iStack168 == 0) {\n            iStack176 = fcn.00403f7c();\n        }\n        puStack164 = &stack0xffffffc0;\n    // WARNING: Could not recover jumptable at 0x004039e5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x470014)(0xeedfade, 1, 7, &stack0xffffff4c);\n        return;\n    }\n    fcn.004039c4();\n    *in_FS_OFFSET = arg_10h;\n    uStack144 = 0x4583d0;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 1676
    },
    "0045cafc": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0045cafc(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch, \n            uint arg_20h, uint arg_24h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_64h;\n    int32_t var_60h;\n    uint var_4h;\n    \n    uVar3 = 0;\n    if (arg_8h == 0x1062) {\n        uVar3 = fcn.0045cea4();\n        uVar3 = uVar3 & 0x7f;\n    }\n    else if (arg_8h == 0x20e2) {\n        uVar3 = fcn.0045cf58();\n    }\n    else if (arg_8h == 0x8072) {\n        fcn.0045cfbc(arg_24h);\n    }\n    if (arg_10h != 0) {\n        var_64h = 0x60;\n        if (arg_8h == 0x8080) {\n            var_4h = arg_20h;\n        }\n        else {\n            var_4h = 0xffffffff;\n        }\n        iVar2 = sub.user32.dll_DdeQueryConvInfo(arg_10h, var_4h, &var_64h);\n        if (iVar2 != 0) {\n            if (arg_8h < 0x4051) {\n                if (arg_8h == 0x4050) {\n                    uVar3 = fcn.0045ea18(arg_1ch);\n                }\n                else if (arg_8h == 0x1030) {\n                    uVar3 = fcn.0045e800(arg_18h & 0xffff0000 | arg_ch & 0xffff, arg_18h);\n                    uVar3 = uVar3 & 0x7f;\n                }\n                else if (arg_8h == 0x2022) {\n                    uVar3 = fcn.0045ea38(arg_18h & 0xffff0000 | arg_ch & 0xffff, arg_18h);\n                }\n                else if (arg_8h == 0x20b0) {\n                    uVar3 = fcn.0045ea38(arg_18h & 0xffff0000 | arg_ch & 0xffff, arg_18h);\n                }\n                else if (arg_8h == 0x4010) {\n                    fcn.0045dbf0();\n                }\n            }\n            else if (arg_8h == 0x4090) {\n                uVar3 = fcn.0045e964(arg_ch, arg_1ch, arg_18h);\n            }\n            else if (arg_8h == 0x8040) {\n                fcn.0045e934(arg_18h);\n            }\n            else if (arg_8h == 0x8080) {\n                if (var_60h != 0) {\n                    fcn.0045dba4();\n                }\n            }\n            else if ((arg_8h == 0x80c2) && (var_60h != 0)) {\n                cVar1 = fcn.004033dc();\n                if (cVar1 == '\\0') {\n                    fcn.0045d0a0();\n                }\n                else {\n                    fcn.0045dbac();\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 795
    },
    "00402b4c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402b4c(uint8_t param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    \n    if (*param_2 < param_1) {\n        param_1 = *param_2;\n    }\n    *in_EAX = param_1;\n    fcn.004028c8();\n    return;\n}\n",
        "token_count": 85
    },
    "00402d80": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402d80(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char cVar2;\n    char *in_EAX;\n    \n    param_1 = param_1 & 0xff;\n    do {\n        if (param_1 == 0) {\n            return;\n        }\n        param_1 = param_1 - 1;\n        cVar1 = *in_EAX;\n        cVar2 = *param_2;\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + 1;\n    } while (cVar1 == cVar2);\n    return;\n}\n",
        "token_count": 149
    },
    "00403a88": {
        "rules": [
            "calculate modulo 256 via x86 assembly",
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403a88(int32_t *arg_8h)\n\n{\n    fcn.004027d0();\n    return;\n}\n",
        "token_count": 34
    },
    "0040a62c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040a62c(uint param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    while( true ) {\n        uVar2 = fcn.00404248();\n        if ((uVar2 < *param_2) ||\n           (cVar1 = *(in_EAX + -1 + *param_2),  uVar2 = *param_2 & 0xffffff00 | cVar1 - 0x3a,  cVar1 - 0x30U < 10))\n        break;\n        uVar2 = *(in_EAX + -1 + *param_2);\n        if ((*((uVar2 >> 3) + 0x46410c) >> (uVar2 & 7) & 1) == 0) {\n            *param_2 = *param_2 + 1;\n        }\n        else {\n            uVar2 = fcn.0040c1d4();\n            *param_2 = uVar2;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 253
    },
    "0040bb8c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040bb8c(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x40bc47;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_4h = in_EAX;\n    uVar2 = fcn.0040b928();\n    uVar2 = uVar2 & 0xff;\n    if (7 < uVar2 - 3) {\n        if (uVar2 == 0xb) {\n            in_stack_ffffffd4 = 0x40bbe5;\n            iVar3 = fcn.0040b9c0(&stack0xfffffffc);\n            goto code_r0x0040bc1a;\n        }\n        if (9 < uVar2 - 0xc) {\n            var_ch = *var_4h;\n            var_8h._0_1_ = 0;\n            arg_ch = &fcn.0040bb8c::var_ch;\n            in_stack_ffffffd4 = 0;\n            fcn.00405d0c();\n            iVar3 = fcn.0040b5a0(in_stack_ffffffd4, arg_ch);\n            goto code_r0x0040bc1a;\n        }\n    }\n    iVar3 = fcn.0040b564();\ncode_r0x0040bc1a:\n    cVar1 = fcn.004033dc();\n    if (cVar1 != '\\0') {\n        *(iVar3 + 0xc) = var_4h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x40bc4e;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 489
    },
    "0040c01c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c01c(int32_t *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00404248();\n    iVar4 = 1;\n    iVar3 = 1;\n    while ((iVar3 < iVar1 && (iVar4 < in_EDX))) {\n        iVar4 = iVar4 + 1;\n        uVar2 = *(in_EAX + -1 + iVar3);\n        if ((*((uVar2 >> 3) + 0x46410c) >> (uVar2 & 7) & 1) == 0) {\n            iVar3 = iVar3 + 1;\n        }\n        else {\n            iVar3 = fcn.0040c1d4();\n        }\n    }\n    if (((iVar4 == in_EDX) && (iVar3 < iVar1)) &&\n       (uVar2 = *(in_EAX + -1 + iVar3),  (*((uVar2 >> 3) + 0x46410c) >> (uVar2 & 7) & 1) != 0)) {\n        iVar3 = fcn.0040c1d4();\n        iVar3 = iVar3 + -1;\n    }\n    *in_ECX = iVar4;\n    *arg_8h = iVar3;\n    return;\n}\n",
        "token_count": 355
    },
    "0040c438": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c438(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint uVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint var_1h;\n    \n    uVar3 = fcn.0040c3c4(arg_8h + -0x14);\n    sub.kernel32.dll_GetCPInfo(uVar3);\n    for (iVar5 = 0; (iVar5 < 0xc && ((*(arg_8h + -0xe + iVar5) | *(arg_8h + -0xd + iVar5)) != 0)); iVar5 = iVar5 + 2) {\n        var_1h._0_1_ = *(arg_8h + -0xe + iVar5);\n        uVar1 = *(arg_8h + -0xd + iVar5);\n        if (var_1h <= uVar1) {\n            cVar4 = (uVar1 - var_1h) + '\\x01';\n            do {\n                puVar2 = (var_1h >> 3) + 0x46410c;\n                *puVar2 = *puVar2 | '\\x01' << (var_1h & 7);\n                var_1h._0_1_ = var_1h + 1;\n                cVar4 = cVar4 + -1;\n            } while (cVar4 != '\\0');\n        }\n    }\n    return;\n}\n",
        "token_count": 360
    },
    "0040cc00": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint * fcn.0040cc00(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar2 = fcn.0040cb60();\n    puVar1 = *(in_EAX + 4 + (uVar2 & 0xff) * 4);\n    while( true ) {\n        if (puVar1 == NULL) {\n            return NULL;\n        }\n        iVar3 = fcn.0040cb00();\n        if (iVar3 != 0x7fffffff) break;\n        puVar1 = *puVar1;\n    }\n    uVar4 = sub.kernel32.dll_GetCurrentThreadId_1();\n    puVar1[1] = uVar4;\n    return puVar1;\n}\n",
        "token_count": 183
    },
    "0041f420": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0041f420(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (in_EAX < 0) {\n        sub.user32.dll_GetSysColor(in_EAX & 0xff);\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "0044042c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0044042c(void)\n\n{\n    uint8_t uVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4404b2;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar2 = *0x470b1c == 0;\n    *0x470b1c = *0x470b1c + -1;\n    if (bVar2) {\n        uVar1 = sub.kernel32.dll_GetVersion_1();\n        *0x470b18 = 3 < uVar1;\n        fcn.004401f8();\n        fcn.00416700();\n        fcn.004167a0();\n        fcn.0041674c();\n        fcn.0041674c();\n        fcn.0041674c();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 240
    },
    "004498d4": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.004498d4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    fcn.00403f88();\n    iVar3 = 1;\n    iVar1 = fcn.00404248();\n    if (0 < iVar1) {\n        do {\n            uVar2 = *(in_EAX + -1 + iVar3);\n            if ((*(*0x46fc08 + (uVar2 >> 3)) >> (uVar2 & 7) & 1) == 0) {\n                if (((*(in_EAX + -1 + iVar3) == '&') && (0 < iVar1 - iVar3)) &&\n                   (iVar3 = iVar3 + 1,  *(in_EAX + -1 + iVar3) != '&')) {\n                    fcn.00404170();\n                }\n            }\n            else {\n                iVar3 = iVar3 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 <= iVar1);\n    }\n    return;\n}\n",
        "token_count": 242
    },
    "00402b68": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00402b68(uint param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    \n    uVar2 = *param_2;\n    piVar4 = in_EAX + 1;\n    piVar5 = param_2 + 1;\n    iVar1 = *in_EAX - uVar2;\n    if (*in_EAX < uVar2 || iVar1 == 0) {\n        uVar2 = uVar2 + iVar1;\n    }\n    uVar3 = uVar2 >> 2;\n    do {\n        if (uVar3 == 0) {\ncode_r0x00402bab:\n            uVar3 = uVar2 & 3;\n            uVar2 = uVar3;\n            if ((uVar3 == 0) ||\n               ((*piVar4 == *piVar5 &&\n                ((uVar2 = uVar3 - 1,  uVar2 == 0 ||\n                 ((*(piVar4 + 1) == *(piVar5 + 1) &&\n                  ((uVar2 = uVar3 - 2,  uVar2 == 0 || (*(piVar4 + 2) == *(piVar5 + 2))))))))))) {\n                iVar1 = iVar1 * 2;\n            }\ncode_r0x00402be6:\n            return CONCAT44(uVar2, iVar1);\n        }\n        if (*piVar4 != *piVar5) goto code_r0x00402be6;\n        if (uVar3 == 1) {\n            piVar4 = piVar4 + 1;\n            piVar5 = piVar5 + 1;\n            goto code_r0x00402bab;\n        }\n        if (piVar4[1] != piVar5[1]) goto code_r0x00402be6;\n        piVar4 = piVar4 + 2;\n        piVar5 = piVar5 + 2;\n        uVar3 = uVar3 - 2;\n    } while( true );\n}\n",
        "token_count": 486
    },
    "00402bec": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00402bec(uint32_t param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = param_1 >> 2;\n    do {\n        if (uVar1 == 0) {\ncode_r0x00402c1c:\n            param_1 = param_1 & 3;\n            if (((param_1 != 0) && (*in_EAX == *param_2)) &&\n               ((param_1 == 1 ||\n                ((*(in_EAX + 1) == *(param_2 + 1) && ((param_1 == 2 || (*(in_EAX + 2) == *(param_2 + 2))))))))) {\n                return NULL;\n            }\n            return in_EAX;\n        }\n        if (*in_EAX != *param_2) {\n            return in_EAX;\n        }\n        if (uVar1 == 1) {\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n            goto code_r0x00402c1c;\n        }\n        if (in_EAX[1] != param_2[1]) {\n            return in_EAX;\n        }\n        in_EAX = in_EAX + 2;\n        param_2 = param_2 + 2;\n        uVar1 = uVar1 - 2;\n    } while( true );\n}\n",
        "token_count": 326
    },
    "0040325c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403291)\n// WARNING: Removing unreachable block (ram,0x00403297)\n// WARNING: Removing unreachable block (ram,0x0040329e)\n// WARNING: Removing unreachable block (ram,0x004032a4)\n// WARNING: Removing unreachable block (ram,0x004032aa)\n\nvoid __fastcall fcn.0040325c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    \n    *param_2 = in_EAX;\n    uVar2 = *(in_EAX + -0x28);\n    uVar1 = uVar2 >> 2;\n    piVar3 = param_2 + 1;\n    while (uVar1 = uVar1 - 1,  uVar1 != 0) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (; *(in_EAX + -0x24) != NULL; in_EAX = **(in_EAX + -0x24)) {\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "00404394": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404394(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "004047e0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004047e0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "00408618": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408618(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    uVar2 = 0xffffffff;\n    puVar4 = param_2;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        cVar1 = *puVar4;\n        puVar4 = puVar4 + 1;\n    } while (cVar1 != '\\0');\n    for (uVar3 = ~uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    for (uVar2 = ~uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "00408640": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408640(int32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    bool bVar4;\n    \n    bVar4 = param_1 == 0;\n    iVar1 = param_1;\n    puVar3 = param_2;\n    if (!bVar4) {\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar4 = *puVar3 == '\\0';\n            puVar3 = puVar3 + 1;\n        } while (!bVar4);\n        if (bVar4) {\n            iVar1 = iVar1 + 1;\n        }\n    }\n    for (uVar2 = param_1 - iVar1 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    for (uVar2 = param_1 - iVar1 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    *in_EAX = 0;\n    return;\n}\n",
        "token_count": 335
    },
    "0041a110": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a110(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0x14) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0x14) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.0041a15c();\n            uVar2 = *(in_EAX + 0x14);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 400
    },
    "0041c46c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c46c(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0xc) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0xc) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.0041c4b8();\n            uVar2 = *(in_EAX + 0xc);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 399
    },
    "00407c28": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407c28(ushort *arg_8h)\n\n{\n    uint32_t in_EAX;\n    ushort *in_ECX;\n    uint32_t in_EDX;\n    \n    *in_ECX = in_EAX / (in_EDX & 0xffff);\n    *arg_8h = in_EAX % (in_EDX & 0xffff);\n    return;\n}\n",
        "token_count": 87
    },
    "00402c5c": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402c5c(uchar param_1, uint32_t param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = param_2 >> 2;\n    if (-1 < iVar1) {\n        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *in_EAX = CONCAT22(CONCAT11(param_1, param_1), CONCAT11(param_1, param_1));\n            in_EAX = in_EAX + 1;\n        }\n        for (param_2 = param_2 & 3; param_2 != 0; param_2 = param_2 - 1) {\n            *in_EAX = param_1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00406ac4": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00406ac4(uint param_1, int32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffff | param_2 << 0x10;\n}\n",
        "token_count": 55
    },
    "004442ac": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004442ac(void)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    uint lpString;\n    uint var_2h;\n    \n    var_2h._0_1_ = in_AL;\n    fcn.00403f88();\n    iVar1 = sub.user32.dll_MapVirtualKeyA(var_2h, 0);\n    if (iVar1 << 0x10 != 0) {\n        sub.user32.dll_GetKeyNameTextA(iVar1 << 0x10, &lpString, 0x100);\n        fcn.004041f8();\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "00402c7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402c7c(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    \n    puVar6 = in_EAX;\n    if (in_EAX == NULL) {\ncode_r0x00402cf2:\n        puVar6 = puVar6 + 1;\n    }\n    else {\n        uVar2 = 0;\n        do {\n            puVar5 = puVar6;\n            uVar3 = *puVar5;\n            puVar6 = puVar5 + 1;\n        } while (uVar3 == 0x20);\n        bVar1 = false;\n        if (uVar3 == 0x2d) {\n            bVar1 = true;\ncode_r0x00402d02:\n            uVar3 = *puVar6;\n            puVar6 = puVar5 + 2;\n        }\n        else if (uVar3 == 0x2b) goto code_r0x00402d02;\n        if (((uVar3 == 0x24) || (uVar3 == 0x78)) || (uVar3 == 0x58)) {\ncode_r0x00402d07:\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n            if (uVar3 != 0) {\n                do {\n                    if (0x60 < uVar3) {\n                        uVar3 = uVar3 - 0x20;\n                    }\n                    uVar4 = uVar3 - 0x30;\n                    if (9 < uVar4) {\n                        if (5 < uVar3 + 0xbf) goto code_r0x00402cfb;\n                        uVar4 = uVar3 - 0x37;\n                    }\n                    if (0xfffffff < uVar2) goto code_r0x00402cfb;\n                    uVar2 = uVar2 * 0x10 + uVar4;\n                    uVar3 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                } while (uVar3 != 0);\ncode_r0x00402d44:\n                iVar7 = 0;\n                goto code_r0x00402d47;\n            }\n            goto code_r0x00402cf2;\n        }\n        if (uVar3 != 0x30) {\n            if (uVar3 != 0) goto code_r0x00402cce;\n            goto code_r0x00402cfb;\n        }\n        uVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        if ((uVar3 == 0x78) || (uVar3 == 0x58)) goto code_r0x00402d07;\n        while (uVar3 != 0) {\ncode_r0x00402cce:\n            if ((9 < uVar3 - 0x30) || (0xccccccc < uVar2)) goto code_r0x00402cfb;\n            uVar2 = uVar2 * 10 + (uVar3 - 0x30);\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        if (bVar1) {\n            if ((-1 < uVar2) || (0 < uVar2)) goto code_r0x00402d44;\n        }\n        else if (-1 < uVar2) goto code_r0x00402d44;\n    }\ncode_r0x00402cfb:\n    iVar7 = puVar6 - in_EAX;\ncode_r0x00402d47:\n    *param_2 = iVar7;\n    return;\n}\n",
        "token_count": 864
    },
    "0040a488": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040a488(char *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_8h = '\\0';\n    fcn.0040a464();\n    iVar3 = *in_EDX;\n    uVar1 = 0;\n    while( true ) {\n        iVar2 = fcn.00404248();\n        if (((iVar2 < iVar3) || (9 < *(in_EAX + -1 + iVar3) - 0x30U)) || (999 < uVar1)) break;\n        uVar1 = uVar1 * 10 + (*(in_EAX + -1 + iVar3) - 0x30);\n        iVar3 = iVar3 + 1;\n    }\n    iVar2 = *in_EDX;\n    if (iVar2 < iVar3) {\n        *arg_8h = iVar3 - *in_EDX;\n        *in_EDX = iVar3;\n        *in_ECX = uVar1;\n        in_EDX = in_ECX;\n    }\n    return in_EDX & 0xffffff00 | iVar2 < iVar3;\n}\n",
        "token_count": 301
    },
    "0041a198": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint32_t fcn.0041a198(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0041bb4c();\n    return uVar1 & 0xffffff00 | uVar1 == '\\t';\n}\n",
        "token_count": 56
    },
    "00424f08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint32_t * fcn.00424f08(void)\n\n{\n    uint arg_ch;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x424f22;\n    var_8h = fcn.00422f44();\n    uStack48 = 0x424fe7;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    (**(*var_8h + 0x40))();\n    (**(*var_8h + 0x34))();\n    fcn.0042350c();\n    fcn.004201c8();\n    fcn.004200ac();\n    arg_ch = (**(*var_8h + 0x20))();\n    arg_8h = &fcn.00424f08::var_18h;\n    (**(*var_8h + 0x2c))();\n    fcn.00415a90(arg_8h, arg_ch);\n    fcn.004204cc();\n    uVar4 = 0;\n    do {\n        uVar3 = 0;\n        do {\n            uVar1 = uVar4 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            uVar2 = uVar3 & 0x80000001;\n            if (uVar2 < 0) {\n                uVar2 = (uVar2 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == uVar2) {\n                fcn.00420804(var_4h);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 != 9);\n        uVar4 = uVar4 + 1;\n    } while (uVar4 != 9);\n    fcn.004231c8();\n    *in_FS_OFFSET = arg_8h;\n    return var_8h;\n}\n",
        "token_count": 539
    },
    "00458268": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458268(int32_t arg_8h, int16_t *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_104h;\n    uint var_4h;\n    \n    if (0x40 < *(arg_10h + 1)) {\n        fcn.0040b620();\n        arg_ch = fcn.004039c4();\n    }\n    if (*arg_ch == 9) {\n        var_4h = *(arg_ch + 4);\n    }\n    else if (*arg_ch == 0x4009) {\n        var_4h = **(arg_ch + 4);\n    }\n    else {\n        fcn.00458250();\n    }\n    fcn.00458170(&var_104h);\n    if (arg_8h != 0) {\n        fcn.0040eb2c();\n    }\n    fcn.00457df8(arg_8h, arg_14h);\n    return;\n}\n",
        "token_count": 222
    },
    "0041aa40": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nfloat10 fcn.0041aa40(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    float10 fStack24;\n    \n    cVar2 = fcn.0041bb4c();\n    if (cVar2 == '\\x05') {\n        fcn.0041a110();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041acc8();\n        fStack24 = iVar1;\n    }\n    return fStack24;\n}\n",
        "token_count": 137
    },
    "00435bec": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00435bec(uint *param_1, uint *param_2)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    ulong uVar5;\n    \n    if (*(in_EAX + 0x5b) == '\\x05') {\n        uVar4 = CONCAT31(in_EAX >> 8, 1);\n    }\n    else {\n        uVar2 = *param_2;\n        uVar3 = *param_1;\n        uVar5 = (**(*in_EAX + 0x34))();\n        uVar4 = uVar5;\n        uVar1 = *(in_EAX + 0x5b);\n        if ((uVar1 == 0) || (uVar1 - 3 < 2)) {\n            *param_2 = uVar2;\n        }\n        param_2 = uVar5 >> 0x20 & 0xffffff00 | uVar1 - 3;\n        if (uVar1 < 3) {\n            *param_1 = uVar3;\n            param_2 = param_1;\n        }\n    }\n    return CONCAT44(param_2, uVar4);\n}\n",
        "token_count": 276
    },
    "00402d94": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00402d94(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00403088": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint fcn.00403088(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = sub.user32.dll_GetKeyboardType(0);\n    if (iVar1 == 7) {\n        uVar2 = sub.user32.dll_GetKeyboardType(1);\n        if (((uVar2 & 0xff00) == 0xd00) || ((uVar2 & 0xff00) == 0x400)) {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 135
    },
    "0040350c": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040350c(uint param_1, uint8_t *param_2)\n\n{\n    uint16_t *puVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    \n    uVar3 = 0;\n    uVar6 = 0;\n    uVar4 = *param_2;\n    piVar2 = in_EAX;\n    do {\n        puVar1 = *(*piVar2 + -0x38);\n        if (puVar1 != NULL) {\n            uVar6 = uVar6 & 0xffff0000 | *puVar1;\n            piVar5 = puVar1 + 3;\n            do {\n                uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                if (*(piVar5 + 6) == uVar4) {\n                    while (((*(uVar3 + 6 + piVar5) ^ param_2[uVar3]) & 0xdf) == 0) {\n                        uVar3 = uVar3 - 1;\n                        if (uVar3 == 0) {\n                            piVar2 = *piVar5 + in_EAX;\n                            goto code_r0x00403558;\n                        }\n                    }\n                    uVar4 = *param_2;\n                    uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                }\n                piVar5 = uVar3 + 7 + piVar5;\n                uVar6 = uVar6 - 1;\n            } while (uVar6 != 0);\n        }\n        piVar2 = *(*piVar2 + -0x24);\n    } while (piVar2 != NULL);\ncode_r0x00403558:\n    return CONCAT44(in_EAX, piVar2);\n}\n",
        "token_count": 427
    },
    "0040afac": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040afac(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x40b011;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    for (iVar2 = 1; *(iVar2 * 4 + 0x47076c) != -1; iVar2 = iVar2 + 1) {\n        if (iVar2 == 7) goto code_r0x0040affb;\n    }\n    fcn.00404180();\n    uVar1 = fcn.0040814c();\n    *(iVar2 * 4 + 0x47076c) = uVar1;\ncode_r0x0040affb:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40b018;\n    uStack24 = 0x40b010;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 266
    },
    "004030b8": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004030b8(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *puStack20;\n    uint var_ch;\n    uint32_t var_8h;\n    uint hKey;\n    \n    var_8h = *0x464020;\n    puStack20 = &fcn.004030b8::hKey;\n    uStack24 = 1;\n    uStack28 = 0;\n    uStack32 = 0x403150;\n    uStack36 = 0x80000002;\n    puStack40 = 0x4030df;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 == 0) {\n        uStack44 = 0x403129;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        var_ch = 4;\n        uVar2 = hKey;\n        puStack40 = &stack0xfffffffc;\n        sub.advapi32.dll_RegQueryValueExA(hKey, 0x40316c, 0, 0, &fcn.004030b8::var_8h, &fcn.004030b8::var_ch);\n        *in_FS_OFFSET = uVar2;\n        sub.advapi32.dll_RegCloseKey(hKey, 0x403130);\n        return;\n    }\n    *0x464020 = *0x464020 & 0xffc0 | var_8h & 0x3f;\n    return;\n}\n",
        "token_count": 394
    },
    "00403be8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00403be8(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t **in_FS_OFFSET;\n    \n    if (*0x47063c != NULL) {\n        ppiVar1 = *in_FS_OFFSET;\n        if (*0x47063c == ppiVar1) {\n            *in_FS_OFFSET = **0x47063c;\n            return;\n        }\n        for (; ppiVar1 != 0xffffffff; ppiVar1 = *ppiVar1) {\n            if (*ppiVar1 == *0x47063c) {\n                *ppiVar1 = **0x47063c;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00405f34": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00405f34(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00405f2c();\n    if (iVar1 != 0) {\n        if (*0x46409c == -1) {\n            fcn.00403f7c();\n        }\n        iVar1 = fcn.00405f20();\n        if (iVar1 == 0) {\n            fcn.00403f7c();\n        }\n        else {\n            sub.kernel32.dll_TlsSetValue(*0x46409c, iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00415ae0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00415ae0(void)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*in_EAX == -1) && (in_EAX[1] == -1)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 58
    },
    "004198b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004198b0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00416f20();\n    if (iVar1 != -1) {\n        fcn.00416db4();\n    }\n    iVar1 = fcn.00416f20();\n    if (iVar1 < 0) {\n        fcn.00416d68();\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00419c20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00419c20(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004139d4();\n    if (iVar1 == -1) {\n        fcn.00419be8();\n    }\n    return iVar1;\n}\n",
        "token_count": 61
    },
    "00434564": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434564(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.004033dc();\n    if (cVar1 == '\\0') {\n        fcn.0043508c();\n    }\n    if (param_2 == in_EAX[0xc]) {\n        fcn.00434614();\n    }\n    else {\n        fcn.00435e90();\n    }\n    if ((param_2 == 0) || (param_2 == -1)) {\n        (**(*in_EAX + 0x68))();\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "0044204c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044204c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x442263;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x442079;\n    cVar1 = fcn.00441b30();\n    if (cVar1 != '\\0') {\n        puStack52 = 0x44208b;\n        fcn.004428e8();\n        puStack52 = 0x442098;\n        iVar2 = fcn.00441f0c();\n        if (iVar2 != -1) {\n            uStack56 = 0x442214;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack64 = 0x4420bf;\n            puStack52 = &stack0xfffffffc;\n            piVar3 = fcn.00422f44();\n            uStack68 = 0x4421f4;\n            uStack72 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffb8;\n            puStack76 = 0x4420de;\n            puStack64 = &stack0xfffffffc;\n            (**(*piVar3 + 0x34))();\n            puStack76 = 0x4420ec;\n            (**(*piVar3 + 0x40))();\n            puStack76 = 0x4420f8;\n            piVar4 = fcn.00422f44();\n            uStack80 = 0x4421d7;\n            uStack84 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffac;\n            puStack76 = &stack0xfffffffc;\n            fcn.0042427c();\n            (**(*piVar4 + 0x34))();\n            (**(*piVar4 + 0x40))();\n            fcn.0042350c(0, 0, 0);\n            uVar5 = fcn.0042084c();\n            uVar5 = fcn.00441d04(iVar2, uVar5);\n            sub.comctl32.dll_ImageList_Draw(uVar5);\n            fcn.0042350c(0, 0, 0x10);\n            uVar5 = fcn.0042084c();\n            uVar5 = fcn.00441d04(iVar2, uVar5);\n            sub.comctl32.dll_ImageList_Draw(uVar5);\n            uVar5 = (**(*piVar4 + 100))();\n            (**(*piVar3 + 100))(uVar5);\n            uVar5 = fcn.00441d04();\n            iVar2 = sub.comctl32.dll_ImageList_Replace();\n            if (iVar2 == 0) {\n                fcn.00405d0c();\n                fcn.0040b564();\n                fcn.004039c4();\n            }\n            *in_FS_OFFSET = uVar5;\n            fcn.00403250(0x4421de);\n            return;\n        }\n        puStack52 = 0x442228;\n        fcn.00405d0c();\n        puStack52 = 0x442237;\n        fcn.0040b564();\n        puStack52 = 0x44223c;\n        fcn.004039c4();\n    }\n    puStack52 = 0x442248;\n    fcn.0040344c();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x44226a;\n    uStack44 = 0x442262;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 970
    },
    "004425b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004425b0(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint himl;\n    uint var_4h;\n    \n    puStack68 = 0x4425db;\n    himl = param_2;\n    fcn.00415a90(&fcn.004425b0::var_28h, *(in_EAX + 0x30));\n    puStack68 = 0x4425e3;\n    fcn.00443244();\n    uStack72 = 0x442749;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x4425fd;\n    puStack68 = &stack0xfffffffc;\n    var_ch = fcn.00422f44();\n    uStack84 = 0x44272c;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = 0x44261c;\n    puStack80 = &stack0xfffffffc;\n    (**(*var_ch + 0x34))();\n    puStack92 = 0x44262a;\n    (**(*var_ch + 0x40))();\n    puStack92 = 0x442636;\n    var_10h = fcn.00422f44();\n    uStack96 = 0x44270f;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack92 = &stack0xfffffffc;\n    fcn.0042427c();\n    (**(*var_10h + 0x34))();\n    (**(*var_10h + 0x40))();\n    uStack104 = himl;\n    iVar1 = sub.comctl32.dll_ImageList_GetImageCount();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if ((param_1 == -1) || (iVar3 == param_1)) {\n                var_14h = fcn.0042350c();\n                fcn.004204cc();\n                uVar2 = fcn.0042084c(0, 0, 0);\n                sub.comctl32.dll_ImageList_Draw(himl, iVar3, uVar2);\n                var_18h = fcn.0042350c();\n                fcn.004204cc();\n                fcn.0042084c(0, 0, 0x10);\n                uStack104 = himl;\n                sub.comctl32.dll_ImageList_Draw();\n                fcn.00441e40();\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack104;\n    uStack96 = 0x442716;\n    uStack100 = 0x44270e;\n    fcn.00403250();\n    return;\n}\n",
        "token_count": 792
    },
    "00446fb0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00446fb0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00446f7c();\n    if (iVar1 == -1) {\n        fcn.00444254();\n    }\n    fcn.00446e58();\n    return;\n}\n",
        "token_count": 66
    },
    "00448828": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00448828(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_EDX;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if ((in_EDX & 0x10) == 0) {\n        iVar1 = sub.user32.dll_GetMenuItemID();\n        if (iVar1 != -1) {\n            iVar3 = fcn.0044806c();\n        }\n    }\n    else {\n        sub.user32.dll_GetSubMenu();\n        iVar3 = fcn.0044806c();\n    }\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0044c65c();\n    }\n    return uVar2;\n}\n",
        "token_count": 183
    },
    "00453168": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00453168(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    *(in_EAX + 0x60) = uVar1;\n    iVar2 = -0x16;\n    do {\n        sub.user32.dll_LoadCursorA();\n        fcn.00453220();\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != -1);\n    return;\n}\n",
        "token_count": 124
    },
    "004534d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004534d0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = 0;\n    if (param_2 != -1) {\n        for (puVar2 = *(in_EAX + 0x5c); (puVar2 != NULL && (param_2 != puVar2[1])); puVar2 = *puVar2) {\n        }\n        if (puVar2 == NULL) {\n            uVar1 = *(in_EAX + 0x60);\n        }\n        else {\n            uVar1 = puVar2[2];\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 165
    },
    "00403d80": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00403d80(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0x10;\n    iVar1 = *0x464000;\n    do {\n        *((uVar2 & 0xff) + 0x46406c) = iVar1 % 10 + '0';\n        iVar1 = iVar1 / 10;\n        uVar2 = uVar2 - 1;\n    } while (iVar1 != 0);\n    uVar3 = 0x1c;\n    uVar2 = *0x464004;\n    do {\n        *((uVar3 & 0xff) + 0x46406c) = *((uVar2 & 0xf) + 0x46408c);\n        uVar2 = uVar2 >> 4;\n        uVar3 = uVar3 - 1;\n    } while (uVar2 != 0);\n    return;\n}\n",
        "token_count": 219
    },
    "00407f9e": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407f9e(uint param_1, uint32_t param_2)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint8_t uVar3;\n    int32_t iVar5;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar6;\n    char cVar4;\n    \n    puVar6 = unaff_ESI;\n    do {\n        uVar1 = in_EAX;\n        in_EAX = in_EAX / 10;\n        puVar6 = puVar6 + -1;\n        cVar4 = uVar1 % 10;\n        uVar3 = cVar4 + 0x30;\n        if (0x39 < uVar3) {\n            uVar3 = cVar4 + 0x37;\n        }\n        *puVar6 = uVar3;\n    } while (in_EAX != 0);\n    iVar5 = param_2 - (unaff_ESI - puVar6);\n    if (unaff_ESI - puVar6 <= param_2 && iVar5 != 0) {\n        iVar2 = -iVar5;\n        while (iVar5 = iVar5 + -1,  iVar5 != 0) {\n            (puVar6 + iVar2)[iVar5] = 0x30;\n        }\n        puVar6[iVar2] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "00408d78": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00408d78(int32_t param_1, uint32_t param_2)\n\n{\n    char cVar2;\n    uint in_EAX;\n    uint32_t uVar1;\n    char unaff_BL;\n    uint32_t *puVar3;\n    uchar *unaff_EDI;\n    char *pcVar4;\n    uint32_t uStack8;\n    \n    *unaff_EDI = in_EAX;\n    if (unaff_BL == '\\0') {\n        param_2 = 0;\ncode_r0x00408d8e:\n        cVar2 = in_EAX >> 8;\n        pcVar4 = unaff_EDI + 1;\n        if (cVar2 == '\\0') goto code_r0x00408d95;\n    }\n    else {\n        if (-1 < param_2) goto code_r0x00408d8e;\n        cVar2 = '-';\n        param_2 = -param_2;\n    }\n    pcVar4 = unaff_EDI + 2;\n    unaff_EDI[1] = cVar2;\ncode_r0x00408d95:\n    puVar3 = &uStack8;\n    uStack8 = param_2;\n    do {\n        do {\n            uVar1 = param_2 / *0x464174;\n            *puVar3 = param_2 % *0x464174 + '0';\n            puVar3 = puVar3 + 1;\n            param_1 = param_1 + -1;\n            param_2 = uVar1;\n        } while (uVar1 != 0);\n    } while (0 < param_1);\n    do {\n        puVar3 = puVar3 + -1;\n        *pcVar4 = *puVar3;\n        pcVar4 = pcVar4 + 1;\n    } while (puVar3 != &uStack8);\n    return uStack8;\n}\n",
        "token_count": 421
    },
    "004091df": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004091df(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar7;\n    uint16_t uVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    int16_t *unaff_EBX;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t iVar11;\n    int16_t *piVar12;\n    int16_t *piVar13;\n    bool bVar14;\n    float10 fVar15;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    uVar6 = *unaff_ESI;\n    uVar10 = unaff_ESI[1];\n    if ((uVar6 | uVar10) != 0) {\n        if (uVar10 < 0) {\n            bVar14 = uVar6 != 0;\n            uVar6 = -uVar6;\n            uVar10 = -bVar14 - uVar10;\n        }\n        iVar8 = 0;\n        iVar11 = *(unaff_EBP + 8);\n        if (iVar11 < 0) {\n            iVar11 = 0;\n        }\n        if (3 < iVar11) {\n            iVar11 = 4;\n            uVar2 = uVar6;\n            iVar3 = iVar8;\n            do {\n                iVar8 = iVar3;\n                uVar6 = uVar2;\n                bVar14 = 0xde0b6b2 < uVar10;\n                uVar1 = uVar10 + 0xf21f494d;\n                uVar10 = uVar1 - (uVar6 < 0xa7640000);\n                uVar2 = uVar6 + 0x589c0000;\n                iVar3 = iVar8 + 1;\n            } while (bVar14 && (uVar6 < 0xa7640000) <= uVar1);\n            uVar10 = uVar10 + 0xde0b6b3 + (0x589bffff < uVar6 + 0x589c0000);\n        }\n        *(unaff_EBP + -0x20) = uVar6;\n        *(unaff_EBP + -0x1c) = uVar10;\n        fVar15 = *(unaff_EBP + -0x20);\n        if (4 - iVar11 != 0) {\n            fVar15 = fVar15 / *(*(unaff_EBP + -4) + 0x4091cb + (4 - iVar11) * 4);\n        }\n        *(unaff_EBP + -0x18) = fVar15;\n        piVar12 = unaff_EBX + 3;\n        if (iVar8 != 0) {\n            piVar13 = unaff_EBX + 2;\n            *piVar12 = iVar8 + '0';\n            iVar8 = 9;\n            goto code_r0x00409276;\n        }\n        iVar8 = 9;\n        do {\n            uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n            uVar4 = CONCAT11(uVar9, uVar9 >> 4);\n            piVar13 = piVar12;\n            if (uVar9 >> 4 != 0) goto code_r0x0040927f;\n            uVar7 = uVar4 >> 8;\n            if ((uVar9 & 0xf) != 0) goto code_r0x00409286;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar5 = 0;\n    uVar9 = 0;\n    *(unaff_EBX + 3) = 0;\ncode_r0x004092ac:\n    *unaff_EBX = iVar5;\n    *(unaff_EBX + 1) = uVar9;\n    return;\ncode_r0x00409286:\n    while( true ) {\n        piVar13 = piVar12 + 1;\n        *piVar12 = (uVar7 & 0xf) + 0x30;\n        iVar8 = iVar8 + -1;\n        if (iVar8 == 0) break;\ncode_r0x00409276:\n        uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n        uVar4 = CONCAT11(uVar9, uVar9 >> 4);\ncode_r0x0040927f:\n        uVar7 = uVar4 >> 8;\n        piVar12 = piVar13 + 1;\n        *piVar13 = uVar4 + '0';\n    }\n    iVar5 = piVar13 - (unaff_EBX + 3 + iVar11);\n    do {\n        *piVar13 = '\\0';\n        piVar13 = piVar13 + -1;\n    } while (*piVar13 == '0');\n    uVar9 = unaff_ESI[1] >> 0x1f;\n    goto code_r0x004092ac;\n}\n",
        "token_count": 1142
    },
    "00453bd0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00453bd0(void)\n\n{\n    fcn.0040cf00();\n    return;\n}\n",
        "token_count": 25
    },
    "004041b0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004041b0(uint param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    int16_t *piVar2;\n    \n    arg_8h = 0;\n    piVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar2 != 0; piVar2 = piVar2 + 4) {\n            if (piVar2[1] == 0) {\ncode_r0x004041d9:\n                piVar2 = piVar2 + 1;\n                break;\n            }\n            if (piVar2[2] == 0) {\ncode_r0x004041d6:\n                piVar2 = piVar2 + 1;\n                goto code_r0x004041d9;\n            }\n            if (piVar2[3] == 0) {\n                piVar2 = piVar2 + 1;\n                goto code_r0x004041d6;\n            }\n        }\n        arg_8h = piVar2 - param_2 >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.00403f88(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.004040a8(arg_8h),  -1 < iVar1)) {\n        fcn.00404078();\n    }\n    else {\n        fcn.004045d4();\n        fcn.004040a8(arg_8h);\n        fcn.004045d4();\n    }\n    return;\n}\n",
        "token_count": 369
    },
    "00404210": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404210(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    \n    arg_8h = 0;\n    if (param_2 != 0) {\n        arg_8h = *(param_2 + -4) >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.00403f88(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.004040a8(arg_8h),  -1 < iVar1)) {\n        fcn.00404078();\n    }\n    else {\n        fcn.004045d4();\n        fcn.004040a8(arg_8h);\n        fcn.004045d4();\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "004046a4": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027fc)\n\nvoid __fastcall fcn.004046a4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((param_2 != 0) && (*(param_2 + -4) >> 1 != 0)) {\n        iVar1 = sub.oleaut32.dll_SysReAllocStringLen();\n        if (iVar1 != 0) {\n            return;\n        }\n        if (*0x470008 != NULL) {\n            (**0x470008)();\n        }\n        fcn.004027d0();\n        return;\n    }\n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        *in_EAX = 0;\n        sub.oleaut32.dll_SysFreeString(iVar1);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00404778": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027fc)\n\nvoid __fastcall fcn.00404778(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    uVar3 = 0;\n    piVar4 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar4 != 0; piVar4 = piVar4 + 2) {\n            if (*(piVar4 + 2) == 0) {\ncode_r0x004047a1:\n                piVar4 = piVar4 + 2;\n                break;\n            }\n            if (*(piVar4 + 1) == 0) {\ncode_r0x0040479e:\n                piVar4 = piVar4 + 2;\n                goto code_r0x004047a1;\n            }\n            if (*(piVar4 + 6) == 0) {\n                piVar4 = piVar4 + 2;\n                goto code_r0x0040479e;\n            }\n        }\n        uVar3 = piVar4 - param_2 >> 1;\n    }\n    if (uVar3 == 0) {\n        iVar2 = *in_EAX;\n        if (iVar2 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar2);\n        }\n        return;\n    }\n    iVar2 = sub.oleaut32.dll_SysAllocStringLen(param_2, uVar3);\n    if (iVar2 != 0) {\n        iVar1 = *param_2;\n        *param_2 = iVar2;\n        sub.oleaut32.dll_SysFreeString(iVar1);\n        return;\n    }\n    if (*0x470008 != NULL) {\n        (**0x470008)();\n    }\n    fcn.004027d0();\n    return;\n}\n",
        "token_count": 445
    },
    "004047d4": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.004047d4(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "004189bc": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004189bc(code *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = in_EDX;\n    do {\n        var_10h = var_8h + in_ECX >> 1;\n        uVar3 = var_8h;\n        uVar4 = in_ECX;\n        do {\n            while (iVar2 = (*arg_8h)(),  iVar2 < 0) {\n                uVar3 = uVar3 + 1;\n            }\n            while (iVar2 = (*arg_8h)(),  0 < iVar2) {\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar3 <= uVar4) {\n                fcn.004186d4();\n                uVar1 = uVar4;\n                if ((uVar3 != var_10h) && (uVar1 = var_10h,  uVar4 == var_10h)) {\n                    uVar1 = uVar3;\n                }\n                var_10h = uVar1;\n                uVar3 = uVar3 + 1;\n                uVar4 = uVar4 - 1;\n            }\n        } while (uVar3 <= uVar4);\n        if (var_8h < uVar4) {\n            fcn.004189bc(arg_8h);\n        }\n        var_8h = uVar3;\n    } while (uVar3 < in_ECX);\n    return;\n}\n",
        "token_count": 395
    },
    "00404924": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027fc)\n\nvoid __fastcall fcn.00404924(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.00404924();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.004048f4();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if ((cVar1 != '\\x0f') && (cVar1 != '\\x11')) {\n            if (*0x470008 != NULL) {\n                (**0x470008)();\n            }\n            fcn.004027d0();\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar3 = param_1 + -1;\n        bVar2 = 0 < param_1;\n        param_1 = iVar3;\n    } while (iVar3 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 509
    },
    "00404b14": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027fc)\n\nvoid __fastcall fcn.00404b14(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar6;\n    \n    puVar6 = *(param_1 + 1) + 10 + param_1;\n    iVar5 = puVar6[-1];\n    iVar4 = 0;\n    iVar2 = puVar6[-2];\n    do {\n        if (iVar4 < puVar6[1]) {\n            fcn.004028c8();\n        }\n        pcVar3 = **puVar6;\n        cVar1 = *pcVar3;\n        if (cVar1 == '\\n') {\n            fcn.00403fdc();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\v') {\n            fcn.004046a4();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\f') {\n            fcn.00404afc();\n            iVar4 = 0x10;\n        }\n        else if (cVar1 == '\\r') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 6);\n            fcn.00404c30(iVar4, *(pcVar3 + pcVar3[1] + 2));\n        }\n        else if (cVar1 == '\\x0e') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 2);\n            fcn.00404b14();\n        }\n        else if (cVar1 == '\\x0f') {\n            fcn.00405860();\n            iVar4 = 4;\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x470008 != NULL) {\n                    (**0x470008)(unaff_EDI, unaff_ESI);\n                }\n                fcn.004027d0();\n                return;\n            }\n            fcn.004051d8();\n            iVar4 = 4;\n        }\n        iVar4 = iVar4 + puVar6[1];\n        puVar6 = puVar6 + 2;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    if (iVar4 < iVar2) {\n        fcn.004028c8();\n    }\n    return;\n}\n",
        "token_count": 556
    },
    "00404c30": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027fc)\n\nvoid __thiscall fcn.00404c30(char *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = *param_1;\n    if (cVar1 == '\\n') {\n        do {\n            fcn.00403fdc();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\v') {\n        do {\n            fcn.004046a4();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.00404afc();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00404c30();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00404b14();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.00405860();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x470008 != NULL) {\n                (**0x470008)();\n            }\n            fcn.004027d0();\n            return;\n        }\n        do {\n            fcn.004051d8();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 442
    },
    "0041c4e4": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c4e4(uint param_1, int32_t param_2)\n\n{\n    if ((-0x81 < param_2) && (param_2 < 0x80)) {\n        fcn.0041c654();\n        fcn.0041c46c();\n        return;\n    }\n    if ((param_2 < -0x8000) || (0x7fff < param_2)) {\n        fcn.0041c654();\n        fcn.0041c46c();\n    }\n    else {\n        fcn.0041c654();\n        fcn.0041c46c();\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "00406b1c": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00406b1c(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX | (param_2 & 0xff0000) << 8;\n}\n",
        "token_count": 58
    },
    "0040b764": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489",
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.0040b764(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack16;\n    uchar uStack12;\n    \n    iVar1 = fcn.004028a8();\n    for (iVar2 = 0; (iVar2 < 7 && (iVar1 != *(iVar2 * 8 + 0x464220))); iVar2 = iVar2 + 1) {\n    }\n    if (iVar2 < 7) {\n        iVar2 = fcn.0040b564();\n    }\n    else {\n        uStack12 = 0;\n        iStack16 = iVar1;\n        iVar2 = fcn.0040b65c(0, &iStack16);\n    }\n    *(iVar2 + 0xc) = iVar1;\n    return;\n}\n",
        "token_count": 180
    },
    "00437490": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00437490(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uchar in_CL;\n    uint32_t uVar1;\n    int32_t in_EDX;\n    uint var_1h;\n    \n    uVar1 = 0;\n    // switch table (7 cases) at 0x4374ab\n    switch(in_CL) {\n    case 1:\n        uVar1 = *(in_EAX + 0x44) < *(in_EDX + 0x44);\n        break;\n    case 2:\n        uVar1 = *(in_EDX + 0x44) + *(in_EDX + 0x4c);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 <= *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n        break;\n    case 3:\n        uVar1 = *(in_EAX + 0x40) < *(in_EDX + 0x40);\n        break;\n    case 4:\n        uVar1 = *(in_EDX + 0x40) + *(in_EDX + 0x48);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 <= *(in_EAX + 0x40) + *(in_EAX + 0x48);\n        break;\n    case 6:\n        uVar1 = (**(**(arg_8h + -4) + 0xa4))();\n    }\n    return uVar1;\n}\n",
        "token_count": 357
    },
    "0040591c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040591c(int32_t arg_8h)\n\n{\n    sub.kernel32.dll_InterlockedIncrement(arg_8h + 4);\n    return;\n}\n",
        "token_count": 40
    },
    "00401420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401420(int32_t *param_1, int32_t *param_2)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint *in_EAX;\n    uint *puVar3;\n    \n    puVar3 = *in_EAX;\n    *param_1 = *param_2;\n    param_1[1] = param_2[1];\n    do {\n        puVar1 = *puVar3;\n        if (*param_1 == puVar3[2] + puVar3[3]) {\n            fcn.00401408();\n            *param_1 = puVar3[2];\n            param_1[1] = param_1[1] + puVar3[3];\n        }\n        else if (*param_1 + param_1[1] == puVar3[2]) {\n            fcn.00401408();\n            param_1[1] = param_1[1] + puVar3[3];\n        }\n        puVar3 = puVar1;\n    } while (in_EAX != puVar1);\n    cVar2 = fcn.004013d8();\n    if (cVar2 == '\\0') {\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "00401524": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401524(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (in_EAX < 0x100000) {\n        uVar3 = 0x100000;\n    }\n    else {\n        uVar3 = in_EAX + 0xffffU & 0xffff0000;\n    }\n    param_2[1] = uVar3;\n    iVar2 = sub.kernel32.dll_VirtualAlloc(0, uVar3, 0x2000, 1);\n    *param_2 = iVar2;\n    if (iVar2 != 0) {\n        cVar1 = fcn.004013d8();\n        if (cVar1 == '\\0') {\n            sub.kernel32.dll_VirtualFree(*param_2, 0, 0x8000);\n            *param_2 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "004016b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004016b8(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    \n    uVar5 = in_EAX & 0xfffff000;\n    uVar3 = in_EAX + param_2 + 0xfff & 0xfffff000;\n    *param_1 = uVar5;\n    param_1[1] = uVar3 - uVar5;\n    puVar6 = *0x4705ec;\n    do {\n        if (puVar6 == 0x4705ec) {\n            return;\n        }\n        uVar1 = puVar6[2];\n        uVar4 = uVar1;\n        if (uVar1 < uVar5) {\n            uVar4 = uVar5;\n        }\n        uVar7 = puVar6[3] + uVar1;\n        if (uVar3 < puVar6[3] + uVar1) {\n            uVar7 = uVar3;\n        }\n        if (uVar4 < uVar7) {\n            puVar8 = uVar7 - uVar4;\n            iVar2 = sub.kernel32.dll_VirtualAlloc(uVar4, puVar8, 0x1000, 4);\n            if (iVar2 == 0) {\n                *puVar8 = 0;\n                return;\n            }\n        }\n        puVar6 = *puVar6;\n    } while( true );\n}\n",
        "token_count": 381
    },
    "0040174c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040174c(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    \n    uVar5 = in_EAX + 0xfffU & 0xfffff000;\n    uVar4 = in_EAX + param_2 & 0xfffff000;\n    *param_1 = uVar5;\n    param_1[1] = uVar4 - uVar5;\n    for (puVar6 = *0x4705ec; puVar6 != 0x4705ec; puVar6 = *puVar6) {\n        uVar1 = puVar6[2];\n        uVar3 = uVar1;\n        if (uVar1 < uVar5) {\n            uVar3 = uVar5;\n        }\n        uVar7 = puVar6[3] + uVar1;\n        if (uVar4 < puVar6[3] + uVar1) {\n            uVar7 = uVar4;\n        }\n        if (uVar3 < uVar7) {\n            iVar2 = sub.kernel32.dll_VirtualFree(uVar3, uVar7 - uVar3, 0x4000);\n            if (iVar2 == 0) {\n                *0x4705c8 = 2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "00401bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401bb0(void)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX == *0x470618) {\n        *0x470618 = in_EAX[1];\n    }\n    piVar1 = in_EAX[1];\n    iVar2 = in_EAX[2];\n    if (iVar2 < 0x1001) {\n        if (in_EAX != piVar1) {\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + 3;\n            }\n            *(*0x470624 + -0xc + (iVar2 >> 2) * 4) = piVar1;\n            iVar2 = *in_EAX;\n            *piVar1 = iVar2;\n            *(iVar2 + 4) = piVar1;\n            return;\n        }\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + 3;\n        }\n        *(*0x470624 + -0xc + (iVar2 >> 2) * 4) = 0;\n    }\n    else {\n        iVar2 = *in_EAX;\n        *piVar1 = iVar2;\n        *(iVar2 + 4) = piVar1;\n    }\n    return;\n}\n",
        "token_count": 288
    },
    "00401c14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.00401c14(void)\n\n{\n    uint32_t in_EAX;\n    uint *puVar1;\n    \n    puVar1 = *0x470628;\n    while( true ) {\n        if (puVar1 == 0x470628) {\n            *0x4705c8 = 3;\n            return NULL;\n        }\n        if ((puVar1[2] <= in_EAX) && (in_EAX < puVar1[2] + puVar1[3])) break;\n        puVar1 = *puVar1;\n    }\n    return puVar1;\n}\n",
        "token_count": 132
    },
    "00401c98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401c98(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *in_EAX;\n    \n    if (0xb < param_2) {\n        *in_EAX = param_2 | 2;\n        fcn.00401c74();\n        return;\n    }\n    if (3 < param_2) {\n        *in_EAX = param_2 | 0x80000002;\n    }\n    *(in_EAX + param_2) = *(in_EAX + param_2) & 0xfffffffe;\n    return;\n}\n",
        "token_count": 131
    },
    "00401d30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00401d30(void)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    uVar1 = *in_EAX;\n    if ((uVar1 & 0x80000000) != 0) {\n        uVar3 = uVar1 & 0x7ffffffc;\n        in_EAX = in_EAX + uVar3;\n        uVar1 = *in_EAX;\n    }\n    if ((uVar1 & 2) == 0) {\n        fcn.00401bb0();\n        uVar3 = uVar3 + in_EAX[2];\n        puVar2 = in_EAX + in_EAX[2];\n        *puVar2 = *puVar2 & 0xfffffffe;\n    }\n    return uVar3;\n}\n",
        "token_count": 206
    },
    "00401e18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401e18(uint param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    char cVar4;\n    int32_t **in_EAX;\n    \n    in_EAX[2] = param_2;\n    *(in_EAX + param_2 + -4) = param_2;\n    if (param_2 < 0x1001) {\n        if (param_2 < 0) {\n            param_2 = param_2 + 3;\n        }\n        ppiVar1 = *(*0x470624 + -0xc + (param_2 >> 2) * 4);\n        if (ppiVar1 == NULL) {\n            *(*0x470624 + -0xc + (param_2 >> 2) * 4) = in_EAX;\n            in_EAX[1] = in_EAX;\n            *in_EAX = in_EAX;\n        }\n        else {\n            piVar2 = *ppiVar1;\n            in_EAX[1] = ppiVar1;\n            *in_EAX = piVar2;\n            *ppiVar1 = in_EAX;\n            piVar2[1] = in_EAX;\n        }\n    }\n    else {\n        if ((0x3bff < param_2) && (cVar4 = fcn.00401d68(),  cVar4 != '\\0')) {\n            return;\n        }\n        ppiVar1 = *0x470618;\n        piVar2 = **0x470618;\n        ppiVar3 = in_EAX;\n        in_EAX[1] = *0x470618;\n        *0x470618 = ppiVar3;\n        *in_EAX = piVar2;\n        *ppiVar1 = in_EAX;\n        piVar2[1] = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 429
    },
    "00401fd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401fd8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (in_EAX < 0) {\n        in_EAX = in_EAX + 3;\n    }\n    iVar1 = in_EAX >> 2;\n    if (iVar1 < 0x401) {\n        do {\n            iVar2 = *(*0x470624 + -0xc + iVar1 * 4);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != 0x401);\n    }\n    return iVar2;\n}\n",
        "token_count": 162
    },
    "00402864": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402864(int32_t param_1, int32_t param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 == 0) {\n        *param_3 = 0;\n        return;\n    }\n    if (param_2 < 1) {\n        param_2 = 1;\ncode_r0x0040287a:\n        iVar2 = (uVar1 - param_2) + 1;\n        if (-1 < param_1) {\n            if (iVar2 < param_1) {\n                param_1 = iVar2;\n            }\n            goto code_r0x00402885;\n        }\n    }\n    else if (param_2 <= uVar1) goto code_r0x0040287a;\n    param_1 = 0;\ncode_r0x00402885:\n    *param_3 = param_1;\n    puVar3 = in_EAX + param_2;\n    for (; param_3 = param_3 + 1,  param_1 != 0; param_1 = param_1 + -1) {\n        *param_3 = *puVar3;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "004028c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004028c8(uint32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    iVar1 = param_1 >> 2;\n    if (in_EAX < param_2) {\n        puVar2 = (param_1 - 4) + in_EAX;\n        param_2 = (param_1 - 4) + param_2;\n        if (-1 < iVar1) {\n            for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *param_2 = *puVar2;\n                puVar2 = puVar2 + -1;\n                param_2 = param_2 + -1;\n            }\n            puVar3 = puVar2 + 3;\n            puVar4 = param_2 + 3;\n            for (param_1 = param_1 & 3; param_1 != 0; param_1 = param_1 - 1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + -1;\n                puVar4 = puVar4 + -1;\n            }\n        }\n    }\n    else if ((param_2 != in_EAX) && (-1 < iVar1)) {\n        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *param_2 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n        }\n        for (param_1 = param_1 & 3; param_1 != 0; param_1 = param_1 - 1) {\n            *param_2 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 438
    },
    "00403218": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403218(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x28);\n}\n",
        "token_count": 33
    },
    "00403220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403220(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "004032d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004032d4(int32_t **param_1, code *UNRECOVERED_JUMPTABLE)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if (UNRECOVERED_JUMPTABLE < 0xff000000) {\n        if (0xfdffffff < UNRECOVERED_JUMPTABLE) {\n    // WARNING: Could not recover jumptable at 0x004032eb. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(UNRECOVERED_JUMPTABLE + *in_EAX))();\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x004032ed. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    ppiVar2 = *((UNRECOVERED_JUMPTABLE & 0xffffff) + in_EAX);\n    if (ppiVar2 == NULL) {\n        piVar1 = *param_1;\n        *param_1 = NULL;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        return;\n    }\n    (*(*ppiVar2)[1])(ppiVar2, param_1, ppiVar2);\n    piVar1 = *ppiVar2;\n    *ppiVar2 = param_1;\n    if (piVar1 == NULL) {\n        return;\n    }\n    (**(*piVar1 + 8))(piVar1);\n    return;\n}\n",
        "token_count": 359
    },
    "00403398": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403398(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    do {\n        piVar1 = *(in_EAX + -0x48);\n        if (piVar1 != NULL) {\n            iVar2 = *piVar1;\n            piVar1 = piVar1 + 1;\n            do {\n                if ((((*param_2 == *piVar1) && (param_2[1] == piVar1[1])) && (param_2[2] == piVar1[2])) &&\n                   (param_2[3] == piVar1[3])) {\n                    return piVar1;\n                }\n                piVar1 = piVar1 + 7;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return NULL;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 251
    },
    "0040341c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040341c(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint16_t unaff_SI;\n    uint16_t *puVar2;\n    bool bVar3;\n    \n    do {\n        puVar2 = *(in_EAX + -0x30);\n        if (puVar2 != NULL) {\n            uVar1 = *puVar2;\n            bVar3 = puVar2 + 1 == NULL;\n            puVar2 = puVar2 + 1;\n            do {\n                if (uVar1 == 0) break;\n                uVar1 = uVar1 - 1;\n                bVar3 = unaff_SI == *puVar2;\n                puVar2 = puVar2 + 1;\n            } while (!bVar3);\n            if (bVar3) {\n                return;\n            }\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 236
    },
    "00403478": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403478(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x3c);\n}\n",
        "token_count": 34
    },
    "004034bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004034bc(uint param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    \n    uVar1 = 0;\n    uVar5 = 0;\n    uVar3 = *param_2;\n    while( true ) {\n        puVar4 = *(in_EAX + -0x34);\n        if (puVar4 != NULL) {\n            uVar5 = uVar5 & 0xffff0000 | *puVar4;\n            puVar4 = puVar4 + 1;\n            do {\n                uVar2 = uVar1 & 0xffffff00;\n                if (*(puVar4 + 3) == uVar3) {\n                    uVar2 = uVar1 & 0xffff0000 | *(puVar4 + 3);\n                    while (((*(uVar2 + 6 + puVar4) ^ param_2[uVar2]) & 0xdf) == 0) {\n                        uVar2 = uVar2 - 1;\n                        if (uVar2 == 0) {\n                            return *(puVar4 + 1);\n                        }\n                    }\n                    uVar3 = *param_2;\n                }\n                uVar1 = uVar2 & 0xffff0000 | *puVar4;\n                puVar4 = puVar4 + uVar1;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) break;\n        in_EAX = **(in_EAX + -0x24);\n    }\n    return 0;\n}\n",
        "token_count": 400
    },
    "004039ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004039ec(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint *in_stack_00000014;\n    int32_t in_stack_00000030;\n    \n    *(in_stack_00000030 + 4) = 0x403a37;\n    piVar3 = fcn.00405f78();\n    piVar2 = *piVar3;\n    *piVar3 = *piVar2;\n    piVar2 = piVar2[3];\n    puVar1 = piVar2 + 1;\n    *puVar1 = *puVar1 & 0xfffffffd;\n    if (*piVar2 != 0xeedfade) {\n        fcn.00403250();\n        fcn.004035d4();\n    }\n    *in_stack_00000014 = **in_FS_OFFSET;\n    return 1;\n}\n",
        "token_count": 213
    },
    "00403d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403d10(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *in_EAX;\n    do {\n        fcn.00405d0c();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 75
    },
    "00403d34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403d34(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *in_EAX;\n    do {\n        fcn.00405d0c();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 75
    },
    "00403d5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403d5c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    iVar2 = *in_EAX;\n    ppiVar1 = in_EAX + 1;\n    do {\n        **ppiVar1 = *ppiVar1[1] + ppiVar1[2];\n        ppiVar1 = ppiVar1 + 3;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 123
    },
    "00403fac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403fac(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    do {\n        iVar2 = *in_EAX;\n        if ((iVar2 != 0) && (*in_EAX = 0,  0 < *(iVar2 + -8))) {\n            LOCK();\n            piVar1 = iVar2 + -8;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                fcn.004026ec();\n            }\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 181
    },
    "0040404c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0040404c(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (0 < in_EAX) {\n        puVar1 = fcn.004026cc();\n        *(((in_EAX + 10U & 0xfffffffe) - 2) + puVar1) = 0;\n        puVar1[1] = in_EAX;\n        *puVar1 = 1;\n        return puVar1 + 2;\n    }\n    return NULL;\n}\n",
        "token_count": 117
    },
    "004040e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004040e4(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 1) {\n        fcn.00403f88(param_2);\n    }\n    else if ((param_1 + 1 < 0x7ff) && (iVar1 = fcn.004040a8(param_1),  -1 < iVar1)) {\n        fcn.00404078();\n    }\n    else {\n        fcn.004045d4();\n        fcn.004040a8(param_1);\n        fcn.004045d4();\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00404180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404180(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; (((*pcVar2 != '\\0' && (pcVar2[1] != '\\0')) && (pcVar2[2] != '\\0')) && (pcVar2[3] != '\\0'));\n            pcVar2 = pcVar2 + 4) {\n        }\n    }\n    uVar1 = fcn.0040404c();\n    if (param_2 != NULL) {\n        fcn.004028c8();\n    }\n    fcn.00403f88();\n    *in_EAX = uVar1;\n    return;\n}\n",
        "token_count": 184
    },
    "004041f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004041f8(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_EAX;\n    char *pcVar3;\n    \n    pcVar3 = param_2;\n    do {\n        if (param_1 == 0) break;\n        param_1 = param_1 + -1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    uVar2 = fcn.0040404c();\n    if (param_2 != NULL) {\n        fcn.004028c8();\n    }\n    fcn.00403f88();\n    *in_EAX = uVar2;\n    return;\n}\n",
        "token_count": 178
    },
    "00404250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404250(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    if (param_2 == 0) {\n        return;\n    }\n    if (*in_EAX != 0) {\n        if (param_2 == *in_EAX) {\n            fcn.004045d4();\n        }\n        else {\n            fcn.004045d4();\n        }\n        fcn.004028c8();\n        return;\n    }\n    if (param_2 != 0) {\n        iVar2 = *(param_2 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            param_2 = fcn.0040404c(param_2);\n            fcn.004028c8();\n        }\n        else {\n            LOCK();\n            *(param_2 + -8) = *(param_2 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = param_2;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.004026ec();\n        }\n    }\n    return;\n}\n",
        "token_count": 335
    },
    "00404294": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404294(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_EAX;\n    \n    iVar3 = param_1;\n    if ((param_2 != 0) && (iVar3 = param_2,  param_1 != 0)) {\n        if (param_2 != *in_EAX) {\n            if (param_1 == *in_EAX) {\n                iVar3 = fcn.0040404c();\n                fcn.004028c8();\n                fcn.004028c8();\n                if (iVar3 != 0) {\n                    *(iVar3 + -8) = *(iVar3 + -8) + -1;\n                }\n                fcn.00403fdc();\n                return;\n            }\n            fcn.00403fdc();\n        }\n        if (param_1 == 0) {\n            return;\n        }\n        iVar3 = param_1;\n        if (*in_EAX != 0) {\n            if (param_1 == *in_EAX) {\n                fcn.004045d4();\n            }\n            else {\n                fcn.004045d4();\n            }\n            fcn.004028c8();\n            return;\n        }\n    }\n    if (iVar3 != 0) {\n        iVar2 = *(iVar3 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            iVar3 = fcn.0040404c(iVar3);\n            fcn.004028c8();\n        }\n        else {\n            LOCK();\n            *(iVar3 + -8) = *(iVar3 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = iVar3;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.004026ec();\n        }\n    }\n    return;\n}\n",
        "token_count": 495
    },
    "00404308": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404308(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iStack24;\n    \n    piVar3 = NULL;\n    piVar1 = *(&stack0x00000000 + param_2 * 4);\n    iVar2 = param_2;\n    if ((piVar1 != NULL) && (*in_EAX == piVar1)) {\n        iVar2 = param_2 + -1;\n        piVar3 = piVar1;\n    }\n    do {\n        if ((*(&stack0x00000000 + iVar2 * 4) != NULL) && (piVar3 == *(&stack0x00000000 + iVar2 * 4))) {\n            piVar3 = NULL;\n        }\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    if (piVar3 == NULL) {\n        iStack24 = fcn.0040404c();\n    }\n    else {\n        fcn.004045d4();\n        iStack24 = *in_EAX;\n        param_2 = param_2 + -1;\n        piVar3 = in_EAX;\n    }\n    do {\n        if (*(&stack0x00000000 + param_2 * 4) != 0) {\n            fcn.004028c8();\n        }\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    if (piVar3 == NULL) {\n        if (iStack24 != 0) {\n            *(iStack24 + -8) = *(iStack24 + -8) + -1;\n        }\n        fcn.00403fdc();\n    }\n    // WARNING: Could not recover jumptable at 0x0040438f. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 464
    },
    "004044a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004044a8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((in_EAX == 0) || (*(in_EAX + -4) == 0)) || ((0 < param_2 && (*(in_EAX + -4) <= param_2 + -1)))) ||\n       (param_1 < 0)) {\n        fcn.00403f88();\n    }\n    else {\n        fcn.00404078();\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "004044e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004044e8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00404498();\n    if (*in_EAX != 0) {\n        if (((0 < param_2) && (param_2 + -1 < *(*in_EAX + -4))) && (0 < param_1)) {\n            fcn.004028c8();\n            fcn.004045d4();\n        }\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00404530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404530(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.004045d4();\n        fcn.004028c8();\n        fcn.004028c8();\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00404680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404680(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        if (iVar1 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar1);\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 127
    },
    "004046c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004046c8(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 1) {\n        fcn.00404668(param_2);\n    }\n    else if ((param_1 + 1 < 0x7ff) && (iVar1 = fcn.004040c8(param_1),  0 < iVar1)) {\n        fcn.00404754();\n    }\n    else {\n        fcn.004048b0();\n        fcn.004040c8(param_1);\n        fcn.004048b0();\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "004048b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004048b0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (0 < param_2) {\n        fcn.00404640();\n        iVar1 = fcn.004047d4();\n        if (0 < iVar1) {\n            fcn.004028c8();\n        }\n    }\n    fcn.00404658();\n    return;\n}\n",
        "token_count": 96
    },
    "004048f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004048f4(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00404924();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 123
    },
    "004049b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004049b8(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00404a04();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 124
    },
    "00404d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00404d80(uint param_1, int32_t param_2, uint32_t param_3, int32_t param_4)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX * param_3 & 0xffffffff | (in_EAX * param_3 >> 0x20) + param_4 * in_EAX + param_2 * param_3 << 0x20;\n}\n",
        "token_count": 100
    },
    "00405190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405190(void)\n\n{\n    fcn.00405004(&stack0x00000004);\n    return;\n}\n",
        "token_count": 30
    },
    "00405200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.00405200(void)\n\n{\n    uchar *puVar1;\n    uchar auStack28 [4];\n    int32_t iStack24;\n    \n    puVar1 = auStack28;\n    sub.kernel32.dll_VirtualQuery();\n    if (iStack24 != 0x1000) {\n        puVar1 = NULL;\n    }\n    return puVar1;\n}\n",
        "token_count": 84
    },
    "00405d0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405d0c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack1032 [1024];\n    \n    if (in_EAX != 0) {\n        if (*(in_EAX + 4) < 0x10000) {\n            uVar1 = fcn.00405278(*(in_EAX + 4), auStack1032, 0x400);\n            sub.user32.dll_LoadStringA(uVar1);\n            fcn.00404078();\n        }\n        else {\n            fcn.00404180();\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00406064": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406064(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    *arg_8h = in_EAX;\n    arg_8h[1] = in_EDX;\n    arg_8h[2] = in_ECX + in_EAX;\n    arg_8h[3] = in_EDX + arg_ch;\n    return;\n}\n",
        "token_count": 112
    },
    "00407d28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407d28(uint param_1, uint8_t **param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    iVar2 = fcn.00404248();\n    fcn.004045d4();\n    puVar3 = *param_2;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        uVar1 = *in_EAX;\n        if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n            uVar1 = uVar1 + 0x20;\n        }\n        *puVar3 = uVar1;\n        in_EAX = in_EAX + 1;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00407fd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407fd4(uint param_1, uint param_2)\n\n{\n    fcn.00407f88(param_2);\n    fcn.00404078();\n    return;\n}\n",
        "token_count": 46
    },
    "00407ff4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407ff4(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cVar8;\n    \n    if ((param_1 == '\\0') && (param_1 = 10,  (*(in_EAX + 4) & 0x80000000) != 0)) {\n        fcn.00408028(-*in_EAX, -(*(in_EAX + 4) + (*in_EAX != 0)));\n        unaff_ESI[-1] = 0x2d;\n        return;\n    }\n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cVar8 = ROUND(fVar6);\n        uVar2 = cVar8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cVar8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 514
    },
    "004080c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004080c0(uint arg_8h)\n\n{\n    fcn.00407ff4();\n    fcn.00404078();\n    return;\n}\n",
        "token_count": 39
    },
    "004080e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004080e8(uint param_1)\n\n{\n    fcn.00407f88(param_1);\n    fcn.00404078();\n    return;\n}\n",
        "token_count": 41
    },
    "004081a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004081a4(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404fd4();\n    if (iVar1 == 0) {\n        fcn.00405190(1);\n        fcn.00403fdc();\n    }\n    iVar1 = fcn.00404fd4();\n    if (iVar1 == 0) {\n        fcn.00405190(1);\n        fcn.00403fdc();\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00408234": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00408234(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0;\n    if (-1 < in_EDX) {\n        iVar1 = in_EDX + 1;\n        do {\n            in_EAX = fcn.00407e9c();\n            if (in_EAX != '\\0') {\n                _auStack8 = 0x1000000;\n                break;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return in_EAX & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 194
    },
    "00408270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00408270(uint param_1, uchar *param_2)\n\n{\n    uint uVar1;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_10h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    uVar1 = fcn.00409430();\n    if (uVar1 == '\\0') {\n        fcn.004081a4();\n        fcn.00404fdc();\n        uVar1 = fcn.00408234(arg_8h);\n        if (uVar1 == '\\0') {\n            fcn.00404fdc();\n            uVar1 = fcn.00408234(arg_8h_00);\n            if (uVar1 != '\\0') {\n                *param_2 = 0;\n            }\n        }\n        else {\n            *param_2 = 1;\n        }\n    }\n    else {\n        *param_2 = _var_10h != *0x4082f0;\n    }\n    return uVar1;\n}\n",
        "token_count": 262
    },
    "00408434": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00408434(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint lDistanceToMove;\n    uint lpDistanceToMoveHigh;\n    \n    uVar1 = sub.kernel32.dll_SetFilePointer();\n    return CONCAT44(arg_ch, uVar1);\n}\n",
        "token_count": 68
    },
    "0040852c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040852c(void)\n\n{\n    uint uVar1;\n    uchar auStack272 [4];\n    uchar auStack268 [260];\n    \n    uVar1 = fcn.00404448(0x104, auStack268, auStack272);\n    sub.kernel32.dll_GetFullPathNameA(uVar1);\n    fcn.00404078();\n    return;\n}\n",
        "token_count": 84
    },
    "00408568": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk size"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408568(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    uVar1 = sub.kernel32.dll_GetDiskFreeSpaceA(arg_8h, &var_4h, &var_8h, &var_ch, &var_10h);\n    uVar2 = fcn.00404d80(var_ch, 0);\n    *arg_ch = uVar2;\n    arg_ch[1] = uVar2 >> 0x20;\n    uVar2 = fcn.00404d80(var_10h, 0);\n    *arg_10h = uVar2;\n    arg_10h[1] = uVar2 >> 0x20;\n    return uVar1;\n}\n",
        "token_count": 247
    },
    "004087c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004087c8(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = fcn.004026cc();\n    *piVar1 = in_EAX + 4;\n    return piVar1 + 1;\n}\n",
        "token_count": 68
    },
    "00408cb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408cb8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint var_1008h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00404248();\n    if (iVar1 < 0xc00) {\n        uVar2 = fcn.00404248();\n        iVar3 = fcn.004088ac(arg_8h, in_ECX, uVar2);\n        iVar1 = 0x1000;\n    }\n    else {\n        iVar3 = fcn.00404248();\n        iVar1 = iVar3;\n    }\n    if (iVar3 < iVar1 + -1) {\n        fcn.00404078();\n    }\n    else {\n        for (; iVar1 + -1 <= iVar3; iVar1 = iVar1 * 2) {\n            fcn.00403f88();\n            fcn.004045d4();\n            uVar2 = fcn.00404248();\n            iVar3 = fcn.004088ac(arg_8h, in_ECX, uVar2);\n        }\n        fcn.004045d4();\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "0040937e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040937e(void)\n\n{\n    int32_t unaff_EBP;\n    char *unaff_ESI;\n    uint var_ch;\n    \n    while( true ) {\n        if (*unaff_ESI - 0x3aU < 0xf6) break;\n        *(unaff_EBP + -0xc) = *unaff_ESI - 0x30;\n        unaff_ESI = unaff_ESI + 1;\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0040939a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040939a(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *unaff_ESI;\n    \n    uVar2 = 0;\n    if ((*unaff_ESI == '+') || (*unaff_ESI == '-')) {\n        unaff_ESI = unaff_ESI + 1;\n    }\n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 - 0x3aU < 0xf6) {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n        uVar2 = uVar2 * 10 + (cVar1 - 0x30);\n    } while (uVar2 < 500);\n    return;\n}\n",
        "token_count": 169
    },
    "004093d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004093d0(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.00408dbc(0, 0xf, 0);\n    fcn.00404078();\n    return;\n}\n",
        "token_count": 55
    },
    "00409400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409400(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.00408dbc(0, 0, 0);\n    fcn.00404078();\n    return;\n}\n",
        "token_count": 53
    },
    "0040944c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040944c(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.00404448();\n    cVar1 = fcn.004092bc();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00409478": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409478(uint param_1, float *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.00404448();\n    cVar1 = fcn.004092bc();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "004094c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004094c0(double param_1)\n\n{\n    uint64_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    uVar1 = ROUND(param_1 * *0x46417c);\n    iStack16 = uVar1;\n    iStack12 = uVar1 >> 0x20;\n    if (uVar1 < 0) {\n        uVar1 = CONCAT44(-(iStack16 != 0) - iStack12, -iStack16);\n        uVar3 = uVar1 % *0x464180;\n        iVar2 = -(uVar1 / *0x464180);\n    }\n    else {\n        iVar2 = uVar1 / *0x464180;\n        uVar3 = uVar1 % *0x464180;\n    }\n    *in_EAX = uVar3;\n    in_EAX[1] = iVar2 + 0xa955a;\n    return;\n}\n",
        "token_count": 233
    },
    "00409504": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00409504(double *arg_8h, uint arg_ch)\n\n{\n    double *in_EAX;\n    uint16_t in_CX;\n    uint16_t in_DX;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if ((((in_EAX < 0x18) && (in_DX < 0x3c)) && (in_CX < 0x3c)) && (arg_ch < 1000)) {\n        *arg_8h = ((in_EAX & 0xffff) * 3600000 + in_DX * 60000 + in_CX * 1000 + arg_ch) / *0x409570;\n        var_1h._0_1_ = 1;\n        in_EAX = arg_8h;\n    }\n    return in_EAX & 0xffffff00 | var_1h;\n}\n",
        "token_count": 236
    },
    "00409574": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409574(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint in_EDX;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004094c0(arg_ch, arg_10h, &var_4h);\n    fcn.00407c28(arg_ch);\n    fcn.00407c28(in_EDX);\n    fcn.00407c28(arg_8h);\n    return;\n}\n",
        "token_count": 108
    },
    "004096d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004096d4(int16_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int16_t *in_EAX;\n    int32_t iVar4;\n    uint16_t *in_EDX;\n    uint32_t uVar5;\n    int16_t iVar6;\n    uint var_18h;\n    int32_t var_14h;\n    int16_t var_10h;\n    uint16_t var_eh;\n    int16_t *var_ch;\n    uint16_t *var_8h;\n    int16_t *var_4h;\n    \n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.004094c0(arg_ch, arg_10h);\n    if (var_14h < 1) {\n        *var_4h = 0;\n        *var_8h = 0;\n        *var_ch = 0;\n        *arg_8h = 0;\n        uVar5 = 0;\n    }\n    else {\n        *arg_8h = var_14h % 7 + 1;\n        iVar6 = 1;\n        for (iVar4 = var_14h + -1; 0x23ab0 < iVar4; iVar4 = iVar4 + -0x23ab1) {\n            iVar6 = iVar6 + 400;\n        }\n        fcn.00407c28(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x8eac;\n        }\n        iVar2 = var_10h * 0x68;\n        fcn.00407c28(&var_eh);\n        fcn.00407c28(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x16d;\n        }\n        uVar5 = fcn.004095d0();\n        uVar3 = 1;\n        for (; uVar1 = *((uVar5 & 0xff) * 0x18 + 0x4640da + uVar3 * 2),  uVar1 <= var_eh; var_eh = var_eh - uVar1) {\n            uVar3 = uVar3 + 1;\n        }\n        *var_4h = iVar6 + iVar2 + var_10h;\n        *var_8h = uVar3;\n        *var_ch = var_eh + 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 605
    },
    "00409840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409840(uint arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.004094c0(arg_8h, arg_ch);\n    return var_4h % 7 + 1;\n}\n",
        "token_count": 70
    },
    "00409868": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t fcn.00409868(void)\n\n{\n    int16_t iStack20;\n    \n    iStack20 = *0x10 + -0x10;\n    sub.kernel32.dll_GetLocalTime();\n    return iStack20;\n}\n",
        "token_count": 53
    },
    "0040987c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040987c(int32_t arg_8h)\n\n{\n    int32_t in_EDX;\n    int32_t iVar1;\n    \n    iVar1 = 0x100 - *(arg_8h + -0x104);\n    if (in_EDX < iVar1) {\n        iVar1 = in_EDX;\n    }\n    if (iVar1 != 0) {\n        fcn.004028c8();\n    }\n    *(arg_8h + -0x104) = *(arg_8h + -0x104) + iVar1;\n    return;\n}\n",
        "token_count": 130
    },
    "004098e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004098e0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch._0_1_ = 0;\n    var_14h._0_1_ = 0;\n    arg_8h_00 = 1;\n    fcn.004088ac(1, &var_20h, 4);\n    fcn.0040987c(arg_8h_00);\n    return;\n}\n",
        "token_count": 150
    },
    "0040a3f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a3f4(uint param_1, int32_t param_2)\n\n{\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    \n    if (param_2 == 0) {\n        fcn.00409c40(&stack0xfffffffc);\n    }\n    else {\n        fcn.00409c40(&stack0xfffffffc);\n    }\n    fcn.00404078();\n    return;\n}\n",
        "token_count": 106
    },
    "0040a51c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a51c(int32_t param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack32 = 0x40a595;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.0040a464();\n        puStack40 = &fcn.0040a51c::var_8h;\n        fcn.00404248();\n        fcn.004044a8();\n        iVar2 = fcn.00407e64();\n        puVar1 = puStack28;\n        if (iVar2 == 0) {\n            iVar2 = fcn.00404248();\n            *param_2 = *param_2 + iVar2;\n            puVar1 = puStack28;\n        }\n    }\n    puStack28 = puVar1;\n    *in_FS_OFFSET = puStack40;\n    uStack32 = 0x40a59c;\n    iStack36 = 0x40a594;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 341
    },
    "0040acc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040acc4(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    double dStack28;\n    \n    uVar3 = 1;\n    cVar1 = fcn.0040a724();\n    if (cVar1 == '\\0') {\ncode_r0x0040ad0f:\n        uVar3 = fcn.0040ac90();\n    }\n    else {\n        iVar2 = fcn.00404248();\n        if (0 < iVar2) {\n            cVar1 = fcn.0040aa68();\n            if (cVar1 == '\\0') goto code_r0x0040ad0f;\n        }\n        if (dStack28 < *0x40ad4c) {\n            *param_2 = dStack28 - 0.0;\n        }\n        else {\n            *param_2 = dStack28 + 0.0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 227
    },
    "0040ad50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040ad50(void)\n\n{\n    int32_t iVar1;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack276;\n    uchar *puStack272;\n    uint uStack268;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0;\n    uStack268 = 0x100;\n    puStack272 = &stack0xfffffefc;\n    uStack276 = 0;\n    uStack284 = 0;\n    uStack288 = 0x3200;\n    uStack292 = 0x40ad74;\n    for (iVar1 = sub.kernel32.dll_FormatMessageA();\n        (0 < iVar1 && (((&stack0xfffffedf)[iVar1] < 0x21 || ((&stack0xfffffedf)[iVar1] == 0x2e)))); iVar1 = iVar1 + -1)\n    {\n    }\n    uStack292 = 0x40ad93;\n    fcn.00404078();\n    return;\n}\n",
        "token_count": 234
    },
    "0040ad9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ad9c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint lpLCData;\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (iVar1 < 1) {\n        fcn.00403fdc();\n    }\n    else {\n        fcn.00404078();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "0040ae4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ae4c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    uStack48 = 0x40af5f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_4h = sub.kernel32.dll_GetThreadLocale_1();\n    iVar1 = 1;\n    do {\n        fcn.0040ae10(&var_ch, 0xb, &stack0xfffffffc);\n        fcn.00403fdc();\n        fcn.0040ae10(&var_10h, 0xb, &stack0xfffffffc);\n        fcn.00403fdc();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0xd);\n    iVar1 = 1;\n    do {\n        var_8h = (iVar1 + 5) % 7;\n        fcn.0040ae10(&var_14h, 6, &stack0xfffffffc);\n        fcn.00403fdc();\n        fcn.0040ae10(&var_18h, 6, &stack0xfffffffc);\n        fcn.00403fdc();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 8);\n    *in_FS_OFFSET = uStack52;\n    fcn.00403fac(0x40af66);\n    return;\n}\n",
        "token_count": 432
    },
    "0040b024": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040b024(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    code **in_FS_OFFSET;\n    code *in_stack_ffffffc4;\n    code *pcStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack20 = 0x40b0bb;\n    pcStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &pcStack24;\n    puVar3 = &var_4h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040ad9c(puVar3);\n    iVar1 = fcn.0040814c();\n    if (iVar1 - 3U < 3) {\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 4);\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040af70, uVar2);\n        iVar4 = 7;\n        puVar3 = 0x470770;\n        do {\n            *puVar3 = 0xffffffff;\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 3);\n        in_stack_ffffffc4 = fcn.0040afac;\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040afac, uVar2);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.00403f88(0x40b0c2);\n    return;\n}\n",
        "token_count": 401
    },
    "0040b308": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b308(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_EDX;\n    uint var_458h;\n    uint *var_358h;\n    uint var_354h;\n    uint *var_350h;\n    uint var_34ch;\n    int32_t var_348h;\n    uint var_344h;\n    int32_t var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    int32_t var_32ch;\n    int32_t var_320h;\n    uint var_312h;\n    uint var_212h;\n    uint var_10dh;\n    int32_t var_8h;\n    uint var_4h;\n    \n    sub.kernel32.dll_VirtualQuery_1();\n    if (var_320h == 0x1000) {\n        iVar3 = var_32ch;\n        iVar2 = sub.kernel32.dll_GetModuleFileNameA_1(var_32ch, &var_212h, 0x105);\n        if (iVar2 != 0) {\n            var_8h = in_EDX - var_32ch;\n            goto code_r0x0040b37e;\n        }\n    }\n    iVar3 = *0x470668;\n    sub.kernel32.dll_GetModuleFileNameA_1();\n    var_8h = fcn.0040b2fc();\ncode_r0x0040b37e:\n    fcn.0040c35c(iVar3);\n    fcn.00408640();\n    var_340h = 0x40b488;\n    var_338h = 0x40b488;\n    cVar1 = fcn.004033dc();\n    if (cVar1 != '\\0') {\n        var_340h = fcn.00404448();\n        iVar3 = fcn.004085dc();\n        if ((iVar3 != 0) && (*(var_340h + -1 + iVar3) != '.')) {\n            var_338h = 0x40b48c;\n        }\n    }\n    uVar4 = fcn.00405278(*(*0x46fbe8 + 4), &var_312h, 0x100);\n    sub.user32.dll_LoadStringA_1(uVar4);\n    fcn.004031a0();\n    var_358h = &var_458h;\n    var_354h._0_1_ = 4;\n    var_350h = &var_10dh;\n    var_34ch._0_1_ = 6;\n    var_348h = var_8h;\n    var_344h._0_1_ = 5;\n    var_33ch._0_1_ = 6;\n    var_334h._0_1_ = 6;\n    fcn.00408c64(4, &var_358h);\n    fcn.004085dc();\n    return;\n}\n",
        "token_count": 689
    },
    "0040b564": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b564(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403fdc();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "0040b5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b5a0(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack40 = 0x40b5b4;\n        fcn.0040355c();\n    }\n    uStack44 = 0x40b5fa;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h_00 = &fcn.0040b5a0::var_4h;\n    puStack40 = &stack0xfffffffc;\n    fcn.00408ca4(arg_8h_00);\n    fcn.00403fdc();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack44 = 0x40b601;\n    iStack48 = 0x40b5f9;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 266
    },
    "0040b620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b620(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00405d0c();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "0040b65c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b65c(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack44 = 0x40b672;\n        fcn.0040355c();\n    }\n    uStack48 = 0x40b6c8;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    arg_8h_00 = &fcn.0040b65c::var_4h;\n    puStack44 = &stack0xfffffffc;\n    fcn.00405d0c();\n    fcn.00408ca4(arg_8h_00);\n    fcn.00403fdc();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack48 = 0x40b6cf;\n    iStack52 = 0x40b6c7;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 279
    },
    "0040b6f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b6f0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040355c();\n        in_DL = extraout_DL;\n    }\n    fcn.00403fdc();\n    *(in_EAX + 8) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 149
    },
    "0040b838": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040b838(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack56 = 0x40b8d4;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    if (in_EAX == 0) {\n        fcn.00405d0c();\n    }\n    else {\n        puStack52 = &stack0xfffffffc;\n        fcn.00404020();\n    }\n    var_1ch = var_4h;\n    var_18h._0_1_ = 0xb;\n    var_10h._0_1_ = 0xb;\n    var_8h._0_1_ = 0;\n    arg_ch = &var_1ch;\n    arg_8h = 2;\n    var_14h = param_2;\n    fcn.00405d0c();\n    fcn.0040b5a0(arg_8h, arg_ch);\n    *in_FS_OFFSET = arg_8h;\n    uStack60 = 0x40b8db;\n    fcn.00403f88();\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 394
    },
    "0040b8f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b8f4(uint arg_8h)\n\n{\n    fcn.0040b838();\n    fcn.0040b8e4();\n    return;\n}\n",
        "token_count": 44
    },
    "0040b928": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040b928(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    unkbyte3 Var3;\n    int32_t iVar2;\n    \n    iVar1 = *in_EAX;\n    Var3 = iVar1 >> 8;\n    if (iVar1 < -0x3fffff6d) {\n        iVar2 = iVar1;\n        if (iVar1 == -0x3fffff6e) {\ncode_r0x0040b98c:\n            return CONCAT31(iVar2 >> 8, 6);\n        }\n        if (iVar1 < -0x3fffff71) {\n            if (iVar1 == -0x3fffff72) {\n                return CONCAT31(Var3, 7);\n            }\n            if (iVar1 == -0x3ffffffb) {\n                return 0xb;\n            }\n            if (iVar1 == -0x3fffff74) {\n                return 4;\n            }\n            iVar2 = iVar1 + 0x3fffff73;\n            if (iVar2 == 0) goto code_r0x0040b995;\n        }\n        else {\n            iVar2 = iVar1 + 0x3fffff6f;\n            if (iVar1 + 0x3fffff71U < 2) goto code_r0x0040b98c;\n            if (iVar2 == 0) {\n                return 8;\n            }\n        }\n    }\n    else if (iVar1 < -0x3fffff69) {\n        if (iVar1 == -0x3fffff6a) {\n            return CONCAT31(Var3, 0xc);\n        }\n        iVar2 = iVar1 + 0x3fffff6d;\n        if (iVar2 == 0) {\ncode_r0x0040b995:\n            return CONCAT31(iVar2 >> 8, 9);\n        }\n        if (iVar1 == -0x3fffff6c) {\n            return 3;\n        }\n        iVar2 = iVar1 + 0x3fffff6b;\n        if (iVar2 == 0) {\n            return 5;\n        }\n    }\n    else {\n        if (iVar1 == -0x3fffff03) {\n            return 0xe;\n        }\n        iVar2 = iVar1 + 0x3ffffec6;\n        if (iVar2 == 0) {\n            return 0xd;\n        }\n    }\n    return CONCAT31(iVar2 >> 8, 0x16);\n}\n",
        "token_count": 552
    },
    "0040bdfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get file version info"
        ],
        "decompiled_code": "\nvoid fcn.0040bdfc(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa0;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint puLen;\n    int32_t lplpBuffer;\n    uint pBlock;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack40 = 0x40bed2;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    var_4h = 0xffffffff;\n    puStack48 = 0x40be29;\n    fcn.00404020();\n    puStack48 = 0x40be31;\n    fcn.00404498();\n    puStack48 = &fcn.0040bdfc::var_ch;\n    uStack52 = 0x40be3d;\n    uStack52 = fcn.00404448();\n    puStack56 = 0x40be43;\n    iVar1 = sub.version.dll_GetFileVersionInfoSizeA();\n    if (iVar1 != 0) {\n        puStack56 = 0x40be50;\n        pBlock = fcn.004026cc();\n        uStack60 = 0x40beb5;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        uVar2 = fcn.00404448(var_ch, iVar1, pBlock);\n        iVar1 = sub.version.dll_GetFileVersionInfoA(uVar2);\n        if (iVar1 != 0) {\n            in_stack_ffffffa0 = pBlock;\n            iVar1 = sub.version.dll_VerQueryValueA(pBlock, 0x40bee4, &fcn.0040bdfc::lplpBuffer, &fcn.0040bdfc::puLen);\n            if (iVar1 != 0) {\n                var_4h = *(lplpBuffer + 8);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffa0;\n        fcn.004026ec(0x40bebc);\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    uStack44 = 0x40bed9;\n    puStack48 = 0x40bed1;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 595
    },
    "0040c3c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location"
        ],
        "decompiled_code": "\nvoid fcn.0040c3c4(void)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint lpLCData;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x40c428;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    uVar1 = 7;\n    sub.kernel32.dll_GetLocaleInfoA_1();\n    fcn.004041f8();\n    sub.kernel32.dll_GetACP(0);\n    fcn.0040814c();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00403f88(0x40c42f, uVar1);\n    return;\n}\n",
        "token_count": 190
    },
    "0040c9a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040c9a4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x40ca34;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    iVar1 = sub.kernel32.dll_GetLastError();\n    if (iVar1 == 0) {\n        iVar2 = fcn.0040b620();\n    }\n    else {\n        var_ch._0_1_ = 0;\n        var_10h = iVar1;\n        fcn.0040ad50();\n        var_8h = 0;\n        var_4h._0_1_ = 0xb;\n        in_stack_ffffffd0 = 1;\n        iVar2 = fcn.0040b65c(1, &var_10h);\n    }\n    *(iVar2 + 0xc) = iVar1;\n    fcn.004039c4();\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x40ca3b;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 340
    },
    "0040cc40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040cc40(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403220();\n    *(in_EAX + 0xc) = 0xffff;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0xffffffff, 0);\n    *(in_EAX + 0x10) = uVar1;\n    uVar2 = 0;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n    *(in_EAX + 0x14) = uVar1;\n    *(in_EAX + 0x18) = 0xffffffff;\n    uVar1 = fcn.00403220();\n    *(in_EAX + 0x20) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 289
    },
    "0040cfcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040cfcc(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x40cfdb;\n    uStack24 = param_2;\n    sub.kernel32.dll_SetErrorMode();\n    uStack32 = 0x40d03e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x40d020;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.00404448();\n    sub.kernel32.dll_LoadLibraryA();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 249
    },
    "0040e348": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e348(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x40e3d7;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00413108();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.00413108();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.00405d0c();\n    fcn.0040b5a0(arg_8h, arg_ch);\n    fcn.004039c4();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x40e3de;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 309
    },
    "0040e438": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e438(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x40e4c7;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00413108();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.00413108();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.00405d0c();\n    fcn.0040b5a0(arg_8h, arg_ch);\n    fcn.004039c4();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x40e4ce;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 309
    },
    "0040e8a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040e8a8(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 184
    },
    "0040e8d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e8d8(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.0040e8d8(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 241
    },
    "0040e934": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040e934(void)\n\n{\n    char cVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint plLbound;\n    uint ppvData;\n    uint var_310h;\n    int32_t plUbound;\n    uint16_t *psa;\n    uint pvarg;\n    uint var_300h;\n    uint var_2fch;\n    uint rgIndices;\n    \n    if ((*(in_EAX + 1) & 0x20) == 0) {\n        fcn.0040e77c();\n    }\n    if ((*in_EAX & 0xfff) == 0xc) {\n        if ((*in_EAX & 0x4000) == 0) {\n            psa = *(in_EAX + 4);\n        }\n        else {\n            psa = **(in_EAX + 4);\n        }\n        uVar2 = *psa;\n        if (-1 < uVar2 - 1) {\n            iVar7 = 0;\n            piVar6 = &var_300h;\n            uVar5 = uVar2;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar7 + 1, piVar6 + 1);\n                fcn.0040e77c();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.0040e77c();\n                *piVar6 = (plUbound - piVar6[1]) + 1;\n                iVar7 = iVar7 + 1;\n                piVar6 = piVar6 + 2;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (-1 < uVar2 - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.0040e8a8(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex();\n                fcn.0040e77c();\n                fcn.0040eb2c();\n            }\n            cVar1 = fcn.0040e8d8(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    sub.oleaut32.dll_VariantClear(in_EAX);\n    fcn.0040e77c();\n    return;\n}\n",
        "token_count": 646
    },
    "0040eb48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040eb48(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "0040eb78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040eb78(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.0040eb78(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "0040ebd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ebd4(code *param_1, uint16_t *param_2)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint plLbound;\n    uint var_31ch;\n    uint ppvData;\n    uint16_t *psa;\n    uint32_t cDims;\n    int32_t plUbound;\n    code *var_308h;\n    ushort *pvargDest;\n    uint rgsabound;\n    uint var_2fch;\n    uint rgIndices;\n    \n    var_308h = param_1;\n    pvargDest = in_EAX;\n    if ((*(param_2 + 1) & 0x20) == 0) {\n        fcn.0040e77c();\n    }\n    if ((*param_2 & 0xfff) == 0xc) {\n        if ((*param_2 & 0x4000) == 0) {\n            psa = *(param_2 + 4);\n        }\n        else {\n            psa = **(param_2 + 4);\n        }\n        uVar2 = *psa;\n        cDims = uVar2;\n        if (-1 < uVar2 - 1) {\n            iVar6 = 0;\n            piVar5 = &rgsabound;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar6 + 1, piVar5 + 1);\n                fcn.0040e77c();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.0040e77c();\n                *piVar5 = (plUbound - piVar5[1]) + 1;\n                iVar6 = iVar6 + 1;\n                piVar5 = piVar5 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        iVar6 = sub.oleaut32.dll_SafeArrayCreate(0xc, cDims, &rgsabound);\n        if (iVar6 == 0) {\n            fcn.0040e4d4();\n        }\n        fcn.0040eb2c();\n        *pvargDest = 0x200c;\n        *(pvargDest + 4) = iVar6;\n        if (-1 < cDims - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            uVar2 = cDims;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.0040eb48(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(psa, &rgIndices, &ppvData);\n                fcn.0040e77c();\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(iVar6, &rgIndices, &var_31ch);\n                fcn.0040e77c();\n                (*var_308h)();\n            }\n            cVar1 = fcn.0040eb78(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    else {\n        sub.oleaut32.dll_VariantCopy(pvargDest, param_2);\n        fcn.0040e77c();\n    }\n    return;\n}\n",
        "token_count": 828
    },
    "0040ee98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ee98(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    \n    puStack36 = &fcn.0040ee98::pvarg;\n    puStack40 = 0x40eeb0;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x40eef4;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0040ee54();\n    (**0x470818)();\n    fcn.0040f120();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x40eefb;\n    uStack44 = 0x40eef3;\n    fcn.0040eb2c();\n    return;\n}\n",
        "token_count": 213
    },
    "0040f400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040f400(void)\n\n{\n    uchar *puStack24;\n    uchar auStack20 [16];\n    \n    puStack24 = auStack20;\n    sub.oleaut32.dll_VariantInit();\n    (***0x46faf0)(&puStack24);\n    fcn.0040e788();\n    return 0x400;\n}\n",
        "token_count": 79
    },
    "0040f43c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f43c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_4h;\n    \n    puStack32 = &fcn.0040f43c::pvarg;\n    puStack36 = 0x40f44e;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x40f490;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0040ee54();\n    (**0x470818)();\n    var_4h = fcn.0040f4e4();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x40f497;\n    uStack40 = 0x40f48f;\n    fcn.0040eb2c();\n    return;\n}\n",
        "token_count": 227
    },
    "0040f4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.0040f4a0(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    \n    uVar1 = fcn.00413564();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(3);\n        *param_2 = iStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 125
    },
    "0040fef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040fef0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &fcn.0040fef0::pvarg;\n    puStack40 = 0x40ff02;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x40ff47;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0040ee54();\n    (**0x470818)();\n    _var_8h = fcn.0040ffa8();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x40ff4e;\n    uStack44 = 0x40ff46;\n    fcn.0040eb2c();\n    return;\n}\n",
        "token_count": 240
    },
    "0040ff5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.0040ff5c(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00413564();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(0x14);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 146
    },
    "004104f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004104f4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_1h;\n    \n    puStack32 = &fcn.004104f4::pvarg;\n    puStack36 = 0x410506;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x410548;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.004104f4::var_1h + 1;\n    fcn.0040ee54();\n    (**0x470818)();\n    var_1h._0_1_ = fcn.004105a4();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41054f;\n    uStack40 = 0x410547;\n    fcn.0040eb2c();\n    return;\n}\n",
        "token_count": 259
    },
    "004108ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004108ec(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x4109a1;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fcn.00412544();\n    uVar3 = 0;\n    iVar2 = (***0x46f9c8)(0, 0x400, 0, &var_8h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.00404210();\n        cVar1 = fcn.00409430();\n        if (cVar1 == '\\0') {\n            fcn.0040e788();\n        }\n        else {\n            _var_8h = _var_18h;\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.0040e788();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00403f88(0x4109a8);\n    fcn.00404668();\n    return;\n}\n",
        "token_count": 321
    },
    "004109b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.004109b0(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x46faf0)(auStack24);\n    fcn.0040e788();\n    return CONCAT44(auStack20, 5);\n}\n",
        "token_count": 76
    },
    "004109fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004109fc(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    double dStack12;\n    \n    puStack36 = &fcn.004109fc::pvarg;\n    puStack40 = 0x410a0e;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x410a51;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0040ee54();\n    (**0x470818)();\n    fVar1 = fcn.00410aac();\n    dStack12 = fVar1;\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x410a58;\n    uStack44 = 0x410a50;\n    fcn.0040eb2c();\n    return;\n}\n",
        "token_count": 233
    },
    "00410a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00410a60(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00413564();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(5);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 143
    },
    "00410fb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410fb8(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x411094;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00412544();\n    uVar3 = 0;\n    iVar2 = (***0x46f7d8)(0, 0x400, 0, &var_8h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.00404210();\n        cVar1 = fcn.0040ac5c();\n        if (cVar1 == '\\0') {\n            fcn.00404210();\n            cVar1 = fcn.0040944c();\n            if (cVar1 == '\\0') {\n                fcn.0040e788();\n            }\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.0040e788();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00403fac(0x41109b);\n    fcn.00404668();\n    return;\n}\n",
        "token_count": 347
    },
    "004110a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.004110a4(uint arg_8h, uint arg_ch)\n\n{\n    uint pvarg;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.oleaut32.dll_VariantInit(&pvarg);\n    pvarg._0_2_ = 5;\n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    (***0x46faf0)(&pvarg, &pvarg, 0x400, 0, 7);\n    fcn.0040e788();\n    return CONCAT44(var_ch, var_10h);\n}\n",
        "token_count": 159
    },
    "00411104": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.00411104(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x46faf0)(auStack24);\n    fcn.0040e788();\n    return CONCAT44(auStack20, 7);\n}\n",
        "token_count": 75
    },
    "00411150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411150(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    double dStack12;\n    \n    puStack36 = &fcn.00411150::pvarg;\n    puStack40 = 0x411162;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x4111a5;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0040ee54();\n    (**0x470818)();\n    fVar1 = fcn.00411200();\n    dStack12 = fVar1;\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x4111ac;\n    uStack44 = 0x4111a4;\n    fcn.0040eb2c();\n    return;\n}\n",
        "token_count": 233
    },
    "004111b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.004111b4(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00413564();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(7);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 143
    },
    "00411550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411550(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4115fc;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    fcn.00412544();\n    uVar3 = 0;\n    iVar2 = (***0x46fb78)(0, 0x400, 0, &var_8h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.00404210();\n        cVar1 = fcn.004094a4();\n        if (cVar1 == '\\0') {\n            fcn.0040e788();\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.0040e788();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00403f88(0x411603);\n    fcn.00404668();\n    return;\n}\n",
        "token_count": 282
    },
    "0041160c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.0041160c(uint arg_8h, uint arg_ch)\n\n{\n    uint pvarg;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.oleaut32.dll_VariantInit(&pvarg);\n    pvarg._0_2_ = 5;\n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    (***0x46faf0)(&pvarg, &pvarg, 0x400, 0, 6);\n    fcn.0040e788();\n    return CONCAT44(var_ch, var_10h);\n}\n",
        "token_count": 159
    },
    "0041166c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.0041166c(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x46faf0)(auStack24);\n    fcn.0040e788();\n    return CONCAT44(auStack20, 6);\n}\n",
        "token_count": 76
    },
    "004116b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004116b8(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    int64_t iStack12;\n    \n    puStack36 = &fcn.004116b8::pvarg;\n    puStack40 = 0x4116ca;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x41170d;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0040ee54();\n    (**0x470818)();\n    fVar1 = fcn.00411768();\n    iStack12 = ROUND(fVar1);\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x411714;\n    uStack44 = 0x41170c;\n    fcn.0040eb2c();\n    return;\n}\n",
        "token_count": 236
    },
    "0041171c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.0041171c(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00413564();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(6);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 143
    },
    "00411c68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411c68(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_14h = 0;\n    uStack44 = 0x411d27;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = &fcn.00411c68::pvarg;\n    puStack56 = 0x411c93;\n    sub.oleaut32.dll_VariantInit();\n    uStack60 = 0x411d05;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    (***0x46faf0)(&fcn.00411c68::pvarg);\n    fcn.0040e788();\n    arg_8h = &fcn.00411c68::var_14h;\n    fcn.00404778();\n    fcn.00404864(arg_8h);\n    fcn.00404210();\n    *in_FS_OFFSET = arg_8h;\n    fcn.0040eb2c(0x411d0c);\n    return;\n}\n",
        "token_count": 353
    },
    "00411d34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411d34(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.00411d34::pvarg;\n    puStack36 = 0x411d49;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x411d8a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0040ee54();\n    (**0x470818)();\n    fcn.00411e1c();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x411d91;\n    uStack40 = 0x411d89;\n    fcn.0040eb2c();\n    return;\n}\n",
        "token_count": 211
    },
    "00412360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412360(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x41240a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = &fcn.00412360::pvarg;\n    puStack52 = 0x412388;\n    sub.oleaut32.dll_VariantInit();\n    uStack56 = 0x4123ed;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uVar3 = 8;\n    uVar2 = 0;\n    uVar1 = 0x400;\n    puStack52 = &stack0xfffffffc;\n    (***0x46faf0)(&fcn.00412360::pvarg);\n    fcn.0040e788();\n    fcn.00404778();\n    fcn.00404864(param_2);\n    *in_FS_OFFSET = param_2;\n    fcn.0040eb2c(0x4123f4, uVar1, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 356
    },
    "00412418": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412418(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.00412418::pvarg;\n    puStack36 = 0x41242d;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x41246e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0040ee54();\n    (**0x470818)();\n    fcn.00412544();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x412475;\n    uStack40 = 0x41246d;\n    fcn.0040eb2c();\n    return;\n}\n",
        "token_count": 205
    },
    "00412aa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00412aa4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack32 = &fcn.00412aa4::pvarg;\n    puStack36 = 0x412ab9;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x412b0e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0040ee54();\n    (**0x470818)();\n    if (pvarg != 0xd) {\n        fcn.0040e348();\n    }\n    fcn.00405860();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x412b15;\n    uStack40 = 0x412b0d;\n    fcn.0040eb2c();\n    return;\n}\n",
        "token_count": 249
    },
    "00413108": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid fcn.00413108(void)\n\n{\n    char cVar1;\n    uint16_t in_AX;\n    int32_t *in_FS_OFFSET;\n    uint *puStack552;\n    int32_t iStack548;\n    uint uStack544;\n    uchar *puStack540;\n    uint var_208h;\n    uint var_204h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack540 = &stack0xfffffffc;\n    uStack544 = 0x41322e;\n    iStack548 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffddc;\n    if ((in_AX & 0xfff) < 0x15) {\n        puStack552 = 0x41314c;\n        puStack540 = &stack0xfffffffc;\n        fcn.00403fdc();\n    }\n    else if (in_AX == 0x100) {\n        puStack552 = 0x413164;\n        puStack540 = &stack0xfffffffc;\n        fcn.00403fdc();\n    }\n    else if (in_AX == 0x101) {\n        puStack552 = 0x41317c;\n        puStack540 = &stack0xfffffffc;\n        fcn.00403fdc();\n    }\n    else {\n        cVar1 = fcn.00413564();\n        if (cVar1 == '\\0') {\n            fcn.004080e8();\n            puStack552 = 0x4131ef;\n            fcn.00404294();\n        }\n        else {\n            puStack552 = &fcn.00413108::var_104h;\n            fcn.004031a0();\n            fcn.00402864();\n            fcn.004041ec();\n        }\n    }\n    if ((in_AX & 0x2000) != 0) {\n        fcn.00404294();\n    }\n    if ((in_AX & 0x4000) != 0) {\n        fcn.00404294();\n    }\n    *in_FS_OFFSET = puStack552;\n    uStack544 = 0x413235;\n    iStack548 = 0x41322d;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 484
    },
    "00413370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413370(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != *(in_EAX + 4)) && (cVar1 = fcn.00413564(),  cVar1 != '\\0')) {\n        (**(*var_8h + 0x1c))(arg_8h);\n        return;\n    }\n    fcn.004134e4();\n    return;\n}\n",
        "token_count": 124
    },
    "004133c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.004133c4(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t in_ECX;\n    uint var_1h;\n    \n    (**(*in_EAX + 0x38))(&var_1h);\n    return *(arg_8h * 3 + 0x46436a + (in_ECX >> 0x18));\n}\n",
        "token_count": 108
    },
    "00413438": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00413438(void)\n\n{\n    uint uVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_5h;\n    \n    uStack16 = 0x413443;\n    *NULL = fcn.004035c4();\n    uStack16 = 0x470828;\n    uStack20 = 0x413453;\n    var_5h._0_1_ = extraout_DL;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(stack0xfffffff8 + 4) != 0) {\n        *(*0x470824 + -0x400 + *(stack0xfffffff8 + 4) * 4) = *0x464328;\n    }\n    *in_FS_OFFSET = uVar1;\n    uStack20 = 0x4134a2;\n    uStack24 = 0x470828;\n    uStack28 = 0x41349a;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 280
    },
    "0041361c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041361c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack316;\n    uint uStack312;\n    uchar *puStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_110h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    uStack296 = 0x4136f2;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    uStack304 = 0x470828;\n    puStack308 = 0x41364f;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack312 = 0x4136d5;\n    uStack316 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec4;\n    puStack308 = &stack0xfffffffc;\n    iVar3 = fcn.00404fdc();\n    if (-1 < iVar3) {\n        iVar3 = iVar3 + 1;\n        iVar4 = 0;\n        do {\n            iVar1 = *(*0x470824 + iVar4 * 4);\n            if ((iVar1 != 0) && (iVar1 != *0x464328)) {\n                fcn.004031a0();\n                fcn.004041ec();\n                cVar2 = fcn.00407e08();\n                if (cVar2 != '\\0') {\n                    *param_2 = iVar1;\n                    break;\n                }\n            }\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack316;\n    puStack308 = 0x4136dc;\n    uStack312 = 0x470828;\n    uStack316 = 0x4136d4;\n    sub.kernel32.dll_LeaveCriticalSection_1();\n    return;\n}\n",
        "token_count": 486
    },
    "00413b78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413b78(uint8_t *param_1, int32_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t *in_EAX;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    \n    piVar3 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar6 = (piVar3 & 0xffffff) + in_EAX;\n        uVar2 = *(**param_2 + 2 + *(**param_2 + 1));\n        uVar4 = *param_1;\n        if (uVar2 <= *param_1) {\n            uVar4 = uVar2;\n        }\n        *puVar6 = uVar4;\n        puVar1 = param_1 + 1;\n        for (uVar5 = uVar4; puVar6 = puVar6 + 1,  uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar6 = *puVar1;\n            puVar1 = puVar1 + 1;\n        }\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(piVar3 + *in_EAX))();\n        return;\n    }\n    (*piVar3)();\n    return;\n}\n",
        "token_count": 331
    },
    "00413bcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413bcc(void)\n\n{\n    fcn.00404224();\n    fcn.00413b78();\n    return;\n}\n",
        "token_count": 32
    },
    "00413c14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413c14(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.00413c00();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 118
    },
    "00413cd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413cd8(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x413d9e;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    cVar1 = ***param_2;\n    if ((cVar1 == '\\x05') || (cVar1 == '\\n')) {\n        fcn.00404210();\n        fcn.00413cac();\n    }\n    else if (cVar1 == '\\v') {\n        var_8h = param_2[2];\n        if ((var_8h & 0xff000000) == 0xff000000) {\n            puStack32 = &stack0xfffffffc;\n            fcn.004046a4();\n        }\n        else {\n            if ((var_8h & 0xff000000) == 0xfe000000) {\n                var_8h = *(*in_EAX + var_8h);\n            }\n            if (param_2[4] == -0x80000000) {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n            else {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x413da5;\n    uStack36 = 0x413d9d;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 405
    },
    "00413fb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413fb8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.00413fa4();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 118
    },
    "00413ff8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413ff8(uint *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    \n    pcVar1 = *(param_2 + 8);\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar1 & 0xffffff);\n        uVar2 = param_1[1];\n        *puVar3 = *param_1;\n        puVar3[1] = uVar2;\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(pcVar1 + *in_EAX))();\n        return;\n    }\n    (*pcVar1)(*param_1, param_1[1]);\n    return;\n}\n",
        "token_count": 196
    },
    "00414030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414030(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    int32_t in_EDX;\n    \n    pcVar1 = *(in_EDX + 8);\n    if (*(in_EDX + 0xb) == 0xff) {\n        puVar2 = in_EAX + (pcVar1 & 0xffffff);\n        *puVar2 = arg_8h;\n        puVar2[1] = arg_ch;\n    }\n    else if (*(in_EDX + 0xb) < 0xfe) {\n        (*pcVar1)(arg_8h, arg_ch);\n    }\n    else {\n        (**(pcVar1 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "0041406c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041406c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    code *pcStack16;\n    \n    pcStack16 = *(param_2 + 8);\n    if ((pcStack16 & 0xff000000) == 0xff000000) {\n        fcn.00405860();\n    }\n    else {\n        if ((pcStack16 & 0xff000000) == 0xfe000000) {\n            pcStack16 = *(*in_EAX + pcStack16);\n        }\n        if (*(param_2 + 0x10) == -0x80000000) {\n            (*pcStack16)();\n        }\n        else {\n            (*pcStack16)();\n        }\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "00415bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00415bb0(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar4 = *(*(in_EAX + 0xc) + 8);\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar2 = fcn.00416ec4();\n            cVar1 = fcn.00403464();\n            if ((cVar1 != '\\0') && ((iVar3 == 0 || (cVar1 = fcn.00403464(),  cVar1 != '\\0')))) {\n                iVar3 = iVar2;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 205
    },
    "00415de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00415de0(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack288 = 0x415e7b;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack292;\n    fcn.004031a0();\n    fcn.004041ec();\n    iVar1 = fcn.00415d3c();\n    if (iVar1 != 0) {\n        var_10ch = var_4h;\n        var_108h._0_1_ = 0xb;\n        in_stack_fffffed4 = 0;\n        fcn.0040b65c(0, &var_10ch);\n        fcn.004039c4();\n    }\n    fcn.00416d68();\n    *in_FS_OFFSET = in_stack_fffffed4;\n    uStack292 = 0x415e82;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 300
    },
    "00415fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00415fb0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403220();\n    uVar1 = fcn.00403220();\n    *(in_EAX + 4) = uVar1;\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    iVar2 = fcn.00415c80();\n    fcn.00416d68();\n    *(iVar2 + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 218
    },
    "00416108": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00416108(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_10ch;\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    var_10ch = 0;\n    uStack280 = 0x41618b;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack284;\n    fcn.004031a0();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    arg_ch = &var_8h;\n    arg_8h_00 = 0;\n    fcn.00405d0c();\n    fcn.0040b5a0(arg_8h_00, arg_ch);\n    fcn.004039c4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack284 = 0x416192;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 283
    },
    "00416260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416260(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "00416318": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416318(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 41
    },
    "00416564": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00416564(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4165c4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_8h;\n    arg_8h = 0;\n    fcn.00405d0c();\n    fcn.0040b5a0(arg_8h, arg_ch);\n    fcn.004039c4();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x4165cb;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 232
    },
    "00416854": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416854(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040355c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_ch;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack20;\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00416934": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416934(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint *in_EDX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        iVar2 = in_ECX + 4;\n        do {\n            cVar1 = fcn.00407e08();\n            if (cVar1 != '\\0') {\n                *in_EDX = *(iVar2 + -4);\n                return 1;\n            }\n            iVar2 = iVar2 + 8;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "00416974": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00416974(int32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t *in_ECX;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        do {\n            if (in_EAX == *in_ECX) {\n                var_5h = 1;\n                in_EAX = fcn.00403fdc();\n                goto code_r0x004169ab;\n            }\n            in_ECX = in_ECX + 2;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    var_5h = 0;\ncode_r0x004169ab:\n    return in_EAX & 0xffffff00 | var_5h;\n}\n",
        "token_count": 203
    },
    "00416bdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416bdc(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x416c72;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee4;\n    if ((in_EAX != *0x415790) && (in_EAX != *(arg_8h + -8))) {\n        fcn.004031dc();\n        fcn.00416bdc(arg_8h);\n        fcn.004031a0();\n        fcn.004041ec();\n        fcn.00405228(0);\n        fcn.00405278();\n        fcn.00416a74();\n    }\n    *in_FS_OFFSET = uStack284;\n    puStack276 = 0x416c79;\n    uStack280 = 0x416c71;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 258
    },
    "00416e18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416e18(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.00416e14();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040b5a0(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00403f7c();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x004039e5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x470014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 200
    },
    "004170d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004170d8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403220();\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    uVar1 = fcn.00403220();\n    *(in_EAX + 4) = uVar1;\n    *(in_EAX + 0x20) = 0;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 191
    },
    "0041712c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041712c(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    int32_t iStack20;\n    uchar *puStack16;\n    int32_t var_5h;\n    \n    puStack16 = 0x417137;\n    *NULL = fcn.004035c4();\n    puStack16 = 0x417145;\n    var_5h._0_1_ = extraout_DL;\n    fcn.00417230();\n    iStack20 = 0x41718e;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00403250();\n    fcn.00403240();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x417195;\n    iStack20 = 0x417181;\n    fcn.00417294();\n    iStack20 = stack0xfffffff8 + 8;\n    uStack24 = 0x41718d;\n    sub.kernel32.dll_DeleteCriticalSection_1();\n    return;\n}\n",
        "token_count": 265
    },
    "00417294": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417294(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 41
    },
    "00417494": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00417494(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack296 = 0x41754a;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack300;\n    if (param_2 == 0) {\n        fcn.00404020();\n    }\n    else {\n        puStack292 = &stack0xfffffffc;\n        fcn.004031a0();\n        fcn.004041ec();\n    }\n    var_114h = var_4h;\n    var_110h._0_1_ = 0xb;\n    fcn.004031a0();\n    var_10ch = &var_104h;\n    var_108h._0_1_ = 4;\n    uVar1 = 1;\n    fcn.0040b65c(1, &var_114h);\n    fcn.004039c4();\n    *in_FS_OFFSET = uVar1;\n    uStack300 = 0x417551;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 346
    },
    "004177dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004177dc(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x417883;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x417806;\n    fcn.0041792c();\n    uStack48 = 0x417866;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    iVar1 = (**(*param_2 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*param_2 + 0xc))();\n            (**(*param_2 + 0x18))(0);\n            (**(*in_EAX + 0x3c))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x41786d;\n    uStack48 = 0x417865;\n    fcn.004179e8();\n    return;\n}\n",
        "token_count": 353
    },
    "0041799c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041799c(uint param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.00418404;\n    fcn.00417944(&stack0xfffffffc);\n    (**(*param_2 + 4))(pcVar1);\n    return;\n}\n",
        "token_count": 90
    },
    "004179fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004179fc(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x417a91;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar1 = (**(*in_EAX + 0x14))();\n    iVar2 = (**(*param_2 + 0x14))();\n    if ((iVar1 == iVar2) && (-1 < iVar1 + -1)) {\n        uVar3 = true;\n        do {\n            (**(*in_EAX + 0xc))();\n            (**(*param_2 + 0xc))(0);\n            fcn.00404394();\n            if (!uVar3) break;\n            iVar1 = iVar1 + -1;\n            uVar3 = iVar1 == 0;\n        } while (!uVar3);\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x417a98;\n    uStack44 = 0x417a90;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 335
    },
    "00417aa8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417aa8(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.00417aa4();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040b5a0(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00403f7c();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x004039e5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x470014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 200
    },
    "00417b38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417b38(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x417c10;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x417b66;\n    fcn.0041792c();\n    uStack52 = 0x417bee;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0x24))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x24))();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x417bf5;\n    uStack52 = 0x417bed;\n    fcn.004179e8();\n    return;\n}\n",
        "token_count": 353
    },
    "00417c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00417c80(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x417d8b;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    iVar1 = (**(*in_EAX + 0x14))();\n    fcn.00404020();\n    iVar2 = iVar1;\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.00404248();\n            fcn.00404248();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00404078();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = fcn.00404248();\n            if (iVar2 != 0) {\n                fcn.004028c8();\n            }\n            iVar2 = fcn.00404248();\n            if (iVar2 != 0) {\n                fcn.004028c8();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x417d92;\n    uStack56 = 0x417d8a;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 427
    },
    "00417da8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00417da8(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x417e20;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = (**(*in_EAX + 0x34))();\n            if (iVar2 == 0) break;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x417e27;\n    uStack36 = 0x417e1f;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 267
    },
    "00417e34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417e34(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    var_ch = 0;\n    uStack44 = 0x417ef7;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    var_4h = param_2;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        var_8h = 0;\n        var_10h = iVar1;\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.00418494();\n            fcn.00404170();\n            iVar1 = fcn.0040c284();\n            if (iVar1 != 0) {\n                fcn.004044a8(&fcn.00417e34::var_18h);\n                iVar1 = (**(*in_EAX + 0x34))();\n                if (iVar1 == 0) goto code_r0x00417ed4;\n            }\n            var_8h = var_8h + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    var_8h = -1;\ncode_r0x00417ed4:\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x417efe;\n    uStack44 = 0x417eee;\n    fcn.00403fac();\n    uStack44 = 0x417ef6;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 472
    },
    "00417fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417fc0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41805d;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x417fe8;\n    fcn.0041792c();\n    uStack40 = 0x418040;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    (***param_2)();\n    fcn.00418b1c();\n    fcn.00404078();\n    (**(*param_2 + 0xc))();\n    (**(*in_EAX + 0x2c))();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x418047;\n    uStack40 = 0x41803f;\n    fcn.004179e8();\n    return;\n}\n",
        "token_count": 303
    },
    "0041806c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041806c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41810d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_1 != param_2) {\n        puStack40 = 0x41809b;\n        fcn.0041792c();\n        uStack44 = 0x4180f0;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        puStack40 = &stack0xfffffffc;\n        (**(*in_EAX + 0xc))();\n        uVar1 = (**(*in_EAX + 0x18))();\n        (**(*in_EAX + 0x48))();\n        (**(*in_EAX + 100))();\n        *in_FS_OFFSET = uVar1;\n        uStack44 = 0x4180f7;\n        uStack48 = 0x4180ef;\n        fcn.004179e8();\n        return;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x418114;\n    uStack32 = 0x41810c;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 374
    },
    "00418154": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418154(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x4181f8;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x41817b;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.0041ad0c();\n    puStack32 = 0x418183;\n    fcn.0041792c();\n    uStack36 = 0x4181d3;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    (**(*var_4h + 0x44))();\n    while( true ) {\n        cVar1 = fcn.00419da8();\n        if (cVar1 != '\\0') break;\n        fcn.0041b9ac();\n        (**(*var_4h + 0x38))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4181da;\n    uStack36 = 0x4181d2;\n    fcn.004179e8();\n    return;\n}\n",
        "token_count": 386
    },
    "00418404": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00418404(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41847a;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.0041c558();\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.0041c600();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    fcn.0041c560();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x418481;\n    uStack36 = 0x418479;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 256
    },
    "004187d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004187d4(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0x28))();\n    return;\n}\n",
        "token_count": 39
    },
    "00418b1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00418b1c(void)\n\n{\n    ulong uVar1;\n    int32_t *in_EAX;\n    \n    uVar1 = (**(*in_EAX + 0x18))(0, 0);\n    return uVar1;\n}\n",
        "token_count": 57
    },
    "00418c08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00418c08(uint arg_8h)\n\n{\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.004031a0();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    fcn.0040b65c(0, &var_8h);\n    fcn.004039c4();\n    return;\n}\n",
        "token_count": 117
    },
    "00418eac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418eac(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY32;\n    uint uStackY28;\n    uchar *puStackY24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY24 = 0x418ec8;\n    fcn.00419530(0x1000);\n    uStackY28 = 0x418efc;\n    uStackY32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStackY24 = &stack0xfffffffc;\n    fcn.0041b564();\n    *in_FS_OFFSET = uStackY32;\n    puStackY24 = 0x418f03;\n    uStackY28 = 0x418efb;\n    fcn.00403250();\n    return;\n}\n",
        "token_count": 189
    },
    "00418f0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00418f0c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00403220();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "00418fd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00418fd0(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040355c();\n        in_DL = extraout_DL;\n    }\n    uVar1 = 0;\n    fcn.00419014(0, in_EAX & 0xffff0000 | arg_8h & 0xffff);\n    if (in_DL != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 163
    },
    "004193ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004193ac(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040355c();\n        in_DL = extraout_DL;\n    }\n    fcn.00403220();\n    fcn.00404448();\n    fcn.00419474(arg_8h);\n    if (in_DL != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = arg_8h;\n    }\n    return in_EAX;\n}\n",
        "token_count": 146
    },
    "00419404": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00419404(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x419467;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    var_8h = *(arg_8h + -4);\n    var_4h._0_1_ = 6;\n    arg_ch = &var_8h;\n    arg_8h_00 = 0;\n    fcn.00405d0c();\n    fcn.0040b5a0(arg_8h_00, arg_ch);\n    fcn.004039c4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack28 = 0x41946e;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 267
    },
    "00419530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00419530(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040355c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    uVar1 = fcn.004026cc();\n    *(in_EAX + 8) = uVar1;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 208
    },
    "0041967c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041967c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040355c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_14h;\n    *(in_EAX + 0xc) = arg_10h;\n    fcn.00403fdc();\n    fcn.00403fdc();\n    if (in_DL != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 224
    },
    "00419bf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419bf4(void)\n\n{\n    uchar auStack12 [4];\n    uchar uStack8;\n    \n    uStack8 = 0xb;\n    fcn.0040b65c(0, auStack12);\n    fcn.004039c4();\n    return;\n}\n",
        "token_count": 65
    },
    "00419ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00419ec0(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    uStack36 = 0x419fcf;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar4 = in_EAX[0xc];\n    if (iVar4 != 0) {\n        uStack48 = 0x419fb2;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        var_ch = *(iVar4 + 8);\n        puVar1 = &stack0xfffffffc;\n        if (-1 < var_ch + -1) {\n            do {\n                puStack32 = puVar1;\n                puVar3 = fcn.00416ec4();\n                fcn.00404020();\n                (**(*in_EAX + 0x20))();\n                iVar4 = fcn.004197b0();\n                fcn.00416ec4();\n                fcn.00419e44();\n                if ((iVar4 == 0) && (cVar2 = fcn.004196d4(),  cVar2 != '\\0')) {\n                    fcn.00416ec4();\n                    fcn.004171a8();\n                    fcn.00416fb8();\n                }\n                else {\n                    (***puVar3)();\n                }\n                var_ch = var_ch + -1;\n                puVar1 = puStack32;\n            } while (var_ch != 0);\n        }\n        *in_FS_OFFSET = uStack52;\n        puStack44 = 0x419fb9;\n        uStack48 = 0x419fb1;\n        fcn.0041a004();\n        return;\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x419fd6;\n    uStack36 = 0x419fce;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 535
    },
    "0041a040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0041a040(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint uVar4;\n    int32_t iStack20;\n    \n    iVar2 = fcn.00403198();\n    do {\n        if (iVar2 == *0x414c6c) {\n            if (*(in_EAX + 0x74) == 0) {\n                uVar4 = fcn.004165d0();\n            }\n            else {\n                uVar4 = fcn.004164d0();\n            }\n            return uVar4;\n        }\n        piVar3 = fcn.00416558();\n        if ((piVar3 != NULL) && (iVar2 = *piVar3,  -1 < iVar2 + -1)) {\n            iStack20 = 0;\n            do {\n                uVar4 = **(piVar3 + iStack20 * 2 + 1);\n                cVar1 = fcn.004031b4();\n                if (cVar1 != '\\0') {\n                    return uVar4;\n                }\n                iStack20 = iStack20 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iVar2 = fcn.004031dc();\n    } while( true );\n}\n",
        "token_count": 302
    },
    "0041a204": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a204(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x41a217;\n    (**(*param_2 + 0x20))();\n    uStack24 = 0x41a2a4;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    cVar1 = fcn.00419da8();\n    if (cVar1 == '\\0') {\n        fcn.004176fc();\n    }\n    while( true ) {\n        cVar1 = fcn.00419da8();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.0041a0ec();\n        if (cVar1 - 2U < 3) {\n            fcn.0041ac5c();\n        }\n        fcn.004176dc();\n        fcn.0041ad0c();\n        while( true ) {\n            cVar1 = fcn.00419da8();\n            if (cVar1 != '\\0') break;\n            fcn.0041ae78();\n        }\n        fcn.0041ad14();\n    }\n    fcn.0041ad14();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41a2ab;\n    uStack24 = 0x41a2a3;\n    (**(*param_2 + 0x24))();\n    return;\n}\n",
        "token_count": 378
    },
    "0041a970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041a970(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        puStack32 = 0x41a992;\n        cVar3 = fcn.00419da8();\n        if (cVar3 != '\\0') break;\n        puStack32 = 0x41a98a;\n        fcn.0041ae78();\n    }\n    puStack32 = 0x41a99e;\n    fcn.0041ad14();\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = *(in_EAX + 0x28);\n    puStack32 = 0x41a9bb;\n    uVar4 = fcn.0040344c();\n    *(in_EAX + 0x2c) = uVar4;\n    uStack36 = 0x41aa32;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar5 = fcn.0040344c();\n    *(in_EAX + 0x28) = iVar5;\n    if (iVar5 == 0) {\n        *(in_EAX + 0x28) = *(in_EAX + 0x18);\n    }\n    while( true ) {\n        cVar3 = fcn.00419da8();\n        if (cVar3 != '\\0') break;\n        fcn.0041a6c4();\n    }\n    fcn.0041ad14();\n    *in_FS_OFFSET = uStack40;\n    *(in_EAX + 0x2c) = uVar1;\n    *(in_EAX + 0x28) = uVar2;\n    return;\n}\n",
        "token_count": 467
    },
    "0041aa84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041aa84(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    float fStack16;\n    \n    cVar2 = fcn.0041bb4c();\n    if (cVar2 == '\\x0f') {\n        fcn.0041a110();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041acc8();\n        fStack16 = iVar1;\n    }\n    return fStack16;\n}\n",
        "token_count": 137
    },
    "0041aac8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041aac8(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int64_t iStack20;\n    \n    cVar2 = fcn.0041bb4c();\n    if (cVar2 == '\\x10') {\n        fcn.0041a110();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041acc8();\n        iStack20 = ROUND(iVar1 * *0x41ab14);\n    }\n    return iStack20;\n}\n",
        "token_count": 147
    },
    "0041ab18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041ab18(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    double dStack20;\n    \n    cVar2 = fcn.0041bb4c();\n    if (cVar2 == '\\x11') {\n        fcn.0041a110();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041acc8();\n        dStack20 = iVar1;\n    }\n    return dStack20;\n}\n",
        "token_count": 136
    },
    "0041ac5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041ac5c(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    char cStack8;\n    uchar uStack7;\n    int16_t iStack6;\n    \n    cVar1 = fcn.0041bb4c();\n    if (cVar1 == '\\x02') {\n        fcn.0041a110();\n        iStack12 = cStack8;\n    }\n    else if (cVar1 == '\\x03') {\n        fcn.0041a110();\n        iStack12 = iStack6;\n    }\n    else if (cVar1 == '\\x04') {\n        fcn.0041a110();\n    }\n    else {\n        fcn.00419be8();\n    }\n    return CONCAT26(iStack6, CONCAT15(uStack7, CONCAT14(cStack8, iStack12)));\n}\n",
        "token_count": 190
    },
    "0041acc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041acc8(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    cVar1 = fcn.0041a0ec();\n    if (cVar1 == '\\x13') {\n        fcn.0041bb4c();\n        fcn.0041a110();\n    }\n    else {\n        iStack12 = fcn.0041ac5c();\n        iStack8 = iStack12 >> 0x1f;\n    }\n    return CONCAT44(iStack8, iStack12);\n}\n",
        "token_count": 129
    },
    "0041b058": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b058(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = fcn.004168b8();\n    if ((pcVar2 != NULL) && (cVar1 = (*pcVar2)(),  cVar1 != '\\0')) {\n        fcn.00413b1c();\n        return;\n    }\n    fcn.00419be8();\n    return;\n}\n",
        "token_count": 111
    },
    "0041b504": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b504(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403fdc();\n    while( true ) {\n        cVar1 = fcn.00416a50();\n        if (cVar1 != '\\0') break;\n        fcn.00408ca4(param_2);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0041b9ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b9ac(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41ba59;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.0041a0ec();\n    if ((cVar1 == '\\x12') || (cVar1 == '\\x14')) {\n        fcn.0041ba68();\n        fcn.00404210();\n    }\n    else {\n        cVar1 = fcn.0041bb4c();\n        if (cVar1 == '\\x06') {\n            fcn.0041a110();\n        }\n        else if (cVar1 == '\\f') {\n            fcn.0041a110();\n        }\n        else {\n            fcn.00419be8();\n        }\n        fcn.004045d4();\n        fcn.0041a110();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41ba60;\n    uStack28 = 0x41ba58;\n    fcn.00404668();\n    return;\n}\n",
        "token_count": 304
    },
    "0041ba68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ba68(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41bb3f;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.0041a0ec();\n    if ((cVar1 == '\\x06') || (cVar1 == '\\f')) {\n        fcn.0041b9ac();\n        fcn.004047b4();\n    }\n    else {\n        cVar1 = fcn.0041bb4c();\n        if (cVar1 == '\\x12') {\n            fcn.0041a110();\n            fcn.004048b0();\n            fcn.0041a110();\n        }\n        else if (cVar1 == '\\x14') {\n            fcn.0041a110();\n            fcn.004045d4();\n            fcn.0041a110();\n            fcn.00405c18();\n        }\n        else {\n            fcn.00419be8();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41bb46;\n    uStack32 = 0x41bb36;\n    fcn.00403f88();\n    uStack32 = 0x41bb3e;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 360
    },
    "0041be40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.0041be40(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.0041be40::var_1h + 1;\n    uStack36 = 0x41bed8;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &fcn.0041be40::var_1h + 1;\n    if (param_2 != '\\0') {\n        (**(*in_EAX + 0x24))();\n        fcn.0041b970();\n        fcn.0041b970();\n        puVar1 = puStack32;\n    }\n    while( true ) {\n        puStack32 = puVar1;\n        cVar2 = fcn.00419da8();\n        if (cVar2 != '\\0') break;\n        fcn.0041bdf8();\n        puVar1 = puStack32;\n    }\n    fcn.0041ad14();\n    while( true ) {\n        cVar2 = fcn.00419da8();\n        if (cVar2 != '\\0') break;\n        fcn.0041be40();\n    }\n    fcn.0041ad14();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41bedf;\n    uStack36 = 0x41bed7;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 410
    },
    "0041c054": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c054(uint param_1, int32_t param_2)\n\n{\n    if (0 < param_2) {\n        do {\n            if (param_2 < 0x101) {\n                fcn.0041a110();\n                param_2 = 0;\n            }\n            else {\n                fcn.0041a110();\n                param_2 = param_2 + -0x100;\n            }\n        } while (0 < param_2);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0041c09c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c09c(uint arg_8h)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41c245;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x41c0c8;\n    fcn.00419c74();\n    puStack52 = 0x41c0d9;\n    fcn.00403220();\n    uStack56 = 0x41c220;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00403220();\n    fcn.0041a110();\n    fcn.00418ba0(var_10h, var_10h >> 0x1f);\n    fcn.0041a110();\n    puStack76 = 0x41c142;\n    fcn.00419530(0x400);\n    uStack80 = 0x41c1fb;\n    iStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    fcn.0041b9ac();\n    fcn.0041a110();\n    fcn.00418ba0(var_10h, var_10h >> 0x1f);\n    fcn.0041a110();\n    cVar1 = fcn.0041361c();\n    if (cVar1 != '\\0') {\n        fcn.00405848();\n        cVar1 = fcn.0040cf34();\n        if (cVar1 != '\\0') goto code_r0x0041c1ce;\n    }\n    fcn.0040b620();\n    fcn.004039c4();\ncode_r0x0041c1ce:\n    *in_EAX = *(var_14h + 4);\n    (**(_pe_dos_header + 0xc))();\n    *in_FS_OFFSET = var_10h;\n    iStack84 = 0x41c202;\n    fcn.00403250();\n    return;\n}\n",
        "token_count": 624
    },
    "0041c87c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041c87c(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x24) = *0x41c8c4;\n    if (param_1 != 0) {\n        fcn.0041ca34();\n    }\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 191
    },
    "0041cdd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cdd4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    bool bVar2;\n    int32_t iStack20;\n    uchar uStack16;\n    \n    bVar2 = *0x10 == 0x14;\n    fcn.00404394();\n    if (!bVar2) {\n        if (param_2 != 0) {\n            cVar1 = fcn.00407f24();\n            if (cVar1 == '\\0') {\n                uStack16 = 0xb;\n                iStack20 = param_2;\n                fcn.0040b65c(0, &iStack20);\n                fcn.004039c4();\n            }\n        }\n        if (in_EAX[1] == NULL) {\n            (**(*in_EAX + 0x20))(param_2);\n        }\n        else {\n            (**(*in_EAX[1] + 0x20))(param_2);\n        }\n        fcn.0041cf54();\n        fcn.0041ce60();\n        fcn.0041cf54();\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "0041cf54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cf54(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    if (*(in_EAX + 4) != 0) {\n        fcn.00404224();\n        piVar1 = fcn.0040350c();\n        if (piVar1 != NULL) {\n            if (param_2 == '\\0') {\n                *piVar1 = 0;\n            }\n            else {\n                *piVar1 = in_EAX;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0041d184": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041d184(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041c87c();\n    uVar1 = fcn.00403220();\n    *(in_EAX + 0x50) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 170
    },
    "0041d374": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041d374(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040355c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00403220();\n    *(in_EAX + 0xc) = in_ECX;\n    *(in_EAX + 0x10) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 187
    },
    "0041d8e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d8e4(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code **in_ECX;\n    \n    (**in_ECX)(arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 69
    },
    "0041ebd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041ebd8(ushort param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    ushort extraout_CX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_1 = extraout_CX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x20) = param_1;\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 171
    },
    "0041ec38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ec38(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 41
    },
    "0041ec44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ec44(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 42
    },
    "0041ede4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ede4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x41edfd;\n    fcn.0041ec38();\n    uStack32 = 0x41ee4d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = *(param_2 + 0x10);\n    puStack28 = &stack0xfffffffc;\n    iVar2 = fcn.0041ec50();\n    *(param_2 + 0x10) = iVar2;\n    if (iVar1 != iVar2) {\n        fcn.0040344c();\n    }\n    fcn.0041ed34();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41ee54;\n    uStack32 = 0x41ee4c;\n    fcn.0041ec44();\n    return;\n}\n",
        "token_count": 265
    },
    "0041ef34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041ef34(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    puStack24 = 0x41ef4b;\n    iVar1 = fcn.00417230();\n    uStack28 = 0x41efd1;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    while (var_4h < *(iVar1 + 8)) {\n        fcn.00416ec4();\n        fcn.00420540();\n        var_4h = var_4h + 1;\n        fcn.0042086c();\n    }\n    fcn.0041eec8();\n    fcn.0041eec8();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41efd8;\n    if (-1 < var_4h + -1) {\n        do {\n            uStack28 = 0x41efbd;\n            fcn.00416ec4();\n            uStack28 = 0x41efc2;\n            fcn.00420744();\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    uStack28 = 0x41efd0;\n    fcn.00417294();\n    return;\n}\n",
        "token_count": 350
    },
    "0041f70c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041f70c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    *0x464428 = 0;\n    uVar1 = fcn.0041ec50();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 0xff000008;\n    *(in_EAX + 0x1c) = *0x470898;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 209
    },
    "0041f7a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f7a4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x41f7bf;\n    cVar1 = fcn.004033dc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x41f7cf;\n        fcn.0041f464();\n        uStack24 = 0x41f85f;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x41f7e7;\n        puStack20 = &stack0xfffffffc;\n        fcn.0041f464();\n        uStack36 = 0x41f842;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.0041ee5c();\n        fcn.0041f8e0();\n        if (*(in_EAX + 0x1c) != *(param_2 + 0x1c)) {\n            fcn.0041fb64();\n            fcn.0041fb80();\n        }\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x41f849;\n        uStack36 = 0x41f841;\n        fcn.0041f474();\n        return;\n    }\n    puStack20 = 0x41f871;\n    fcn.00417480();\n    return;\n}\n",
        "token_count": 413
    },
    "0041fa9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041fa9c(void)\n\n{\n    fcn.0041f658();\n    fcn.0041f890();\n    return;\n}\n",
        "token_count": 35
    },
    "0041fac8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041fac8(void)\n\n{\n    fcn.0041f878();\n    fcn.0041f890();\n    return;\n}\n",
        "token_count": 34
    },
    "0041fbac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fbac(uint param_1, uchar param_2)\n\n{\n    fcn.0041f878(param_2);\n    fcn.0041f890();\n    return;\n}\n",
        "token_count": 47
    },
    "0041fc38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041fc38(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.0041ec50();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 4;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 176
    },
    "0041fca4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041fca4(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x41fcbf;\n    cVar1 = fcn.004033dc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x41fccf;\n        fcn.0041f464();\n        uStack24 = 0x41fd43;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x41fce7;\n        puStack20 = &stack0xfffffffc;\n        fcn.0041f464();\n        uStack36 = 0x41fd26;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.0041ee5c();\n        fcn.0041fe8c();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x41fd2d;\n        uStack36 = 0x41fd25;\n        fcn.0041f474();\n        return;\n    }\n    puStack20 = 0x41fd55;\n    fcn.00417480();\n    return;\n}\n",
        "token_count": 342
    },
    "0041fdcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041fdcc(void)\n\n{\n    fcn.0041fd5c();\n    fcn.0041fd74();\n    return;\n}\n",
        "token_count": 35
    },
    "0041fea8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041fea8(void)\n\n{\n    fcn.0041fd5c();\n    fcn.0041fd74();\n    return;\n}\n",
        "token_count": 35
    },
    "0041ff04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041ff04(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.0041ec50();\n    *(in_EAX + 0x10) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 161
    },
    "0041ff6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ff6c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x41ff87;\n    cVar1 = fcn.004033dc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x41ff93;\n        fcn.0041f464();\n        uStack24 = 0x41fffc;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x41ffab;\n        puStack20 = &stack0xfffffffc;\n        fcn.0041f464();\n        uStack36 = 0x41ffdf;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.0041ee5c();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x41ffe6;\n        uStack36 = 0x41ffde;\n        fcn.0041f474();\n        return;\n    }\n    puStack20 = 0x42000e;\n    fcn.00417480();\n    return;\n}\n",
        "token_count": 330
    },
    "00420080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420080(uint param_1, uint param_2)\n\n{\n    fcn.00420030(*0x4646a8, *0x4646ac, param_2, *0x4646b4);\n    return;\n}\n",
        "token_count": 59
    },
    "004201fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004201fc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403220();\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    iVar1 = fcn.0041f70c();\n    *(in_EAX + 0xc) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x420a94;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.0041fc38();\n    *(in_EAX + 0x10) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x420ab4;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.0041ff04();\n    *(in_EAX + 0x14) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x420ad4;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    *(in_EAX + 0x20) = 0xcc0020;\n    *(in_EAX + 8) = *0x4202bc;\n    fcn.004171a8();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = in_EAX + 0x38;\n    }\n    return in_EAX;\n}\n",
        "token_count": 427
    },
    "004203a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004203a4(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *arg_8h_00;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (arg_8h != NULL) {\n        cVar1 = (**(*arg_8h + 0x1c))();\n        if (cVar1 == '\\0') {\n            (**(*in_EAX + 0x10))();\n            fcn.00420920();\n            fcn.004200a4();\n            uVar2 = fcn.0041f420();\n            sub.gdi32.dll_SetBkColor(in_EAX[1], uVar2);\n            uVar2 = fcn.0041f420();\n            sub.gdi32.dll_SetTextColor(in_EAX[1], uVar2);\n            iVar3 = (**(*arg_8h + 0x20))();\n            iVar3 = iVar3 + var_4h;\n            arg_8h_00 = &var_14h;\n            (**(*arg_8h + 0x2c))();\n            fcn.00415a90(arg_8h_00, iVar3);\n            (**(*arg_8h + 0x14))();\n            (**(*in_EAX + 0xc))();\n        }\n    }\n    return;\n}\n",
        "token_count": 321
    },
    "004206ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004206ac(void)\n\n{\n    ulong uStack16;\n    \n    fcn.00420668();\n    return uStack16;\n}\n",
        "token_count": 33
    },
    "004206c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004206c8(void)\n\n{\n    uint uStack12;\n    \n    fcn.00420668();\n    return CONCAT44(uStack12, uStack12);\n}\n",
        "token_count": 40
    },
    "004207b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004207b8(uint param_1, uint *param_2)\n\n{\n    fcn.00420568(*param_2, param_2[1]);\n    return;\n}\n",
        "token_count": 45
    },
    "004208cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004208cc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack16;\n    uint uStack12;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (*(in_EAX + 4) != 0) {\n            fcn.0042086c();\n            fcn.00420794();\n            *(in_EAX + 0x18) = uStack16;\n            *(in_EAX + 0x1c) = uStack12;\n            *(in_EAX + 4) = 0;\n            *(in_EAX + 8) = *(in_EAX + 8) & 0xfe;\n        }\n        if (param_2 != 0) {\n            *(in_EAX + 8) = *(in_EAX + 8) | 1;\n            *(in_EAX + 4) = param_2;\n            fcn.004207b8();\n        }\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "00420b90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420b90(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffecc;\n    uint uStack280;\n    uint uStack276;\n    uchar *puStack272;\n    uint var_104h;\n    uint var_100h;\n    \n    puStack272 = &stack0xfffffffc;\n    uStack276 = 0x420c2c;\n    uStack280 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack280;\n    iVar1 = sub.kernel32.dll_GetLastError();\n    if (iVar1 != 0) {\n        in_stack_fffffecc = 0x1000;\n        iVar1 = sub.kernel32.dll_FormatMessageA(0x1000, 0, iVar1, 0x400, &var_100h, 0x100, 0);\n        if (iVar1 != 0) {\n            fcn.004041f8();\n            fcn.0040b564();\n            fcn.004039c4();\n            goto code_r0x00420c13;\n        }\n    }\n    fcn.00420b3c();\ncode_r0x00420c13:\n    *in_FS_OFFSET = in_stack_fffffecc;\n    fcn.00403f88(0x420c33);\n    return;\n}\n",
        "token_count": 294
    },
    "00420dc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00420dc8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX * param_2 + (param_1 - 1U) & ~(param_1 - 1U);\n    if (uVar1 < 0) {\n        uVar1 = uVar1 + 7;\n    }\n    return in_EAX * param_2 & 0xffffffff00000000U | uVar1 >> 3;\n}\n",
        "token_count": 128
    },
    "004210a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004210a8(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = *param_2 + -1;\n    if (0 < iVar4) {\n        iVar3 = 1;\n        do {\n            puVar1 = in_EAX + iVar3 * 4;\n            puVar2 = in_EAX + iVar3 * 3;\n            puVar2[2] = puVar1[2];\n            puVar2[1] = puVar1[1];\n            *puVar2 = *puVar1;\n            iVar3 = iVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    if (*param_2 < 0x100) {\n        fcn.00402c5c();\n        *param_2 = 0x100;\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "00421178": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421178(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffbb8;\n    uint var_424h;\n    uint var_420h;\n    uint uStack1056;\n    uint uStack1052;\n    uchar *puStack1048;\n    uint uStack1044;\n    uint var_408h;\n    uchar var_404h [28];\n    int32_t lppe;\n    uint var_3e4h;\n    uchar auStack996 [988];\n    uint hdc;\n    \n    uStack1044 = 0x4211a4;\n    fcn.004028c8();\n    uStack1044 = 0;\n    puStack1048 = 0x4211ab;\n    hdc = sub.user32.dll_GetDC();\n    uStack1052 = 0x421275;\n    uStack1056 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbe0;\n    puStack1048 = &stack0xfffffffc;\n    iVar1 = sub.gdi32.dll_GetDeviceCaps();\n    if (0xf < iVar1) {\n        sub.gdi32.dll_GetSystemPaletteEntries(hdc, 0, 8, &stack0xfffffbf8);\n        in_stack_fffffbb8 = hdc;\n        if (lppe == 0xc0c0c0) {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 1, &fcn.00421178::lppe);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -7, 7, &stack0xfffffc1c);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, 7, 1, &fcn.00421178::var_3e4h);\n        }\n        else {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 8, &fcn.00421178::var_3e4h);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffbb8;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x42127c);\n    return;\n}\n",
        "token_count": 475
    },
    "004215e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004215e8(int32_t arg_8h)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint8_t *in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = *in_EDX - **(arg_8h + 8);\n    uVar5 = in_EDX[1] - *(*(arg_8h + 8) + 4);\n    uVar6 = *in_EAX - **(arg_8h + 8);\n    uVar1 = in_EAX[1] - *(*(arg_8h + 8) + 4);\n    if ((((uVar6 ^ uVar6 >> 0x1f) - (uVar6 >> 0x1f) < (uVar4 ^ uVar4 >> 0x1f) - (uVar4 >> 0x1f)) ||\n        (((0 < uVar4 && (uVar6 < uVar4)) ||\n         (iVar2 = (uVar1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f),  iVar2 < (uVar5 ^ uVar5 >> 0x1f) - (uVar5 >> 0x1f))))) ||\n       ((0 < uVar5 && (uVar1 < uVar5)))) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = CONCAT31(iVar2 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 388
    },
    "00421a64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00421a64(uint arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t *in_EDX;\n    uint var_28h;\n    uint var_1ah;\n    uint var_14h;\n    int32_t var_8h;\n    \n    fcn.00421980();\n    if (var_1ah < 9) {\n        if (var_8h == 0) {\n            *in_EDX = (1 << (var_1ah & 0x1f)) * 4 + 0x28;\n        }\n        else {\n            *in_EDX = var_8h * 4 + 0x28;\n        }\n    }\n    else {\n        *in_EDX = 0x28;\n        if ((var_1ah._2_1_ & 3) != 0) {\n            *in_EDX = *in_EDX + 0xc;\n        }\n    }\n    *in_ECX = var_14h;\n    return;\n}\n",
        "token_count": 234
    },
    "00421da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00421da0(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403220();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "00421e48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421e48(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(*in_EAX + 0x44);\n    fcn.00421df0(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 102
    },
    "004222a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004222a8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.004201fc();\n    *(in_EAX + 0x58) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 167
    },
    "00422568": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422568(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack1080;\n    uint uStack1076;\n    uchar *puStack1072;\n    uint uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uint uStack1056;\n    uint var_410h;\n    uint hgdiobj;\n    uint hdc;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((in_EAX != 0) && (*(param_1 + 0x26) < 9)) {\n        uStack1056 = 0x42259e;\n        var_4h = param_2;\n        iVar1 = fcn.004213cc();\n        if (iVar1 != 0) {\n            uStack1056 = 0;\n            uStack1060 = 0x4225ab;\n            uStack1060 = sub.user32.dll_GetDC();\n            uStack1064 = 0x4225b7;\n            var_8h = uStack1060;\n            uStack1068 = sub.gdi32.dll_CreateCompatibleDC();\n            puStack1072 = 0x4225c4;\n            hdc = uStack1068;\n            hgdiobj = sub.gdi32.dll_SelectObject();\n            uStack1076 = 0x422617;\n            uStack1080 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffbc8;\n            uVar2 = hdc;\n            puStack1072 = &stack0xfffffffc;\n            sub.gdi32.dll_SetDIBColorTable(hdc, 0, iVar1, &fcn.00422568::var_410h);\n            *in_FS_OFFSET = uVar2;\n            sub.gdi32.dll_SelectObject(hdc, hgdiobj, 0x42261e);\n            sub.gdi32.dll_DeleteDC(hdc);\n            sub.user32.dll_ReleaseDC(0, var_8h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 467
    },
    "00422fe8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422fe8(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff80;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint var_58h;\n    int32_t var_4h;\n    \n    var_4h = in_EAX;\n    if (param_2 != 0) {\n        uStack104 = 0x423006;\n        cVar1 = fcn.004033dc();\n        if (cVar1 == '\\0') {\n            uStack104 = 0x4230d1;\n            fcn.00417480();\n            return;\n        }\n    }\n    uStack104 = 0x4708ac;\n    puStack108 = 0x423018;\n    sub.kernel32.dll_EnterCriticalSection_1();\n    uStack112 = 0x4230a0;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (param_2 == 0) {\n        puStack108 = &stack0xfffffffc;\n        fcn.00402c5c();\n        in_stack_ffffff80 = 0;\n        fcn.0042392c(0, 0, &fcn.00422fe8::var_58h);\n    }\n    else {\n        puStack108 = &stack0xfffffffc;\n        fcn.0042249c();\n        fcn.004224a0();\n        *(var_4h + 0x28) = *(param_2 + 0x28);\n        *(var_4h + 0x21) = *(param_2 + 0x21);\n        *(var_4h + 0x34) = *(param_2 + 0x34);\n        *(var_4h + 0x38) = *(param_2 + 0x38);\n    }\n    *in_FS_OFFSET = in_stack_ffffff80;\n    sub.kernel32.dll_LeaveCriticalSection_1(0x4708ac, 0x4230a7);\n    return;\n}\n",
        "token_count": 485
    },
    "004230d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004230d8(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint var_5ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puVar2 = &fcn.004230d8::var_5ch;\n    for (iVar1 = 0x15; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar2 = puVar2 + 1;\n    }\n    puStack112 = 0x4230fd;\n    fcn.004236bc();\n    var_4h = 0;\n    var_8h = 0;\n    uStack116 = 0x423167;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &stack0xfffffffc;\n    iVar1 = in_ECX;\n    if (in_ECX != *0x470890) {\n        puStack112 = &stack0xfffffffc;\n        iVar1 = fcn.00422cd4();\n    }\n    var_8h = iVar1;\n    var_4h = fcn.00422670(*(in_EAX + 0x2c), &fcn.004230d8::var_5ch);\n    uVar3 = 0;\n    fcn.0042392c(0, *(in_EAX + 0x28) & 0xffffff00 | *(*(in_EAX + 0x28) + 0x70), &fcn.004230d8::var_5ch);\n    *in_FS_OFFSET = uVar3;\n    return;\n}\n",
        "token_count": 443
    },
    "00423198": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423198(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    fcn.0042348c();\n    iVar1 = *(in_EAX + 0x28);\n    *(iVar1 + 0x50) = 0;\n    *(iVar1 + 0x54) = 0;\n    fcn.0040cf00();\n    return;\n}\n",
        "token_count": 91
    },
    "004231c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.004231c8(void)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    uint *arg_8h;\n    int32_t iVar2;\n    uint *puVar3;\n    ulong uVar4;\n    \n    arg_8h = fcn.00403220();\n    (**(*in_EAX + 0x58))();\n    uVar4 = (***arg_8h)();\n    fcn.00418ba0(uVar4, uVar4 >> 0x20);\n    puVar3 = in_EAX[10] + 0x18;\n    puVar1 = &stack0xffffff98;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar1 = puVar1 + 1;\n    }\n    fcn.004236bc();\n    fcn.0040cf00();\n    fcn.0042392c(arg_8h, in_EAX[10] & 0xffffff00U | *(in_EAX[10] + 0x70), &stack0xffffff98);\n    return;\n}\n",
        "token_count": 274
    },
    "00423fbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423fbc(int32_t param_1)\n\n{\n    int16_t aiStack112 [7];\n    uchar auStack98 [86];\n    \n    fcn.004236bc();\n    if (param_1 == 0) {\n        fcn.00402c5c();\n        fcn.0042392c(0, 0, auStack98);\n    }\n    else {\n        fcn.00418d48();\n        if (aiStack112[0] != 0x4d42) {\n            fcn.00420b24();\n        }\n        fcn.00423a54(aiStack112);\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0042473c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042473c(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    ushort *in_EDX;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY124;\n    uint uStackY120;\n    uchar *puStackY116;\n    uint var_58h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_4h;\n    \n    *in_EDX = 2;\n    fcn.004236cc();\n    puVar3 = *(in_EAX + 0x28) + 0x18;\n    puVar4 = &fcn.0042473c::var_58h;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_40h = 0;\n    var_44h = 0;\n    puStackY116 = 0x424789;\n    uVar1 = fcn.00422670(*(in_EAX + 0x2c), &fcn.0042473c::var_58h);\n    *var_4h = uVar1;\n    uStackY120 = 0x4247b6;\n    uStackY124 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff84;\n    puStackY116 = &stack0xfffffffc;\n    uVar1 = fcn.00422cd4();\n    *arg_8h = uVar1;\n    *in_FS_OFFSET = uStackY124;\n    return;\n}\n",
        "token_count": 404
    },
    "00424824": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00424824(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00421da0();\n    *(in_EAX + 0x21) = 1;\n    uVar1 = fcn.00403220();\n    *(in_EAX + 0x28) = uVar1;\n    fcn.0042249c();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 192
    },
    "00424ac8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00424ac8(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    puStack32 = 0x424ae1;\n    piVar1 = fcn.00403220();\n    uStack36 = 0x424b56;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar2 = (***param_2)();\n    fcn.00418b1c(uVar2);\n    (**(*piVar1 + 4))();\n    (***piVar1)();\n    fcn.00418d48();\n    fcn.00418d48();\n    if (1 < var_ah._2_2_) {\n        fcn.00420b30();\n    }\n    fcn.00424b80();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x424b76;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 300
    },
    "00424cc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.00424cc8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar uStack32;\n    \n    uVar3 = 1;\n    uStack68 = 0;\n    uStack72 = 0x424cd6;\n    iVar1 = sub.user32.dll_GetDC();\n    if (iVar1 != 0) {\n        uStack72 = *0x4708a4;\n        iStack76 = iVar1;\n        iVar2 = sub.gdi32.dll_SelectObject();\n        if (iVar2 != 0) {\n            iVar2 = sub.gdi32.dll_GetTextMetricsA(iVar1, &stack0xffffffb4);\n            if (iVar2 != 0) {\n                uVar3 = uStack32;\n            }\n        }\n        sub.user32.dll_ReleaseDC(0, iVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 220
    },
    "00424dd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00424dd8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 136
    },
    "00424e3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424e3c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 42
    },
    "00424e48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424e48(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection_1(in_EAX + 8);\n    return;\n}\n",
        "token_count": 42
    },
    "00425008": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425008(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint *var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_ch = *(in_EAX + 4);\n    if (var_ch == NULL) {\n        return;\n    }\n    uStack20 = 0x425024;\n    var_8h = var_ch;\n    var_4h = in_EAX;\n    fcn.00424e3c();\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(var_4h + 4) = *var_ch;\n    *in_FS_OFFSET = uStack28;\n    uStack20 = 0x42505a;\n    uStack24 = 0x425052;\n    fcn.00424e48();\n    return;\n}\n",
        "token_count": 218
    },
    "00425400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425400(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403220();\n    *(in_EAX + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 148
    },
    "0042549c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042549c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403220();\n    uVar1 = fcn.00403220();\n    *(in_EAX + 4) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "004262e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004262e4(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00405860();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "00426320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00426320(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403220();\n    uVar1 = fcn.00425400();\n    *(in_EAX + 0x10) = uVar1;\n    uVar1 = fcn.00425400();\n    *(in_EAX + 0x14) = uVar1;\n    uVar1 = fcn.00425400();\n    *(in_EAX + 0x18) = uVar1;\n    fcn.00403f88();\n    *(in_EAX + 0x1c) = 1;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 248
    },
    "00426afc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426afc(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x426bd7;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.00403fdc();\n        puVar1 = puStack36;\n    }\n    puStack36 = puVar1;\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (iVar3 == 0) {\n        fcn.0040b620();\n        fcn.004039c4();\n    }\n    else if (-1 < iVar3 + -1) {\n        do {\n            fcn.0042543c();\n            fcn.00405860();\n            fcn.0040588c();\n            cVar2 = (**(_pe_dos_header + 0x30))();\n            if (cVar2 != '\\0') {\n                fcn.0040588c();\n                (**(_pe_dos_header + 0x34))();\n                break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x426bde;\n    uStack40 = 0x426bce;\n    fcn.00404a04();\n    uStack40 = 0x426bd6;\n    fcn.00405848();\n    return;\n}\n",
        "token_count": 432
    },
    "004272ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004272ac(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403220();\n    sub.kernel32.dll_InitializeCriticalSection_1();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = in_EAX + 4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 143
    },
    "00428210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428210(uint param_1, code *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint extraout_var;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = 0x428224;\n    sub.user32.dll_GetActiveWindow();\n    puStack40 = 0x42822e;\n    fcn.0044c308();\n    puStack40 = 0x428236;\n    fcn.0044c224();\n    uStack44 = 0x4282d3;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.004552f8(*(*in_EAX + 0x34), in_EAX);\n    *in_FS_OFFSET = &stack0xffffffbc;\n    *0x464730 = in_EAX;\n    (*param_2)();\n    *in_FS_OFFSET = extraout_var;\n    fcn.00455354(*(*in_EAX + 0x34), in_EAX);\n    return;\n}\n",
        "token_count": 293
    },
    "004283b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004283b0(void)\n\n{\n    uint uVar1;\n    \n    *0x470a70 = sub.user32.dll_RegisterWindowMessageA(0x428414);\n    *0x470a74 = sub.user32.dll_RegisterWindowMessageA(0x428424);\n    uVar1 = 1;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    uVar1 = fcn.00408c24(uVar1);\n    *0x464734 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    return;\n}\n",
        "token_count": 121
    },
    "00429188": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00429188(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    code **in_FS_OFFSET;\n    code *pcVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041c87c();\n    *(in_EAX + 0x40) = 1;\n    *(in_EAX + 0x30) = 1000;\n    pcVar2 = fcn.00429210;\n    uVar1 = fcn.0041d9c8(fcn.00429210, in_EAX);\n    *(in_EAX + 0x34) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = pcVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 226
    },
    "00429480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429480(void)\n\n{\n    int32_t in_EAX;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    *(in_EAX + 0x184) = *(in_EAX + 0x184) ^ 1;\n    fcn.00415a68();\n    if (*(in_EAX + 0x5b) - 3U < 2) {\n        iStack12 = *(in_EAX + 0x40) + *(in_EAX + 0x1ac);\n    }\n    else {\n        iStack8 = *(in_EAX + 0x44) + *(in_EAX + 0x1ac);\n    }\n    sub.gdi32.dll_PatBlt(*(in_EAX + 0x180), iStack12, iStack8, *(in_EAX + 0x48), *(in_EAX + 0x4c), 0x5a0049);\n    return;\n}\n",
        "token_count": 215
    },
    "00429b3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429b3c(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    cVar1 = *(in_EAX + 0x5b);\n    if (cVar1 - 3U < 2) {\n        *arg_8h = in_EDX - *(in_EAX + 0x178);\n    }\n    else {\n        *arg_8h = in_ECX - *(in_EAX + 0x17c);\n    }\n    iVar2 = 0;\n    if (cVar1 == '\\x01') {\n        iVar2 = *(*(in_EAX + 0x174) + 0x4c) + *arg_8h;\n    }\n    else if (cVar1 == '\\x02') {\n        iVar2 = *(*(in_EAX + 0x174) + 0x4c) - *arg_8h;\n    }\n    else if (cVar1 == '\\x03') {\n        iVar2 = *(*(in_EAX + 0x174) + 0x48) + *arg_8h;\n    }\n    else if (cVar1 == '\\x04') {\n        iVar2 = *(*(in_EAX + 0x174) + 0x48) - *arg_8h;\n    }\n    *arg_ch = iVar2;\n    if (iVar2 < *(in_EAX + 0x188)) {\n        *arg_ch = *(in_EAX + 0x188);\n    }\n    else if (*(in_EAX + 0x18c) < iVar2) {\n        *arg_ch = *(in_EAX + 0x18c);\n    }\n    if (iVar2 != *arg_ch) {\n        if ((cVar1 == '\\x02') || (cVar1 == '\\x04')) {\n            iVar2 = iVar2 - *arg_ch;\n        }\n        else {\n            iVar2 = *arg_ch - iVar2;\n        }\n        *arg_8h = *arg_8h + iVar2;\n    }\n    return;\n}\n",
        "token_count": 498
    },
    "0042aa68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042aa68(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040355c();\n        in_DL = extraout_DL;\n    }\n    fcn.004419b8(arg_8h);\n    uVar1 = fcn.00403220();\n    *(in_EAX + 0x80) = uVar1;\n    if (in_DL != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = arg_8h;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "0042ab94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042ab94(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403220();\n    uVar1 = fcn.00403220();\n    *(in_EAX + 4) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "0042b9e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0042b9e4(uint32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h, uint arg_18h, uint arg_1ch, \n            uint32_t arg_20h, uint arg_24h, uint32_t arg_28h)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar1 = fcn.0042b6b8(arg_ch, arg_8h, &var_ch, arg_18h, arg_1ch, arg_28h & 0xffffff00 | arg_20h & 0xff, arg_24h, \n                         arg_28h);\n    fcn.0042b474(uVar1 & 0xffffff00 | arg_10h & 0xff, uVar1 & 0xffffff00 | arg_14h & 0xff);\n    fcn.0042b5d8(arg_ch, arg_8h & 0xffffff00 | arg_14h & 0xff, arg_8h);\n    return;\n}\n",
        "token_count": 251
    },
    "0042c758": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c758(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint in_EDX;\n    uint arg_10h;\n    uint *arg_8h_00;\n    uint var_10h;\n    \n    piVar1 = fcn.0042c308();\n    (**(*piVar1 + 0x40))();\n    (**(*piVar1 + 0x34))();\n    fcn.0042350c();\n    fcn.004200ac();\n    uVar2 = (**(*piVar1 + 0x20))();\n    arg_8h_00 = &var_10h;\n    (**(*piVar1 + 0x2c))();\n    fcn.00415a90(arg_8h_00, uVar2);\n    fcn.0042350c(&var_10h);\n    fcn.004204cc();\n    arg_10h = 0;\n    uVar2 = 1;\n    fcn.0042350c();\n    fcn.00442540(uVar2, in_EDX, arg_10h);\n    return;\n}\n",
        "token_count": 256
    },
    "0042c888": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c888(void)\n\n{\n    char cVar1;\n    \n    cVar1 = '\\v';\n    do {\n        fcn.00403250();\n        cVar1 = cVar1 + -1;\n    } while (cVar1 != '\\0');\n    return;\n}\n",
        "token_count": 65
    },
    "0042d07c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d07c(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0042cfcc();\n    (***0x46f878)(uVar1);\n    return;\n}\n",
        "token_count": 86
    },
    "0042d0cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d0cc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0042cfcc();\n    (***0x46f990)(uVar1);\n    return;\n}\n",
        "token_count": 91
    },
    "0042d118": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d118(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0042cfcc();\n    (***0x46f940)(uVar1);\n    return;\n}\n",
        "token_count": 78
    },
    "0042d15c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d15c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0042cfcc();\n    (***0x46fb38)(uVar1);\n    return;\n}\n",
        "token_count": 85
    },
    "0042d6f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d6f4(char param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uint uStack116;\n    uint *puStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint uStack92;\n    uint uStack88;\n    int32_t var_44h;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint var_34h;\n    int32_t nLeftRect;\n    int32_t nTopRect;\n    int32_t nRightRect;\n    int32_t nBottomRect;\n    int32_t var_18h;\n    int32_t iStack24;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint hdc;\n    uint var_4h;\n    \n    uStack88 = 0xffffffec;\n    uStack92 = 0x42d70e;\n    var_4h = param_2;\n    uStack92 = fcn.0043b420();\n    puStack96 = 0x42d714;\n    uVar1 = sub.user32.dll_GetWindowLongA();\n    if ((uVar1 & 0x200) != 0) {\n        puStack96 = &fcn.0042d6f4::nLeftRect;\n        uStack100 = 0x42d729;\n        uStack100 = fcn.0043b420();\n        iStack104 = 0x42d72f;\n        sub.user32.dll_GetWindowRect();\n        iStack104 = -nTopRect;\n        iStack108 = -nLeftRect;\n        puStack112 = &fcn.0042d6f4::nLeftRect;\n        uStack116 = 0x42d744;\n        sub.user32.dll_OffsetRect();\n        uStack116 = 0x42d74c;\n        uStack116 = fcn.0043b420();\n        puStack120 = 0x42d752;\n        hdc = sub.user32.dll_GetWindowDC();\n        uStack124 = 0x42d84f;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        var_18h = nLeftRect;\n        iStack24 = nTopRect;\n        var_10h = nRightRect;\n        var_ch = nBottomRect;\n        puStack120 = &stack0xfffffffc;\n        if (param_1 != '\\0') {\n            puStack120 = &stack0xfffffffc;\n            uVar2 = fcn.0043b420(0xfffffff0);\n            uVar1 = sub.user32.dll_GetWindowLongA(uVar2);\n            if (((uVar1 & 0x100000) != 0) && ((uVar1 & 0x200000) != 0)) {\n                sub.user32.dll_GetSystemMetrics(2);\n                sub.user32.dll_GetSystemMetrics(3);\n                sub.user32.dll_InflateRect(&fcn.0042d6f4::var_18h, 0xfffffffe, 0xfffffffe);\n                fcn.00415a90(&fcn.0042d6f4::var_44h, var_ch);\n                var_18h = var_44h;\n                iStack24 = iStack68;\n                var_10h = iStack64;\n                var_ch = iStack60;\n                uVar2 = sub.user32.dll_GetSysColorBrush(0xf);\n                sub.user32.dll_FillRect(hdc, &fcn.0042d6f4::var_18h, uVar2);\n            }\n        }\n        sub.gdi32.dll_ExcludeClipRect(hdc, nLeftRect + 2, nTopRect + 2, nRightRect + -2, nBottomRect + -2);\n        fcn.0042d290();\n        uVar2 = 0;\n        fcn.0042d118(0, &fcn.0042d6f4::nLeftRect);\n        *in_FS_OFFSET = uVar2;\n        uVar2 = fcn.0043b420(hdc, 0x42d856);\n        sub.user32.dll_ReleaseDC(uVar2);\n        return;\n    }\n    return;\n}\n",
        "token_count": 973
    },
    "0042e8e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042e8e4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.0044100c();\n    *(in_EAX + 0x60) = 0;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 152
    },
    "0042f2d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042f2d0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_100h;\n    \n    sub.user32.dll_GetClassNameA(arg_8h, &var_100h, 0x100);\n    iVar1 = fcn.004086dc();\n    if (iVar1 == 0) {\n        *(arg_ch + 4) = arg_8h;\n        *(arg_ch + 0xc) = 1;\n    }\n    return -(*(arg_ch + 0xc) != '\\x01');\n}\n",
        "token_count": 134
    },
    "0042f32c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042f32c(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_100h;\n    \n    sub.user32.dll_GetClassNameA(arg_8h, &var_100h, 0x100);\n    iVar1 = fcn.004086b8();\n    if (iVar1 == 0) {\n        *(arg_ch + 0xd) = 1;\n        *(arg_ch + 8) = arg_8h;\n    }\n    return -(*(arg_ch + 0xd) != '\\x01');\n}\n",
        "token_count": 134
    },
    "0042f42c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t __fastcall fcn.0042f42c(uint param_1, int32_t param_2)\n\n{\n    uint8_t uStack11;\n    \n    uStack11 = *(param_2 + 0xc) >> 8;\n    return uStack11 ^ 1;\n}\n",
        "token_count": 64
    },
    "0042f530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042f530(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00403220();\n    fcn.00405860();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 138
    },
    "0042f61c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f61c(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42f66e;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x470b08 == 0;\n    *0x470b08 = *0x470b08 + -1;\n    if (bVar1) {\n        *0x470b0c = fcn.0042f530();\n        fcn.00405848();\n        fcn.00426208();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 181
    },
    "004319f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004319f4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    *(*0x464a08 + 0x180) = arg_8h;\n    sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffffc, *(*0x464a08 + 0x18c));\n    uVar1 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff0);\n    if ((uVar1 & 0x40000000) != 0) {\n        iVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff4);\n        if (iVar2 == 0) {\n            sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffff4, arg_8h);\n        }\n    }\n    sub.user32.dll_SetPropA(arg_8h, *0x470b22, *0x464a08);\n    sub.user32.dll_SetPropA(arg_8h, *0x470b20, *0x464a08);\n    iVar2 = *0x464a08;\n    *0x464a08 = 0;\n    uVar3 = (**(iVar2 + 0x18c))(arg_8h, arg_ch, arg_10h, arg_14h);\n    return uVar3;\n}\n",
        "token_count": 336
    },
    "00431da8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431da8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar auStack16 [8];\n    \n    puVar3 = auStack16;\n    iVar1 = param_2;\n    sub.gdi32.dll_GetWindowOrgEx(param_2, auStack16);\n    iVar2 = param_2;\n    sub.gdi32.dll_SetWindowOrgEx(param_2, iVar1 + *(in_EAX + 0x40), puVar3 + *(in_EAX + 0x44), 0);\n    iVar1 = param_2;\n    fcn.00435dec(param_2);\n    sub.gdi32.dll_SetWindowOrgEx(param_2, iVar1, iVar2, 0);\n    return;\n}\n",
        "token_count": 195
    },
    "00431f2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431f2c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = fcn.004026cc();\n    *puVar2 = param_2;\n    uVar3 = fcn.00431f04(&stack0xfffffffc);\n    puVar2[1] = uVar3;\n    cVar1 = fcn.00431ed0();\n    if (cVar1 == '\\0') {\n        fcn.00416d68();\n    }\n    else {\n        fcn.00416f40();\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "004320bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004320bc(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x432186;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    iVar1 = *param_2;\n    if (iVar1 < 0x216) {\n        if (iVar1 == 0x215) {\n            puStack32 = &stack0xfffffffc;\n            fcn.004331dc();\n        }\n        else if (iVar1 == 0x200) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00406b28();\n            in_stack_ffffffd0 = *0x470b3c;\n            sub.user32.dll_ClientToScreen(*0x470b3c, &var_ch);\n            fcn.00432b64();\n        }\n        else if ((iVar1 == 0x202) || (iVar1 == 0x205)) {\n            puStack32 = &stack0xfffffffc;\n            fcn.004331dc();\n        }\n    }\n    else if (iVar1 == 0xbd00) {\n        if (param_2[1] == 0x11) {\n            fcn.00432b64();\n        }\n        else if (param_2[1] == 0x1b) {\n            param_2[3] = 1;\n            puStack32 = &stack0xfffffffc;\n            fcn.004331dc();\n        }\n    }\n    else if ((iVar1 == 0xbd01) && (param_2[1] == 0x11)) {\n        puStack32 = &stack0xfffffffc;\n        fcn.00432b64();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    return;\n}\n",
        "token_count": 460
    },
    "00432250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432250(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x38) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00433500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00433500(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    uint uStack24;\n    \n    iVar1 = fcn.004334cc();\n    iVar3 = 0;\n    if (iVar1 != 0) {\n        arg_8h = 0;\n        fcn.00434798();\n        iVar2 = fcn.00438d0c(arg_8h);\n        iVar3 = iVar1;\n        if (iVar2 != 0) {\n            iVar3 = iVar2;\n        }\n    }\n    return CONCAT44(uStack24, iVar3);\n}\n",
        "token_count": 148
    },
    "00433590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433590(void)\n\n{\n    sub.gdi32.dll_GetWindowOrgEx();\n    sub.gdi32.dll_SetWindowOrgEx();\n    return;\n}\n",
        "token_count": 37
    },
    "004335c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004335c0(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack24 = 0x4335d0;\n    var_8h = fcn.00417230();\n    uStack28 = 0x433670;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (-1 < *(var_8h + 8) + -1) {\n        var_4h = 0;\n        puStack24 = &stack0xfffffffc;\n        var_ch = *(var_8h + 8);\n        do {\n            puStack36 = 0x433602;\n            var_10h = fcn.00416ec4();\n            puStack36 = 0x43360d;\n            cVar1 = fcn.004206e8();\n            if (cVar1 != '\\0') {\n                uStack40 = 0x433649;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.004337fc();\n                fcn.00403a70();\n                fcn.00403a70();\n                return;\n            }\n            var_4h = var_4h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x433677;\n    uStack28 = 0x43366f;\n    fcn.00417294();\n    return;\n}\n",
        "token_count": 429
    },
    "00433874": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00433874(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00403220();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 164
    },
    "00433aa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433aa4(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x433b0b;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    cVar1 = fcn.00440f14();\n    if (cVar1 != '\\0') {\n        fcn.00434c44();\n        fcn.00403400(0);\n        fcn.00404394();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x433b12;\n    uStack20 = 0x433b0a;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 200
    },
    "00433e2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433e2c(void)\n\n{\n    int32_t *arg_8h;\n    char extraout_DL;\n    \n    arg_8h = fcn.004035c4();\n    fcn.00454348();\n    if ((arg_8h[0x28] == 0) || ((*(arg_8h[0x28] + 0x1c) & 8) != 0)) {\n        (**(*arg_8h + 0x68))();\n    }\n    else {\n        fcn.00435dec(arg_8h);\n        (**(*arg_8h + 0x68))();\n        fcn.004345f4();\n        fcn.0040344c();\n        arg_8h[0x28] = 0;\n    }\n    fcn.00403250();\n    arg_8h[0x1b] = 0;\n    fcn.00403250();\n    fcn.00403250();\n    fcn.00408814();\n    fcn.0041c8c8();\n    if ('\\0' < extraout_DL) {\n        fcn.004035ac();\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "004345f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004345f4(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    *param_2 = *(in_EAX + 0x40);\n    param_2[1] = *(in_EAX + 0x44);\n    param_2[2] = *(in_EAX + 0x40) + *(in_EAX + 0x48);\n    param_2[3] = *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n    return;\n}\n",
        "token_count": 129
    },
    "00434658": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00434658(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack12;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack12;\n}\n",
        "token_count": 47
    },
    "00434670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434670(void)\n\n{\n    fcn.0043469c();\n    fcn.00415a68();\n    fcn.00434ad0();\n    return;\n}\n",
        "token_count": 42
    },
    "0043469c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043469c(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack8;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack8;\n}\n",
        "token_count": 48
    },
    "004346b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004346b4(void)\n\n{\n    fcn.00434658();\n    fcn.00415a68();\n    fcn.00434ad0();\n    return;\n}\n",
        "token_count": 42
    },
    "0043476c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043476c(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 + iStack20;\n    param_1[1] = param_2[1] + iStack16;\n    return;\n}\n",
        "token_count": 105
    },
    "00434798": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434798(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 - iStack20;\n    param_1[1] = param_2[1] - iStack16;\n    return;\n}\n",
        "token_count": 104
    },
    "00434ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434ad0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    iVar1 = *param_2;\n    iVar2 = param_2[1];\n    (**(*in_EAX + 0x44))(iVar1, iVar2);\n    (**(*in_EAX + 0x84))((in_EAX[0x13] - iStack16) + iVar2, (in_EAX[0x12] - iStack20) + iVar1);\n    return;\n}\n",
        "token_count": 154
    },
    "00435b18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00435b18(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *arg_8h;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uchar auStack28 [16];\n    \n    uVar3 = *param_2;\n    uVar4 = param_2[1];\n    uVar5 = param_2[2];\n    uVar6 = param_2[3];\n    if (*(in_EAX + 0xa0) != 0) {\n        cVar1 = fcn.0040344c(uVar3, uVar4, uVar5, uVar6);\n        if (cVar1 == '\\0') {\n            cVar1 = '\\0';\n            goto code_r0x00435b4c;\n        }\n    }\n    cVar1 = '\\x01';\ncode_r0x00435b4c:\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.0043699c();\n        if (iVar2 == 0) {\n            fcn.0040344c(uVar3, uVar4, uVar5, uVar6);\n        }\n        else {\n            uVar3 = fcn.0043469c();\n            arg_8h = auStack28;\n            fcn.00434658();\n            fcn.00415a90(arg_8h, uVar3);\n            fcn.0040344c();\n        }\n    }\n    return cVar1;\n}\n",
        "token_count": 357
    },
    "00435cb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435cb8(uint param_1, int32_t param_2)\n\n{\n    uint uStack16;\n    \n    sub.user32.dll_GetCursorPos();\n    fcn.00434798();\n    *param_2 = param_2;\n    *(param_2 + 4) = uStack16;\n    return;\n}\n",
        "token_count": 76
    },
    "00435dec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435dec(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        (**(in_EAX + 0x38))();\n    }\n    return 0;\n}\n",
        "token_count": 84
    },
    "00436124": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436124(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0x4360e8;\n    fcn.004360f4(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1);\n    return;\n}\n",
        "token_count": 90
    },
    "00436238": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436238(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        if ((*(in_EAX + 0x48) < 0x8001) && (*(in_EAX + 0x4c) < 0x8001)) {\n            fcn.0044c580(*(in_EDX + 10), *(in_EDX + 8));\n            fcn.0040344c();\n        }\n        else {\n            fcn.00435cb8();\n            fcn.0044c580(var_4h, var_8h);\n            fcn.0040344c();\n        }\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0043699c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043699c(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = (**(*in_EAX + 0x58))(*param_2, param_2[1], param_2[2], param_2[3]);\n    if (iVar1 != 0) {\n        iVar1 = (**(*in_EAX + 0x58))();\n        iVar2 = fcn.00403198();\n        if (iVar1 != iVar2) {\n            iVar1 = (**(*in_EAX + 0x58))();\n            uVar3 = (**(iVar1 + 0x2c))();\n            fcn.004343e8();\n            fcn.004343c4();\n            fcn.00434670();\n            fcn.004346b4();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 225
    },
    "00436dd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00436dd8(uint param_1, int32_t param_2)\n\n{\n    double *in_EAX;\n    double *pdVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar2 = 0;\n    if (0 < param_2) {\n        iVar3 = 1;\n        pdVar1 = in_EAX;\n        do {\n            pdVar1 = pdVar1 + 1;\n            if (*pdVar1 < in_EAX[iVar2]) {\n                iVar2 = iVar3;\n            }\n            iVar3 = iVar3 + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 174
    },
    "0043714c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043714c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    code **in_FS_OFFSET;\n    code *pcVar2;\n    code *pcStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        puStack40 = 0x437165;\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    uStack44 = 0x437244;\n    pcStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &fcn.0043714c::var_1h + 1;\n    var_1h._0_1_ = param_2;\n    fcn.00433d54();\n    pcVar2 = fcn.00438bdc;\n    uVar1 = fcn.0041d90c(fcn.00438bdc, in_EAX);\n    *(in_EAX + 0x18c) = uVar1;\n    uVar1 = fcn.0041ff04();\n    *(in_EAX + 0x170) = uVar1;\n    fcn.004200ac();\n    *(in_EAX + 0x1a9) = 1;\n    *(in_EAX + 0x1a0) = 0xffffffff;\n    *(in_EAX + 0x184) = 3;\n    if (*(*0x46fc24 + 4) == 0x11) {\n        fcn.00403f88();\n    }\n    else {\n        fcn.00453448();\n        fcn.00403fdc();\n    }\n    *(in_EAX + 0x1a7) = 0;\n    *(in_EAX + 0x162) = *0x43726c;\n    *(in_EAX + 0x163) = 2;\n    *(in_EAX + 0x164) = 1;\n    *(in_EAX + 0x168) = 1;\n    *(in_EAX + 0x150) = 1;\n    *in_FS_OFFSET = pcVar2;\n    pcStack48 = 0x43724b;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 567
    },
    "00437ce8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00437ce8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00403220();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.00434658();\n    iVar2 = fcn.00438150();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00438114();\n            if (*(iVar3 + 4) == *(in_EAX + 4)) {\n                fcn.00438114();\n                fcn.00416d68();\n                fcn.004343c4();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar1 = *(iVar1 + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00416ec4();\n            fcn.00435dec(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00403250();\n    return;\n}\n",
        "token_count": 325
    },
    "00438150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00438150(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (*(in_EAX + 0x198) != 0) {\n        iVar1 = *(*(in_EAX + 0x198) + 8);\n    }\n    if (*(in_EAX + 0x19c) != 0) {\n        iVar1 = iVar1 + *(*(in_EAX + 0x19c) + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 123
    },
    "004381b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004381b0(uint param_1, ushort param_2)\n\n{\n    fcn.00438170(param_2, 0, 0, 0);\n    return;\n}\n",
        "token_count": 46
    },
    "00438760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438760(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00436124();\n    uVar2 = 0x4385e8;\n    uVar1 = 0x438620;\n    uVar3 = in_EAX;\n    fcn.00438688(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1, in_EAX, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 147
    },
    "0043895c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043895c(uint arg_8h)\n\n{\n    uint var_10h;\n    \n    return;\n}\n",
        "token_count": 30
    },
    "004390a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004390a0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00431ae0();\n    if (iVar1 != 0) {\n        uVar2 = fcn.00435dec(*(param_2 + 8));\n        *(param_2 + 0xc) = uVar2;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 105
    },
    "0043ae0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ae0c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_3ch;\n    uint lpwndpl;\n    uint var_10h;\n    \n    if ((((in_EDX == *(in_EAX + 0x40)) && (in_ECX == *(in_EAX + 0x44))) && (arg_ch == *(in_EAX + 0x48))) &&\n       (arg_8h == *(in_EAX + 0x4c))) {\n        return;\n    }\n    cVar1 = fcn.0043b724();\n    if ((cVar1 == '\\0') || (iVar2 = sub.user32.dll_IsIconic(*(in_EAX + 0x180)),  iVar2 != 0)) {\n        *(in_EAX + 0x40) = in_EDX;\n        *(in_EAX + 0x44) = in_ECX;\n        *(in_EAX + 0x48) = arg_ch;\n        *(in_EAX + 0x4c) = arg_8h;\n        cVar1 = fcn.0043b724();\n        if (cVar1 != '\\0') {\n            lpwndpl = 0x2c;\n            sub.user32.dll_GetWindowPlacement(*(in_EAX + 0x180), &lpwndpl);\n            fcn.004345f4();\n            sub.user32.dll_SetWindowPlacement();\n        }\n    }\n    else {\n        sub.user32.dll_SetWindowPos(*(in_EAX + 0x180), 0);\n    }\n    fcn.004342a8();\n    fcn.0040344c();\n    return;\n}\n",
        "token_count": 404
    },
    "0043aee4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043aee4(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00438150(param_2, param_1);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00438114();\n            fcn.0040344c();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0043b328": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043b328(void)\n\n{\n    int32_t in_EAX;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar auStack20 [16];\n    \n    puStack32 = &stack0xffffffec;\n    uStack24 = 0x43b337;\n    fcn.004345f4();\n    uStack24 = 1;\n    uStack28 = 1;\n    sub.user32.dll_InflateRect();\n    sub.user32.dll_InvalidateRect(*(*(in_EAX + 0x30) + 0x180), &stack0xffffffe0, 0xffffffff);\n    return;\n}\n",
        "token_count": 145
    },
    "0043b730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043b730(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack60;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack76 = *(in_EAX + 0x180);\n    puStack80 = 0x43b744;\n    iVar1 = sub.user32.dll_IsIconic();\n    if (iVar1 == 0) {\n        uStack84 = *(in_EAX + 0x180);\n        uStack88 = 0x43b77a;\n        puStack80 = &stack0xffffffb4;\n        sub.user32.dll_GetWindowRect();\n    }\n    else {\n        uStack60 = 0x2c;\n        puStack80 = &stack0xffffffc4;\n        uStack84 = *(in_EAX + 0x180);\n        uStack88 = 0x43b761;\n        sub.user32.dll_GetWindowPlacement();\n        uStack84 = uStack40;\n        puStack80 = puStack36;\n        uStack76 = uStack32;\n        uStack72 = uStack28;\n    }\n    uStack88 = 0xfffffff0;\n    uStack92 = *(in_EAX + 0x180);\n    uStack96 = 0x43b788;\n    uVar2 = sub.user32.dll_GetWindowLongA();\n    if ((uVar2 & 0x40000000) != 0) {\n        uStack96 = 0xfffffff8;\n        uStack100 = *(in_EAX + 0x180);\n        puStack104 = 0x43b79d;\n        iVar1 = sub.user32.dll_GetWindowLongA();\n        if (iVar1 != 0) {\n            sub.user32.dll_ScreenToClient();\n            sub.user32.dll_ScreenToClient();\n            iStack116 = iVar1;\n            puStack112 = &stack0xffffff9c;\n            iStack108 = iVar1;\n            puStack104 = &stack0xffffff9c;\n        }\n    }\n    *(in_EAX + 0x40) = iStack116;\n    *(in_EAX + 0x44) = puStack112;\n    *(in_EAX + 0x48) = iStack108 - iStack116;\n    *(in_EAX + 0x4c) = puStack104 - puStack112;\n    fcn.004342a8();\n    return;\n}\n",
        "token_count": 629
    },
    "0043b980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b980(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00438150();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00438114();\n            if (*(iVar2 + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0043c844": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043c844(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uStack16 = 0x43c855;\n    var_4h = in_EAX;\n    uStack16 = fcn.0043b420();\n    puStack20 = 0x43c85b;\n    var_8h = sub.user32.dll_GetWindowDC();\n    uStack24 = 0x43c89a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*var_4h + 0xcc))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x43c8a1;\n    uStack24 = var_8h;\n    uStack28 = 0x43c893;\n    uStack28 = fcn.0043b420();\n    sub.user32.dll_ReleaseDC();\n    return;\n}\n",
        "token_count": 264
    },
    "0043c8a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043c8a8(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x43c941;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    (**(*in_EAX + 0x44))();\n    var_10h = var_10h + 2;\n    var_ch = var_ch + 2;\n    fcn.0041f8e0();\n    uVar1 = fcn.00436f58();\n    fcn.00434c44(0xffffffff, &var_10h, uVar1 | 0x810);\n    uVar2 = fcn.00404448();\n    uVar2 = fcn.0042084c(uVar2);\n    sub.user32.dll_DrawTextA();\n    *in_FS_OFFSET = uVar2;\n    fcn.00403f88(0x43c948);\n    return;\n}\n",
        "token_count": 285
    },
    "0043cc3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043cc3c(void)\n\n{\n    int32_t *in_EAX;\n    uint var_10h;\n    \n    (**(*in_EAX + 0xd0))();\n    return;\n}\n",
        "token_count": 47
    },
    "0043cc64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043cc64(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    fcn.00415a90(arg_8h, 0);\n    uVar1 = fcn.00436f58();\n    uVar2 = fcn.00404448(0xffffffff, arg_8h, uVar1 | 0xc10);\n    uVar2 = fcn.0042084c(uVar2);\n    sub.user32.dll_DrawTextA(uVar2);\n    *(arg_8h + 8) = *(arg_8h + 8) + 6;\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + 2;\n    return;\n}\n",
        "token_count": 182
    },
    "0043cd50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043cd50(int32_t *arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t lpRect;\n    int32_t var_14h;\n    uint lpPoint;\n    uint var_4h;\n    \n    sub.user32.dll_ClientToScreen();\n    sub.user32.dll_GetWindowRect();\n    *arg_8h = in_EDX - lpRect;\n    arg_8h[1] = in_ECX - var_14h;\n    return;\n}\n",
        "token_count": 120
    },
    "0043cda8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043cda8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint dxHotspot;\n    uint dyHotspot;\n    uint himlDrag;\n    \n    if (*(in_EAX + 0x68) != -1) {\n        uStack24 = 1;\n        uStack28 = 1;\n        uStack32 = 1;\n        uStack36 = 0xe;\n        uStack40 = 0x43cdcd;\n        uStack40 = (***0x46f870)();\n        uStack44 = 0xd;\n        uStack48 = 0x43cdd9;\n        uStack48 = (***0x46f870)();\n        puStack52 = 0x43cddf;\n        himlDrag = sub.comctl32.dll_ImageList_Create();\n        uStack56 = 0x43ce68;\n        uStack60 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc4;\n        puStack52 = &stack0xfffffffc;\n        fcn.004534d0();\n        fcn.004255c0();\n        fcn.004534d0();\n        fcn.004255c0();\n        sub.comctl32.dll_ImageList_SetDragCursorImage(himlDrag, 0, 0, 0);\n        sub.comctl32.dll_ImageList_GetDragImage(0, &fcn.0043cda8::dxHotspot);\n        uVar1 = himlDrag;\n        sub.comctl32.dll_ImageList_SetDragCursorImage(himlDrag, 1, dxHotspot, dyHotspot);\n        *in_FS_OFFSET = uVar1;\n        sub.comctl32.dll_ImageList_Destroy(himlDrag, 0x43ce6f);\n        return;\n    }\n    return;\n}\n",
        "token_count": 463
    },
    "0043d240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d240(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x1c) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "0043e5a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e5a4(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    int32_t in_EDX;\n    uint *arg_8h_00;\n    uint uVar1;\n    uint uVar2;\n    uint var_10h;\n    \n    uVar2 = 0;\n    uVar1 = 1;\n    arg_ch = *(*(arg_8h + -8) + 0x18) + in_EDX + -2;\n    arg_8h_00 = &var_10h;\n    fcn.00415a90(arg_8h_00, arg_ch);\n    uVar1 = fcn.0042084c(&var_10h, arg_8h_00, arg_ch, uVar1, uVar2);\n    sub.user32.dll_DrawFrameControl(uVar1);\n    return;\n}\n",
        "token_count": 195
    },
    "0043ef10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ef10(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    int32_t arg_8h_00;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43efbf;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    (**(**(arg_8h + -4) + 0x10))();\n    (**(**(arg_8h + -4) + 0x10))();\n    (**(**(arg_8h + -4) + 0x10))();\n    arg_8h_00 = arg_8h;\n    fcn.0043d51c();\n    fcn.0043ee98(arg_8h_00);\n    if (*(in_EAX + 8) != 0) {\n        fcn.0043ef10(arg_8h);\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0043ef10(arg_8h);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x43efc6;\n    uStack28 = 0x43efbe;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 330
    },
    "0043f210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f210(uint *param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar1 = *param_1;\n    uVar2 = param_1[1];\n    *(in_EAX + 0x60) = param_2;\n    fcn.0043b420(uVar1, uVar2);\n    fcn.0043fd70();\n    uVar1 = fcn.0043b420();\n    *(in_EAX + 0x5c) = uVar1;\n    uVar3 = 0;\n    uVar2 = sub.user32.dll_GetDCEx(uVar1, 0, 0x412);\n    *(in_EAX + 0x58) = uVar2;\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x54) = uVar3;\n    fcn.0043f324();\n    return;\n}\n",
        "token_count": 235
    },
    "0043f4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043f4a0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        var_8h = fcn.0043d78c();\n        iVar1 = fcn.0043d310();\n        var_8h = var_8h + iVar1;\n    }\n    else {\n        var_8h = fcn.0043d78c();\n    }\n    fcn.0043f410(&stack0xfffffffc);\n    return var_8h;\n}\n",
        "token_count": 153
    },
    "0043f4f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043f4f0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar2 = 4;\n    if (param_2 != 0) {\n        fcn.004345f4();\n        fcn.004345f4();\n        if (((var_1ch < var_ch) || (var_14h <= var_4h)) || (var_8h < var_18h)) {\n            if (((var_20h < var_10h) || (var_18h <= var_8h)) || (var_4h < var_14h)) {\n                iVar1 = var_1ch + var_14h >> 1;\n                if (iVar1 < 0) {\n                    iVar1 = iVar1 + ((var_1ch + var_14h & 1U) != 0);\n                }\n                if (iVar1 <= var_ch) {\n                    uVar2 = 2;\n                }\n            }\n            else {\n                uVar2 = 3;\n            }\n        }\n        else {\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 335
    },
    "0043f724": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f724(char param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0043dad8();\n    if (iVar1 == 0) {\n        if (param_1 != '\\0') {\n            fcn.00415a68();\n            iVar1 = fcn.0043e2cc();\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = *(iVar1 + 4);\n            }\n            fcn.0043f4f0(uVar2);\n            (**(*in_EAX + 8))();\n        }\n    }\n    else {\n        if (param_1 == '\\0') {\n            fcn.0043f56c(&stack0xfffffffc);\n        }\n        else {\n            fcn.0043f5ec(&stack0xfffffffc);\n        }\n        (**(*in_EAX[5] + 0x7c))();\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "004401f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004401f8(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    uint *puVar3;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_10h = 0;\n    var_4h = 0;\n    uStack48 = 0x440370;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack52;\n    puVar3 = &var_4h;\n    var_ch = sub.kernel32.dll_GetCurrentProcessId();\n    var_8h._0_1_ = 0;\n    fcn.00408ca4(puVar3);\n    fcn.00403fdc();\n    uVar1 = fcn.00404448();\n    *0x470b20 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    puVar3 = &var_10h;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    fcn.00408ca4(puVar3);\n    fcn.00403fdc();\n    uVar1 = fcn.00404448();\n    *0x470b22 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    uVar1 = fcn.00404448();\n    *0x470b2c = sub.user32.dll_RegisterWindowMessageA(uVar1);\n    *0x470b64 = fcn.004170d8();\n    fcn.0043fdfc();\n    *0x470b14 = fcn.0043fc24();\n    uVar1 = fcn.00452dac();\n    **0x46fbf8 = uVar1;\n    uVar1 = fcn.00453e90();\n    **0x46fa30 = uVar1;\n    fcn.00455a78();\n    fcn.0041688c();\n    iVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x4403ac);\n    if (iVar2 != 0) {\n        *0x464a04 = sub.kernel32.dll_GetProcAddress_1(iVar2, 0x4403b4);\n        in_stack_ffffffac = iVar2;\n    }\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00403f88(0x440377);\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 616
    },
    "00440c88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440c88(code *arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(in_EAX + 0x30) + 8);\n    if (-1 < iVar1 + -1) {\n        iVar2 = 0;\n        do {\n            if (*(*(*(*(in_EAX + 0x30) + 4) + iVar2 * 4) + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "0044100c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044100c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041d184();\n    *(in_EAX + 0x6a) = 1;\n    *(in_EAX + 0x80) = 0xffffffff;\n    *(in_EAX + 0x86) = 1;\n    *(in_EAX + 0x90) = 0;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 197
    },
    "004419b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004419b8(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040355c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.0041c87c();\n    in_EAX[0xd] = in_ECX;\n    in_EAX[0xc] = arg_8h;\n    (**(*in_EAX + 0x34))();\n    if (in_DL != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 205
    },
    "00441b44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00441b44(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint var_18h;\n    uint hdc;\n    int32_t var_4h;\n    \n    uStack36 = 0;\n    puStack40 = 0x441b55;\n    var_4h = in_EAX;\n    hdc = sub.user32.dll_GetDC();\n    uStack44 = 0x441be5;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar1 = *(var_4h + 0x50);\n    puStack40 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap(hdc, *(var_4h + 0x34), *(var_4h + 0x30));\n    fcn.0042402c();\n    fcn.0042350c();\n    fcn.004200ac();\n    arg_ch = (**(*piVar1 + 0x20))();\n    arg_8h = &fcn.00441b44::var_18h;\n    (**(*piVar1 + 0x2c))();\n    fcn.00415a90(arg_8h, arg_ch);\n    fcn.0042350c(&fcn.00441b44::var_18h);\n    fcn.004204cc();\n    *in_FS_OFFSET = arg_8h;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x441bec);\n    return;\n}\n",
        "token_count": 387
    },
    "00441c08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441c08(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = *(in_EAX + 0x34);\n    uStack12 = *(in_EAX + 0x30);\n    puVar1 = &uStack8;\n    sub.comctl32.dll_ImageList_GetIconSize(param_2, puVar1, &uStack12);\n    *(in_EAX + 0x34) = puVar1;\n    *(in_EAX + 0x30) = param_2;\n    fcn.00441b44();\n    return;\n}\n",
        "token_count": 159
    },
    "00441e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441e40(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x441e5b;\n    fcn.00422f44();\n    uStack36 = 0x441eef;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x441e78;\n    puStack32 = &stack0xfffffffc;\n    fcn.00422f44();\n    uStack48 = 0x441ed2;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00441b38();\n    uVar1 = fcn.00441d14();\n    uVar2 = fcn.00441d14(uVar1);\n    uVar1 = *(in_EAX + 0x3c);\n    sub.comctl32.dll_ImageList_Add(uVar1, uVar2);\n    *in_FS_OFFSET = uVar1;\n    fcn.00403250(0x441ed9);\n    return;\n}\n",
        "token_count": 337
    },
    "00442a74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.00442a74(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    piVar2 = in_EAX;\n    if (param_2 != NULL) {\n        puStack32 = 0x442a8c;\n        piVar1 = fcn.00442028();\n        puStack32 = 0x442a95;\n        piVar2 = fcn.00442028();\n        if (piVar1 == piVar2) {\n            puStack32 = 0x442aa9;\n            iVar3 = fcn.00442028();\n            if (iVar3 != 0) {\ncode_r0x00442ac1:\n                puStack32 = 0x442acd;\n                fcn.00403220();\n                uStack36 = 0x442b50;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x442ae8;\n                puStack32 = &fcn.00442a74::var_1h + 1;\n                (**(*in_EAX + 0x3c))();\n                puStack44 = 0x442af4;\n                fcn.00403220();\n                uStack48 = 0x442b33;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.00442a74::var_1h + 1;\n                (**(*param_2 + 0x3c))();\n                var_1h._0_1_ = fcn.00442a30();\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x442b3a;\n                uStack48 = 0x442b32;\n                uVar4 = fcn.00403250();\n                return uVar4;\n            }\n            puStack32 = 0x442ab4;\n            piVar2 = fcn.00442028();\n            if (piVar2 != NULL) goto code_r0x00442ac1;\n            var_1h._0_1_ = 1;\n            goto code_r0x00442b57;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x00442b57:\n    return piVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 658
    },
    "00442bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442bc0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0041cbf4();\n    uVar2 = *(*in_EAX + 0x38);\n    uVar1 = *(*in_EAX + 0x3c);\n    piVar3 = in_EAX;\n    fcn.00442b64(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1, in_EAX, uVar2, piVar3);\n    return;\n}\n",
        "token_count": 164
    },
    "00442eac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442eac(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY48;\n    uint uStackY44;\n    uchar *puStackY40;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY40 = 0x442ecb;\n    iVar1 = fcn.0041d374(0);\n    uStackY44 = 0x442f0c;\n    iStackY48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (iVar1 != 0) {\n        iVar1 = iVar1 + 0x14;\n    }\n    puStackY40 = &stack0xfffffffc;\n    sub.comctl32.dll_ImageList_Read();\n    fcn.00441cc8();\n    *in_FS_OFFSET = iVar1;\n    uStackY44 = 0x442f13;\n    iStackY48 = 0x442f0b;\n    fcn.00403250();\n    return;\n}\n",
        "token_count": 240
    },
    "00444f3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00444f3c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x70) != 0) && (cVar1 = fcn.004033dc(),  cVar1 != '\\0')) {\n        fcn.004477d8();\n        fcn.00447cd4();\n    }\n    if (*(in_EAX + 0x70) != 0) {\n        fcn.00448810();\n    }\n    fcn.004446d8();\n    return;\n}\n",
        "token_count": 134
    },
    "00446820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446820(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_154h;\n    uint var_bch;\n    uint var_b8h;\n    \n    var_154h = 0x154;\n    iVar1 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_154h, 0);\n    if (iVar1 != 0) {\n        **(arg_8h + -4) = var_bch;\n        **(arg_8h + 8) = var_b8h;\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "004475f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004475f4(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    (**(**(arg_8h + -8) + 8))();\n    uVar1 = (**(**(arg_8h + -0xc) + 0x14))();\n    *(arg_8h + -0x10) = uVar1;\n    iVar2 = (**(**(arg_8h + -0x14) + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            uVar1 = (**(**(arg_8h + -0x14) + 0x18))();\n            (**(**(arg_8h + -0x14) + 0x18))(uVar1);\n            (**(**(arg_8h + -8) + 0x3c))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00404020();\n    return;\n}\n",
        "token_count": 234
    },
    "0044806c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.0044806c(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.004446d8();\n    return 0;\n}\n",
        "token_count": 63
    },
    "00448dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00448dd0(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t *puVar2;\n    \n    if (-1 < *(arg_8h + 8)) {\n        iVar1 = *(arg_8h + 8) + 1;\n        puVar2 = *(arg_8h + 0xc);\n        do {\n            if (*(in_EAX + 0x3f) == *puVar2) {\n                fcn.00448d30(arg_8h);\n                return 0;\n            }\n            puVar2 = puVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 175
    },
    "00448e8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00448e8c(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    \n    if (-1 < *(arg_8h + -4)) {\n        iVar3 = *(arg_8h + -4) + 1;\n        puVar2 = *(arg_8h + -8);\n        do {\n            if (*(in_EAX + 0x3f) == *puVar2) {\n                piVar1 = *(arg_8h + 0xc) + *(in_EAX + 0x3f) * 4;\n                *piVar1 = *piVar1 + 1;\n                fcn.00444c9c();\n            }\n            puVar2 = puVar2 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 221
    },
    "00448ed8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448ed8(int32_t arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00448810();\n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        do {\n            *arg_ch = 0;\n            arg_ch = arg_ch + 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    fcn.004446d8();\n    return;\n}\n",
        "token_count": 146
    },
    "00449508": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00449508(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.00447e84();\n    in_EAX[0x16] = -1;\n    in_EAX[0x17] = -1;\n    iVar1 = in_EAX[0xd];\n    *(iVar1 + 0x8c) = in_EAX;\n    *(iVar1 + 0x88) = *(*in_EAX + 0x3c);\n    in_EAX[0xe] = *(**0x46fa30 + 0x30);\n    *(in_EAX + 0x61) = 1;\n    fcn.004494c4();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 264
    },
    "0044c308": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044c308(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *0x464c68;\n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    *0x464c68 = 0;\n    uStack36 = 0x44c3ab;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    uStack48 = 0x44c374;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    uVar2 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0044c2b8, 0);\n    sub.user32.dll_EnumThreadWindows();\n    *in_FS_OFFSET = uVar2;\n    *in_FS_OFFSET = uStack52;\n    *0x464c68 = uVar1;\n    return;\n}\n",
        "token_count": 274
    },
    "0044c4d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044c4d4(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint uStack8;\n    uchar uStack4;\n    \n    uStack8 = sub.user32.dll_GetActiveWindow();\n    uStack4 = 0;\n    pcVar3 = fcn.0044c4b4;\n    uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0044c4b4, &uStack8);\n    uVar2 = sub.user32.dll_EnumThreadWindows(uVar1);\n    return CONCAT44(pcVar3, uVar2 & 0xffffff00 | pcVar3 & 0xff);\n}\n",
        "token_count": 156
    },
    "0044c6f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0044c6f4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x44c765;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    iVar1 = fcn.0044c6cc();\n    if (iVar1 == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.00405d0c();\n        fcn.0040b5a0(in_stack_ffffffd4, arg_ch);\n        fcn.004039c4();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x44c76c;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 297
    },
    "0044c774": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044c774(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040355c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00403220();\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 0x18) = arg_8h;\n    *(in_EAX + 10) = 0x50;\n    *(in_EAX + 8) = 8;\n    *(in_EAX + 0x1c) = 1;\n    *(in_EAX + 0x20) = 10;\n    *(in_EAX + 0x40) = 4;\n    *(in_EAX + 0x3c) = 0xc;\n    *(in_EAX + 0x28) = 0xff000014;\n    *(in_EAX + 0x2c) = 1;\n    *(in_EAX + 0x44) = 1;\n    if (in_DL != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 326
    },
    "0044d2f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044d2f8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.0043714c();\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x44d36c;\n    uVar1 = fcn.0044c774(0);\n    *(in_EAX + 0x208) = uVar1;\n    uVar2 = 1;\n    uVar1 = fcn.0044c774(1);\n    *(in_EAX + 0x20c) = uVar1;\n    *(in_EAX + 0x210) = 1;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 260
    },
    "0044d6e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d6e4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_stack_ffffffd0;\n    int32_t iVar6;\n    int32_t in_stack_ffffffd4;\n    int32_t iVar7;\n    int32_t in_stack_ffffffd8;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    int32_t iStack28;\n    \n    if (param_2 != NULL) {\n        (**(*param_2 + 0x44))();\n        uVar1 = *(*(in_EAX + 0x208) + 0x1a);\n        uVar2 = *(*(in_EAX + 0x20c) + 0x1a);\n        fcn.0043476c(in_stack_ffffffd0 - uVar1, in_stack_ffffffd4 - uVar2, in_stack_ffffffd8 + uVar1, \n                     in_stack_ffffffdc + uVar2);\n        fcn.00434798();\n        iVar5 = iStack32;\n        iVar7 = iStack28;\n        fcn.0043476c();\n        fcn.00434798();\n        if (iVar5 < 0) {\n            fcn.0044cf5c();\n        }\n        else {\n            iVar6 = iVar5;\n            iVar3 = fcn.00434658();\n            if (iVar3 < iStack32) {\n                iVar3 = iStack32;\n                iVar4 = fcn.00434658();\n                if (iVar4 < iStack32 - iVar5) {\n                    iVar3 = fcn.00434658();\n                    iVar3 = iVar3 + iVar6;\n                }\n                fcn.00434658(iVar6, iVar7, iVar3);\n                fcn.0044cf5c();\n            }\n        }\n        if (iVar7 < 0) {\n            fcn.0044cf5c();\n        }\n        else {\n            iVar5 = fcn.0043469c();\n            if (iVar5 < iStack28) {\n                iVar5 = fcn.0043469c();\n                if (iVar5 < iStack28 - iVar7) {\n                    fcn.0043469c();\n                }\n                fcn.0043469c();\n                fcn.0044cf5c();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 565
    },
    "0044da98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044da98(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = *(param_2 + 4);\n    uStack24 = 0x44daf9;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    var_8h = param_2;\n    cVar1 = fcn.004033dc();\n    if (cVar1 == '\\0') {\n        *(var_8h + 4) = 1;\n    }\n    fcn.0043a79c();\n    *in_FS_OFFSET = uStack28;\n    *(var_8h + 4) = var_ch;\n    return;\n}\n",
        "token_count": 221
    },
    "0044dc20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044dc20(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffea4;\n    uint *arg_ch;\n    uint uStack340;\n    uint uStack336;\n    uchar *puStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uchar *puStack316;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10h;\n    uint var_ch;\n    int32_t *var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack304 = 0x44dc3e;\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    uStack308 = 0x44dd84;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec8;\n    puStack316 = 0x44dc60;\n    puStack304 = &stack0xfffffffc;\n    var_5h._0_1_ = param_2;\n    unique0x100000eb = in_EAX;\n    (**(***0x46fbec + 0x14))();\n    uStack320 = 0x44dd64;\n    uStack324 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffebc;\n    uStack328 = 0;\n    puStack332 = 0x44dc7f;\n    puStack316 = &stack0xfffffffc;\n    (**(*stack0xfffffff8 + 0xe0))();\n    puStack332 = 0x44dc87;\n    iVar2 = fcn.00403198();\n    if ((iVar2 != *0x44b094) && ((*(stack0xfffffff8 + 7) & 0x10) == 0)) {\n        *(stack0xfffffff8 + 0xbd) = *(stack0xfffffff8 + 0xbd) | 1;\n        uStack336 = 0x44dd2c;\n        uStack340 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffeac;\n        puStack332 = &stack0xfffffffc;\n        cVar1 = fcn.00416c84();\n        if (cVar1 == '\\0') {\n            fcn.004031a0();\n            var_10h = &fcn.0044dc20::var_110h;\n            var_ch._0_1_ = 4;\n            arg_ch = &fcn.0044dc20::var_10h;\n            in_stack_fffffea4 = 0;\n            fcn.00405d0c();\n            fcn.0040b5a0(in_stack_fffffea4, arg_ch);\n            fcn.004039c4();\n        }\n        *in_FS_OFFSET = in_stack_fffffea4;\n        *(stack0xfffffff8 + 0xbd) = *(stack0xfffffff8 + 0xbd) & 0xfe;\n        return;\n    }\n    *in_FS_OFFSET = uStack328;\n    uStack320 = 0x44dd6b;\n    uStack324 = 0x44dd63;\n    (**(***0x46fbec + 0x18))();\n    return;\n}\n",
        "token_count": 783
    },
    "0044e8b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044e8b0(code *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.0043b980(arg_8h, arg_ch);\n    if ((in_EAX == in_EDX) && (var_8h = fcn.0041cea0(),  -1 < var_8h + -1)) {\n        do {\n            fcn.0041ce74();\n            cVar1 = fcn.0040344c();\n            if (cVar1 == '\\0') {\n                (*arg_8h)();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00451578": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451578(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    \n    uVar1 = (*in_EAX + in_ECX) - in_EDX;\n    uVar2 = uVar1 >> 0x1f;\n    if ((uVar1 ^ uVar2) - uVar2 < *(*(arg_8h + -4) + 0x2e4)) {\n        *in_EAX = in_EDX - in_ECX;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00451ed8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00451ed8(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x451f44;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    cVar1 = (**(*in_EAX + 0xe4))();\n    if (cVar1 != '\\0') {\n        fcn.0040344c();\n        if ((cVar1 != '\\0') == true) {\n            fcn.0045200c();\n        }\n    }\n    else {\n        in_EAX[0x93] = 0;\n    }\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 201
    },
    "00452a78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452a78(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = fcn.00439ebc();\n    *arg_8h = iVar1 == 0;\n    return;\n}\n",
        "token_count": 66
    },
    "00452ce4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00452ce4(void)\n\n{\n    uint uStack20;\n    \n    fcn.00452d4c();\n    return uStack20;\n}\n",
        "token_count": 36
    },
    "00452cfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00452cfc(void)\n\n{\n    int32_t iStack16;\n    int32_t iStack8;\n    \n    fcn.00452d4c();\n    return iStack8 - iStack16;\n}\n",
        "token_count": 52
    },
    "00452d18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00452d18(void)\n\n{\n    uint uStack16;\n    \n    fcn.00452d4c();\n    return uStack16;\n}\n",
        "token_count": 36
    },
    "00452d30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00452d30(void)\n\n{\n    int32_t iStack20;\n    int32_t iStack12;\n    \n    fcn.00452d4c();\n    return iStack12 - iStack20;\n}\n",
        "token_count": 52
    },
    "00452d4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452d4c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    \n    uStack52 = 0x28;\n    (***0x46f848)(*(in_EAX + 4));\n    *param_2 = &uStack52;\n    *(param_2 + 4) = uStack52;\n    *(param_2 + 8) = uStack48;\n    *(param_2 + 0xc) = uStack44;\n    return;\n}\n",
        "token_count": 137
    },
    "00452d7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452d7c(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint auStack52 [3];\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    auStack52[0] = 0x28;\n    (***0x46f848)(*(in_EAX + 4), auStack52);\n    *param_2 = uStack40;\n    param_2[1] = uStack36;\n    param_2[2] = uStack32;\n    param_2[3] = uStack28;\n    return;\n}\n",
        "token_count": 149
    },
    "004534f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004534f8(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint auStack24 [2];\n    \n    puVar5 = auStack24;\n    if (param_2 != *(in_EAX + 0x44)) {\n        *(in_EAX + 0x44) = param_2;\n        if (param_2 == 0) {\n            sub.user32.dll_GetCursorPos(auStack24);\n            iVar1 = sub.user32.dll_WindowFromPoint(puVar5, auStack24[0]);\n            if (iVar1 != 0) {\n                iVar2 = sub.user32.dll_GetWindowThreadProcessId(iVar1, 0);\n                iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n                if (iVar2 == iVar3) {\n                    uVar4 = fcn.00406b3c();\n                    sub.user32.dll_SendMessageA(iVar1, 0x84, 0, uVar4);\n                    uVar4 = fcn.00406ac4();\n                    sub.user32.dll_SendMessageA(iVar1, 0x20, iVar1, uVar4);\n                    return;\n                }\n            }\n        }\n        uVar4 = fcn.004534d0();\n        sub.user32.dll_SetCursor(uVar4);\n    }\n    *(in_EAX + 0x48) = *(in_EAX + 0x48) + 1;\n    return;\n}\n",
        "token_count": 358
    },
    "0045370c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __fastcall fcn.0045370c(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint var_1h;\n    \n    uVar1 = 0;\n    if (param_1 == '\\x01') {\n        uVar1 = *(in_EAX + 0x44) < *(param_2 + 0x44);\n    }\n    else if (param_1 == '\\x02') {\n        uVar1 = *(param_2 + 0x44) + *(param_2 + 0x4c);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 < *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n    }\n    else if (param_1 == '\\x03') {\n        uVar1 = *(in_EAX + 0x40) < *(param_2 + 0x40);\n    }\n    else if (param_1 == '\\x04') {\n        uVar1 = *(param_2 + 0x40) + *(param_2 + 0x48);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 < *(in_EAX + 0x40) + *(in_EAX + 0x48);\n    }\n    return uVar1;\n}\n",
        "token_count": 324
    },
    "00453ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00453ac0(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack28 = 0x453ad5;\n    cVar1 = fcn.00453a68(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        fcn.00403220();\n        uStack28 = 0x453b3a;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        fcn.0045391c(&stack0xfffffffc);\n        fcn.0045391c(&stack0xfffffffc);\n        fcn.0045391c(&stack0xfffffffc);\n        fcn.0045391c(&stack0xfffffffc);\n        fcn.0045391c(&stack0xfffffffc);\n        *in_FS_OFFSET = uStack32;\n        uStack28 = 0x453b39;\n        fcn.00403250();\n        return;\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "004546cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004546cc(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint lpPaint;\n    \n    uVar1 = sub.user32.dll_BeginPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    uVar2 = fcn.00454e1c();\n    sub.user32.dll_DrawIcon(uVar1, 0, 0, uVar2);\n    sub.user32.dll_EndPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    return;\n}\n",
        "token_count": 134
    },
    "004550e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004550e4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    if ((0xff < param_2[1]) && (param_2[1] < 0x109)) {\n        iVar1 = sub.user32.dll_GetCapture();\n        if (iVar1 == 0) {\n            iVar1 = *param_2;\n            if ((*(in_EAX + 0x44) == 0) || (iVar1 != *(*(in_EAX + 0x44) + 0x254))) {\n                while( true ) {\n                    iVar2 = fcn.00431ae0();\n                    if ((iVar2 != 0) || (iVar1 == 0)) break;\n                    iVar1 = sub.user32.dll_GetParent();\n                }\n                if (iVar1 == 0) {\n                    iVar1 = *param_2;\n                }\n            }\n            else {\n                iVar1 = fcn.0043b420();\n            }\n            iVar1 = sub.user32.dll_SendMessageA(iVar1, param_2[1] + 0xbc00, param_2[2], param_2[3]);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        else {\n            iVar2 = sub.user32.dll_GetWindowLongA(iVar1, 0xfffffffa);\n            if (iVar2 == *0x470668) {\n                iVar1 = sub.user32.dll_SendMessageA(iVar1, param_2[1] + 0xbc00, param_2[2], param_2[3]);\n                if (iVar1 != 0) {\n                    uVar3 = 1;\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 419
    },
    "004552d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004552d4(void)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.0045523c();\n    if (cVar1 == '\\0') {\n        fcn.00455ba4();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "004555f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004555f8(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint uStack128;\n    int32_t iStack124;\n    uint *puStack120;\n    uint uStack116;\n    uint uStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t lpRect;\n    uint *var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t hWnd;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iStack104 = 0x455610;\n    var_4h = in_EAX;\n    iStack108 = sub.user32.dll_GetActiveWindow();\n    iStack104 = 2;\n    uStack112 = 0x455622;\n    hWnd = iStack108;\n    var_14h = (***0x46f924)();\n    uStack112 = 2;\n    uStack116 = *(var_4h + 0x30);\n    puStack120 = 0x455637;\n    var_18h = (***0x46f924)();\n    if (var_14h != var_18h) {\n        var_44h = 0x28;\n        puStack120 = &fcn.004555f8::var_44h;\n        iStack124 = var_14h;\n        uStack128 = 0x45565a;\n        (***0x46f848)();\n        var_50h = &fcn.004555f8::lpRect;\n        lpRect = *(var_4h + 0x30);\n        sub.user32.dll_GetWindowRect();\n        iStack104 = var_34h - var_3ch >> 1;\n        if (iStack104 < 0) {\n            iStack104 = iStack104 + ((var_34h - var_3ch & 1U) != 0);\n        }\n        iStack104 = iStack104 + var_3ch;\n        iStack108 = var_38h - var_40h >> 1;\n        if (iStack108 < 0) {\n            iStack108 = iStack108 + ((var_38h - var_40h & 1U) != 0);\n        }\n        iStack108 = iStack108 + var_40h;\n        uStack112 = 0;\n        uStack116 = *(var_4h + 0x30);\n        puStack120 = 0x4556a2;\n        sub.user32.dll_SetWindowPos();\n    }\n    puStack120 = 0x4556a9;\n    var_10h = fcn.0044c308();\n    puStack120 = 0x4556b1;\n    var_1ch = fcn.0044c224();\n    puStack120 = 0x4556bc;\n    cVar1 = fcn.0045459c();\n    if (cVar1 != '\\0') {\n        arg_8h = arg_8h | 0x100000;\n    }\n    iStack124 = 0x45574d;\n    uStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    uVar4 = *(var_4h + 0x30);\n    puStack120 = &stack0xfffffffc;\n    var_8h = sub.user32.dll_MessageBoxA_1();\n    *in_FS_OFFSET = uVar4;\n    if (var_14h != var_18h) {\n        iVar2 = var_48h - var_50h >> 1;\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + ((var_48h - var_50h & 1U) != 0);\n        }\n        iVar3 = var_4ch - lpRect >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((var_4ch - lpRect & 1U) != 0);\n        }\n        sub.user32.dll_SetWindowPos(*(var_4h + 0x30), 0, iVar3 + lpRect, iVar2 + var_50h, 0, 0, 0x1d, 0x455754, arg_8h);\n    }\n    fcn.0044c3bc();\n    sub.user32.dll_SetActiveWindow(hWnd);\n    fcn.0044c22c();\n    return;\n}\n",
        "token_count": 1084
    },
    "00456080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00456080(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack12 [8];\n    \n    fcn.00455f48();\n    if (*(in_EAX + 0x89) == '\\0') {\n        sub.user32.dll_GetCursorPos(auStack12);\n        fcn.00456394();\n    }\n    else if (*(in_EAX + 0x89) == '\\x01') {\n        fcn.004560b8();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "004571f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004571f0(uint arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00457184();\n    fcn.0043ae0c(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 66
    },
    "00457598": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457598(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 != 0) {\n        fcn.0042c314();\n        return;\n    }\n    uVar1 = sub.user32.dll_LoadBitmapA(*0x470668, 0x4575e8);\n    fcn.0042c308(uVar1);\n    fcn.0042402c();\n    fcn.0042c338();\n    (**(**(in_EAX + 0x20c) + 0x7c))();\n    return;\n}\n",
        "token_count": 145
    },
    "00457a08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457a08(void)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    fcn.00403fdc();\n    puVar1 = fcn.00408474();\n    while( true ) {\n        iVar2 = fcn.00404248();\n        if ((iVar2 < 1) || ((0x20 < *puVar1 && (*puVar1 != 0x2e)))) break;\n        fcn.00404448();\n        fcn.004045d4();\n        puVar1 = fcn.00408474();\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00457b28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457b28(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x457b3c;\n        fcn.0040355c();\n    }\n    uStack44 = 0x457b9a;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00457a08();\n    fcn.00457a58(arg_8h, arg_14h);\n    fcn.00403fdc();\n    fcn.00403fdc();\n    *in_FS_OFFSET = arg_8h;\n    uStack48 = 0x457ba1;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 233
    },
    "0045813c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045813c(int32_t arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = *(arg_8h + -4);\n    var_4h._0_1_ = 6;\n    fcn.0040b65c(0, &var_8h);\n    fcn.004039c4();\n    return;\n}\n",
        "token_count": 105
    },
    "0045bbd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045bbd8(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(arg_8h + 0xc) + 0x248) != 0) {\n        fcn.00448ed8(5, arg_10h, 2);\n    }\n    return 0;\n}\n",
        "token_count": 102
    },
    "0045bc80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045bc80(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004041b0();\n    return 0;\n}\n",
        "token_count": 37
    },
    "004596a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004596a4(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    uVar1 = sub.gdi32.dll_CreateBitmap(8, 8, 1, 1, 0x464da0);\n    sub.gdi32.dll_CreatePatternBrush(uVar1);\n    sub.gdi32.dll_SelectObject();\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    sub.gdi32.dll_PatBlt();\n    sub.gdi32.dll_SetBkColor();\n    sub.gdi32.dll_SetTextColor();\n    uVar2 = sub.gdi32.dll_SelectObject();\n    sub.gdi32.dll_DeleteObject(uVar2);\n    sub.gdi32.dll_DeleteObject(uVar1);\n    return;\n}\n",
        "token_count": 170
    },
    "0045b1d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b1d0(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    if (param_2 != *(in_EAX + 0x97)) {\n        *(in_EAX + 0x97) = param_2;\n        uStack24 = 0;\n        uStack28 = 0;\n        uStack32 = 0x45b1ef;\n        uStack32 = fcn.0043b420();\n        iVar1 = sub.user32.dll_GetUpdateRect();\n        if (iVar1 == 0) {\n            (**(*in_EAX + 0x44))();\n            iVar1 = fcn.0045a32c();\n            iVar1 = fcn.0045a32c(-iVar1);\n            sub.user32.dll_InflateRect(&stack0xffffffe0, -iVar1);\n            fcn.00420450();\n        }\n        else {\n            (**(*in_EAX + 0x7c))();\n        }\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "0045bce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045bce0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00403220();\n    *(in_EAX + 0xc) = param_1;\n    uVar1 = fcn.00403220();\n    *(in_EAX + 0x10) = uVar1;\n    uVar1 = fcn.00403220();\n    *(in_EAX + 0x20) = uVar1;\n    fcn.00405860();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 237
    },
    "0045c9fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045c9fc(void)\n\n{\n    uchar *puVar1;\n    char in_AL;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *in_stack_ffffffcc;\n    int32_t iStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack40 = 0x45caee;\n    iStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack44;\n    puVar1 = &stack0xfffffffc;\n    if (in_AL == '\\0') {\n        iVar2 = sub.user32.dll_DdeGetLastError(*(*0x470c3c + 0x44));\n        if (iVar2 - 0x4007U < 2) {\n            in_stack_ffffffcc = &var_4h;\n            fcn.00405d0c();\n            fcn.00408ca4(in_stack_ffffffcc);\n        }\n        else if (iVar2 - 0x4007U == 3) {\n            in_stack_ffffffcc = &var_4h;\n            fcn.00405d0c();\n            fcn.00408ca4(in_stack_ffffffcc);\n        }\n        else {\n            in_stack_ffffffcc = &var_4h;\n            fcn.00405d0c();\n            fcn.00408ca4(in_stack_ffffffcc);\n        }\n        fcn.0040b564();\n        fcn.004039c4();\n        puVar1 = puStack36;\n    }\n    puStack36 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    iStack44 = 0x45caf5;\n    fcn.00403fac();\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 449
    },
    "0045cd0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045cd0c(uint param_1, char param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar3;\n    int32_t iStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_4h;\n    \n    if (param_2 != '\\0') {\n        puStack36 = 0x45cd1f;\n        in_EAX = fcn.0040355c();\n    }\n    uStack40 = 0x45cdc0;\n    iStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0041c87c();\n    uVar1 = sub.user32.dll_RegisterClipboardFormatA(0x45cde4);\n    *(in_EAX + 0x48) = uVar1;\n    *(in_EAX + 0x44) = 0;\n    iVar3 = in_EAX + 0x44;\n    sub.user32.dll_DdeInitializeA(iVar3, fcn.0045cafc, 0, 0);\n    fcn.0045c9fc();\n    uVar2 = fcn.00403220();\n    *(in_EAX + 0x38) = uVar2;\n    uVar2 = fcn.00403220();\n    *(in_EAX + 0x3c) = uVar2;\n    uVar2 = fcn.00403220();\n    *(in_EAX + 0x40) = uVar2;\n    fcn.004029f4();\n    fcn.0045d0e8();\n    *in_FS_OFFSET = iVar3;\n    fcn.00403f88(0x45cdc7);\n    return;\n}\n",
        "token_count": 418
    },
    "0045cea4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045cea4(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack4132;\n    uint uStack4128;\n    uchar *puStack4124;\n    uint var_1008h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4124 = &stack0xfffffffc;\n    uStack4128 = 0x45cf48;\n    iStack4132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack4132;\n    puVar1 = &stack0xfffffffc;\n    if ((param_2 == 0) ||\n       (iVar2 = sub.user32.dll_DdeCmpStringHandles(param_2, *(in_EAX + 0x34)),  puVar1 = puStack4124,  iVar2 == 0)) {\n        puStack4124 = puVar1;\n        param_2 = *(in_EAX + 0x44);\n        sub.user32.dll_DdeQueryStringA();\n        fcn.00404078();\n        iVar2 = fcn.0045d1c8();\n        if (iVar2 == 0) {\n            fcn.0045d218();\n        }\n    }\n    *in_FS_OFFSET = param_2;\n    iStack4132 = 0x45cf4f;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 336
    },
    "0045d1c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045d1c8(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uStack20;\n    \n    uStack20 = 0;\n    iVar3 = *(*(in_EAX + 0x40) + 8);\n    uVar1 = uStack20;\n    if (-1 < iVar3 + -1) {\n        do {\n            uVar1 = fcn.00416ec4(param_2);\n            iVar2 = fcn.00407e64();\n            if (iVar2 == 0) break;\n            iVar3 = iVar3 + -1;\n            uVar1 = uStack20;\n        } while (iVar3 != 0);\n    }\n    uStack20 = uVar1;\n    return CONCAT44(uStack20, uStack20);\n}\n",
        "token_count": 202
    },
    "0045d218": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045d218(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x45d29a;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar1 = fcn.00453058();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00453044();\n            fcn.00434c44();\n            iVar2 = fcn.00407e64();\n            if (iVar2 == 0) break;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x45d2a1;\n    uStack36 = 0x45d299;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 256
    },
    "0045d2ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045d2ac(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uStack20;\n    \n    uStack20 = 0;\n    iVar3 = *(*(in_EAX + 0x38) + 8);\n    uVar1 = uStack20;\n    if (-1 < iVar3 + -1) {\n        do {\n            uVar1 = fcn.00416ec4(param_2);\n            iVar2 = fcn.00407e64();\n            if (iVar2 == 0) break;\n            iVar3 = iVar3 + -1;\n            uVar1 = uStack20;\n        } while (iVar3 != 0);\n    }\n    uStack20 = uVar1;\n    return CONCAT44(uStack20, uStack20);\n}\n",
        "token_count": 201
    },
    "0045d780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045d780(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iStack20;\n    \n    iStack20 = 0;\n    uVar2 = 0;\n    while ((iVar1 = iStack20,  (uVar2 & 0xffff) < *(*(in_EAX + 0x9c) + 8) &&\n           (iVar1 = fcn.00416ec4(),  *(iVar1 + 0x10) != param_2))) {\n        uVar2 = uVar2 + 1;\n    }\n    iStack20 = iVar1;\n    return CONCAT44(iStack20, iStack20);\n}\n",
        "token_count": 174
    },
    "0045dacc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0045dacc(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint auStack52 [3];\n    uint uStack40;\n    \n    fcn.00402c5c();\n    auStack52[0] = 0x24;\n    uStack40 = 0x3ec;\n    uVar1 = sub.user32.dll_DdeConnect(*(*0x470c3c + 0x44), param_2, param_1, auStack52);\n    *(in_EAX + 0x38) = uVar1;\n    if (uVar1 != 0) {\n        *(in_EAX + 0x3c) = 0x60;\n        sub.user32.dll_DdeQueryConvInfo(*(in_EAX + 0x38), 0xffffffff, in_EAX + 0x3c);\n        sub.user32.dll_DdeSetUserHandle(*(in_EAX + 0x38), 0xffffffff);\n    }\n    return uVar1 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 251
    },
    "0045df9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045df9c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00403220();\n    *(in_EAX + 8) = 0;\n    *(in_EAX + 0xc) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 180
    },
    "0045e738": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045e738(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    fcn.0041c87c();\n    uVar1 = fcn.00403220();\n    *(in_EAX + 0x44) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 170
    },
    "0045ec20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045ec20(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    uint uStack20;\n    \n    uStack20 = 0;\n    iVar2 = *(*(in_EAX + 0x44) + 8);\n    uVar1 = uStack20;\n    if (-1 < iVar2 + -1) {\n        uVar3 = true;\n        do {\n            uVar1 = fcn.00416ec4(param_2);\n            fcn.00404394();\n            if (uVar3) break;\n            iVar2 = iVar2 + -1;\n            uVar3 = iVar2 == 0;\n            uVar1 = uStack20;\n        } while (!uVar3);\n    }\n    uStack20 = uVar1;\n    return CONCAT44(uStack20, uStack20);\n}\n",
        "token_count": 209
    },
    "0045ec70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045ec70(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x44) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00416ec4(param_2);\n            param_2 = *(iVar1 + 0x38);\n            iVar1 = sub.user32.dll_DdeCmpStringHandles();\n            if (iVar1 == 0) {\n                return 0;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 168
    },
    "0045ecc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045ecc4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.0040355c();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x30) = param_1;\n    fcn.0041c87c();\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 169
    },
    "0045f03c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045f03c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.0040355c();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.0040b564();\n    *(in_EAX + 0xc) = in_ECX;\n    if (in_DL != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 172
    },
    "0045f2ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0045f2ec(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffbc;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack48 = 0x45f304;\n        in_EAX = fcn.0040355c();\n        in_ECX = extraout_ECX;\n    }\n    uStack52 = 0x45f38c;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &fcn.0045f2ec::var_1h + 1;\n    fcn.00403fdc();\n    *(in_EAX + 0xc) = arg_8h;\n    if (arg_8h == 0) {\n        fcn.0040b564();\n    }\n    else {\n        fcn.0040ad50();\n        fcn.00403fdc();\n        in_stack_ffffffbc = *(in_EAX + 0x10);\n        fcn.00404308(in_stack_ffffffbc, 0x45f3c0, in_ECX);\n        fcn.0040b564();\n    }\n    *in_FS_OFFSET = in_stack_ffffffbc;\n    fcn.00403fac(0x45f393);\n    return;\n}\n",
        "token_count": 373
    },
    "00460224": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460224(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    *0x464db4 = 0;\n    iVar2 = 0x70;\n    puVar1 = 0x464db8;\n    do {\n        *puVar1[1] = *puVar1;\n        puVar1 = puVar1 + 3;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 111
    },
    "00460664": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00460664(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    \n    if (in_EDX == -1) {\n        iVar1 = (**(*in_EAX + 0x6c))();\n        in_EAX[1] = iVar1;\n        if (-1 < arg_8h) {\n            arg_8h = arg_8h + 1;\n            do {\n                if (in_EAX[1] == *in_ECX) {\n                    return 1;\n                }\n                in_ECX = in_ECX + 1;\n                arg_8h = arg_8h + -1;\n            } while (arg_8h != 0);\n        }\n        fcn.004606ac();\n    }\n    return 0;\n}\n",
        "token_count": 199
    },
    "0046070c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046070c(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        fcn.0040355c();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.004035b4();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0046072c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046072c(uint param_1, uint param_2)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack44 = 0x460b26;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.00403f88();\n    // switch table (63 cases) at 0x46076c\n    switch(param_2) {\n    case 0x2714:\n        fcn.00405d0c();\n        break;\n    case 0x2719:\n        fcn.00405d0c();\n        break;\n    case 0x271d:\n        fcn.00405d0c();\n        break;\n    case 0x271e:\n        fcn.00405d0c();\n        break;\n    case 0x2726:\n        fcn.00405d0c();\n        break;\n    case 0x2728:\n        fcn.00405d0c();\n        break;\n    case 0x2733:\n        fcn.00405d0c();\n        break;\n    case 0x2734:\n        fcn.00405d0c();\n        break;\n    case 0x2735:\n        fcn.00405d0c();\n        break;\n    case 0x2736:\n        fcn.00405d0c();\n        break;\n    case 0x2737:\n        fcn.00405d0c();\n        break;\n    case 0x2738:\n        fcn.00405d0c();\n        break;\n    case 0x2739:\n        fcn.00405d0c();\n        break;\n    case 0x273a:\n        fcn.00405d0c();\n        break;\n    case 0x273b:\n        fcn.00405d0c();\n        break;\n    case 0x273c:\n        fcn.00405d0c();\n        break;\n    case 0x273d:\n        fcn.00405d0c();\n        break;\n    case 0x273e:\n        fcn.00405d0c();\n        break;\n    case 0x273f:\n        fcn.00405d0c();\n        break;\n    case 0x2740:\n        fcn.00405d0c();\n        break;\n    case 0x2741:\n        fcn.00405d0c();\n        break;\n    case 0x2742:\n        fcn.00405d0c();\n        break;\n    case 0x2743:\n        fcn.00405d0c();\n        break;\n    case 0x2744:\n        fcn.00405d0c();\n        break;\n    case 0x2745:\n        fcn.00405d0c();\n        break;\n    case 0x2746:\n        fcn.00405d0c();\n        break;\n    case 0x2747:\n        fcn.00405d0c();\n        break;\n    case 0x2748:\n        fcn.00405d0c();\n        break;\n    case 0x2749:\n        fcn.00405d0c();\n        break;\n    case 0x274a:\n        fcn.00405d0c();\n        break;\n    case 0x274b:\n        fcn.00405d0c();\n        break;\n    case 0x274c:\n        fcn.00405d0c();\n        break;\n    case 0x274d:\n        fcn.00405d0c();\n        break;\n    case 0x274e:\n        fcn.00405d0c();\n        break;\n    case 0x274f:\n        fcn.00405d0c();\n        break;\n    case 0x2750:\n        fcn.00405d0c();\n        break;\n    case 0x2751:\n        fcn.00405d0c();\n        break;\n    case 0x2752:\n        fcn.00405d0c();\n    }\n    arg_8h = &fcn.0046072c::var_4h;\n    fcn.00405d0c();\n    fcn.00408ca4(arg_8h);\n    fcn.00403fdc();\n    *in_FS_OFFSET = arg_8h;\n    uStack44 = 0x460b2d;\n    iStack48 = 0x460b25;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 1083
    },
    "00460b64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460b64(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x460b78;\n    fcn.00404438();\n    uStack24 = 0x460bac;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*in_EAX + 0x80))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x460bb3;\n    uStack24 = 0x460bab;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 186
    },
    "00460ee4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00460ee4(uint32_t *arg_8h)\n\n{\n    int32_t *in_EAX;\n    ushort extraout_var;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint *puVar2;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x460f63;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_8h = 0x10;\n    puVar2 = &var_8h;\n    (***0x46f774)();\n    (**(*in_EAX + 0x7c))();\n    fcn.00403fdc();\n    uVar1 = (***0x46f880)();\n    *arg_8h = uVar1 & 0xffff;\n    *in_FS_OFFSET = CONCAT22(extraout_var, var_18h._2_2_);\n    fcn.00403f88(0x460f6a, puVar2);\n    return;\n}\n",
        "token_count": 293
    },
    "00460f74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460f74(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_4h;\n    \n    iVar1 = fcn.00404248();\n    if (iVar1 == 0) {\n        var_10h = 0;\n    }\n    else {\n        var_10h = fcn.00460b64();\n    }\n    (***0x46f87c)(var_10h & 0xffff0000 | arg_8h & 0xffff);\n    (***0x46f840)();\n    return;\n}\n",
        "token_count": 156
    },
    "00460fec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460fec(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    uVar1 = fcn.00460b64();\n    (***0x46f87c)(uVar1 & 0xffff0000 | arg_8h & 0xffff);\n    (***0x46f6d8)();\n    return;\n}\n",
        "token_count": 108
    },
    "0046114c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046114c(uint32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *in_EAX;\n    ushort extraout_var;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint *puVar2;\n    uint *puVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x4611d7;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_8h = 0x10;\n    puVar3 = &var_8h;\n    puVar2 = &var_18h;\n    (***0x46f968)();\n    (**(*in_EAX + 0x7c))();\n    fcn.00403fdc();\n    uVar1 = (***0x46f880)();\n    *arg_8h = uVar1 & 0xffff;\n    *in_FS_OFFSET = CONCAT22(extraout_var, var_18h._2_2_);\n    fcn.00403f88(0x4611de, arg_14h, arg_10h, puVar2, puVar3);\n    return;\n}\n",
        "token_count": 331
    },
    "004611e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004611e8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != NULL) {\n        (**(*in_EAX + 8))();\n        fcn.00417028();\n        iVar1 = *param_2;\n        if (-1 < iVar1 + -1) {\n            do {\n                fcn.00416d68();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "00461224": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461224(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x4612b9;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (in_EAX != 0) {\n        puVar2 = &stack0xfffffffc;\n        if (0x40 < *(in_EAX + 8)) {\n            fcn.00405d0c();\n            fcn.0040b564();\n            fcn.004039c4();\n            puVar2 = puStack32;\n        }\n        puStack32 = puVar2;\n        iVar4 = *(in_EAX + 8);\n        puVar1 = param_2;\n        if (-1 < iVar4 + -1) {\n            do {\n                uVar3 = fcn.00416ec4();\n                puVar1[1] = uVar3;\n                iVar4 = iVar4 + -1;\n                puVar1 = puVar1 + 1;\n            } while (iVar4 != 0);\n        }\n        *param_2 = *(in_EAX + 8);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4612c0;\n    uStack36 = 0x4612b8;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 396
    },
    "004612c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004612c8(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_314h;\n    uint var_210h;\n    uint var_10ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00402c5c();\n    fcn.00402c5c();\n    fcn.00402c5c();\n    fcn.00461224();\n    fcn.00461224();\n    fcn.00461224();\n    if (arg_8h == -2) {\n        uVar1 = (***0x46fc14)(0, &var_10ch, &var_210h, &var_314h, 0);\n    }\n    else {\n        var_8h = arg_8h / 1000;\n        var_4h = (arg_8h % 1000) * 1000;\n        uVar1 = (***0x46fc14)(0, &var_10ch, &var_210h, &var_314h, &var_8h);\n    }\n    fcn.004611e8();\n    fcn.004611e8();\n    fcn.004611e8();\n    return uVar1;\n}\n",
        "token_count": 288
    },
    "004613fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004613fc(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    fcn.00402c5c();\n    uVar1 = fcn.00460b64();\n    (***0x46f87c)(uVar1 & 0xffff0000 | arg_8h & 0xffff);\n    (***0x46f834)();\n    return;\n}\n",
        "token_count": 128
    },
    "004614e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004614e8(void)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x4615b5;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uStack48 = 0;\n    uStack52 = 0x461511;\n    uStack52 = fcn.00404448();\n    puStack56 = 0x46151b;\n    uVar1 = (***0x46f7b0)();\n    if (uVar1 == 0) {\n        uStack60 = 0x461558;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        fcn.00408110();\n        *in_FS_OFFSET = uStack64;\n    }\n    else {\n        puStack56 = uVar1 & 0xffff0000 | *(uVar1 + 8);\n        uStack60 = 0x46152f;\n        (***0x46f880)();\n    }\n    *in_FS_OFFSET = uStack52;\n    uStack44 = 0x4615bc;\n    uStack48 = 0x4615b4;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 370
    },
    "004617d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "get file size"
        ],
        "decompiled_code": "\nvoid fcn.004617d4(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x4617e8;\n    fcn.00404438();\n    uStack28 = 0x46188a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    uStack36 = 0;\n    uStack40 = 0x8000080;\n    uStack44 = 3;\n    uStack48 = 0;\n    uStack52 = 1;\n    uStack56 = 0x80000000;\n    uStack60 = 0x461815;\n    puStack24 = &stack0xfffffffc;\n    uStack60 = fcn.00404448();\n    puStack64 = 0x46181b;\n    uVar1 = sub.kernel32.dll_CreateFileA();\n    uStack68 = 0x46186d;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    uVar6 = 0;\n    uVar5 = 0;\n    uVar4 = 0;\n    uVar3 = 0;\n    puStack64 = &stack0xfffffffc;\n    iVar2 = (***0x46f984)();\n    if (iVar2 != 0) {\n        sub.kernel32.dll_GetFileSize(uVar1, 0);\n    }\n    *in_FS_OFFSET = in_EAX;\n    sub.kernel32.dll_CloseHandle(uVar1, 0x461874, uVar3, uVar4, uVar5, uVar6);\n    return;\n}\n",
        "token_count": 496
    },
    "00461984": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00461984(uint32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    ushort extraout_var;\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x461a12;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    (***0x46f758)();\n    fcn.00460658();\n    *in_ECX = var_14h;\n    (**(*in_EAX + 0x7c))();\n    fcn.00403fdc();\n    uVar1 = (***0x46f880)();\n    *arg_8h = uVar1 & 0xffff;\n    *in_FS_OFFSET = CONCAT22(extraout_var, var_14h._2_2_);\n    fcn.00403f88(0x461a19);\n    return;\n}\n",
        "token_count": 283
    },
    "00461a24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00461a24(uint32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    ushort extraout_var;\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x461ab2;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    (***0x46f710)();\n    fcn.00460658();\n    *in_ECX = var_14h;\n    (**(*in_EAX + 0x7c))();\n    fcn.00403fdc();\n    uVar1 = (***0x46f880)();\n    *arg_8h = uVar1 & 0xffff;\n    *in_FS_OFFSET = CONCAT22(extraout_var, var_14h._2_2_);\n    fcn.00403f88(0x461ab9);\n    return;\n}\n",
        "token_count": 284
    },
    "00461be8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461be8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x461c89;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    if (param_2 == 0x2af9) {\n        puStack44 = &stack0xfffffffc;\n        fcn.00405d0c();\n        arg_8h = &fcn.00461be8::var_4h;\n        fcn.00405d0c();\n        fcn.00408ca4(arg_8h);\n        fcn.00403fdc();\n    }\n    else {\n        arg_8h = 0x461c2f;\n        fcn.0046072c();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack48 = 0x461c90;\n    iStack52 = 0x461c88;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 320
    },
    "0046222c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046222c(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uchar uVar2;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x4622ff;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    bVar1 = *0x470e30 == 0;\n    *0x470e30 = *0x470e30 + -1;\n    uVar2 = *0x470e30 == 0;\n    if (bVar1) {\n        fcn.00461f64();\n        fcn.00403fdc();\n        **0x46faa4 = *0x460c68;\n        fcn.00402d80();\n        if (uVar2) {\n            *0x465350 = 0x462168;\n        }\n        else {\n            *0x465350 = fcn.0040c284;\n        }\n        fcn.00405190(1);\n        fcn.00403fdc();\n        fcn.00405190(1);\n        fcn.00403fdc();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x462306;\n    uStack16 = 0x4622fe;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 337
    },
    "00462b88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00462b88(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x462b9c;\n    fcn.00404438();\n    uStack24 = 0x462be3;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.004627dc();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x462bea;\n    uStack24 = 0x462be2;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 175
    },
    "0046346c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046346c(void)\n\n{\n    int32_t in_EAX;\n    uint var_4h;\n    \n    (*(in_EAX + 0x15cb))();\n    return;\n}\n",
        "token_count": 45
    },
    "004635c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004635c4(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    bVar6 = *0x470e48 == 0;\n    *0x470e48 = *0x470e48 + -1;\n    if (bVar6) {\n        iVar4 = 0x1964;\n        do {\n            sub.kernel32.dll_GetFileTime();\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        uVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x4636c0, 0x4636a8);\n        iVar4 = sub.kernel32.dll_GetProcAddress_1(uVar1);\n        if (iVar4 == 0) {\n            sub.gdi32.dll_GetWinMetaFileBits(0, 0, 0, 0, 0);\n            iVar4 = fcn.0046345c();\n            if (iVar4 == 0x57) {\n                iVar4 = 0x8caf;\n                do {\n                    uVar1 = 0;\n                    sub.kernel32.dll_GetFileType();\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n                iVar4 = 0;\n                uVar5 = 0;\n                while( true ) {\n                    *0x470e4c = 8;\n                    sub.user32.dll_GetLastInputInfo(0x470e4c, uVar1);\n                    uVar2 = sub.kernel32.dll_GetTickCount();\n                    uVar3 = uVar2 - *0x470e50;\n                    if (uVar2 < *0x470e50) {\n                        uVar3 = fcn.00403190();\n                    }\n                    if (((uVar3 < 100) && (uVar5 != *0x470e50)) &&\n                       (bVar6 = SCARRY4(iVar4, 1),  iVar4 = iVar4 + 1,  uVar5 = *0x470e50,  bVar6)) {\n                        fcn.00403190();\n                    }\n                    if (4 < iVar4) break;\n                    uVar1 = 0xa6;\n                    sub.kernel32.dll_Sleep();\n                }\n                fcn.00463494();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 532
    },
    "0043247c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0043247c(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if ((in_EAX ^ in_EAX >> 0x1f) - (in_EAX >> 0x1f) < (param_2 ^ param_2 >> 0x1f) - (param_2 >> 0x1f)) {\n        return in_EAX;\n    }\n    return param_2;\n}\n",
        "token_count": 108
    },
    "0040f034": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f034(uint16_t param_1, uint16_t *param_2)\n\n{\n    if ((*param_2 & 0xfff) < 0x14) {\n        if ((param_1 & 0xfff) < 0x14) {\n            (***0x46faf0)();\n            fcn.0040e788();\n        }\n        else {\n            fcn.0040e348();\n        }\n    }\n    else {\n        fcn.0040f120();\n        (***0x46faf0)();\n        fcn.0040e788();\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00403ddc": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nbool fcn.00403ddc(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    iVar1 = *0x464000;\n    *0x464000 = 0;\n    puVar3 = *0x470638;\n    puVar4 = 0x470638;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 167
    },
    "0040cd30": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040cd30(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x14), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 55
    },
    "004188a8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004188a8(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    (**(*in_EAX + 0x84))();\n    if (in_EAX[5] == in_EAX[6]) {\n        fcn.004187d4();\n    }\n    if (in_EDX < in_EAX[5]) {\n        fcn.004028c8();\n    }\n    puVar1 = in_EAX[4] + in_EDX * 8;\n    *puVar1 = 0;\n    puVar1[1] = arg_8h;\n    fcn.00403fdc();\n    in_EAX[5] = in_EAX[5] + 1;\n    (**(*in_EAX + 0x80))();\n    return;\n}\n",
        "token_count": 193
    },
    "0041d7dc": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d7dc(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    ulong uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41d83f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch != 0) {\n        *(arg_ch + 4) = 2;\n        uVar1 = (****(arg_8h + 0xc))();\n        *(arg_ch + 8) = uVar1;\n        *(arg_ch + 0xc) = uVar1 >> 0x20;\n        *(arg_ch + 0x10) = 0;\n        *(arg_ch + 0x14) = 0;\n        *(arg_ch + 0x18) = 0;\n        *(arg_ch + 0x1c) = 0;\n        *(arg_ch + 0x20) = 0;\n        *(arg_ch + 0x24) = 0;\n        *(arg_ch + 0x2c) = 1;\n    }\n    *in_FS_OFFSET = uStack28;\n    return 0;\n}\n",
        "token_count": 295
    },
    "004264b4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.004264b4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    while (0 < *(*(in_EAX + 0x10) + 8)) {\n        iVar1 = fcn.0042543c();\n        (**(**(iVar1 + 4) + 0x2c))();\n    }\n    (**(**(in_EAX + 0x10) + 8))();\n    (**(**(in_EAX + 0x14) + 8))();\n    (**(**(in_EAX + 0x18) + 8))();\n    return;\n}\n",
        "token_count": 139
    },
    "00432020": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432020(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 4) = *(param_2 + 4);\n    *(in_EAX + 8) = *(param_2 + 8);\n    *(in_EAX + 0xc) = *(param_2 + 0xc);\n    *(in_EAX + 0x10) = *(param_2 + 0x10);\n    *(in_EAX + 0x14) = *(param_2 + 0x14);\n    *(in_EAX + 0x18) = *(param_2 + 0x18);\n    *(in_EAX + 0x20) = *(param_2 + 0x20);\n    *(in_EAX + 0x24) = *(param_2 + 0x24);\n    *(in_EAX + 0x28) = *(param_2 + 0x28);\n    *(in_EAX + 0x2c) = *(param_2 + 0x2c);\n    return;\n}\n",
        "token_count": 248
    },
    "004385a8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004385a8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.00406b64(*(param_2 + 0x20), *(param_2 + 0x34), 0, *(param_2 + 0x1c), *(param_2 + 0x18), \n                         *(param_2 + 0x14), *(param_2 + 0x10), *(param_2 + 0xc), *(param_2 + 4));\n    *(in_EAX + 0x180) = uVar1;\n    return;\n}\n",
        "token_count": 154
    },
    "0043df94": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043df94(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    if ((in_ECX == 0) && (in_ECX = *(*(in_EAX + 100) + 8),  iVar1 = in_ECX,  arg_8h != '\\0')) {\n        do {\n            in_ECX = iVar1;\n            iVar1 = *(in_ECX + 0xc);\n        } while (*(in_ECX + 0xc) != 0);\n    }\n    if (arg_8h == '\\0') {\n        *(in_EDX + 0xc) = in_ECX;\n        iVar1 = *(in_ECX + 0x18);\n        *(in_EDX + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = in_EDX;\n        }\n        *(in_ECX + 0x18) = in_EDX;\n        iVar1 = *(in_ECX + 0x14);\n        *(in_EDX + 0x14) = iVar1;\n        if (in_ECX == *(iVar1 + 8)) {\n            *(iVar1 + 8) = in_EDX;\n        }\n    }\n    else {\n        *(in_EDX + 0x14) = *(in_ECX + 0x14);\n        *(in_EDX + 0x18) = in_ECX;\n        iVar1 = *(in_ECX + 0xc);\n        *(in_EDX + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = in_EDX;\n        }\n        *(in_ECX + 0xc) = in_EDX;\n    }\n    fcn.0043d474();\n    fcn.0043d804();\n    return;\n}\n",
        "token_count": 432
    },
    "00457cf8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457cf8(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_18h = 0;\n    var_1ch = 0;\n    uStack52 = 0x457de8;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_14h = 0;\n    fcn.00405848();\n    iVar1 = sub.oleaut32.dll_GetErrorInfo();\n    if (iVar1 == 0) {\n        fcn.00404668();\n        (**(_pe_dos_header + 0x10))();\n        fcn.00404668();\n        (**(_pe_dos_header + 0x14))();\n        fcn.00404668();\n        (**(_pe_dos_header + 0x18))();\n        uStack96 = 0;\n        uStack100 = 0x457d75;\n        (**(_pe_dos_header + 0x1c))();\n    }\n    fcn.00404210();\n    fcn.00404210();\n    fcn.00404210();\n    iStack104 = fcn.00457b28(var_14h, var_1ch, var_18h, in_EAX);\n    uStack108 = var_14h;\n    if (iStack104 == 0) {\n        iStack104 = fcn.00403f7c();\n        uStack108 = var_14h;\n    }\n    uStack96 = param_2;\n    // WARNING: Could not recover jumptable at 0x004039e5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x470014)(0xeedfade, 1, 7, &stack0xffffff94);\n    return;\n}\n",
        "token_count": 523
    },
    "004202c0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004202c0(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.004035c4();\n    fcn.00417244();\n    fcn.004208cc();\n    fcn.00403250();\n    fcn.00403250();\n    fcn.00403250();\n    sub.kernel32.dll_DeleteCriticalSection_1(iVar1 + 0x38);\n    fcn.00417454();\n    if ('\\0' < extraout_DL) {\n        fcn.004035ac();\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "004204cc": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004204cc(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.00420920();\n    uVar1 = fcn.004200e0();\n    sub.user32.dll_FillRect(in_EAX[1], param_2, uVar1);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 109
    },
    "0042062c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042062c(int32_t *param_1)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_1 != NULL) {\n        (**(*in_EAX + 0x10))();\n        fcn.00420920();\n        (**(*param_1 + 0x14))();\n        (**(*in_EAX + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "0045be58": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0045be58(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_GetDC(0);\n    *0x470bfc = sub.gdi32.dll_GetDeviceCaps(uVar1, 0x58);\n    *0x470c00 = sub.gdi32.dll_GetDeviceCaps(uVar1, 0x5a);\n    sub.user32.dll_ReleaseDC(0, uVar1);\n    *0x470c04 = sub.user32.dll_RegisterClipboardFormatA(0x45bef8);\n    *0x470c08 = sub.user32.dll_RegisterClipboardFormatA(0x45bf0c);\n    *0x470c0c = sub.user32.dll_RegisterClipboardFormatA(0x45bf1c);\n    *0x470c10 = *0x470c08;\n    *0x470c18 = 1;\n    *0x470c1c = 0xffffffff;\n    *0x470c20 = 8;\n    *0x470c24 = *0x470c04;\n    *0x470c2c = 1;\n    *0x470c30 = 0xffffffff;\n    *0x470c34 = 1;\n    return;\n}\n",
        "token_count": 274
    },
    "0040cd20": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040cd20(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x10), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 55
    },
    "0041c6c0": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0041c6c0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_WaitForSingleObject(*0x470854);\n    if (iVar1 == 0) {\n        fcn.0041c6b4();\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00407d64": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00407d64(uint param_1, char *param_2)\n\n{\n    char *in_EAX;\n    char *pcVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    bool bVar6;\n    \n    pcVar1 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar1 = *(in_EAX + -4);\n    }\n    pcVar3 = param_2;\n    if (param_2 != NULL) {\n        pcVar3 = *(param_2 + -4);\n    }\n    pcVar2 = pcVar1;\n    if (pcVar3 < pcVar1) {\n        pcVar2 = pcVar3;\n    }\n    bVar6 = true;\n    do {\n        pcVar4 = in_EAX;\n        pcVar5 = param_2;\n        if (pcVar2 == NULL) break;\n        pcVar2 = pcVar2 + -1;\n        pcVar5 = param_2 + 1;\n        pcVar4 = in_EAX + 1;\n        bVar6 = *in_EAX == *param_2;\n        in_EAX = pcVar4;\n        param_2 = pcVar5;\n    } while (bVar6);\n    if (!bVar6) {\n        pcVar1 = pcVar4[-1];\n        pcVar3 = pcVar5[-1];\n    }\n    return pcVar1 - pcVar3;\n}\n",
        "token_count": 333
    },
    "00407db4": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00407db4(uint param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char *in_EAX;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint8_t uVar6;\n    uint16_t uVar7;\n    uint8_t uVar8;\n    bool bVar9;\n    \n    pcVar3 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar3 = *(in_EAX + -4);\n    }\n    pcVar5 = param_2;\n    if (param_2 != NULL) {\n        pcVar5 = *(param_2 + -4);\n    }\n    pcVar4 = pcVar3;\n    if (pcVar5 < pcVar3) {\n        pcVar4 = pcVar5;\n    }\n    bVar9 = true;\ncode_r0x00407dd3:\n    do {\n        if (pcVar4 != NULL) {\n            pcVar4 = pcVar4 + -1;\n            pcVar2 = param_2 + 1;\n            pcVar1 = in_EAX + 1;\n            bVar9 = *in_EAX == *param_2;\n            in_EAX = pcVar1;\n            param_2 = pcVar2;\n            if (bVar9) goto code_r0x00407dd3;\n        }\n        if (bVar9) goto code_r0x00407e01;\n        uVar6 = in_EAX[-1];\n        if ((0x60 < uVar6) && (uVar6 < 0x7b)) {\n            uVar6 = uVar6 - 0x20;\n        }\n        uVar7 = CONCAT11(param_2[-1], uVar6);\n        uVar8 = uVar7 >> 8;\n        if ((0x60 < uVar8) && (uVar8 < 0x7b)) {\n            uVar7 = CONCAT11(uVar8 - 0x20, uVar6);\n        }\n        uVar6 = uVar7 >> 8;\n        bVar9 = uVar7 == uVar6;\n        if (!bVar9) {\n            pcVar3 = uVar7;\n            pcVar5 = uVar6;\ncode_r0x00407e01:\n            return pcVar3 - pcVar5;\n        }\n    } while( true );\n}\n",
        "token_count": 537
    },
    "004209e8": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.004209e8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.0041fdf4();\n    sub.gdi32.dll_SelectObject(*(in_EAX + 4), uVar1);\n    sub.gdi32.dll_SetROP2(*(in_EAX + 4), *(*(*(in_EAX + 0x10) + 0x18) * 2 + 0x4646b8));\n    return;\n}\n",
        "token_count": 110
    },
    "0043a674": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0043a674(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + -0x10))();\n    sub.user32.dll_RemovePropA(in_EAX[0x60], *0x470b22);\n    sub.user32.dll_RemovePropA(in_EAX[0x60], *0x470b20);\n    return;\n}\n",
        "token_count": 85
    },
    "004083b0": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.004083b0(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00404448(0xc0000000, 0, 0, 2, 0x80, 0);\n    sub.kernel32.dll_CreateFileA(uVar1);\n    return;\n}\n",
        "token_count": 70
    },
    "00428178": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00428178(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4281a2;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + 0x30))();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 126
    },
    "00441da0": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00441da0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x441e33;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    uVar3 = *(in_EAX + 0x34);\n    uVar2 = sub.comctl32.dll_ImageList_Create\n                      (uVar3, *(in_EAX + 0x30), *(*(in_EAX + 0x41) * 4 + 0x464b58) | 0xfe, *(in_EAX + 0x38), \n                       *(in_EAX + 0x38));\n    *(in_EAX + 0x3c) = uVar2;\n    cVar1 = fcn.00441b30();\n    if (cVar1 == '\\0') {\n        fcn.00405d0c();\n        fcn.0040b564();\n        fcn.004039c4();\n    }\n    if (*(in_EAX + 0x44) != 0x1fffffff) {\n        fcn.0044230c();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00403f88(0x441e3a);\n    return;\n}\n",
        "token_count": 342
    },
    "0045d0e8": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0045d0e8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x45d184;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.0045d19c();\n    fcn.004084f4();\n    fcn.00403fdc();\n    iVar1 = fcn.0040458c();\n    if (iVar1 != 0) {\n        fcn.00404248();\n        fcn.004044e8();\n    }\n    uVar2 = fcn.00404448(0x3ec);\n    uVar3 = sub.user32.dll_DdeCreateStringHandleA(*(in_EAX + 0x44), uVar2);\n    *(in_EAX + 0x34) = uVar3;\n    uVar2 = *(in_EAX + 0x44);\n    sub.user32.dll_DdeNameService(uVar2, uVar3, 0, 1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00403f88(0x45d18b);\n    return;\n}\n",
        "token_count": 317
    },
    "0045d5a0": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045d5a0(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    uStack40 = 0x45d653;\n    iStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack44;\n    fcn.0041c558();\n    fcn.00404020();\n    var_10h = var_4h;\n    var_ch._0_1_ = 0xb;\n    fcn.00408ca4(&var_8h);\n    fcn.0041c600();\n    fcn.00404020();\n    arg_8h = &var_14h;\n    var_10h = var_4h;\n    var_ch = CONCAT31(var_ch._1_3_, 0xb);\n    fcn.00408ca4(arg_8h);\n    fcn.0041c600();\n    fcn.0041c560();\n    *in_FS_OFFSET = arg_8h;\n    iStack44 = 0x45d65a;\n    fcn.00403f88();\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 371
    },
    "0045e414": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e414(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x45e488;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    (**(**(in_EAX + 0x30) + 0x1c))();\n    (**(*param_2 + 0x1c))(0);\n    iVar1 = fcn.00407e2c();\n    if (iVar1 != 0) {\n        *(in_EAX + 0x48) = 1;\n        (**(**(in_EAX + 0x30) + 8))();\n        fcn.0045e498();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x45e48f;\n    uStack28 = 0x45e487;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 277
    },
    "00436324": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.00436324(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    fcn.004347c4();\n    uVar1 = (**(*in_EAX + -0x10))();\n    if ((*(in_EAX + 0x14) & 2) != 0) {\n        uVar1 = fcn.00434e7c();\n    }\n    if ((*(in_EAX + 0x14) & 8) != 0) {\n        uVar1 = fcn.0040344c();\n    }\n    fcn.00436238(uVar1 & 0xffffff00 | *0x436374);\n    return;\n}\n",
        "token_count": 156
    },
    "00436d2c": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436d2c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x436dc8;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.004033dc();\n    if (cVar1 == '\\0') {\n        fcn.00417564();\n    }\n    else {\n        (**(*in_EAX + 0x50))();\n        fcn.004412c4();\n        fcn.004413fc();\n        fcn.00434c44();\n        fcn.0044115c();\n        fcn.0044151c();\n        (**(*param_2 + 0x34))(in_EAX[0x48], in_EAX[0x49]);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x436dcf;\n    uStack28 = 0x436dc7;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 291
    },
    "00439d28": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439d28(uint param_1, int32_t *param_2)\n\n{\n    (**(*param_2 + 0x68))();\n    return;\n}\n",
        "token_count": 42
    },
    "004413fc": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004413fc(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.00404394(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00403400();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x68))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00403fdc();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "004570f0": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nint32_t * fcn.004570f0(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = fcn.0042bb34();\n    piVar1[0x49] = in_EAX;\n    piVar1[0x48] = 0x4573f0;\n    piVar1[0x35] = in_EAX;\n    piVar1[0x34] = fcn.00457354;\n    fcn.00434b64();\n    (**(*piVar1 + 100))();\n    *(piVar1 + 99) = *0x457150;\n    (**(*piVar1 + 0x68))();\n    return piVar1;\n}\n",
        "token_count": 165
    },
    "004606ac": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.004606ac(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4606fe;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + 0x68))();\n    uVar1 = 0;\n    fcn.0045f03c(0);\n    fcn.004039c4();\n    *in_FS_OFFSET = uVar1;\n    uStack24 = 0x460705;\n    uStack28 = 0x4606fd;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 194
    },
    "0042e244": {
        "rules": [
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.0042e244(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x42e256;\n    cVar2 = (**(*in_EAX + 0x24))();\n    if (cVar2 != '\\0') {\n        piVar1 = in_EAX[10];\n        *(piVar1 + 0x82) = 1;\n        uStack20 = 0x42e29a;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        (**(*piVar1 + 0xcc))();\n        *in_FS_OFFSET = uStack24;\n        *(in_EAX[10] + 0x208) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "0041ebc4": {
        "rules": [
            "encode data using XOR",
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint16_t __fastcall fcn.0041ebc4(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint8_t *in_EAX;\n    \n    uVar1 = 0;\n    do {\n        uVar1 = uVar1 << 5 & 0xff00 | (uVar1 << 5 | uVar1 >> 0xb) ^ *in_EAX;\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return uVar1;\n}\n",
        "token_count": 137
    },
    "004560b8": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nvoid fcn.004560b8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x84) != 0) {\n        cVar1 = fcn.0043b724();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.0043b420();\n            iVar3 = sub.user32.dll_IsWindowVisible(uVar2);\n            if (iVar3 != 0) {\n                uVar2 = fcn.0043b420(0);\n                sub.user32.dll_ShowWindow(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00402d5c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402d5c(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = in_EAX;\n    if (0xff < param_1) {\n        param_1 = 0xff;\n    }\n    do {\n        cVar1 = *param_2;\n        param_2 = param_2 + 1;\n        if (cVar1 == '\\0') break;\n        pcVar2 = pcVar2 + 1;\n        *pcVar2 = cVar1;\n        param_1 = param_1 - 1;\n    } while (param_1 != 0);\n    *in_EAX = pcVar2 - in_EAX;\n    return;\n}\n",
        "token_count": 178
    },
    "004031b4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004031b4(uint param_1, int32_t param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint8_t uVar2;\n    \n    uVar2 = 0;\n    if (param_2 != 0) {\n        in_EAX = *(in_EAX + -0x2c);\n        uVar1 = *in_EAX;\n        if (uVar1 == *(param_2 + -4)) {\n            do {\n                uVar2 = 0;\n                if (((in_EAX[uVar1] ^ *(uVar1 + param_2 + -1)) & 0xdf) != 0) goto code_r0x004031d7;\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n            uVar2 = 1;\n        }\n    }\ncode_r0x004031d7:\n    return in_EAX & 0xffffff00 | uVar2;\n}\n",
        "token_count": 226
    },
    "004032b4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004032b4(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        in_EAX = *(iVar1 + -0x24);\n        if (*(iVar1 + -0x40) != 0) {\n            fcn.004049b8();\n        }\n    } while (in_EAX != NULL);\n    return;\n}\n",
        "token_count": 96
    },
    "00403400": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027fc)\n\nvoid __fastcall fcn.00403400(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX != NULL) {\n        while (*in_EAX != param_2) {\n            in_EAX = *(*in_EAX + -0x24);\n            if (in_EAX == NULL) {\n                if (*0x470008 != NULL) {\n                    (**0x470008)();\n                }\n                fcn.004027d0();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00403464": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403464(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == param_2) {\n            return 0x1;\n        }\n        piVar1 = *(in_EAX + -0x24);\n        if (piVar1 == NULL) break;\n        in_EAX = *piVar1;\n    }\n    return piVar1;\n}\n",
        "token_count": 116
    },
    "00403c10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403c10(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    iVar3 = *0x470644;\n    puStack20 = &stack0xfffffffc;\n    if (*0x470640 != 0) {\n        iVar1 = *(*0x470640 + 4);\n        uStack24 = 0x403c56;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar3) {\n            do {\n                iVar3 = iVar3 + -1;\n                pcVar2 = *(iVar1 + 4 + iVar3 * 8);\n                *0x470644 = iVar3;\n                if (pcVar2 != NULL) {\n                    (*pcVar2)();\n                }\n            } while (0 < iVar3);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "00403c70": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403c70(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x470640 != NULL) {\n        iVar1 = **0x470640;\n        iVar4 = 0;\n        iVar2 = (*0x470640)[1];\n        uStack24 = 0x403cb6;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar1) {\n            do {\n                pcVar3 = *(iVar2 + iVar4 * 8);\n                iVar4 = iVar4 + 1;\n                *0x470644 = iVar4;\n                if (pcVar3 != NULL) {\n                    (*pcVar3)();\n                }\n            } while (iVar4 < iVar1);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "0040458c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040458c(uint param_1, char *param_2)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    bool bVar7;\n    \n    if (in_EAX != NULL) {\n        if (param_2 == NULL) {\n            return 0;\n        }\n        iVar3 = *(in_EAX + -4) + -1;\n        if (-1 < iVar3) {\n            iVar1 = *(param_2 + -4) - iVar3;\n            bVar7 = iVar1 == 0;\n            pcVar5 = param_2;\n            if (!bVar7 && iVar3 <= *(param_2 + -4)) {\ncode_r0x004045ac:\n                do {\n                    if (iVar1 != 0) {\n                        iVar1 = iVar1 + -1;\n                        pcVar4 = pcVar5 + 1;\n                        bVar7 = *in_EAX == *pcVar5;\n                        pcVar5 = pcVar4;\n                        if (!bVar7) goto code_r0x004045ac;\n                    }\n                    iVar2 = iVar3;\n                    pcVar4 = in_EAX + 1;\n                    pcVar6 = pcVar5;\n                    if (!bVar7) goto code_r0x004045c0;\n                    do {\n                        if (iVar2 == 0) break;\n                        bVar7 = *pcVar4 == *pcVar6;\n                        iVar2 = iVar2 + -1;\n                        pcVar4 = pcVar4 + 1;\n                        pcVar6 = pcVar6 + 1;\n                    } while (bVar7);\n                } while (!bVar7);\n                in_EAX = pcVar5 + -param_2;\n                goto code_r0x004045d0;\n            }\n        }\ncode_r0x004045c0:\n        in_EAX = NULL;\n    }\ncode_r0x004045d0:\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 464
    },
    "00404af0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027fc)\n// WARNING: Removing unreachable block (ram,0x00404a72)\n// WARNING: Removing unreachable block (ram,0x00404a58)\n\nvoid __fastcall fcn.00404af0(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 1;\n    cVar1 = *param_2;\n    if (cVar1 == '\\n') {\n        fcn.00403f88();\n    }\n    else if (cVar1 == '\\v') {\n        fcn.00404668();\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.004049ec();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00404a04();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.004049b8();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.00405848();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x470008 != NULL) {\n                (**0x470008)();\n            }\n            fcn.004027d0();\n            return;\n        }\n        do {\n            fcn.0040519c();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    return;\n}\n",
        "token_count": 541
    },
    "00404ff4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004027fc)\n\nvoid __fastcall fcn.00404ff4(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00403f88();\n            }\n            else {\n                fcn.00403fac();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00404668();\n            }\n            else {\n                fcn.00404680();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.004049ec();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00404a04();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.004049b8();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.00405848();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x470008 != NULL) {\n                    (**0x470008)();\n                }\n                fcn.004027d0();\n                return;\n            }\n            do {\n                fcn.0040519c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 577
    },
    "00405278": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405278(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = *0x464034;\n    if (*0x464034 != NULL) {\n        do {\n            if (((in_EAX == piVar1[1]) || (in_EAX == piVar1[2])) || (in_EAX == piVar1[3])) {\n                fcn.00405230();\n                return;\n            }\n            piVar1 = *piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004052a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004052a0(void)\n\n{\n    char *in_EAX;\n    \n    while ((*in_EAX != '\\0' && (*in_EAX != '\\\\'))) {\n        in_EAX = sub.user32.dll_CharNextA();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "0040570c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040570c(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if ((*0x464038 != NULL) && ((*0x464038)[1] == in_EAX)) {\n        *0x464038 = **0x464038;\n        fcn.004026ec();\n        return;\n    }\n    ppiVar2 = *0x464038;\n    if (*0x464038 != NULL) {\n        do {\n            ppiVar1 = *ppiVar2;\n            if ((ppiVar1 != NULL) && (ppiVar1[1] == in_EAX)) {\n                *ppiVar2 = *ppiVar1;\n                fcn.004026ec();\n                return;\n            }\n            ppiVar2 = *ppiVar2;\n        } while (ppiVar2 != NULL);\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "004057d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004057d8(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    uStack16 = 0x40583c;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    var_4h = in_EAX;\n    fcn.0040576c();\n    *in_FS_OFFSET = uStack20;\n    puVar1 = *0x464034;\n    if (var_4h == *0x464034) {\n        *0x464034 = *var_4h;\n    }\n    else {\n        for (; puVar1 != NULL; puVar1 = *puVar1) {\n            if (*puVar1 == var_4h) {\n                *puVar1 = *var_4h;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "00407cec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407cec(uint param_1, uint8_t **param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    iVar2 = fcn.00404248();\n    fcn.004045d4();\n    puVar3 = *param_2;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        uVar1 = *in_EAX;\n        if ((0x60 < uVar1) && (uVar1 < 0x7b)) {\n            uVar1 = uVar1 - 0x20;\n        }\n        *puVar3 = uVar1;\n        in_EAX = in_EAX + 1;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00407ed4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407ed4(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00404248();\n    for (iVar2 = 1; (iVar2 <= iVar1 && (*(in_EAX + -1 + iVar2) < 0x21)); iVar2 = iVar2 + 1) {\n    }\n    if (iVar1 < iVar2) {\n        fcn.00403f88();\n    }\n    else {\n        for (; *(in_EAX + -1 + iVar1) < 0x21; iVar1 = iVar1 + -1) {\n        }\n        fcn.004044a8(param_2);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00407f88": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407f88(uint32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar5;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar6;\n    char cVar4;\n    \n    puVar6 = unaff_ESI;\n    if (param_1 == '\\0') {\n        if (in_EAX < 0) {\n            fcn.00407f9e();\n            unaff_ESI[-1] = 0x2d;\n            return;\n        }\n        param_1 = 10;\n    }\n    do {\n        uVar2 = in_EAX / param_1;\n        puVar6 = puVar6 + -1;\n        cVar4 = in_EAX % param_1;\n        uVar3 = cVar4 + 0x30;\n        if (0x39 < uVar3) {\n            uVar3 = cVar4 + 0x37;\n        }\n        *puVar6 = uVar3;\n        in_EAX = uVar2;\n    } while (uVar2 != 0);\n    iVar5 = param_2 - (unaff_ESI - puVar6);\n    if (unaff_ESI - puVar6 <= param_2 && iVar5 != 0) {\n        iVar1 = -iVar5;\n        while (iVar5 = iVar5 + -1,  iVar5 != 0) {\n            (puVar6 + iVar1)[iVar5] = 0x30;\n        }\n        puVar6[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "004086dc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004086dc(uint param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar6 = 0xffffffff;\n    uVar4 = 0;\n    pcVar7 = param_2;\n    do {\n        if (uVar6 == 0) break;\n        uVar6 = uVar6 - 1;\n        cVar2 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar2 != '\\0');\n    uVar6 = ~uVar6;\n    bVar8 = true;\ncode_r0x004086f1:\n    do {\n        if (uVar6 != 0) {\n            uVar6 = uVar6 - 1;\n            pcVar1 = param_2 + 1;\n            pcVar7 = in_EAX + 1;\n            bVar8 = *in_EAX == *param_2;\n            in_EAX = pcVar7;\n            param_2 = pcVar1;\n            if (bVar8) goto code_r0x004086f1;\n        }\n        if (bVar8) {\n            return;\n        }\n        uVar3 = in_EAX[-1];\n        uVar5 = uVar4 & 0xffffff00 | uVar3;\n        if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n            uVar5 = uVar4 & 0xffffff00 | uVar3 - 0x20;\n        }\n        uVar3 = param_2[-1];\n        uVar4 = uVar3;\n        if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n            uVar4 = uVar3 - 0x20;\n        }\n        uVar4 = uVar5 - uVar4;\n        bVar8 = uVar4 == 0;\n        if (!bVar8) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 498
    },
    "0040871c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040871c(int32_t param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar4 = 0;\n    iVar6 = param_1;\n    pcVar7 = param_2;\n    if (param_1 != 0) {\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        param_1 = param_1 - iVar6;\n        bVar8 = true;\ncode_r0x00408735:\n        do {\n            if (param_1 != 0) {\n                param_1 = param_1 + -1;\n                pcVar1 = param_2 + 1;\n                pcVar7 = in_EAX + 1;\n                bVar8 = *in_EAX == *param_2;\n                in_EAX = pcVar7;\n                param_2 = pcVar1;\n                if (bVar8) goto code_r0x00408735;\n            }\n            if (bVar8) {\n                return;\n            }\n            uVar3 = in_EAX[-1];\n            uVar5 = uVar4 & 0xffffff00 | uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar5 = uVar4 & 0xffffff00 | uVar3 - 0x20;\n            }\n            uVar3 = param_2[-1];\n            uVar4 = uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar4 = uVar3 - 0x20;\n            }\n            uVar4 = uVar5 - uVar4;\n            bVar8 = uVar4 == 0;\n        } while (bVar8);\n    }\n    return;\n}\n",
        "token_count": 501
    },
    "00408760": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00408760(uint param_1, char param_2)\n\n{\n    char *in_EAX;\n    \n    while( true ) {\n        if (param_2 == *in_EAX) {\n            return in_EAX;\n        }\n        if (*in_EAX == '\\0') break;\n        in_EAX = in_EAX + 1;\n    }\n    return NULL;\n}\n",
        "token_count": 88
    },
    "00408774": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00408774(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    bool bVar9;\n    \n    if ((in_EAX != NULL) && (param_2 != NULL)) {\n        uVar2 = 0xffffffff;\n        pcVar7 = param_2;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar2 - 1;\n        if (uVar3 != 0) {\n            uVar4 = 0xffffffff;\n            pcVar7 = in_EAX;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            iVar5 = ~uVar4 - uVar3;\n            bVar9 = iVar5 == 0;\n            if (uVar3 <= ~uVar4 && !bVar9) {\n                do {\n                    pcVar7 = param_2 + 1;\n                    pcVar8 = in_EAX;\n                    do {\n                        in_EAX = pcVar8;\n                        if (iVar5 == 0) break;\n                        iVar5 = iVar5 + -1;\n                        in_EAX = pcVar8 + 1;\n                        bVar9 = *param_2 == *pcVar8;\n                        pcVar8 = in_EAX;\n                    } while (!bVar9);\n                    iVar6 = ~uVar2 - 2;\n                    pcVar8 = in_EAX;\n                    if (!bVar9) {\n                        return NULL;\n                    }\n                    do {\n                        if (iVar6 == 0) break;\n                        bVar9 = *pcVar7 == *pcVar8;\n                        iVar6 = iVar6 + -1;\n                        pcVar8 = pcVar8 + 1;\n                        pcVar7 = pcVar7 + 1;\n                    } while (bVar9);\n                    if (bVar9) {\n                        return in_EAX + -1;\n                    }\n                } while( true );\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 578
    },
    "004089d6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004089d6(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *puVar3;\n    char cVar4;\n    int16_t iVar6;\n    uint32_t uVar7;\n    uint extraout_ECX;\n    unkbyte3 Var8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t unaff_EBP;\n    uint8_t *puVar11;\n    float10 fVar12;\n    float10 fVar13;\n    float10 fVar14;\n    uint var_69h;\n    uint var_59h;\n    uint var_49h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    char cVar5;\n    \n    iVar9 = *(unaff_EBP + -0xc);\n    if (iVar9 <= *(unaff_EBP + 8)) {\n        *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n    // WARNING: Could not recover jumptable at 0x004089f6. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x4089fd\n        (**(*(*(unaff_EBP + 0xc) + iVar9 * 8 + 4) * 4 + 0x4089fd))();\n        return;\n    }\n    do {\n        fcn.00408c03();\n        puVar3 = fcn.00408824();\n        uVar10 = *(unaff_EBP + -0x24);\n        if (0x20 < uVar10) {\n            uVar10 = 0;\n        }\n        cVar5 = extraout_ECX;\n        Var8 = extraout_ECX >> 8;\n        cVar4 = cVar5 + -0x44;\n        if (cVar4 == '\\0') break;\n        cVar4 = '\\x10';\n        Var8 = 0;\n        if (cVar5 == 'X') break;\n        cVar4 = '\\n';\n        Var8 = 0;\n    } while (cVar5 != 'U');\n    iVar6 = CONCAT31(Var8, cVar4);\n    if ((cVar4 == '\\0') && (iVar6 = 10,  (*(puVar3 + 4) & 0x80000000) != 0)) {\n        fcn.00408028(-*puVar3, -(*(puVar3 + 4) + (*puVar3 != 0)));\n        *(unaff_EBP + -0x4a) = 0x2d;\n        return;\n    }\n    if ((*(puVar3 + 4) & 0x80000000) == 0) {\n        fVar14 = *puVar3;\n    }\n    else {\n        fVar14 = 0x7fffffffffffffff + 1 + (*puVar3 & 0x7fffffffffffffff);\n    }\n    fVar12 = iVar6;\n    puVar11 = unaff_EBP + -0x49;\n    do {\n        puVar11 = puVar11 + -1;\n        fVar13 = fVar14 - (fVar14 / fVar12) * fVar12;\n        fVar14 = fVar14 / fVar12;\n        var_4h._0_1_ = ROUND(fVar13);\n        uVar2 = var_4h + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = var_4h + 0x37;\n        }\n        *puVar11 = uVar2;\n    } while (1 <= fVar14);\n    uVar7 = (unaff_EBP + -0x49) - puVar11;\n    iVar9 = uVar10 - uVar7;\n    if (uVar7 <= uVar10 && iVar9 != 0) {\n        iVar1 = -iVar9;\n        while (iVar9 = iVar9 + -1,  iVar9 != 0) {\n            (puVar11 + iVar1)[iVar9] = 0x30;\n        }\n        puVar11[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 982
    },
    "00409373": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00409373(void)\n\n{\n    char cVar1;\n    char *unaff_ESI;\n    \n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 == '\\0') {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n    } while (cVar1 == ' ');\n    return;\n}\n",
        "token_count": 84
    },
    "0040a464": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a464(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_2;\n    while( true ) {\n        iVar1 = fcn.00404248();\n        if ((iVar1 < iVar2) || (*(in_EAX + -1 + iVar2) != ' ')) break;\n        iVar2 = iVar2 + 1;\n    }\n    *param_2 = iVar2;\n    return;\n}\n",
        "token_count": 126
    },
    "0040a5e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040a5e0(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 1;\n    while( true ) {\n        iVar2 = fcn.00404248();\n        if (iVar2 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(in_EAX + -1 + iVar3) & 0xdf;\n        if (uVar1 == 0x44) {\n            return 1;\n        }\n        if (uVar1 == 0x45) {\n            return 2;\n        }\n        if (uVar1 == 0x4d) break;\n        if (uVar1 == 0x59) {\n            return 2;\n        }\n        iVar3 = iVar3 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 200
    },
    "0040c35c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040c35c(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.0040c384();\n    iVar3 = iVar2;\n    if (param_2 != '\\0') {\n        while (iVar1 = iVar3,  iVar1 != 0) {\n            iVar3 = fcn.0040c384();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 123
    },
    "0040c384": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040c384(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00408760();\n    while ((iVar2 != 0 && (cVar1 = fcn.0040bf84(),  cVar1 != '\\0'))) {\n        iVar2 = fcn.00408760();\n    }\n    return iVar2;\n}\n",
        "token_count": 89
    },
    "0040ca50": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040ca50(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    cVar1 = '\\x01';\n    for (puVar2 = *0x46430c; (cVar1 != '\\0' && (puVar2 != NULL)); puVar2 = *puVar2) {\n        cVar1 = (*puVar2[1])();\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "0040cb78": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040cb78(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    uVar1 = fcn.0040cb60();\n    iVar2 = sub.kernel32.dll_GetCurrentThreadId_1();\n    for (puVar3 = *(in_EAX + 4 + (uVar1 & 0xff) * 4); (puVar3 != NULL && (iVar2 != puVar3[1])); puVar3 = *puVar3) {\n    }\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040cc00();\n        if (puVar3 == NULL) {\n            puVar3 = fcn.00407c68();\n            puVar3[1] = iVar2;\n            puVar3[2] = 0x7fffffff;\n            *puVar3 = puVar3;\n            uVar4 = fcn.0040cb00();\n            *puVar3 = uVar4;\n        }\n    }\n    *param_2 = puVar3;\n    return;\n}\n",
        "token_count": 266
    },
    "0040e528": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e528(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x40e76d;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040e528::var_18h;\n    if (in_EAX < -0x7ffdfff5) {\n        if (in_EAX == -0x7ffdfff6) {\n            var_1ch = 0x40e5fe;\n            var_10h = &stack0xfffffffc;\n            fcn.00405d0c();\n            var_1ch = 0x40e60d;\n            fcn.0040b564();\n            var_1ch = 0x40e612;\n            fcn.004039c4();\n            goto code_r0x0040e745;\n        }\n        if (in_EAX < -0x7ffdfffa) {\n            if (in_EAX == -0x7ffdfffb) {\n                var_1ch = 0x40e5bc;\n                var_10h = &stack0xfffffffc;\n                fcn.0040e2f4();\n                goto code_r0x0040e745;\n            }\n            if (in_EAX == -0x7fffbfff) {\n                var_1ch = 0x40e670;\n                var_10h = &stack0xfffffffc;\n                fcn.00405d0c();\n                var_1ch = 0x40e67f;\n                fcn.0040b564();\n                var_1ch = 0x40e684;\n                fcn.004039c4();\n                goto code_r0x0040e745;\n            }\n            if (in_EAX == -0x7fff0001) {\n                var_1ch = 0x40e6df;\n                var_10h = &stack0xfffffffc;\n                fcn.00405d0c();\n                var_1ch = 0x40e6ee;\n                fcn.0040b564();\n                var_1ch = 0x40e6f3;\n                fcn.004039c4();\n                goto code_r0x0040e745;\n            }\n        }\n        else {\n            if (in_EAX == -0x7ffdfff8) {\n                var_1ch = 0x40e5ce;\n                var_10h = &stack0xfffffffc;\n                fcn.00405d0c();\n                var_1ch = 0x40e5dd;\n                fcn.0040b564();\n                var_1ch = 0x40e5e2;\n                fcn.004039c4();\n                goto code_r0x0040e745;\n            }\n            if (in_EAX == -0x7ffdfff7) {\n                var_1ch = 0x40e5ec;\n                var_10h = &stack0xfffffffc;\n                fcn.0040e3e4();\n                goto code_r0x0040e745;\n            }\n        }\n    }\n    else {\n        if (in_EAX == -0x7ffdfff5) {\n            var_1ch = 0x40e624;\n            fcn.00405d0c();\n            var_1ch = 0x40e633;\n            fcn.0040b564();\n            var_1ch = 0x40e638;\n            fcn.004039c4();\n            goto code_r0x0040e745;\n        }\n        if (in_EAX == -0x7ffdfff3) {\n            var_1ch = 0x40e64a;\n            var_10h = &stack0xfffffffc;\n            fcn.00405d0c();\n            var_1ch = 0x40e659;\n            fcn.0040b564();\n            var_1ch = 0x40e65e;\n            fcn.004039c4();\n            goto code_r0x0040e745;\n        }\n        if (in_EAX == -0x7ff8fff2) {\n            var_1ch = 0x40e696;\n            var_10h = &stack0xfffffffc;\n            fcn.00405d0c();\n            var_1ch = 0x40e6a5;\n            fcn.0040b564();\n            var_1ch = 0x40e6aa;\n            fcn.004039c4();\n            goto code_r0x0040e745;\n        }\n        if (in_EAX == -0x7ff8ffa9) {\n            var_1ch = 0x40e6bc;\n            var_10h = &stack0xfffffffc;\n            fcn.00405d0c();\n            var_1ch = 0x40e6cb;\n            fcn.0040b564();\n            var_1ch = 0x40e6d0;\n            fcn.004039c4();\n            goto code_r0x0040e745;\n        }\n    }\n    var_38h = **0x46fb74;\n    var_34h._0_1_ = 0xb;\n    var_2ch._0_1_ = 0;\n    var_1ch = 0x40e714;\n    var_10h = &stack0xfffffffc;\n    fcn.0040ad50();\n    var_1ch = &fcn.0040e528::var_38h;\n    var_20h = 2;\n    var_24h = 0x40e731;\n    fcn.00405d0c();\n    var_24h = 0x40e740;\n    fcn.0040b5a0(var_20h, var_1ch);\n    var_24h = 0x40e745;\n    fcn.004039c4();\ncode_r0x0040e745:\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x40e774;\n    var_1ch = 0x40e75f;\n    fcn.00403fac();\n    var_1ch = 0x40e76c;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 1613
    },
    "00413988": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00413988(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    \n    if (param_2 != 0) {\n        iVar2 = **(in_EAX + 0xb + *(in_EAX + 1));\n        uVar3 = *(iVar2 + 1);\n        puVar4 = iVar2 + 0xf + uVar3;\n        piVar1 = iVar2 + 7 + uVar3;\n        iVar2 = 0;\n        do {\n            uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            if (uVar3 == *(param_2 + -4)) {\n                while (((*((uVar3 - 1) + param_2) ^ puVar4[uVar3]) & 0xdf) == 0) {\n                    uVar3 = uVar3 - 1;\n                    if (uVar3 == 0) {\n                        return iVar2;\n                    }\n                }\n                uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            }\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + uVar3 + 1;\n        } while (iVar2 <= *piVar1);\n    }\n    return -1;\n}\n",
        "token_count": 321
    },
    "00413a38": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413a38(uint param_1, uchar *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t uVar4;\n    uchar *puVar3;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    if (in_EAX != 0) {\n        puVar3 = param_2;\n        if (param_2 != NULL) {\n            puVar3 = CONCAT11(*param_2, param_2[-4]) & 0xdfff;\n        }\n        while( true ) {\n            iVar1 = in_EAX + 2 + *(in_EAX + 1);\n            uVar6 = *(iVar1 + 10);\n            uVar7 = *(iVar1 + 0xb + uVar6);\n            if (uVar7 != 0) {\n                iVar2 = iVar1 + 0xd + uVar6;\n                do {\n                    puVar5 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffffdfff;\n                    if (puVar5 == puVar3) {\n                        uVar6 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffff00ff;\n                        while( true ) {\n                            uVar4 = param_2[uVar6 - 1] ^ *(iVar2 + 0x1a + uVar6);\n                            if ((uVar4 & 0xdf) != 0) break;\n                            uVar6 = uVar6 - 1;\n                            puVar3 = puVar3 & 0xffff0000 | CONCAT11(uVar4, puVar3);\n                            if (uVar6 == 0) {\n                                return;\n                            }\n                        }\n                        puVar3 = puVar3 & 0xffff0000 | CONCAT11(*param_2, puVar3) & 0xffffdfff;\n                        puVar5 = uVar6 & 0xffffff00 | *(iVar2 + 0x1a);\n                    }\n                    uVar6 = puVar5 & 0xffff00ff;\n                    uVar7 = uVar7 - 1;\n                    iVar2 = iVar2 + 0x1b + uVar6;\n                } while (uVar7 != 0);\n            }\n            if (*(iVar1 + 4) == NULL) break;\n            in_EAX = **(iVar1 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 558
    },
    "00415d3c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00415d3c(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            uVar2 = fcn.00416ec4();\n            cVar1 = fcn.004031b4();\n            if (cVar1 != '\\0') goto code_r0x00415d93;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    iVar3 = (**(**(in_EAX + 8) + 0x54))();\n    if (iVar3 < 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**(**(in_EAX + 8) + 0x18))();\n    }\ncode_r0x00415d93:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 241
    },
    "00415d9c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.00415d9c(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    uVar1 = *(in_EAX + 0xc);\n    iVar2 = *(uVar1 + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00416ec4();\n            uVar1 = fcn.00403464();\n            if (uVar1 != '\\0') goto code_r0x00415dd6;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x00415dd6:\n    return CONCAT44(uStack20, uVar1 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 249
    },
    "00415f64": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415f64(uint param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x20) != param_2) {\n        *(in_EAX + 0x20) = param_2;\n        iVar3 = *(*(in_EAX + 4) + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                iVar2 = fcn.00416ec4();\n                uVar1 = fcn.00415d9c();\n                *(iVar2 + 0x10) = uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00416080": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00416080(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    iVar1 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00416ec4();\n            uVar2 = fcn.00415c10(param_2);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 143
    },
    "00416284": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.00416284(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    uVar1 = *(in_EAX + 4);\n    iVar2 = *(uVar1 + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00416ec4();\n            uVar1 = fcn.00415e88();\n            if (uVar1 != '\\0') goto code_r0x004162bc;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x004162bc:\n    return CONCAT44(uStack20, uVar1 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 245
    },
    "004162c8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004162c8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00416ec4();\n            iVar1 = fcn.00416f20();\n            if (-1 < iVar1) {\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00415c80();\n    fcn.00416d68();\n    return;\n}\n",
        "token_count": 146
    },
    "00416644": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00416644(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = 0x416654;\n    fcn.00416260();\n    uStack16 = 0x4166a9;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puStack12 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = fcn.00416284();\n        if (cVar1 != '\\0') break;\n        fcn.0041626c();\n        if (in_EAX == *0x414c6c) break;\n        in_EAX = fcn.004031dc();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x4166b0;\n    uStack16 = 0x4166a8;\n    fcn.00416318();\n    return;\n}\n",
        "token_count": 235
    },
    "00416b50": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00416b50(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.00405f78();\n    iVar1 = *(*(iVar1 + 8) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.00416ec4();\n            (**(*piVar2 + 0xc))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00416f20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00416f20(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    for (iVar1 = 0; (iVar1 < *(in_EAX + 8) && (param_2 != *(*(in_EAX + 4) + iVar1 * 4))); iVar1 = iVar1 + 1) {\n    }\n    if (iVar1 == *(in_EAX + 8)) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 127
    },
    "00417064": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417064(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((param_2 < 0) || (0x7ffffff < param_2)) {\n        fcn.00416e50();\n    }\n    if (*(in_EAX + 0xc) < param_2) {\n        fcn.00417028();\n    }\n    if (*(in_EAX + 8) < param_2) {\n        fcn.00402c5c();\n    }\n    else {\n        iVar1 = *(in_EAX + 8) + -1;\n        iVar2 = param_2 - iVar1;\n        if (iVar2 == 0 || param_2 < iVar1) {\n            iVar2 = iVar2 + -1;\n            do {\n                fcn.00416db4();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0);\n        }\n    }\n    *(in_EAX + 8) = param_2;\n    return;\n}\n",
        "token_count": 245
    },
    "0041a004": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041a004(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar1 = *(*(in_EAX + 0x30) + 8);\n        if (-1 < iVar1 + -1) {\n            do {\n                fcn.00416ec4();\n                fcn.00403250();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00403250();\n        *(in_EAX + 0x30) = 0;\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0041a2d4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a2d4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404fd4();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00416d68();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "0041cb1c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041cb1c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x1c) & 8) == 0) {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 8;\n        if ((*(in_EAX + 0x10) != 0) && (iVar1 = *(*(in_EAX + 0x10) + 8),  -1 < iVar1 + -1)) {\n            do {\n                fcn.00416ec4();\n                fcn.0041cb1c();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "0041d28c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d28c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((arg_8h != in_EAX[0x10]) || (arg_ch != in_EAX[0x11])) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00416ec4(arg_8h, arg_ch);\n                (**(*piVar1 + 0x10))();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x10] = arg_8h;\n        in_EAX[0x11] = arg_ch;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "0041d308": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d308(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x50) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00416ec4();\n            if (param_2 == iVar1) {\n                *(param_2 + 0x10) = 0;\n                fcn.00416db4();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0041d870": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041d870(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x41d880;\n    iVar1 = fcn.00417230();\n    uStack24 = 0x41d8c5;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8);\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00416ec4();\n            fcn.00403250();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41d8cc;\n    uStack24 = 0x41d8c4;\n    fcn.00417294();\n    return;\n}\n",
        "token_count": 231
    },
    "00421070": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00421070(void)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = 0xff;\n    do {\n        puVar1 = in_EAX + iVar3 * 4;\n        puVar2 = in_EAX + iVar3 * 3;\n        puVar1[2] = puVar2[2];\n        puVar1[1] = puVar2[1];\n        *puVar1 = *puVar2;\n        puVar1[3] = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *(in_EAX + 3) = 0;\n    return;\n}\n",
        "token_count": 169
    },
    "004264f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004264f4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.0042543c();\n            (**(**(iVar1 + 4) + 0x28))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00431ed0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00431ed0(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    bool bVar2;\n    \n    *param_1 = 0;\n    uVar1 = 0;\n    while( true ) {\n        if (*(in_EAX + 8) <= *param_1) {\n            return uVar1;\n        }\n        uVar1 = fcn.00416ec4();\n        bVar2 = param_2 == *(uVar1 + 4);\n        uVar1 = uVar1 & 0xffffff00 | bVar2;\n        if (bVar2) break;\n        *param_1 = *param_1 + 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 180
    },
    "00431f04": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00431f04(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = fcn.0043b420();\n    iVar2 = iVar3;\n    while (iVar1 = iVar3,  iVar1 != 0) {\n        iVar3 = sub.user32.dll_GetParent();\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 104
    },
    "00431fbc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00431fbc(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iStackY20;\n    \n    iVar5 = 0;\n    if (*(in_EAX + 8) != 0) {\n        if (*(in_EAX + 8) == 1) {\n            iStackY20 = 0x431fd7;\n            piVar2 = fcn.00416ec4();\n            iVar5 = *piVar2;\n        }\n        else {\n            iStackY20 = sub.user32.dll_GetDesktopWindow(param_1);\n            iVar3 = sub.user32.dll_GetTopWindow();\n            while ((iVar4 = iVar3,  iVar5 == 0 && (iVar4 != 0))) {\n                cVar1 = fcn.00431ed0();\n                if (cVar1 == '\\0') {\n                    iVar3 = sub.user32.dll_GetWindow();\n                    iStackY20 = iVar4;\n                }\n                else {\n                    iVar5 = **(*(in_EAX + 4) + iStackY20 * 4);\n                    iVar3 = iVar4;\n                }\n            }\n        }\n    }\n    return CONCAT44(iStackY20, iVar5);\n}\n",
        "token_count": 300
    },
    "00432a18": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00432a18(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    while ((iVar2 != 0 && (cVar1 = fcn.004329b8(),  cVar1 == '\\0'))) {\n        iVar2 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 107
    },
    "004334cc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004334cc(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    iVar2 = 0;\n    while ((iVar1 != 0 && (iVar2 = fcn.00431ae0(),  iVar2 == 0))) {\n        iVar1 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 112
    },
    "004347c4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004347c4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            cVar1 = fcn.004033dc();\n            if (cVar1 != '\\0') {\n                fcn.0045089c();\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00437efc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00437efc(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    for (; (param_2 != 0 && (in_EAX != param_2)); param_2 = *(param_2 + 0x30)) {\n    }\n    return in_EAX & 0xffffff00 | param_2 != 0;\n}\n",
        "token_count": 91
    },
    "00438878": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00438878(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00416f20();\n    iVar2 = *(*(in_EAX + 0x19c) + 8) + -1;\n    if (iVar1 + 1 <= iVar2) {\n        iVar1 = (iVar2 - (iVar1 + 1)) + 1;\n        do {\n            iVar2 = fcn.00416ec4();\n            if (*(iVar2 + 0x180) != 0) {\n                return *(iVar2 + 0x180);\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 176
    },
    "0043d200": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0043d200(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == 0) {\n            return 0;\n        }\n        cVar1 = fcn.0043d294();\n        if (cVar1 != '\\0') break;\n        in_EAX = *(in_EAX + 0xc);\n    }\n    return in_EAX;\n}\n",
        "token_count": 101
    },
    "0043d264": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0043d264(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 94
    },
    "0043d278": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0043d278(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = fcn.0043d88c();\n    while (iVar1 != 0) {\n        iVar1 = fcn.0043d864();\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 89
    },
    "0043d294": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar fcn.0043d294(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar uVar3;\n    \n    if (*(in_EAX + 4) == 0) {\n        for (iVar2 = fcn.0043d88c(); iVar2 != 0; iVar2 = *(iVar2 + 0xc)) {\n            cVar1 = fcn.0043d294();\n            if (cVar1 != '\\0') {\n                return 1;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(in_EAX + 4) + 0x57);\n    }\n    return uVar3;\n}\n",
        "token_count": 163
    },
    "0043d5e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d5e4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x14);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.0043d864();\n        if (iVar2 != 0) break;\n        iVar1 = *(iVar1 + 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 124
    },
    "0043d7b8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043d7b8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        iVar1 = *(iVar1 + 0xc);\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 71
    },
    "0043d7c8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043d7c8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    fcn.0043d7b4();\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = fcn.0043d264();\n        if (0 < iVar2) {\n            fcn.0043d7b8();\n            fcn.0043d7c8();\n        }\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0043d804": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043d804(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        if (iVar1 == 0) {\n            return;\n        }\n        iVar2 = fcn.0043d78c();\n        iVar3 = fcn.0043d2c8();\n        if (iVar2 < iVar3) {\ncode_r0x0043d838:\n            fcn.0043d474();\n            fcn.0043db40(0x43f314, *(in_EAX + 0x1c));\n        }\n        else {\n            iVar2 = fcn.0043d78c();\n            iVar3 = fcn.0043d310();\n            if (iVar3 < iVar2) goto code_r0x0043d838;\n        }\n        fcn.0043d804();\n        iVar1 = *(iVar1 + 0xc);\n    } while( true );\n}\n",
        "token_count": 232
    },
    "0043d870": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0043d870(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_EAX + 0x18);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        cVar1 = fcn.0043d294();\n        if (cVar1 != '\\0') break;\n        iVar2 = *(iVar2 + 0x18);\n    }\n    return iVar2;\n}\n",
        "token_count": 119
    },
    "0043db04": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043db04(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    (**(arg_8h + 8))();\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0043db04(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0043db04(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0043ea38": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ea38(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0043ea38(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0043ea38(arg_8h);\n    }\n    fcn.00403250();\n    return;\n}\n",
        "token_count": 100
    },
    "0043f114": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f114(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX != 0) {\n        iVar2 = fcn.0043d864();\n        if ((iVar2 == 0) && (in_EAX != *(*(arg_8h + -4) + 100))) {\n            cVar1 = fcn.0043d294();\n            if (cVar1 != '\\0') {\n                if (*(*(arg_8h + -4) + 100) == *(in_EAX + 0x14)) {\n                    fcn.0043d7b4();\n                }\n                else {\n                    fcn.0043d78c();\n                    fcn.0043d7b4();\n                }\n            }\n        }\n        iVar2 = arg_8h;\n        fcn.0043d88c();\n        fcn.0043f114(iVar2);\n        fcn.0043d864();\n        fcn.0043f114(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "0043f56c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f56c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    cVar1 = fcn.0043d21c();\n    if (cVar1 == '\\0') {\n        *(in_EAX + 0x24) = 0;\n    }\n    else {\n        iVar2 = fcn.0043d2c8();\n        *(in_EAX + 0x24) = *(in_EAX + 0x20) - iVar2;\n    }\n    if (*(in_EAX + 0x14) != 0) {\n        cVar1 = fcn.0043d294();\n        if (cVar1 == '\\0') {\n            fcn.0043f56c(arg_8h);\n        }\n    }\n    iVar2 = fcn.0043d870();\n    if (iVar2 != 0) {\n        fcn.0043d870();\n        fcn.0043d7c8();\n    }\n    fcn.0043db40(0x43f314, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 261
    },
    "0044115c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044115c(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.00404394(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00403400();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x4c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00403fdc();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "0044145c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044145c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != in_EAX[0x20]) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00403400();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x6c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x20] = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "0044151c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044151c(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 0x86)) {\n        iVar3 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                iVar1 = fcn.00403400();\n                if (iVar1 != 0) {\n                    piVar2 = fcn.00416ec4();\n                    (**(*piVar2 + 0x74))();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *(in_EAX + 0x86) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "004416b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004416b0(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    \n    iStack20 = -1;\n    iVar3 = (**(*in_EAX + 0x14))();\n    iVar1 = iStack20;\n    if (-1 < iVar3 + -1) {\n        iVar4 = 0;\n        do {\n            iVar2 = (**(*in_EAX + 0x18))();\n            iVar1 = iVar4;\n            if (param_2 == iVar2) break;\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n            iVar1 = iStack20;\n        } while (iVar3 != 0);\n    }\n    iStack20 = iVar1;\n    return CONCAT44(iStack20, iStack20);\n}\n",
        "token_count": 220
    },
    "004429d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004429d8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 0x4c) != 0) && (iVar2 = *(*(in_EAX + 0x4c) + 8),  -1 < iVar2 + -1)) {\n        do {\n            iVar1 = fcn.00416ec4();\n            if (param_2 == iVar1) {\n                *(param_2 + 4) = 0;\n                fcn.00416db4();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0044514c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044514c(uint8_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00446c18();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if (iVar3 < param_2) {\n                iVar2 = fcn.00446c28();\n                if (param_1 < *(iVar2 + 0x3f)) {\n                    fcn.00444254();\n                }\n            }\n            else {\n                iVar2 = fcn.00446c28();\n                if (*(iVar2 + 0x3f) <= param_1 && param_1 != *(iVar2 + 0x3f)) {\n                    iVar2 = fcn.00446c28();\n                    *(iVar2 + 0x3f) = param_1;\n                }\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 250
    },
    "00446ce0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446ce0(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00446c18();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00446c28();\n            (*arg_8h)();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00447140": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00447140(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.00446c18();\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.00446c28();\n            (**(*piVar2 + 0x40))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "004471d4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004471d4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    do {\n        iVar1 = in_EAX;\n        in_EAX = *(iVar1 + 100);\n    } while (in_EAX != 0);\n    return *(iVar1 + 0x70);\n}\n",
        "token_count": 74
    },
    "00448204": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448204(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    for (; (0 < param_2 && (in_EAX != 0)); in_EAX = *(in_EAX + 100)) {\n        param_2 = param_2 + -1;\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "0044971c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044971c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            piVar1 = fcn.00416ec4();\n            if (param_2 == *piVar1) {\n                puVar2 = fcn.00416ec4();\n                *puVar2 = 0;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "0044c3bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044c3bc(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != NULL) {\n        do {\n            iVar1 = sub.user32.dll_IsWindow(in_EAX[1]);\n            if (iVar1 != 0) {\n                sub.user32.dll_EnableWindow(in_EAX[1], 0xffffffff);\n            }\n            in_EAX = *in_EAX;\n            fcn.004026ec();\n        } while (in_EAX != NULL);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "0044c6cc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0044c6cc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    do {\n        iVar2 = in_EAX;\n        in_EAX = *(iVar2 + 0x30);\n    } while (in_EAX != 0);\n    cVar1 = fcn.004033dc();\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 109
    },
    "0044f5b4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0044f5b4(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uStack28;\n    \n    uStack28 = fcn.0043b420(2, 0);\n    iVar1 = (***0x46f924)();\n    iVar2 = fcn.00453028();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00453014();\n            if (iVar1 == *(iVar3 + 4)) {\n                uStack28 = fcn.00453014();\n                goto code_r0x0044f692;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = fcn.00453028();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00416ec4();\n            fcn.00403250();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    (**(**(*0x470bb8 + 0x58) + 8))();\n    (***0x46f98c)(0, 0, fcn.0044f584, *(*0x470bb8 + 0x58));\n    iVar2 = fcn.00453028();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00453014();\n            if (iVar1 == *(iVar3 + 4)) {\n                uStack28 = fcn.00453014();\n                break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\ncode_r0x0044f692:\n    return CONCAT44(uStack28, uStack28);\n}\n",
        "token_count": 402
    },
    "00450994": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450994(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (param_2 != 0) {\n        do {\n            iVar3 = param_2;\n            param_2 = *(iVar3 + 0x30);\n            if (param_2 == 0) break;\n            cVar1 = fcn.004033dc();\n        } while (cVar1 == '\\0');\n        if ((iVar3 != 0) && (param_1 != iVar3)) {\n            uVar2 = fcn.0043b420();\n            sub.user32.dll_SendMessageA(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00452618": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00452618(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(arg_8h + -4) + 0x2f0);\n    if ((iVar2 != 0) && (iVar2 = *(iVar2 + 8),  -1 < iVar2 + -1)) {\n        do {\n            fcn.00416ec4();\n            cVar1 = fcn.00440e48();\n            if (cVar1 != '\\0') {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 158
    },
    "00452bbc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452bbc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x452c82;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + -0x10))();\n    if (**(param_2 + 8) == 0xc) {\n        fcn.00434bb8();\n        fcn.00404078();\n        uVar1 = fcn.00404248();\n        fcn.00404448(uVar1);\n        fcn.00434bc8();\n        iVar2 = fcn.00404248();\n        if (0 < iVar2) {\n            iVar3 = 1;\n            do {\n                if ((*(iVar3 + -1) == '\\n') || (*(iVar3 + -1) == '\\r')) {\n                    fcn.004045d4();\n                    break;\n                }\n                iVar3 = iVar3 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00434c74();\n    }\n    else if (**(param_2 + 8) == 0xb00b) {\n        fcn.0044ea64();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x452c89;\n    uStack24 = 0x452c81;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 403
    },
    "004531c4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004531c4(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    puVar1 = *(in_EAX + 0x5c);\n    while (puVar1 != NULL) {\n        iVar2 = puVar1[1];\n        if ((((-0x12 < iVar2) && (iVar2 < -0xb)) || (iVar2 == -0x15)) || (0 < iVar2)) {\n            sub.user32.dll_DestroyCursor();\n        }\n        puVar1 = *puVar1;\n        fcn.004026ec();\n    }\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    if (iVar2 != *(in_EAX + 0x60)) {\n        sub.user32.dll_DestroyCursor(*(in_EAX + 0x60));\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "00455ac8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00455ac8(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    iVar2 = fcn.00453074();\n    if (-1 < iVar2 + -1) {\n        do {\n            piVar3 = fcn.00453060();\n            cVar1 = fcn.0043b724();\n            if (cVar1 != '\\0') {\n                uVar4 = fcn.0043b420();\n                iVar5 = sub.user32.dll_IsWindowVisible(uVar4);\n                if (iVar5 != 0) {\n                    uVar4 = fcn.0043b420();\n                    iVar5 = sub.user32.dll_IsWindowEnabled(uVar4);\n                    if (iVar5 != 0) {\n                        (**(*piVar3 + 0xdc))();\n                    }\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "00455cc4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00455cc4(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    \n    iVar1 = fcn.00453058();\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00453044();\n            fcn.00435dec(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0045a5b4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045a5b4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            cVar1 = fcn.004033dc();\n            if (cVar1 != '\\0') {\n                return in_EAX;\n            }\n            in_EAX = *(in_EAX + 4);\n        } while (in_EAX != 0);\n    }\n    return 0;\n}\n",
        "token_count": 108
    },
    "0045bdf8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045bdf8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    do {\n        if (param_2 == *(in_EAX + 0x24 + iVar1 * 4)) {\n            return 1;\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 4);\n    return 0;\n}\n",
        "token_count": 108
    },
    "0045d4d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045d4d8(void)\n\n{\n    char cVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    char *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_4h = NULL;\n    var_8h = 0;\n    uStack32 = 0x45d583;\n    puStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.0041ad0c();\n    while (cVar1 = fcn.00419da8(),  cVar1 == '\\0') {\n        fcn.0041b9ac();\n        fcn.0040458c();\n        puStack36 = &fcn.0045d4d8::var_8h;\n        fcn.00404248();\n        fcn.004044a8();\n        if (*var_4h == 'S') {\n            fcn.0045dcb0();\n        }\n        else if (*var_4h == 'T') {\n            fcn.0045dcc4();\n        }\n    }\n    fcn.0041ad14();\n    *in_FS_OFFSET = puStack36;\n    puStack28 = 0x45d58a;\n    uStack32 = 0x45d582;\n    fcn.00403fac();\n    return;\n}\n",
        "token_count": 323
    },
    "0045dbf0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045dbf0(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    for (uVar2 = 0; (uVar2 & 0xffff) < *(*(in_EAX + 0x9c) + 8); uVar2 = uVar2 + 1) {\n        iVar1 = fcn.00416ec4(param_2);\n        if ((param_1 == 0) || (param_1 == *(iVar1 + 8))) {\n            fcn.0045e0b8();\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "004615f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004615f0(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x4616e5;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x461618;\n    piVar1 = fcn.00403220();\n    puStack48 = 0x461629;\n    fcn.0040519c();\n    uStack52 = 0x4616aa;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    uVar2 = (***0x46f87c)(param_2, 0);\n    iVar3 = (***0x46fb10)();\n    if (iVar3 != 0) {\n        fcn.00404180();\n        (**(*piVar1 + 0x38))();\n        fcn.004051d8();\n        for (iVar3 = 0; *(iVar3 * 4) != 0; iVar3 = iVar3 + 1) {\n            fcn.00404180();\n            (**(*piVar1 + 0x38))();\n        }\n    }\n    *in_FS_OFFSET = uVar2 & 0xffff;\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x4616ec;\n    uStack52 = 0x4616d6;\n    fcn.00403fac();\n    uStack52 = 0x4616e4;\n    fcn.0040519c();\n    return;\n}\n",
        "token_count": 471
    },
    "004627dc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.004627dc(void)\n\n{\n    uint in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *in_FS_OFFSET;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint *arg_8h;\n    uint *var_38h;\n    uint var_34h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint32_t uStack36;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = 0xd;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x462804;\n    var_4h = in_EAX;\n    fcn.00404924();\n    var_1ch = 0x462a98;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_18h = &stack0xfffffffc;\n    fcn.00404020();\n    var_2ch = 0x462835;\n    fcn.004620b8(&fcn.004627dc::var_30h, 1);\n    var_2ch = 0x462840;\n    fcn.00404020();\n    var_2ch = 1;\n    var_30h = &fcn.004627dc::var_34h;\n    var_34h = 0x462855;\n    fcn.004620b8(var_30h, 1);\n    var_34h = 0x462860;\n    fcn.00404020();\n    var_34h = 1;\n    var_38h = &fcn.004627dc::var_38h;\n    fcn.004620b8(var_38h, 1);\n    fcn.00404020();\n    fcn.00404020();\n    var_40h = 0x4628ce;\n    var_44h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004627dc::var_44h;\n    var_48h = 0x4628a1;\n    var_2ch = fcn.00408110();\n    var_48h = 0x4628ab;\n    uVar1 = fcn.00408110();\n    var_48h = 0x4628b6;\n    uVar2 = fcn.00408110();\n    var_48h = 0x4628c1;\n    uStack36 = fcn.00408110();\n    *in_FS_OFFSET = var_44h;\n    if (0xff < var_2ch) {\n        arg_8h = &fcn.004627dc::var_4ch;\n        var_40h = 0x46293c;\n        fcn.00405d0c();\n        var_48h = var_4h;\n        var_44h = CONCAT31(var_44h._1_3_, 0xb);\n        var_40h = 0x462955;\n        fcn.00408ca4(arg_8h);\n        var_40h = 0x462964;\n        fcn.0040b564();\n        var_40h = 0x462969;\n        fcn.004039c4();\n    }\n    if (0xff < uVar1) {\n        var_40h = &fcn.004627dc::var_54h;\n        var_44h = 0x462984;\n        fcn.00405d0c();\n        var_48h = var_4h;\n        var_44h = 0x46299d;\n        fcn.00408ca4(var_40h);\n        var_44h = 0x4629ac;\n        fcn.0040b564();\n        var_44h = 0x4629b1;\n        fcn.004039c4();\n    }\n    if (0xff < uVar2) {\n        var_40h = &fcn.004627dc::var_5ch;\n        var_44h = 0x4629cc;\n        fcn.00405d0c();\n        var_48h = var_4h;\n        var_44h = 0x4629e5;\n        fcn.00408ca4(var_40h);\n        var_44h = 0x4629f4;\n        fcn.0040b564();\n        var_44h = 0x4629f9;\n        fcn.004039c4();\n    }\n    uVar1 = uStack36 - 0x100;\n    if (0xff < uStack36) {\n        var_40h = &fcn.004627dc::var_64h;\n        var_44h = 0x462a14;\n        fcn.00405d0c();\n        var_48h = var_4h;\n        var_44h = 0x462a2d;\n        fcn.00408ca4(var_40h);\n        var_44h = 0x462a3c;\n        fcn.0040b564();\n        var_44h = 0x462a41;\n        uVar1 = fcn.004039c4();\n    }\n    var_40h = uVar1 & 0xffffff00 | uStack36 & 0xff;\n    var_44h = 0x462a52;\n    var_8h = fcn.004627c0(var_40h);\n    *in_FS_OFFSET = var_40h;\n    var_38h = 0x462a9f;\n    fcn.00403fac();\n    fcn.00403fac();\n    fcn.00404a04();\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 1513
    },
    "00408408": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nulong fcn.00408408(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_WriteFile_1();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 87
    },
    "00426f14": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.00426f14(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x427078);\n    if (iVar1 != 0) {\n        *0x470970 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x427088);\n        *0x470974 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42709c);\n        *0x470968 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4270b0);\n        *0x47096c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4270c8);\n        *0x470944 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4270e0);\n        if (*0x470944 == 0) {\n            *0x470944 = 0x4066c4;\n        }\n        *0x470948 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x4270f8);\n        if (*0x470948 == 0) {\n            *0x470948 = 0x406a64;\n        }\n        *0x47094c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x427110);\n        if (*0x47094c == 0) {\n            *0x47094c = 0x406804;\n        }\n        *0x470950 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x427128);\n        if (*0x470950 == 0) {\n            *0x470950 = 0x4067f4;\n        }\n        *0x470954 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x427140);\n        if (*0x470954 == 0) {\n            *0x470954 = 0x4067fc;\n        }\n        *0x470958 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x427154);\n        if (*0x470958 == 0) {\n            *0x470958 = 0x406a1c;\n        }\n        *0x47095c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x427168);\n        if (*0x47095c == 0) {\n            *0x47095c = 0x406a14;\n        }\n        *0x470960 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x427180);\n        if (*0x470960 == 0) {\n            *0x470960 = 0x406a24;\n        }\n    }\n    return;\n}\n",
        "token_count": 598
    },
    "00456844": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00456844(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x456868);\n    if (iVar1 != 0) {\n        *0x464c50 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x456874);\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00457bf4": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.00457bf4(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x457c68);\n    if (iVar1 != 0) {\n        *0x464d70 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x457c74);\n        *0x464d74 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x457c88);\n        *0x464d78 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x457c98);\n        *0x464d7c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x457cb0);\n        *0x464d80 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x457cc8);\n        *0x464d84 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x457ce0);\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "0040ade8": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040ade8(uint32_t param_1)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (0 < uVar1) {\n        param_1 = uVar1 & 0xffffff00 | in_EAX & 0xff;\n    }\n    return CONCAT44(in_EAX, param_1);\n}\n",
        "token_count": 99
    },
    "00405f78": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nint32_t fcn.00405f78(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    \n    if (*0x470664 == '\\0') {\n        return *(*(in_FS_OFFSET + 0x2c) + *0x46409c * 4);\n    }\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x46409c);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    fcn.00405f34();\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x46409c);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return *0x470670;\n}\n",
        "token_count": 157
    },
    "004083dc": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nulong fcn.004083dc(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_ReadFile();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 85
    },
    "00419474": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419474(uint lpType)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint lpName;\n    \n    iVar1 = sub.kernel32.dll_FindResourceA();\n    *(in_EAX + 0x10) = iVar1;\n    if (iVar1 == 0) {\n        fcn.00419404(&stack0xfffffffc);\n    }\n    iVar1 = sub.kernel32.dll_LoadResource();\n    *(in_EAX + 0x14) = iVar1;\n    if (iVar1 == 0) {\n        fcn.00419404(&stack0xfffffffc);\n    }\n    uVar2 = sub.kernel32.dll_SizeofResource();\n    sub.kernel32.dll_LockResource(*(in_EAX + 0x14), uVar2);\n    fcn.0041919c();\n    return;\n}\n",
        "token_count": 193
    },
    "0042f384": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.0042f384(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xc) = 0;\n    *(in_EAX + 0xd) = 0;\n    *(in_EAX + 4) = 0;\n    sub.user32.dll_EnumWindows(fcn.0042f2d0);\n    return;\n}\n",
        "token_count": 84
    },
    "0044c5d4": {
        "rules": [
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nuint32_t fcn.0044c5d4(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint32_t unaff_EBX;\n    uint32_t uVar2;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *0x44c60c;\n    iVar1 = sub.user32.dll_GetKeyState(0x10);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 1;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x11);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 0x20000000) != 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 192
    },
    "00461f64": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.00461f64(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x461fc3;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack24;\n    fcn.004045d4();\n    uVar1 = fcn.00404448();\n    uVar1 = fcn.00404248(uVar1);\n    sub.kernel32.dll_GetTempPathA();\n    fcn.004045d4();\n    fcn.00461e6c();\n    *in_FS_OFFSET = uVar1;\n    uStack24 = 0x461fca;\n    fcn.00403f88();\n    return;\n}\n",
        "token_count": 196
    }
}